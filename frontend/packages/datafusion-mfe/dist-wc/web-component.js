var Z4 = Object.defineProperty;
var sL = (e) => {
  throw TypeError(e);
};
var e3 = (e, t, n) => t in e ? Z4(e, t, { enumerable: !0, configurable: !0, writable: !0, value: n }) : e[t] = n;
var Mu = (e, t, n) => e3(e, typeof t != "symbol" ? t + "" : t, n), dO = (e, t, n) => t.has(e) || sL("Cannot " + n);
var Xe = (e, t, n) => (dO(e, t, "read from private field"), n ? n.call(e) : t.get(e)), or = (e, t, n) => t.has(e) ? sL("Cannot add the same private member more than once") : t instanceof WeakSet ? t.add(e) : t.set(e, n), wn = (e, t, n, i) => (dO(e, t, "write to private field"), i ? i.call(e, n) : t.set(e, n), n), oa = (e, t, n) => (dO(e, t, "access private method"), n);
var Vx = (e, t, n, i) => ({
  set _(s) {
    wn(e, t, s, n);
  },
  get _() {
    return Xe(e, t, i);
  }
});
function t3(e, t) {
  for (var n = 0; n < t.length; n++) {
    const i = t[n];
    if (typeof i != "string" && !Array.isArray(i)) {
      for (const s in i)
        if (s !== "default" && !(s in e)) {
          const u = Object.getOwnPropertyDescriptor(i, s);
          u && Object.defineProperty(e, s, u.get ? u : {
            enumerable: !0,
            get: () => i[s]
          });
        }
    }
  }
  return Object.freeze(Object.defineProperty(e, Symbol.toStringTag, { value: "Module" }));
}
function nP(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
var JO = { exports: {} }, Sb = {}, ZO = { exports: {} }, Wn = {};
/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var lL;
function n3() {
  if (lL) return Wn;
  lL = 1;
  var e = Symbol.for("react.element"), t = Symbol.for("react.portal"), n = Symbol.for("react.fragment"), i = Symbol.for("react.strict_mode"), s = Symbol.for("react.profiler"), u = Symbol.for("react.provider"), d = Symbol.for("react.context"), p = Symbol.for("react.forward_ref"), m = Symbol.for("react.suspense"), v = Symbol.for("react.memo"), y = Symbol.for("react.lazy"), C = Symbol.iterator;
  function S(j) {
    return j === null || typeof j != "object" ? null : (j = C && j[C] || j["@@iterator"], typeof j == "function" ? j : null);
  }
  var R = { isMounted: function() {
    return !1;
  }, enqueueForceUpdate: function() {
  }, enqueueReplaceState: function() {
  }, enqueueSetState: function() {
  } }, O = Object.assign, E = {};
  function k(j, ie, fe) {
    this.props = j, this.context = ie, this.refs = E, this.updater = fe || R;
  }
  k.prototype.isReactComponent = {}, k.prototype.setState = function(j, ie) {
    if (typeof j != "object" && typeof j != "function" && j != null) throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
    this.updater.enqueueSetState(this, j, ie, "setState");
  }, k.prototype.forceUpdate = function(j) {
    this.updater.enqueueForceUpdate(this, j, "forceUpdate");
  };
  function F() {
  }
  F.prototype = k.prototype;
  function _(j, ie, fe) {
    this.props = j, this.context = ie, this.refs = E, this.updater = fe || R;
  }
  var L = _.prototype = new F();
  L.constructor = _, O(L, k.prototype), L.isPureReactComponent = !0;
  var M = Array.isArray, D = Object.prototype.hasOwnProperty, H = { current: null }, K = { key: !0, ref: !0, __self: !0, __source: !0 };
  function Q(j, ie, fe) {
    var ce, me = {}, ge = null, de = null;
    if (ie != null) for (ce in ie.ref !== void 0 && (de = ie.ref), ie.key !== void 0 && (ge = "" + ie.key), ie) D.call(ie, ce) && !K.hasOwnProperty(ce) && (me[ce] = ie[ce]);
    var pe = arguments.length - 2;
    if (pe === 1) me.children = fe;
    else if (1 < pe) {
      for (var be = Array(pe), Ce = 0; Ce < pe; Ce++) be[Ce] = arguments[Ce + 2];
      me.children = be;
    }
    if (j && j.defaultProps) for (ce in pe = j.defaultProps, pe) me[ce] === void 0 && (me[ce] = pe[ce]);
    return { $$typeof: e, type: j, key: ge, ref: de, props: me, _owner: H.current };
  }
  function z(j, ie) {
    return { $$typeof: e, type: j.type, key: ie, ref: j.ref, props: j.props, _owner: j._owner };
  }
  function I(j) {
    return typeof j == "object" && j !== null && j.$$typeof === e;
  }
  function G(j) {
    var ie = { "=": "=0", ":": "=2" };
    return "$" + j.replace(/[=:]/g, function(fe) {
      return ie[fe];
    });
  }
  var W = /\/+/g;
  function B(j, ie) {
    return typeof j == "object" && j !== null && j.key != null ? G("" + j.key) : ie.toString(36);
  }
  function ee(j, ie, fe, ce, me) {
    var ge = typeof j;
    (ge === "undefined" || ge === "boolean") && (j = null);
    var de = !1;
    if (j === null) de = !0;
    else switch (ge) {
      case "string":
      case "number":
        de = !0;
        break;
      case "object":
        switch (j.$$typeof) {
          case e:
          case t:
            de = !0;
        }
    }
    if (de) return de = j, me = me(de), j = ce === "" ? "." + B(de, 0) : ce, M(me) ? (fe = "", j != null && (fe = j.replace(W, "$&/") + "/"), ee(me, ie, fe, "", function(Ce) {
      return Ce;
    })) : me != null && (I(me) && (me = z(me, fe + (!me.key || de && de.key === me.key ? "" : ("" + me.key).replace(W, "$&/") + "/") + j)), ie.push(me)), 1;
    if (de = 0, ce = ce === "" ? "." : ce + ":", M(j)) for (var pe = 0; pe < j.length; pe++) {
      ge = j[pe];
      var be = ce + B(ge, pe);
      de += ee(ge, ie, fe, be, me);
    }
    else if (be = S(j), typeof be == "function") for (j = be.call(j), pe = 0; !(ge = j.next()).done; ) ge = ge.value, be = ce + B(ge, pe++), de += ee(ge, ie, fe, be, me);
    else if (ge === "object") throw ie = String(j), Error("Objects are not valid as a React child (found: " + (ie === "[object Object]" ? "object with keys {" + Object.keys(j).join(", ") + "}" : ie) + "). If you meant to render a collection of children, use an array instead.");
    return de;
  }
  function U(j, ie, fe) {
    if (j == null) return j;
    var ce = [], me = 0;
    return ee(j, ce, "", "", function(ge) {
      return ie.call(fe, ge, me++);
    }), ce;
  }
  function q(j) {
    if (j._status === -1) {
      var ie = j._result;
      ie = ie(), ie.then(function(fe) {
        (j._status === 0 || j._status === -1) && (j._status = 1, j._result = fe);
      }, function(fe) {
        (j._status === 0 || j._status === -1) && (j._status = 2, j._result = fe);
      }), j._status === -1 && (j._status = 0, j._result = ie);
    }
    if (j._status === 1) return j._result.default;
    throw j._result;
  }
  var Y = { current: null }, ne = { transition: null }, re = { ReactCurrentDispatcher: Y, ReactCurrentBatchConfig: ne, ReactCurrentOwner: H };
  function X() {
    throw Error("act(...) is not supported in production builds of React.");
  }
  return Wn.Children = { map: U, forEach: function(j, ie, fe) {
    U(j, function() {
      ie.apply(this, arguments);
    }, fe);
  }, count: function(j) {
    var ie = 0;
    return U(j, function() {
      ie++;
    }), ie;
  }, toArray: function(j) {
    return U(j, function(ie) {
      return ie;
    }) || [];
  }, only: function(j) {
    if (!I(j)) throw Error("React.Children.only expected to receive a single React element child.");
    return j;
  } }, Wn.Component = k, Wn.Fragment = n, Wn.Profiler = s, Wn.PureComponent = _, Wn.StrictMode = i, Wn.Suspense = m, Wn.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = re, Wn.act = X, Wn.cloneElement = function(j, ie, fe) {
    if (j == null) throw Error("React.cloneElement(...): The argument must be a React element, but you passed " + j + ".");
    var ce = O({}, j.props), me = j.key, ge = j.ref, de = j._owner;
    if (ie != null) {
      if (ie.ref !== void 0 && (ge = ie.ref, de = H.current), ie.key !== void 0 && (me = "" + ie.key), j.type && j.type.defaultProps) var pe = j.type.defaultProps;
      for (be in ie) D.call(ie, be) && !K.hasOwnProperty(be) && (ce[be] = ie[be] === void 0 && pe !== void 0 ? pe[be] : ie[be]);
    }
    var be = arguments.length - 2;
    if (be === 1) ce.children = fe;
    else if (1 < be) {
      pe = Array(be);
      for (var Ce = 0; Ce < be; Ce++) pe[Ce] = arguments[Ce + 2];
      ce.children = pe;
    }
    return { $$typeof: e, type: j.type, key: me, ref: ge, props: ce, _owner: de };
  }, Wn.createContext = function(j) {
    return j = { $$typeof: d, _currentValue: j, _currentValue2: j, _threadCount: 0, Provider: null, Consumer: null, _defaultValue: null, _globalName: null }, j.Provider = { $$typeof: u, _context: j }, j.Consumer = j;
  }, Wn.createElement = Q, Wn.createFactory = function(j) {
    var ie = Q.bind(null, j);
    return ie.type = j, ie;
  }, Wn.createRef = function() {
    return { current: null };
  }, Wn.forwardRef = function(j) {
    return { $$typeof: p, render: j };
  }, Wn.isValidElement = I, Wn.lazy = function(j) {
    return { $$typeof: y, _payload: { _status: -1, _result: j }, _init: q };
  }, Wn.memo = function(j, ie) {
    return { $$typeof: v, type: j, compare: ie === void 0 ? null : ie };
  }, Wn.startTransition = function(j) {
    var ie = ne.transition;
    ne.transition = {};
    try {
      j();
    } finally {
      ne.transition = ie;
    }
  }, Wn.unstable_act = X, Wn.useCallback = function(j, ie) {
    return Y.current.useCallback(j, ie);
  }, Wn.useContext = function(j) {
    return Y.current.useContext(j);
  }, Wn.useDebugValue = function() {
  }, Wn.useDeferredValue = function(j) {
    return Y.current.useDeferredValue(j);
  }, Wn.useEffect = function(j, ie) {
    return Y.current.useEffect(j, ie);
  }, Wn.useId = function() {
    return Y.current.useId();
  }, Wn.useImperativeHandle = function(j, ie, fe) {
    return Y.current.useImperativeHandle(j, ie, fe);
  }, Wn.useInsertionEffect = function(j, ie) {
    return Y.current.useInsertionEffect(j, ie);
  }, Wn.useLayoutEffect = function(j, ie) {
    return Y.current.useLayoutEffect(j, ie);
  }, Wn.useMemo = function(j, ie) {
    return Y.current.useMemo(j, ie);
  }, Wn.useReducer = function(j, ie, fe) {
    return Y.current.useReducer(j, ie, fe);
  }, Wn.useRef = function(j) {
    return Y.current.useRef(j);
  }, Wn.useState = function(j) {
    return Y.current.useState(j);
  }, Wn.useSyncExternalStore = function(j, ie, fe) {
    return Y.current.useSyncExternalStore(j, ie, fe);
  }, Wn.useTransition = function() {
    return Y.current.useTransition();
  }, Wn.version = "18.3.1", Wn;
}
var _b = { exports: {} };
/**
 * @license React
 * react.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
_b.exports;
var uL;
function r3() {
  return uL || (uL = 1, function(e, t) {
    process.env.NODE_ENV !== "production" && function() {
      typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
      var n = "18.3.1", i = Symbol.for("react.element"), s = Symbol.for("react.portal"), u = Symbol.for("react.fragment"), d = Symbol.for("react.strict_mode"), p = Symbol.for("react.profiler"), m = Symbol.for("react.provider"), v = Symbol.for("react.context"), y = Symbol.for("react.forward_ref"), C = Symbol.for("react.suspense"), S = Symbol.for("react.suspense_list"), R = Symbol.for("react.memo"), O = Symbol.for("react.lazy"), E = Symbol.for("react.offscreen"), k = Symbol.iterator, F = "@@iterator";
      function _(te) {
        if (te === null || typeof te != "object")
          return null;
        var ye = k && te[k] || te[F];
        return typeof ye == "function" ? ye : null;
      }
      var L = {
        /**
         * @internal
         * @type {ReactComponent}
         */
        current: null
      }, M = {
        transition: null
      }, D = {
        current: null,
        // Used to reproduce behavior of `batchedUpdates` in legacy mode.
        isBatchingLegacy: !1,
        didScheduleLegacyUpdate: !1
      }, H = {
        /**
         * @internal
         * @type {ReactComponent}
         */
        current: null
      }, K = {}, Q = null;
      function z(te) {
        Q = te;
      }
      K.setExtraStackFrame = function(te) {
        Q = te;
      }, K.getCurrentStack = null, K.getStackAddendum = function() {
        var te = "";
        Q && (te += Q);
        var ye = K.getCurrentStack;
        return ye && (te += ye() || ""), te;
      };
      var I = !1, G = !1, W = !1, B = !1, ee = !1, U = {
        ReactCurrentDispatcher: L,
        ReactCurrentBatchConfig: M,
        ReactCurrentOwner: H
      };
      U.ReactDebugCurrentFrame = K, U.ReactCurrentActQueue = D;
      function q(te) {
        {
          for (var ye = arguments.length, $e = new Array(ye > 1 ? ye - 1 : 0), Ve = 1; Ve < ye; Ve++)
            $e[Ve - 1] = arguments[Ve];
          ne("warn", te, $e);
        }
      }
      function Y(te) {
        {
          for (var ye = arguments.length, $e = new Array(ye > 1 ? ye - 1 : 0), Ve = 1; Ve < ye; Ve++)
            $e[Ve - 1] = arguments[Ve];
          ne("error", te, $e);
        }
      }
      function ne(te, ye, $e) {
        {
          var Ve = U.ReactDebugCurrentFrame, mt = Ve.getStackAddendum();
          mt !== "" && (ye += "%s", $e = $e.concat([mt]));
          var sn = $e.map(function(Pt) {
            return String(Pt);
          });
          sn.unshift("Warning: " + ye), Function.prototype.apply.call(console[te], console, sn);
        }
      }
      var re = {};
      function X(te, ye) {
        {
          var $e = te.constructor, Ve = $e && ($e.displayName || $e.name) || "ReactClass", mt = Ve + "." + ye;
          if (re[mt])
            return;
          Y("Can't call %s on a component that is not yet mounted. This is a no-op, but it might indicate a bug in your application. Instead, assign to `this.state` directly or define a `state = {};` class property with the desired state in the %s component.", ye, Ve), re[mt] = !0;
        }
      }
      var j = {
        /**
         * Checks whether or not this composite component is mounted.
         * @param {ReactClass} publicInstance The instance we want to test.
         * @return {boolean} True if mounted, false otherwise.
         * @protected
         * @final
         */
        isMounted: function(te) {
          return !1;
        },
        /**
         * Forces an update. This should only be invoked when it is known with
         * certainty that we are **not** in a DOM transaction.
         *
         * You may want to call this when you know that some deeper aspect of the
         * component's state has changed but `setState` was not called.
         *
         * This will not invoke `shouldComponentUpdate`, but it will invoke
         * `componentWillUpdate` and `componentDidUpdate`.
         *
         * @param {ReactClass} publicInstance The instance that should rerender.
         * @param {?function} callback Called after component is updated.
         * @param {?string} callerName name of the calling function in the public API.
         * @internal
         */
        enqueueForceUpdate: function(te, ye, $e) {
          X(te, "forceUpdate");
        },
        /**
         * Replaces all of the state. Always use this or `setState` to mutate state.
         * You should treat `this.state` as immutable.
         *
         * There is no guarantee that `this.state` will be immediately updated, so
         * accessing `this.state` after calling this method may return the old value.
         *
         * @param {ReactClass} publicInstance The instance that should rerender.
         * @param {object} completeState Next state.
         * @param {?function} callback Called after component is updated.
         * @param {?string} callerName name of the calling function in the public API.
         * @internal
         */
        enqueueReplaceState: function(te, ye, $e, Ve) {
          X(te, "replaceState");
        },
        /**
         * Sets a subset of the state. This only exists because _pendingState is
         * internal. This provides a merging strategy that is not available to deep
         * properties which is confusing. TODO: Expose pendingState or don't use it
         * during the merge.
         *
         * @param {ReactClass} publicInstance The instance that should rerender.
         * @param {object} partialState Next partial state to be merged with state.
         * @param {?function} callback Called after component is updated.
         * @param {?string} Name of the calling function in the public API.
         * @internal
         */
        enqueueSetState: function(te, ye, $e, Ve) {
          X(te, "setState");
        }
      }, ie = Object.assign, fe = {};
      Object.freeze(fe);
      function ce(te, ye, $e) {
        this.props = te, this.context = ye, this.refs = fe, this.updater = $e || j;
      }
      ce.prototype.isReactComponent = {}, ce.prototype.setState = function(te, ye) {
        if (typeof te != "object" && typeof te != "function" && te != null)
          throw new Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
        this.updater.enqueueSetState(this, te, ye, "setState");
      }, ce.prototype.forceUpdate = function(te) {
        this.updater.enqueueForceUpdate(this, te, "forceUpdate");
      };
      {
        var me = {
          isMounted: ["isMounted", "Instead, make sure to clean up subscriptions and pending requests in componentWillUnmount to prevent memory leaks."],
          replaceState: ["replaceState", "Refactor your code to use setState instead (see https://github.com/facebook/react/issues/3236)."]
        }, ge = function(te, ye) {
          Object.defineProperty(ce.prototype, te, {
            get: function() {
              q("%s(...) is deprecated in plain JavaScript React classes. %s", ye[0], ye[1]);
            }
          });
        };
        for (var de in me)
          me.hasOwnProperty(de) && ge(de, me[de]);
      }
      function pe() {
      }
      pe.prototype = ce.prototype;
      function be(te, ye, $e) {
        this.props = te, this.context = ye, this.refs = fe, this.updater = $e || j;
      }
      var Ce = be.prototype = new pe();
      Ce.constructor = be, ie(Ce, ce.prototype), Ce.isPureReactComponent = !0;
      function Re() {
        var te = {
          current: null
        };
        return Object.seal(te), te;
      }
      var ue = Array.isArray;
      function we(te) {
        return ue(te);
      }
      function _e(te) {
        {
          var ye = typeof Symbol == "function" && Symbol.toStringTag, $e = ye && te[Symbol.toStringTag] || te.constructor.name || "Object";
          return $e;
        }
      }
      function He(te) {
        try {
          return et(te), !1;
        } catch {
          return !0;
        }
      }
      function et(te) {
        return "" + te;
      }
      function Ne(te) {
        if (He(te))
          return Y("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", _e(te)), et(te);
      }
      function rt(te, ye, $e) {
        var Ve = te.displayName;
        if (Ve)
          return Ve;
        var mt = ye.displayName || ye.name || "";
        return mt !== "" ? $e + "(" + mt + ")" : $e;
      }
      function it(te) {
        return te.displayName || "Context";
      }
      function wt(te) {
        if (te == null)
          return null;
        if (typeof te.tag == "number" && Y("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), typeof te == "function")
          return te.displayName || te.name || null;
        if (typeof te == "string")
          return te;
        switch (te) {
          case u:
            return "Fragment";
          case s:
            return "Portal";
          case p:
            return "Profiler";
          case d:
            return "StrictMode";
          case C:
            return "Suspense";
          case S:
            return "SuspenseList";
        }
        if (typeof te == "object")
          switch (te.$$typeof) {
            case v:
              var ye = te;
              return it(ye) + ".Consumer";
            case m:
              var $e = te;
              return it($e._context) + ".Provider";
            case y:
              return rt(te, te.render, "ForwardRef");
            case R:
              var Ve = te.displayName || null;
              return Ve !== null ? Ve : wt(te.type) || "Memo";
            case O: {
              var mt = te, sn = mt._payload, Pt = mt._init;
              try {
                return wt(Pt(sn));
              } catch {
                return null;
              }
            }
          }
        return null;
      }
      var gt = Object.prototype.hasOwnProperty, ot = {
        key: !0,
        ref: !0,
        __self: !0,
        __source: !0
      }, jt, ct, Tt;
      Tt = {};
      function Rt(te) {
        if (gt.call(te, "ref")) {
          var ye = Object.getOwnPropertyDescriptor(te, "ref").get;
          if (ye && ye.isReactWarning)
            return !1;
        }
        return te.ref !== void 0;
      }
      function Lt(te) {
        if (gt.call(te, "key")) {
          var ye = Object.getOwnPropertyDescriptor(te, "key").get;
          if (ye && ye.isReactWarning)
            return !1;
        }
        return te.key !== void 0;
      }
      function vt(te, ye) {
        var $e = function() {
          jt || (jt = !0, Y("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", ye));
        };
        $e.isReactWarning = !0, Object.defineProperty(te, "key", {
          get: $e,
          configurable: !0
        });
      }
      function Qe(te, ye) {
        var $e = function() {
          ct || (ct = !0, Y("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", ye));
        };
        $e.isReactWarning = !0, Object.defineProperty(te, "ref", {
          get: $e,
          configurable: !0
        });
      }
      function Oe(te) {
        if (typeof te.ref == "string" && H.current && te.__self && H.current.stateNode !== te.__self) {
          var ye = wt(H.current.type);
          Tt[ye] || (Y('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', ye, te.ref), Tt[ye] = !0);
        }
      }
      var Me = function(te, ye, $e, Ve, mt, sn, Pt) {
        var cn = {
          // This tag allows us to uniquely identify this as a React Element
          $$typeof: i,
          // Built-in properties that belong on the element
          type: te,
          key: ye,
          ref: $e,
          props: Pt,
          // Record the component responsible for creating this element.
          _owner: sn
        };
        return cn._store = {}, Object.defineProperty(cn._store, "validated", {
          configurable: !1,
          enumerable: !1,
          writable: !0,
          value: !1
        }), Object.defineProperty(cn, "_self", {
          configurable: !1,
          enumerable: !1,
          writable: !1,
          value: Ve
        }), Object.defineProperty(cn, "_source", {
          configurable: !1,
          enumerable: !1,
          writable: !1,
          value: mt
        }), Object.freeze && (Object.freeze(cn.props), Object.freeze(cn)), cn;
      };
      function ht(te, ye, $e) {
        var Ve, mt = {}, sn = null, Pt = null, cn = null, An = null;
        if (ye != null) {
          Rt(ye) && (Pt = ye.ref, Oe(ye)), Lt(ye) && (Ne(ye.key), sn = "" + ye.key), cn = ye.__self === void 0 ? null : ye.__self, An = ye.__source === void 0 ? null : ye.__source;
          for (Ve in ye)
            gt.call(ye, Ve) && !ot.hasOwnProperty(Ve) && (mt[Ve] = ye[Ve]);
        }
        var er = arguments.length - 2;
        if (er === 1)
          mt.children = $e;
        else if (er > 1) {
          for (var $r = Array(er), xr = 0; xr < er; xr++)
            $r[xr] = arguments[xr + 2];
          Object.freeze && Object.freeze($r), mt.children = $r;
        }
        if (te && te.defaultProps) {
          var Dn = te.defaultProps;
          for (Ve in Dn)
            mt[Ve] === void 0 && (mt[Ve] = Dn[Ve]);
        }
        if (sn || Pt) {
          var Er = typeof te == "function" ? te.displayName || te.name || "Unknown" : te;
          sn && vt(mt, Er), Pt && Qe(mt, Er);
        }
        return Me(te, sn, Pt, cn, An, H.current, mt);
      }
      function xt(te, ye) {
        var $e = Me(te.type, ye, te.ref, te._self, te._source, te._owner, te.props);
        return $e;
      }
      function zt(te, ye, $e) {
        if (te == null)
          throw new Error("React.cloneElement(...): The argument must be a React element, but you passed " + te + ".");
        var Ve, mt = ie({}, te.props), sn = te.key, Pt = te.ref, cn = te._self, An = te._source, er = te._owner;
        if (ye != null) {
          Rt(ye) && (Pt = ye.ref, er = H.current), Lt(ye) && (Ne(ye.key), sn = "" + ye.key);
          var $r;
          te.type && te.type.defaultProps && ($r = te.type.defaultProps);
          for (Ve in ye)
            gt.call(ye, Ve) && !ot.hasOwnProperty(Ve) && (ye[Ve] === void 0 && $r !== void 0 ? mt[Ve] = $r[Ve] : mt[Ve] = ye[Ve]);
        }
        var xr = arguments.length - 2;
        if (xr === 1)
          mt.children = $e;
        else if (xr > 1) {
          for (var Dn = Array(xr), Er = 0; Er < xr; Er++)
            Dn[Er] = arguments[Er + 2];
          mt.children = Dn;
        }
        return Me(te.type, sn, Pt, cn, An, er, mt);
      }
      function bt(te) {
        return typeof te == "object" && te !== null && te.$$typeof === i;
      }
      var Ge = ".", Et = ":";
      function At(te) {
        var ye = /[=:]/g, $e = {
          "=": "=0",
          ":": "=2"
        }, Ve = te.replace(ye, function(mt) {
          return $e[mt];
        });
        return "$" + Ve;
      }
      var pn = !1, fn = /\/+/g;
      function mr(te) {
        return te.replace(fn, "$&/");
      }
      function qn(te, ye) {
        return typeof te == "object" && te !== null && te.key != null ? (Ne(te.key), At("" + te.key)) : ye.toString(36);
      }
      function Nr(te, ye, $e, Ve, mt) {
        var sn = typeof te;
        (sn === "undefined" || sn === "boolean") && (te = null);
        var Pt = !1;
        if (te === null)
          Pt = !0;
        else
          switch (sn) {
            case "string":
            case "number":
              Pt = !0;
              break;
            case "object":
              switch (te.$$typeof) {
                case i:
                case s:
                  Pt = !0;
              }
          }
        if (Pt) {
          var cn = te, An = mt(cn), er = Ve === "" ? Ge + qn(cn, 0) : Ve;
          if (we(An)) {
            var $r = "";
            er != null && ($r = mr(er) + "/"), Nr(An, ye, $r, "", function(bv) {
              return bv;
            });
          } else An != null && (bt(An) && (An.key && (!cn || cn.key !== An.key) && Ne(An.key), An = xt(
            An,
            // Keep both the (mapped) and old keys if they differ, just as
            // traverseAllChildren used to do for objects as children
            $e + // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key
            (An.key && (!cn || cn.key !== An.key) ? (
              // $FlowFixMe Flow incorrectly thinks existing element's key can be a number
              // eslint-disable-next-line react-internal/safe-string-coercion
              mr("" + An.key) + "/"
            ) : "") + er
          )), ye.push(An));
          return 1;
        }
        var xr, Dn, Er = 0, Xr = Ve === "" ? Ge : Ve + Et;
        if (we(te))
          for (var Zl = 0; Zl < te.length; Zl++)
            xr = te[Zl], Dn = Xr + qn(xr, Zl), Er += Nr(xr, ye, $e, Dn, mt);
        else {
          var Nf = _(te);
          if (typeof Nf == "function") {
            var dl = te;
            Nf === dl.entries && (pn || q("Using Maps as children is not supported. Use an array of keyed ReactElements instead."), pn = !0);
            for (var Lf = Nf.call(dl), nc, yv = 0; !(nc = Lf.next()).done; )
              xr = nc.value, Dn = Xr + qn(xr, yv++), Er += Nr(xr, ye, $e, Dn, mt);
          } else if (sn === "object") {
            var Eh = String(te);
            throw new Error("Objects are not valid as a React child (found: " + (Eh === "[object Object]" ? "object with keys {" + Object.keys(te).join(", ") + "}" : Eh) + "). If you meant to render a collection of children, use an array instead.");
          }
        }
        return Er;
      }
      function gr(te, ye, $e) {
        if (te == null)
          return te;
        var Ve = [], mt = 0;
        return Nr(te, Ve, "", "", function(sn) {
          return ye.call($e, sn, mt++);
        }), Ve;
      }
      function Po(te) {
        var ye = 0;
        return gr(te, function() {
          ye++;
        }), ye;
      }
      function Mo(te, ye, $e) {
        gr(te, function() {
          ye.apply(this, arguments);
        }, $e);
      }
      function Ut(te) {
        return gr(te, function(ye) {
          return ye;
        }) || [];
      }
      function fr(te) {
        if (!bt(te))
          throw new Error("React.Children.only expected to receive a single React element child.");
        return te;
      }
      function Ct(te) {
        var ye = {
          $$typeof: v,
          // As a workaround to support multiple concurrent renderers, we categorize
          // some renderers as primary and others as secondary. We only expect
          // there to be two concurrent renderers at most: React Native (primary) and
          // Fabric (secondary); React DOM (primary) and React ART (secondary).
          // Secondary renderers store their context values on separate fields.
          _currentValue: te,
          _currentValue2: te,
          // Used to track how many concurrent renderers this context currently
          // supports within in a single renderer. Such as parallel server rendering.
          _threadCount: 0,
          // These are circular
          Provider: null,
          Consumer: null,
          // Add these to use same hidden class in VM as ServerContext
          _defaultValue: null,
          _globalName: null
        };
        ye.Provider = {
          $$typeof: m,
          _context: ye
        };
        var $e = !1, Ve = !1, mt = !1;
        {
          var sn = {
            $$typeof: v,
            _context: ye
          };
          Object.defineProperties(sn, {
            Provider: {
              get: function() {
                return Ve || (Ve = !0, Y("Rendering <Context.Consumer.Provider> is not supported and will be removed in a future major release. Did you mean to render <Context.Provider> instead?")), ye.Provider;
              },
              set: function(Pt) {
                ye.Provider = Pt;
              }
            },
            _currentValue: {
              get: function() {
                return ye._currentValue;
              },
              set: function(Pt) {
                ye._currentValue = Pt;
              }
            },
            _currentValue2: {
              get: function() {
                return ye._currentValue2;
              },
              set: function(Pt) {
                ye._currentValue2 = Pt;
              }
            },
            _threadCount: {
              get: function() {
                return ye._threadCount;
              },
              set: function(Pt) {
                ye._threadCount = Pt;
              }
            },
            Consumer: {
              get: function() {
                return $e || ($e = !0, Y("Rendering <Context.Consumer.Consumer> is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?")), ye.Consumer;
              }
            },
            displayName: {
              get: function() {
                return ye.displayName;
              },
              set: function(Pt) {
                mt || (q("Setting `displayName` on Context.Consumer has no effect. You should set it directly on the context with Context.displayName = '%s'.", Pt), mt = !0);
              }
            }
          }), ye.Consumer = sn;
        }
        return ye._currentRenderer = null, ye._currentRenderer2 = null, ye;
      }
      var St = -1, en = 0, on = 1, zn = 2;
      function Ar(te) {
        if (te._status === St) {
          var ye = te._result, $e = ye();
          if ($e.then(function(sn) {
            if (te._status === en || te._status === St) {
              var Pt = te;
              Pt._status = on, Pt._result = sn;
            }
          }, function(sn) {
            if (te._status === en || te._status === St) {
              var Pt = te;
              Pt._status = zn, Pt._result = sn;
            }
          }), te._status === St) {
            var Ve = te;
            Ve._status = en, Ve._result = $e;
          }
        }
        if (te._status === on) {
          var mt = te._result;
          return mt === void 0 && Y(`lazy: Expected the result of a dynamic import() call. Instead received: %s

Your code should look like: 
  const MyComponent = lazy(() => import('./MyComponent'))

Did you accidentally put curly braces around the import?`, mt), "default" in mt || Y(`lazy: Expected the result of a dynamic import() call. Instead received: %s

Your code should look like: 
  const MyComponent = lazy(() => import('./MyComponent'))`, mt), mt.default;
        } else
          throw te._result;
      }
      function ro(te) {
        var ye = {
          // We use these fields to store the result.
          _status: St,
          _result: te
        }, $e = {
          $$typeof: O,
          _payload: ye,
          _init: Ar
        };
        {
          var Ve, mt;
          Object.defineProperties($e, {
            defaultProps: {
              configurable: !0,
              get: function() {
                return Ve;
              },
              set: function(sn) {
                Y("React.lazy(...): It is not supported to assign `defaultProps` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it."), Ve = sn, Object.defineProperty($e, "defaultProps", {
                  enumerable: !0
                });
              }
            },
            propTypes: {
              configurable: !0,
              get: function() {
                return mt;
              },
              set: function(sn) {
                Y("React.lazy(...): It is not supported to assign `propTypes` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it."), mt = sn, Object.defineProperty($e, "propTypes", {
                  enumerable: !0
                });
              }
            }
          });
        }
        return $e;
      }
      function mo(te) {
        te != null && te.$$typeof === R ? Y("forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...)).") : typeof te != "function" ? Y("forwardRef requires a render function but was given %s.", te === null ? "null" : typeof te) : te.length !== 0 && te.length !== 2 && Y("forwardRef render functions accept exactly two parameters: props and ref. %s", te.length === 1 ? "Did you forget to use the ref parameter?" : "Any additional parameter will be undefined."), te != null && (te.defaultProps != null || te.propTypes != null) && Y("forwardRef render functions do not support propTypes or defaultProps. Did you accidentally pass a React component?");
        var ye = {
          $$typeof: y,
          render: te
        };
        {
          var $e;
          Object.defineProperty(ye, "displayName", {
            enumerable: !1,
            configurable: !0,
            get: function() {
              return $e;
            },
            set: function(Ve) {
              $e = Ve, !te.name && !te.displayName && (te.displayName = Ve);
            }
          });
        }
        return ye;
      }
      var ve;
      ve = Symbol.for("react.module.reference");
      function We(te) {
        return !!(typeof te == "string" || typeof te == "function" || te === u || te === p || ee || te === d || te === C || te === S || B || te === E || I || G || W || typeof te == "object" && te !== null && (te.$$typeof === O || te.$$typeof === R || te.$$typeof === m || te.$$typeof === v || te.$$typeof === y || // This needs to include all possible module reference object
        // types supported by any Flight configuration anywhere since
        // we don't know which Flight build this will end up being used
        // with.
        te.$$typeof === ve || te.getModuleId !== void 0));
      }
      function pt(te, ye) {
        We(te) || Y("memo: The first argument must be a component. Instead received: %s", te === null ? "null" : typeof te);
        var $e = {
          $$typeof: R,
          type: te,
          compare: ye === void 0 ? null : ye
        };
        {
          var Ve;
          Object.defineProperty($e, "displayName", {
            enumerable: !1,
            configurable: !0,
            get: function() {
              return Ve;
            },
            set: function(mt) {
              Ve = mt, !te.name && !te.displayName && (te.displayName = mt);
            }
          });
        }
        return $e;
      }
      function Ot() {
        var te = L.current;
        return te === null && Y(`Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:
1. You might have mismatching versions of React and the renderer (such as React DOM)
2. You might be breaking the Rules of Hooks
3. You might have more than one copy of React in the same app
See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.`), te;
      }
      function gn(te) {
        var ye = Ot();
        if (te._context !== void 0) {
          var $e = te._context;
          $e.Consumer === te ? Y("Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be removed in a future major release. Did you mean to call useContext(Context) instead?") : $e.Provider === te && Y("Calling useContext(Context.Provider) is not supported. Did you mean to call useContext(Context) instead?");
        }
        return ye.useContext(te);
      }
      function Le(te) {
        var ye = Ot();
        return ye.useState(te);
      }
      function ke(te, ye, $e) {
        var Ve = Ot();
        return Ve.useReducer(te, ye, $e);
      }
      function Ze(te) {
        var ye = Ot();
        return ye.useRef(te);
      }
      function Gt(te, ye) {
        var $e = Ot();
        return $e.useEffect(te, ye);
      }
      function Bt(te, ye) {
        var $e = Ot();
        return $e.useInsertionEffect(te, ye);
      }
      function Qt(te, ye) {
        var $e = Ot();
        return $e.useLayoutEffect(te, ye);
      }
      function Hn(te, ye) {
        var $e = Ot();
        return $e.useCallback(te, ye);
      }
      function Lr(te, ye) {
        var $e = Ot();
        return $e.useMemo(te, ye);
      }
      function Wo(te, ye, $e) {
        var Ve = Ot();
        return Ve.useImperativeHandle(te, ye, $e);
      }
      function En(te, ye) {
        {
          var $e = Ot();
          return $e.useDebugValue(te, ye);
        }
      }
      function Rn() {
        var te = Ot();
        return te.useTransition();
      }
      function di(te) {
        var ye = Ot();
        return ye.useDeferredValue(te);
      }
      function Ta() {
        var te = Ot();
        return te.useId();
      }
      function _n(te, ye, $e) {
        var Ve = Ot();
        return Ve.useSyncExternalStore(te, ye, $e);
      }
      var Io = 0, Si, Hi, fi, Pf, wi, wh, xh;
      function nd() {
      }
      nd.__reactDisabledLog = !0;
      function Kl() {
        {
          if (Io === 0) {
            Si = console.log, Hi = console.info, fi = console.warn, Pf = console.error, wi = console.group, wh = console.groupCollapsed, xh = console.groupEnd;
            var te = {
              configurable: !0,
              enumerable: !0,
              value: nd,
              writable: !0
            };
            Object.defineProperties(console, {
              info: te,
              log: te,
              warn: te,
              error: te,
              group: te,
              groupCollapsed: te,
              groupEnd: te
            });
          }
          Io++;
        }
      }
      function la() {
        {
          if (Io--, Io === 0) {
            var te = {
              configurable: !0,
              enumerable: !0,
              writable: !0
            };
            Object.defineProperties(console, {
              log: ie({}, te, {
                value: Si
              }),
              info: ie({}, te, {
                value: Hi
              }),
              warn: ie({}, te, {
                value: fi
              }),
              error: ie({}, te, {
                value: Pf
              }),
              group: ie({}, te, {
                value: wi
              }),
              groupCollapsed: ie({}, te, {
                value: wh
              }),
              groupEnd: ie({}, te, {
                value: xh
              })
            });
          }
          Io < 0 && Y("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
        }
      }
      var Xa = U.ReactCurrentDispatcher, Qa;
      function rd(te, ye, $e) {
        {
          if (Qa === void 0)
            try {
              throw Error();
            } catch (mt) {
              var Ve = mt.stack.trim().match(/\n( *(at )?)/);
              Qa = Ve && Ve[1] || "";
            }
          return `
` + Qa + te;
        }
      }
      var Ju = !1, Yl;
      {
        var od = typeof WeakMap == "function" ? WeakMap : Map;
        Yl = new od();
      }
      function id(te, ye) {
        if (!te || Ju)
          return "";
        {
          var $e = Yl.get(te);
          if ($e !== void 0)
            return $e;
        }
        var Ve;
        Ju = !0;
        var mt = Error.prepareStackTrace;
        Error.prepareStackTrace = void 0;
        var sn;
        sn = Xa.current, Xa.current = null, Kl();
        try {
          if (ye) {
            var Pt = function() {
              throw Error();
            };
            if (Object.defineProperty(Pt.prototype, "props", {
              set: function() {
                throw Error();
              }
            }), typeof Reflect == "object" && Reflect.construct) {
              try {
                Reflect.construct(Pt, []);
              } catch (Xr) {
                Ve = Xr;
              }
              Reflect.construct(te, [], Pt);
            } else {
              try {
                Pt.call();
              } catch (Xr) {
                Ve = Xr;
              }
              te.call(Pt.prototype);
            }
          } else {
            try {
              throw Error();
            } catch (Xr) {
              Ve = Xr;
            }
            te();
          }
        } catch (Xr) {
          if (Xr && Ve && typeof Xr.stack == "string") {
            for (var cn = Xr.stack.split(`
`), An = Ve.stack.split(`
`), er = cn.length - 1, $r = An.length - 1; er >= 1 && $r >= 0 && cn[er] !== An[$r]; )
              $r--;
            for (; er >= 1 && $r >= 0; er--, $r--)
              if (cn[er] !== An[$r]) {
                if (er !== 1 || $r !== 1)
                  do
                    if (er--, $r--, $r < 0 || cn[er] !== An[$r]) {
                      var xr = `
` + cn[er].replace(" at new ", " at ");
                      return te.displayName && xr.includes("<anonymous>") && (xr = xr.replace("<anonymous>", te.displayName)), typeof te == "function" && Yl.set(te, xr), xr;
                    }
                  while (er >= 1 && $r >= 0);
                break;
              }
          }
        } finally {
          Ju = !1, Xa.current = sn, la(), Error.prepareStackTrace = mt;
        }
        var Dn = te ? te.displayName || te.name : "", Er = Dn ? rd(Dn) : "";
        return typeof te == "function" && Yl.set(te, Er), Er;
      }
      function ul(te, ye, $e) {
        return id(te, !1);
      }
      function gv(te) {
        var ye = te.prototype;
        return !!(ye && ye.isReactComponent);
      }
      function cl(te, ye, $e) {
        if (te == null)
          return "";
        if (typeof te == "function")
          return id(te, gv(te));
        if (typeof te == "string")
          return rd(te);
        switch (te) {
          case C:
            return rd("Suspense");
          case S:
            return rd("SuspenseList");
        }
        if (typeof te == "object")
          switch (te.$$typeof) {
            case y:
              return ul(te.render);
            case R:
              return cl(te.type, ye, $e);
            case O: {
              var Ve = te, mt = Ve._payload, sn = Ve._init;
              try {
                return cl(sn(mt), ye, $e);
              } catch {
              }
            }
          }
        return "";
      }
      var ir = {}, ad = U.ReactDebugCurrentFrame;
      function Zn(te) {
        if (te) {
          var ye = te._owner, $e = cl(te.type, te._source, ye ? ye.type : null);
          ad.setExtraStackFrame($e);
        } else
          ad.setExtraStackFrame(null);
      }
      function Mf(te, ye, $e, Ve, mt) {
        {
          var sn = Function.call.bind(gt);
          for (var Pt in te)
            if (sn(te, Pt)) {
              var cn = void 0;
              try {
                if (typeof te[Pt] != "function") {
                  var An = Error((Ve || "React class") + ": " + $e + " type `" + Pt + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof te[Pt] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                  throw An.name = "Invariant Violation", An;
                }
                cn = te[Pt](ye, Pt, Ve, $e, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
              } catch (er) {
                cn = er;
              }
              cn && !(cn instanceof Error) && (Zn(mt), Y("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", Ve || "React class", $e, Pt, typeof cn), Zn(null)), cn instanceof Error && !(cn.message in ir) && (ir[cn.message] = !0, Zn(mt), Y("Failed %s type: %s", $e, cn.message), Zn(null));
            }
        }
      }
      function Ss(te) {
        if (te) {
          var ye = te._owner, $e = cl(te.type, te._source, ye ? ye.type : null);
          z($e);
        } else
          z(null);
      }
      var Sn;
      Sn = !1;
      function sd() {
        if (H.current) {
          var te = wt(H.current.type);
          if (te)
            return `

Check the render method of \`` + te + "`.";
        }
        return "";
      }
      function qo(te) {
        if (te !== void 0) {
          var ye = te.fileName.replace(/^.*[\\\/]/, ""), $e = te.lineNumber;
          return `

Check your code at ` + ye + ":" + $e + ".";
        }
        return "";
      }
      function ws(te) {
        return te != null ? qo(te.__source) : "";
      }
      var xi = {};
      function xs(te) {
        var ye = sd();
        if (!ye) {
          var $e = typeof te == "string" ? te : te.displayName || te.name;
          $e && (ye = `

Check the top-level render call using <` + $e + ">.");
        }
        return ye;
      }
      function Br(te, ye) {
        if (!(!te._store || te._store.validated || te.key != null)) {
          te._store.validated = !0;
          var $e = xs(ye);
          if (!xi[$e]) {
            xi[$e] = !0;
            var Ve = "";
            te && te._owner && te._owner !== H.current && (Ve = " It was passed a child from " + wt(te._owner.type) + "."), Ss(te), Y('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', $e, Ve), Ss(null);
          }
        }
      }
      function wr(te, ye) {
        if (typeof te == "object") {
          if (we(te))
            for (var $e = 0; $e < te.length; $e++) {
              var Ve = te[$e];
              bt(Ve) && Br(Ve, ye);
            }
          else if (bt(te))
            te._store && (te._store.validated = !0);
          else if (te) {
            var mt = _(te);
            if (typeof mt == "function" && mt !== te.entries)
              for (var sn = mt.call(te), Pt; !(Pt = sn.next()).done; )
                bt(Pt.value) && Br(Pt.value, ye);
          }
        }
      }
      function Xl(te) {
        {
          var ye = te.type;
          if (ye == null || typeof ye == "string")
            return;
          var $e;
          if (typeof ye == "function")
            $e = ye.propTypes;
          else if (typeof ye == "object" && (ye.$$typeof === y || // Note: Memo only checks outer props here.
          // Inner props are checked in the reconciler.
          ye.$$typeof === R))
            $e = ye.propTypes;
          else
            return;
          if ($e) {
            var Ve = wt(ye);
            Mf($e, te.props, "prop", Ve, te);
          } else if (ye.PropTypes !== void 0 && !Sn) {
            Sn = !0;
            var mt = wt(ye);
            Y("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?", mt || "Unknown");
          }
          typeof ye.getDefaultProps == "function" && !ye.getDefaultProps.isReactClassApproved && Y("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
        }
      }
      function Do(te) {
        {
          for (var ye = Object.keys(te.props), $e = 0; $e < ye.length; $e++) {
            var Ve = ye[$e];
            if (Ve !== "children" && Ve !== "key") {
              Ss(te), Y("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", Ve), Ss(null);
              break;
            }
          }
          te.ref !== null && (Ss(te), Y("Invalid attribute `ref` supplied to `React.Fragment`."), Ss(null));
        }
      }
      function Ei(te, ye, $e) {
        var Ve = We(te);
        if (!Ve) {
          var mt = "";
          (te === void 0 || typeof te == "object" && te !== null && Object.keys(te).length === 0) && (mt += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.");
          var sn = ws(ye);
          sn ? mt += sn : mt += sd();
          var Pt;
          te === null ? Pt = "null" : we(te) ? Pt = "array" : te !== void 0 && te.$$typeof === i ? (Pt = "<" + (wt(te.type) || "Unknown") + " />", mt = " Did you accidentally export a JSX literal instead of a component?") : Pt = typeof te, Y("React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", Pt, mt);
        }
        var cn = ht.apply(this, arguments);
        if (cn == null)
          return cn;
        if (Ve)
          for (var An = 2; An < arguments.length; An++)
            wr(arguments[An], te);
        return te === u ? Do(cn) : Xl(cn), cn;
      }
      var Ra = !1;
      function Zu(te) {
        var ye = Ei.bind(null, te);
        return ye.type = te, Ra || (Ra = !0, q("React.createFactory() is deprecated and will be removed in a future major release. Consider using JSX or use React.createElement() directly instead.")), Object.defineProperty(ye, "type", {
          enumerable: !1,
          get: function() {
            return q("Factory.type is deprecated. Access the class directly before passing it to createFactory."), Object.defineProperty(this, "type", {
              value: te
            }), te;
          }
        }), ye;
      }
      function If(te, ye, $e) {
        for (var Ve = zt.apply(this, arguments), mt = 2; mt < arguments.length; mt++)
          wr(arguments[mt], Ve.type);
        return Xl(Ve), Ve;
      }
      function Df(te, ye) {
        var $e = M.transition;
        M.transition = {};
        var Ve = M.transition;
        M.transition._updatedFibers = /* @__PURE__ */ new Set();
        try {
          te();
        } finally {
          if (M.transition = $e, $e === null && Ve._updatedFibers) {
            var mt = Ve._updatedFibers.size;
            mt > 10 && q("Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table."), Ve._updatedFibers.clear();
          }
        }
      }
      var Ql = !1, ec = null;
      function vv(te) {
        if (ec === null)
          try {
            var ye = ("require" + Math.random()).slice(0, 7), $e = e && e[ye];
            ec = $e.call(e, "timers").setImmediate;
          } catch {
            ec = function(mt) {
              Ql === !1 && (Ql = !0, typeof MessageChannel > "u" && Y("This browser does not have a MessageChannel implementation, so enqueuing tasks via await act(async () => ...) will fail. Please file an issue at https://github.com/facebook/react/issues if you encounter this warning."));
              var sn = new MessageChannel();
              sn.port1.onmessage = mt, sn.port2.postMessage(void 0);
            };
          }
        return ec(te);
      }
      var Oa = 0, Ja = !1;
      function Es(te) {
        {
          var ye = Oa;
          Oa++, D.current === null && (D.current = []);
          var $e = D.isBatchingLegacy, Ve;
          try {
            if (D.isBatchingLegacy = !0, Ve = te(), !$e && D.didScheduleLegacyUpdate) {
              var mt = D.current;
              mt !== null && (D.didScheduleLegacyUpdate = !1, Jl(mt));
            }
          } catch (Dn) {
            throw ka(ye), Dn;
          } finally {
            D.isBatchingLegacy = $e;
          }
          if (Ve !== null && typeof Ve == "object" && typeof Ve.then == "function") {
            var sn = Ve, Pt = !1, cn = {
              then: function(Dn, Er) {
                Pt = !0, sn.then(function(Xr) {
                  ka(ye), Oa === 0 ? ld(Xr, Dn, Er) : Dn(Xr);
                }, function(Xr) {
                  ka(ye), Er(Xr);
                });
              }
            };
            return !Ja && typeof Promise < "u" && Promise.resolve().then(function() {
            }).then(function() {
              Pt || (Ja = !0, Y("You called act(async () => ...) without await. This could lead to unexpected testing behaviour, interleaving multiple act calls and mixing their scopes. You should - await act(async () => ...);"));
            }), cn;
          } else {
            var An = Ve;
            if (ka(ye), Oa === 0) {
              var er = D.current;
              er !== null && (Jl(er), D.current = null);
              var $r = {
                then: function(Dn, Er) {
                  D.current === null ? (D.current = [], ld(An, Dn, Er)) : Dn(An);
                }
              };
              return $r;
            } else {
              var xr = {
                then: function(Dn, Er) {
                  Dn(An);
                }
              };
              return xr;
            }
          }
        }
      }
      function ka(te) {
        te !== Oa - 1 && Y("You seem to have overlapping act() calls, this is not supported. Be sure to await previous act() calls before making a new one. "), Oa = te;
      }
      function ld(te, ye, $e) {
        {
          var Ve = D.current;
          if (Ve !== null)
            try {
              Jl(Ve), vv(function() {
                Ve.length === 0 ? (D.current = null, ye(te)) : ld(te, ye, $e);
              });
            } catch (mt) {
              $e(mt);
            }
          else
            ye(te);
        }
      }
      var ud = !1;
      function Jl(te) {
        if (!ud) {
          ud = !0;
          var ye = 0;
          try {
            for (; ye < te.length; ye++) {
              var $e = te[ye];
              do
                $e = $e(!0);
              while ($e !== null);
            }
            te.length = 0;
          } catch (Ve) {
            throw te = te.slice(ye + 1), Ve;
          } finally {
            ud = !1;
          }
        }
      }
      var tc = Ei, cd = If, dd = Zu, Za = {
        map: gr,
        forEach: Mo,
        count: Po,
        toArray: Ut,
        only: fr
      };
      t.Children = Za, t.Component = ce, t.Fragment = u, t.Profiler = p, t.PureComponent = be, t.StrictMode = d, t.Suspense = C, t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = U, t.act = Es, t.cloneElement = cd, t.createContext = Ct, t.createElement = tc, t.createFactory = dd, t.createRef = Re, t.forwardRef = mo, t.isValidElement = bt, t.lazy = ro, t.memo = pt, t.startTransition = Df, t.unstable_act = Es, t.useCallback = Hn, t.useContext = gn, t.useDebugValue = En, t.useDeferredValue = di, t.useEffect = Gt, t.useId = Ta, t.useImperativeHandle = Wo, t.useInsertionEffect = Bt, t.useLayoutEffect = Qt, t.useMemo = Lr, t.useReducer = ke, t.useRef = Ze, t.useState = Le, t.useSyncExternalStore = _n, t.useTransition = Rn, t.version = n, typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
    }();
  }(_b, _b.exports)), _b.exports;
}
process.env.NODE_ENV === "production" ? ZO.exports = n3() : ZO.exports = r3();
var w = ZO.exports;
const tr = /* @__PURE__ */ nP(w), w0 = /* @__PURE__ */ t3({
  __proto__: null,
  default: tr
}, [w]);
/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var cL;
function o3() {
  if (cL) return Sb;
  cL = 1;
  var e = w, t = Symbol.for("react.element"), n = Symbol.for("react.fragment"), i = Object.prototype.hasOwnProperty, s = e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, u = { key: !0, ref: !0, __self: !0, __source: !0 };
  function d(p, m, v) {
    var y, C = {}, S = null, R = null;
    v !== void 0 && (S = "" + v), m.key !== void 0 && (S = "" + m.key), m.ref !== void 0 && (R = m.ref);
    for (y in m) i.call(m, y) && !u.hasOwnProperty(y) && (C[y] = m[y]);
    if (p && p.defaultProps) for (y in m = p.defaultProps, m) C[y] === void 0 && (C[y] = m[y]);
    return { $$typeof: t, type: p, key: S, ref: R, props: C, _owner: s.current };
  }
  return Sb.Fragment = n, Sb.jsx = d, Sb.jsxs = d, Sb;
}
var wb = {};
/**
 * @license React
 * react-jsx-runtime.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var dL;
function i3() {
  return dL || (dL = 1, process.env.NODE_ENV !== "production" && function() {
    var e = w, t = Symbol.for("react.element"), n = Symbol.for("react.portal"), i = Symbol.for("react.fragment"), s = Symbol.for("react.strict_mode"), u = Symbol.for("react.profiler"), d = Symbol.for("react.provider"), p = Symbol.for("react.context"), m = Symbol.for("react.forward_ref"), v = Symbol.for("react.suspense"), y = Symbol.for("react.suspense_list"), C = Symbol.for("react.memo"), S = Symbol.for("react.lazy"), R = Symbol.for("react.offscreen"), O = Symbol.iterator, E = "@@iterator";
    function k(ve) {
      if (ve === null || typeof ve != "object")
        return null;
      var We = O && ve[O] || ve[E];
      return typeof We == "function" ? We : null;
    }
    var F = e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
    function _(ve) {
      {
        for (var We = arguments.length, pt = new Array(We > 1 ? We - 1 : 0), Ot = 1; Ot < We; Ot++)
          pt[Ot - 1] = arguments[Ot];
        L("error", ve, pt);
      }
    }
    function L(ve, We, pt) {
      {
        var Ot = F.ReactDebugCurrentFrame, gn = Ot.getStackAddendum();
        gn !== "" && (We += "%s", pt = pt.concat([gn]));
        var Le = pt.map(function(ke) {
          return String(ke);
        });
        Le.unshift("Warning: " + We), Function.prototype.apply.call(console[ve], console, Le);
      }
    }
    var M = !1, D = !1, H = !1, K = !1, Q = !1, z;
    z = Symbol.for("react.module.reference");
    function I(ve) {
      return !!(typeof ve == "string" || typeof ve == "function" || ve === i || ve === u || Q || ve === s || ve === v || ve === y || K || ve === R || M || D || H || typeof ve == "object" && ve !== null && (ve.$$typeof === S || ve.$$typeof === C || ve.$$typeof === d || ve.$$typeof === p || ve.$$typeof === m || // This needs to include all possible module reference object
      // types supported by any Flight configuration anywhere since
      // we don't know which Flight build this will end up being used
      // with.
      ve.$$typeof === z || ve.getModuleId !== void 0));
    }
    function G(ve, We, pt) {
      var Ot = ve.displayName;
      if (Ot)
        return Ot;
      var gn = We.displayName || We.name || "";
      return gn !== "" ? pt + "(" + gn + ")" : pt;
    }
    function W(ve) {
      return ve.displayName || "Context";
    }
    function B(ve) {
      if (ve == null)
        return null;
      if (typeof ve.tag == "number" && _("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), typeof ve == "function")
        return ve.displayName || ve.name || null;
      if (typeof ve == "string")
        return ve;
      switch (ve) {
        case i:
          return "Fragment";
        case n:
          return "Portal";
        case u:
          return "Profiler";
        case s:
          return "StrictMode";
        case v:
          return "Suspense";
        case y:
          return "SuspenseList";
      }
      if (typeof ve == "object")
        switch (ve.$$typeof) {
          case p:
            var We = ve;
            return W(We) + ".Consumer";
          case d:
            var pt = ve;
            return W(pt._context) + ".Provider";
          case m:
            return G(ve, ve.render, "ForwardRef");
          case C:
            var Ot = ve.displayName || null;
            return Ot !== null ? Ot : B(ve.type) || "Memo";
          case S: {
            var gn = ve, Le = gn._payload, ke = gn._init;
            try {
              return B(ke(Le));
            } catch {
              return null;
            }
          }
        }
      return null;
    }
    var ee = Object.assign, U = 0, q, Y, ne, re, X, j, ie;
    function fe() {
    }
    fe.__reactDisabledLog = !0;
    function ce() {
      {
        if (U === 0) {
          q = console.log, Y = console.info, ne = console.warn, re = console.error, X = console.group, j = console.groupCollapsed, ie = console.groupEnd;
          var ve = {
            configurable: !0,
            enumerable: !0,
            value: fe,
            writable: !0
          };
          Object.defineProperties(console, {
            info: ve,
            log: ve,
            warn: ve,
            error: ve,
            group: ve,
            groupCollapsed: ve,
            groupEnd: ve
          });
        }
        U++;
      }
    }
    function me() {
      {
        if (U--, U === 0) {
          var ve = {
            configurable: !0,
            enumerable: !0,
            writable: !0
          };
          Object.defineProperties(console, {
            log: ee({}, ve, {
              value: q
            }),
            info: ee({}, ve, {
              value: Y
            }),
            warn: ee({}, ve, {
              value: ne
            }),
            error: ee({}, ve, {
              value: re
            }),
            group: ee({}, ve, {
              value: X
            }),
            groupCollapsed: ee({}, ve, {
              value: j
            }),
            groupEnd: ee({}, ve, {
              value: ie
            })
          });
        }
        U < 0 && _("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
      }
    }
    var ge = F.ReactCurrentDispatcher, de;
    function pe(ve, We, pt) {
      {
        if (de === void 0)
          try {
            throw Error();
          } catch (gn) {
            var Ot = gn.stack.trim().match(/\n( *(at )?)/);
            de = Ot && Ot[1] || "";
          }
        return `
` + de + ve;
      }
    }
    var be = !1, Ce;
    {
      var Re = typeof WeakMap == "function" ? WeakMap : Map;
      Ce = new Re();
    }
    function ue(ve, We) {
      if (!ve || be)
        return "";
      {
        var pt = Ce.get(ve);
        if (pt !== void 0)
          return pt;
      }
      var Ot;
      be = !0;
      var gn = Error.prepareStackTrace;
      Error.prepareStackTrace = void 0;
      var Le;
      Le = ge.current, ge.current = null, ce();
      try {
        if (We) {
          var ke = function() {
            throw Error();
          };
          if (Object.defineProperty(ke.prototype, "props", {
            set: function() {
              throw Error();
            }
          }), typeof Reflect == "object" && Reflect.construct) {
            try {
              Reflect.construct(ke, []);
            } catch (En) {
              Ot = En;
            }
            Reflect.construct(ve, [], ke);
          } else {
            try {
              ke.call();
            } catch (En) {
              Ot = En;
            }
            ve.call(ke.prototype);
          }
        } else {
          try {
            throw Error();
          } catch (En) {
            Ot = En;
          }
          ve();
        }
      } catch (En) {
        if (En && Ot && typeof En.stack == "string") {
          for (var Ze = En.stack.split(`
`), Gt = Ot.stack.split(`
`), Bt = Ze.length - 1, Qt = Gt.length - 1; Bt >= 1 && Qt >= 0 && Ze[Bt] !== Gt[Qt]; )
            Qt--;
          for (; Bt >= 1 && Qt >= 0; Bt--, Qt--)
            if (Ze[Bt] !== Gt[Qt]) {
              if (Bt !== 1 || Qt !== 1)
                do
                  if (Bt--, Qt--, Qt < 0 || Ze[Bt] !== Gt[Qt]) {
                    var Hn = `
` + Ze[Bt].replace(" at new ", " at ");
                    return ve.displayName && Hn.includes("<anonymous>") && (Hn = Hn.replace("<anonymous>", ve.displayName)), typeof ve == "function" && Ce.set(ve, Hn), Hn;
                  }
                while (Bt >= 1 && Qt >= 0);
              break;
            }
        }
      } finally {
        be = !1, ge.current = Le, me(), Error.prepareStackTrace = gn;
      }
      var Lr = ve ? ve.displayName || ve.name : "", Wo = Lr ? pe(Lr) : "";
      return typeof ve == "function" && Ce.set(ve, Wo), Wo;
    }
    function we(ve, We, pt) {
      return ue(ve, !1);
    }
    function _e(ve) {
      var We = ve.prototype;
      return !!(We && We.isReactComponent);
    }
    function He(ve, We, pt) {
      if (ve == null)
        return "";
      if (typeof ve == "function")
        return ue(ve, _e(ve));
      if (typeof ve == "string")
        return pe(ve);
      switch (ve) {
        case v:
          return pe("Suspense");
        case y:
          return pe("SuspenseList");
      }
      if (typeof ve == "object")
        switch (ve.$$typeof) {
          case m:
            return we(ve.render);
          case C:
            return He(ve.type, We, pt);
          case S: {
            var Ot = ve, gn = Ot._payload, Le = Ot._init;
            try {
              return He(Le(gn), We, pt);
            } catch {
            }
          }
        }
      return "";
    }
    var et = Object.prototype.hasOwnProperty, Ne = {}, rt = F.ReactDebugCurrentFrame;
    function it(ve) {
      if (ve) {
        var We = ve._owner, pt = He(ve.type, ve._source, We ? We.type : null);
        rt.setExtraStackFrame(pt);
      } else
        rt.setExtraStackFrame(null);
    }
    function wt(ve, We, pt, Ot, gn) {
      {
        var Le = Function.call.bind(et);
        for (var ke in ve)
          if (Le(ve, ke)) {
            var Ze = void 0;
            try {
              if (typeof ve[ke] != "function") {
                var Gt = Error((Ot || "React class") + ": " + pt + " type `" + ke + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof ve[ke] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                throw Gt.name = "Invariant Violation", Gt;
              }
              Ze = ve[ke](We, ke, Ot, pt, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
            } catch (Bt) {
              Ze = Bt;
            }
            Ze && !(Ze instanceof Error) && (it(gn), _("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", Ot || "React class", pt, ke, typeof Ze), it(null)), Ze instanceof Error && !(Ze.message in Ne) && (Ne[Ze.message] = !0, it(gn), _("Failed %s type: %s", pt, Ze.message), it(null));
          }
      }
    }
    var gt = Array.isArray;
    function ot(ve) {
      return gt(ve);
    }
    function jt(ve) {
      {
        var We = typeof Symbol == "function" && Symbol.toStringTag, pt = We && ve[Symbol.toStringTag] || ve.constructor.name || "Object";
        return pt;
      }
    }
    function ct(ve) {
      try {
        return Tt(ve), !1;
      } catch {
        return !0;
      }
    }
    function Tt(ve) {
      return "" + ve;
    }
    function Rt(ve) {
      if (ct(ve))
        return _("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", jt(ve)), Tt(ve);
    }
    var Lt = F.ReactCurrentOwner, vt = {
      key: !0,
      ref: !0,
      __self: !0,
      __source: !0
    }, Qe, Oe;
    function Me(ve) {
      if (et.call(ve, "ref")) {
        var We = Object.getOwnPropertyDescriptor(ve, "ref").get;
        if (We && We.isReactWarning)
          return !1;
      }
      return ve.ref !== void 0;
    }
    function ht(ve) {
      if (et.call(ve, "key")) {
        var We = Object.getOwnPropertyDescriptor(ve, "key").get;
        if (We && We.isReactWarning)
          return !1;
      }
      return ve.key !== void 0;
    }
    function xt(ve, We) {
      typeof ve.ref == "string" && Lt.current;
    }
    function zt(ve, We) {
      {
        var pt = function() {
          Qe || (Qe = !0, _("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", We));
        };
        pt.isReactWarning = !0, Object.defineProperty(ve, "key", {
          get: pt,
          configurable: !0
        });
      }
    }
    function bt(ve, We) {
      {
        var pt = function() {
          Oe || (Oe = !0, _("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", We));
        };
        pt.isReactWarning = !0, Object.defineProperty(ve, "ref", {
          get: pt,
          configurable: !0
        });
      }
    }
    var Ge = function(ve, We, pt, Ot, gn, Le, ke) {
      var Ze = {
        // This tag allows us to uniquely identify this as a React Element
        $$typeof: t,
        // Built-in properties that belong on the element
        type: ve,
        key: We,
        ref: pt,
        props: ke,
        // Record the component responsible for creating this element.
        _owner: Le
      };
      return Ze._store = {}, Object.defineProperty(Ze._store, "validated", {
        configurable: !1,
        enumerable: !1,
        writable: !0,
        value: !1
      }), Object.defineProperty(Ze, "_self", {
        configurable: !1,
        enumerable: !1,
        writable: !1,
        value: Ot
      }), Object.defineProperty(Ze, "_source", {
        configurable: !1,
        enumerable: !1,
        writable: !1,
        value: gn
      }), Object.freeze && (Object.freeze(Ze.props), Object.freeze(Ze)), Ze;
    };
    function Et(ve, We, pt, Ot, gn) {
      {
        var Le, ke = {}, Ze = null, Gt = null;
        pt !== void 0 && (Rt(pt), Ze = "" + pt), ht(We) && (Rt(We.key), Ze = "" + We.key), Me(We) && (Gt = We.ref, xt(We, gn));
        for (Le in We)
          et.call(We, Le) && !vt.hasOwnProperty(Le) && (ke[Le] = We[Le]);
        if (ve && ve.defaultProps) {
          var Bt = ve.defaultProps;
          for (Le in Bt)
            ke[Le] === void 0 && (ke[Le] = Bt[Le]);
        }
        if (Ze || Gt) {
          var Qt = typeof ve == "function" ? ve.displayName || ve.name || "Unknown" : ve;
          Ze && zt(ke, Qt), Gt && bt(ke, Qt);
        }
        return Ge(ve, Ze, Gt, gn, Ot, Lt.current, ke);
      }
    }
    var At = F.ReactCurrentOwner, pn = F.ReactDebugCurrentFrame;
    function fn(ve) {
      if (ve) {
        var We = ve._owner, pt = He(ve.type, ve._source, We ? We.type : null);
        pn.setExtraStackFrame(pt);
      } else
        pn.setExtraStackFrame(null);
    }
    var mr;
    mr = !1;
    function qn(ve) {
      return typeof ve == "object" && ve !== null && ve.$$typeof === t;
    }
    function Nr() {
      {
        if (At.current) {
          var ve = B(At.current.type);
          if (ve)
            return `

Check the render method of \`` + ve + "`.";
        }
        return "";
      }
    }
    function gr(ve) {
      return "";
    }
    var Po = {};
    function Mo(ve) {
      {
        var We = Nr();
        if (!We) {
          var pt = typeof ve == "string" ? ve : ve.displayName || ve.name;
          pt && (We = `

Check the top-level render call using <` + pt + ">.");
        }
        return We;
      }
    }
    function Ut(ve, We) {
      {
        if (!ve._store || ve._store.validated || ve.key != null)
          return;
        ve._store.validated = !0;
        var pt = Mo(We);
        if (Po[pt])
          return;
        Po[pt] = !0;
        var Ot = "";
        ve && ve._owner && ve._owner !== At.current && (Ot = " It was passed a child from " + B(ve._owner.type) + "."), fn(ve), _('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', pt, Ot), fn(null);
      }
    }
    function fr(ve, We) {
      {
        if (typeof ve != "object")
          return;
        if (ot(ve))
          for (var pt = 0; pt < ve.length; pt++) {
            var Ot = ve[pt];
            qn(Ot) && Ut(Ot, We);
          }
        else if (qn(ve))
          ve._store && (ve._store.validated = !0);
        else if (ve) {
          var gn = k(ve);
          if (typeof gn == "function" && gn !== ve.entries)
            for (var Le = gn.call(ve), ke; !(ke = Le.next()).done; )
              qn(ke.value) && Ut(ke.value, We);
        }
      }
    }
    function Ct(ve) {
      {
        var We = ve.type;
        if (We == null || typeof We == "string")
          return;
        var pt;
        if (typeof We == "function")
          pt = We.propTypes;
        else if (typeof We == "object" && (We.$$typeof === m || // Note: Memo only checks outer props here.
        // Inner props are checked in the reconciler.
        We.$$typeof === C))
          pt = We.propTypes;
        else
          return;
        if (pt) {
          var Ot = B(We);
          wt(pt, ve.props, "prop", Ot, ve);
        } else if (We.PropTypes !== void 0 && !mr) {
          mr = !0;
          var gn = B(We);
          _("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?", gn || "Unknown");
        }
        typeof We.getDefaultProps == "function" && !We.getDefaultProps.isReactClassApproved && _("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
      }
    }
    function St(ve) {
      {
        for (var We = Object.keys(ve.props), pt = 0; pt < We.length; pt++) {
          var Ot = We[pt];
          if (Ot !== "children" && Ot !== "key") {
            fn(ve), _("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", Ot), fn(null);
            break;
          }
        }
        ve.ref !== null && (fn(ve), _("Invalid attribute `ref` supplied to `React.Fragment`."), fn(null));
      }
    }
    var en = {};
    function on(ve, We, pt, Ot, gn, Le) {
      {
        var ke = I(ve);
        if (!ke) {
          var Ze = "";
          (ve === void 0 || typeof ve == "object" && ve !== null && Object.keys(ve).length === 0) && (Ze += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.");
          var Gt = gr();
          Gt ? Ze += Gt : Ze += Nr();
          var Bt;
          ve === null ? Bt = "null" : ot(ve) ? Bt = "array" : ve !== void 0 && ve.$$typeof === t ? (Bt = "<" + (B(ve.type) || "Unknown") + " />", Ze = " Did you accidentally export a JSX literal instead of a component?") : Bt = typeof ve, _("React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", Bt, Ze);
        }
        var Qt = Et(ve, We, pt, gn, Le);
        if (Qt == null)
          return Qt;
        if (ke) {
          var Hn = We.children;
          if (Hn !== void 0)
            if (Ot)
              if (ot(Hn)) {
                for (var Lr = 0; Lr < Hn.length; Lr++)
                  fr(Hn[Lr], ve);
                Object.freeze && Object.freeze(Hn);
              } else
                _("React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.");
            else
              fr(Hn, ve);
        }
        if (et.call(We, "key")) {
          var Wo = B(ve), En = Object.keys(We).filter(function(Ta) {
            return Ta !== "key";
          }), Rn = En.length > 0 ? "{key: someKey, " + En.join(": ..., ") + ": ...}" : "{key: someKey}";
          if (!en[Wo + Rn]) {
            var di = En.length > 0 ? "{" + En.join(": ..., ") + ": ...}" : "{}";
            _(`A props object containing a "key" prop is being spread into JSX:
  let props = %s;
  <%s {...props} />
React keys must be passed directly to JSX without using spread:
  let props = %s;
  <%s key={someKey} {...props} />`, Rn, Wo, di, Wo), en[Wo + Rn] = !0;
          }
        }
        return ve === i ? St(Qt) : Ct(Qt), Qt;
      }
    }
    function zn(ve, We, pt) {
      return on(ve, We, pt, !0);
    }
    function Ar(ve, We, pt) {
      return on(ve, We, pt, !1);
    }
    var ro = Ar, mo = zn;
    wb.Fragment = i, wb.jsx = ro, wb.jsxs = mo;
  }()), wb;
}
process.env.NODE_ENV === "production" ? JO.exports = o3() : JO.exports = i3();
var A = JO.exports, Ab = {}, ek = { exports: {} }, Ua = {}, Bx = { exports: {} }, fO = {};
/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var fL;
function a3() {
  return fL || (fL = 1, function(e) {
    function t(ne, re) {
      var X = ne.length;
      ne.push(re);
      e: for (; 0 < X; ) {
        var j = X - 1 >>> 1, ie = ne[j];
        if (0 < s(ie, re)) ne[j] = re, ne[X] = ie, X = j;
        else break e;
      }
    }
    function n(ne) {
      return ne.length === 0 ? null : ne[0];
    }
    function i(ne) {
      if (ne.length === 0) return null;
      var re = ne[0], X = ne.pop();
      if (X !== re) {
        ne[0] = X;
        e: for (var j = 0, ie = ne.length, fe = ie >>> 1; j < fe; ) {
          var ce = 2 * (j + 1) - 1, me = ne[ce], ge = ce + 1, de = ne[ge];
          if (0 > s(me, X)) ge < ie && 0 > s(de, me) ? (ne[j] = de, ne[ge] = X, j = ge) : (ne[j] = me, ne[ce] = X, j = ce);
          else if (ge < ie && 0 > s(de, X)) ne[j] = de, ne[ge] = X, j = ge;
          else break e;
        }
      }
      return re;
    }
    function s(ne, re) {
      var X = ne.sortIndex - re.sortIndex;
      return X !== 0 ? X : ne.id - re.id;
    }
    if (typeof performance == "object" && typeof performance.now == "function") {
      var u = performance;
      e.unstable_now = function() {
        return u.now();
      };
    } else {
      var d = Date, p = d.now();
      e.unstable_now = function() {
        return d.now() - p;
      };
    }
    var m = [], v = [], y = 1, C = null, S = 3, R = !1, O = !1, E = !1, k = typeof setTimeout == "function" ? setTimeout : null, F = typeof clearTimeout == "function" ? clearTimeout : null, _ = typeof setImmediate < "u" ? setImmediate : null;
    typeof navigator < "u" && navigator.scheduling !== void 0 && navigator.scheduling.isInputPending !== void 0 && navigator.scheduling.isInputPending.bind(navigator.scheduling);
    function L(ne) {
      for (var re = n(v); re !== null; ) {
        if (re.callback === null) i(v);
        else if (re.startTime <= ne) i(v), re.sortIndex = re.expirationTime, t(m, re);
        else break;
        re = n(v);
      }
    }
    function M(ne) {
      if (E = !1, L(ne), !O) if (n(m) !== null) O = !0, q(D);
      else {
        var re = n(v);
        re !== null && Y(M, re.startTime - ne);
      }
    }
    function D(ne, re) {
      O = !1, E && (E = !1, F(Q), Q = -1), R = !0;
      var X = S;
      try {
        for (L(re), C = n(m); C !== null && (!(C.expirationTime > re) || ne && !G()); ) {
          var j = C.callback;
          if (typeof j == "function") {
            C.callback = null, S = C.priorityLevel;
            var ie = j(C.expirationTime <= re);
            re = e.unstable_now(), typeof ie == "function" ? C.callback = ie : C === n(m) && i(m), L(re);
          } else i(m);
          C = n(m);
        }
        if (C !== null) var fe = !0;
        else {
          var ce = n(v);
          ce !== null && Y(M, ce.startTime - re), fe = !1;
        }
        return fe;
      } finally {
        C = null, S = X, R = !1;
      }
    }
    var H = !1, K = null, Q = -1, z = 5, I = -1;
    function G() {
      return !(e.unstable_now() - I < z);
    }
    function W() {
      if (K !== null) {
        var ne = e.unstable_now();
        I = ne;
        var re = !0;
        try {
          re = K(!0, ne);
        } finally {
          re ? B() : (H = !1, K = null);
        }
      } else H = !1;
    }
    var B;
    if (typeof _ == "function") B = function() {
      _(W);
    };
    else if (typeof MessageChannel < "u") {
      var ee = new MessageChannel(), U = ee.port2;
      ee.port1.onmessage = W, B = function() {
        U.postMessage(null);
      };
    } else B = function() {
      k(W, 0);
    };
    function q(ne) {
      K = ne, H || (H = !0, B());
    }
    function Y(ne, re) {
      Q = k(function() {
        ne(e.unstable_now());
      }, re);
    }
    e.unstable_IdlePriority = 5, e.unstable_ImmediatePriority = 1, e.unstable_LowPriority = 4, e.unstable_NormalPriority = 3, e.unstable_Profiling = null, e.unstable_UserBlockingPriority = 2, e.unstable_cancelCallback = function(ne) {
      ne.callback = null;
    }, e.unstable_continueExecution = function() {
      O || R || (O = !0, q(D));
    }, e.unstable_forceFrameRate = function(ne) {
      0 > ne || 125 < ne ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : z = 0 < ne ? Math.floor(1e3 / ne) : 5;
    }, e.unstable_getCurrentPriorityLevel = function() {
      return S;
    }, e.unstable_getFirstCallbackNode = function() {
      return n(m);
    }, e.unstable_next = function(ne) {
      switch (S) {
        case 1:
        case 2:
        case 3:
          var re = 3;
          break;
        default:
          re = S;
      }
      var X = S;
      S = re;
      try {
        return ne();
      } finally {
        S = X;
      }
    }, e.unstable_pauseExecution = function() {
    }, e.unstable_requestPaint = function() {
    }, e.unstable_runWithPriority = function(ne, re) {
      switch (ne) {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
          break;
        default:
          ne = 3;
      }
      var X = S;
      S = ne;
      try {
        return re();
      } finally {
        S = X;
      }
    }, e.unstable_scheduleCallback = function(ne, re, X) {
      var j = e.unstable_now();
      switch (typeof X == "object" && X !== null ? (X = X.delay, X = typeof X == "number" && 0 < X ? j + X : j) : X = j, ne) {
        case 1:
          var ie = -1;
          break;
        case 2:
          ie = 250;
          break;
        case 5:
          ie = 1073741823;
          break;
        case 4:
          ie = 1e4;
          break;
        default:
          ie = 5e3;
      }
      return ie = X + ie, ne = { id: y++, callback: re, priorityLevel: ne, startTime: X, expirationTime: ie, sortIndex: -1 }, X > j ? (ne.sortIndex = X, t(v, ne), n(m) === null && ne === n(v) && (E ? (F(Q), Q = -1) : E = !0, Y(M, X - j))) : (ne.sortIndex = ie, t(m, ne), O || R || (O = !0, q(D))), ne;
    }, e.unstable_shouldYield = G, e.unstable_wrapCallback = function(ne) {
      var re = S;
      return function() {
        var X = S;
        S = re;
        try {
          return ne.apply(this, arguments);
        } finally {
          S = X;
        }
      };
    };
  }(fO)), fO;
}
var pO = {};
/**
 * @license React
 * scheduler.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var pL;
function s3() {
  return pL || (pL = 1, function(e) {
    process.env.NODE_ENV !== "production" && function() {
      typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
      var t = !1, n = 5;
      function i(Oe, Me) {
        var ht = Oe.length;
        Oe.push(Me), d(Oe, Me, ht);
      }
      function s(Oe) {
        return Oe.length === 0 ? null : Oe[0];
      }
      function u(Oe) {
        if (Oe.length === 0)
          return null;
        var Me = Oe[0], ht = Oe.pop();
        return ht !== Me && (Oe[0] = ht, p(Oe, ht, 0)), Me;
      }
      function d(Oe, Me, ht) {
        for (var xt = ht; xt > 0; ) {
          var zt = xt - 1 >>> 1, bt = Oe[zt];
          if (m(bt, Me) > 0)
            Oe[zt] = Me, Oe[xt] = bt, xt = zt;
          else
            return;
        }
      }
      function p(Oe, Me, ht) {
        for (var xt = ht, zt = Oe.length, bt = zt >>> 1; xt < bt; ) {
          var Ge = (xt + 1) * 2 - 1, Et = Oe[Ge], At = Ge + 1, pn = Oe[At];
          if (m(Et, Me) < 0)
            At < zt && m(pn, Et) < 0 ? (Oe[xt] = pn, Oe[At] = Me, xt = At) : (Oe[xt] = Et, Oe[Ge] = Me, xt = Ge);
          else if (At < zt && m(pn, Me) < 0)
            Oe[xt] = pn, Oe[At] = Me, xt = At;
          else
            return;
        }
      }
      function m(Oe, Me) {
        var ht = Oe.sortIndex - Me.sortIndex;
        return ht !== 0 ? ht : Oe.id - Me.id;
      }
      var v = 1, y = 2, C = 3, S = 4, R = 5;
      function O(Oe, Me) {
      }
      var E = typeof performance == "object" && typeof performance.now == "function";
      if (E) {
        var k = performance;
        e.unstable_now = function() {
          return k.now();
        };
      } else {
        var F = Date, _ = F.now();
        e.unstable_now = function() {
          return F.now() - _;
        };
      }
      var L = 1073741823, M = -1, D = 250, H = 5e3, K = 1e4, Q = L, z = [], I = [], G = 1, W = null, B = C, ee = !1, U = !1, q = !1, Y = typeof setTimeout == "function" ? setTimeout : null, ne = typeof clearTimeout == "function" ? clearTimeout : null, re = typeof setImmediate < "u" ? setImmediate : null;
      typeof navigator < "u" && navigator.scheduling !== void 0 && navigator.scheduling.isInputPending !== void 0 && navigator.scheduling.isInputPending.bind(navigator.scheduling);
      function X(Oe) {
        for (var Me = s(I); Me !== null; ) {
          if (Me.callback === null)
            u(I);
          else if (Me.startTime <= Oe)
            u(I), Me.sortIndex = Me.expirationTime, i(z, Me);
          else
            return;
          Me = s(I);
        }
      }
      function j(Oe) {
        if (q = !1, X(Oe), !U)
          if (s(z) !== null)
            U = !0, Tt(ie);
          else {
            var Me = s(I);
            Me !== null && Rt(j, Me.startTime - Oe);
          }
      }
      function ie(Oe, Me) {
        U = !1, q && (q = !1, Lt()), ee = !0;
        var ht = B;
        try {
          var xt;
          if (!t) return fe(Oe, Me);
        } finally {
          W = null, B = ht, ee = !1;
        }
      }
      function fe(Oe, Me) {
        var ht = Me;
        for (X(ht), W = s(z); W !== null && !(W.expirationTime > ht && (!Oe || rt())); ) {
          var xt = W.callback;
          if (typeof xt == "function") {
            W.callback = null, B = W.priorityLevel;
            var zt = W.expirationTime <= ht, bt = xt(zt);
            ht = e.unstable_now(), typeof bt == "function" ? W.callback = bt : W === s(z) && u(z), X(ht);
          } else
            u(z);
          W = s(z);
        }
        if (W !== null)
          return !0;
        var Ge = s(I);
        return Ge !== null && Rt(j, Ge.startTime - ht), !1;
      }
      function ce(Oe, Me) {
        switch (Oe) {
          case v:
          case y:
          case C:
          case S:
          case R:
            break;
          default:
            Oe = C;
        }
        var ht = B;
        B = Oe;
        try {
          return Me();
        } finally {
          B = ht;
        }
      }
      function me(Oe) {
        var Me;
        switch (B) {
          case v:
          case y:
          case C:
            Me = C;
            break;
          default:
            Me = B;
            break;
        }
        var ht = B;
        B = Me;
        try {
          return Oe();
        } finally {
          B = ht;
        }
      }
      function ge(Oe) {
        var Me = B;
        return function() {
          var ht = B;
          B = Me;
          try {
            return Oe.apply(this, arguments);
          } finally {
            B = ht;
          }
        };
      }
      function de(Oe, Me, ht) {
        var xt = e.unstable_now(), zt;
        if (typeof ht == "object" && ht !== null) {
          var bt = ht.delay;
          typeof bt == "number" && bt > 0 ? zt = xt + bt : zt = xt;
        } else
          zt = xt;
        var Ge;
        switch (Oe) {
          case v:
            Ge = M;
            break;
          case y:
            Ge = D;
            break;
          case R:
            Ge = Q;
            break;
          case S:
            Ge = K;
            break;
          case C:
          default:
            Ge = H;
            break;
        }
        var Et = zt + Ge, At = {
          id: G++,
          callback: Me,
          priorityLevel: Oe,
          startTime: zt,
          expirationTime: Et,
          sortIndex: -1
        };
        return zt > xt ? (At.sortIndex = zt, i(I, At), s(z) === null && At === s(I) && (q ? Lt() : q = !0, Rt(j, zt - xt))) : (At.sortIndex = Et, i(z, At), !U && !ee && (U = !0, Tt(ie))), At;
      }
      function pe() {
      }
      function be() {
        !U && !ee && (U = !0, Tt(ie));
      }
      function Ce() {
        return s(z);
      }
      function Re(Oe) {
        Oe.callback = null;
      }
      function ue() {
        return B;
      }
      var we = !1, _e = null, He = -1, et = n, Ne = -1;
      function rt() {
        var Oe = e.unstable_now() - Ne;
        return !(Oe < et);
      }
      function it() {
      }
      function wt(Oe) {
        if (Oe < 0 || Oe > 125) {
          console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported");
          return;
        }
        Oe > 0 ? et = Math.floor(1e3 / Oe) : et = n;
      }
      var gt = function() {
        if (_e !== null) {
          var Oe = e.unstable_now();
          Ne = Oe;
          var Me = !0, ht = !0;
          try {
            ht = _e(Me, Oe);
          } finally {
            ht ? ot() : (we = !1, _e = null);
          }
        } else
          we = !1;
      }, ot;
      if (typeof re == "function")
        ot = function() {
          re(gt);
        };
      else if (typeof MessageChannel < "u") {
        var jt = new MessageChannel(), ct = jt.port2;
        jt.port1.onmessage = gt, ot = function() {
          ct.postMessage(null);
        };
      } else
        ot = function() {
          Y(gt, 0);
        };
      function Tt(Oe) {
        _e = Oe, we || (we = !0, ot());
      }
      function Rt(Oe, Me) {
        He = Y(function() {
          Oe(e.unstable_now());
        }, Me);
      }
      function Lt() {
        ne(He), He = -1;
      }
      var vt = it, Qe = null;
      e.unstable_IdlePriority = R, e.unstable_ImmediatePriority = v, e.unstable_LowPriority = S, e.unstable_NormalPriority = C, e.unstable_Profiling = Qe, e.unstable_UserBlockingPriority = y, e.unstable_cancelCallback = Re, e.unstable_continueExecution = be, e.unstable_forceFrameRate = wt, e.unstable_getCurrentPriorityLevel = ue, e.unstable_getFirstCallbackNode = Ce, e.unstable_next = me, e.unstable_pauseExecution = pe, e.unstable_requestPaint = vt, e.unstable_runWithPriority = ce, e.unstable_scheduleCallback = de, e.unstable_shouldYield = rt, e.unstable_wrapCallback = ge, typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
    }();
  }(pO)), pO;
}
var hL;
function a$() {
  return hL || (hL = 1, process.env.NODE_ENV === "production" ? Bx.exports = a3() : Bx.exports = s3()), Bx.exports;
}
/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var mL;
function l3() {
  if (mL) return Ua;
  mL = 1;
  var e = w, t = a$();
  function n(l) {
    for (var c = "https://reactjs.org/docs/error-decoder.html?invariant=" + l, g = 1; g < arguments.length; g++) c += "&args[]=" + encodeURIComponent(arguments[g]);
    return "Minified React error #" + l + "; visit " + c + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
  }
  var i = /* @__PURE__ */ new Set(), s = {};
  function u(l, c) {
    d(l, c), d(l + "Capture", c);
  }
  function d(l, c) {
    for (s[l] = c, l = 0; l < c.length; l++) i.add(c[l]);
  }
  var p = !(typeof window > "u" || typeof window.document > "u" || typeof window.document.createElement > "u"), m = Object.prototype.hasOwnProperty, v = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/, y = {}, C = {};
  function S(l) {
    return m.call(C, l) ? !0 : m.call(y, l) ? !1 : v.test(l) ? C[l] = !0 : (y[l] = !0, !1);
  }
  function R(l, c, g, x) {
    if (g !== null && g.type === 0) return !1;
    switch (typeof c) {
      case "function":
      case "symbol":
        return !0;
      case "boolean":
        return x ? !1 : g !== null ? !g.acceptsBooleans : (l = l.toLowerCase().slice(0, 5), l !== "data-" && l !== "aria-");
      default:
        return !1;
    }
  }
  function O(l, c, g, x) {
    if (c === null || typeof c > "u" || R(l, c, g, x)) return !0;
    if (x) return !1;
    if (g !== null) switch (g.type) {
      case 3:
        return !c;
      case 4:
        return c === !1;
      case 5:
        return isNaN(c);
      case 6:
        return isNaN(c) || 1 > c;
    }
    return !1;
  }
  function E(l, c, g, x, P, $, oe) {
    this.acceptsBooleans = c === 2 || c === 3 || c === 4, this.attributeName = x, this.attributeNamespace = P, this.mustUseProperty = g, this.propertyName = l, this.type = c, this.sanitizeURL = $, this.removeEmptyString = oe;
  }
  var k = {};
  "children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(l) {
    k[l] = new E(l, 0, !1, l, null, !1, !1);
  }), [["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(l) {
    var c = l[0];
    k[c] = new E(c, 1, !1, l[1], null, !1, !1);
  }), ["contentEditable", "draggable", "spellCheck", "value"].forEach(function(l) {
    k[l] = new E(l, 2, !1, l.toLowerCase(), null, !1, !1);
  }), ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(l) {
    k[l] = new E(l, 2, !1, l, null, !1, !1);
  }), "allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(l) {
    k[l] = new E(l, 3, !1, l.toLowerCase(), null, !1, !1);
  }), ["checked", "multiple", "muted", "selected"].forEach(function(l) {
    k[l] = new E(l, 3, !0, l, null, !1, !1);
  }), ["capture", "download"].forEach(function(l) {
    k[l] = new E(l, 4, !1, l, null, !1, !1);
  }), ["cols", "rows", "size", "span"].forEach(function(l) {
    k[l] = new E(l, 6, !1, l, null, !1, !1);
  }), ["rowSpan", "start"].forEach(function(l) {
    k[l] = new E(l, 5, !1, l.toLowerCase(), null, !1, !1);
  });
  var F = /[\-:]([a-z])/g;
  function _(l) {
    return l[1].toUpperCase();
  }
  "accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(l) {
    var c = l.replace(
      F,
      _
    );
    k[c] = new E(c, 1, !1, l, null, !1, !1);
  }), "xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(l) {
    var c = l.replace(F, _);
    k[c] = new E(c, 1, !1, l, "http://www.w3.org/1999/xlink", !1, !1);
  }), ["xml:base", "xml:lang", "xml:space"].forEach(function(l) {
    var c = l.replace(F, _);
    k[c] = new E(c, 1, !1, l, "http://www.w3.org/XML/1998/namespace", !1, !1);
  }), ["tabIndex", "crossOrigin"].forEach(function(l) {
    k[l] = new E(l, 1, !1, l.toLowerCase(), null, !1, !1);
  }), k.xlinkHref = new E("xlinkHref", 1, !1, "xlink:href", "http://www.w3.org/1999/xlink", !0, !1), ["src", "href", "action", "formAction"].forEach(function(l) {
    k[l] = new E(l, 1, !1, l.toLowerCase(), null, !0, !0);
  });
  function L(l, c, g, x) {
    var P = k.hasOwnProperty(c) ? k[c] : null;
    (P !== null ? P.type !== 0 : x || !(2 < c.length) || c[0] !== "o" && c[0] !== "O" || c[1] !== "n" && c[1] !== "N") && (O(c, g, P, x) && (g = null), x || P === null ? S(c) && (g === null ? l.removeAttribute(c) : l.setAttribute(c, "" + g)) : P.mustUseProperty ? l[P.propertyName] = g === null ? P.type === 3 ? !1 : "" : g : (c = P.attributeName, x = P.attributeNamespace, g === null ? l.removeAttribute(c) : (P = P.type, g = P === 3 || P === 4 && g === !0 ? "" : "" + g, x ? l.setAttributeNS(x, c, g) : l.setAttribute(c, g))));
  }
  var M = e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, D = Symbol.for("react.element"), H = Symbol.for("react.portal"), K = Symbol.for("react.fragment"), Q = Symbol.for("react.strict_mode"), z = Symbol.for("react.profiler"), I = Symbol.for("react.provider"), G = Symbol.for("react.context"), W = Symbol.for("react.forward_ref"), B = Symbol.for("react.suspense"), ee = Symbol.for("react.suspense_list"), U = Symbol.for("react.memo"), q = Symbol.for("react.lazy"), Y = Symbol.for("react.offscreen"), ne = Symbol.iterator;
  function re(l) {
    return l === null || typeof l != "object" ? null : (l = ne && l[ne] || l["@@iterator"], typeof l == "function" ? l : null);
  }
  var X = Object.assign, j;
  function ie(l) {
    if (j === void 0) try {
      throw Error();
    } catch (g) {
      var c = g.stack.trim().match(/\n( *(at )?)/);
      j = c && c[1] || "";
    }
    return `
` + j + l;
  }
  var fe = !1;
  function ce(l, c) {
    if (!l || fe) return "";
    fe = !0;
    var g = Error.prepareStackTrace;
    Error.prepareStackTrace = void 0;
    try {
      if (c) if (c = function() {
        throw Error();
      }, Object.defineProperty(c.prototype, "props", { set: function() {
        throw Error();
      } }), typeof Reflect == "object" && Reflect.construct) {
        try {
          Reflect.construct(c, []);
        } catch (je) {
          var x = je;
        }
        Reflect.construct(l, [], c);
      } else {
        try {
          c.call();
        } catch (je) {
          x = je;
        }
        l.call(c.prototype);
      }
      else {
        try {
          throw Error();
        } catch (je) {
          x = je;
        }
        l();
      }
    } catch (je) {
      if (je && x && typeof je.stack == "string") {
        for (var P = je.stack.split(`
`), $ = x.stack.split(`
`), oe = P.length - 1, he = $.length - 1; 1 <= oe && 0 <= he && P[oe] !== $[he]; ) he--;
        for (; 1 <= oe && 0 <= he; oe--, he--) if (P[oe] !== $[he]) {
          if (oe !== 1 || he !== 1)
            do
              if (oe--, he--, 0 > he || P[oe] !== $[he]) {
                var Se = `
` + P[oe].replace(" at new ", " at ");
                return l.displayName && Se.includes("<anonymous>") && (Se = Se.replace("<anonymous>", l.displayName)), Se;
              }
            while (1 <= oe && 0 <= he);
          break;
        }
      }
    } finally {
      fe = !1, Error.prepareStackTrace = g;
    }
    return (l = l ? l.displayName || l.name : "") ? ie(l) : "";
  }
  function me(l) {
    switch (l.tag) {
      case 5:
        return ie(l.type);
      case 16:
        return ie("Lazy");
      case 13:
        return ie("Suspense");
      case 19:
        return ie("SuspenseList");
      case 0:
      case 2:
      case 15:
        return l = ce(l.type, !1), l;
      case 11:
        return l = ce(l.type.render, !1), l;
      case 1:
        return l = ce(l.type, !0), l;
      default:
        return "";
    }
  }
  function ge(l) {
    if (l == null) return null;
    if (typeof l == "function") return l.displayName || l.name || null;
    if (typeof l == "string") return l;
    switch (l) {
      case K:
        return "Fragment";
      case H:
        return "Portal";
      case z:
        return "Profiler";
      case Q:
        return "StrictMode";
      case B:
        return "Suspense";
      case ee:
        return "SuspenseList";
    }
    if (typeof l == "object") switch (l.$$typeof) {
      case G:
        return (l.displayName || "Context") + ".Consumer";
      case I:
        return (l._context.displayName || "Context") + ".Provider";
      case W:
        var c = l.render;
        return l = l.displayName, l || (l = c.displayName || c.name || "", l = l !== "" ? "ForwardRef(" + l + ")" : "ForwardRef"), l;
      case U:
        return c = l.displayName || null, c !== null ? c : ge(l.type) || "Memo";
      case q:
        c = l._payload, l = l._init;
        try {
          return ge(l(c));
        } catch {
        }
    }
    return null;
  }
  function de(l) {
    var c = l.type;
    switch (l.tag) {
      case 24:
        return "Cache";
      case 9:
        return (c.displayName || "Context") + ".Consumer";
      case 10:
        return (c._context.displayName || "Context") + ".Provider";
      case 18:
        return "DehydratedFragment";
      case 11:
        return l = c.render, l = l.displayName || l.name || "", c.displayName || (l !== "" ? "ForwardRef(" + l + ")" : "ForwardRef");
      case 7:
        return "Fragment";
      case 5:
        return c;
      case 4:
        return "Portal";
      case 3:
        return "Root";
      case 6:
        return "Text";
      case 16:
        return ge(c);
      case 8:
        return c === Q ? "StrictMode" : "Mode";
      case 22:
        return "Offscreen";
      case 12:
        return "Profiler";
      case 21:
        return "Scope";
      case 13:
        return "Suspense";
      case 19:
        return "SuspenseList";
      case 25:
        return "TracingMarker";
      case 1:
      case 0:
      case 17:
      case 2:
      case 14:
      case 15:
        if (typeof c == "function") return c.displayName || c.name || null;
        if (typeof c == "string") return c;
    }
    return null;
  }
  function pe(l) {
    switch (typeof l) {
      case "boolean":
      case "number":
      case "string":
      case "undefined":
        return l;
      case "object":
        return l;
      default:
        return "";
    }
  }
  function be(l) {
    var c = l.type;
    return (l = l.nodeName) && l.toLowerCase() === "input" && (c === "checkbox" || c === "radio");
  }
  function Ce(l) {
    var c = be(l) ? "checked" : "value", g = Object.getOwnPropertyDescriptor(l.constructor.prototype, c), x = "" + l[c];
    if (!l.hasOwnProperty(c) && typeof g < "u" && typeof g.get == "function" && typeof g.set == "function") {
      var P = g.get, $ = g.set;
      return Object.defineProperty(l, c, { configurable: !0, get: function() {
        return P.call(this);
      }, set: function(oe) {
        x = "" + oe, $.call(this, oe);
      } }), Object.defineProperty(l, c, { enumerable: g.enumerable }), { getValue: function() {
        return x;
      }, setValue: function(oe) {
        x = "" + oe;
      }, stopTracking: function() {
        l._valueTracker = null, delete l[c];
      } };
    }
  }
  function Re(l) {
    l._valueTracker || (l._valueTracker = Ce(l));
  }
  function ue(l) {
    if (!l) return !1;
    var c = l._valueTracker;
    if (!c) return !0;
    var g = c.getValue(), x = "";
    return l && (x = be(l) ? l.checked ? "true" : "false" : l.value), l = x, l !== g ? (c.setValue(l), !0) : !1;
  }
  function we(l) {
    if (l = l || (typeof document < "u" ? document : void 0), typeof l > "u") return null;
    try {
      return l.activeElement || l.body;
    } catch {
      return l.body;
    }
  }
  function _e(l, c) {
    var g = c.checked;
    return X({}, c, { defaultChecked: void 0, defaultValue: void 0, value: void 0, checked: g ?? l._wrapperState.initialChecked });
  }
  function He(l, c) {
    var g = c.defaultValue == null ? "" : c.defaultValue, x = c.checked != null ? c.checked : c.defaultChecked;
    g = pe(c.value != null ? c.value : g), l._wrapperState = { initialChecked: x, initialValue: g, controlled: c.type === "checkbox" || c.type === "radio" ? c.checked != null : c.value != null };
  }
  function et(l, c) {
    c = c.checked, c != null && L(l, "checked", c, !1);
  }
  function Ne(l, c) {
    et(l, c);
    var g = pe(c.value), x = c.type;
    if (g != null) x === "number" ? (g === 0 && l.value === "" || l.value != g) && (l.value = "" + g) : l.value !== "" + g && (l.value = "" + g);
    else if (x === "submit" || x === "reset") {
      l.removeAttribute("value");
      return;
    }
    c.hasOwnProperty("value") ? it(l, c.type, g) : c.hasOwnProperty("defaultValue") && it(l, c.type, pe(c.defaultValue)), c.checked == null && c.defaultChecked != null && (l.defaultChecked = !!c.defaultChecked);
  }
  function rt(l, c, g) {
    if (c.hasOwnProperty("value") || c.hasOwnProperty("defaultValue")) {
      var x = c.type;
      if (!(x !== "submit" && x !== "reset" || c.value !== void 0 && c.value !== null)) return;
      c = "" + l._wrapperState.initialValue, g || c === l.value || (l.value = c), l.defaultValue = c;
    }
    g = l.name, g !== "" && (l.name = ""), l.defaultChecked = !!l._wrapperState.initialChecked, g !== "" && (l.name = g);
  }
  function it(l, c, g) {
    (c !== "number" || we(l.ownerDocument) !== l) && (g == null ? l.defaultValue = "" + l._wrapperState.initialValue : l.defaultValue !== "" + g && (l.defaultValue = "" + g));
  }
  var wt = Array.isArray;
  function gt(l, c, g, x) {
    if (l = l.options, c) {
      c = {};
      for (var P = 0; P < g.length; P++) c["$" + g[P]] = !0;
      for (g = 0; g < l.length; g++) P = c.hasOwnProperty("$" + l[g].value), l[g].selected !== P && (l[g].selected = P), P && x && (l[g].defaultSelected = !0);
    } else {
      for (g = "" + pe(g), c = null, P = 0; P < l.length; P++) {
        if (l[P].value === g) {
          l[P].selected = !0, x && (l[P].defaultSelected = !0);
          return;
        }
        c !== null || l[P].disabled || (c = l[P]);
      }
      c !== null && (c.selected = !0);
    }
  }
  function ot(l, c) {
    if (c.dangerouslySetInnerHTML != null) throw Error(n(91));
    return X({}, c, { value: void 0, defaultValue: void 0, children: "" + l._wrapperState.initialValue });
  }
  function jt(l, c) {
    var g = c.value;
    if (g == null) {
      if (g = c.children, c = c.defaultValue, g != null) {
        if (c != null) throw Error(n(92));
        if (wt(g)) {
          if (1 < g.length) throw Error(n(93));
          g = g[0];
        }
        c = g;
      }
      c == null && (c = ""), g = c;
    }
    l._wrapperState = { initialValue: pe(g) };
  }
  function ct(l, c) {
    var g = pe(c.value), x = pe(c.defaultValue);
    g != null && (g = "" + g, g !== l.value && (l.value = g), c.defaultValue == null && l.defaultValue !== g && (l.defaultValue = g)), x != null && (l.defaultValue = "" + x);
  }
  function Tt(l) {
    var c = l.textContent;
    c === l._wrapperState.initialValue && c !== "" && c !== null && (l.value = c);
  }
  function Rt(l) {
    switch (l) {
      case "svg":
        return "http://www.w3.org/2000/svg";
      case "math":
        return "http://www.w3.org/1998/Math/MathML";
      default:
        return "http://www.w3.org/1999/xhtml";
    }
  }
  function Lt(l, c) {
    return l == null || l === "http://www.w3.org/1999/xhtml" ? Rt(c) : l === "http://www.w3.org/2000/svg" && c === "foreignObject" ? "http://www.w3.org/1999/xhtml" : l;
  }
  var vt, Qe = function(l) {
    return typeof MSApp < "u" && MSApp.execUnsafeLocalFunction ? function(c, g, x, P) {
      MSApp.execUnsafeLocalFunction(function() {
        return l(c, g, x, P);
      });
    } : l;
  }(function(l, c) {
    if (l.namespaceURI !== "http://www.w3.org/2000/svg" || "innerHTML" in l) l.innerHTML = c;
    else {
      for (vt = vt || document.createElement("div"), vt.innerHTML = "<svg>" + c.valueOf().toString() + "</svg>", c = vt.firstChild; l.firstChild; ) l.removeChild(l.firstChild);
      for (; c.firstChild; ) l.appendChild(c.firstChild);
    }
  });
  function Oe(l, c) {
    if (c) {
      var g = l.firstChild;
      if (g && g === l.lastChild && g.nodeType === 3) {
        g.nodeValue = c;
        return;
      }
    }
    l.textContent = c;
  }
  var Me = {
    animationIterationCount: !0,
    aspectRatio: !0,
    borderImageOutset: !0,
    borderImageSlice: !0,
    borderImageWidth: !0,
    boxFlex: !0,
    boxFlexGroup: !0,
    boxOrdinalGroup: !0,
    columnCount: !0,
    columns: !0,
    flex: !0,
    flexGrow: !0,
    flexPositive: !0,
    flexShrink: !0,
    flexNegative: !0,
    flexOrder: !0,
    gridArea: !0,
    gridRow: !0,
    gridRowEnd: !0,
    gridRowSpan: !0,
    gridRowStart: !0,
    gridColumn: !0,
    gridColumnEnd: !0,
    gridColumnSpan: !0,
    gridColumnStart: !0,
    fontWeight: !0,
    lineClamp: !0,
    lineHeight: !0,
    opacity: !0,
    order: !0,
    orphans: !0,
    tabSize: !0,
    widows: !0,
    zIndex: !0,
    zoom: !0,
    fillOpacity: !0,
    floodOpacity: !0,
    stopOpacity: !0,
    strokeDasharray: !0,
    strokeDashoffset: !0,
    strokeMiterlimit: !0,
    strokeOpacity: !0,
    strokeWidth: !0
  }, ht = ["Webkit", "ms", "Moz", "O"];
  Object.keys(Me).forEach(function(l) {
    ht.forEach(function(c) {
      c = c + l.charAt(0).toUpperCase() + l.substring(1), Me[c] = Me[l];
    });
  });
  function xt(l, c, g) {
    return c == null || typeof c == "boolean" || c === "" ? "" : g || typeof c != "number" || c === 0 || Me.hasOwnProperty(l) && Me[l] ? ("" + c).trim() : c + "px";
  }
  function zt(l, c) {
    l = l.style;
    for (var g in c) if (c.hasOwnProperty(g)) {
      var x = g.indexOf("--") === 0, P = xt(g, c[g], x);
      g === "float" && (g = "cssFloat"), x ? l.setProperty(g, P) : l[g] = P;
    }
  }
  var bt = X({ menuitem: !0 }, { area: !0, base: !0, br: !0, col: !0, embed: !0, hr: !0, img: !0, input: !0, keygen: !0, link: !0, meta: !0, param: !0, source: !0, track: !0, wbr: !0 });
  function Ge(l, c) {
    if (c) {
      if (bt[l] && (c.children != null || c.dangerouslySetInnerHTML != null)) throw Error(n(137, l));
      if (c.dangerouslySetInnerHTML != null) {
        if (c.children != null) throw Error(n(60));
        if (typeof c.dangerouslySetInnerHTML != "object" || !("__html" in c.dangerouslySetInnerHTML)) throw Error(n(61));
      }
      if (c.style != null && typeof c.style != "object") throw Error(n(62));
    }
  }
  function Et(l, c) {
    if (l.indexOf("-") === -1) return typeof c.is == "string";
    switch (l) {
      case "annotation-xml":
      case "color-profile":
      case "font-face":
      case "font-face-src":
      case "font-face-uri":
      case "font-face-format":
      case "font-face-name":
      case "missing-glyph":
        return !1;
      default:
        return !0;
    }
  }
  var At = null;
  function pn(l) {
    return l = l.target || l.srcElement || window, l.correspondingUseElement && (l = l.correspondingUseElement), l.nodeType === 3 ? l.parentNode : l;
  }
  var fn = null, mr = null, qn = null;
  function Nr(l) {
    if (l = tn(l)) {
      if (typeof fn != "function") throw Error(n(280));
      var c = l.stateNode;
      c && (c = Qr(c), fn(l.stateNode, l.type, c));
    }
  }
  function gr(l) {
    mr ? qn ? qn.push(l) : qn = [l] : mr = l;
  }
  function Po() {
    if (mr) {
      var l = mr, c = qn;
      if (qn = mr = null, Nr(l), c) for (l = 0; l < c.length; l++) Nr(c[l]);
    }
  }
  function Mo(l, c) {
    return l(c);
  }
  function Ut() {
  }
  var fr = !1;
  function Ct(l, c, g) {
    if (fr) return l(c, g);
    fr = !0;
    try {
      return Mo(l, c, g);
    } finally {
      fr = !1, (mr !== null || qn !== null) && (Ut(), Po());
    }
  }
  function St(l, c) {
    var g = l.stateNode;
    if (g === null) return null;
    var x = Qr(g);
    if (x === null) return null;
    g = x[c];
    e: switch (c) {
      case "onClick":
      case "onClickCapture":
      case "onDoubleClick":
      case "onDoubleClickCapture":
      case "onMouseDown":
      case "onMouseDownCapture":
      case "onMouseMove":
      case "onMouseMoveCapture":
      case "onMouseUp":
      case "onMouseUpCapture":
      case "onMouseEnter":
        (x = !x.disabled) || (l = l.type, x = !(l === "button" || l === "input" || l === "select" || l === "textarea")), l = !x;
        break e;
      default:
        l = !1;
    }
    if (l) return null;
    if (g && typeof g != "function") throw Error(n(231, c, typeof g));
    return g;
  }
  var en = !1;
  if (p) try {
    var on = {};
    Object.defineProperty(on, "passive", { get: function() {
      en = !0;
    } }), window.addEventListener("test", on, on), window.removeEventListener("test", on, on);
  } catch {
    en = !1;
  }
  function zn(l, c, g, x, P, $, oe, he, Se) {
    var je = Array.prototype.slice.call(arguments, 3);
    try {
      c.apply(g, je);
    } catch (lt) {
      this.onError(lt);
    }
  }
  var Ar = !1, ro = null, mo = !1, ve = null, We = { onError: function(l) {
    Ar = !0, ro = l;
  } };
  function pt(l, c, g, x, P, $, oe, he, Se) {
    Ar = !1, ro = null, zn.apply(We, arguments);
  }
  function Ot(l, c, g, x, P, $, oe, he, Se) {
    if (pt.apply(this, arguments), Ar) {
      if (Ar) {
        var je = ro;
        Ar = !1, ro = null;
      } else throw Error(n(198));
      mo || (mo = !0, ve = je);
    }
  }
  function gn(l) {
    var c = l, g = l;
    if (l.alternate) for (; c.return; ) c = c.return;
    else {
      l = c;
      do
        c = l, c.flags & 4098 && (g = c.return), l = c.return;
      while (l);
    }
    return c.tag === 3 ? g : null;
  }
  function Le(l) {
    if (l.tag === 13) {
      var c = l.memoizedState;
      if (c === null && (l = l.alternate, l !== null && (c = l.memoizedState)), c !== null) return c.dehydrated;
    }
    return null;
  }
  function ke(l) {
    if (gn(l) !== l) throw Error(n(188));
  }
  function Ze(l) {
    var c = l.alternate;
    if (!c) {
      if (c = gn(l), c === null) throw Error(n(188));
      return c !== l ? null : l;
    }
    for (var g = l, x = c; ; ) {
      var P = g.return;
      if (P === null) break;
      var $ = P.alternate;
      if ($ === null) {
        if (x = P.return, x !== null) {
          g = x;
          continue;
        }
        break;
      }
      if (P.child === $.child) {
        for ($ = P.child; $; ) {
          if ($ === g) return ke(P), l;
          if ($ === x) return ke(P), c;
          $ = $.sibling;
        }
        throw Error(n(188));
      }
      if (g.return !== x.return) g = P, x = $;
      else {
        for (var oe = !1, he = P.child; he; ) {
          if (he === g) {
            oe = !0, g = P, x = $;
            break;
          }
          if (he === x) {
            oe = !0, x = P, g = $;
            break;
          }
          he = he.sibling;
        }
        if (!oe) {
          for (he = $.child; he; ) {
            if (he === g) {
              oe = !0, g = $, x = P;
              break;
            }
            if (he === x) {
              oe = !0, x = $, g = P;
              break;
            }
            he = he.sibling;
          }
          if (!oe) throw Error(n(189));
        }
      }
      if (g.alternate !== x) throw Error(n(190));
    }
    if (g.tag !== 3) throw Error(n(188));
    return g.stateNode.current === g ? l : c;
  }
  function Gt(l) {
    return l = Ze(l), l !== null ? Bt(l) : null;
  }
  function Bt(l) {
    if (l.tag === 5 || l.tag === 6) return l;
    for (l = l.child; l !== null; ) {
      var c = Bt(l);
      if (c !== null) return c;
      l = l.sibling;
    }
    return null;
  }
  var Qt = t.unstable_scheduleCallback, Hn = t.unstable_cancelCallback, Lr = t.unstable_shouldYield, Wo = t.unstable_requestPaint, En = t.unstable_now, Rn = t.unstable_getCurrentPriorityLevel, di = t.unstable_ImmediatePriority, Ta = t.unstable_UserBlockingPriority, _n = t.unstable_NormalPriority, Io = t.unstable_LowPriority, Si = t.unstable_IdlePriority, Hi = null, fi = null;
  function Pf(l) {
    if (fi && typeof fi.onCommitFiberRoot == "function") try {
      fi.onCommitFiberRoot(Hi, l, void 0, (l.current.flags & 128) === 128);
    } catch {
    }
  }
  var wi = Math.clz32 ? Math.clz32 : nd, wh = Math.log, xh = Math.LN2;
  function nd(l) {
    return l >>>= 0, l === 0 ? 32 : 31 - (wh(l) / xh | 0) | 0;
  }
  var Kl = 64, la = 4194304;
  function Xa(l) {
    switch (l & -l) {
      case 1:
        return 1;
      case 2:
        return 2;
      case 4:
        return 4;
      case 8:
        return 8;
      case 16:
        return 16;
      case 32:
        return 32;
      case 64:
      case 128:
      case 256:
      case 512:
      case 1024:
      case 2048:
      case 4096:
      case 8192:
      case 16384:
      case 32768:
      case 65536:
      case 131072:
      case 262144:
      case 524288:
      case 1048576:
      case 2097152:
        return l & 4194240;
      case 4194304:
      case 8388608:
      case 16777216:
      case 33554432:
      case 67108864:
        return l & 130023424;
      case 134217728:
        return 134217728;
      case 268435456:
        return 268435456;
      case 536870912:
        return 536870912;
      case 1073741824:
        return 1073741824;
      default:
        return l;
    }
  }
  function Qa(l, c) {
    var g = l.pendingLanes;
    if (g === 0) return 0;
    var x = 0, P = l.suspendedLanes, $ = l.pingedLanes, oe = g & 268435455;
    if (oe !== 0) {
      var he = oe & ~P;
      he !== 0 ? x = Xa(he) : ($ &= oe, $ !== 0 && (x = Xa($)));
    } else oe = g & ~P, oe !== 0 ? x = Xa(oe) : $ !== 0 && (x = Xa($));
    if (x === 0) return 0;
    if (c !== 0 && c !== x && !(c & P) && (P = x & -x, $ = c & -c, P >= $ || P === 16 && ($ & 4194240) !== 0)) return c;
    if (x & 4 && (x |= g & 16), c = l.entangledLanes, c !== 0) for (l = l.entanglements, c &= x; 0 < c; ) g = 31 - wi(c), P = 1 << g, x |= l[g], c &= ~P;
    return x;
  }
  function rd(l, c) {
    switch (l) {
      case 1:
      case 2:
      case 4:
        return c + 250;
      case 8:
      case 16:
      case 32:
      case 64:
      case 128:
      case 256:
      case 512:
      case 1024:
      case 2048:
      case 4096:
      case 8192:
      case 16384:
      case 32768:
      case 65536:
      case 131072:
      case 262144:
      case 524288:
      case 1048576:
      case 2097152:
        return c + 5e3;
      case 4194304:
      case 8388608:
      case 16777216:
      case 33554432:
      case 67108864:
        return -1;
      case 134217728:
      case 268435456:
      case 536870912:
      case 1073741824:
        return -1;
      default:
        return -1;
    }
  }
  function Ju(l, c) {
    for (var g = l.suspendedLanes, x = l.pingedLanes, P = l.expirationTimes, $ = l.pendingLanes; 0 < $; ) {
      var oe = 31 - wi($), he = 1 << oe, Se = P[oe];
      Se === -1 ? (!(he & g) || he & x) && (P[oe] = rd(he, c)) : Se <= c && (l.expiredLanes |= he), $ &= ~he;
    }
  }
  function Yl(l) {
    return l = l.pendingLanes & -1073741825, l !== 0 ? l : l & 1073741824 ? 1073741824 : 0;
  }
  function od() {
    var l = Kl;
    return Kl <<= 1, !(Kl & 4194240) && (Kl = 64), l;
  }
  function id(l) {
    for (var c = [], g = 0; 31 > g; g++) c.push(l);
    return c;
  }
  function ul(l, c, g) {
    l.pendingLanes |= c, c !== 536870912 && (l.suspendedLanes = 0, l.pingedLanes = 0), l = l.eventTimes, c = 31 - wi(c), l[c] = g;
  }
  function gv(l, c) {
    var g = l.pendingLanes & ~c;
    l.pendingLanes = c, l.suspendedLanes = 0, l.pingedLanes = 0, l.expiredLanes &= c, l.mutableReadLanes &= c, l.entangledLanes &= c, c = l.entanglements;
    var x = l.eventTimes;
    for (l = l.expirationTimes; 0 < g; ) {
      var P = 31 - wi(g), $ = 1 << P;
      c[P] = 0, x[P] = -1, l[P] = -1, g &= ~$;
    }
  }
  function cl(l, c) {
    var g = l.entangledLanes |= c;
    for (l = l.entanglements; g; ) {
      var x = 31 - wi(g), P = 1 << x;
      P & c | l[x] & c && (l[x] |= c), g &= ~P;
    }
  }
  var ir = 0;
  function ad(l) {
    return l &= -l, 1 < l ? 4 < l ? l & 268435455 ? 16 : 536870912 : 4 : 1;
  }
  var Zn, Mf, Ss, Sn, sd, qo = !1, ws = [], xi = null, xs = null, Br = null, wr = /* @__PURE__ */ new Map(), Xl = /* @__PURE__ */ new Map(), Do = [], Ei = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");
  function Ra(l, c) {
    switch (l) {
      case "focusin":
      case "focusout":
        xi = null;
        break;
      case "dragenter":
      case "dragleave":
        xs = null;
        break;
      case "mouseover":
      case "mouseout":
        Br = null;
        break;
      case "pointerover":
      case "pointerout":
        wr.delete(c.pointerId);
        break;
      case "gotpointercapture":
      case "lostpointercapture":
        Xl.delete(c.pointerId);
    }
  }
  function Zu(l, c, g, x, P, $) {
    return l === null || l.nativeEvent !== $ ? (l = { blockedOn: c, domEventName: g, eventSystemFlags: x, nativeEvent: $, targetContainers: [P] }, c !== null && (c = tn(c), c !== null && Mf(c)), l) : (l.eventSystemFlags |= x, c = l.targetContainers, P !== null && c.indexOf(P) === -1 && c.push(P), l);
  }
  function If(l, c, g, x, P) {
    switch (c) {
      case "focusin":
        return xi = Zu(xi, l, c, g, x, P), !0;
      case "dragenter":
        return xs = Zu(xs, l, c, g, x, P), !0;
      case "mouseover":
        return Br = Zu(Br, l, c, g, x, P), !0;
      case "pointerover":
        var $ = P.pointerId;
        return wr.set($, Zu(wr.get($) || null, l, c, g, x, P)), !0;
      case "gotpointercapture":
        return $ = P.pointerId, Xl.set($, Zu(Xl.get($) || null, l, c, g, x, P)), !0;
    }
    return !1;
  }
  function Df(l) {
    var c = lc(l.target);
    if (c !== null) {
      var g = gn(c);
      if (g !== null) {
        if (c = g.tag, c === 13) {
          if (c = Le(g), c !== null) {
            l.blockedOn = c, sd(l.priority, function() {
              Ss(g);
            });
            return;
          }
        } else if (c === 3 && g.stateNode.current.memoizedState.isDehydrated) {
          l.blockedOn = g.tag === 3 ? g.stateNode.containerInfo : null;
          return;
        }
      }
    }
    l.blockedOn = null;
  }
  function Ql(l) {
    if (l.blockedOn !== null) return !1;
    for (var c = l.targetContainers; 0 < c.length; ) {
      var g = cd(l.domEventName, l.eventSystemFlags, c[0], l.nativeEvent);
      if (g === null) {
        g = l.nativeEvent;
        var x = new g.constructor(g.type, g);
        At = x, g.target.dispatchEvent(x), At = null;
      } else return c = tn(g), c !== null && Mf(c), l.blockedOn = g, !1;
      c.shift();
    }
    return !0;
  }
  function ec(l, c, g) {
    Ql(l) && g.delete(c);
  }
  function vv() {
    qo = !1, xi !== null && Ql(xi) && (xi = null), xs !== null && Ql(xs) && (xs = null), Br !== null && Ql(Br) && (Br = null), wr.forEach(ec), Xl.forEach(ec);
  }
  function Oa(l, c) {
    l.blockedOn === c && (l.blockedOn = null, qo || (qo = !0, t.unstable_scheduleCallback(t.unstable_NormalPriority, vv)));
  }
  function Ja(l) {
    function c(P) {
      return Oa(P, l);
    }
    if (0 < ws.length) {
      Oa(ws[0], l);
      for (var g = 1; g < ws.length; g++) {
        var x = ws[g];
        x.blockedOn === l && (x.blockedOn = null);
      }
    }
    for (xi !== null && Oa(xi, l), xs !== null && Oa(xs, l), Br !== null && Oa(Br, l), wr.forEach(c), Xl.forEach(c), g = 0; g < Do.length; g++) x = Do[g], x.blockedOn === l && (x.blockedOn = null);
    for (; 0 < Do.length && (g = Do[0], g.blockedOn === null); ) Df(g), g.blockedOn === null && Do.shift();
  }
  var Es = M.ReactCurrentBatchConfig, ka = !0;
  function ld(l, c, g, x) {
    var P = ir, $ = Es.transition;
    Es.transition = null;
    try {
      ir = 1, Jl(l, c, g, x);
    } finally {
      ir = P, Es.transition = $;
    }
  }
  function ud(l, c, g, x) {
    var P = ir, $ = Es.transition;
    Es.transition = null;
    try {
      ir = 4, Jl(l, c, g, x);
    } finally {
      ir = P, Es.transition = $;
    }
  }
  function Jl(l, c, g, x) {
    if (ka) {
      var P = cd(l, c, g, x);
      if (P === null) Fh(l, c, x, tc, g), Ra(l, x);
      else if (If(P, l, c, g, x)) x.stopPropagation();
      else if (Ra(l, x), c & 4 && -1 < Ei.indexOf(l)) {
        for (; P !== null; ) {
          var $ = tn(P);
          if ($ !== null && Zn($), $ = cd(l, c, g, x), $ === null && Fh(l, c, x, tc, g), $ === P) break;
          P = $;
        }
        P !== null && x.stopPropagation();
      } else Fh(l, c, x, null, g);
    }
  }
  var tc = null;
  function cd(l, c, g, x) {
    if (tc = null, l = pn(x), l = lc(l), l !== null) if (c = gn(l), c === null) l = null;
    else if (g = c.tag, g === 13) {
      if (l = Le(c), l !== null) return l;
      l = null;
    } else if (g === 3) {
      if (c.stateNode.current.memoizedState.isDehydrated) return c.tag === 3 ? c.stateNode.containerInfo : null;
      l = null;
    } else c !== l && (l = null);
    return tc = l, null;
  }
  function dd(l) {
    switch (l) {
      case "cancel":
      case "click":
      case "close":
      case "contextmenu":
      case "copy":
      case "cut":
      case "auxclick":
      case "dblclick":
      case "dragend":
      case "dragstart":
      case "drop":
      case "focusin":
      case "focusout":
      case "input":
      case "invalid":
      case "keydown":
      case "keypress":
      case "keyup":
      case "mousedown":
      case "mouseup":
      case "paste":
      case "pause":
      case "play":
      case "pointercancel":
      case "pointerdown":
      case "pointerup":
      case "ratechange":
      case "reset":
      case "resize":
      case "seeked":
      case "submit":
      case "touchcancel":
      case "touchend":
      case "touchstart":
      case "volumechange":
      case "change":
      case "selectionchange":
      case "textInput":
      case "compositionstart":
      case "compositionend":
      case "compositionupdate":
      case "beforeblur":
      case "afterblur":
      case "beforeinput":
      case "blur":
      case "fullscreenchange":
      case "focus":
      case "hashchange":
      case "popstate":
      case "select":
      case "selectstart":
        return 1;
      case "drag":
      case "dragenter":
      case "dragexit":
      case "dragleave":
      case "dragover":
      case "mousemove":
      case "mouseout":
      case "mouseover":
      case "pointermove":
      case "pointerout":
      case "pointerover":
      case "scroll":
      case "toggle":
      case "touchmove":
      case "wheel":
      case "mouseenter":
      case "mouseleave":
      case "pointerenter":
      case "pointerleave":
        return 4;
      case "message":
        switch (Rn()) {
          case di:
            return 1;
          case Ta:
            return 4;
          case _n:
          case Io:
            return 16;
          case Si:
            return 536870912;
          default:
            return 16;
        }
      default:
        return 16;
    }
  }
  var Za = null, te = null, ye = null;
  function $e() {
    if (ye) return ye;
    var l, c = te, g = c.length, x, P = "value" in Za ? Za.value : Za.textContent, $ = P.length;
    for (l = 0; l < g && c[l] === P[l]; l++) ;
    var oe = g - l;
    for (x = 1; x <= oe && c[g - x] === P[$ - x]; x++) ;
    return ye = P.slice(l, 1 < x ? 1 - x : void 0);
  }
  function Ve(l) {
    var c = l.keyCode;
    return "charCode" in l ? (l = l.charCode, l === 0 && c === 13 && (l = 13)) : l = c, l === 10 && (l = 13), 32 <= l || l === 13 ? l : 0;
  }
  function mt() {
    return !0;
  }
  function sn() {
    return !1;
  }
  function Pt(l) {
    function c(g, x, P, $, oe) {
      this._reactName = g, this._targetInst = P, this.type = x, this.nativeEvent = $, this.target = oe, this.currentTarget = null;
      for (var he in l) l.hasOwnProperty(he) && (g = l[he], this[he] = g ? g($) : $[he]);
      return this.isDefaultPrevented = ($.defaultPrevented != null ? $.defaultPrevented : $.returnValue === !1) ? mt : sn, this.isPropagationStopped = sn, this;
    }
    return X(c.prototype, { preventDefault: function() {
      this.defaultPrevented = !0;
      var g = this.nativeEvent;
      g && (g.preventDefault ? g.preventDefault() : typeof g.returnValue != "unknown" && (g.returnValue = !1), this.isDefaultPrevented = mt);
    }, stopPropagation: function() {
      var g = this.nativeEvent;
      g && (g.stopPropagation ? g.stopPropagation() : typeof g.cancelBubble != "unknown" && (g.cancelBubble = !0), this.isPropagationStopped = mt);
    }, persist: function() {
    }, isPersistent: mt }), c;
  }
  var cn = { eventPhase: 0, bubbles: 0, cancelable: 0, timeStamp: function(l) {
    return l.timeStamp || Date.now();
  }, defaultPrevented: 0, isTrusted: 0 }, An = Pt(cn), er = X({}, cn, { view: 0, detail: 0 }), $r = Pt(er), xr, Dn, Er, Xr = X({}, er, { screenX: 0, screenY: 0, clientX: 0, clientY: 0, pageX: 0, pageY: 0, ctrlKey: 0, shiftKey: 0, altKey: 0, metaKey: 0, getModifierState: wv, button: 0, buttons: 0, relatedTarget: function(l) {
    return l.relatedTarget === void 0 ? l.fromElement === l.srcElement ? l.toElement : l.fromElement : l.relatedTarget;
  }, movementX: function(l) {
    return "movementX" in l ? l.movementX : (l !== Er && (Er && l.type === "mousemove" ? (xr = l.screenX - Er.screenX, Dn = l.screenY - Er.screenY) : Dn = xr = 0, Er = l), xr);
  }, movementY: function(l) {
    return "movementY" in l ? l.movementY : Dn;
  } }), Zl = Pt(Xr), Nf = X({}, Xr, { dataTransfer: 0 }), dl = Pt(Nf), Lf = X({}, er, { relatedTarget: 0 }), nc = Pt(Lf), yv = X({}, cn, { animationName: 0, elapsedTime: 0, pseudoElement: 0 }), Eh = Pt(yv), bv = X({}, cn, { clipboardData: function(l) {
    return "clipboardData" in l ? l.clipboardData : window.clipboardData;
  } }), QC = Pt(bv), Cv = X({}, cn, { data: 0 }), Sv = Pt(Cv), JC = {
    Esc: "Escape",
    Spacebar: " ",
    Left: "ArrowLeft",
    Up: "ArrowUp",
    Right: "ArrowRight",
    Down: "ArrowDown",
    Del: "Delete",
    Win: "OS",
    Menu: "ContextMenu",
    Apps: "ContextMenu",
    Scroll: "ScrollLock",
    MozPrintableKey: "Unidentified"
  }, ZC = {
    8: "Backspace",
    9: "Tab",
    12: "Clear",
    13: "Enter",
    16: "Shift",
    17: "Control",
    18: "Alt",
    19: "Pause",
    20: "CapsLock",
    27: "Escape",
    32: " ",
    33: "PageUp",
    34: "PageDown",
    35: "End",
    36: "Home",
    37: "ArrowLeft",
    38: "ArrowUp",
    39: "ArrowRight",
    40: "ArrowDown",
    45: "Insert",
    46: "Delete",
    112: "F1",
    113: "F2",
    114: "F3",
    115: "F4",
    116: "F5",
    117: "F6",
    118: "F7",
    119: "F8",
    120: "F9",
    121: "F10",
    122: "F11",
    123: "F12",
    144: "NumLock",
    145: "ScrollLock",
    224: "Meta"
  }, YE = { Alt: "altKey", Control: "ctrlKey", Meta: "metaKey", Shift: "shiftKey" };
  function fl(l) {
    var c = this.nativeEvent;
    return c.getModifierState ? c.getModifierState(l) : (l = YE[l]) ? !!c[l] : !1;
  }
  function wv() {
    return fl;
  }
  var xv = X({}, er, { key: function(l) {
    if (l.key) {
      var c = JC[l.key] || l.key;
      if (c !== "Unidentified") return c;
    }
    return l.type === "keypress" ? (l = Ve(l), l === 13 ? "Enter" : String.fromCharCode(l)) : l.type === "keydown" || l.type === "keyup" ? ZC[l.keyCode] || "Unidentified" : "";
  }, code: 0, location: 0, ctrlKey: 0, shiftKey: 0, altKey: 0, metaKey: 0, repeat: 0, locale: 0, getModifierState: wv, charCode: function(l) {
    return l.type === "keypress" ? Ve(l) : 0;
  }, keyCode: function(l) {
    return l.type === "keydown" || l.type === "keyup" ? l.keyCode : 0;
  }, which: function(l) {
    return l.type === "keypress" ? Ve(l) : l.type === "keydown" || l.type === "keyup" ? l.keyCode : 0;
  } }), Ev = Pt(xv), Tv = X({}, Xr, { pointerId: 0, width: 0, height: 0, pressure: 0, tangentialPressure: 0, tiltX: 0, tiltY: 0, twist: 0, pointerType: 0, isPrimary: 0 }), eS = Pt(Tv), Th = X({}, er, { touches: 0, targetTouches: 0, changedTouches: 0, altKey: 0, metaKey: 0, ctrlKey: 0, shiftKey: 0, getModifierState: wv }), tS = Pt(Th), Vi = X({}, cn, { propertyName: 0, elapsedTime: 0, pseudoElement: 0 }), pl = Pt(Vi), go = X({}, Xr, {
    deltaX: function(l) {
      return "deltaX" in l ? l.deltaX : "wheelDeltaX" in l ? -l.wheelDeltaX : 0;
    },
    deltaY: function(l) {
      return "deltaY" in l ? l.deltaY : "wheelDeltaY" in l ? -l.wheelDeltaY : "wheelDelta" in l ? -l.wheelDelta : 0;
    },
    deltaZ: 0,
    deltaMode: 0
  }), hl = Pt(go), Rv = [9, 13, 27, 32], fd = p && "CompositionEvent" in window, Ff = null;
  p && "documentMode" in document && (Ff = document.documentMode);
  var _f = p && "TextEvent" in window && !Ff, nS = p && (!fd || Ff && 8 < Ff && 11 >= Ff), rS = " ", Rh = !1;
  function oS(l, c) {
    switch (l) {
      case "keyup":
        return Rv.indexOf(c.keyCode) !== -1;
      case "keydown":
        return c.keyCode !== 229;
      case "keypress":
      case "mousedown":
      case "focusout":
        return !0;
      default:
        return !1;
    }
  }
  function iS(l) {
    return l = l.detail, typeof l == "object" && "data" in l ? l.data : null;
  }
  var pd = !1;
  function aS(l, c) {
    switch (l) {
      case "compositionend":
        return iS(c);
      case "keypress":
        return c.which !== 32 ? null : (Rh = !0, rS);
      case "textInput":
        return l = c.data, l === rS && Rh ? null : l;
      default:
        return null;
    }
  }
  function XE(l, c) {
    if (pd) return l === "compositionend" || !fd && oS(l, c) ? (l = $e(), ye = te = Za = null, pd = !1, l) : null;
    switch (l) {
      case "paste":
        return null;
      case "keypress":
        if (!(c.ctrlKey || c.altKey || c.metaKey) || c.ctrlKey && c.altKey) {
          if (c.char && 1 < c.char.length) return c.char;
          if (c.which) return String.fromCharCode(c.which);
        }
        return null;
      case "compositionend":
        return nS && c.locale !== "ko" ? null : c.data;
      default:
        return null;
    }
  }
  var QE = { color: !0, date: !0, datetime: !0, "datetime-local": !0, email: !0, month: !0, number: !0, password: !0, range: !0, search: !0, tel: !0, text: !0, time: !0, url: !0, week: !0 };
  function sS(l) {
    var c = l && l.nodeName && l.nodeName.toLowerCase();
    return c === "input" ? !!QE[l.type] : c === "textarea";
  }
  function Ov(l, c, g, x) {
    gr(x), c = Vf(c, "onChange"), 0 < c.length && (g = new An("onChange", "change", null, g, x), l.push({ event: g, listeners: c }));
  }
  var Ts = null, rc = null;
  function lS(l) {
    ac(l, 0);
  }
  function Af(l) {
    var c = ts(l);
    if (ue(c)) return l;
  }
  function JE(l, c) {
    if (l === "change") return c;
  }
  var uS = !1;
  if (p) {
    var kv;
    if (p) {
      var Pv = "oninput" in document;
      if (!Pv) {
        var cS = document.createElement("div");
        cS.setAttribute("oninput", "return;"), Pv = typeof cS.oninput == "function";
      }
      kv = Pv;
    } else kv = !1;
    uS = kv && (!document.documentMode || 9 < document.documentMode);
  }
  function dS() {
    Ts && (Ts.detachEvent("onpropertychange", fS), rc = Ts = null);
  }
  function fS(l) {
    if (l.propertyName === "value" && Af(rc)) {
      var c = [];
      Ov(c, rc, l, pn(l)), Ct(lS, c);
    }
  }
  function ZE(l, c, g) {
    l === "focusin" ? (dS(), Ts = c, rc = g, Ts.attachEvent("onpropertychange", fS)) : l === "focusout" && dS();
  }
  function pS(l) {
    if (l === "selectionchange" || l === "keyup" || l === "keydown") return Af(rc);
  }
  function eT(l, c) {
    if (l === "click") return Af(c);
  }
  function hS(l, c) {
    if (l === "input" || l === "change") return Af(c);
  }
  function tT(l, c) {
    return l === c && (l !== 0 || 1 / l === 1 / c) || l !== l && c !== c;
  }
  var es = typeof Object.is == "function" ? Object.is : tT;
  function $f(l, c) {
    if (es(l, c)) return !0;
    if (typeof l != "object" || l === null || typeof c != "object" || c === null) return !1;
    var g = Object.keys(l), x = Object.keys(c);
    if (g.length !== x.length) return !1;
    for (x = 0; x < g.length; x++) {
      var P = g[x];
      if (!m.call(c, P) || !es(l[P], c[P])) return !1;
    }
    return !0;
  }
  function mS(l) {
    for (; l && l.firstChild; ) l = l.firstChild;
    return l;
  }
  function Oh(l, c) {
    var g = mS(l);
    l = 0;
    for (var x; g; ) {
      if (g.nodeType === 3) {
        if (x = l + g.textContent.length, l <= c && x >= c) return { node: g, offset: c - l };
        l = x;
      }
      e: {
        for (; g; ) {
          if (g.nextSibling) {
            g = g.nextSibling;
            break e;
          }
          g = g.parentNode;
        }
        g = void 0;
      }
      g = mS(g);
    }
  }
  function eu(l, c) {
    return l && c ? l === c ? !0 : l && l.nodeType === 3 ? !1 : c && c.nodeType === 3 ? eu(l, c.parentNode) : "contains" in l ? l.contains(c) : l.compareDocumentPosition ? !!(l.compareDocumentPosition(c) & 16) : !1 : !1;
  }
  function jf() {
    for (var l = window, c = we(); c instanceof l.HTMLIFrameElement; ) {
      try {
        var g = typeof c.contentWindow.location.href == "string";
      } catch {
        g = !1;
      }
      if (g) l = c.contentWindow;
      else break;
      c = we(l.document);
    }
    return c;
  }
  function kh(l) {
    var c = l && l.nodeName && l.nodeName.toLowerCase();
    return c && (c === "input" && (l.type === "text" || l.type === "search" || l.type === "tel" || l.type === "url" || l.type === "password") || c === "textarea" || l.contentEditable === "true");
  }
  function hd(l) {
    var c = jf(), g = l.focusedElem, x = l.selectionRange;
    if (c !== g && g && g.ownerDocument && eu(g.ownerDocument.documentElement, g)) {
      if (x !== null && kh(g)) {
        if (c = x.start, l = x.end, l === void 0 && (l = c), "selectionStart" in g) g.selectionStart = c, g.selectionEnd = Math.min(l, g.value.length);
        else if (l = (c = g.ownerDocument || document) && c.defaultView || window, l.getSelection) {
          l = l.getSelection();
          var P = g.textContent.length, $ = Math.min(x.start, P);
          x = x.end === void 0 ? $ : Math.min(x.end, P), !l.extend && $ > x && (P = x, x = $, $ = P), P = Oh(g, $);
          var oe = Oh(
            g,
            x
          );
          P && oe && (l.rangeCount !== 1 || l.anchorNode !== P.node || l.anchorOffset !== P.offset || l.focusNode !== oe.node || l.focusOffset !== oe.offset) && (c = c.createRange(), c.setStart(P.node, P.offset), l.removeAllRanges(), $ > x ? (l.addRange(c), l.extend(oe.node, oe.offset)) : (c.setEnd(oe.node, oe.offset), l.addRange(c)));
        }
      }
      for (c = [], l = g; l = l.parentNode; ) l.nodeType === 1 && c.push({ element: l, left: l.scrollLeft, top: l.scrollTop });
      for (typeof g.focus == "function" && g.focus(), g = 0; g < c.length; g++) l = c[g], l.element.scrollLeft = l.left, l.element.scrollTop = l.top;
    }
  }
  var nT = p && "documentMode" in document && 11 >= document.documentMode, md = null, Mv = null, zf = null, Iv = !1;
  function Dv(l, c, g) {
    var x = g.window === g ? g.document : g.nodeType === 9 ? g : g.ownerDocument;
    Iv || md == null || md !== we(x) || (x = md, "selectionStart" in x && kh(x) ? x = { start: x.selectionStart, end: x.selectionEnd } : (x = (x.ownerDocument && x.ownerDocument.defaultView || window).getSelection(), x = { anchorNode: x.anchorNode, anchorOffset: x.anchorOffset, focusNode: x.focusNode, focusOffset: x.focusOffset }), zf && $f(zf, x) || (zf = x, x = Vf(Mv, "onSelect"), 0 < x.length && (c = new An("onSelect", "select", null, c, g), l.push({ event: c, listeners: x }), c.target = md)));
  }
  function Ph(l, c) {
    var g = {};
    return g[l.toLowerCase()] = c.toLowerCase(), g["Webkit" + l] = "webkit" + c, g["Moz" + l] = "moz" + c, g;
  }
  var oc = { animationend: Ph("Animation", "AnimationEnd"), animationiteration: Ph("Animation", "AnimationIteration"), animationstart: Ph("Animation", "AnimationStart"), transitionend: Ph("Transition", "TransitionEnd") }, Ko = {}, Nv = {};
  p && (Nv = document.createElement("div").style, "AnimationEvent" in window || (delete oc.animationend.animation, delete oc.animationiteration.animation, delete oc.animationstart.animation), "TransitionEvent" in window || delete oc.transitionend.transition);
  function Mh(l) {
    if (Ko[l]) return Ko[l];
    if (!oc[l]) return l;
    var c = oc[l], g;
    for (g in c) if (c.hasOwnProperty(g) && g in Nv) return Ko[l] = c[g];
    return l;
  }
  var gS = Mh("animationend"), vS = Mh("animationiteration"), yS = Mh("animationstart"), bS = Mh("transitionend"), Lv = /* @__PURE__ */ new Map(), Ih = "abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");
  function Pa(l, c) {
    Lv.set(l, c), u(c, [l]);
  }
  for (var Fv = 0; Fv < Ih.length; Fv++) {
    var ic = Ih[Fv], rT = ic.toLowerCase(), oT = ic[0].toUpperCase() + ic.slice(1);
    Pa(rT, "on" + oT);
  }
  Pa(gS, "onAnimationEnd"), Pa(vS, "onAnimationIteration"), Pa(yS, "onAnimationStart"), Pa("dblclick", "onDoubleClick"), Pa("focusin", "onFocus"), Pa("focusout", "onBlur"), Pa(bS, "onTransitionEnd"), d("onMouseEnter", ["mouseout", "mouseover"]), d("onMouseLeave", ["mouseout", "mouseover"]), d("onPointerEnter", ["pointerout", "pointerover"]), d("onPointerLeave", ["pointerout", "pointerover"]), u("onChange", "change click focusin focusout input keydown keyup selectionchange".split(" ")), u("onSelect", "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")), u("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]), u("onCompositionEnd", "compositionend focusout keydown keypress keyup mousedown".split(" ")), u("onCompositionStart", "compositionstart focusout keydown keypress keyup mousedown".split(" ")), u("onCompositionUpdate", "compositionupdate focusout keydown keypress keyup mousedown".split(" "));
  var Hf = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "), _v = new Set("cancel close invalid load scroll toggle".split(" ").concat(Hf));
  function Dh(l, c, g) {
    var x = l.type || "unknown-event";
    l.currentTarget = g, Ot(x, c, void 0, l), l.currentTarget = null;
  }
  function ac(l, c) {
    c = (c & 4) !== 0;
    for (var g = 0; g < l.length; g++) {
      var x = l[g], P = x.event;
      x = x.listeners;
      e: {
        var $ = void 0;
        if (c) for (var oe = x.length - 1; 0 <= oe; oe--) {
          var he = x[oe], Se = he.instance, je = he.currentTarget;
          if (he = he.listener, Se !== $ && P.isPropagationStopped()) break e;
          Dh(P, he, je), $ = Se;
        }
        else for (oe = 0; oe < x.length; oe++) {
          if (he = x[oe], Se = he.instance, je = he.currentTarget, he = he.listener, Se !== $ && P.isPropagationStopped()) break e;
          Dh(P, he, je), $ = Se;
        }
      }
    }
    if (mo) throw l = ve, mo = !1, ve = null, l;
  }
  function pr(l, c) {
    var g = c[Gf];
    g === void 0 && (g = c[Gf] = /* @__PURE__ */ new Set());
    var x = l + "__bubble";
    g.has(x) || (CS(c, l, 2, !1), g.add(x));
  }
  function Nh(l, c, g) {
    var x = 0;
    c && (x |= 4), CS(g, l, x, c);
  }
  var Lh = "_reactListening" + Math.random().toString(36).slice(2);
  function gd(l) {
    if (!l[Lh]) {
      l[Lh] = !0, i.forEach(function(g) {
        g !== "selectionchange" && (_v.has(g) || Nh(g, !1, l), Nh(g, !0, l));
      });
      var c = l.nodeType === 9 ? l : l.ownerDocument;
      c === null || c[Lh] || (c[Lh] = !0, Nh("selectionchange", !1, c));
    }
  }
  function CS(l, c, g, x) {
    switch (dd(c)) {
      case 1:
        var P = ld;
        break;
      case 4:
        P = ud;
        break;
      default:
        P = Jl;
    }
    g = P.bind(null, c, g, l), P = void 0, !en || c !== "touchstart" && c !== "touchmove" && c !== "wheel" || (P = !0), x ? P !== void 0 ? l.addEventListener(c, g, { capture: !0, passive: P }) : l.addEventListener(c, g, !0) : P !== void 0 ? l.addEventListener(c, g, { passive: P }) : l.addEventListener(c, g, !1);
  }
  function Fh(l, c, g, x, P) {
    var $ = x;
    if (!(c & 1) && !(c & 2) && x !== null) e: for (; ; ) {
      if (x === null) return;
      var oe = x.tag;
      if (oe === 3 || oe === 4) {
        var he = x.stateNode.containerInfo;
        if (he === P || he.nodeType === 8 && he.parentNode === P) break;
        if (oe === 4) for (oe = x.return; oe !== null; ) {
          var Se = oe.tag;
          if ((Se === 3 || Se === 4) && (Se = oe.stateNode.containerInfo, Se === P || Se.nodeType === 8 && Se.parentNode === P)) return;
          oe = oe.return;
        }
        for (; he !== null; ) {
          if (oe = lc(he), oe === null) return;
          if (Se = oe.tag, Se === 5 || Se === 6) {
            x = $ = oe;
            continue e;
          }
          he = he.parentNode;
        }
      }
      x = x.return;
    }
    Ct(function() {
      var je = $, lt = pn(g), dt = [];
      e: {
        var st = Lv.get(l);
        if (st !== void 0) {
          var Ft = An, Wt = l;
          switch (l) {
            case "keypress":
              if (Ve(g) === 0) break e;
            case "keydown":
            case "keyup":
              Ft = Ev;
              break;
            case "focusin":
              Wt = "focus", Ft = nc;
              break;
            case "focusout":
              Wt = "blur", Ft = nc;
              break;
            case "beforeblur":
            case "afterblur":
              Ft = nc;
              break;
            case "click":
              if (g.button === 2) break e;
            case "auxclick":
            case "dblclick":
            case "mousedown":
            case "mousemove":
            case "mouseup":
            case "mouseout":
            case "mouseover":
            case "contextmenu":
              Ft = Zl;
              break;
            case "drag":
            case "dragend":
            case "dragenter":
            case "dragexit":
            case "dragleave":
            case "dragover":
            case "dragstart":
            case "drop":
              Ft = dl;
              break;
            case "touchcancel":
            case "touchend":
            case "touchmove":
            case "touchstart":
              Ft = tS;
              break;
            case gS:
            case vS:
            case yS:
              Ft = Eh;
              break;
            case bS:
              Ft = pl;
              break;
            case "scroll":
              Ft = $r;
              break;
            case "wheel":
              Ft = hl;
              break;
            case "copy":
            case "cut":
            case "paste":
              Ft = QC;
              break;
            case "gotpointercapture":
            case "lostpointercapture":
            case "pointercancel":
            case "pointerdown":
            case "pointermove":
            case "pointerout":
            case "pointerover":
            case "pointerup":
              Ft = eS;
          }
          var Yt = (c & 4) !== 0, fo = !Yt && l === "scroll", Pe = Yt ? st !== null ? st + "Capture" : null : st;
          Yt = [];
          for (var Ee = je, Fe; Ee !== null; ) {
            Fe = Ee;
            var ut = Fe.stateNode;
            if (Fe.tag === 5 && ut !== null && (Fe = ut, Pe !== null && (ut = St(Ee, Pe), ut != null && Yt.push(vd(Ee, ut, Fe)))), fo) break;
            Ee = Ee.return;
          }
          0 < Yt.length && (st = new Ft(st, Wt, null, g, lt), dt.push({ event: st, listeners: Yt }));
        }
      }
      if (!(c & 7)) {
        e: {
          if (st = l === "mouseover" || l === "pointerover", Ft = l === "mouseout" || l === "pointerout", st && g !== At && (Wt = g.relatedTarget || g.fromElement) && (lc(Wt) || Wt[ml])) break e;
          if ((Ft || st) && (st = lt.window === lt ? lt : (st = lt.ownerDocument) ? st.defaultView || st.parentWindow : window, Ft ? (Wt = g.relatedTarget || g.toElement, Ft = je, Wt = Wt ? lc(Wt) : null, Wt !== null && (fo = gn(Wt), Wt !== fo || Wt.tag !== 5 && Wt.tag !== 6) && (Wt = null)) : (Ft = null, Wt = je), Ft !== Wt)) {
            if (Yt = Zl, ut = "onMouseLeave", Pe = "onMouseEnter", Ee = "mouse", (l === "pointerout" || l === "pointerover") && (Yt = eS, ut = "onPointerLeave", Pe = "onPointerEnter", Ee = "pointer"), fo = Ft == null ? st : ts(Ft), Fe = Wt == null ? st : ts(Wt), st = new Yt(ut, Ee + "leave", Ft, g, lt), st.target = fo, st.relatedTarget = Fe, ut = null, lc(lt) === je && (Yt = new Yt(Pe, Ee + "enter", Wt, g, lt), Yt.target = Fe, Yt.relatedTarget = fo, ut = Yt), fo = ut, Ft && Wt) t: {
              for (Yt = Ft, Pe = Wt, Ee = 0, Fe = Yt; Fe; Fe = tu(Fe)) Ee++;
              for (Fe = 0, ut = Pe; ut; ut = tu(ut)) Fe++;
              for (; 0 < Ee - Fe; ) Yt = tu(Yt), Ee--;
              for (; 0 < Fe - Ee; ) Pe = tu(Pe), Fe--;
              for (; Ee--; ) {
                if (Yt === Pe || Pe !== null && Yt === Pe.alternate) break t;
                Yt = tu(Yt), Pe = tu(Pe);
              }
              Yt = null;
            }
            else Yt = null;
            Ft !== null && SS(dt, st, Ft, Yt, !1), Wt !== null && fo !== null && SS(dt, fo, Wt, Yt, !0);
          }
        }
        e: {
          if (st = je ? ts(je) : window, Ft = st.nodeName && st.nodeName.toLowerCase(), Ft === "select" || Ft === "input" && st.type === "file") var qt = JE;
          else if (sS(st)) if (uS) qt = hS;
          else {
            qt = pS;
            var un = ZE;
          }
          else (Ft = st.nodeName) && Ft.toLowerCase() === "input" && (st.type === "checkbox" || st.type === "radio") && (qt = eT);
          if (qt && (qt = qt(l, je))) {
            Ov(dt, qt, g, lt);
            break e;
          }
          un && un(l, st, je), l === "focusout" && (un = st._wrapperState) && un.controlled && st.type === "number" && it(st, "number", st.value);
        }
        switch (un = je ? ts(je) : window, l) {
          case "focusin":
            (sS(un) || un.contentEditable === "true") && (md = un, Mv = je, zf = null);
            break;
          case "focusout":
            zf = Mv = md = null;
            break;
          case "mousedown":
            Iv = !0;
            break;
          case "contextmenu":
          case "mouseup":
          case "dragend":
            Iv = !1, Dv(dt, g, lt);
            break;
          case "selectionchange":
            if (nT) break;
          case "keydown":
          case "keyup":
            Dv(dt, g, lt);
        }
        var dn;
        if (fd) e: {
          switch (l) {
            case "compositionstart":
              var Cn = "onCompositionStart";
              break e;
            case "compositionend":
              Cn = "onCompositionEnd";
              break e;
            case "compositionupdate":
              Cn = "onCompositionUpdate";
              break e;
          }
          Cn = void 0;
        }
        else pd ? oS(l, g) && (Cn = "onCompositionEnd") : l === "keydown" && g.keyCode === 229 && (Cn = "onCompositionStart");
        Cn && (nS && g.locale !== "ko" && (pd || Cn !== "onCompositionStart" ? Cn === "onCompositionEnd" && pd && (dn = $e()) : (Za = lt, te = "value" in Za ? Za.value : Za.textContent, pd = !0)), un = Vf(je, Cn), 0 < un.length && (Cn = new Sv(Cn, l, null, g, lt), dt.push({ event: Cn, listeners: un }), dn ? Cn.data = dn : (dn = iS(g), dn !== null && (Cn.data = dn)))), (dn = _f ? aS(l, g) : XE(l, g)) && (je = Vf(je, "onBeforeInput"), 0 < je.length && (lt = new Sv("onBeforeInput", "beforeinput", null, g, lt), dt.push({ event: lt, listeners: je }), lt.data = dn));
      }
      ac(dt, c);
    });
  }
  function vd(l, c, g) {
    return { instance: l, listener: c, currentTarget: g };
  }
  function Vf(l, c) {
    for (var g = c + "Capture", x = []; l !== null; ) {
      var P = l, $ = P.stateNode;
      P.tag === 5 && $ !== null && (P = $, $ = St(l, g), $ != null && x.unshift(vd(l, $, P)), $ = St(l, c), $ != null && x.push(vd(l, $, P))), l = l.return;
    }
    return x;
  }
  function tu(l) {
    if (l === null) return null;
    do
      l = l.return;
    while (l && l.tag !== 5);
    return l || null;
  }
  function SS(l, c, g, x, P) {
    for (var $ = c._reactName, oe = []; g !== null && g !== x; ) {
      var he = g, Se = he.alternate, je = he.stateNode;
      if (Se !== null && Se === x) break;
      he.tag === 5 && je !== null && (he = je, P ? (Se = St(g, $), Se != null && oe.unshift(vd(g, Se, he))) : P || (Se = St(g, $), Se != null && oe.push(vd(g, Se, he)))), g = g.return;
    }
    oe.length !== 0 && l.push({ event: c, listeners: oe });
  }
  var wS = /\r\n?/g, iT = /\u0000|\uFFFD/g;
  function xS(l) {
    return (typeof l == "string" ? l : "" + l).replace(wS, `
`).replace(iT, "");
  }
  function _h(l, c, g) {
    if (c = xS(c), xS(l) !== c && g) throw Error(n(425));
  }
  function nu() {
  }
  var Bf = null, sc = null;
  function Ah(l, c) {
    return l === "textarea" || l === "noscript" || typeof c.children == "string" || typeof c.children == "number" || typeof c.dangerouslySetInnerHTML == "object" && c.dangerouslySetInnerHTML !== null && c.dangerouslySetInnerHTML.__html != null;
  }
  var $h = typeof setTimeout == "function" ? setTimeout : void 0, Av = typeof clearTimeout == "function" ? clearTimeout : void 0, ES = typeof Promise == "function" ? Promise : void 0, yd = typeof queueMicrotask == "function" ? queueMicrotask : typeof ES < "u" ? function(l) {
    return ES.resolve(null).then(l).catch(jh);
  } : $h;
  function jh(l) {
    setTimeout(function() {
      throw l;
    });
  }
  function bd(l, c) {
    var g = c, x = 0;
    do {
      var P = g.nextSibling;
      if (l.removeChild(g), P && P.nodeType === 8) if (g = P.data, g === "/$") {
        if (x === 0) {
          l.removeChild(P), Ja(c);
          return;
        }
        x--;
      } else g !== "$" && g !== "$?" && g !== "$!" || x++;
      g = P;
    } while (g);
    Ja(c);
  }
  function Rs(l) {
    for (; l != null; l = l.nextSibling) {
      var c = l.nodeType;
      if (c === 1 || c === 3) break;
      if (c === 8) {
        if (c = l.data, c === "$" || c === "$!" || c === "$?") break;
        if (c === "/$") return null;
      }
    }
    return l;
  }
  function TS(l) {
    l = l.previousSibling;
    for (var c = 0; l; ) {
      if (l.nodeType === 8) {
        var g = l.data;
        if (g === "$" || g === "$!" || g === "$?") {
          if (c === 0) return l;
          c--;
        } else g === "/$" && c++;
      }
      l = l.previousSibling;
    }
    return null;
  }
  var ru = Math.random().toString(36).slice(2), Os = "__reactFiber$" + ru, Uf = "__reactProps$" + ru, ml = "__reactContainer$" + ru, Gf = "__reactEvents$" + ru, Cd = "__reactListeners$" + ru, aT = "__reactHandles$" + ru;
  function lc(l) {
    var c = l[Os];
    if (c) return c;
    for (var g = l.parentNode; g; ) {
      if (c = g[ml] || g[Os]) {
        if (g = c.alternate, c.child !== null || g !== null && g.child !== null) for (l = TS(l); l !== null; ) {
          if (g = l[Os]) return g;
          l = TS(l);
        }
        return c;
      }
      l = g, g = l.parentNode;
    }
    return null;
  }
  function tn(l) {
    return l = l[Os] || l[ml], !l || l.tag !== 5 && l.tag !== 6 && l.tag !== 13 && l.tag !== 3 ? null : l;
  }
  function ts(l) {
    if (l.tag === 5 || l.tag === 6) return l.stateNode;
    throw Error(n(33));
  }
  function Qr(l) {
    return l[Uf] || null;
  }
  var Kn = [], Ma = -1;
  function Ia(l) {
    return { current: l };
  }
  function jr(l) {
    0 > Ma || (l.current = Kn[Ma], Kn[Ma] = null, Ma--);
  }
  function Zt(l, c) {
    Ma++, Kn[Ma] = l.current, l.current = c;
  }
  var pi = {}, oo = Ia(pi), No = Ia(!1), Bi = pi;
  function Ui(l, c) {
    var g = l.type.contextTypes;
    if (!g) return pi;
    var x = l.stateNode;
    if (x && x.__reactInternalMemoizedUnmaskedChildContext === c) return x.__reactInternalMemoizedMaskedChildContext;
    var P = {}, $;
    for ($ in g) P[$] = c[$];
    return x && (l = l.stateNode, l.__reactInternalMemoizedUnmaskedChildContext = c, l.__reactInternalMemoizedMaskedChildContext = P), P;
  }
  function vo(l) {
    return l = l.childContextTypes, l != null;
  }
  function Sd() {
    jr(No), jr(oo);
  }
  function RS(l, c, g) {
    if (oo.current !== pi) throw Error(n(168));
    Zt(oo, c), Zt(No, g);
  }
  function Wf(l, c, g) {
    var x = l.stateNode;
    if (c = c.childContextTypes, typeof x.getChildContext != "function") return g;
    x = x.getChildContext();
    for (var P in x) if (!(P in c)) throw Error(n(108, de(l) || "Unknown", P));
    return X({}, g, x);
  }
  function jo(l) {
    return l = (l = l.stateNode) && l.__reactInternalMemoizedMergedChildContext || pi, Bi = oo.current, Zt(oo, l), Zt(No, No.current), !0;
  }
  function zh(l, c, g) {
    var x = l.stateNode;
    if (!x) throw Error(n(169));
    g ? (l = Wf(l, c, Bi), x.__reactInternalMemoizedMergedChildContext = l, jr(No), jr(oo), Zt(oo, l)) : jr(No), Zt(No, g);
  }
  var ks = null, wd = !1, gl = !1;
  function Hh(l) {
    ks === null ? ks = [l] : ks.push(l);
  }
  function ou(l) {
    wd = !0, Hh(l);
  }
  function Ps() {
    if (!gl && ks !== null) {
      gl = !0;
      var l = 0, c = ir;
      try {
        var g = ks;
        for (ir = 1; l < g.length; l++) {
          var x = g[l];
          do
            x = x(!0);
          while (x !== null);
        }
        ks = null, wd = !1;
      } catch (P) {
        throw ks !== null && (ks = ks.slice(l + 1)), Qt(di, Ps), P;
      } finally {
        ir = c, gl = !1;
      }
    }
    return null;
  }
  var iu = [], au = 0, su = null, vl = 0, yo = [], Da = 0, ua = null, Ms = 1, Is = "";
  function uc(l, c) {
    iu[au++] = vl, iu[au++] = su, su = l, vl = c;
  }
  function OS(l, c, g) {
    yo[Da++] = Ms, yo[Da++] = Is, yo[Da++] = ua, ua = l;
    var x = Ms;
    l = Is;
    var P = 32 - wi(x) - 1;
    x &= ~(1 << P), g += 1;
    var $ = 32 - wi(c) + P;
    if (30 < $) {
      var oe = P - P % 5;
      $ = (x & (1 << oe) - 1).toString(32), x >>= oe, P -= oe, Ms = 1 << 32 - wi(c) + P | g << P | x, Is = $ + l;
    } else Ms = 1 << $ | g << P | x, Is = l;
  }
  function Vh(l) {
    l.return !== null && (uc(l, 1), OS(l, 1, 0));
  }
  function Bh(l) {
    for (; l === su; ) su = iu[--au], iu[au] = null, vl = iu[--au], iu[au] = null;
    for (; l === ua; ) ua = yo[--Da], yo[Da] = null, Is = yo[--Da], yo[Da] = null, Ms = yo[--Da], yo[Da] = null;
  }
  var Gi = null, Wi = null, qr = !1, Na = null;
  function $v(l, c) {
    var g = $a(5, null, null, 0);
    g.elementType = "DELETED", g.stateNode = c, g.return = l, c = l.deletions, c === null ? (l.deletions = [g], l.flags |= 16) : c.push(g);
  }
  function kS(l, c) {
    switch (l.tag) {
      case 5:
        var g = l.type;
        return c = c.nodeType !== 1 || g.toLowerCase() !== c.nodeName.toLowerCase() ? null : c, c !== null ? (l.stateNode = c, Gi = l, Wi = Rs(c.firstChild), !0) : !1;
      case 6:
        return c = l.pendingProps === "" || c.nodeType !== 3 ? null : c, c !== null ? (l.stateNode = c, Gi = l, Wi = null, !0) : !1;
      case 13:
        return c = c.nodeType !== 8 ? null : c, c !== null ? (g = ua !== null ? { id: Ms, overflow: Is } : null, l.memoizedState = { dehydrated: c, treeContext: g, retryLane: 1073741824 }, g = $a(18, null, null, 0), g.stateNode = c, g.return = l, l.child = g, Gi = l, Wi = null, !0) : !1;
      default:
        return !1;
    }
  }
  function jv(l) {
    return (l.mode & 1) !== 0 && (l.flags & 128) === 0;
  }
  function zv(l) {
    if (qr) {
      var c = Wi;
      if (c) {
        var g = c;
        if (!kS(l, c)) {
          if (jv(l)) throw Error(n(418));
          c = Rs(g.nextSibling);
          var x = Gi;
          c && kS(l, c) ? $v(x, g) : (l.flags = l.flags & -4097 | 2, qr = !1, Gi = l);
        }
      } else {
        if (jv(l)) throw Error(n(418));
        l.flags = l.flags & -4097 | 2, qr = !1, Gi = l;
      }
    }
  }
  function Lo(l) {
    for (l = l.return; l !== null && l.tag !== 5 && l.tag !== 3 && l.tag !== 13; ) l = l.return;
    Gi = l;
  }
  function Uh(l) {
    if (l !== Gi) return !1;
    if (!qr) return Lo(l), qr = !0, !1;
    var c;
    if ((c = l.tag !== 3) && !(c = l.tag !== 5) && (c = l.type, c = c !== "head" && c !== "body" && !Ah(l.type, l.memoizedProps)), c && (c = Wi)) {
      if (jv(l)) throw qf(), Error(n(418));
      for (; c; ) $v(l, c), c = Rs(c.nextSibling);
    }
    if (Lo(l), l.tag === 13) {
      if (l = l.memoizedState, l = l !== null ? l.dehydrated : null, !l) throw Error(n(317));
      e: {
        for (l = l.nextSibling, c = 0; l; ) {
          if (l.nodeType === 8) {
            var g = l.data;
            if (g === "/$") {
              if (c === 0) {
                Wi = Rs(l.nextSibling);
                break e;
              }
              c--;
            } else g !== "$" && g !== "$!" && g !== "$?" || c++;
          }
          l = l.nextSibling;
        }
        Wi = null;
      }
    } else Wi = Gi ? Rs(l.stateNode.nextSibling) : null;
    return !0;
  }
  function qf() {
    for (var l = Wi; l; ) l = Rs(l.nextSibling);
  }
  function lu() {
    Wi = Gi = null, qr = !1;
  }
  function yl(l) {
    Na === null ? Na = [l] : Na.push(l);
  }
  var sT = M.ReactCurrentBatchConfig;
  function cc(l, c, g) {
    if (l = g.ref, l !== null && typeof l != "function" && typeof l != "object") {
      if (g._owner) {
        if (g = g._owner, g) {
          if (g.tag !== 1) throw Error(n(309));
          var x = g.stateNode;
        }
        if (!x) throw Error(n(147, l));
        var P = x, $ = "" + l;
        return c !== null && c.ref !== null && typeof c.ref == "function" && c.ref._stringRef === $ ? c.ref : (c = function(oe) {
          var he = P.refs;
          oe === null ? delete he[$] : he[$] = oe;
        }, c._stringRef = $, c);
      }
      if (typeof l != "string") throw Error(n(284));
      if (!g._owner) throw Error(n(290, l));
    }
    return l;
  }
  function Gh(l, c) {
    throw l = Object.prototype.toString.call(c), Error(n(31, l === "[object Object]" ? "object with keys {" + Object.keys(c).join(", ") + "}" : l));
  }
  function PS(l) {
    var c = l._init;
    return c(l._payload);
  }
  function dc(l) {
    function c(Pe, Ee) {
      if (l) {
        var Fe = Pe.deletions;
        Fe === null ? (Pe.deletions = [Ee], Pe.flags |= 16) : Fe.push(Ee);
      }
    }
    function g(Pe, Ee) {
      if (!l) return null;
      for (; Ee !== null; ) c(Pe, Ee), Ee = Ee.sibling;
      return null;
    }
    function x(Pe, Ee) {
      for (Pe = /* @__PURE__ */ new Map(); Ee !== null; ) Ee.key !== null ? Pe.set(Ee.key, Ee) : Pe.set(Ee.index, Ee), Ee = Ee.sibling;
      return Pe;
    }
    function P(Pe, Ee) {
      return Pe = gu(Pe, Ee), Pe.index = 0, Pe.sibling = null, Pe;
    }
    function $(Pe, Ee, Fe) {
      return Pe.index = Fe, l ? (Fe = Pe.alternate, Fe !== null ? (Fe = Fe.index, Fe < Ee ? (Pe.flags |= 2, Ee) : Fe) : (Pe.flags |= 2, Ee)) : (Pe.flags |= 1048576, Ee);
    }
    function oe(Pe) {
      return l && Pe.alternate === null && (Pe.flags |= 2), Pe;
    }
    function he(Pe, Ee, Fe, ut) {
      return Ee === null || Ee.tag !== 6 ? (Ee = vy(Fe, Pe.mode, ut), Ee.return = Pe, Ee) : (Ee = P(Ee, Fe), Ee.return = Pe, Ee);
    }
    function Se(Pe, Ee, Fe, ut) {
      var qt = Fe.type;
      return qt === K ? lt(Pe, Ee, Fe.props.children, ut, Fe.key) : Ee !== null && (Ee.elementType === qt || typeof qt == "object" && qt !== null && qt.$$typeof === q && PS(qt) === Ee.type) ? (ut = P(Ee, Fe.props), ut.ref = cc(Pe, Ee, Fe), ut.return = Pe, ut) : (ut = xp(Fe.type, Fe.key, Fe.props, null, Pe.mode, ut), ut.ref = cc(Pe, Ee, Fe), ut.return = Pe, ut);
    }
    function je(Pe, Ee, Fe, ut) {
      return Ee === null || Ee.tag !== 4 || Ee.stateNode.containerInfo !== Fe.containerInfo || Ee.stateNode.implementation !== Fe.implementation ? (Ee = Em(Fe, Pe.mode, ut), Ee.return = Pe, Ee) : (Ee = P(Ee, Fe.children || []), Ee.return = Pe, Ee);
    }
    function lt(Pe, Ee, Fe, ut, qt) {
      return Ee === null || Ee.tag !== 7 ? (Ee = El(Fe, Pe.mode, ut, qt), Ee.return = Pe, Ee) : (Ee = P(Ee, Fe), Ee.return = Pe, Ee);
    }
    function dt(Pe, Ee, Fe) {
      if (typeof Ee == "string" && Ee !== "" || typeof Ee == "number") return Ee = vy("" + Ee, Pe.mode, Fe), Ee.return = Pe, Ee;
      if (typeof Ee == "object" && Ee !== null) {
        switch (Ee.$$typeof) {
          case D:
            return Fe = xp(Ee.type, Ee.key, Ee.props, null, Pe.mode, Fe), Fe.ref = cc(Pe, null, Ee), Fe.return = Pe, Fe;
          case H:
            return Ee = Em(Ee, Pe.mode, Fe), Ee.return = Pe, Ee;
          case q:
            var ut = Ee._init;
            return dt(Pe, ut(Ee._payload), Fe);
        }
        if (wt(Ee) || re(Ee)) return Ee = El(Ee, Pe.mode, Fe, null), Ee.return = Pe, Ee;
        Gh(Pe, Ee);
      }
      return null;
    }
    function st(Pe, Ee, Fe, ut) {
      var qt = Ee !== null ? Ee.key : null;
      if (typeof Fe == "string" && Fe !== "" || typeof Fe == "number") return qt !== null ? null : he(Pe, Ee, "" + Fe, ut);
      if (typeof Fe == "object" && Fe !== null) {
        switch (Fe.$$typeof) {
          case D:
            return Fe.key === qt ? Se(Pe, Ee, Fe, ut) : null;
          case H:
            return Fe.key === qt ? je(Pe, Ee, Fe, ut) : null;
          case q:
            return qt = Fe._init, st(
              Pe,
              Ee,
              qt(Fe._payload),
              ut
            );
        }
        if (wt(Fe) || re(Fe)) return qt !== null ? null : lt(Pe, Ee, Fe, ut, null);
        Gh(Pe, Fe);
      }
      return null;
    }
    function Ft(Pe, Ee, Fe, ut, qt) {
      if (typeof ut == "string" && ut !== "" || typeof ut == "number") return Pe = Pe.get(Fe) || null, he(Ee, Pe, "" + ut, qt);
      if (typeof ut == "object" && ut !== null) {
        switch (ut.$$typeof) {
          case D:
            return Pe = Pe.get(ut.key === null ? Fe : ut.key) || null, Se(Ee, Pe, ut, qt);
          case H:
            return Pe = Pe.get(ut.key === null ? Fe : ut.key) || null, je(Ee, Pe, ut, qt);
          case q:
            var un = ut._init;
            return Ft(Pe, Ee, Fe, un(ut._payload), qt);
        }
        if (wt(ut) || re(ut)) return Pe = Pe.get(Fe) || null, lt(Ee, Pe, ut, qt, null);
        Gh(Ee, ut);
      }
      return null;
    }
    function Wt(Pe, Ee, Fe, ut) {
      for (var qt = null, un = null, dn = Ee, Cn = Ee = 0, Vo = null; dn !== null && Cn < Fe.length; Cn++) {
        dn.index > Cn ? (Vo = dn, dn = null) : Vo = dn.sibling;
        var lr = st(Pe, dn, Fe[Cn], ut);
        if (lr === null) {
          dn === null && (dn = Vo);
          break;
        }
        l && dn && lr.alternate === null && c(Pe, dn), Ee = $(lr, Ee, Cn), un === null ? qt = lr : un.sibling = lr, un = lr, dn = Vo;
      }
      if (Cn === Fe.length) return g(Pe, dn), qr && uc(Pe, Cn), qt;
      if (dn === null) {
        for (; Cn < Fe.length; Cn++) dn = dt(Pe, Fe[Cn], ut), dn !== null && (Ee = $(dn, Ee, Cn), un === null ? qt = dn : un.sibling = dn, un = dn);
        return qr && uc(Pe, Cn), qt;
      }
      for (dn = x(Pe, dn); Cn < Fe.length; Cn++) Vo = Ft(dn, Pe, Cn, Fe[Cn], ut), Vo !== null && (l && Vo.alternate !== null && dn.delete(Vo.key === null ? Cn : Vo.key), Ee = $(Vo, Ee, Cn), un === null ? qt = Vo : un.sibling = Vo, un = Vo);
      return l && dn.forEach(function(bu) {
        return c(Pe, bu);
      }), qr && uc(Pe, Cn), qt;
    }
    function Yt(Pe, Ee, Fe, ut) {
      var qt = re(Fe);
      if (typeof qt != "function") throw Error(n(150));
      if (Fe = qt.call(Fe), Fe == null) throw Error(n(151));
      for (var un = qt = null, dn = Ee, Cn = Ee = 0, Vo = null, lr = Fe.next(); dn !== null && !lr.done; Cn++, lr = Fe.next()) {
        dn.index > Cn ? (Vo = dn, dn = null) : Vo = dn.sibling;
        var bu = st(Pe, dn, lr.value, ut);
        if (bu === null) {
          dn === null && (dn = Vo);
          break;
        }
        l && dn && bu.alternate === null && c(Pe, dn), Ee = $(bu, Ee, Cn), un === null ? qt = bu : un.sibling = bu, un = bu, dn = Vo;
      }
      if (lr.done) return g(
        Pe,
        dn
      ), qr && uc(Pe, Cn), qt;
      if (dn === null) {
        for (; !lr.done; Cn++, lr = Fe.next()) lr = dt(Pe, lr.value, ut), lr !== null && (Ee = $(lr, Ee, Cn), un === null ? qt = lr : un.sibling = lr, un = lr);
        return qr && uc(Pe, Cn), qt;
      }
      for (dn = x(Pe, dn); !lr.done; Cn++, lr = Fe.next()) lr = Ft(dn, Pe, Cn, lr.value, ut), lr !== null && (l && lr.alternate !== null && dn.delete(lr.key === null ? Cn : lr.key), Ee = $(lr, Ee, Cn), un === null ? qt = lr : un.sibling = lr, un = lr);
      return l && dn.forEach(function(dw) {
        return c(Pe, dw);
      }), qr && uc(Pe, Cn), qt;
    }
    function fo(Pe, Ee, Fe, ut) {
      if (typeof Fe == "object" && Fe !== null && Fe.type === K && Fe.key === null && (Fe = Fe.props.children), typeof Fe == "object" && Fe !== null) {
        switch (Fe.$$typeof) {
          case D:
            e: {
              for (var qt = Fe.key, un = Ee; un !== null; ) {
                if (un.key === qt) {
                  if (qt = Fe.type, qt === K) {
                    if (un.tag === 7) {
                      g(Pe, un.sibling), Ee = P(un, Fe.props.children), Ee.return = Pe, Pe = Ee;
                      break e;
                    }
                  } else if (un.elementType === qt || typeof qt == "object" && qt !== null && qt.$$typeof === q && PS(qt) === un.type) {
                    g(Pe, un.sibling), Ee = P(un, Fe.props), Ee.ref = cc(Pe, un, Fe), Ee.return = Pe, Pe = Ee;
                    break e;
                  }
                  g(Pe, un);
                  break;
                } else c(Pe, un);
                un = un.sibling;
              }
              Fe.type === K ? (Ee = El(Fe.props.children, Pe.mode, ut, Fe.key), Ee.return = Pe, Pe = Ee) : (ut = xp(Fe.type, Fe.key, Fe.props, null, Pe.mode, ut), ut.ref = cc(Pe, Ee, Fe), ut.return = Pe, Pe = ut);
            }
            return oe(Pe);
          case H:
            e: {
              for (un = Fe.key; Ee !== null; ) {
                if (Ee.key === un) if (Ee.tag === 4 && Ee.stateNode.containerInfo === Fe.containerInfo && Ee.stateNode.implementation === Fe.implementation) {
                  g(Pe, Ee.sibling), Ee = P(Ee, Fe.children || []), Ee.return = Pe, Pe = Ee;
                  break e;
                } else {
                  g(Pe, Ee);
                  break;
                }
                else c(Pe, Ee);
                Ee = Ee.sibling;
              }
              Ee = Em(Fe, Pe.mode, ut), Ee.return = Pe, Pe = Ee;
            }
            return oe(Pe);
          case q:
            return un = Fe._init, fo(Pe, Ee, un(Fe._payload), ut);
        }
        if (wt(Fe)) return Wt(Pe, Ee, Fe, ut);
        if (re(Fe)) return Yt(Pe, Ee, Fe, ut);
        Gh(Pe, Fe);
      }
      return typeof Fe == "string" && Fe !== "" || typeof Fe == "number" ? (Fe = "" + Fe, Ee !== null && Ee.tag === 6 ? (g(Pe, Ee.sibling), Ee = P(Ee, Fe), Ee.return = Pe, Pe = Ee) : (g(Pe, Ee), Ee = vy(Fe, Pe.mode, ut), Ee.return = Pe, Pe = Ee), oe(Pe)) : g(Pe, Ee);
    }
    return fo;
  }
  var so = dc(!0), It = dc(!1), ca = Ia(null), qi = null, xd = null, Hv = null;
  function Vv() {
    Hv = xd = qi = null;
  }
  function Bv(l) {
    var c = ca.current;
    jr(ca), l._currentValue = c;
  }
  function Uv(l, c, g) {
    for (; l !== null; ) {
      var x = l.alternate;
      if ((l.childLanes & c) !== c ? (l.childLanes |= c, x !== null && (x.childLanes |= c)) : x !== null && (x.childLanes & c) !== c && (x.childLanes |= c), l === g) break;
      l = l.return;
    }
  }
  function Jr(l, c) {
    qi = l, Hv = xd = null, l = l.dependencies, l !== null && l.firstContext !== null && (l.lanes & c && (Co = !0), l.firstContext = null);
  }
  function La(l) {
    var c = l._currentValue;
    if (Hv !== l) if (l = { context: l, memoizedValue: c, next: null }, xd === null) {
      if (qi === null) throw Error(n(308));
      xd = l, qi.dependencies = { lanes: 0, firstContext: l };
    } else xd = xd.next = l;
    return c;
  }
  var fc = null;
  function Gv(l) {
    fc === null ? fc = [l] : fc.push(l);
  }
  function Wv(l, c, g, x) {
    var P = c.interleaved;
    return P === null ? (g.next = g, Gv(c)) : (g.next = P.next, P.next = g), c.interleaved = g, da(l, x);
  }
  function da(l, c) {
    l.lanes |= c;
    var g = l.alternate;
    for (g !== null && (g.lanes |= c), g = l, l = l.return; l !== null; ) l.childLanes |= c, g = l.alternate, g !== null && (g.childLanes |= c), g = l, l = l.return;
    return g.tag === 3 ? g.stateNode : null;
  }
  var fa = !1;
  function qv(l) {
    l.updateQueue = { baseState: l.memoizedState, firstBaseUpdate: null, lastBaseUpdate: null, shared: { pending: null, interleaved: null, lanes: 0 }, effects: null };
  }
  function MS(l, c) {
    l = l.updateQueue, c.updateQueue === l && (c.updateQueue = { baseState: l.baseState, firstBaseUpdate: l.firstBaseUpdate, lastBaseUpdate: l.lastBaseUpdate, shared: l.shared, effects: l.effects });
  }
  function bl(l, c) {
    return { eventTime: l, lane: c, tag: 0, payload: null, callback: null, next: null };
  }
  function uu(l, c, g) {
    var x = l.updateQueue;
    if (x === null) return null;
    if (x = x.shared, Yn & 2) {
      var P = x.pending;
      return P === null ? c.next = c : (c.next = P.next, P.next = c), x.pending = c, da(l, g);
    }
    return P = x.interleaved, P === null ? (c.next = c, Gv(x)) : (c.next = P.next, P.next = c), x.interleaved = c, da(l, g);
  }
  function Wh(l, c, g) {
    if (c = c.updateQueue, c !== null && (c = c.shared, (g & 4194240) !== 0)) {
      var x = c.lanes;
      x &= l.pendingLanes, g |= x, c.lanes = g, cl(l, g);
    }
  }
  function IS(l, c) {
    var g = l.updateQueue, x = l.alternate;
    if (x !== null && (x = x.updateQueue, g === x)) {
      var P = null, $ = null;
      if (g = g.firstBaseUpdate, g !== null) {
        do {
          var oe = { eventTime: g.eventTime, lane: g.lane, tag: g.tag, payload: g.payload, callback: g.callback, next: null };
          $ === null ? P = $ = oe : $ = $.next = oe, g = g.next;
        } while (g !== null);
        $ === null ? P = $ = c : $ = $.next = c;
      } else P = $ = c;
      g = { baseState: x.baseState, firstBaseUpdate: P, lastBaseUpdate: $, shared: x.shared, effects: x.effects }, l.updateQueue = g;
      return;
    }
    l = g.lastBaseUpdate, l === null ? g.firstBaseUpdate = c : l.next = c, g.lastBaseUpdate = c;
  }
  function Kf(l, c, g, x) {
    var P = l.updateQueue;
    fa = !1;
    var $ = P.firstBaseUpdate, oe = P.lastBaseUpdate, he = P.shared.pending;
    if (he !== null) {
      P.shared.pending = null;
      var Se = he, je = Se.next;
      Se.next = null, oe === null ? $ = je : oe.next = je, oe = Se;
      var lt = l.alternate;
      lt !== null && (lt = lt.updateQueue, he = lt.lastBaseUpdate, he !== oe && (he === null ? lt.firstBaseUpdate = je : he.next = je, lt.lastBaseUpdate = Se));
    }
    if ($ !== null) {
      var dt = P.baseState;
      oe = 0, lt = je = Se = null, he = $;
      do {
        var st = he.lane, Ft = he.eventTime;
        if ((x & st) === st) {
          lt !== null && (lt = lt.next = {
            eventTime: Ft,
            lane: 0,
            tag: he.tag,
            payload: he.payload,
            callback: he.callback,
            next: null
          });
          e: {
            var Wt = l, Yt = he;
            switch (st = c, Ft = g, Yt.tag) {
              case 1:
                if (Wt = Yt.payload, typeof Wt == "function") {
                  dt = Wt.call(Ft, dt, st);
                  break e;
                }
                dt = Wt;
                break e;
              case 3:
                Wt.flags = Wt.flags & -65537 | 128;
              case 0:
                if (Wt = Yt.payload, st = typeof Wt == "function" ? Wt.call(Ft, dt, st) : Wt, st == null) break e;
                dt = X({}, dt, st);
                break e;
              case 2:
                fa = !0;
            }
          }
          he.callback !== null && he.lane !== 0 && (l.flags |= 64, st = P.effects, st === null ? P.effects = [he] : st.push(he));
        } else Ft = { eventTime: Ft, lane: st, tag: he.tag, payload: he.payload, callback: he.callback, next: null }, lt === null ? (je = lt = Ft, Se = dt) : lt = lt.next = Ft, oe |= st;
        if (he = he.next, he === null) {
          if (he = P.shared.pending, he === null) break;
          st = he, he = st.next, st.next = null, P.lastBaseUpdate = st, P.shared.pending = null;
        }
      } while (!0);
      if (lt === null && (Se = dt), P.baseState = Se, P.firstBaseUpdate = je, P.lastBaseUpdate = lt, c = P.shared.interleaved, c !== null) {
        P = c;
        do
          oe |= P.lane, P = P.next;
        while (P !== c);
      } else $ === null && (P.shared.lanes = 0);
      _s |= oe, l.lanes = oe, l.memoizedState = dt;
    }
  }
  function Kv(l, c, g) {
    if (l = c.effects, c.effects = null, l !== null) for (c = 0; c < l.length; c++) {
      var x = l[c], P = x.callback;
      if (P !== null) {
        if (x.callback = null, x = g, typeof P != "function") throw Error(n(191, P));
        P.call(x);
      }
    }
  }
  var Yf = {}, Ds = Ia(Yf), Xf = Ia(Yf), Qf = Ia(Yf);
  function pc(l) {
    if (l === Yf) throw Error(n(174));
    return l;
  }
  function Yv(l, c) {
    switch (Zt(Qf, c), Zt(Xf, l), Zt(Ds, Yf), l = c.nodeType, l) {
      case 9:
      case 11:
        c = (c = c.documentElement) ? c.namespaceURI : Lt(null, "");
        break;
      default:
        l = l === 8 ? c.parentNode : c, c = l.namespaceURI || null, l = l.tagName, c = Lt(c, l);
    }
    jr(Ds), Zt(Ds, c);
  }
  function hc() {
    jr(Ds), jr(Xf), jr(Qf);
  }
  function DS(l) {
    pc(Qf.current);
    var c = pc(Ds.current), g = Lt(c, l.type);
    c !== g && (Zt(Xf, l), Zt(Ds, g));
  }
  function qh(l) {
    Xf.current === l && (jr(Ds), jr(Xf));
  }
  var Zr = Ia(0);
  function Kh(l) {
    for (var c = l; c !== null; ) {
      if (c.tag === 13) {
        var g = c.memoizedState;
        if (g !== null && (g = g.dehydrated, g === null || g.data === "$?" || g.data === "$!")) return c;
      } else if (c.tag === 19 && c.memoizedProps.revealOrder !== void 0) {
        if (c.flags & 128) return c;
      } else if (c.child !== null) {
        c.child.return = c, c = c.child;
        continue;
      }
      if (c === l) break;
      for (; c.sibling === null; ) {
        if (c.return === null || c.return === l) return null;
        c = c.return;
      }
      c.sibling.return = c.return, c = c.sibling;
    }
    return null;
  }
  var Jf = [];
  function nn() {
    for (var l = 0; l < Jf.length; l++) Jf[l]._workInProgressVersionPrimary = null;
    Jf.length = 0;
  }
  var Ln = M.ReactCurrentDispatcher, ar = M.ReactCurrentBatchConfig, Tr = 0, sr = null, bo = null, zo = null, Yh = !1, Zf = !1, mc = 0, at = 0;
  function rr() {
    throw Error(n(321));
  }
  function hn(l, c) {
    if (c === null) return !1;
    for (var g = 0; g < c.length && g < l.length; g++) if (!es(l[g], c[g])) return !1;
    return !0;
  }
  function cu(l, c, g, x, P, $) {
    if (Tr = $, sr = c, c.memoizedState = null, c.updateQueue = null, c.lanes = 0, Ln.current = l === null || l.memoizedState === null ? cm : ip, l = g(x, P), Zf) {
      $ = 0;
      do {
        if (Zf = !1, mc = 0, 25 <= $) throw Error(n(301));
        $ += 1, zo = bo = null, c.updateQueue = null, Ln.current = dm, l = g(x, P);
      } while (Zf);
    }
    if (Ln.current = Cc, c = bo !== null && bo.next !== null, Tr = 0, zo = bo = sr = null, Yh = !1, c) throw Error(n(300));
    return l;
  }
  function ns() {
    var l = mc !== 0;
    return mc = 0, l;
  }
  function hi() {
    var l = { memoizedState: null, baseState: null, baseQueue: null, queue: null, next: null };
    return zo === null ? sr.memoizedState = zo = l : zo = zo.next = l, zo;
  }
  function lo() {
    if (bo === null) {
      var l = sr.alternate;
      l = l !== null ? l.memoizedState : null;
    } else l = bo.next;
    var c = zo === null ? sr.memoizedState : zo.next;
    if (c !== null) zo = c, bo = l;
    else {
      if (l === null) throw Error(n(310));
      bo = l, l = { memoizedState: bo.memoizedState, baseState: bo.baseState, baseQueue: bo.baseQueue, queue: bo.queue, next: null }, zo === null ? sr.memoizedState = zo = l : zo = zo.next = l;
    }
    return zo;
  }
  function Cl(l, c) {
    return typeof c == "function" ? c(l) : c;
  }
  function du(l) {
    var c = lo(), g = c.queue;
    if (g === null) throw Error(n(311));
    g.lastRenderedReducer = l;
    var x = bo, P = x.baseQueue, $ = g.pending;
    if ($ !== null) {
      if (P !== null) {
        var oe = P.next;
        P.next = $.next, $.next = oe;
      }
      x.baseQueue = P = $, g.pending = null;
    }
    if (P !== null) {
      $ = P.next, x = x.baseState;
      var he = oe = null, Se = null, je = $;
      do {
        var lt = je.lane;
        if ((Tr & lt) === lt) Se !== null && (Se = Se.next = { lane: 0, action: je.action, hasEagerState: je.hasEagerState, eagerState: je.eagerState, next: null }), x = je.hasEagerState ? je.eagerState : l(x, je.action);
        else {
          var dt = {
            lane: lt,
            action: je.action,
            hasEagerState: je.hasEagerState,
            eagerState: je.eagerState,
            next: null
          };
          Se === null ? (he = Se = dt, oe = x) : Se = Se.next = dt, sr.lanes |= lt, _s |= lt;
        }
        je = je.next;
      } while (je !== null && je !== $);
      Se === null ? oe = x : Se.next = he, es(x, c.memoizedState) || (Co = !0), c.memoizedState = x, c.baseState = oe, c.baseQueue = Se, g.lastRenderedState = x;
    }
    if (l = g.interleaved, l !== null) {
      P = l;
      do
        $ = P.lane, sr.lanes |= $, _s |= $, P = P.next;
      while (P !== l);
    } else P === null && (g.lanes = 0);
    return [c.memoizedState, g.dispatch];
  }
  function gc(l) {
    var c = lo(), g = c.queue;
    if (g === null) throw Error(n(311));
    g.lastRenderedReducer = l;
    var x = g.dispatch, P = g.pending, $ = c.memoizedState;
    if (P !== null) {
      g.pending = null;
      var oe = P = P.next;
      do
        $ = l($, oe.action), oe = oe.next;
      while (oe !== P);
      es($, c.memoizedState) || (Co = !0), c.memoizedState = $, c.baseQueue === null && (c.baseState = $), g.lastRenderedState = $;
    }
    return [$, x];
  }
  function Xh() {
  }
  function Qh(l, c) {
    var g = sr, x = lo(), P = c(), $ = !es(x.memoizedState, P);
    if ($ && (x.memoizedState = P, Co = !0), x = x.queue, ep(em.bind(null, g, x, l), [l]), x.getSnapshot !== c || $ || zo !== null && zo.memoizedState.tag & 1) {
      if (g.flags |= 2048, vc(9, Zh.bind(null, g, x, P, c), void 0, null), Fo === null) throw Error(n(349));
      Tr & 30 || Jh(g, c, P);
    }
    return P;
  }
  function Jh(l, c, g) {
    l.flags |= 16384, l = { getSnapshot: c, value: g }, c = sr.updateQueue, c === null ? (c = { lastEffect: null, stores: null }, sr.updateQueue = c, c.stores = [l]) : (g = c.stores, g === null ? c.stores = [l] : g.push(l));
  }
  function Zh(l, c, g, x) {
    c.value = g, c.getSnapshot = x, tm(c) && nm(l);
  }
  function em(l, c, g) {
    return g(function() {
      tm(c) && nm(l);
    });
  }
  function tm(l) {
    var c = l.getSnapshot;
    l = l.value;
    try {
      var g = c();
      return !es(l, g);
    } catch {
      return !0;
    }
  }
  function nm(l) {
    var c = da(l, 1);
    c !== null && ki(c, l, 1, -1);
  }
  function rm(l) {
    var c = hi();
    return typeof l == "function" && (l = l()), c.memoizedState = c.baseState = l, l = { pending: null, interleaved: null, lanes: 0, dispatch: null, lastRenderedReducer: Cl, lastRenderedState: l }, c.queue = l, l = l.dispatch = bc.bind(null, sr, l), [c.memoizedState, l];
  }
  function vc(l, c, g, x) {
    return l = { tag: l, create: c, destroy: g, deps: x, next: null }, c = sr.updateQueue, c === null ? (c = { lastEffect: null, stores: null }, sr.updateQueue = c, c.lastEffect = l.next = l) : (g = c.lastEffect, g === null ? c.lastEffect = l.next = l : (x = g.next, g.next = l, l.next = x, c.lastEffect = l)), l;
  }
  function om() {
    return lo().memoizedState;
  }
  function Ed(l, c, g, x) {
    var P = hi();
    sr.flags |= l, P.memoizedState = vc(1 | c, g, void 0, x === void 0 ? null : x);
  }
  function Td(l, c, g, x) {
    var P = lo();
    x = x === void 0 ? null : x;
    var $ = void 0;
    if (bo !== null) {
      var oe = bo.memoizedState;
      if ($ = oe.destroy, x !== null && hn(x, oe.deps)) {
        P.memoizedState = vc(c, g, $, x);
        return;
      }
    }
    sr.flags |= l, P.memoizedState = vc(1 | c, g, $, x);
  }
  function im(l, c) {
    return Ed(8390656, 8, l, c);
  }
  function ep(l, c) {
    return Td(2048, 8, l, c);
  }
  function am(l, c) {
    return Td(4, 2, l, c);
  }
  function tp(l, c) {
    return Td(4, 4, l, c);
  }
  function yc(l, c) {
    if (typeof c == "function") return l = l(), c(l), function() {
      c(null);
    };
    if (c != null) return l = l(), c.current = l, function() {
      c.current = null;
    };
  }
  function sm(l, c, g) {
    return g = g != null ? g.concat([l]) : null, Td(4, 4, yc.bind(null, c, l), g);
  }
  function np() {
  }
  function lm(l, c) {
    var g = lo();
    c = c === void 0 ? null : c;
    var x = g.memoizedState;
    return x !== null && c !== null && hn(c, x[1]) ? x[0] : (g.memoizedState = [l, c], l);
  }
  function um(l, c) {
    var g = lo();
    c = c === void 0 ? null : c;
    var x = g.memoizedState;
    return x !== null && c !== null && hn(c, x[1]) ? x[0] : (l = l(), g.memoizedState = [l, c], l);
  }
  function Xv(l, c, g) {
    return Tr & 21 ? (es(g, c) || (g = od(), sr.lanes |= g, _s |= g, l.baseState = !0), c) : (l.baseState && (l.baseState = !1, Co = !0), l.memoizedState = g);
  }
  function rp(l, c) {
    var g = ir;
    ir = g !== 0 && 4 > g ? g : 4, l(!0);
    var x = ar.transition;
    ar.transition = {};
    try {
      l(!1), c();
    } finally {
      ir = g, ar.transition = x;
    }
  }
  function Qv() {
    return lo().memoizedState;
  }
  function op(l, c, g) {
    var x = As(l);
    if (g = { lane: x, action: g, hasEagerState: !1, eagerState: null, next: null }, Ki(l)) NS(c, g);
    else if (g = Wv(l, c, g, x), g !== null) {
      var P = xo();
      ki(g, l, x, P), Fr(g, c, x);
    }
  }
  function bc(l, c, g) {
    var x = As(l), P = { lane: x, action: g, hasEagerState: !1, eagerState: null, next: null };
    if (Ki(l)) NS(c, P);
    else {
      var $ = l.alternate;
      if (l.lanes === 0 && ($ === null || $.lanes === 0) && ($ = c.lastRenderedReducer, $ !== null)) try {
        var oe = c.lastRenderedState, he = $(oe, g);
        if (P.hasEagerState = !0, P.eagerState = he, es(he, oe)) {
          var Se = c.interleaved;
          Se === null ? (P.next = P, Gv(c)) : (P.next = Se.next, Se.next = P), c.interleaved = P;
          return;
        }
      } catch {
      } finally {
      }
      g = Wv(l, c, P, x), g !== null && (P = xo(), ki(g, l, x, P), Fr(g, c, x));
    }
  }
  function Ki(l) {
    var c = l.alternate;
    return l === sr || c !== null && c === sr;
  }
  function NS(l, c) {
    Zf = Yh = !0;
    var g = l.pending;
    g === null ? c.next = c : (c.next = g.next, g.next = c), l.pending = c;
  }
  function Fr(l, c, g) {
    if (g & 4194240) {
      var x = c.lanes;
      x &= l.pendingLanes, g |= x, c.lanes = g, cl(l, g);
    }
  }
  var Cc = { readContext: La, useCallback: rr, useContext: rr, useEffect: rr, useImperativeHandle: rr, useInsertionEffect: rr, useLayoutEffect: rr, useMemo: rr, useReducer: rr, useRef: rr, useState: rr, useDebugValue: rr, useDeferredValue: rr, useTransition: rr, useMutableSource: rr, useSyncExternalStore: rr, useId: rr, unstable_isNewReconciler: !1 }, cm = { readContext: La, useCallback: function(l, c) {
    return hi().memoizedState = [l, c === void 0 ? null : c], l;
  }, useContext: La, useEffect: im, useImperativeHandle: function(l, c, g) {
    return g = g != null ? g.concat([l]) : null, Ed(
      4194308,
      4,
      yc.bind(null, c, l),
      g
    );
  }, useLayoutEffect: function(l, c) {
    return Ed(4194308, 4, l, c);
  }, useInsertionEffect: function(l, c) {
    return Ed(4, 2, l, c);
  }, useMemo: function(l, c) {
    var g = hi();
    return c = c === void 0 ? null : c, l = l(), g.memoizedState = [l, c], l;
  }, useReducer: function(l, c, g) {
    var x = hi();
    return c = g !== void 0 ? g(c) : c, x.memoizedState = x.baseState = c, l = { pending: null, interleaved: null, lanes: 0, dispatch: null, lastRenderedReducer: l, lastRenderedState: c }, x.queue = l, l = l.dispatch = op.bind(null, sr, l), [x.memoizedState, l];
  }, useRef: function(l) {
    var c = hi();
    return l = { current: l }, c.memoizedState = l;
  }, useState: rm, useDebugValue: np, useDeferredValue: function(l) {
    return hi().memoizedState = l;
  }, useTransition: function() {
    var l = rm(!1), c = l[0];
    return l = rp.bind(null, l[1]), hi().memoizedState = l, [c, l];
  }, useMutableSource: function() {
  }, useSyncExternalStore: function(l, c, g) {
    var x = sr, P = hi();
    if (qr) {
      if (g === void 0) throw Error(n(407));
      g = g();
    } else {
      if (g = c(), Fo === null) throw Error(n(349));
      Tr & 30 || Jh(x, c, g);
    }
    P.memoizedState = g;
    var $ = { value: g, getSnapshot: c };
    return P.queue = $, im(em.bind(
      null,
      x,
      $,
      l
    ), [l]), x.flags |= 2048, vc(9, Zh.bind(null, x, $, g, c), void 0, null), g;
  }, useId: function() {
    var l = hi(), c = Fo.identifierPrefix;
    if (qr) {
      var g = Is, x = Ms;
      g = (x & ~(1 << 32 - wi(x) - 1)).toString(32) + g, c = ":" + c + "R" + g, g = mc++, 0 < g && (c += "H" + g.toString(32)), c += ":";
    } else g = at++, c = ":" + c + "r" + g.toString(32) + ":";
    return l.memoizedState = c;
  }, unstable_isNewReconciler: !1 }, ip = {
    readContext: La,
    useCallback: lm,
    useContext: La,
    useEffect: ep,
    useImperativeHandle: sm,
    useInsertionEffect: am,
    useLayoutEffect: tp,
    useMemo: um,
    useReducer: du,
    useRef: om,
    useState: function() {
      return du(Cl);
    },
    useDebugValue: np,
    useDeferredValue: function(l) {
      var c = lo();
      return Xv(c, bo.memoizedState, l);
    },
    useTransition: function() {
      var l = du(Cl)[0], c = lo().memoizedState;
      return [l, c];
    },
    useMutableSource: Xh,
    useSyncExternalStore: Qh,
    useId: Qv,
    unstable_isNewReconciler: !1
  }, dm = { readContext: La, useCallback: lm, useContext: La, useEffect: ep, useImperativeHandle: sm, useInsertionEffect: am, useLayoutEffect: tp, useMemo: um, useReducer: gc, useRef: om, useState: function() {
    return gc(Cl);
  }, useDebugValue: np, useDeferredValue: function(l) {
    var c = lo();
    return bo === null ? c.memoizedState = l : Xv(c, bo.memoizedState, l);
  }, useTransition: function() {
    var l = gc(Cl)[0], c = lo().memoizedState;
    return [l, c];
  }, useMutableSource: Xh, useSyncExternalStore: Qh, useId: Qv, unstable_isNewReconciler: !1 };
  function rs(l, c) {
    if (l && l.defaultProps) {
      c = X({}, c), l = l.defaultProps;
      for (var g in l) c[g] === void 0 && (c[g] = l[g]);
      return c;
    }
    return c;
  }
  function Jv(l, c, g, x) {
    c = l.memoizedState, g = g(x, c), g = g == null ? c : X({}, c, g), l.memoizedState = g, l.lanes === 0 && (l.updateQueue.baseState = g);
  }
  var fm = { isMounted: function(l) {
    return (l = l._reactInternals) ? gn(l) === l : !1;
  }, enqueueSetState: function(l, c, g) {
    l = l._reactInternals;
    var x = xo(), P = As(l), $ = bl(x, P);
    $.payload = c, g != null && ($.callback = g), c = uu(l, $, P), c !== null && (ki(c, l, P, x), Wh(c, l, P));
  }, enqueueReplaceState: function(l, c, g) {
    l = l._reactInternals;
    var x = xo(), P = As(l), $ = bl(x, P);
    $.tag = 1, $.payload = c, g != null && ($.callback = g), c = uu(l, $, P), c !== null && (ki(c, l, P, x), Wh(c, l, P));
  }, enqueueForceUpdate: function(l, c) {
    l = l._reactInternals;
    var g = xo(), x = As(l), P = bl(g, x);
    P.tag = 2, c != null && (P.callback = c), c = uu(l, P, x), c !== null && (ki(c, l, x, g), Wh(c, l, x));
  } };
  function LS(l, c, g, x, P, $, oe) {
    return l = l.stateNode, typeof l.shouldComponentUpdate == "function" ? l.shouldComponentUpdate(x, $, oe) : c.prototype && c.prototype.isPureReactComponent ? !$f(g, x) || !$f(P, $) : !0;
  }
  function pm(l, c, g) {
    var x = !1, P = pi, $ = c.contextType;
    return typeof $ == "object" && $ !== null ? $ = La($) : (P = vo(c) ? Bi : oo.current, x = c.contextTypes, $ = (x = x != null) ? Ui(l, P) : pi), c = new c(g, $), l.memoizedState = c.state !== null && c.state !== void 0 ? c.state : null, c.updater = fm, l.stateNode = c, c._reactInternals = l, x && (l = l.stateNode, l.__reactInternalMemoizedUnmaskedChildContext = P, l.__reactInternalMemoizedMaskedChildContext = $), c;
  }
  function FS(l, c, g, x) {
    l = c.state, typeof c.componentWillReceiveProps == "function" && c.componentWillReceiveProps(g, x), typeof c.UNSAFE_componentWillReceiveProps == "function" && c.UNSAFE_componentWillReceiveProps(g, x), c.state !== l && fm.enqueueReplaceState(c, c.state, null);
  }
  function ap(l, c, g, x) {
    var P = l.stateNode;
    P.props = g, P.state = l.memoizedState, P.refs = {}, qv(l);
    var $ = c.contextType;
    typeof $ == "object" && $ !== null ? P.context = La($) : ($ = vo(c) ? Bi : oo.current, P.context = Ui(l, $)), P.state = l.memoizedState, $ = c.getDerivedStateFromProps, typeof $ == "function" && (Jv(l, c, $, g), P.state = l.memoizedState), typeof c.getDerivedStateFromProps == "function" || typeof P.getSnapshotBeforeUpdate == "function" || typeof P.UNSAFE_componentWillMount != "function" && typeof P.componentWillMount != "function" || (c = P.state, typeof P.componentWillMount == "function" && P.componentWillMount(), typeof P.UNSAFE_componentWillMount == "function" && P.UNSAFE_componentWillMount(), c !== P.state && fm.enqueueReplaceState(P, P.state, null), Kf(l, g, P, x), P.state = l.memoizedState), typeof P.componentDidMount == "function" && (l.flags |= 4194308);
  }
  function Sc(l, c) {
    try {
      var g = "", x = c;
      do
        g += me(x), x = x.return;
      while (x);
      var P = g;
    } catch ($) {
      P = `
Error generating stack: ` + $.message + `
` + $.stack;
    }
    return { value: l, source: c, stack: P, digest: null };
  }
  function Zv(l, c, g) {
    return { value: l, source: null, stack: g ?? null, digest: c ?? null };
  }
  function ey(l, c) {
    try {
      console.error(c.value);
    } catch (g) {
      setTimeout(function() {
        throw g;
      });
    }
  }
  var hm = typeof WeakMap == "function" ? WeakMap : Map;
  function _S(l, c, g) {
    g = bl(-1, g), g.tag = 3, g.payload = { element: null };
    var x = c.value;
    return g.callback = function() {
      Id || (Id = !0, Ec = x), ey(l, c);
    }, g;
  }
  function ty(l, c, g) {
    g = bl(-1, g), g.tag = 3;
    var x = l.type.getDerivedStateFromError;
    if (typeof x == "function") {
      var P = c.value;
      g.payload = function() {
        return x(P);
      }, g.callback = function() {
        ey(l, c);
      };
    }
    var $ = l.stateNode;
    return $ !== null && typeof $.componentDidCatch == "function" && (g.callback = function() {
      ey(l, c), typeof x != "function" && (hu === null ? hu = /* @__PURE__ */ new Set([this]) : hu.add(this));
      var oe = c.stack;
      this.componentDidCatch(c.value, { componentStack: oe !== null ? oe : "" });
    }), g;
  }
  function ny(l, c, g) {
    var x = l.pingCache;
    if (x === null) {
      x = l.pingCache = new hm();
      var P = /* @__PURE__ */ new Set();
      x.set(c, P);
    } else P = x.get(c), P === void 0 && (P = /* @__PURE__ */ new Set(), x.set(c, P));
    P.has(g) || (P.add(g), l = hT.bind(null, l, c, g), c.then(l, l));
  }
  function AS(l) {
    do {
      var c;
      if ((c = l.tag === 13) && (c = l.memoizedState, c = c !== null ? c.dehydrated !== null : !0), c) return l;
      l = l.return;
    } while (l !== null);
    return null;
  }
  function fu(l, c, g, x, P) {
    return l.mode & 1 ? (l.flags |= 65536, l.lanes = P, l) : (l === c ? l.flags |= 65536 : (l.flags |= 128, g.flags |= 131072, g.flags &= -52805, g.tag === 1 && (g.alternate === null ? g.tag = 17 : (c = bl(-1, 1), c.tag = 2, uu(g, c, 1))), g.lanes |= 1), l);
  }
  var sp = M.ReactCurrentOwner, Co = !1;
  function Yo(l, c, g, x) {
    c.child = l === null ? It(c, null, g, x) : so(c, l.child, g, x);
  }
  function Yi(l, c, g, x, P) {
    g = g.render;
    var $ = c.ref;
    return Jr(c, P), x = cu(l, c, g, x, $, P), g = ns(), l !== null && !Co ? (c.updateQueue = l.updateQueue, c.flags &= -2053, l.lanes &= ~P, _a(l, c, P)) : (qr && g && Vh(c), c.flags |= 1, Yo(l, c, x, P), c.child);
  }
  function wc(l, c, g, x, P) {
    if (l === null) {
      var $ = g.type;
      return typeof $ == "function" && !gy($) && $.defaultProps === void 0 && g.compare === null && g.defaultProps === void 0 ? (c.tag = 15, c.type = $, kn(l, c, $, x, P)) : (l = xp(g.type, null, x, c, c.mode, P), l.ref = c.ref, l.return = c, c.child = l);
    }
    if ($ = l.child, !(l.lanes & P)) {
      var oe = $.memoizedProps;
      if (g = g.compare, g = g !== null ? g : $f, g(oe, x) && l.ref === c.ref) return _a(l, c, P);
    }
    return c.flags |= 1, l = gu($, x), l.ref = c.ref, l.return = c, c.child = l;
  }
  function kn(l, c, g, x, P) {
    if (l !== null) {
      var $ = l.memoizedProps;
      if ($f($, x) && l.ref === c.ref) if (Co = !1, c.pendingProps = x = $, (l.lanes & P) !== 0) l.flags & 131072 && (Co = !0);
      else return c.lanes = l.lanes, _a(l, c, P);
    }
    return $S(l, c, g, x, P);
  }
  function lp(l, c, g) {
    var x = c.pendingProps, P = x.children, $ = l !== null ? l.memoizedState : null;
    if (x.mode === "hidden") if (!(c.mode & 1)) c.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }, Zt(kd, pa), pa |= g;
    else {
      if (!(g & 1073741824)) return l = $ !== null ? $.baseLanes | g : g, c.lanes = c.childLanes = 1073741824, c.memoizedState = { baseLanes: l, cachePool: null, transitions: null }, c.updateQueue = null, Zt(kd, pa), pa |= l, null;
      c.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }, x = $ !== null ? $.baseLanes : g, Zt(kd, pa), pa |= x;
    }
    else $ !== null ? (x = $.baseLanes | g, c.memoizedState = null) : x = g, Zt(kd, pa), pa |= x;
    return Yo(l, c, P, g), c.child;
  }
  function ry(l, c) {
    var g = c.ref;
    (l === null && g !== null || l !== null && l.ref !== g) && (c.flags |= 512, c.flags |= 2097152);
  }
  function $S(l, c, g, x, P) {
    var $ = vo(g) ? Bi : oo.current;
    return $ = Ui(c, $), Jr(c, P), g = cu(l, c, g, x, $, P), x = ns(), l !== null && !Co ? (c.updateQueue = l.updateQueue, c.flags &= -2053, l.lanes &= ~P, _a(l, c, P)) : (qr && x && Vh(c), c.flags |= 1, Yo(l, c, g, P), c.child);
  }
  function jS(l, c, g, x, P) {
    if (vo(g)) {
      var $ = !0;
      jo(c);
    } else $ = !1;
    if (Jr(c, P), c.stateNode === null) Fa(l, c), pm(c, g, x), ap(c, g, x, P), x = !0;
    else if (l === null) {
      var oe = c.stateNode, he = c.memoizedProps;
      oe.props = he;
      var Se = oe.context, je = g.contextType;
      typeof je == "object" && je !== null ? je = La(je) : (je = vo(g) ? Bi : oo.current, je = Ui(c, je));
      var lt = g.getDerivedStateFromProps, dt = typeof lt == "function" || typeof oe.getSnapshotBeforeUpdate == "function";
      dt || typeof oe.UNSAFE_componentWillReceiveProps != "function" && typeof oe.componentWillReceiveProps != "function" || (he !== x || Se !== je) && FS(c, oe, x, je), fa = !1;
      var st = c.memoizedState;
      oe.state = st, Kf(c, x, oe, P), Se = c.memoizedState, he !== x || st !== Se || No.current || fa ? (typeof lt == "function" && (Jv(c, g, lt, x), Se = c.memoizedState), (he = fa || LS(c, g, he, x, st, Se, je)) ? (dt || typeof oe.UNSAFE_componentWillMount != "function" && typeof oe.componentWillMount != "function" || (typeof oe.componentWillMount == "function" && oe.componentWillMount(), typeof oe.UNSAFE_componentWillMount == "function" && oe.UNSAFE_componentWillMount()), typeof oe.componentDidMount == "function" && (c.flags |= 4194308)) : (typeof oe.componentDidMount == "function" && (c.flags |= 4194308), c.memoizedProps = x, c.memoizedState = Se), oe.props = x, oe.state = Se, oe.context = je, x = he) : (typeof oe.componentDidMount == "function" && (c.flags |= 4194308), x = !1);
    } else {
      oe = c.stateNode, MS(l, c), he = c.memoizedProps, je = c.type === c.elementType ? he : rs(c.type, he), oe.props = je, dt = c.pendingProps, st = oe.context, Se = g.contextType, typeof Se == "object" && Se !== null ? Se = La(Se) : (Se = vo(g) ? Bi : oo.current, Se = Ui(c, Se));
      var Ft = g.getDerivedStateFromProps;
      (lt = typeof Ft == "function" || typeof oe.getSnapshotBeforeUpdate == "function") || typeof oe.UNSAFE_componentWillReceiveProps != "function" && typeof oe.componentWillReceiveProps != "function" || (he !== dt || st !== Se) && FS(c, oe, x, Se), fa = !1, st = c.memoizedState, oe.state = st, Kf(c, x, oe, P);
      var Wt = c.memoizedState;
      he !== dt || st !== Wt || No.current || fa ? (typeof Ft == "function" && (Jv(c, g, Ft, x), Wt = c.memoizedState), (je = fa || LS(c, g, je, x, st, Wt, Se) || !1) ? (lt || typeof oe.UNSAFE_componentWillUpdate != "function" && typeof oe.componentWillUpdate != "function" || (typeof oe.componentWillUpdate == "function" && oe.componentWillUpdate(x, Wt, Se), typeof oe.UNSAFE_componentWillUpdate == "function" && oe.UNSAFE_componentWillUpdate(x, Wt, Se)), typeof oe.componentDidUpdate == "function" && (c.flags |= 4), typeof oe.getSnapshotBeforeUpdate == "function" && (c.flags |= 1024)) : (typeof oe.componentDidUpdate != "function" || he === l.memoizedProps && st === l.memoizedState || (c.flags |= 4), typeof oe.getSnapshotBeforeUpdate != "function" || he === l.memoizedProps && st === l.memoizedState || (c.flags |= 1024), c.memoizedProps = x, c.memoizedState = Wt), oe.props = x, oe.state = Wt, oe.context = Se, x = je) : (typeof oe.componentDidUpdate != "function" || he === l.memoizedProps && st === l.memoizedState || (c.flags |= 4), typeof oe.getSnapshotBeforeUpdate != "function" || he === l.memoizedProps && st === l.memoizedState || (c.flags |= 1024), x = !1);
    }
    return up(l, c, g, x, $, P);
  }
  function up(l, c, g, x, P, $) {
    ry(l, c);
    var oe = (c.flags & 128) !== 0;
    if (!x && !oe) return P && zh(c, g, !1), _a(l, c, $);
    x = c.stateNode, sp.current = c;
    var he = oe && typeof g.getDerivedStateFromError != "function" ? null : x.render();
    return c.flags |= 1, l !== null && oe ? (c.child = so(c, l.child, null, $), c.child = so(c, null, he, $)) : Yo(l, c, he, $), c.memoizedState = x.state, P && zh(c, g, !0), c.child;
  }
  function Rd(l) {
    var c = l.stateNode;
    c.pendingContext ? RS(l, c.pendingContext, c.pendingContext !== c.context) : c.context && RS(l, c.context, !1), Yv(l, c.containerInfo);
  }
  function zS(l, c, g, x, P) {
    return lu(), yl(P), c.flags |= 256, Yo(l, c, g, x), c.child;
  }
  var mm = { dehydrated: null, treeContext: null, retryLane: 0 };
  function oy(l) {
    return { baseLanes: l, cachePool: null, transitions: null };
  }
  function gm(l, c, g) {
    var x = c.pendingProps, P = Zr.current, $ = !1, oe = (c.flags & 128) !== 0, he;
    if ((he = oe) || (he = l !== null && l.memoizedState === null ? !1 : (P & 2) !== 0), he ? ($ = !0, c.flags &= -129) : (l === null || l.memoizedState !== null) && (P |= 1), Zt(Zr, P & 1), l === null)
      return zv(c), l = c.memoizedState, l !== null && (l = l.dehydrated, l !== null) ? (c.mode & 1 ? l.data === "$!" ? c.lanes = 8 : c.lanes = 1073741824 : c.lanes = 1, null) : (oe = x.children, l = x.fallback, $ ? (x = c.mode, $ = c.child, oe = { mode: "hidden", children: oe }, !(x & 1) && $ !== null ? ($.childLanes = 0, $.pendingProps = oe) : $ = vu(oe, x, 0, null), l = El(l, x, g, null), $.return = c, l.return = c, $.sibling = l, c.child = $, c.child.memoizedState = oy(g), c.memoizedState = mm, l) : iy(c, oe));
    if (P = l.memoizedState, P !== null && (he = P.dehydrated, he !== null)) return HS(l, c, oe, x, he, P, g);
    if ($) {
      $ = x.fallback, oe = c.mode, P = l.child, he = P.sibling;
      var Se = { mode: "hidden", children: x.children };
      return !(oe & 1) && c.child !== P ? (x = c.child, x.childLanes = 0, x.pendingProps = Se, c.deletions = null) : (x = gu(P, Se), x.subtreeFlags = P.subtreeFlags & 14680064), he !== null ? $ = gu(he, $) : ($ = El($, oe, g, null), $.flags |= 2), $.return = c, x.return = c, x.sibling = $, c.child = x, x = $, $ = c.child, oe = l.child.memoizedState, oe = oe === null ? oy(g) : { baseLanes: oe.baseLanes | g, cachePool: null, transitions: oe.transitions }, $.memoizedState = oe, $.childLanes = l.childLanes & ~g, c.memoizedState = mm, x;
    }
    return $ = l.child, l = $.sibling, x = gu($, { mode: "visible", children: x.children }), !(c.mode & 1) && (x.lanes = g), x.return = c, x.sibling = null, l !== null && (g = c.deletions, g === null ? (c.deletions = [l], c.flags |= 16) : g.push(l)), c.child = x, c.memoizedState = null, x;
  }
  function iy(l, c) {
    return c = vu({ mode: "visible", children: c }, l.mode, 0, null), c.return = l, l.child = c;
  }
  function cp(l, c, g, x) {
    return x !== null && yl(x), so(c, l.child, null, g), l = iy(c, c.pendingProps.children), l.flags |= 2, c.memoizedState = null, l;
  }
  function HS(l, c, g, x, P, $, oe) {
    if (g)
      return c.flags & 256 ? (c.flags &= -257, x = Zv(Error(n(422))), cp(l, c, oe, x)) : c.memoizedState !== null ? (c.child = l.child, c.flags |= 128, null) : ($ = x.fallback, P = c.mode, x = vu({ mode: "visible", children: x.children }, P, 0, null), $ = El($, P, oe, null), $.flags |= 2, x.return = c, $.return = c, x.sibling = $, c.child = x, c.mode & 1 && so(c, l.child, null, oe), c.child.memoizedState = oy(oe), c.memoizedState = mm, $);
    if (!(c.mode & 1)) return cp(l, c, oe, null);
    if (P.data === "$!") {
      if (x = P.nextSibling && P.nextSibling.dataset, x) var he = x.dgst;
      return x = he, $ = Error(n(419)), x = Zv($, x, void 0), cp(l, c, oe, x);
    }
    if (he = (oe & l.childLanes) !== 0, Co || he) {
      if (x = Fo, x !== null) {
        switch (oe & -oe) {
          case 4:
            P = 2;
            break;
          case 16:
            P = 8;
            break;
          case 64:
          case 128:
          case 256:
          case 512:
          case 1024:
          case 2048:
          case 4096:
          case 8192:
          case 16384:
          case 32768:
          case 65536:
          case 131072:
          case 262144:
          case 524288:
          case 1048576:
          case 2097152:
          case 4194304:
          case 8388608:
          case 16777216:
          case 33554432:
          case 67108864:
            P = 32;
            break;
          case 536870912:
            P = 268435456;
            break;
          default:
            P = 0;
        }
        P = P & (x.suspendedLanes | oe) ? 0 : P, P !== 0 && P !== $.retryLane && ($.retryLane = P, da(l, P), ki(x, l, P, -1));
      }
      return my(), x = Zv(Error(n(421))), cp(l, c, oe, x);
    }
    return P.data === "$?" ? (c.flags |= 128, c.child = l.child, c = mT.bind(null, l), P._reactRetry = c, null) : (l = $.treeContext, Wi = Rs(P.nextSibling), Gi = c, qr = !0, Na = null, l !== null && (yo[Da++] = Ms, yo[Da++] = Is, yo[Da++] = ua, Ms = l.id, Is = l.overflow, ua = c), c = iy(c, x.children), c.flags |= 4096, c);
  }
  function ay(l, c, g) {
    l.lanes |= c;
    var x = l.alternate;
    x !== null && (x.lanes |= c), Uv(l.return, c, g);
  }
  function Ti(l, c, g, x, P) {
    var $ = l.memoizedState;
    $ === null ? l.memoizedState = { isBackwards: c, rendering: null, renderingStartTime: 0, last: x, tail: g, tailMode: P } : ($.isBackwards = c, $.rendering = null, $.renderingStartTime = 0, $.last = x, $.tail = g, $.tailMode = P);
  }
  function Ns(l, c, g) {
    var x = c.pendingProps, P = x.revealOrder, $ = x.tail;
    if (Yo(l, c, x.children, g), x = Zr.current, x & 2) x = x & 1 | 2, c.flags |= 128;
    else {
      if (l !== null && l.flags & 128) e: for (l = c.child; l !== null; ) {
        if (l.tag === 13) l.memoizedState !== null && ay(l, g, c);
        else if (l.tag === 19) ay(l, g, c);
        else if (l.child !== null) {
          l.child.return = l, l = l.child;
          continue;
        }
        if (l === c) break e;
        for (; l.sibling === null; ) {
          if (l.return === null || l.return === c) break e;
          l = l.return;
        }
        l.sibling.return = l.return, l = l.sibling;
      }
      x &= 1;
    }
    if (Zt(Zr, x), !(c.mode & 1)) c.memoizedState = null;
    else switch (P) {
      case "forwards":
        for (g = c.child, P = null; g !== null; ) l = g.alternate, l !== null && Kh(l) === null && (P = g), g = g.sibling;
        g = P, g === null ? (P = c.child, c.child = null) : (P = g.sibling, g.sibling = null), Ti(c, !1, P, g, $);
        break;
      case "backwards":
        for (g = null, P = c.child, c.child = null; P !== null; ) {
          if (l = P.alternate, l !== null && Kh(l) === null) {
            c.child = P;
            break;
          }
          l = P.sibling, P.sibling = g, g = P, P = l;
        }
        Ti(c, !0, g, null, $);
        break;
      case "together":
        Ti(c, !1, null, null, void 0);
        break;
      default:
        c.memoizedState = null;
    }
    return c.child;
  }
  function Fa(l, c) {
    !(c.mode & 1) && l !== null && (l.alternate = null, c.alternate = null, c.flags |= 2);
  }
  function _a(l, c, g) {
    if (l !== null && (c.dependencies = l.dependencies), _s |= c.lanes, !(g & c.childLanes)) return null;
    if (l !== null && c.child !== l.child) throw Error(n(153));
    if (c.child !== null) {
      for (l = c.child, g = gu(l, l.pendingProps), c.child = g, g.return = c; l.sibling !== null; ) l = l.sibling, g = g.sibling = gu(l, l.pendingProps), g.return = c;
      g.sibling = null;
    }
    return c.child;
  }
  function dp(l, c, g) {
    switch (c.tag) {
      case 3:
        Rd(c), lu();
        break;
      case 5:
        DS(c);
        break;
      case 1:
        vo(c.type) && jo(c);
        break;
      case 4:
        Yv(c, c.stateNode.containerInfo);
        break;
      case 10:
        var x = c.type._context, P = c.memoizedProps.value;
        Zt(ca, x._currentValue), x._currentValue = P;
        break;
      case 13:
        if (x = c.memoizedState, x !== null)
          return x.dehydrated !== null ? (Zt(Zr, Zr.current & 1), c.flags |= 128, null) : g & c.child.childLanes ? gm(l, c, g) : (Zt(Zr, Zr.current & 1), l = _a(l, c, g), l !== null ? l.sibling : null);
        Zt(Zr, Zr.current & 1);
        break;
      case 19:
        if (x = (g & c.childLanes) !== 0, l.flags & 128) {
          if (x) return Ns(l, c, g);
          c.flags |= 128;
        }
        if (P = c.memoizedState, P !== null && (P.rendering = null, P.tail = null, P.lastEffect = null), Zt(Zr, Zr.current), x) break;
        return null;
      case 22:
      case 23:
        return c.lanes = 0, lp(l, c, g);
    }
    return _a(l, c, g);
  }
  var Aa, So, VS, BS;
  Aa = function(l, c) {
    for (var g = c.child; g !== null; ) {
      if (g.tag === 5 || g.tag === 6) l.appendChild(g.stateNode);
      else if (g.tag !== 4 && g.child !== null) {
        g.child.return = g, g = g.child;
        continue;
      }
      if (g === c) break;
      for (; g.sibling === null; ) {
        if (g.return === null || g.return === c) return;
        g = g.return;
      }
      g.sibling.return = g.return, g = g.sibling;
    }
  }, So = function() {
  }, VS = function(l, c, g, x) {
    var P = l.memoizedProps;
    if (P !== x) {
      l = c.stateNode, pc(Ds.current);
      var $ = null;
      switch (g) {
        case "input":
          P = _e(l, P), x = _e(l, x), $ = [];
          break;
        case "select":
          P = X({}, P, { value: void 0 }), x = X({}, x, { value: void 0 }), $ = [];
          break;
        case "textarea":
          P = ot(l, P), x = ot(l, x), $ = [];
          break;
        default:
          typeof P.onClick != "function" && typeof x.onClick == "function" && (l.onclick = nu);
      }
      Ge(g, x);
      var oe;
      g = null;
      for (je in P) if (!x.hasOwnProperty(je) && P.hasOwnProperty(je) && P[je] != null) if (je === "style") {
        var he = P[je];
        for (oe in he) he.hasOwnProperty(oe) && (g || (g = {}), g[oe] = "");
      } else je !== "dangerouslySetInnerHTML" && je !== "children" && je !== "suppressContentEditableWarning" && je !== "suppressHydrationWarning" && je !== "autoFocus" && (s.hasOwnProperty(je) ? $ || ($ = []) : ($ = $ || []).push(je, null));
      for (je in x) {
        var Se = x[je];
        if (he = P != null ? P[je] : void 0, x.hasOwnProperty(je) && Se !== he && (Se != null || he != null)) if (je === "style") if (he) {
          for (oe in he) !he.hasOwnProperty(oe) || Se && Se.hasOwnProperty(oe) || (g || (g = {}), g[oe] = "");
          for (oe in Se) Se.hasOwnProperty(oe) && he[oe] !== Se[oe] && (g || (g = {}), g[oe] = Se[oe]);
        } else g || ($ || ($ = []), $.push(
          je,
          g
        )), g = Se;
        else je === "dangerouslySetInnerHTML" ? (Se = Se ? Se.__html : void 0, he = he ? he.__html : void 0, Se != null && he !== Se && ($ = $ || []).push(je, Se)) : je === "children" ? typeof Se != "string" && typeof Se != "number" || ($ = $ || []).push(je, "" + Se) : je !== "suppressContentEditableWarning" && je !== "suppressHydrationWarning" && (s.hasOwnProperty(je) ? (Se != null && je === "onScroll" && pr("scroll", l), $ || he === Se || ($ = [])) : ($ = $ || []).push(je, Se));
      }
      g && ($ = $ || []).push("style", g);
      var je = $;
      (c.updateQueue = je) && (c.flags |= 4);
    }
  }, BS = function(l, c, g, x) {
    g !== x && (c.flags |= 4);
  };
  function fp(l, c) {
    if (!qr) switch (l.tailMode) {
      case "hidden":
        c = l.tail;
        for (var g = null; c !== null; ) c.alternate !== null && (g = c), c = c.sibling;
        g === null ? l.tail = null : g.sibling = null;
        break;
      case "collapsed":
        g = l.tail;
        for (var x = null; g !== null; ) g.alternate !== null && (x = g), g = g.sibling;
        x === null ? c || l.tail === null ? l.tail = null : l.tail.sibling = null : x.sibling = null;
    }
  }
  function Ho(l) {
    var c = l.alternate !== null && l.alternate.child === l.child, g = 0, x = 0;
    if (c) for (var P = l.child; P !== null; ) g |= P.lanes | P.childLanes, x |= P.subtreeFlags & 14680064, x |= P.flags & 14680064, P.return = l, P = P.sibling;
    else for (P = l.child; P !== null; ) g |= P.lanes | P.childLanes, x |= P.subtreeFlags, x |= P.flags, P.return = l, P = P.sibling;
    return l.subtreeFlags |= x, l.childLanes = g, c;
  }
  function US(l, c, g) {
    var x = c.pendingProps;
    switch (Bh(c), c.tag) {
      case 2:
      case 16:
      case 15:
      case 0:
      case 11:
      case 7:
      case 8:
      case 12:
      case 9:
      case 14:
        return Ho(c), null;
      case 1:
        return vo(c.type) && Sd(), Ho(c), null;
      case 3:
        return x = c.stateNode, hc(), jr(No), jr(oo), nn(), x.pendingContext && (x.context = x.pendingContext, x.pendingContext = null), (l === null || l.child === null) && (Uh(c) ? c.flags |= 4 : l === null || l.memoizedState.isDehydrated && !(c.flags & 256) || (c.flags |= 1024, Na !== null && (Tc(Na), Na = null))), So(l, c), Ho(c), null;
      case 5:
        qh(c);
        var P = pc(Qf.current);
        if (g = c.type, l !== null && c.stateNode != null) VS(l, c, g, x, P), l.ref !== c.ref && (c.flags |= 512, c.flags |= 2097152);
        else {
          if (!x) {
            if (c.stateNode === null) throw Error(n(166));
            return Ho(c), null;
          }
          if (l = pc(Ds.current), Uh(c)) {
            x = c.stateNode, g = c.type;
            var $ = c.memoizedProps;
            switch (x[Os] = c, x[Uf] = $, l = (c.mode & 1) !== 0, g) {
              case "dialog":
                pr("cancel", x), pr("close", x);
                break;
              case "iframe":
              case "object":
              case "embed":
                pr("load", x);
                break;
              case "video":
              case "audio":
                for (P = 0; P < Hf.length; P++) pr(Hf[P], x);
                break;
              case "source":
                pr("error", x);
                break;
              case "img":
              case "image":
              case "link":
                pr(
                  "error",
                  x
                ), pr("load", x);
                break;
              case "details":
                pr("toggle", x);
                break;
              case "input":
                He(x, $), pr("invalid", x);
                break;
              case "select":
                x._wrapperState = { wasMultiple: !!$.multiple }, pr("invalid", x);
                break;
              case "textarea":
                jt(x, $), pr("invalid", x);
            }
            Ge(g, $), P = null;
            for (var oe in $) if ($.hasOwnProperty(oe)) {
              var he = $[oe];
              oe === "children" ? typeof he == "string" ? x.textContent !== he && ($.suppressHydrationWarning !== !0 && _h(x.textContent, he, l), P = ["children", he]) : typeof he == "number" && x.textContent !== "" + he && ($.suppressHydrationWarning !== !0 && _h(
                x.textContent,
                he,
                l
              ), P = ["children", "" + he]) : s.hasOwnProperty(oe) && he != null && oe === "onScroll" && pr("scroll", x);
            }
            switch (g) {
              case "input":
                Re(x), rt(x, $, !0);
                break;
              case "textarea":
                Re(x), Tt(x);
                break;
              case "select":
              case "option":
                break;
              default:
                typeof $.onClick == "function" && (x.onclick = nu);
            }
            x = P, c.updateQueue = x, x !== null && (c.flags |= 4);
          } else {
            oe = P.nodeType === 9 ? P : P.ownerDocument, l === "http://www.w3.org/1999/xhtml" && (l = Rt(g)), l === "http://www.w3.org/1999/xhtml" ? g === "script" ? (l = oe.createElement("div"), l.innerHTML = "<script><\/script>", l = l.removeChild(l.firstChild)) : typeof x.is == "string" ? l = oe.createElement(g, { is: x.is }) : (l = oe.createElement(g), g === "select" && (oe = l, x.multiple ? oe.multiple = !0 : x.size && (oe.size = x.size))) : l = oe.createElementNS(l, g), l[Os] = c, l[Uf] = x, Aa(l, c, !1, !1), c.stateNode = l;
            e: {
              switch (oe = Et(g, x), g) {
                case "dialog":
                  pr("cancel", l), pr("close", l), P = x;
                  break;
                case "iframe":
                case "object":
                case "embed":
                  pr("load", l), P = x;
                  break;
                case "video":
                case "audio":
                  for (P = 0; P < Hf.length; P++) pr(Hf[P], l);
                  P = x;
                  break;
                case "source":
                  pr("error", l), P = x;
                  break;
                case "img":
                case "image":
                case "link":
                  pr(
                    "error",
                    l
                  ), pr("load", l), P = x;
                  break;
                case "details":
                  pr("toggle", l), P = x;
                  break;
                case "input":
                  He(l, x), P = _e(l, x), pr("invalid", l);
                  break;
                case "option":
                  P = x;
                  break;
                case "select":
                  l._wrapperState = { wasMultiple: !!x.multiple }, P = X({}, x, { value: void 0 }), pr("invalid", l);
                  break;
                case "textarea":
                  jt(l, x), P = ot(l, x), pr("invalid", l);
                  break;
                default:
                  P = x;
              }
              Ge(g, P), he = P;
              for ($ in he) if (he.hasOwnProperty($)) {
                var Se = he[$];
                $ === "style" ? zt(l, Se) : $ === "dangerouslySetInnerHTML" ? (Se = Se ? Se.__html : void 0, Se != null && Qe(l, Se)) : $ === "children" ? typeof Se == "string" ? (g !== "textarea" || Se !== "") && Oe(l, Se) : typeof Se == "number" && Oe(l, "" + Se) : $ !== "suppressContentEditableWarning" && $ !== "suppressHydrationWarning" && $ !== "autoFocus" && (s.hasOwnProperty($) ? Se != null && $ === "onScroll" && pr("scroll", l) : Se != null && L(l, $, Se, oe));
              }
              switch (g) {
                case "input":
                  Re(l), rt(l, x, !1);
                  break;
                case "textarea":
                  Re(l), Tt(l);
                  break;
                case "option":
                  x.value != null && l.setAttribute("value", "" + pe(x.value));
                  break;
                case "select":
                  l.multiple = !!x.multiple, $ = x.value, $ != null ? gt(l, !!x.multiple, $, !1) : x.defaultValue != null && gt(
                    l,
                    !!x.multiple,
                    x.defaultValue,
                    !0
                  );
                  break;
                default:
                  typeof P.onClick == "function" && (l.onclick = nu);
              }
              switch (g) {
                case "button":
                case "input":
                case "select":
                case "textarea":
                  x = !!x.autoFocus;
                  break e;
                case "img":
                  x = !0;
                  break e;
                default:
                  x = !1;
              }
            }
            x && (c.flags |= 4);
          }
          c.ref !== null && (c.flags |= 512, c.flags |= 2097152);
        }
        return Ho(c), null;
      case 6:
        if (l && c.stateNode != null) BS(l, c, l.memoizedProps, x);
        else {
          if (typeof x != "string" && c.stateNode === null) throw Error(n(166));
          if (g = pc(Qf.current), pc(Ds.current), Uh(c)) {
            if (x = c.stateNode, g = c.memoizedProps, x[Os] = c, ($ = x.nodeValue !== g) && (l = Gi, l !== null)) switch (l.tag) {
              case 3:
                _h(x.nodeValue, g, (l.mode & 1) !== 0);
                break;
              case 5:
                l.memoizedProps.suppressHydrationWarning !== !0 && _h(x.nodeValue, g, (l.mode & 1) !== 0);
            }
            $ && (c.flags |= 4);
          } else x = (g.nodeType === 9 ? g : g.ownerDocument).createTextNode(x), x[Os] = c, c.stateNode = x;
        }
        return Ho(c), null;
      case 13:
        if (jr(Zr), x = c.memoizedState, l === null || l.memoizedState !== null && l.memoizedState.dehydrated !== null) {
          if (qr && Wi !== null && c.mode & 1 && !(c.flags & 128)) qf(), lu(), c.flags |= 98560, $ = !1;
          else if ($ = Uh(c), x !== null && x.dehydrated !== null) {
            if (l === null) {
              if (!$) throw Error(n(318));
              if ($ = c.memoizedState, $ = $ !== null ? $.dehydrated : null, !$) throw Error(n(317));
              $[Os] = c;
            } else lu(), !(c.flags & 128) && (c.memoizedState = null), c.flags |= 4;
            Ho(c), $ = !1;
          } else Na !== null && (Tc(Na), Na = null), $ = !0;
          if (!$) return c.flags & 65536 ? c : null;
        }
        return c.flags & 128 ? (c.lanes = g, c) : (x = x !== null, x !== (l !== null && l.memoizedState !== null) && x && (c.child.flags |= 8192, c.mode & 1 && (l === null || Zr.current & 1 ? co === 0 && (co = 3) : my())), c.updateQueue !== null && (c.flags |= 4), Ho(c), null);
      case 4:
        return hc(), So(l, c), l === null && gd(c.stateNode.containerInfo), Ho(c), null;
      case 10:
        return Bv(c.type._context), Ho(c), null;
      case 17:
        return vo(c.type) && Sd(), Ho(c), null;
      case 19:
        if (jr(Zr), $ = c.memoizedState, $ === null) return Ho(c), null;
        if (x = (c.flags & 128) !== 0, oe = $.rendering, oe === null) if (x) fp($, !1);
        else {
          if (co !== 0 || l !== null && l.flags & 128) for (l = c.child; l !== null; ) {
            if (oe = Kh(l), oe !== null) {
              for (c.flags |= 128, fp($, !1), x = oe.updateQueue, x !== null && (c.updateQueue = x, c.flags |= 4), c.subtreeFlags = 0, x = g, g = c.child; g !== null; ) $ = g, l = x, $.flags &= 14680066, oe = $.alternate, oe === null ? ($.childLanes = 0, $.lanes = l, $.child = null, $.subtreeFlags = 0, $.memoizedProps = null, $.memoizedState = null, $.updateQueue = null, $.dependencies = null, $.stateNode = null) : ($.childLanes = oe.childLanes, $.lanes = oe.lanes, $.child = oe.child, $.subtreeFlags = 0, $.deletions = null, $.memoizedProps = oe.memoizedProps, $.memoizedState = oe.memoizedState, $.updateQueue = oe.updateQueue, $.type = oe.type, l = oe.dependencies, $.dependencies = l === null ? null : { lanes: l.lanes, firstContext: l.firstContext }), g = g.sibling;
              return Zt(Zr, Zr.current & 1 | 2), c.child;
            }
            l = l.sibling;
          }
          $.tail !== null && En() > Md && (c.flags |= 128, x = !0, fp($, !1), c.lanes = 4194304);
        }
        else {
          if (!x) if (l = Kh(oe), l !== null) {
            if (c.flags |= 128, x = !0, g = l.updateQueue, g !== null && (c.updateQueue = g, c.flags |= 4), fp($, !0), $.tail === null && $.tailMode === "hidden" && !oe.alternate && !qr) return Ho(c), null;
          } else 2 * En() - $.renderingStartTime > Md && g !== 1073741824 && (c.flags |= 128, x = !0, fp($, !1), c.lanes = 4194304);
          $.isBackwards ? (oe.sibling = c.child, c.child = oe) : (g = $.last, g !== null ? g.sibling = oe : c.child = oe, $.last = oe);
        }
        return $.tail !== null ? (c = $.tail, $.rendering = c, $.tail = c.sibling, $.renderingStartTime = En(), c.sibling = null, g = Zr.current, Zt(Zr, x ? g & 1 | 2 : g & 1), c) : (Ho(c), null);
      case 22:
      case 23:
        return hy(), x = c.memoizedState !== null, l !== null && l.memoizedState !== null !== x && (c.flags |= 8192), x && c.mode & 1 ? pa & 1073741824 && (Ho(c), c.subtreeFlags & 6 && (c.flags |= 8192)) : Ho(c), null;
      case 24:
        return null;
      case 25:
        return null;
    }
    throw Error(n(156, c.tag));
  }
  function vm(l, c) {
    switch (Bh(c), c.tag) {
      case 1:
        return vo(c.type) && Sd(), l = c.flags, l & 65536 ? (c.flags = l & -65537 | 128, c) : null;
      case 3:
        return hc(), jr(No), jr(oo), nn(), l = c.flags, l & 65536 && !(l & 128) ? (c.flags = l & -65537 | 128, c) : null;
      case 5:
        return qh(c), null;
      case 13:
        if (jr(Zr), l = c.memoizedState, l !== null && l.dehydrated !== null) {
          if (c.alternate === null) throw Error(n(340));
          lu();
        }
        return l = c.flags, l & 65536 ? (c.flags = l & -65537 | 128, c) : null;
      case 19:
        return jr(Zr), null;
      case 4:
        return hc(), null;
      case 10:
        return Bv(c.type._context), null;
      case 22:
      case 23:
        return hy(), null;
      case 24:
        return null;
      default:
        return null;
    }
  }
  var pp = !1, mi = !1, lT = typeof WeakSet == "function" ? WeakSet : Set, Ht = null;
  function Od(l, c) {
    var g = l.ref;
    if (g !== null) if (typeof g == "function") try {
      g(null);
    } catch (x) {
      Kr(l, c, x);
    }
    else g.current = null;
  }
  function ym(l, c, g) {
    try {
      g();
    } catch (x) {
      Kr(l, c, x);
    }
  }
  var GS = !1;
  function WS(l, c) {
    if (Bf = ka, l = jf(), kh(l)) {
      if ("selectionStart" in l) var g = { start: l.selectionStart, end: l.selectionEnd };
      else e: {
        g = (g = l.ownerDocument) && g.defaultView || window;
        var x = g.getSelection && g.getSelection();
        if (x && x.rangeCount !== 0) {
          g = x.anchorNode;
          var P = x.anchorOffset, $ = x.focusNode;
          x = x.focusOffset;
          try {
            g.nodeType, $.nodeType;
          } catch {
            g = null;
            break e;
          }
          var oe = 0, he = -1, Se = -1, je = 0, lt = 0, dt = l, st = null;
          t: for (; ; ) {
            for (var Ft; dt !== g || P !== 0 && dt.nodeType !== 3 || (he = oe + P), dt !== $ || x !== 0 && dt.nodeType !== 3 || (Se = oe + x), dt.nodeType === 3 && (oe += dt.nodeValue.length), (Ft = dt.firstChild) !== null; )
              st = dt, dt = Ft;
            for (; ; ) {
              if (dt === l) break t;
              if (st === g && ++je === P && (he = oe), st === $ && ++lt === x && (Se = oe), (Ft = dt.nextSibling) !== null) break;
              dt = st, st = dt.parentNode;
            }
            dt = Ft;
          }
          g = he === -1 || Se === -1 ? null : { start: he, end: Se };
        } else g = null;
      }
      g = g || { start: 0, end: 0 };
    } else g = null;
    for (sc = { focusedElem: l, selectionRange: g }, ka = !1, Ht = c; Ht !== null; ) if (c = Ht, l = c.child, (c.subtreeFlags & 1028) !== 0 && l !== null) l.return = c, Ht = l;
    else for (; Ht !== null; ) {
      c = Ht;
      try {
        var Wt = c.alternate;
        if (c.flags & 1024) switch (c.tag) {
          case 0:
          case 11:
          case 15:
            break;
          case 1:
            if (Wt !== null) {
              var Yt = Wt.memoizedProps, fo = Wt.memoizedState, Pe = c.stateNode, Ee = Pe.getSnapshotBeforeUpdate(c.elementType === c.type ? Yt : rs(c.type, Yt), fo);
              Pe.__reactInternalSnapshotBeforeUpdate = Ee;
            }
            break;
          case 3:
            var Fe = c.stateNode.containerInfo;
            Fe.nodeType === 1 ? Fe.textContent = "" : Fe.nodeType === 9 && Fe.documentElement && Fe.removeChild(Fe.documentElement);
            break;
          case 5:
          case 6:
          case 4:
          case 17:
            break;
          default:
            throw Error(n(163));
        }
      } catch (ut) {
        Kr(c, c.return, ut);
      }
      if (l = c.sibling, l !== null) {
        l.return = c.return, Ht = l;
        break;
      }
      Ht = c.return;
    }
    return Wt = GS, GS = !1, Wt;
  }
  function hp(l, c, g) {
    var x = c.updateQueue;
    if (x = x !== null ? x.lastEffect : null, x !== null) {
      var P = x = x.next;
      do {
        if ((P.tag & l) === l) {
          var $ = P.destroy;
          P.destroy = void 0, $ !== void 0 && ym(c, g, $);
        }
        P = P.next;
      } while (P !== x);
    }
  }
  function mp(l, c) {
    if (c = c.updateQueue, c = c !== null ? c.lastEffect : null, c !== null) {
      var g = c = c.next;
      do {
        if ((g.tag & l) === l) {
          var x = g.create;
          g.destroy = x();
        }
        g = g.next;
      } while (g !== c);
    }
  }
  function sy(l) {
    var c = l.ref;
    if (c !== null) {
      var g = l.stateNode;
      switch (l.tag) {
        case 5:
          l = g;
          break;
        default:
          l = g;
      }
      typeof c == "function" ? c(l) : c.current = l;
    }
  }
  function bm(l) {
    var c = l.alternate;
    c !== null && (l.alternate = null, bm(c)), l.child = null, l.deletions = null, l.sibling = null, l.tag === 5 && (c = l.stateNode, c !== null && (delete c[Os], delete c[Uf], delete c[Gf], delete c[Cd], delete c[aT])), l.stateNode = null, l.return = null, l.dependencies = null, l.memoizedProps = null, l.memoizedState = null, l.pendingProps = null, l.stateNode = null, l.updateQueue = null;
  }
  function gp(l) {
    return l.tag === 5 || l.tag === 3 || l.tag === 4;
  }
  function Sl(l) {
    e: for (; ; ) {
      for (; l.sibling === null; ) {
        if (l.return === null || gp(l.return)) return null;
        l = l.return;
      }
      for (l.sibling.return = l.return, l = l.sibling; l.tag !== 5 && l.tag !== 6 && l.tag !== 18; ) {
        if (l.flags & 2 || l.child === null || l.tag === 4) continue e;
        l.child.return = l, l = l.child;
      }
      if (!(l.flags & 2)) return l.stateNode;
    }
  }
  function Ls(l, c, g) {
    var x = l.tag;
    if (x === 5 || x === 6) l = l.stateNode, c ? g.nodeType === 8 ? g.parentNode.insertBefore(l, c) : g.insertBefore(l, c) : (g.nodeType === 8 ? (c = g.parentNode, c.insertBefore(l, g)) : (c = g, c.appendChild(l)), g = g._reactRootContainer, g != null || c.onclick !== null || (c.onclick = nu));
    else if (x !== 4 && (l = l.child, l !== null)) for (Ls(l, c, g), l = l.sibling; l !== null; ) Ls(l, c, g), l = l.sibling;
  }
  function Fs(l, c, g) {
    var x = l.tag;
    if (x === 5 || x === 6) l = l.stateNode, c ? g.insertBefore(l, c) : g.appendChild(l);
    else if (x !== 4 && (l = l.child, l !== null)) for (Fs(l, c, g), l = l.sibling; l !== null; ) Fs(l, c, g), l = l.sibling;
  }
  var uo = null, Ri = !1;
  function Oi(l, c, g) {
    for (g = g.child; g !== null; ) qS(l, c, g), g = g.sibling;
  }
  function qS(l, c, g) {
    if (fi && typeof fi.onCommitFiberUnmount == "function") try {
      fi.onCommitFiberUnmount(Hi, g);
    } catch {
    }
    switch (g.tag) {
      case 5:
        mi || Od(g, c);
      case 6:
        var x = uo, P = Ri;
        uo = null, Oi(l, c, g), uo = x, Ri = P, uo !== null && (Ri ? (l = uo, g = g.stateNode, l.nodeType === 8 ? l.parentNode.removeChild(g) : l.removeChild(g)) : uo.removeChild(g.stateNode));
        break;
      case 18:
        uo !== null && (Ri ? (l = uo, g = g.stateNode, l.nodeType === 8 ? bd(l.parentNode, g) : l.nodeType === 1 && bd(l, g), Ja(l)) : bd(uo, g.stateNode));
        break;
      case 4:
        x = uo, P = Ri, uo = g.stateNode.containerInfo, Ri = !0, Oi(l, c, g), uo = x, Ri = P;
        break;
      case 0:
      case 11:
      case 14:
      case 15:
        if (!mi && (x = g.updateQueue, x !== null && (x = x.lastEffect, x !== null))) {
          P = x = x.next;
          do {
            var $ = P, oe = $.destroy;
            $ = $.tag, oe !== void 0 && ($ & 2 || $ & 4) && ym(g, c, oe), P = P.next;
          } while (P !== x);
        }
        Oi(l, c, g);
        break;
      case 1:
        if (!mi && (Od(g, c), x = g.stateNode, typeof x.componentWillUnmount == "function")) try {
          x.props = g.memoizedProps, x.state = g.memoizedState, x.componentWillUnmount();
        } catch (he) {
          Kr(g, c, he);
        }
        Oi(l, c, g);
        break;
      case 21:
        Oi(l, c, g);
        break;
      case 22:
        g.mode & 1 ? (mi = (x = mi) || g.memoizedState !== null, Oi(l, c, g), mi = x) : Oi(l, c, g);
        break;
      default:
        Oi(l, c, g);
    }
  }
  function KS(l) {
    var c = l.updateQueue;
    if (c !== null) {
      l.updateQueue = null;
      var g = l.stateNode;
      g === null && (g = l.stateNode = new lT()), c.forEach(function(x) {
        var P = rw.bind(null, l, x);
        g.has(x) || (g.add(x), x.then(P, P));
      });
    }
  }
  function os(l, c) {
    var g = c.deletions;
    if (g !== null) for (var x = 0; x < g.length; x++) {
      var P = g[x];
      try {
        var $ = l, oe = c, he = oe;
        e: for (; he !== null; ) {
          switch (he.tag) {
            case 5:
              uo = he.stateNode, Ri = !1;
              break e;
            case 3:
              uo = he.stateNode.containerInfo, Ri = !0;
              break e;
            case 4:
              uo = he.stateNode.containerInfo, Ri = !0;
              break e;
          }
          he = he.return;
        }
        if (uo === null) throw Error(n(160));
        qS($, oe, P), uo = null, Ri = !1;
        var Se = P.alternate;
        Se !== null && (Se.return = null), P.return = null;
      } catch (je) {
        Kr(P, c, je);
      }
    }
    if (c.subtreeFlags & 12854) for (c = c.child; c !== null; ) ly(c, l), c = c.sibling;
  }
  function ly(l, c) {
    var g = l.alternate, x = l.flags;
    switch (l.tag) {
      case 0:
      case 11:
      case 14:
      case 15:
        if (os(c, l), Xi(l), x & 4) {
          try {
            hp(3, l, l.return), mp(3, l);
          } catch (Yt) {
            Kr(l, l.return, Yt);
          }
          try {
            hp(5, l, l.return);
          } catch (Yt) {
            Kr(l, l.return, Yt);
          }
        }
        break;
      case 1:
        os(c, l), Xi(l), x & 512 && g !== null && Od(g, g.return);
        break;
      case 5:
        if (os(c, l), Xi(l), x & 512 && g !== null && Od(g, g.return), l.flags & 32) {
          var P = l.stateNode;
          try {
            Oe(P, "");
          } catch (Yt) {
            Kr(l, l.return, Yt);
          }
        }
        if (x & 4 && (P = l.stateNode, P != null)) {
          var $ = l.memoizedProps, oe = g !== null ? g.memoizedProps : $, he = l.type, Se = l.updateQueue;
          if (l.updateQueue = null, Se !== null) try {
            he === "input" && $.type === "radio" && $.name != null && et(P, $), Et(he, oe);
            var je = Et(he, $);
            for (oe = 0; oe < Se.length; oe += 2) {
              var lt = Se[oe], dt = Se[oe + 1];
              lt === "style" ? zt(P, dt) : lt === "dangerouslySetInnerHTML" ? Qe(P, dt) : lt === "children" ? Oe(P, dt) : L(P, lt, dt, je);
            }
            switch (he) {
              case "input":
                Ne(P, $);
                break;
              case "textarea":
                ct(P, $);
                break;
              case "select":
                var st = P._wrapperState.wasMultiple;
                P._wrapperState.wasMultiple = !!$.multiple;
                var Ft = $.value;
                Ft != null ? gt(P, !!$.multiple, Ft, !1) : st !== !!$.multiple && ($.defaultValue != null ? gt(
                  P,
                  !!$.multiple,
                  $.defaultValue,
                  !0
                ) : gt(P, !!$.multiple, $.multiple ? [] : "", !1));
            }
            P[Uf] = $;
          } catch (Yt) {
            Kr(l, l.return, Yt);
          }
        }
        break;
      case 6:
        if (os(c, l), Xi(l), x & 4) {
          if (l.stateNode === null) throw Error(n(162));
          P = l.stateNode, $ = l.memoizedProps;
          try {
            P.nodeValue = $;
          } catch (Yt) {
            Kr(l, l.return, Yt);
          }
        }
        break;
      case 3:
        if (os(c, l), Xi(l), x & 4 && g !== null && g.memoizedState.isDehydrated) try {
          Ja(c.containerInfo);
        } catch (Yt) {
          Kr(l, l.return, Yt);
        }
        break;
      case 4:
        os(c, l), Xi(l);
        break;
      case 13:
        os(c, l), Xi(l), P = l.child, P.flags & 8192 && ($ = P.memoizedState !== null, P.stateNode.isHidden = $, !$ || P.alternate !== null && P.alternate.memoizedState !== null || (dy = En())), x & 4 && KS(l);
        break;
      case 22:
        if (lt = g !== null && g.memoizedState !== null, l.mode & 1 ? (mi = (je = mi) || lt, os(c, l), mi = je) : os(c, l), Xi(l), x & 8192) {
          if (je = l.memoizedState !== null, (l.stateNode.isHidden = je) && !lt && l.mode & 1) for (Ht = l, lt = l.child; lt !== null; ) {
            for (dt = Ht = lt; Ht !== null; ) {
              switch (st = Ht, Ft = st.child, st.tag) {
                case 0:
                case 11:
                case 14:
                case 15:
                  hp(4, st, st.return);
                  break;
                case 1:
                  Od(st, st.return);
                  var Wt = st.stateNode;
                  if (typeof Wt.componentWillUnmount == "function") {
                    x = st, g = st.return;
                    try {
                      c = x, Wt.props = c.memoizedProps, Wt.state = c.memoizedState, Wt.componentWillUnmount();
                    } catch (Yt) {
                      Kr(x, g, Yt);
                    }
                  }
                  break;
                case 5:
                  Od(st, st.return);
                  break;
                case 22:
                  if (st.memoizedState !== null) {
                    vp(dt);
                    continue;
                  }
              }
              Ft !== null ? (Ft.return = st, Ht = Ft) : vp(dt);
            }
            lt = lt.sibling;
          }
          e: for (lt = null, dt = l; ; ) {
            if (dt.tag === 5) {
              if (lt === null) {
                lt = dt;
                try {
                  P = dt.stateNode, je ? ($ = P.style, typeof $.setProperty == "function" ? $.setProperty("display", "none", "important") : $.display = "none") : (he = dt.stateNode, Se = dt.memoizedProps.style, oe = Se != null && Se.hasOwnProperty("display") ? Se.display : null, he.style.display = xt("display", oe));
                } catch (Yt) {
                  Kr(l, l.return, Yt);
                }
              }
            } else if (dt.tag === 6) {
              if (lt === null) try {
                dt.stateNode.nodeValue = je ? "" : dt.memoizedProps;
              } catch (Yt) {
                Kr(l, l.return, Yt);
              }
            } else if ((dt.tag !== 22 && dt.tag !== 23 || dt.memoizedState === null || dt === l) && dt.child !== null) {
              dt.child.return = dt, dt = dt.child;
              continue;
            }
            if (dt === l) break e;
            for (; dt.sibling === null; ) {
              if (dt.return === null || dt.return === l) break e;
              lt === dt && (lt = null), dt = dt.return;
            }
            lt === dt && (lt = null), dt.sibling.return = dt.return, dt = dt.sibling;
          }
        }
        break;
      case 19:
        os(c, l), Xi(l), x & 4 && KS(l);
        break;
      case 21:
        break;
      default:
        os(
          c,
          l
        ), Xi(l);
    }
  }
  function Xi(l) {
    var c = l.flags;
    if (c & 2) {
      try {
        e: {
          for (var g = l.return; g !== null; ) {
            if (gp(g)) {
              var x = g;
              break e;
            }
            g = g.return;
          }
          throw Error(n(160));
        }
        switch (x.tag) {
          case 5:
            var P = x.stateNode;
            x.flags & 32 && (Oe(P, ""), x.flags &= -33);
            var $ = Sl(l);
            Fs(l, $, P);
            break;
          case 3:
          case 4:
            var oe = x.stateNode.containerInfo, he = Sl(l);
            Ls(l, he, oe);
            break;
          default:
            throw Error(n(161));
        }
      } catch (Se) {
        Kr(l, l.return, Se);
      }
      l.flags &= -3;
    }
    c & 4096 && (l.flags &= -4097);
  }
  function uT(l, c, g) {
    Ht = l, uy(l);
  }
  function uy(l, c, g) {
    for (var x = (l.mode & 1) !== 0; Ht !== null; ) {
      var P = Ht, $ = P.child;
      if (P.tag === 22 && x) {
        var oe = P.memoizedState !== null || pp;
        if (!oe) {
          var he = P.alternate, Se = he !== null && he.memoizedState !== null || mi;
          he = pp;
          var je = mi;
          if (pp = oe, (mi = Se) && !je) for (Ht = P; Ht !== null; ) oe = Ht, Se = oe.child, oe.tag === 22 && oe.memoizedState !== null ? cy(P) : Se !== null ? (Se.return = oe, Ht = Se) : cy(P);
          for (; $ !== null; ) Ht = $, uy($), $ = $.sibling;
          Ht = P, pp = he, mi = je;
        }
        YS(l);
      } else P.subtreeFlags & 8772 && $ !== null ? ($.return = P, Ht = $) : YS(l);
    }
  }
  function YS(l) {
    for (; Ht !== null; ) {
      var c = Ht;
      if (c.flags & 8772) {
        var g = c.alternate;
        try {
          if (c.flags & 8772) switch (c.tag) {
            case 0:
            case 11:
            case 15:
              mi || mp(5, c);
              break;
            case 1:
              var x = c.stateNode;
              if (c.flags & 4 && !mi) if (g === null) x.componentDidMount();
              else {
                var P = c.elementType === c.type ? g.memoizedProps : rs(c.type, g.memoizedProps);
                x.componentDidUpdate(P, g.memoizedState, x.__reactInternalSnapshotBeforeUpdate);
              }
              var $ = c.updateQueue;
              $ !== null && Kv(c, $, x);
              break;
            case 3:
              var oe = c.updateQueue;
              if (oe !== null) {
                if (g = null, c.child !== null) switch (c.child.tag) {
                  case 5:
                    g = c.child.stateNode;
                    break;
                  case 1:
                    g = c.child.stateNode;
                }
                Kv(c, oe, g);
              }
              break;
            case 5:
              var he = c.stateNode;
              if (g === null && c.flags & 4) {
                g = he;
                var Se = c.memoizedProps;
                switch (c.type) {
                  case "button":
                  case "input":
                  case "select":
                  case "textarea":
                    Se.autoFocus && g.focus();
                    break;
                  case "img":
                    Se.src && (g.src = Se.src);
                }
              }
              break;
            case 6:
              break;
            case 4:
              break;
            case 12:
              break;
            case 13:
              if (c.memoizedState === null) {
                var je = c.alternate;
                if (je !== null) {
                  var lt = je.memoizedState;
                  if (lt !== null) {
                    var dt = lt.dehydrated;
                    dt !== null && Ja(dt);
                  }
                }
              }
              break;
            case 19:
            case 17:
            case 21:
            case 22:
            case 23:
            case 25:
              break;
            default:
              throw Error(n(163));
          }
          mi || c.flags & 512 && sy(c);
        } catch (st) {
          Kr(c, c.return, st);
        }
      }
      if (c === l) {
        Ht = null;
        break;
      }
      if (g = c.sibling, g !== null) {
        g.return = c.return, Ht = g;
        break;
      }
      Ht = c.return;
    }
  }
  function vp(l) {
    for (; Ht !== null; ) {
      var c = Ht;
      if (c === l) {
        Ht = null;
        break;
      }
      var g = c.sibling;
      if (g !== null) {
        g.return = c.return, Ht = g;
        break;
      }
      Ht = c.return;
    }
  }
  function cy(l) {
    for (; Ht !== null; ) {
      var c = Ht;
      try {
        switch (c.tag) {
          case 0:
          case 11:
          case 15:
            var g = c.return;
            try {
              mp(4, c);
            } catch (Se) {
              Kr(c, g, Se);
            }
            break;
          case 1:
            var x = c.stateNode;
            if (typeof x.componentDidMount == "function") {
              var P = c.return;
              try {
                x.componentDidMount();
              } catch (Se) {
                Kr(c, P, Se);
              }
            }
            var $ = c.return;
            try {
              sy(c);
            } catch (Se) {
              Kr(c, $, Se);
            }
            break;
          case 5:
            var oe = c.return;
            try {
              sy(c);
            } catch (Se) {
              Kr(c, oe, Se);
            }
        }
      } catch (Se) {
        Kr(c, c.return, Se);
      }
      if (c === l) {
        Ht = null;
        break;
      }
      var he = c.sibling;
      if (he !== null) {
        he.return = c.return, Ht = he;
        break;
      }
      Ht = c.return;
    }
  }
  var cT = Math.ceil, pu = M.ReactCurrentDispatcher, xc = M.ReactCurrentOwner, Xo = M.ReactCurrentBatchConfig, Yn = 0, Fo = null, wo = null, Qo = 0, pa = 0, kd = Ia(0), co = 0, yp = null, _s = 0, Pd = 0, Cm = 0, bp = null, Qi = null, dy = 0, Md = 1 / 0, ha = null, Id = !1, Ec = null, hu = null, Sm = !1, wl = null, Cp = 0, mu = 0, Dd = null, Sp = -1, gi = 0;
  function xo() {
    return Yn & 6 ? En() : Sp !== -1 ? Sp : Sp = En();
  }
  function As(l) {
    return l.mode & 1 ? Yn & 2 && Qo !== 0 ? Qo & -Qo : sT.transition !== null ? (gi === 0 && (gi = od()), gi) : (l = ir, l !== 0 || (l = window.event, l = l === void 0 ? 16 : dd(l.type)), l) : 1;
  }
  function ki(l, c, g, x) {
    if (50 < mu) throw mu = 0, Dd = null, Error(n(185));
    ul(l, g, x), (!(Yn & 2) || l !== Fo) && (l === Fo && (!(Yn & 2) && (Pd |= g), co === 4 && is(l, Qo)), Ji(l, x), g === 1 && Yn === 0 && !(c.mode & 1) && (Md = En() + 500, wd && Ps()));
  }
  function Ji(l, c) {
    var g = l.callbackNode;
    Ju(l, c);
    var x = Qa(l, l === Fo ? Qo : 0);
    if (x === 0) g !== null && Hn(g), l.callbackNode = null, l.callbackPriority = 0;
    else if (c = x & -x, l.callbackPriority !== c) {
      if (g != null && Hn(g), c === 1) l.tag === 0 ? ou(fy.bind(null, l)) : Hh(fy.bind(null, l)), yd(function() {
        !(Yn & 6) && Ps();
      }), g = null;
      else {
        switch (ad(x)) {
          case 1:
            g = di;
            break;
          case 4:
            g = Ta;
            break;
          case 16:
            g = _n;
            break;
          case 536870912:
            g = Si;
            break;
          default:
            g = _n;
        }
        g = iw(g, wm.bind(null, l));
      }
      l.callbackPriority = c, l.callbackNode = g;
    }
  }
  function wm(l, c) {
    if (Sp = -1, gi = 0, Yn & 6) throw Error(n(327));
    var g = l.callbackNode;
    if (Nd() && l.callbackNode !== g) return null;
    var x = Qa(l, l === Fo ? Qo : 0);
    if (x === 0) return null;
    if (x & 30 || x & l.expiredLanes || c) c = xm(l, x);
    else {
      c = x;
      var P = Yn;
      Yn |= 2;
      var $ = QS();
      (Fo !== l || Qo !== c) && (ha = null, Md = En() + 500, xl(l, c));
      do
        try {
          JS();
          break;
        } catch (he) {
          XS(l, he);
        }
      while (!0);
      Vv(), pu.current = $, Yn = P, wo !== null ? c = 0 : (Fo = null, Qo = 0, c = co);
    }
    if (c !== 0) {
      if (c === 2 && (P = Yl(l), P !== 0 && (x = P, c = wp(l, P))), c === 1) throw g = yp, xl(l, 0), is(l, x), Ji(l, En()), g;
      if (c === 6) is(l, x);
      else {
        if (P = l.current.alternate, !(x & 30) && !dT(P) && (c = xm(l, x), c === 2 && ($ = Yl(l), $ !== 0 && (x = $, c = wp(l, $))), c === 1)) throw g = yp, xl(l, 0), is(l, x), Ji(l, En()), g;
        switch (l.finishedWork = P, l.finishedLanes = x, c) {
          case 0:
          case 1:
            throw Error(n(345));
          case 2:
            Oc(l, Qi, ha);
            break;
          case 3:
            if (is(l, x), (x & 130023424) === x && (c = dy + 500 - En(), 10 < c)) {
              if (Qa(l, 0) !== 0) break;
              if (P = l.suspendedLanes, (P & x) !== x) {
                xo(), l.pingedLanes |= l.suspendedLanes & P;
                break;
              }
              l.timeoutHandle = $h(Oc.bind(null, l, Qi, ha), c);
              break;
            }
            Oc(l, Qi, ha);
            break;
          case 4:
            if (is(l, x), (x & 4194240) === x) break;
            for (c = l.eventTimes, P = -1; 0 < x; ) {
              var oe = 31 - wi(x);
              $ = 1 << oe, oe = c[oe], oe > P && (P = oe), x &= ~$;
            }
            if (x = P, x = En() - x, x = (120 > x ? 120 : 480 > x ? 480 : 1080 > x ? 1080 : 1920 > x ? 1920 : 3e3 > x ? 3e3 : 4320 > x ? 4320 : 1960 * cT(x / 1960)) - x, 10 < x) {
              l.timeoutHandle = $h(Oc.bind(null, l, Qi, ha), x);
              break;
            }
            Oc(l, Qi, ha);
            break;
          case 5:
            Oc(l, Qi, ha);
            break;
          default:
            throw Error(n(329));
        }
      }
    }
    return Ji(l, En()), l.callbackNode === g ? wm.bind(null, l) : null;
  }
  function wp(l, c) {
    var g = bp;
    return l.current.memoizedState.isDehydrated && (xl(l, c).flags |= 256), l = xm(l, c), l !== 2 && (c = Qi, Qi = g, c !== null && Tc(c)), l;
  }
  function Tc(l) {
    Qi === null ? Qi = l : Qi.push.apply(Qi, l);
  }
  function dT(l) {
    for (var c = l; ; ) {
      if (c.flags & 16384) {
        var g = c.updateQueue;
        if (g !== null && (g = g.stores, g !== null)) for (var x = 0; x < g.length; x++) {
          var P = g[x], $ = P.getSnapshot;
          P = P.value;
          try {
            if (!es($(), P)) return !1;
          } catch {
            return !1;
          }
        }
      }
      if (g = c.child, c.subtreeFlags & 16384 && g !== null) g.return = c, c = g;
      else {
        if (c === l) break;
        for (; c.sibling === null; ) {
          if (c.return === null || c.return === l) return !0;
          c = c.return;
        }
        c.sibling.return = c.return, c = c.sibling;
      }
    }
    return !0;
  }
  function is(l, c) {
    for (c &= ~Cm, c &= ~Pd, l.suspendedLanes |= c, l.pingedLanes &= ~c, l = l.expirationTimes; 0 < c; ) {
      var g = 31 - wi(c), x = 1 << g;
      l[g] = -1, c &= ~x;
    }
  }
  function fy(l) {
    if (Yn & 6) throw Error(n(327));
    Nd();
    var c = Qa(l, 0);
    if (!(c & 1)) return Ji(l, En()), null;
    var g = xm(l, c);
    if (l.tag !== 0 && g === 2) {
      var x = Yl(l);
      x !== 0 && (c = x, g = wp(l, x));
    }
    if (g === 1) throw g = yp, xl(l, 0), is(l, c), Ji(l, En()), g;
    if (g === 6) throw Error(n(345));
    return l.finishedWork = l.current.alternate, l.finishedLanes = c, Oc(l, Qi, ha), Ji(l, En()), null;
  }
  function py(l, c) {
    var g = Yn;
    Yn |= 1;
    try {
      return l(c);
    } finally {
      Yn = g, Yn === 0 && (Md = En() + 500, wd && Ps());
    }
  }
  function Rc(l) {
    wl !== null && wl.tag === 0 && !(Yn & 6) && Nd();
    var c = Yn;
    Yn |= 1;
    var g = Xo.transition, x = ir;
    try {
      if (Xo.transition = null, ir = 1, l) return l();
    } finally {
      ir = x, Xo.transition = g, Yn = c, !(Yn & 6) && Ps();
    }
  }
  function hy() {
    pa = kd.current, jr(kd);
  }
  function xl(l, c) {
    l.finishedWork = null, l.finishedLanes = 0;
    var g = l.timeoutHandle;
    if (g !== -1 && (l.timeoutHandle = -1, Av(g)), wo !== null) for (g = wo.return; g !== null; ) {
      var x = g;
      switch (Bh(x), x.tag) {
        case 1:
          x = x.type.childContextTypes, x != null && Sd();
          break;
        case 3:
          hc(), jr(No), jr(oo), nn();
          break;
        case 5:
          qh(x);
          break;
        case 4:
          hc();
          break;
        case 13:
          jr(Zr);
          break;
        case 19:
          jr(Zr);
          break;
        case 10:
          Bv(x.type._context);
          break;
        case 22:
        case 23:
          hy();
      }
      g = g.return;
    }
    if (Fo = l, wo = l = gu(l.current, null), Qo = pa = c, co = 0, yp = null, Cm = Pd = _s = 0, Qi = bp = null, fc !== null) {
      for (c = 0; c < fc.length; c++) if (g = fc[c], x = g.interleaved, x !== null) {
        g.interleaved = null;
        var P = x.next, $ = g.pending;
        if ($ !== null) {
          var oe = $.next;
          $.next = P, x.next = oe;
        }
        g.pending = x;
      }
      fc = null;
    }
    return l;
  }
  function XS(l, c) {
    do {
      var g = wo;
      try {
        if (Vv(), Ln.current = Cc, Yh) {
          for (var x = sr.memoizedState; x !== null; ) {
            var P = x.queue;
            P !== null && (P.pending = null), x = x.next;
          }
          Yh = !1;
        }
        if (Tr = 0, zo = bo = sr = null, Zf = !1, mc = 0, xc.current = null, g === null || g.return === null) {
          co = 1, yp = c, wo = null;
          break;
        }
        e: {
          var $ = l, oe = g.return, he = g, Se = c;
          if (c = Qo, he.flags |= 32768, Se !== null && typeof Se == "object" && typeof Se.then == "function") {
            var je = Se, lt = he, dt = lt.tag;
            if (!(lt.mode & 1) && (dt === 0 || dt === 11 || dt === 15)) {
              var st = lt.alternate;
              st ? (lt.updateQueue = st.updateQueue, lt.memoizedState = st.memoizedState, lt.lanes = st.lanes) : (lt.updateQueue = null, lt.memoizedState = null);
            }
            var Ft = AS(oe);
            if (Ft !== null) {
              Ft.flags &= -257, fu(Ft, oe, he, $, c), Ft.mode & 1 && ny($, je, c), c = Ft, Se = je;
              var Wt = c.updateQueue;
              if (Wt === null) {
                var Yt = /* @__PURE__ */ new Set();
                Yt.add(Se), c.updateQueue = Yt;
              } else Wt.add(Se);
              break e;
            } else {
              if (!(c & 1)) {
                ny($, je, c), my();
                break e;
              }
              Se = Error(n(426));
            }
          } else if (qr && he.mode & 1) {
            var fo = AS(oe);
            if (fo !== null) {
              !(fo.flags & 65536) && (fo.flags |= 256), fu(fo, oe, he, $, c), yl(Sc(Se, he));
              break e;
            }
          }
          $ = Se = Sc(Se, he), co !== 4 && (co = 2), bp === null ? bp = [$] : bp.push($), $ = oe;
          do {
            switch ($.tag) {
              case 3:
                $.flags |= 65536, c &= -c, $.lanes |= c;
                var Pe = _S($, Se, c);
                IS($, Pe);
                break e;
              case 1:
                he = Se;
                var Ee = $.type, Fe = $.stateNode;
                if (!($.flags & 128) && (typeof Ee.getDerivedStateFromError == "function" || Fe !== null && typeof Fe.componentDidCatch == "function" && (hu === null || !hu.has(Fe)))) {
                  $.flags |= 65536, c &= -c, $.lanes |= c;
                  var ut = ty($, he, c);
                  IS($, ut);
                  break e;
                }
            }
            $ = $.return;
          } while ($ !== null);
        }
        ew(g);
      } catch (qt) {
        c = qt, wo === g && g !== null && (wo = g = g.return);
        continue;
      }
      break;
    } while (!0);
  }
  function QS() {
    var l = pu.current;
    return pu.current = Cc, l === null ? Cc : l;
  }
  function my() {
    (co === 0 || co === 3 || co === 2) && (co = 4), Fo === null || !(_s & 268435455) && !(Pd & 268435455) || is(Fo, Qo);
  }
  function xm(l, c) {
    var g = Yn;
    Yn |= 2;
    var x = QS();
    (Fo !== l || Qo !== c) && (ha = null, xl(l, c));
    do
      try {
        fT();
        break;
      } catch (P) {
        XS(l, P);
      }
    while (!0);
    if (Vv(), Yn = g, pu.current = x, wo !== null) throw Error(n(261));
    return Fo = null, Qo = 0, co;
  }
  function fT() {
    for (; wo !== null; ) ZS(wo);
  }
  function JS() {
    for (; wo !== null && !Lr(); ) ZS(wo);
  }
  function ZS(l) {
    var c = ow(l.alternate, l, pa);
    l.memoizedProps = l.pendingProps, c === null ? ew(l) : wo = c, xc.current = null;
  }
  function ew(l) {
    var c = l;
    do {
      var g = c.alternate;
      if (l = c.return, c.flags & 32768) {
        if (g = vm(g, c), g !== null) {
          g.flags &= 32767, wo = g;
          return;
        }
        if (l !== null) l.flags |= 32768, l.subtreeFlags = 0, l.deletions = null;
        else {
          co = 6, wo = null;
          return;
        }
      } else if (g = US(g, c, pa), g !== null) {
        wo = g;
        return;
      }
      if (c = c.sibling, c !== null) {
        wo = c;
        return;
      }
      wo = c = l;
    } while (c !== null);
    co === 0 && (co = 5);
  }
  function Oc(l, c, g) {
    var x = ir, P = Xo.transition;
    try {
      Xo.transition = null, ir = 1, pT(l, c, g, x);
    } finally {
      Xo.transition = P, ir = x;
    }
    return null;
  }
  function pT(l, c, g, x) {
    do
      Nd();
    while (wl !== null);
    if (Yn & 6) throw Error(n(327));
    g = l.finishedWork;
    var P = l.finishedLanes;
    if (g === null) return null;
    if (l.finishedWork = null, l.finishedLanes = 0, g === l.current) throw Error(n(177));
    l.callbackNode = null, l.callbackPriority = 0;
    var $ = g.lanes | g.childLanes;
    if (gv(l, $), l === Fo && (wo = Fo = null, Qo = 0), !(g.subtreeFlags & 2064) && !(g.flags & 2064) || Sm || (Sm = !0, iw(_n, function() {
      return Nd(), null;
    })), $ = (g.flags & 15990) !== 0, g.subtreeFlags & 15990 || $) {
      $ = Xo.transition, Xo.transition = null;
      var oe = ir;
      ir = 1;
      var he = Yn;
      Yn |= 4, xc.current = null, WS(l, g), ly(g, l), hd(sc), ka = !!Bf, sc = Bf = null, l.current = g, uT(g), Wo(), Yn = he, ir = oe, Xo.transition = $;
    } else l.current = g;
    if (Sm && (Sm = !1, wl = l, Cp = P), $ = l.pendingLanes, $ === 0 && (hu = null), Pf(g.stateNode), Ji(l, En()), c !== null) for (x = l.onRecoverableError, g = 0; g < c.length; g++) P = c[g], x(P.value, { componentStack: P.stack, digest: P.digest });
    if (Id) throw Id = !1, l = Ec, Ec = null, l;
    return Cp & 1 && l.tag !== 0 && Nd(), $ = l.pendingLanes, $ & 1 ? l === Dd ? mu++ : (mu = 0, Dd = l) : mu = 0, Ps(), null;
  }
  function Nd() {
    if (wl !== null) {
      var l = ad(Cp), c = Xo.transition, g = ir;
      try {
        if (Xo.transition = null, ir = 16 > l ? 16 : l, wl === null) var x = !1;
        else {
          if (l = wl, wl = null, Cp = 0, Yn & 6) throw Error(n(331));
          var P = Yn;
          for (Yn |= 4, Ht = l.current; Ht !== null; ) {
            var $ = Ht, oe = $.child;
            if (Ht.flags & 16) {
              var he = $.deletions;
              if (he !== null) {
                for (var Se = 0; Se < he.length; Se++) {
                  var je = he[Se];
                  for (Ht = je; Ht !== null; ) {
                    var lt = Ht;
                    switch (lt.tag) {
                      case 0:
                      case 11:
                      case 15:
                        hp(8, lt, $);
                    }
                    var dt = lt.child;
                    if (dt !== null) dt.return = lt, Ht = dt;
                    else for (; Ht !== null; ) {
                      lt = Ht;
                      var st = lt.sibling, Ft = lt.return;
                      if (bm(lt), lt === je) {
                        Ht = null;
                        break;
                      }
                      if (st !== null) {
                        st.return = Ft, Ht = st;
                        break;
                      }
                      Ht = Ft;
                    }
                  }
                }
                var Wt = $.alternate;
                if (Wt !== null) {
                  var Yt = Wt.child;
                  if (Yt !== null) {
                    Wt.child = null;
                    do {
                      var fo = Yt.sibling;
                      Yt.sibling = null, Yt = fo;
                    } while (Yt !== null);
                  }
                }
                Ht = $;
              }
            }
            if ($.subtreeFlags & 2064 && oe !== null) oe.return = $, Ht = oe;
            else e: for (; Ht !== null; ) {
              if ($ = Ht, $.flags & 2048) switch ($.tag) {
                case 0:
                case 11:
                case 15:
                  hp(9, $, $.return);
              }
              var Pe = $.sibling;
              if (Pe !== null) {
                Pe.return = $.return, Ht = Pe;
                break e;
              }
              Ht = $.return;
            }
          }
          var Ee = l.current;
          for (Ht = Ee; Ht !== null; ) {
            oe = Ht;
            var Fe = oe.child;
            if (oe.subtreeFlags & 2064 && Fe !== null) Fe.return = oe, Ht = Fe;
            else e: for (oe = Ee; Ht !== null; ) {
              if (he = Ht, he.flags & 2048) try {
                switch (he.tag) {
                  case 0:
                  case 11:
                  case 15:
                    mp(9, he);
                }
              } catch (qt) {
                Kr(he, he.return, qt);
              }
              if (he === oe) {
                Ht = null;
                break e;
              }
              var ut = he.sibling;
              if (ut !== null) {
                ut.return = he.return, Ht = ut;
                break e;
              }
              Ht = he.return;
            }
          }
          if (Yn = P, Ps(), fi && typeof fi.onPostCommitFiberRoot == "function") try {
            fi.onPostCommitFiberRoot(Hi, l);
          } catch {
          }
          x = !0;
        }
        return x;
      } finally {
        ir = g, Xo.transition = c;
      }
    }
    return !1;
  }
  function tw(l, c, g) {
    c = Sc(g, c), c = _S(l, c, 1), l = uu(l, c, 1), c = xo(), l !== null && (ul(l, 1, c), Ji(l, c));
  }
  function Kr(l, c, g) {
    if (l.tag === 3) tw(l, l, g);
    else for (; c !== null; ) {
      if (c.tag === 3) {
        tw(c, l, g);
        break;
      } else if (c.tag === 1) {
        var x = c.stateNode;
        if (typeof c.type.getDerivedStateFromError == "function" || typeof x.componentDidCatch == "function" && (hu === null || !hu.has(x))) {
          l = Sc(g, l), l = ty(c, l, 1), c = uu(c, l, 1), l = xo(), c !== null && (ul(c, 1, l), Ji(c, l));
          break;
        }
      }
      c = c.return;
    }
  }
  function hT(l, c, g) {
    var x = l.pingCache;
    x !== null && x.delete(c), c = xo(), l.pingedLanes |= l.suspendedLanes & g, Fo === l && (Qo & g) === g && (co === 4 || co === 3 && (Qo & 130023424) === Qo && 500 > En() - dy ? xl(l, 0) : Cm |= g), Ji(l, c);
  }
  function nw(l, c) {
    c === 0 && (l.mode & 1 ? (c = la, la <<= 1, !(la & 130023424) && (la = 4194304)) : c = 1);
    var g = xo();
    l = da(l, c), l !== null && (ul(l, c, g), Ji(l, g));
  }
  function mT(l) {
    var c = l.memoizedState, g = 0;
    c !== null && (g = c.retryLane), nw(l, g);
  }
  function rw(l, c) {
    var g = 0;
    switch (l.tag) {
      case 13:
        var x = l.stateNode, P = l.memoizedState;
        P !== null && (g = P.retryLane);
        break;
      case 19:
        x = l.stateNode;
        break;
      default:
        throw Error(n(314));
    }
    x !== null && x.delete(c), nw(l, g);
  }
  var ow;
  ow = function(l, c, g) {
    if (l !== null) if (l.memoizedProps !== c.pendingProps || No.current) Co = !0;
    else {
      if (!(l.lanes & g) && !(c.flags & 128)) return Co = !1, dp(l, c, g);
      Co = !!(l.flags & 131072);
    }
    else Co = !1, qr && c.flags & 1048576 && OS(c, vl, c.index);
    switch (c.lanes = 0, c.tag) {
      case 2:
        var x = c.type;
        Fa(l, c), l = c.pendingProps;
        var P = Ui(c, oo.current);
        Jr(c, g), P = cu(null, c, x, l, P, g);
        var $ = ns();
        return c.flags |= 1, typeof P == "object" && P !== null && typeof P.render == "function" && P.$$typeof === void 0 ? (c.tag = 1, c.memoizedState = null, c.updateQueue = null, vo(x) ? ($ = !0, jo(c)) : $ = !1, c.memoizedState = P.state !== null && P.state !== void 0 ? P.state : null, qv(c), P.updater = fm, c.stateNode = P, P._reactInternals = c, ap(c, x, l, g), c = up(null, c, x, !0, $, g)) : (c.tag = 0, qr && $ && Vh(c), Yo(null, c, P, g), c = c.child), c;
      case 16:
        x = c.elementType;
        e: {
          switch (Fa(l, c), l = c.pendingProps, P = x._init, x = P(x._payload), c.type = x, P = c.tag = vT(x), l = rs(x, l), P) {
            case 0:
              c = $S(null, c, x, l, g);
              break e;
            case 1:
              c = jS(null, c, x, l, g);
              break e;
            case 11:
              c = Yi(null, c, x, l, g);
              break e;
            case 14:
              c = wc(null, c, x, rs(x.type, l), g);
              break e;
          }
          throw Error(n(
            306,
            x,
            ""
          ));
        }
        return c;
      case 0:
        return x = c.type, P = c.pendingProps, P = c.elementType === x ? P : rs(x, P), $S(l, c, x, P, g);
      case 1:
        return x = c.type, P = c.pendingProps, P = c.elementType === x ? P : rs(x, P), jS(l, c, x, P, g);
      case 3:
        e: {
          if (Rd(c), l === null) throw Error(n(387));
          x = c.pendingProps, $ = c.memoizedState, P = $.element, MS(l, c), Kf(c, x, null, g);
          var oe = c.memoizedState;
          if (x = oe.element, $.isDehydrated) if ($ = { element: x, isDehydrated: !1, cache: oe.cache, pendingSuspenseBoundaries: oe.pendingSuspenseBoundaries, transitions: oe.transitions }, c.updateQueue.baseState = $, c.memoizedState = $, c.flags & 256) {
            P = Sc(Error(n(423)), c), c = zS(l, c, x, g, P);
            break e;
          } else if (x !== P) {
            P = Sc(Error(n(424)), c), c = zS(l, c, x, g, P);
            break e;
          } else for (Wi = Rs(c.stateNode.containerInfo.firstChild), Gi = c, qr = !0, Na = null, g = It(c, null, x, g), c.child = g; g; ) g.flags = g.flags & -3 | 4096, g = g.sibling;
          else {
            if (lu(), x === P) {
              c = _a(l, c, g);
              break e;
            }
            Yo(l, c, x, g);
          }
          c = c.child;
        }
        return c;
      case 5:
        return DS(c), l === null && zv(c), x = c.type, P = c.pendingProps, $ = l !== null ? l.memoizedProps : null, oe = P.children, Ah(x, P) ? oe = null : $ !== null && Ah(x, $) && (c.flags |= 32), ry(l, c), Yo(l, c, oe, g), c.child;
      case 6:
        return l === null && zv(c), null;
      case 13:
        return gm(l, c, g);
      case 4:
        return Yv(c, c.stateNode.containerInfo), x = c.pendingProps, l === null ? c.child = so(c, null, x, g) : Yo(l, c, x, g), c.child;
      case 11:
        return x = c.type, P = c.pendingProps, P = c.elementType === x ? P : rs(x, P), Yi(l, c, x, P, g);
      case 7:
        return Yo(l, c, c.pendingProps, g), c.child;
      case 8:
        return Yo(l, c, c.pendingProps.children, g), c.child;
      case 12:
        return Yo(l, c, c.pendingProps.children, g), c.child;
      case 10:
        e: {
          if (x = c.type._context, P = c.pendingProps, $ = c.memoizedProps, oe = P.value, Zt(ca, x._currentValue), x._currentValue = oe, $ !== null) if (es($.value, oe)) {
            if ($.children === P.children && !No.current) {
              c = _a(l, c, g);
              break e;
            }
          } else for ($ = c.child, $ !== null && ($.return = c); $ !== null; ) {
            var he = $.dependencies;
            if (he !== null) {
              oe = $.child;
              for (var Se = he.firstContext; Se !== null; ) {
                if (Se.context === x) {
                  if ($.tag === 1) {
                    Se = bl(-1, g & -g), Se.tag = 2;
                    var je = $.updateQueue;
                    if (je !== null) {
                      je = je.shared;
                      var lt = je.pending;
                      lt === null ? Se.next = Se : (Se.next = lt.next, lt.next = Se), je.pending = Se;
                    }
                  }
                  $.lanes |= g, Se = $.alternate, Se !== null && (Se.lanes |= g), Uv(
                    $.return,
                    g,
                    c
                  ), he.lanes |= g;
                  break;
                }
                Se = Se.next;
              }
            } else if ($.tag === 10) oe = $.type === c.type ? null : $.child;
            else if ($.tag === 18) {
              if (oe = $.return, oe === null) throw Error(n(341));
              oe.lanes |= g, he = oe.alternate, he !== null && (he.lanes |= g), Uv(oe, g, c), oe = $.sibling;
            } else oe = $.child;
            if (oe !== null) oe.return = $;
            else for (oe = $; oe !== null; ) {
              if (oe === c) {
                oe = null;
                break;
              }
              if ($ = oe.sibling, $ !== null) {
                $.return = oe.return, oe = $;
                break;
              }
              oe = oe.return;
            }
            $ = oe;
          }
          Yo(l, c, P.children, g), c = c.child;
        }
        return c;
      case 9:
        return P = c.type, x = c.pendingProps.children, Jr(c, g), P = La(P), x = x(P), c.flags |= 1, Yo(l, c, x, g), c.child;
      case 14:
        return x = c.type, P = rs(x, c.pendingProps), P = rs(x.type, P), wc(l, c, x, P, g);
      case 15:
        return kn(l, c, c.type, c.pendingProps, g);
      case 17:
        return x = c.type, P = c.pendingProps, P = c.elementType === x ? P : rs(x, P), Fa(l, c), c.tag = 1, vo(x) ? (l = !0, jo(c)) : l = !1, Jr(c, g), pm(c, x, P), ap(c, x, P, g), up(null, c, x, !0, l, g);
      case 19:
        return Ns(l, c, g);
      case 22:
        return lp(l, c, g);
    }
    throw Error(n(156, c.tag));
  };
  function iw(l, c) {
    return Qt(l, c);
  }
  function gT(l, c, g, x) {
    this.tag = l, this.key = g, this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null, this.index = 0, this.ref = null, this.pendingProps = c, this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null, this.mode = x, this.subtreeFlags = this.flags = 0, this.deletions = null, this.childLanes = this.lanes = 0, this.alternate = null;
  }
  function $a(l, c, g, x) {
    return new gT(l, c, g, x);
  }
  function gy(l) {
    return l = l.prototype, !(!l || !l.isReactComponent);
  }
  function vT(l) {
    if (typeof l == "function") return gy(l) ? 1 : 0;
    if (l != null) {
      if (l = l.$$typeof, l === W) return 11;
      if (l === U) return 14;
    }
    return 2;
  }
  function gu(l, c) {
    var g = l.alternate;
    return g === null ? (g = $a(l.tag, c, l.key, l.mode), g.elementType = l.elementType, g.type = l.type, g.stateNode = l.stateNode, g.alternate = l, l.alternate = g) : (g.pendingProps = c, g.type = l.type, g.flags = 0, g.subtreeFlags = 0, g.deletions = null), g.flags = l.flags & 14680064, g.childLanes = l.childLanes, g.lanes = l.lanes, g.child = l.child, g.memoizedProps = l.memoizedProps, g.memoizedState = l.memoizedState, g.updateQueue = l.updateQueue, c = l.dependencies, g.dependencies = c === null ? null : { lanes: c.lanes, firstContext: c.firstContext }, g.sibling = l.sibling, g.index = l.index, g.ref = l.ref, g;
  }
  function xp(l, c, g, x, P, $) {
    var oe = 2;
    if (x = l, typeof l == "function") gy(l) && (oe = 1);
    else if (typeof l == "string") oe = 5;
    else e: switch (l) {
      case K:
        return El(g.children, P, $, c);
      case Q:
        oe = 8, P |= 8;
        break;
      case z:
        return l = $a(12, g, c, P | 2), l.elementType = z, l.lanes = $, l;
      case B:
        return l = $a(13, g, c, P), l.elementType = B, l.lanes = $, l;
      case ee:
        return l = $a(19, g, c, P), l.elementType = ee, l.lanes = $, l;
      case Y:
        return vu(g, P, $, c);
      default:
        if (typeof l == "object" && l !== null) switch (l.$$typeof) {
          case I:
            oe = 10;
            break e;
          case G:
            oe = 9;
            break e;
          case W:
            oe = 11;
            break e;
          case U:
            oe = 14;
            break e;
          case q:
            oe = 16, x = null;
            break e;
        }
        throw Error(n(130, l == null ? l : typeof l, ""));
    }
    return c = $a(oe, g, c, P), c.elementType = l, c.type = x, c.lanes = $, c;
  }
  function El(l, c, g, x) {
    return l = $a(7, l, x, c), l.lanes = g, l;
  }
  function vu(l, c, g, x) {
    return l = $a(22, l, x, c), l.elementType = Y, l.lanes = g, l.stateNode = { isHidden: !1 }, l;
  }
  function vy(l, c, g) {
    return l = $a(6, l, null, c), l.lanes = g, l;
  }
  function Em(l, c, g) {
    return c = $a(4, l.children !== null ? l.children : [], l.key, c), c.lanes = g, c.stateNode = { containerInfo: l.containerInfo, pendingChildren: null, implementation: l.implementation }, c;
  }
  function aw(l, c, g, x, P) {
    this.tag = c, this.containerInfo = l, this.finishedWork = this.pingCache = this.current = this.pendingChildren = null, this.timeoutHandle = -1, this.callbackNode = this.pendingContext = this.context = null, this.callbackPriority = 0, this.eventTimes = id(0), this.expirationTimes = id(-1), this.entangledLanes = this.finishedLanes = this.mutableReadLanes = this.expiredLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0, this.entanglements = id(0), this.identifierPrefix = x, this.onRecoverableError = P, this.mutableSourceEagerHydrationData = null;
  }
  function Tm(l, c, g, x, P, $, oe, he, Se) {
    return l = new aw(l, c, g, he, Se), c === 1 ? (c = 1, $ === !0 && (c |= 8)) : c = 0, $ = $a(3, null, null, c), l.current = $, $.stateNode = l, $.memoizedState = { element: x, isDehydrated: g, cache: null, transitions: null, pendingSuspenseBoundaries: null }, qv($), l;
  }
  function yT(l, c, g) {
    var x = 3 < arguments.length && arguments[3] !== void 0 ? arguments[3] : null;
    return { $$typeof: H, key: x == null ? null : "" + x, children: l, containerInfo: c, implementation: g };
  }
  function yy(l) {
    if (!l) return pi;
    l = l._reactInternals;
    e: {
      if (gn(l) !== l || l.tag !== 1) throw Error(n(170));
      var c = l;
      do {
        switch (c.tag) {
          case 3:
            c = c.stateNode.context;
            break e;
          case 1:
            if (vo(c.type)) {
              c = c.stateNode.__reactInternalMemoizedMergedChildContext;
              break e;
            }
        }
        c = c.return;
      } while (c !== null);
      throw Error(n(171));
    }
    if (l.tag === 1) {
      var g = l.type;
      if (vo(g)) return Wf(l, g, c);
    }
    return c;
  }
  function sw(l, c, g, x, P, $, oe, he, Se) {
    return l = Tm(g, x, !0, l, P, $, oe, he, Se), l.context = yy(null), g = l.current, x = xo(), P = As(g), $ = bl(x, P), $.callback = c ?? null, uu(g, $, P), l.current.lanes = P, ul(l, P, x), Ji(l, x), l;
  }
  function Rm(l, c, g, x) {
    var P = c.current, $ = xo(), oe = As(P);
    return g = yy(g), c.context === null ? c.context = g : c.pendingContext = g, c = bl($, oe), c.payload = { element: l }, x = x === void 0 ? null : x, x !== null && (c.callback = x), l = uu(P, c, oe), l !== null && (ki(l, P, oe, $), Wh(l, P, oe)), oe;
  }
  function Om(l) {
    if (l = l.current, !l.child) return null;
    switch (l.child.tag) {
      case 5:
        return l.child.stateNode;
      default:
        return l.child.stateNode;
    }
  }
  function by(l, c) {
    if (l = l.memoizedState, l !== null && l.dehydrated !== null) {
      var g = l.retryLane;
      l.retryLane = g !== 0 && g < c ? g : c;
    }
  }
  function km(l, c) {
    by(l, c), (l = l.alternate) && by(l, c);
  }
  function lw() {
    return null;
  }
  var kc = typeof reportError == "function" ? reportError : function(l) {
    console.error(l);
  };
  function Cy(l) {
    this._internalRoot = l;
  }
  Pm.prototype.render = Cy.prototype.render = function(l) {
    var c = this._internalRoot;
    if (c === null) throw Error(n(409));
    Rm(l, c, null, null);
  }, Pm.prototype.unmount = Cy.prototype.unmount = function() {
    var l = this._internalRoot;
    if (l !== null) {
      this._internalRoot = null;
      var c = l.containerInfo;
      Rc(function() {
        Rm(null, l, null, null);
      }), c[ml] = null;
    }
  };
  function Pm(l) {
    this._internalRoot = l;
  }
  Pm.prototype.unstable_scheduleHydration = function(l) {
    if (l) {
      var c = Sn();
      l = { blockedOn: null, target: l, priority: c };
      for (var g = 0; g < Do.length && c !== 0 && c < Do[g].priority; g++) ;
      Do.splice(g, 0, l), g === 0 && Df(l);
    }
  };
  function Sy(l) {
    return !(!l || l.nodeType !== 1 && l.nodeType !== 9 && l.nodeType !== 11);
  }
  function Mm(l) {
    return !(!l || l.nodeType !== 1 && l.nodeType !== 9 && l.nodeType !== 11 && (l.nodeType !== 8 || l.nodeValue !== " react-mount-point-unstable "));
  }
  function uw() {
  }
  function bT(l, c, g, x, P) {
    if (P) {
      if (typeof x == "function") {
        var $ = x;
        x = function() {
          var je = Om(oe);
          $.call(je);
        };
      }
      var oe = sw(c, x, l, 0, null, !1, !1, "", uw);
      return l._reactRootContainer = oe, l[ml] = oe.current, gd(l.nodeType === 8 ? l.parentNode : l), Rc(), oe;
    }
    for (; P = l.lastChild; ) l.removeChild(P);
    if (typeof x == "function") {
      var he = x;
      x = function() {
        var je = Om(Se);
        he.call(je);
      };
    }
    var Se = Tm(l, 0, !1, null, null, !1, !1, "", uw);
    return l._reactRootContainer = Se, l[ml] = Se.current, gd(l.nodeType === 8 ? l.parentNode : l), Rc(function() {
      Rm(c, Se, g, x);
    }), Se;
  }
  function Ep(l, c, g, x, P) {
    var $ = g._reactRootContainer;
    if ($) {
      var oe = $;
      if (typeof P == "function") {
        var he = P;
        P = function() {
          var Se = Om(oe);
          he.call(Se);
        };
      }
      Rm(c, oe, l, P);
    } else oe = bT(g, c, l, P, x);
    return Om(oe);
  }
  Zn = function(l) {
    switch (l.tag) {
      case 3:
        var c = l.stateNode;
        if (c.current.memoizedState.isDehydrated) {
          var g = Xa(c.pendingLanes);
          g !== 0 && (cl(c, g | 1), Ji(c, En()), !(Yn & 6) && (Md = En() + 500, Ps()));
        }
        break;
      case 13:
        Rc(function() {
          var x = da(l, 1);
          if (x !== null) {
            var P = xo();
            ki(x, l, 1, P);
          }
        }), km(l, 1);
    }
  }, Mf = function(l) {
    if (l.tag === 13) {
      var c = da(l, 134217728);
      if (c !== null) {
        var g = xo();
        ki(c, l, 134217728, g);
      }
      km(l, 134217728);
    }
  }, Ss = function(l) {
    if (l.tag === 13) {
      var c = As(l), g = da(l, c);
      if (g !== null) {
        var x = xo();
        ki(g, l, c, x);
      }
      km(l, c);
    }
  }, Sn = function() {
    return ir;
  }, sd = function(l, c) {
    var g = ir;
    try {
      return ir = l, c();
    } finally {
      ir = g;
    }
  }, fn = function(l, c, g) {
    switch (c) {
      case "input":
        if (Ne(l, g), c = g.name, g.type === "radio" && c != null) {
          for (g = l; g.parentNode; ) g = g.parentNode;
          for (g = g.querySelectorAll("input[name=" + JSON.stringify("" + c) + '][type="radio"]'), c = 0; c < g.length; c++) {
            var x = g[c];
            if (x !== l && x.form === l.form) {
              var P = Qr(x);
              if (!P) throw Error(n(90));
              ue(x), Ne(x, P);
            }
          }
        }
        break;
      case "textarea":
        ct(l, g);
        break;
      case "select":
        c = g.value, c != null && gt(l, !!g.multiple, c, !1);
    }
  }, Mo = py, Ut = Rc;
  var CT = { usingClientEntryPoint: !1, Events: [tn, ts, Qr, gr, Po, py] }, Tp = { findFiberByHostInstance: lc, bundleType: 0, version: "18.3.1", rendererPackageName: "react-dom" }, cw = { bundleType: Tp.bundleType, version: Tp.version, rendererPackageName: Tp.rendererPackageName, rendererConfig: Tp.rendererConfig, overrideHookState: null, overrideHookStateDeletePath: null, overrideHookStateRenamePath: null, overrideProps: null, overridePropsDeletePath: null, overridePropsRenamePath: null, setErrorHandler: null, setSuspenseHandler: null, scheduleUpdate: null, currentDispatcherRef: M.ReactCurrentDispatcher, findHostInstanceByFiber: function(l) {
    return l = Gt(l), l === null ? null : l.stateNode;
  }, findFiberByHostInstance: Tp.findFiberByHostInstance || lw, findHostInstancesForRefresh: null, scheduleRefresh: null, scheduleRoot: null, setRefreshHandler: null, getCurrentFiber: null, reconcilerVersion: "18.3.1-next-f1338f8080-20240426" };
  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u") {
    var yu = __REACT_DEVTOOLS_GLOBAL_HOOK__;
    if (!yu.isDisabled && yu.supportsFiber) try {
      Hi = yu.inject(cw), fi = yu;
    } catch {
    }
  }
  return Ua.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = CT, Ua.createPortal = function(l, c) {
    var g = 2 < arguments.length && arguments[2] !== void 0 ? arguments[2] : null;
    if (!Sy(c)) throw Error(n(200));
    return yT(l, c, null, g);
  }, Ua.createRoot = function(l, c) {
    if (!Sy(l)) throw Error(n(299));
    var g = !1, x = "", P = kc;
    return c != null && (c.unstable_strictMode === !0 && (g = !0), c.identifierPrefix !== void 0 && (x = c.identifierPrefix), c.onRecoverableError !== void 0 && (P = c.onRecoverableError)), c = Tm(l, 1, !1, null, null, g, !1, x, P), l[ml] = c.current, gd(l.nodeType === 8 ? l.parentNode : l), new Cy(c);
  }, Ua.findDOMNode = function(l) {
    if (l == null) return null;
    if (l.nodeType === 1) return l;
    var c = l._reactInternals;
    if (c === void 0)
      throw typeof l.render == "function" ? Error(n(188)) : (l = Object.keys(l).join(","), Error(n(268, l)));
    return l = Gt(c), l = l === null ? null : l.stateNode, l;
  }, Ua.flushSync = function(l) {
    return Rc(l);
  }, Ua.hydrate = function(l, c, g) {
    if (!Mm(c)) throw Error(n(200));
    return Ep(null, l, c, !0, g);
  }, Ua.hydrateRoot = function(l, c, g) {
    if (!Sy(l)) throw Error(n(405));
    var x = g != null && g.hydratedSources || null, P = !1, $ = "", oe = kc;
    if (g != null && (g.unstable_strictMode === !0 && (P = !0), g.identifierPrefix !== void 0 && ($ = g.identifierPrefix), g.onRecoverableError !== void 0 && (oe = g.onRecoverableError)), c = sw(c, null, l, 1, g ?? null, P, !1, $, oe), l[ml] = c.current, gd(l), x) for (l = 0; l < x.length; l++) g = x[l], P = g._getVersion, P = P(g._source), c.mutableSourceEagerHydrationData == null ? c.mutableSourceEagerHydrationData = [g, P] : c.mutableSourceEagerHydrationData.push(
      g,
      P
    );
    return new Pm(c);
  }, Ua.render = function(l, c, g) {
    if (!Mm(c)) throw Error(n(200));
    return Ep(null, l, c, !1, g);
  }, Ua.unmountComponentAtNode = function(l) {
    if (!Mm(l)) throw Error(n(40));
    return l._reactRootContainer ? (Rc(function() {
      Ep(null, null, l, !1, function() {
        l._reactRootContainer = null, l[ml] = null;
      });
    }), !0) : !1;
  }, Ua.unstable_batchedUpdates = py, Ua.unstable_renderSubtreeIntoContainer = function(l, c, g, x) {
    if (!Mm(g)) throw Error(n(200));
    if (l == null || l._reactInternals === void 0) throw Error(n(38));
    return Ep(l, c, g, !1, x);
  }, Ua.version = "18.3.1-next-f1338f8080-20240426", Ua;
}
var Ga = {};
/**
 * @license React
 * react-dom.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var gL;
function u3() {
  return gL || (gL = 1, process.env.NODE_ENV !== "production" && function() {
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
    var e = w, t = a$(), n = e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, i = !1;
    function s(r) {
      i = r;
    }
    function u(r) {
      if (!i) {
        for (var o = arguments.length, f = new Array(o > 1 ? o - 1 : 0), h = 1; h < o; h++)
          f[h - 1] = arguments[h];
        p("warn", r, f);
      }
    }
    function d(r) {
      if (!i) {
        for (var o = arguments.length, f = new Array(o > 1 ? o - 1 : 0), h = 1; h < o; h++)
          f[h - 1] = arguments[h];
        p("error", r, f);
      }
    }
    function p(r, o, f) {
      {
        var h = n.ReactDebugCurrentFrame, b = h.getStackAddendum();
        b !== "" && (o += "%s", f = f.concat([b]));
        var T = f.map(function(N) {
          return String(N);
        });
        T.unshift("Warning: " + o), Function.prototype.apply.call(console[r], console, T);
      }
    }
    var m = 0, v = 1, y = 2, C = 3, S = 4, R = 5, O = 6, E = 7, k = 8, F = 9, _ = 10, L = 11, M = 12, D = 13, H = 14, K = 15, Q = 16, z = 17, I = 18, G = 19, W = 21, B = 22, ee = 23, U = 24, q = 25, Y = !0, ne = !1, re = !1, X = !1, j = !1, ie = !0, fe = !0, ce = !0, me = !0, ge = /* @__PURE__ */ new Set(), de = {}, pe = {};
    function be(r, o) {
      Ce(r, o), Ce(r + "Capture", o);
    }
    function Ce(r, o) {
      de[r] && d("EventRegistry: More than one plugin attempted to publish the same registration name, `%s`.", r), de[r] = o;
      {
        var f = r.toLowerCase();
        pe[f] = r, r === "onDoubleClick" && (pe.ondblclick = r);
      }
      for (var h = 0; h < o.length; h++)
        ge.add(o[h]);
    }
    var Re = typeof window < "u" && typeof window.document < "u" && typeof window.document.createElement < "u", ue = Object.prototype.hasOwnProperty;
    function we(r) {
      {
        var o = typeof Symbol == "function" && Symbol.toStringTag, f = o && r[Symbol.toStringTag] || r.constructor.name || "Object";
        return f;
      }
    }
    function _e(r) {
      try {
        return He(r), !1;
      } catch {
        return !0;
      }
    }
    function He(r) {
      return "" + r;
    }
    function et(r, o) {
      if (_e(r))
        return d("The provided `%s` attribute is an unsupported type %s. This value must be coerced to a string before before using it here.", o, we(r)), He(r);
    }
    function Ne(r) {
      if (_e(r))
        return d("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", we(r)), He(r);
    }
    function rt(r, o) {
      if (_e(r))
        return d("The provided `%s` prop is an unsupported type %s. This value must be coerced to a string before before using it here.", o, we(r)), He(r);
    }
    function it(r, o) {
      if (_e(r))
        return d("The provided `%s` CSS property is an unsupported type %s. This value must be coerced to a string before before using it here.", o, we(r)), He(r);
    }
    function wt(r) {
      if (_e(r))
        return d("The provided HTML markup uses a value of unsupported type %s. This value must be coerced to a string before before using it here.", we(r)), He(r);
    }
    function gt(r) {
      if (_e(r))
        return d("Form field values (value, checked, defaultValue, or defaultChecked props) must be strings, not %s. This value must be coerced to a string before before using it here.", we(r)), He(r);
    }
    var ot = 0, jt = 1, ct = 2, Tt = 3, Rt = 4, Lt = 5, vt = 6, Qe = ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD", Oe = Qe + "\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040", Me = new RegExp("^[" + Qe + "][" + Oe + "]*$"), ht = {}, xt = {};
    function zt(r) {
      return ue.call(xt, r) ? !0 : ue.call(ht, r) ? !1 : Me.test(r) ? (xt[r] = !0, !0) : (ht[r] = !0, d("Invalid attribute name: `%s`", r), !1);
    }
    function bt(r, o, f) {
      return o !== null ? o.type === ot : f ? !1 : r.length > 2 && (r[0] === "o" || r[0] === "O") && (r[1] === "n" || r[1] === "N");
    }
    function Ge(r, o, f, h) {
      if (f !== null && f.type === ot)
        return !1;
      switch (typeof o) {
        case "function":
        case "symbol":
          return !0;
        case "boolean": {
          if (h)
            return !1;
          if (f !== null)
            return !f.acceptsBooleans;
          var b = r.toLowerCase().slice(0, 5);
          return b !== "data-" && b !== "aria-";
        }
        default:
          return !1;
      }
    }
    function Et(r, o, f, h) {
      if (o === null || typeof o > "u" || Ge(r, o, f, h))
        return !0;
      if (h)
        return !1;
      if (f !== null)
        switch (f.type) {
          case Tt:
            return !o;
          case Rt:
            return o === !1;
          case Lt:
            return isNaN(o);
          case vt:
            return isNaN(o) || o < 1;
        }
      return !1;
    }
    function At(r) {
      return fn.hasOwnProperty(r) ? fn[r] : null;
    }
    function pn(r, o, f, h, b, T, N) {
      this.acceptsBooleans = o === ct || o === Tt || o === Rt, this.attributeName = h, this.attributeNamespace = b, this.mustUseProperty = f, this.propertyName = r, this.type = o, this.sanitizeURL = T, this.removeEmptyString = N;
    }
    var fn = {}, mr = [
      "children",
      "dangerouslySetInnerHTML",
      // TODO: This prevents the assignment of defaultValue to regular
      // elements (not just inputs). Now that ReactDOMInput assigns to the
      // defaultValue property -- do we need this?
      "defaultValue",
      "defaultChecked",
      "innerHTML",
      "suppressContentEditableWarning",
      "suppressHydrationWarning",
      "style"
    ];
    mr.forEach(function(r) {
      fn[r] = new pn(
        r,
        ot,
        !1,
        // mustUseProperty
        r,
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), [["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(r) {
      var o = r[0], f = r[1];
      fn[o] = new pn(
        o,
        jt,
        !1,
        // mustUseProperty
        f,
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), ["contentEditable", "draggable", "spellCheck", "value"].forEach(function(r) {
      fn[r] = new pn(
        r,
        ct,
        !1,
        // mustUseProperty
        r.toLowerCase(),
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(r) {
      fn[r] = new pn(
        r,
        ct,
        !1,
        // mustUseProperty
        r,
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), [
      "allowFullScreen",
      "async",
      // Note: there is a special case that prevents it from being written to the DOM
      // on the client side because the browsers are inconsistent. Instead we call focus().
      "autoFocus",
      "autoPlay",
      "controls",
      "default",
      "defer",
      "disabled",
      "disablePictureInPicture",
      "disableRemotePlayback",
      "formNoValidate",
      "hidden",
      "loop",
      "noModule",
      "noValidate",
      "open",
      "playsInline",
      "readOnly",
      "required",
      "reversed",
      "scoped",
      "seamless",
      // Microdata
      "itemScope"
    ].forEach(function(r) {
      fn[r] = new pn(
        r,
        Tt,
        !1,
        // mustUseProperty
        r.toLowerCase(),
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), [
      "checked",
      // Note: `option.selected` is not updated if `select.multiple` is
      // disabled with `removeAttribute`. We have special logic for handling this.
      "multiple",
      "muted",
      "selected"
      // NOTE: if you add a camelCased prop to this list,
      // you'll need to set attributeName to name.toLowerCase()
      // instead in the assignment below.
    ].forEach(function(r) {
      fn[r] = new pn(
        r,
        Tt,
        !0,
        // mustUseProperty
        r,
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), [
      "capture",
      "download"
      // NOTE: if you add a camelCased prop to this list,
      // you'll need to set attributeName to name.toLowerCase()
      // instead in the assignment below.
    ].forEach(function(r) {
      fn[r] = new pn(
        r,
        Rt,
        !1,
        // mustUseProperty
        r,
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), [
      "cols",
      "rows",
      "size",
      "span"
      // NOTE: if you add a camelCased prop to this list,
      // you'll need to set attributeName to name.toLowerCase()
      // instead in the assignment below.
    ].forEach(function(r) {
      fn[r] = new pn(
        r,
        vt,
        !1,
        // mustUseProperty
        r,
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), ["rowSpan", "start"].forEach(function(r) {
      fn[r] = new pn(
        r,
        Lt,
        !1,
        // mustUseProperty
        r.toLowerCase(),
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    });
    var qn = /[\-\:]([a-z])/g, Nr = function(r) {
      return r[1].toUpperCase();
    };
    [
      "accent-height",
      "alignment-baseline",
      "arabic-form",
      "baseline-shift",
      "cap-height",
      "clip-path",
      "clip-rule",
      "color-interpolation",
      "color-interpolation-filters",
      "color-profile",
      "color-rendering",
      "dominant-baseline",
      "enable-background",
      "fill-opacity",
      "fill-rule",
      "flood-color",
      "flood-opacity",
      "font-family",
      "font-size",
      "font-size-adjust",
      "font-stretch",
      "font-style",
      "font-variant",
      "font-weight",
      "glyph-name",
      "glyph-orientation-horizontal",
      "glyph-orientation-vertical",
      "horiz-adv-x",
      "horiz-origin-x",
      "image-rendering",
      "letter-spacing",
      "lighting-color",
      "marker-end",
      "marker-mid",
      "marker-start",
      "overline-position",
      "overline-thickness",
      "paint-order",
      "panose-1",
      "pointer-events",
      "rendering-intent",
      "shape-rendering",
      "stop-color",
      "stop-opacity",
      "strikethrough-position",
      "strikethrough-thickness",
      "stroke-dasharray",
      "stroke-dashoffset",
      "stroke-linecap",
      "stroke-linejoin",
      "stroke-miterlimit",
      "stroke-opacity",
      "stroke-width",
      "text-anchor",
      "text-decoration",
      "text-rendering",
      "underline-position",
      "underline-thickness",
      "unicode-bidi",
      "unicode-range",
      "units-per-em",
      "v-alphabetic",
      "v-hanging",
      "v-ideographic",
      "v-mathematical",
      "vector-effect",
      "vert-adv-y",
      "vert-origin-x",
      "vert-origin-y",
      "word-spacing",
      "writing-mode",
      "xmlns:xlink",
      "x-height"
      // NOTE: if you add a camelCased prop to this list,
      // you'll need to set attributeName to name.toLowerCase()
      // instead in the assignment below.
    ].forEach(function(r) {
      var o = r.replace(qn, Nr);
      fn[o] = new pn(
        o,
        jt,
        !1,
        // mustUseProperty
        r,
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), [
      "xlink:actuate",
      "xlink:arcrole",
      "xlink:role",
      "xlink:show",
      "xlink:title",
      "xlink:type"
      // NOTE: if you add a camelCased prop to this list,
      // you'll need to set attributeName to name.toLowerCase()
      // instead in the assignment below.
    ].forEach(function(r) {
      var o = r.replace(qn, Nr);
      fn[o] = new pn(
        o,
        jt,
        !1,
        // mustUseProperty
        r,
        "http://www.w3.org/1999/xlink",
        !1,
        // sanitizeURL
        !1
      );
    }), [
      "xml:base",
      "xml:lang",
      "xml:space"
      // NOTE: if you add a camelCased prop to this list,
      // you'll need to set attributeName to name.toLowerCase()
      // instead in the assignment below.
    ].forEach(function(r) {
      var o = r.replace(qn, Nr);
      fn[o] = new pn(
        o,
        jt,
        !1,
        // mustUseProperty
        r,
        "http://www.w3.org/XML/1998/namespace",
        !1,
        // sanitizeURL
        !1
      );
    }), ["tabIndex", "crossOrigin"].forEach(function(r) {
      fn[r] = new pn(
        r,
        jt,
        !1,
        // mustUseProperty
        r.toLowerCase(),
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    });
    var gr = "xlinkHref";
    fn[gr] = new pn(
      "xlinkHref",
      jt,
      !1,
      // mustUseProperty
      "xlink:href",
      "http://www.w3.org/1999/xlink",
      !0,
      // sanitizeURL
      !1
    ), ["src", "href", "action", "formAction"].forEach(function(r) {
      fn[r] = new pn(
        r,
        jt,
        !1,
        // mustUseProperty
        r.toLowerCase(),
        // attributeName
        null,
        // attributeNamespace
        !0,
        // sanitizeURL
        !0
      );
    });
    var Po = /^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*\:/i, Mo = !1;
    function Ut(r) {
      !Mo && Po.test(r) && (Mo = !0, d("A future version of React will block javascript: URLs as a security precaution. Use event handlers instead if you can. If you need to generate unsafe HTML try using dangerouslySetInnerHTML instead. React was passed %s.", JSON.stringify(r)));
    }
    function fr(r, o, f, h) {
      if (h.mustUseProperty) {
        var b = h.propertyName;
        return r[b];
      } else {
        et(f, o), h.sanitizeURL && Ut("" + f);
        var T = h.attributeName, N = null;
        if (h.type === Rt) {
          if (r.hasAttribute(T)) {
            var V = r.getAttribute(T);
            return V === "" ? !0 : Et(o, f, h, !1) ? V : V === "" + f ? f : V;
          }
        } else if (r.hasAttribute(T)) {
          if (Et(o, f, h, !1))
            return r.getAttribute(T);
          if (h.type === Tt)
            return f;
          N = r.getAttribute(T);
        }
        return Et(o, f, h, !1) ? N === null ? f : N : N === "" + f ? f : N;
      }
    }
    function Ct(r, o, f, h) {
      {
        if (!zt(o))
          return;
        if (!r.hasAttribute(o))
          return f === void 0 ? void 0 : null;
        var b = r.getAttribute(o);
        return et(f, o), b === "" + f ? f : b;
      }
    }
    function St(r, o, f, h) {
      var b = At(o);
      if (!bt(o, b, h)) {
        if (Et(o, f, b, h) && (f = null), h || b === null) {
          if (zt(o)) {
            var T = o;
            f === null ? r.removeAttribute(T) : (et(f, o), r.setAttribute(T, "" + f));
          }
          return;
        }
        var N = b.mustUseProperty;
        if (N) {
          var V = b.propertyName;
          if (f === null) {
            var Z = b.type;
            r[V] = Z === Tt ? !1 : "";
          } else
            r[V] = f;
          return;
        }
        var se = b.attributeName, le = b.attributeNamespace;
        if (f === null)
          r.removeAttribute(se);
        else {
          var Te = b.type, xe;
          Te === Tt || Te === Rt && f === !0 ? xe = "" : (et(f, se), xe = "" + f, b.sanitizeURL && Ut(xe.toString())), le ? r.setAttributeNS(le, se, xe) : r.setAttribute(se, xe);
        }
      }
    }
    var en = Symbol.for("react.element"), on = Symbol.for("react.portal"), zn = Symbol.for("react.fragment"), Ar = Symbol.for("react.strict_mode"), ro = Symbol.for("react.profiler"), mo = Symbol.for("react.provider"), ve = Symbol.for("react.context"), We = Symbol.for("react.forward_ref"), pt = Symbol.for("react.suspense"), Ot = Symbol.for("react.suspense_list"), gn = Symbol.for("react.memo"), Le = Symbol.for("react.lazy"), ke = Symbol.for("react.scope"), Ze = Symbol.for("react.debug_trace_mode"), Gt = Symbol.for("react.offscreen"), Bt = Symbol.for("react.legacy_hidden"), Qt = Symbol.for("react.cache"), Hn = Symbol.for("react.tracing_marker"), Lr = Symbol.iterator, Wo = "@@iterator";
    function En(r) {
      if (r === null || typeof r != "object")
        return null;
      var o = Lr && r[Lr] || r[Wo];
      return typeof o == "function" ? o : null;
    }
    var Rn = Object.assign, di = 0, Ta, _n, Io, Si, Hi, fi, Pf;
    function wi() {
    }
    wi.__reactDisabledLog = !0;
    function wh() {
      {
        if (di === 0) {
          Ta = console.log, _n = console.info, Io = console.warn, Si = console.error, Hi = console.group, fi = console.groupCollapsed, Pf = console.groupEnd;
          var r = {
            configurable: !0,
            enumerable: !0,
            value: wi,
            writable: !0
          };
          Object.defineProperties(console, {
            info: r,
            log: r,
            warn: r,
            error: r,
            group: r,
            groupCollapsed: r,
            groupEnd: r
          });
        }
        di++;
      }
    }
    function xh() {
      {
        if (di--, di === 0) {
          var r = {
            configurable: !0,
            enumerable: !0,
            writable: !0
          };
          Object.defineProperties(console, {
            log: Rn({}, r, {
              value: Ta
            }),
            info: Rn({}, r, {
              value: _n
            }),
            warn: Rn({}, r, {
              value: Io
            }),
            error: Rn({}, r, {
              value: Si
            }),
            group: Rn({}, r, {
              value: Hi
            }),
            groupCollapsed: Rn({}, r, {
              value: fi
            }),
            groupEnd: Rn({}, r, {
              value: Pf
            })
          });
        }
        di < 0 && d("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
      }
    }
    var nd = n.ReactCurrentDispatcher, Kl;
    function la(r, o, f) {
      {
        if (Kl === void 0)
          try {
            throw Error();
          } catch (b) {
            var h = b.stack.trim().match(/\n( *(at )?)/);
            Kl = h && h[1] || "";
          }
        return `
` + Kl + r;
      }
    }
    var Xa = !1, Qa;
    {
      var rd = typeof WeakMap == "function" ? WeakMap : Map;
      Qa = new rd();
    }
    function Ju(r, o) {
      if (!r || Xa)
        return "";
      {
        var f = Qa.get(r);
        if (f !== void 0)
          return f;
      }
      var h;
      Xa = !0;
      var b = Error.prepareStackTrace;
      Error.prepareStackTrace = void 0;
      var T;
      T = nd.current, nd.current = null, wh();
      try {
        if (o) {
          var N = function() {
            throw Error();
          };
          if (Object.defineProperty(N.prototype, "props", {
            set: function() {
              throw Error();
            }
          }), typeof Reflect == "object" && Reflect.construct) {
            try {
              Reflect.construct(N, []);
            } catch (ze) {
              h = ze;
            }
            Reflect.construct(r, [], N);
          } else {
            try {
              N.call();
            } catch (ze) {
              h = ze;
            }
            r.call(N.prototype);
          }
        } else {
          try {
            throw Error();
          } catch (ze) {
            h = ze;
          }
          r();
        }
      } catch (ze) {
        if (ze && h && typeof ze.stack == "string") {
          for (var V = ze.stack.split(`
`), Z = h.stack.split(`
`), se = V.length - 1, le = Z.length - 1; se >= 1 && le >= 0 && V[se] !== Z[le]; )
            le--;
          for (; se >= 1 && le >= 0; se--, le--)
            if (V[se] !== Z[le]) {
              if (se !== 1 || le !== 1)
                do
                  if (se--, le--, le < 0 || V[se] !== Z[le]) {
                    var Te = `
` + V[se].replace(" at new ", " at ");
                    return r.displayName && Te.includes("<anonymous>") && (Te = Te.replace("<anonymous>", r.displayName)), typeof r == "function" && Qa.set(r, Te), Te;
                  }
                while (se >= 1 && le >= 0);
              break;
            }
        }
      } finally {
        Xa = !1, nd.current = T, xh(), Error.prepareStackTrace = b;
      }
      var xe = r ? r.displayName || r.name : "", Ae = xe ? la(xe) : "";
      return typeof r == "function" && Qa.set(r, Ae), Ae;
    }
    function Yl(r, o, f) {
      return Ju(r, !0);
    }
    function od(r, o, f) {
      return Ju(r, !1);
    }
    function id(r) {
      var o = r.prototype;
      return !!(o && o.isReactComponent);
    }
    function ul(r, o, f) {
      if (r == null)
        return "";
      if (typeof r == "function")
        return Ju(r, id(r));
      if (typeof r == "string")
        return la(r);
      switch (r) {
        case pt:
          return la("Suspense");
        case Ot:
          return la("SuspenseList");
      }
      if (typeof r == "object")
        switch (r.$$typeof) {
          case We:
            return od(r.render);
          case gn:
            return ul(r.type, o, f);
          case Le: {
            var h = r, b = h._payload, T = h._init;
            try {
              return ul(T(b), o, f);
            } catch {
            }
          }
        }
      return "";
    }
    function gv(r) {
      switch (r._debugOwner && r._debugOwner.type, r._debugSource, r.tag) {
        case R:
          return la(r.type);
        case Q:
          return la("Lazy");
        case D:
          return la("Suspense");
        case G:
          return la("SuspenseList");
        case m:
        case y:
        case K:
          return od(r.type);
        case L:
          return od(r.type.render);
        case v:
          return Yl(r.type);
        default:
          return "";
      }
    }
    function cl(r) {
      try {
        var o = "", f = r;
        do
          o += gv(f), f = f.return;
        while (f);
        return o;
      } catch (h) {
        return `
Error generating stack: ` + h.message + `
` + h.stack;
      }
    }
    function ir(r, o, f) {
      var h = r.displayName;
      if (h)
        return h;
      var b = o.displayName || o.name || "";
      return b !== "" ? f + "(" + b + ")" : f;
    }
    function ad(r) {
      return r.displayName || "Context";
    }
    function Zn(r) {
      if (r == null)
        return null;
      if (typeof r.tag == "number" && d("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), typeof r == "function")
        return r.displayName || r.name || null;
      if (typeof r == "string")
        return r;
      switch (r) {
        case zn:
          return "Fragment";
        case on:
          return "Portal";
        case ro:
          return "Profiler";
        case Ar:
          return "StrictMode";
        case pt:
          return "Suspense";
        case Ot:
          return "SuspenseList";
      }
      if (typeof r == "object")
        switch (r.$$typeof) {
          case ve:
            var o = r;
            return ad(o) + ".Consumer";
          case mo:
            var f = r;
            return ad(f._context) + ".Provider";
          case We:
            return ir(r, r.render, "ForwardRef");
          case gn:
            var h = r.displayName || null;
            return h !== null ? h : Zn(r.type) || "Memo";
          case Le: {
            var b = r, T = b._payload, N = b._init;
            try {
              return Zn(N(T));
            } catch {
              return null;
            }
          }
        }
      return null;
    }
    function Mf(r, o, f) {
      var h = o.displayName || o.name || "";
      return r.displayName || (h !== "" ? f + "(" + h + ")" : f);
    }
    function Ss(r) {
      return r.displayName || "Context";
    }
    function Sn(r) {
      var o = r.tag, f = r.type;
      switch (o) {
        case U:
          return "Cache";
        case F:
          var h = f;
          return Ss(h) + ".Consumer";
        case _:
          var b = f;
          return Ss(b._context) + ".Provider";
        case I:
          return "DehydratedFragment";
        case L:
          return Mf(f, f.render, "ForwardRef");
        case E:
          return "Fragment";
        case R:
          return f;
        case S:
          return "Portal";
        case C:
          return "Root";
        case O:
          return "Text";
        case Q:
          return Zn(f);
        case k:
          return f === Ar ? "StrictMode" : "Mode";
        case B:
          return "Offscreen";
        case M:
          return "Profiler";
        case W:
          return "Scope";
        case D:
          return "Suspense";
        case G:
          return "SuspenseList";
        case q:
          return "TracingMarker";
        case v:
        case m:
        case z:
        case y:
        case H:
        case K:
          if (typeof f == "function")
            return f.displayName || f.name || null;
          if (typeof f == "string")
            return f;
          break;
      }
      return null;
    }
    var sd = n.ReactDebugCurrentFrame, qo = null, ws = !1;
    function xi() {
      {
        if (qo === null)
          return null;
        var r = qo._debugOwner;
        if (r !== null && typeof r < "u")
          return Sn(r);
      }
      return null;
    }
    function xs() {
      return qo === null ? "" : cl(qo);
    }
    function Br() {
      sd.getCurrentStack = null, qo = null, ws = !1;
    }
    function wr(r) {
      sd.getCurrentStack = r === null ? null : xs, qo = r, ws = !1;
    }
    function Xl() {
      return qo;
    }
    function Do(r) {
      ws = r;
    }
    function Ei(r) {
      return "" + r;
    }
    function Ra(r) {
      switch (typeof r) {
        case "boolean":
        case "number":
        case "string":
        case "undefined":
          return r;
        case "object":
          return gt(r), r;
        default:
          return "";
      }
    }
    var Zu = {
      button: !0,
      checkbox: !0,
      image: !0,
      hidden: !0,
      radio: !0,
      reset: !0,
      submit: !0
    };
    function If(r, o) {
      Zu[o.type] || o.onChange || o.onInput || o.readOnly || o.disabled || o.value == null || d("You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`."), o.onChange || o.readOnly || o.disabled || o.checked == null || d("You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.");
    }
    function Df(r) {
      var o = r.type, f = r.nodeName;
      return f && f.toLowerCase() === "input" && (o === "checkbox" || o === "radio");
    }
    function Ql(r) {
      return r._valueTracker;
    }
    function ec(r) {
      r._valueTracker = null;
    }
    function vv(r) {
      var o = "";
      return r && (Df(r) ? o = r.checked ? "true" : "false" : o = r.value), o;
    }
    function Oa(r) {
      var o = Df(r) ? "checked" : "value", f = Object.getOwnPropertyDescriptor(r.constructor.prototype, o);
      gt(r[o]);
      var h = "" + r[o];
      if (!(r.hasOwnProperty(o) || typeof f > "u" || typeof f.get != "function" || typeof f.set != "function")) {
        var b = f.get, T = f.set;
        Object.defineProperty(r, o, {
          configurable: !0,
          get: function() {
            return b.call(this);
          },
          set: function(V) {
            gt(V), h = "" + V, T.call(this, V);
          }
        }), Object.defineProperty(r, o, {
          enumerable: f.enumerable
        });
        var N = {
          getValue: function() {
            return h;
          },
          setValue: function(V) {
            gt(V), h = "" + V;
          },
          stopTracking: function() {
            ec(r), delete r[o];
          }
        };
        return N;
      }
    }
    function Ja(r) {
      Ql(r) || (r._valueTracker = Oa(r));
    }
    function Es(r) {
      if (!r)
        return !1;
      var o = Ql(r);
      if (!o)
        return !0;
      var f = o.getValue(), h = vv(r);
      return h !== f ? (o.setValue(h), !0) : !1;
    }
    function ka(r) {
      if (r = r || (typeof document < "u" ? document : void 0), typeof r > "u")
        return null;
      try {
        return r.activeElement || r.body;
      } catch {
        return r.body;
      }
    }
    var ld = !1, ud = !1, Jl = !1, tc = !1;
    function cd(r) {
      var o = r.type === "checkbox" || r.type === "radio";
      return o ? r.checked != null : r.value != null;
    }
    function dd(r, o) {
      var f = r, h = o.checked, b = Rn({}, o, {
        defaultChecked: void 0,
        defaultValue: void 0,
        value: void 0,
        checked: h ?? f._wrapperState.initialChecked
      });
      return b;
    }
    function Za(r, o) {
      If("input", o), o.checked !== void 0 && o.defaultChecked !== void 0 && !ud && (d("%s contains an input of type %s with both checked and defaultChecked props. Input elements must be either controlled or uncontrolled (specify either the checked prop, or the defaultChecked prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", xi() || "A component", o.type), ud = !0), o.value !== void 0 && o.defaultValue !== void 0 && !ld && (d("%s contains an input of type %s with both value and defaultValue props. Input elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", xi() || "A component", o.type), ld = !0);
      var f = r, h = o.defaultValue == null ? "" : o.defaultValue;
      f._wrapperState = {
        initialChecked: o.checked != null ? o.checked : o.defaultChecked,
        initialValue: Ra(o.value != null ? o.value : h),
        controlled: cd(o)
      };
    }
    function te(r, o) {
      var f = r, h = o.checked;
      h != null && St(f, "checked", h, !1);
    }
    function ye(r, o) {
      var f = r;
      {
        var h = cd(o);
        !f._wrapperState.controlled && h && !tc && (d("A component is changing an uncontrolled input to be controlled. This is likely caused by the value changing from undefined to a defined value, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components"), tc = !0), f._wrapperState.controlled && !h && !Jl && (d("A component is changing a controlled input to be uncontrolled. This is likely caused by the value changing from a defined to undefined, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components"), Jl = !0);
      }
      te(r, o);
      var b = Ra(o.value), T = o.type;
      if (b != null)
        T === "number" ? (b === 0 && f.value === "" || // We explicitly want to coerce to number here if possible.
        // eslint-disable-next-line
        f.value != b) && (f.value = Ei(b)) : f.value !== Ei(b) && (f.value = Ei(b));
      else if (T === "submit" || T === "reset") {
        f.removeAttribute("value");
        return;
      }
      o.hasOwnProperty("value") ? sn(f, o.type, b) : o.hasOwnProperty("defaultValue") && sn(f, o.type, Ra(o.defaultValue)), o.checked == null && o.defaultChecked != null && (f.defaultChecked = !!o.defaultChecked);
    }
    function $e(r, o, f) {
      var h = r;
      if (o.hasOwnProperty("value") || o.hasOwnProperty("defaultValue")) {
        var b = o.type, T = b === "submit" || b === "reset";
        if (T && (o.value === void 0 || o.value === null))
          return;
        var N = Ei(h._wrapperState.initialValue);
        f || N !== h.value && (h.value = N), h.defaultValue = N;
      }
      var V = h.name;
      V !== "" && (h.name = ""), h.defaultChecked = !h.defaultChecked, h.defaultChecked = !!h._wrapperState.initialChecked, V !== "" && (h.name = V);
    }
    function Ve(r, o) {
      var f = r;
      ye(f, o), mt(f, o);
    }
    function mt(r, o) {
      var f = o.name;
      if (o.type === "radio" && f != null) {
        for (var h = r; h.parentNode; )
          h = h.parentNode;
        et(f, "name");
        for (var b = h.querySelectorAll("input[name=" + JSON.stringify("" + f) + '][type="radio"]'), T = 0; T < b.length; T++) {
          var N = b[T];
          if (!(N === r || N.form !== r.form)) {
            var V = kw(N);
            if (!V)
              throw new Error("ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.");
            Es(N), ye(N, V);
          }
        }
      }
    }
    function sn(r, o, f) {
      // Focused number inputs synchronize on blur. See ChangeEventPlugin.js
      (o !== "number" || ka(r.ownerDocument) !== r) && (f == null ? r.defaultValue = Ei(r._wrapperState.initialValue) : r.defaultValue !== Ei(f) && (r.defaultValue = Ei(f)));
    }
    var Pt = !1, cn = !1, An = !1;
    function er(r, o) {
      o.value == null && (typeof o.children == "object" && o.children !== null ? e.Children.forEach(o.children, function(f) {
        f != null && (typeof f == "string" || typeof f == "number" || cn || (cn = !0, d("Cannot infer the option value of complex children. Pass a `value` prop or use a plain string as children to <option>.")));
      }) : o.dangerouslySetInnerHTML != null && (An || (An = !0, d("Pass a `value` prop if you set dangerouslyInnerHTML so React knows which value should be selected.")))), o.selected != null && !Pt && (d("Use the `defaultValue` or `value` props on <select> instead of setting `selected` on <option>."), Pt = !0);
    }
    function $r(r, o) {
      o.value != null && r.setAttribute("value", Ei(Ra(o.value)));
    }
    var xr = Array.isArray;
    function Dn(r) {
      return xr(r);
    }
    var Er;
    Er = !1;
    function Xr() {
      var r = xi();
      return r ? `

Check the render method of \`` + r + "`." : "";
    }
    var Zl = ["value", "defaultValue"];
    function Nf(r) {
      {
        If("select", r);
        for (var o = 0; o < Zl.length; o++) {
          var f = Zl[o];
          if (r[f] != null) {
            var h = Dn(r[f]);
            r.multiple && !h ? d("The `%s` prop supplied to <select> must be an array if `multiple` is true.%s", f, Xr()) : !r.multiple && h && d("The `%s` prop supplied to <select> must be a scalar value if `multiple` is false.%s", f, Xr());
          }
        }
      }
    }
    function dl(r, o, f, h) {
      var b = r.options;
      if (o) {
        for (var T = f, N = {}, V = 0; V < T.length; V++)
          N["$" + T[V]] = !0;
        for (var Z = 0; Z < b.length; Z++) {
          var se = N.hasOwnProperty("$" + b[Z].value);
          b[Z].selected !== se && (b[Z].selected = se), se && h && (b[Z].defaultSelected = !0);
        }
      } else {
        for (var le = Ei(Ra(f)), Te = null, xe = 0; xe < b.length; xe++) {
          if (b[xe].value === le) {
            b[xe].selected = !0, h && (b[xe].defaultSelected = !0);
            return;
          }
          Te === null && !b[xe].disabled && (Te = b[xe]);
        }
        Te !== null && (Te.selected = !0);
      }
    }
    function Lf(r, o) {
      return Rn({}, o, {
        value: void 0
      });
    }
    function nc(r, o) {
      var f = r;
      Nf(o), f._wrapperState = {
        wasMultiple: !!o.multiple
      }, o.value !== void 0 && o.defaultValue !== void 0 && !Er && (d("Select elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled select element and remove one of these props. More info: https://reactjs.org/link/controlled-components"), Er = !0);
    }
    function yv(r, o) {
      var f = r;
      f.multiple = !!o.multiple;
      var h = o.value;
      h != null ? dl(f, !!o.multiple, h, !1) : o.defaultValue != null && dl(f, !!o.multiple, o.defaultValue, !0);
    }
    function Eh(r, o) {
      var f = r, h = f._wrapperState.wasMultiple;
      f._wrapperState.wasMultiple = !!o.multiple;
      var b = o.value;
      b != null ? dl(f, !!o.multiple, b, !1) : h !== !!o.multiple && (o.defaultValue != null ? dl(f, !!o.multiple, o.defaultValue, !0) : dl(f, !!o.multiple, o.multiple ? [] : "", !1));
    }
    function bv(r, o) {
      var f = r, h = o.value;
      h != null && dl(f, !!o.multiple, h, !1);
    }
    var QC = !1;
    function Cv(r, o) {
      var f = r;
      if (o.dangerouslySetInnerHTML != null)
        throw new Error("`dangerouslySetInnerHTML` does not make sense on <textarea>.");
      var h = Rn({}, o, {
        value: void 0,
        defaultValue: void 0,
        children: Ei(f._wrapperState.initialValue)
      });
      return h;
    }
    function Sv(r, o) {
      var f = r;
      If("textarea", o), o.value !== void 0 && o.defaultValue !== void 0 && !QC && (d("%s contains a textarea with both value and defaultValue props. Textarea elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled textarea and remove one of these props. More info: https://reactjs.org/link/controlled-components", xi() || "A component"), QC = !0);
      var h = o.value;
      if (h == null) {
        var b = o.children, T = o.defaultValue;
        if (b != null) {
          d("Use the `defaultValue` or `value` props instead of setting children on <textarea>.");
          {
            if (T != null)
              throw new Error("If you supply `defaultValue` on a <textarea>, do not pass children.");
            if (Dn(b)) {
              if (b.length > 1)
                throw new Error("<textarea> can only have at most one child.");
              b = b[0];
            }
            T = b;
          }
        }
        T == null && (T = ""), h = T;
      }
      f._wrapperState = {
        initialValue: Ra(h)
      };
    }
    function JC(r, o) {
      var f = r, h = Ra(o.value), b = Ra(o.defaultValue);
      if (h != null) {
        var T = Ei(h);
        T !== f.value && (f.value = T), o.defaultValue == null && f.defaultValue !== T && (f.defaultValue = T);
      }
      b != null && (f.defaultValue = Ei(b));
    }
    function ZC(r, o) {
      var f = r, h = f.textContent;
      h === f._wrapperState.initialValue && h !== "" && h !== null && (f.value = h);
    }
    function YE(r, o) {
      JC(r, o);
    }
    var fl = "http://www.w3.org/1999/xhtml", wv = "http://www.w3.org/1998/Math/MathML", xv = "http://www.w3.org/2000/svg";
    function Ev(r) {
      switch (r) {
        case "svg":
          return xv;
        case "math":
          return wv;
        default:
          return fl;
      }
    }
    function Tv(r, o) {
      return r == null || r === fl ? Ev(o) : r === xv && o === "foreignObject" ? fl : r;
    }
    var eS = function(r) {
      return typeof MSApp < "u" && MSApp.execUnsafeLocalFunction ? function(o, f, h, b) {
        MSApp.execUnsafeLocalFunction(function() {
          return r(o, f, h, b);
        });
      } : r;
    }, Th, tS = eS(function(r, o) {
      if (r.namespaceURI === xv && !("innerHTML" in r)) {
        Th = Th || document.createElement("div"), Th.innerHTML = "<svg>" + o.valueOf().toString() + "</svg>";
        for (var f = Th.firstChild; r.firstChild; )
          r.removeChild(r.firstChild);
        for (; f.firstChild; )
          r.appendChild(f.firstChild);
        return;
      }
      r.innerHTML = o;
    }), Vi = 1, pl = 3, go = 8, hl = 9, Rv = 11, fd = function(r, o) {
      if (o) {
        var f = r.firstChild;
        if (f && f === r.lastChild && f.nodeType === pl) {
          f.nodeValue = o;
          return;
        }
      }
      r.textContent = o;
    }, Ff = {
      animation: ["animationDelay", "animationDirection", "animationDuration", "animationFillMode", "animationIterationCount", "animationName", "animationPlayState", "animationTimingFunction"],
      background: ["backgroundAttachment", "backgroundClip", "backgroundColor", "backgroundImage", "backgroundOrigin", "backgroundPositionX", "backgroundPositionY", "backgroundRepeat", "backgroundSize"],
      backgroundPosition: ["backgroundPositionX", "backgroundPositionY"],
      border: ["borderBottomColor", "borderBottomStyle", "borderBottomWidth", "borderImageOutset", "borderImageRepeat", "borderImageSlice", "borderImageSource", "borderImageWidth", "borderLeftColor", "borderLeftStyle", "borderLeftWidth", "borderRightColor", "borderRightStyle", "borderRightWidth", "borderTopColor", "borderTopStyle", "borderTopWidth"],
      borderBlockEnd: ["borderBlockEndColor", "borderBlockEndStyle", "borderBlockEndWidth"],
      borderBlockStart: ["borderBlockStartColor", "borderBlockStartStyle", "borderBlockStartWidth"],
      borderBottom: ["borderBottomColor", "borderBottomStyle", "borderBottomWidth"],
      borderColor: ["borderBottomColor", "borderLeftColor", "borderRightColor", "borderTopColor"],
      borderImage: ["borderImageOutset", "borderImageRepeat", "borderImageSlice", "borderImageSource", "borderImageWidth"],
      borderInlineEnd: ["borderInlineEndColor", "borderInlineEndStyle", "borderInlineEndWidth"],
      borderInlineStart: ["borderInlineStartColor", "borderInlineStartStyle", "borderInlineStartWidth"],
      borderLeft: ["borderLeftColor", "borderLeftStyle", "borderLeftWidth"],
      borderRadius: ["borderBottomLeftRadius", "borderBottomRightRadius", "borderTopLeftRadius", "borderTopRightRadius"],
      borderRight: ["borderRightColor", "borderRightStyle", "borderRightWidth"],
      borderStyle: ["borderBottomStyle", "borderLeftStyle", "borderRightStyle", "borderTopStyle"],
      borderTop: ["borderTopColor", "borderTopStyle", "borderTopWidth"],
      borderWidth: ["borderBottomWidth", "borderLeftWidth", "borderRightWidth", "borderTopWidth"],
      columnRule: ["columnRuleColor", "columnRuleStyle", "columnRuleWidth"],
      columns: ["columnCount", "columnWidth"],
      flex: ["flexBasis", "flexGrow", "flexShrink"],
      flexFlow: ["flexDirection", "flexWrap"],
      font: ["fontFamily", "fontFeatureSettings", "fontKerning", "fontLanguageOverride", "fontSize", "fontSizeAdjust", "fontStretch", "fontStyle", "fontVariant", "fontVariantAlternates", "fontVariantCaps", "fontVariantEastAsian", "fontVariantLigatures", "fontVariantNumeric", "fontVariantPosition", "fontWeight", "lineHeight"],
      fontVariant: ["fontVariantAlternates", "fontVariantCaps", "fontVariantEastAsian", "fontVariantLigatures", "fontVariantNumeric", "fontVariantPosition"],
      gap: ["columnGap", "rowGap"],
      grid: ["gridAutoColumns", "gridAutoFlow", "gridAutoRows", "gridTemplateAreas", "gridTemplateColumns", "gridTemplateRows"],
      gridArea: ["gridColumnEnd", "gridColumnStart", "gridRowEnd", "gridRowStart"],
      gridColumn: ["gridColumnEnd", "gridColumnStart"],
      gridColumnGap: ["columnGap"],
      gridGap: ["columnGap", "rowGap"],
      gridRow: ["gridRowEnd", "gridRowStart"],
      gridRowGap: ["rowGap"],
      gridTemplate: ["gridTemplateAreas", "gridTemplateColumns", "gridTemplateRows"],
      listStyle: ["listStyleImage", "listStylePosition", "listStyleType"],
      margin: ["marginBottom", "marginLeft", "marginRight", "marginTop"],
      marker: ["markerEnd", "markerMid", "markerStart"],
      mask: ["maskClip", "maskComposite", "maskImage", "maskMode", "maskOrigin", "maskPositionX", "maskPositionY", "maskRepeat", "maskSize"],
      maskPosition: ["maskPositionX", "maskPositionY"],
      outline: ["outlineColor", "outlineStyle", "outlineWidth"],
      overflow: ["overflowX", "overflowY"],
      padding: ["paddingBottom", "paddingLeft", "paddingRight", "paddingTop"],
      placeContent: ["alignContent", "justifyContent"],
      placeItems: ["alignItems", "justifyItems"],
      placeSelf: ["alignSelf", "justifySelf"],
      textDecoration: ["textDecorationColor", "textDecorationLine", "textDecorationStyle"],
      textEmphasis: ["textEmphasisColor", "textEmphasisStyle"],
      transition: ["transitionDelay", "transitionDuration", "transitionProperty", "transitionTimingFunction"],
      wordWrap: ["overflowWrap"]
    }, _f = {
      animationIterationCount: !0,
      aspectRatio: !0,
      borderImageOutset: !0,
      borderImageSlice: !0,
      borderImageWidth: !0,
      boxFlex: !0,
      boxFlexGroup: !0,
      boxOrdinalGroup: !0,
      columnCount: !0,
      columns: !0,
      flex: !0,
      flexGrow: !0,
      flexPositive: !0,
      flexShrink: !0,
      flexNegative: !0,
      flexOrder: !0,
      gridArea: !0,
      gridRow: !0,
      gridRowEnd: !0,
      gridRowSpan: !0,
      gridRowStart: !0,
      gridColumn: !0,
      gridColumnEnd: !0,
      gridColumnSpan: !0,
      gridColumnStart: !0,
      fontWeight: !0,
      lineClamp: !0,
      lineHeight: !0,
      opacity: !0,
      order: !0,
      orphans: !0,
      tabSize: !0,
      widows: !0,
      zIndex: !0,
      zoom: !0,
      // SVG-related properties
      fillOpacity: !0,
      floodOpacity: !0,
      stopOpacity: !0,
      strokeDasharray: !0,
      strokeDashoffset: !0,
      strokeMiterlimit: !0,
      strokeOpacity: !0,
      strokeWidth: !0
    };
    function nS(r, o) {
      return r + o.charAt(0).toUpperCase() + o.substring(1);
    }
    var rS = ["Webkit", "ms", "Moz", "O"];
    Object.keys(_f).forEach(function(r) {
      rS.forEach(function(o) {
        _f[nS(o, r)] = _f[r];
      });
    });
    function Rh(r, o, f) {
      var h = o == null || typeof o == "boolean" || o === "";
      return h ? "" : !f && typeof o == "number" && o !== 0 && !(_f.hasOwnProperty(r) && _f[r]) ? o + "px" : (it(o, r), ("" + o).trim());
    }
    var oS = /([A-Z])/g, iS = /^ms-/;
    function pd(r) {
      return r.replace(oS, "-$1").toLowerCase().replace(iS, "-ms-");
    }
    var aS = function() {
    };
    {
      var XE = /^(?:webkit|moz|o)[A-Z]/, QE = /^-ms-/, sS = /-(.)/g, Ov = /;\s*$/, Ts = {}, rc = {}, lS = !1, Af = !1, JE = function(r) {
        return r.replace(sS, function(o, f) {
          return f.toUpperCase();
        });
      }, uS = function(r) {
        Ts.hasOwnProperty(r) && Ts[r] || (Ts[r] = !0, d(
          "Unsupported style property %s. Did you mean %s?",
          r,
          // As Andi Smith suggests
          // (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
          // is converted to lowercase `ms`.
          JE(r.replace(QE, "ms-"))
        ));
      }, kv = function(r) {
        Ts.hasOwnProperty(r) && Ts[r] || (Ts[r] = !0, d("Unsupported vendor-prefixed style property %s. Did you mean %s?", r, r.charAt(0).toUpperCase() + r.slice(1)));
      }, Pv = function(r, o) {
        rc.hasOwnProperty(o) && rc[o] || (rc[o] = !0, d(`Style property values shouldn't contain a semicolon. Try "%s: %s" instead.`, r, o.replace(Ov, "")));
      }, cS = function(r, o) {
        lS || (lS = !0, d("`NaN` is an invalid value for the `%s` css style property.", r));
      }, dS = function(r, o) {
        Af || (Af = !0, d("`Infinity` is an invalid value for the `%s` css style property.", r));
      };
      aS = function(r, o) {
        r.indexOf("-") > -1 ? uS(r) : XE.test(r) ? kv(r) : Ov.test(o) && Pv(r, o), typeof o == "number" && (isNaN(o) ? cS(r, o) : isFinite(o) || dS(r, o));
      };
    }
    var fS = aS;
    function ZE(r) {
      {
        var o = "", f = "";
        for (var h in r)
          if (r.hasOwnProperty(h)) {
            var b = r[h];
            if (b != null) {
              var T = h.indexOf("--") === 0;
              o += f + (T ? h : pd(h)) + ":", o += Rh(h, b, T), f = ";";
            }
          }
        return o || null;
      }
    }
    function pS(r, o) {
      var f = r.style;
      for (var h in o)
        if (o.hasOwnProperty(h)) {
          var b = h.indexOf("--") === 0;
          b || fS(h, o[h]);
          var T = Rh(h, o[h], b);
          h === "float" && (h = "cssFloat"), b ? f.setProperty(h, T) : f[h] = T;
        }
    }
    function eT(r) {
      return r == null || typeof r == "boolean" || r === "";
    }
    function hS(r) {
      var o = {};
      for (var f in r)
        for (var h = Ff[f] || [f], b = 0; b < h.length; b++)
          o[h[b]] = f;
      return o;
    }
    function tT(r, o) {
      {
        if (!o)
          return;
        var f = hS(r), h = hS(o), b = {};
        for (var T in f) {
          var N = f[T], V = h[T];
          if (V && N !== V) {
            var Z = N + "," + V;
            if (b[Z])
              continue;
            b[Z] = !0, d("%s a style property during rerender (%s) when a conflicting property is set (%s) can lead to styling bugs. To avoid this, don't mix shorthand and non-shorthand properties for the same value; instead, replace the shorthand with separate values.", eT(r[N]) ? "Removing" : "Updating", N, V);
          }
        }
      }
    }
    var es = {
      area: !0,
      base: !0,
      br: !0,
      col: !0,
      embed: !0,
      hr: !0,
      img: !0,
      input: !0,
      keygen: !0,
      link: !0,
      meta: !0,
      param: !0,
      source: !0,
      track: !0,
      wbr: !0
      // NOTE: menuitem's close tag should be omitted, but that causes problems.
    }, $f = Rn({
      menuitem: !0
    }, es), mS = "__html";
    function Oh(r, o) {
      if (o) {
        if ($f[r] && (o.children != null || o.dangerouslySetInnerHTML != null))
          throw new Error(r + " is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
        if (o.dangerouslySetInnerHTML != null) {
          if (o.children != null)
            throw new Error("Can only set one of `children` or `props.dangerouslySetInnerHTML`.");
          if (typeof o.dangerouslySetInnerHTML != "object" || !(mS in o.dangerouslySetInnerHTML))
            throw new Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.");
        }
        if (!o.suppressContentEditableWarning && o.contentEditable && o.children != null && d("A component is `contentEditable` and contains `children` managed by React. It is now your responsibility to guarantee that none of those nodes are unexpectedly modified or duplicated. This is probably not intentional."), o.style != null && typeof o.style != "object")
          throw new Error("The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.");
      }
    }
    function eu(r, o) {
      if (r.indexOf("-") === -1)
        return typeof o.is == "string";
      switch (r) {
        case "annotation-xml":
        case "color-profile":
        case "font-face":
        case "font-face-src":
        case "font-face-uri":
        case "font-face-format":
        case "font-face-name":
        case "missing-glyph":
          return !1;
        default:
          return !0;
      }
    }
    var jf = {
      // HTML
      accept: "accept",
      acceptcharset: "acceptCharset",
      "accept-charset": "acceptCharset",
      accesskey: "accessKey",
      action: "action",
      allowfullscreen: "allowFullScreen",
      alt: "alt",
      as: "as",
      async: "async",
      autocapitalize: "autoCapitalize",
      autocomplete: "autoComplete",
      autocorrect: "autoCorrect",
      autofocus: "autoFocus",
      autoplay: "autoPlay",
      autosave: "autoSave",
      capture: "capture",
      cellpadding: "cellPadding",
      cellspacing: "cellSpacing",
      challenge: "challenge",
      charset: "charSet",
      checked: "checked",
      children: "children",
      cite: "cite",
      class: "className",
      classid: "classID",
      classname: "className",
      cols: "cols",
      colspan: "colSpan",
      content: "content",
      contenteditable: "contentEditable",
      contextmenu: "contextMenu",
      controls: "controls",
      controlslist: "controlsList",
      coords: "coords",
      crossorigin: "crossOrigin",
      dangerouslysetinnerhtml: "dangerouslySetInnerHTML",
      data: "data",
      datetime: "dateTime",
      default: "default",
      defaultchecked: "defaultChecked",
      defaultvalue: "defaultValue",
      defer: "defer",
      dir: "dir",
      disabled: "disabled",
      disablepictureinpicture: "disablePictureInPicture",
      disableremoteplayback: "disableRemotePlayback",
      download: "download",
      draggable: "draggable",
      enctype: "encType",
      enterkeyhint: "enterKeyHint",
      for: "htmlFor",
      form: "form",
      formmethod: "formMethod",
      formaction: "formAction",
      formenctype: "formEncType",
      formnovalidate: "formNoValidate",
      formtarget: "formTarget",
      frameborder: "frameBorder",
      headers: "headers",
      height: "height",
      hidden: "hidden",
      high: "high",
      href: "href",
      hreflang: "hrefLang",
      htmlfor: "htmlFor",
      httpequiv: "httpEquiv",
      "http-equiv": "httpEquiv",
      icon: "icon",
      id: "id",
      imagesizes: "imageSizes",
      imagesrcset: "imageSrcSet",
      innerhtml: "innerHTML",
      inputmode: "inputMode",
      integrity: "integrity",
      is: "is",
      itemid: "itemID",
      itemprop: "itemProp",
      itemref: "itemRef",
      itemscope: "itemScope",
      itemtype: "itemType",
      keyparams: "keyParams",
      keytype: "keyType",
      kind: "kind",
      label: "label",
      lang: "lang",
      list: "list",
      loop: "loop",
      low: "low",
      manifest: "manifest",
      marginwidth: "marginWidth",
      marginheight: "marginHeight",
      max: "max",
      maxlength: "maxLength",
      media: "media",
      mediagroup: "mediaGroup",
      method: "method",
      min: "min",
      minlength: "minLength",
      multiple: "multiple",
      muted: "muted",
      name: "name",
      nomodule: "noModule",
      nonce: "nonce",
      novalidate: "noValidate",
      open: "open",
      optimum: "optimum",
      pattern: "pattern",
      placeholder: "placeholder",
      playsinline: "playsInline",
      poster: "poster",
      preload: "preload",
      profile: "profile",
      radiogroup: "radioGroup",
      readonly: "readOnly",
      referrerpolicy: "referrerPolicy",
      rel: "rel",
      required: "required",
      reversed: "reversed",
      role: "role",
      rows: "rows",
      rowspan: "rowSpan",
      sandbox: "sandbox",
      scope: "scope",
      scoped: "scoped",
      scrolling: "scrolling",
      seamless: "seamless",
      selected: "selected",
      shape: "shape",
      size: "size",
      sizes: "sizes",
      span: "span",
      spellcheck: "spellCheck",
      src: "src",
      srcdoc: "srcDoc",
      srclang: "srcLang",
      srcset: "srcSet",
      start: "start",
      step: "step",
      style: "style",
      summary: "summary",
      tabindex: "tabIndex",
      target: "target",
      title: "title",
      type: "type",
      usemap: "useMap",
      value: "value",
      width: "width",
      wmode: "wmode",
      wrap: "wrap",
      // SVG
      about: "about",
      accentheight: "accentHeight",
      "accent-height": "accentHeight",
      accumulate: "accumulate",
      additive: "additive",
      alignmentbaseline: "alignmentBaseline",
      "alignment-baseline": "alignmentBaseline",
      allowreorder: "allowReorder",
      alphabetic: "alphabetic",
      amplitude: "amplitude",
      arabicform: "arabicForm",
      "arabic-form": "arabicForm",
      ascent: "ascent",
      attributename: "attributeName",
      attributetype: "attributeType",
      autoreverse: "autoReverse",
      azimuth: "azimuth",
      basefrequency: "baseFrequency",
      baselineshift: "baselineShift",
      "baseline-shift": "baselineShift",
      baseprofile: "baseProfile",
      bbox: "bbox",
      begin: "begin",
      bias: "bias",
      by: "by",
      calcmode: "calcMode",
      capheight: "capHeight",
      "cap-height": "capHeight",
      clip: "clip",
      clippath: "clipPath",
      "clip-path": "clipPath",
      clippathunits: "clipPathUnits",
      cliprule: "clipRule",
      "clip-rule": "clipRule",
      color: "color",
      colorinterpolation: "colorInterpolation",
      "color-interpolation": "colorInterpolation",
      colorinterpolationfilters: "colorInterpolationFilters",
      "color-interpolation-filters": "colorInterpolationFilters",
      colorprofile: "colorProfile",
      "color-profile": "colorProfile",
      colorrendering: "colorRendering",
      "color-rendering": "colorRendering",
      contentscripttype: "contentScriptType",
      contentstyletype: "contentStyleType",
      cursor: "cursor",
      cx: "cx",
      cy: "cy",
      d: "d",
      datatype: "datatype",
      decelerate: "decelerate",
      descent: "descent",
      diffuseconstant: "diffuseConstant",
      direction: "direction",
      display: "display",
      divisor: "divisor",
      dominantbaseline: "dominantBaseline",
      "dominant-baseline": "dominantBaseline",
      dur: "dur",
      dx: "dx",
      dy: "dy",
      edgemode: "edgeMode",
      elevation: "elevation",
      enablebackground: "enableBackground",
      "enable-background": "enableBackground",
      end: "end",
      exponent: "exponent",
      externalresourcesrequired: "externalResourcesRequired",
      fill: "fill",
      fillopacity: "fillOpacity",
      "fill-opacity": "fillOpacity",
      fillrule: "fillRule",
      "fill-rule": "fillRule",
      filter: "filter",
      filterres: "filterRes",
      filterunits: "filterUnits",
      floodopacity: "floodOpacity",
      "flood-opacity": "floodOpacity",
      floodcolor: "floodColor",
      "flood-color": "floodColor",
      focusable: "focusable",
      fontfamily: "fontFamily",
      "font-family": "fontFamily",
      fontsize: "fontSize",
      "font-size": "fontSize",
      fontsizeadjust: "fontSizeAdjust",
      "font-size-adjust": "fontSizeAdjust",
      fontstretch: "fontStretch",
      "font-stretch": "fontStretch",
      fontstyle: "fontStyle",
      "font-style": "fontStyle",
      fontvariant: "fontVariant",
      "font-variant": "fontVariant",
      fontweight: "fontWeight",
      "font-weight": "fontWeight",
      format: "format",
      from: "from",
      fx: "fx",
      fy: "fy",
      g1: "g1",
      g2: "g2",
      glyphname: "glyphName",
      "glyph-name": "glyphName",
      glyphorientationhorizontal: "glyphOrientationHorizontal",
      "glyph-orientation-horizontal": "glyphOrientationHorizontal",
      glyphorientationvertical: "glyphOrientationVertical",
      "glyph-orientation-vertical": "glyphOrientationVertical",
      glyphref: "glyphRef",
      gradienttransform: "gradientTransform",
      gradientunits: "gradientUnits",
      hanging: "hanging",
      horizadvx: "horizAdvX",
      "horiz-adv-x": "horizAdvX",
      horizoriginx: "horizOriginX",
      "horiz-origin-x": "horizOriginX",
      ideographic: "ideographic",
      imagerendering: "imageRendering",
      "image-rendering": "imageRendering",
      in2: "in2",
      in: "in",
      inlist: "inlist",
      intercept: "intercept",
      k1: "k1",
      k2: "k2",
      k3: "k3",
      k4: "k4",
      k: "k",
      kernelmatrix: "kernelMatrix",
      kernelunitlength: "kernelUnitLength",
      kerning: "kerning",
      keypoints: "keyPoints",
      keysplines: "keySplines",
      keytimes: "keyTimes",
      lengthadjust: "lengthAdjust",
      letterspacing: "letterSpacing",
      "letter-spacing": "letterSpacing",
      lightingcolor: "lightingColor",
      "lighting-color": "lightingColor",
      limitingconeangle: "limitingConeAngle",
      local: "local",
      markerend: "markerEnd",
      "marker-end": "markerEnd",
      markerheight: "markerHeight",
      markermid: "markerMid",
      "marker-mid": "markerMid",
      markerstart: "markerStart",
      "marker-start": "markerStart",
      markerunits: "markerUnits",
      markerwidth: "markerWidth",
      mask: "mask",
      maskcontentunits: "maskContentUnits",
      maskunits: "maskUnits",
      mathematical: "mathematical",
      mode: "mode",
      numoctaves: "numOctaves",
      offset: "offset",
      opacity: "opacity",
      operator: "operator",
      order: "order",
      orient: "orient",
      orientation: "orientation",
      origin: "origin",
      overflow: "overflow",
      overlineposition: "overlinePosition",
      "overline-position": "overlinePosition",
      overlinethickness: "overlineThickness",
      "overline-thickness": "overlineThickness",
      paintorder: "paintOrder",
      "paint-order": "paintOrder",
      panose1: "panose1",
      "panose-1": "panose1",
      pathlength: "pathLength",
      patterncontentunits: "patternContentUnits",
      patterntransform: "patternTransform",
      patternunits: "patternUnits",
      pointerevents: "pointerEvents",
      "pointer-events": "pointerEvents",
      points: "points",
      pointsatx: "pointsAtX",
      pointsaty: "pointsAtY",
      pointsatz: "pointsAtZ",
      prefix: "prefix",
      preservealpha: "preserveAlpha",
      preserveaspectratio: "preserveAspectRatio",
      primitiveunits: "primitiveUnits",
      property: "property",
      r: "r",
      radius: "radius",
      refx: "refX",
      refy: "refY",
      renderingintent: "renderingIntent",
      "rendering-intent": "renderingIntent",
      repeatcount: "repeatCount",
      repeatdur: "repeatDur",
      requiredextensions: "requiredExtensions",
      requiredfeatures: "requiredFeatures",
      resource: "resource",
      restart: "restart",
      result: "result",
      results: "results",
      rotate: "rotate",
      rx: "rx",
      ry: "ry",
      scale: "scale",
      security: "security",
      seed: "seed",
      shaperendering: "shapeRendering",
      "shape-rendering": "shapeRendering",
      slope: "slope",
      spacing: "spacing",
      specularconstant: "specularConstant",
      specularexponent: "specularExponent",
      speed: "speed",
      spreadmethod: "spreadMethod",
      startoffset: "startOffset",
      stddeviation: "stdDeviation",
      stemh: "stemh",
      stemv: "stemv",
      stitchtiles: "stitchTiles",
      stopcolor: "stopColor",
      "stop-color": "stopColor",
      stopopacity: "stopOpacity",
      "stop-opacity": "stopOpacity",
      strikethroughposition: "strikethroughPosition",
      "strikethrough-position": "strikethroughPosition",
      strikethroughthickness: "strikethroughThickness",
      "strikethrough-thickness": "strikethroughThickness",
      string: "string",
      stroke: "stroke",
      strokedasharray: "strokeDasharray",
      "stroke-dasharray": "strokeDasharray",
      strokedashoffset: "strokeDashoffset",
      "stroke-dashoffset": "strokeDashoffset",
      strokelinecap: "strokeLinecap",
      "stroke-linecap": "strokeLinecap",
      strokelinejoin: "strokeLinejoin",
      "stroke-linejoin": "strokeLinejoin",
      strokemiterlimit: "strokeMiterlimit",
      "stroke-miterlimit": "strokeMiterlimit",
      strokewidth: "strokeWidth",
      "stroke-width": "strokeWidth",
      strokeopacity: "strokeOpacity",
      "stroke-opacity": "strokeOpacity",
      suppresscontenteditablewarning: "suppressContentEditableWarning",
      suppresshydrationwarning: "suppressHydrationWarning",
      surfacescale: "surfaceScale",
      systemlanguage: "systemLanguage",
      tablevalues: "tableValues",
      targetx: "targetX",
      targety: "targetY",
      textanchor: "textAnchor",
      "text-anchor": "textAnchor",
      textdecoration: "textDecoration",
      "text-decoration": "textDecoration",
      textlength: "textLength",
      textrendering: "textRendering",
      "text-rendering": "textRendering",
      to: "to",
      transform: "transform",
      typeof: "typeof",
      u1: "u1",
      u2: "u2",
      underlineposition: "underlinePosition",
      "underline-position": "underlinePosition",
      underlinethickness: "underlineThickness",
      "underline-thickness": "underlineThickness",
      unicode: "unicode",
      unicodebidi: "unicodeBidi",
      "unicode-bidi": "unicodeBidi",
      unicoderange: "unicodeRange",
      "unicode-range": "unicodeRange",
      unitsperem: "unitsPerEm",
      "units-per-em": "unitsPerEm",
      unselectable: "unselectable",
      valphabetic: "vAlphabetic",
      "v-alphabetic": "vAlphabetic",
      values: "values",
      vectoreffect: "vectorEffect",
      "vector-effect": "vectorEffect",
      version: "version",
      vertadvy: "vertAdvY",
      "vert-adv-y": "vertAdvY",
      vertoriginx: "vertOriginX",
      "vert-origin-x": "vertOriginX",
      vertoriginy: "vertOriginY",
      "vert-origin-y": "vertOriginY",
      vhanging: "vHanging",
      "v-hanging": "vHanging",
      videographic: "vIdeographic",
      "v-ideographic": "vIdeographic",
      viewbox: "viewBox",
      viewtarget: "viewTarget",
      visibility: "visibility",
      vmathematical: "vMathematical",
      "v-mathematical": "vMathematical",
      vocab: "vocab",
      widths: "widths",
      wordspacing: "wordSpacing",
      "word-spacing": "wordSpacing",
      writingmode: "writingMode",
      "writing-mode": "writingMode",
      x1: "x1",
      x2: "x2",
      x: "x",
      xchannelselector: "xChannelSelector",
      xheight: "xHeight",
      "x-height": "xHeight",
      xlinkactuate: "xlinkActuate",
      "xlink:actuate": "xlinkActuate",
      xlinkarcrole: "xlinkArcrole",
      "xlink:arcrole": "xlinkArcrole",
      xlinkhref: "xlinkHref",
      "xlink:href": "xlinkHref",
      xlinkrole: "xlinkRole",
      "xlink:role": "xlinkRole",
      xlinkshow: "xlinkShow",
      "xlink:show": "xlinkShow",
      xlinktitle: "xlinkTitle",
      "xlink:title": "xlinkTitle",
      xlinktype: "xlinkType",
      "xlink:type": "xlinkType",
      xmlbase: "xmlBase",
      "xml:base": "xmlBase",
      xmllang: "xmlLang",
      "xml:lang": "xmlLang",
      xmlns: "xmlns",
      "xml:space": "xmlSpace",
      xmlnsxlink: "xmlnsXlink",
      "xmlns:xlink": "xmlnsXlink",
      xmlspace: "xmlSpace",
      y1: "y1",
      y2: "y2",
      y: "y",
      ychannelselector: "yChannelSelector",
      z: "z",
      zoomandpan: "zoomAndPan"
    }, kh = {
      "aria-current": 0,
      // state
      "aria-description": 0,
      "aria-details": 0,
      "aria-disabled": 0,
      // state
      "aria-hidden": 0,
      // state
      "aria-invalid": 0,
      // state
      "aria-keyshortcuts": 0,
      "aria-label": 0,
      "aria-roledescription": 0,
      // Widget Attributes
      "aria-autocomplete": 0,
      "aria-checked": 0,
      "aria-expanded": 0,
      "aria-haspopup": 0,
      "aria-level": 0,
      "aria-modal": 0,
      "aria-multiline": 0,
      "aria-multiselectable": 0,
      "aria-orientation": 0,
      "aria-placeholder": 0,
      "aria-pressed": 0,
      "aria-readonly": 0,
      "aria-required": 0,
      "aria-selected": 0,
      "aria-sort": 0,
      "aria-valuemax": 0,
      "aria-valuemin": 0,
      "aria-valuenow": 0,
      "aria-valuetext": 0,
      // Live Region Attributes
      "aria-atomic": 0,
      "aria-busy": 0,
      "aria-live": 0,
      "aria-relevant": 0,
      // Drag-and-Drop Attributes
      "aria-dropeffect": 0,
      "aria-grabbed": 0,
      // Relationship Attributes
      "aria-activedescendant": 0,
      "aria-colcount": 0,
      "aria-colindex": 0,
      "aria-colspan": 0,
      "aria-controls": 0,
      "aria-describedby": 0,
      "aria-errormessage": 0,
      "aria-flowto": 0,
      "aria-labelledby": 0,
      "aria-owns": 0,
      "aria-posinset": 0,
      "aria-rowcount": 0,
      "aria-rowindex": 0,
      "aria-rowspan": 0,
      "aria-setsize": 0
    }, hd = {}, nT = new RegExp("^(aria)-[" + Oe + "]*$"), md = new RegExp("^(aria)[A-Z][" + Oe + "]*$");
    function Mv(r, o) {
      {
        if (ue.call(hd, o) && hd[o])
          return !0;
        if (md.test(o)) {
          var f = "aria-" + o.slice(4).toLowerCase(), h = kh.hasOwnProperty(f) ? f : null;
          if (h == null)
            return d("Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.", o), hd[o] = !0, !0;
          if (o !== h)
            return d("Invalid ARIA attribute `%s`. Did you mean `%s`?", o, h), hd[o] = !0, !0;
        }
        if (nT.test(o)) {
          var b = o.toLowerCase(), T = kh.hasOwnProperty(b) ? b : null;
          if (T == null)
            return hd[o] = !0, !1;
          if (o !== T)
            return d("Unknown ARIA attribute `%s`. Did you mean `%s`?", o, T), hd[o] = !0, !0;
        }
      }
      return !0;
    }
    function zf(r, o) {
      {
        var f = [];
        for (var h in o) {
          var b = Mv(r, h);
          b || f.push(h);
        }
        var T = f.map(function(N) {
          return "`" + N + "`";
        }).join(", ");
        f.length === 1 ? d("Invalid aria prop %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", T, r) : f.length > 1 && d("Invalid aria props %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", T, r);
      }
    }
    function Iv(r, o) {
      eu(r, o) || zf(r, o);
    }
    var Dv = !1;
    function Ph(r, o) {
      {
        if (r !== "input" && r !== "textarea" && r !== "select")
          return;
        o != null && o.value === null && !Dv && (Dv = !0, r === "select" && o.multiple ? d("`value` prop on `%s` should not be null. Consider using an empty array when `multiple` is set to `true` to clear the component or `undefined` for uncontrolled components.", r) : d("`value` prop on `%s` should not be null. Consider using an empty string to clear the component or `undefined` for uncontrolled components.", r));
      }
    }
    var oc = function() {
    };
    {
      var Ko = {}, Nv = /^on./, Mh = /^on[^A-Z]/, gS = new RegExp("^(aria)-[" + Oe + "]*$"), vS = new RegExp("^(aria)[A-Z][" + Oe + "]*$");
      oc = function(r, o, f, h) {
        if (ue.call(Ko, o) && Ko[o])
          return !0;
        var b = o.toLowerCase();
        if (b === "onfocusin" || b === "onfocusout")
          return d("React uses onFocus and onBlur instead of onFocusIn and onFocusOut. All React events are normalized to bubble, so onFocusIn and onFocusOut are not needed/supported by React."), Ko[o] = !0, !0;
        if (h != null) {
          var T = h.registrationNameDependencies, N = h.possibleRegistrationNames;
          if (T.hasOwnProperty(o))
            return !0;
          var V = N.hasOwnProperty(b) ? N[b] : null;
          if (V != null)
            return d("Invalid event handler property `%s`. Did you mean `%s`?", o, V), Ko[o] = !0, !0;
          if (Nv.test(o))
            return d("Unknown event handler property `%s`. It will be ignored.", o), Ko[o] = !0, !0;
        } else if (Nv.test(o))
          return Mh.test(o) && d("Invalid event handler property `%s`. React events use the camelCase naming convention, for example `onClick`.", o), Ko[o] = !0, !0;
        if (gS.test(o) || vS.test(o))
          return !0;
        if (b === "innerhtml")
          return d("Directly setting property `innerHTML` is not permitted. For more information, lookup documentation on `dangerouslySetInnerHTML`."), Ko[o] = !0, !0;
        if (b === "aria")
          return d("The `aria` attribute is reserved for future use in React. Pass individual `aria-` attributes instead."), Ko[o] = !0, !0;
        if (b === "is" && f !== null && f !== void 0 && typeof f != "string")
          return d("Received a `%s` for a string attribute `is`. If this is expected, cast the value to a string.", typeof f), Ko[o] = !0, !0;
        if (typeof f == "number" && isNaN(f))
          return d("Received NaN for the `%s` attribute. If this is expected, cast the value to a string.", o), Ko[o] = !0, !0;
        var Z = At(o), se = Z !== null && Z.type === ot;
        if (jf.hasOwnProperty(b)) {
          var le = jf[b];
          if (le !== o)
            return d("Invalid DOM property `%s`. Did you mean `%s`?", o, le), Ko[o] = !0, !0;
        } else if (!se && o !== b)
          return d("React does not recognize the `%s` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `%s` instead. If you accidentally passed it from a parent component, remove it from the DOM element.", o, b), Ko[o] = !0, !0;
        return typeof f == "boolean" && Ge(o, f, Z, !1) ? (f ? d('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.', f, o, o, f, o) : d('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.', f, o, o, f, o, o, o), Ko[o] = !0, !0) : se ? !0 : Ge(o, f, Z, !1) ? (Ko[o] = !0, !1) : ((f === "false" || f === "true") && Z !== null && Z.type === Tt && (d("Received the string `%s` for the boolean attribute `%s`. %s Did you mean %s={%s}?", f, o, f === "false" ? "The browser will interpret it as a truthy value." : 'Although this works, it will not work as expected if you pass the string "false".', o, f), Ko[o] = !0), !0);
      };
    }
    var yS = function(r, o, f) {
      {
        var h = [];
        for (var b in o) {
          var T = oc(r, b, o[b], f);
          T || h.push(b);
        }
        var N = h.map(function(V) {
          return "`" + V + "`";
        }).join(", ");
        h.length === 1 ? d("Invalid value for prop %s on <%s> tag. Either remove it from the element, or pass a string or number value to keep it in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", N, r) : h.length > 1 && d("Invalid values for props %s on <%s> tag. Either remove them from the element, or pass a string or number value to keep them in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", N, r);
      }
    };
    function bS(r, o, f) {
      eu(r, o) || yS(r, o, f);
    }
    var Lv = 1, Ih = 2, Pa = 4, Fv = Lv | Ih | Pa, ic = null;
    function rT(r) {
      ic !== null && d("Expected currently replaying event to be null. This error is likely caused by a bug in React. Please file an issue."), ic = r;
    }
    function oT() {
      ic === null && d("Expected currently replaying event to not be null. This error is likely caused by a bug in React. Please file an issue."), ic = null;
    }
    function Hf(r) {
      return r === ic;
    }
    function _v(r) {
      var o = r.target || r.srcElement || window;
      return o.correspondingUseElement && (o = o.correspondingUseElement), o.nodeType === pl ? o.parentNode : o;
    }
    var Dh = null, ac = null, pr = null;
    function Nh(r) {
      var o = _d(r);
      if (o) {
        if (typeof Dh != "function")
          throw new Error("setRestoreImplementation() needs to be called to handle a target for controlled events. This error is likely caused by a bug in React. Please file an issue.");
        var f = o.stateNode;
        if (f) {
          var h = kw(f);
          Dh(o.stateNode, o.type, h);
        }
      }
    }
    function Lh(r) {
      Dh = r;
    }
    function gd(r) {
      ac ? pr ? pr.push(r) : pr = [r] : ac = r;
    }
    function CS() {
      return ac !== null || pr !== null;
    }
    function Fh() {
      if (ac) {
        var r = ac, o = pr;
        if (ac = null, pr = null, Nh(r), o)
          for (var f = 0; f < o.length; f++)
            Nh(o[f]);
      }
    }
    var vd = function(r, o) {
      return r(o);
    }, Vf = function() {
    }, tu = !1;
    function SS() {
      var r = CS();
      r && (Vf(), Fh());
    }
    function wS(r, o, f) {
      if (tu)
        return r(o, f);
      tu = !0;
      try {
        return vd(r, o, f);
      } finally {
        tu = !1, SS();
      }
    }
    function iT(r, o, f) {
      vd = r, Vf = f;
    }
    function xS(r) {
      return r === "button" || r === "input" || r === "select" || r === "textarea";
    }
    function _h(r, o, f) {
      switch (r) {
        case "onClick":
        case "onClickCapture":
        case "onDoubleClick":
        case "onDoubleClickCapture":
        case "onMouseDown":
        case "onMouseDownCapture":
        case "onMouseMove":
        case "onMouseMoveCapture":
        case "onMouseUp":
        case "onMouseUpCapture":
        case "onMouseEnter":
          return !!(f.disabled && xS(o));
        default:
          return !1;
      }
    }
    function nu(r, o) {
      var f = r.stateNode;
      if (f === null)
        return null;
      var h = kw(f);
      if (h === null)
        return null;
      var b = h[o];
      if (_h(o, r.type, h))
        return null;
      if (b && typeof b != "function")
        throw new Error("Expected `" + o + "` listener to be a function, instead got a value of `" + typeof b + "` type.");
      return b;
    }
    var Bf = !1;
    if (Re)
      try {
        var sc = {};
        Object.defineProperty(sc, "passive", {
          get: function() {
            Bf = !0;
          }
        }), window.addEventListener("test", sc, sc), window.removeEventListener("test", sc, sc);
      } catch {
        Bf = !1;
      }
    function Ah(r, o, f, h, b, T, N, V, Z) {
      var se = Array.prototype.slice.call(arguments, 3);
      try {
        o.apply(f, se);
      } catch (le) {
        this.onError(le);
      }
    }
    var $h = Ah;
    if (typeof window < "u" && typeof window.dispatchEvent == "function" && typeof document < "u" && typeof document.createEvent == "function") {
      var Av = document.createElement("react");
      $h = function(o, f, h, b, T, N, V, Z, se) {
        if (typeof document > "u" || document === null)
          throw new Error("The `document` global was defined when React was initialized, but is not defined anymore. This can happen in a test environment if a component schedules an update from an asynchronous callback, but the test has already finished running. To solve this, you can either unmount the component at the end of your test (and ensure that any asynchronous operations get canceled in `componentWillUnmount`), or you can change the test itself to be asynchronous.");
        var le = document.createEvent("Event"), Te = !1, xe = !0, Ae = window.event, ze = Object.getOwnPropertyDescriptor(window, "event");
        function qe() {
          Av.removeEventListener(Ke, ln, !1), typeof window.event < "u" && window.hasOwnProperty("event") && (window.event = Ae);
        }
        var Dt = Array.prototype.slice.call(arguments, 3);
        function ln() {
          Te = !0, qe(), f.apply(h, Dt), xe = !1;
        }
        var Jt, Qn = !1, Un = !1;
        function Ie(De) {
          if (Jt = De.error, Qn = !0, Jt === null && De.colno === 0 && De.lineno === 0 && (Un = !0), De.defaultPrevented && Jt != null && typeof Jt == "object")
            try {
              Jt._suppressLogging = !0;
            } catch {
            }
        }
        var Ke = "react-" + (o || "invokeguardedcallback");
        if (window.addEventListener("error", Ie), Av.addEventListener(Ke, ln, !1), le.initEvent(Ke, !1, !1), Av.dispatchEvent(le), ze && Object.defineProperty(window, "event", ze), Te && xe && (Qn ? Un && (Jt = new Error("A cross-origin error was thrown. React doesn't have access to the actual error object in development. See https://reactjs.org/link/crossorigin-error for more information.")) : Jt = new Error(`An error was thrown inside one of your components, but React doesn't know what it was. This is likely due to browser flakiness. React does its best to preserve the "Pause on exceptions" behavior of the DevTools, which requires some DEV-mode only tricks. It's possible that these don't work in your browser. Try triggering the error in production mode, or switching to a modern browser. If you suspect that this is actually an issue with React, please file an issue.`), this.onError(Jt)), window.removeEventListener("error", Ie), !Te)
          return qe(), Ah.apply(this, arguments);
      };
    }
    var ES = $h, yd = !1, jh = null, bd = !1, Rs = null, TS = {
      onError: function(r) {
        yd = !0, jh = r;
      }
    };
    function ru(r, o, f, h, b, T, N, V, Z) {
      yd = !1, jh = null, ES.apply(TS, arguments);
    }
    function Os(r, o, f, h, b, T, N, V, Z) {
      if (ru.apply(this, arguments), yd) {
        var se = Gf();
        bd || (bd = !0, Rs = se);
      }
    }
    function Uf() {
      if (bd) {
        var r = Rs;
        throw bd = !1, Rs = null, r;
      }
    }
    function ml() {
      return yd;
    }
    function Gf() {
      if (yd) {
        var r = jh;
        return yd = !1, jh = null, r;
      } else
        throw new Error("clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue.");
    }
    function Cd(r) {
      return r._reactInternals;
    }
    function aT(r) {
      return r._reactInternals !== void 0;
    }
    function lc(r, o) {
      r._reactInternals = o;
    }
    var tn = (
      /*                      */
      0
    ), ts = (
      /*                */
      1
    ), Qr = (
      /*                    */
      2
    ), Kn = (
      /*                       */
      4
    ), Ma = (
      /*                */
      16
    ), Ia = (
      /*                 */
      32
    ), jr = (
      /*                     */
      64
    ), Zt = (
      /*                   */
      128
    ), pi = (
      /*            */
      256
    ), oo = (
      /*                          */
      512
    ), No = (
      /*                     */
      1024
    ), Bi = (
      /*                      */
      2048
    ), Ui = (
      /*                    */
      4096
    ), vo = (
      /*                   */
      8192
    ), Sd = (
      /*             */
      16384
    ), RS = (
      /*               */
      32767
    ), Wf = (
      /*                   */
      32768
    ), jo = (
      /*                */
      65536
    ), zh = (
      /* */
      131072
    ), ks = (
      /*                       */
      1048576
    ), wd = (
      /*                    */
      2097152
    ), gl = (
      /*                 */
      4194304
    ), Hh = (
      /*                */
      8388608
    ), ou = (
      /*               */
      16777216
    ), Ps = (
      /*              */
      33554432
    ), iu = (
      // TODO: Remove Update flag from before mutation phase by re-landing Visibility
      // flag logic (see #20043)
      Kn | No | 0
    ), au = Qr | Kn | Ma | Ia | oo | Ui | vo, su = Kn | jr | oo | vo, vl = Bi | Ma, yo = gl | Hh | wd, Da = n.ReactCurrentOwner;
    function ua(r) {
      var o = r, f = r;
      if (r.alternate)
        for (; o.return; )
          o = o.return;
      else {
        var h = o;
        do
          o = h, (o.flags & (Qr | Ui)) !== tn && (f = o.return), h = o.return;
        while (h);
      }
      return o.tag === C ? f : null;
    }
    function Ms(r) {
      if (r.tag === D) {
        var o = r.memoizedState;
        if (o === null) {
          var f = r.alternate;
          f !== null && (o = f.memoizedState);
        }
        if (o !== null)
          return o.dehydrated;
      }
      return null;
    }
    function Is(r) {
      return r.tag === C ? r.stateNode.containerInfo : null;
    }
    function uc(r) {
      return ua(r) === r;
    }
    function OS(r) {
      {
        var o = Da.current;
        if (o !== null && o.tag === v) {
          var f = o, h = f.stateNode;
          h._warnedAboutRefsInRender || d("%s is accessing isMounted inside its render() function. render() should be a pure function of props and state. It should never access something that requires stale data from the previous render, such as refs. Move this logic to componentDidMount and componentDidUpdate instead.", Sn(f) || "A component"), h._warnedAboutRefsInRender = !0;
        }
      }
      var b = Cd(r);
      return b ? ua(b) === b : !1;
    }
    function Vh(r) {
      if (ua(r) !== r)
        throw new Error("Unable to find node on an unmounted component.");
    }
    function Bh(r) {
      var o = r.alternate;
      if (!o) {
        var f = ua(r);
        if (f === null)
          throw new Error("Unable to find node on an unmounted component.");
        return f !== r ? null : r;
      }
      for (var h = r, b = o; ; ) {
        var T = h.return;
        if (T === null)
          break;
        var N = T.alternate;
        if (N === null) {
          var V = T.return;
          if (V !== null) {
            h = b = V;
            continue;
          }
          break;
        }
        if (T.child === N.child) {
          for (var Z = T.child; Z; ) {
            if (Z === h)
              return Vh(T), r;
            if (Z === b)
              return Vh(T), o;
            Z = Z.sibling;
          }
          throw new Error("Unable to find node on an unmounted component.");
        }
        if (h.return !== b.return)
          h = T, b = N;
        else {
          for (var se = !1, le = T.child; le; ) {
            if (le === h) {
              se = !0, h = T, b = N;
              break;
            }
            if (le === b) {
              se = !0, b = T, h = N;
              break;
            }
            le = le.sibling;
          }
          if (!se) {
            for (le = N.child; le; ) {
              if (le === h) {
                se = !0, h = N, b = T;
                break;
              }
              if (le === b) {
                se = !0, b = N, h = T;
                break;
              }
              le = le.sibling;
            }
            if (!se)
              throw new Error("Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue.");
          }
        }
        if (h.alternate !== b)
          throw new Error("Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue.");
      }
      if (h.tag !== C)
        throw new Error("Unable to find node on an unmounted component.");
      return h.stateNode.current === h ? r : o;
    }
    function Gi(r) {
      var o = Bh(r);
      return o !== null ? Wi(o) : null;
    }
    function Wi(r) {
      if (r.tag === R || r.tag === O)
        return r;
      for (var o = r.child; o !== null; ) {
        var f = Wi(o);
        if (f !== null)
          return f;
        o = o.sibling;
      }
      return null;
    }
    function qr(r) {
      var o = Bh(r);
      return o !== null ? Na(o) : null;
    }
    function Na(r) {
      if (r.tag === R || r.tag === O)
        return r;
      for (var o = r.child; o !== null; ) {
        if (o.tag !== S) {
          var f = Na(o);
          if (f !== null)
            return f;
        }
        o = o.sibling;
      }
      return null;
    }
    var $v = t.unstable_scheduleCallback, kS = t.unstable_cancelCallback, jv = t.unstable_shouldYield, zv = t.unstable_requestPaint, Lo = t.unstable_now, Uh = t.unstable_getCurrentPriorityLevel, qf = t.unstable_ImmediatePriority, lu = t.unstable_UserBlockingPriority, yl = t.unstable_NormalPriority, sT = t.unstable_LowPriority, cc = t.unstable_IdlePriority, Gh = t.unstable_yieldValue, PS = t.unstable_setDisableYieldValue, dc = null, so = null, It = null, ca = !1, qi = typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u";
    function xd(r) {
      if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ > "u")
        return !1;
      var o = __REACT_DEVTOOLS_GLOBAL_HOOK__;
      if (o.isDisabled)
        return !0;
      if (!o.supportsFiber)
        return d("The installed version of React DevTools is too old and will not work with the current version of React. Please update React DevTools. https://reactjs.org/link/react-devtools"), !0;
      try {
        fe && (r = Rn({}, r, {
          getLaneLabelMap: fc,
          injectProfilingHooks: La
        })), dc = o.inject(r), so = o;
      } catch (f) {
        d("React instrumentation encountered an error: %s.", f);
      }
      return !!o.checkDCE;
    }
    function Hv(r, o) {
      if (so && typeof so.onScheduleFiberRoot == "function")
        try {
          so.onScheduleFiberRoot(dc, r, o);
        } catch (f) {
          ca || (ca = !0, d("React instrumentation encountered an error: %s", f));
        }
    }
    function Vv(r, o) {
      if (so && typeof so.onCommitFiberRoot == "function")
        try {
          var f = (r.current.flags & Zt) === Zt;
          if (ce) {
            var h;
            switch (o) {
              case Ti:
                h = qf;
                break;
              case Ns:
                h = lu;
                break;
              case Fa:
                h = yl;
                break;
              case _a:
                h = cc;
                break;
              default:
                h = yl;
                break;
            }
            so.onCommitFiberRoot(dc, r, h, f);
          }
        } catch (b) {
          ca || (ca = !0, d("React instrumentation encountered an error: %s", b));
        }
    }
    function Bv(r) {
      if (so && typeof so.onPostCommitFiberRoot == "function")
        try {
          so.onPostCommitFiberRoot(dc, r);
        } catch (o) {
          ca || (ca = !0, d("React instrumentation encountered an error: %s", o));
        }
    }
    function Uv(r) {
      if (so && typeof so.onCommitFiberUnmount == "function")
        try {
          so.onCommitFiberUnmount(dc, r);
        } catch (o) {
          ca || (ca = !0, d("React instrumentation encountered an error: %s", o));
        }
    }
    function Jr(r) {
      if (typeof Gh == "function" && (PS(r), s(r)), so && typeof so.setStrictMode == "function")
        try {
          so.setStrictMode(dc, r);
        } catch (o) {
          ca || (ca = !0, d("React instrumentation encountered an error: %s", o));
        }
    }
    function La(r) {
      It = r;
    }
    function fc() {
      {
        for (var r = /* @__PURE__ */ new Map(), o = 1, f = 0; f < mc; f++) {
          var h = NS(o);
          r.set(o, h), o *= 2;
        }
        return r;
      }
    }
    function Gv(r) {
      It !== null && typeof It.markCommitStarted == "function" && It.markCommitStarted(r);
    }
    function Wv() {
      It !== null && typeof It.markCommitStopped == "function" && It.markCommitStopped();
    }
    function da(r) {
      It !== null && typeof It.markComponentRenderStarted == "function" && It.markComponentRenderStarted(r);
    }
    function fa() {
      It !== null && typeof It.markComponentRenderStopped == "function" && It.markComponentRenderStopped();
    }
    function qv(r) {
      It !== null && typeof It.markComponentPassiveEffectMountStarted == "function" && It.markComponentPassiveEffectMountStarted(r);
    }
    function MS() {
      It !== null && typeof It.markComponentPassiveEffectMountStopped == "function" && It.markComponentPassiveEffectMountStopped();
    }
    function bl(r) {
      It !== null && typeof It.markComponentPassiveEffectUnmountStarted == "function" && It.markComponentPassiveEffectUnmountStarted(r);
    }
    function uu() {
      It !== null && typeof It.markComponentPassiveEffectUnmountStopped == "function" && It.markComponentPassiveEffectUnmountStopped();
    }
    function Wh(r) {
      It !== null && typeof It.markComponentLayoutEffectMountStarted == "function" && It.markComponentLayoutEffectMountStarted(r);
    }
    function IS() {
      It !== null && typeof It.markComponentLayoutEffectMountStopped == "function" && It.markComponentLayoutEffectMountStopped();
    }
    function Kf(r) {
      It !== null && typeof It.markComponentLayoutEffectUnmountStarted == "function" && It.markComponentLayoutEffectUnmountStarted(r);
    }
    function Kv() {
      It !== null && typeof It.markComponentLayoutEffectUnmountStopped == "function" && It.markComponentLayoutEffectUnmountStopped();
    }
    function Yf(r, o, f) {
      It !== null && typeof It.markComponentErrored == "function" && It.markComponentErrored(r, o, f);
    }
    function Ds(r, o, f) {
      It !== null && typeof It.markComponentSuspended == "function" && It.markComponentSuspended(r, o, f);
    }
    function Xf(r) {
      It !== null && typeof It.markLayoutEffectsStarted == "function" && It.markLayoutEffectsStarted(r);
    }
    function Qf() {
      It !== null && typeof It.markLayoutEffectsStopped == "function" && It.markLayoutEffectsStopped();
    }
    function pc(r) {
      It !== null && typeof It.markPassiveEffectsStarted == "function" && It.markPassiveEffectsStarted(r);
    }
    function Yv() {
      It !== null && typeof It.markPassiveEffectsStopped == "function" && It.markPassiveEffectsStopped();
    }
    function hc(r) {
      It !== null && typeof It.markRenderStarted == "function" && It.markRenderStarted(r);
    }
    function DS() {
      It !== null && typeof It.markRenderYielded == "function" && It.markRenderYielded();
    }
    function qh() {
      It !== null && typeof It.markRenderStopped == "function" && It.markRenderStopped();
    }
    function Zr(r) {
      It !== null && typeof It.markRenderScheduled == "function" && It.markRenderScheduled(r);
    }
    function Kh(r, o) {
      It !== null && typeof It.markForceUpdateScheduled == "function" && It.markForceUpdateScheduled(r, o);
    }
    function Jf(r, o) {
      It !== null && typeof It.markStateUpdateScheduled == "function" && It.markStateUpdateScheduled(r, o);
    }
    var nn = (
      /*                         */
      0
    ), Ln = (
      /*                 */
      1
    ), ar = (
      /*                    */
      2
    ), Tr = (
      /*               */
      8
    ), sr = (
      /*              */
      16
    ), bo = Math.clz32 ? Math.clz32 : Zf, zo = Math.log, Yh = Math.LN2;
    function Zf(r) {
      var o = r >>> 0;
      return o === 0 ? 32 : 31 - (zo(o) / Yh | 0) | 0;
    }
    var mc = 31, at = (
      /*                        */
      0
    ), rr = (
      /*                          */
      0
    ), hn = (
      /*                        */
      1
    ), cu = (
      /*    */
      2
    ), ns = (
      /*             */
      4
    ), hi = (
      /*            */
      8
    ), lo = (
      /*                     */
      16
    ), Cl = (
      /*                */
      32
    ), du = (
      /*                       */
      4194240
    ), gc = (
      /*                        */
      64
    ), Xh = (
      /*                        */
      128
    ), Qh = (
      /*                        */
      256
    ), Jh = (
      /*                        */
      512
    ), Zh = (
      /*                        */
      1024
    ), em = (
      /*                        */
      2048
    ), tm = (
      /*                        */
      4096
    ), nm = (
      /*                        */
      8192
    ), rm = (
      /*                        */
      16384
    ), vc = (
      /*                       */
      32768
    ), om = (
      /*                       */
      65536
    ), Ed = (
      /*                       */
      131072
    ), Td = (
      /*                       */
      262144
    ), im = (
      /*                       */
      524288
    ), ep = (
      /*                       */
      1048576
    ), am = (
      /*                       */
      2097152
    ), tp = (
      /*                            */
      130023424
    ), yc = (
      /*                             */
      4194304
    ), sm = (
      /*                             */
      8388608
    ), np = (
      /*                             */
      16777216
    ), lm = (
      /*                             */
      33554432
    ), um = (
      /*                             */
      67108864
    ), Xv = yc, rp = (
      /*          */
      134217728
    ), Qv = (
      /*                          */
      268435455
    ), op = (
      /*               */
      268435456
    ), bc = (
      /*                        */
      536870912
    ), Ki = (
      /*                   */
      1073741824
    );
    function NS(r) {
      {
        if (r & hn)
          return "Sync";
        if (r & cu)
          return "InputContinuousHydration";
        if (r & ns)
          return "InputContinuous";
        if (r & hi)
          return "DefaultHydration";
        if (r & lo)
          return "Default";
        if (r & Cl)
          return "TransitionHydration";
        if (r & du)
          return "Transition";
        if (r & tp)
          return "Retry";
        if (r & rp)
          return "SelectiveHydration";
        if (r & op)
          return "IdleHydration";
        if (r & bc)
          return "Idle";
        if (r & Ki)
          return "Offscreen";
      }
    }
    var Fr = -1, Cc = gc, cm = yc;
    function ip(r) {
      switch (fu(r)) {
        case hn:
          return hn;
        case cu:
          return cu;
        case ns:
          return ns;
        case hi:
          return hi;
        case lo:
          return lo;
        case Cl:
          return Cl;
        case gc:
        case Xh:
        case Qh:
        case Jh:
        case Zh:
        case em:
        case tm:
        case nm:
        case rm:
        case vc:
        case om:
        case Ed:
        case Td:
        case im:
        case ep:
        case am:
          return r & du;
        case yc:
        case sm:
        case np:
        case lm:
        case um:
          return r & tp;
        case rp:
          return rp;
        case op:
          return op;
        case bc:
          return bc;
        case Ki:
          return Ki;
        default:
          return d("Should have found matching lanes. This is a bug in React."), r;
      }
    }
    function dm(r, o) {
      var f = r.pendingLanes;
      if (f === at)
        return at;
      var h = at, b = r.suspendedLanes, T = r.pingedLanes, N = f & Qv;
      if (N !== at) {
        var V = N & ~b;
        if (V !== at)
          h = ip(V);
        else {
          var Z = N & T;
          Z !== at && (h = ip(Z));
        }
      } else {
        var se = f & ~b;
        se !== at ? h = ip(se) : T !== at && (h = ip(T));
      }
      if (h === at)
        return at;
      if (o !== at && o !== h && // If we already suspended with a delay, then interrupting is fine. Don't
      // bother waiting until the root is complete.
      (o & b) === at) {
        var le = fu(h), Te = fu(o);
        if (
          // Tests whether the next lane is equal or lower priority than the wip
          // one. This works because the bits decrease in priority as you go left.
          le >= Te || // Default priority updates should not interrupt transition updates. The
          // only difference between default updates and transition updates is that
          // default updates do not support refresh transitions.
          le === lo && (Te & du) !== at
        )
          return o;
      }
      (h & ns) !== at && (h |= f & lo);
      var xe = r.entangledLanes;
      if (xe !== at)
        for (var Ae = r.entanglements, ze = h & xe; ze > 0; ) {
          var qe = Co(ze), Dt = 1 << qe;
          h |= Ae[qe], ze &= ~Dt;
        }
      return h;
    }
    function rs(r, o) {
      for (var f = r.eventTimes, h = Fr; o > 0; ) {
        var b = Co(o), T = 1 << b, N = f[b];
        N > h && (h = N), o &= ~T;
      }
      return h;
    }
    function Jv(r, o) {
      switch (r) {
        case hn:
        case cu:
        case ns:
          return o + 250;
        case hi:
        case lo:
        case Cl:
        case gc:
        case Xh:
        case Qh:
        case Jh:
        case Zh:
        case em:
        case tm:
        case nm:
        case rm:
        case vc:
        case om:
        case Ed:
        case Td:
        case im:
        case ep:
        case am:
          return o + 5e3;
        case yc:
        case sm:
        case np:
        case lm:
        case um:
          return Fr;
        case rp:
        case op:
        case bc:
        case Ki:
          return Fr;
        default:
          return d("Should have found matching lanes. This is a bug in React."), Fr;
      }
    }
    function fm(r, o) {
      for (var f = r.pendingLanes, h = r.suspendedLanes, b = r.pingedLanes, T = r.expirationTimes, N = f; N > 0; ) {
        var V = Co(N), Z = 1 << V, se = T[V];
        se === Fr ? ((Z & h) === at || (Z & b) !== at) && (T[V] = Jv(Z, o)) : se <= o && (r.expiredLanes |= Z), N &= ~Z;
      }
    }
    function LS(r) {
      return ip(r.pendingLanes);
    }
    function pm(r) {
      var o = r.pendingLanes & ~Ki;
      return o !== at ? o : o & Ki ? Ki : at;
    }
    function FS(r) {
      return (r & hn) !== at;
    }
    function ap(r) {
      return (r & Qv) !== at;
    }
    function Sc(r) {
      return (r & tp) === r;
    }
    function Zv(r) {
      var o = hn | ns | lo;
      return (r & o) === at;
    }
    function ey(r) {
      return (r & du) === r;
    }
    function hm(r, o) {
      var f = cu | ns | hi | lo;
      return (o & f) !== at;
    }
    function _S(r, o) {
      return (o & r.expiredLanes) !== at;
    }
    function ty(r) {
      return (r & du) !== at;
    }
    function ny() {
      var r = Cc;
      return Cc <<= 1, (Cc & du) === at && (Cc = gc), r;
    }
    function AS() {
      var r = cm;
      return cm <<= 1, (cm & tp) === at && (cm = yc), r;
    }
    function fu(r) {
      return r & -r;
    }
    function sp(r) {
      return fu(r);
    }
    function Co(r) {
      return 31 - bo(r);
    }
    function Yo(r) {
      return Co(r);
    }
    function Yi(r, o) {
      return (r & o) !== at;
    }
    function wc(r, o) {
      return (r & o) === o;
    }
    function kn(r, o) {
      return r | o;
    }
    function lp(r, o) {
      return r & ~o;
    }
    function ry(r, o) {
      return r & o;
    }
    function $S(r) {
      return r;
    }
    function jS(r, o) {
      return r !== rr && r < o ? r : o;
    }
    function up(r) {
      for (var o = [], f = 0; f < mc; f++)
        o.push(r);
      return o;
    }
    function Rd(r, o, f) {
      r.pendingLanes |= o, o !== bc && (r.suspendedLanes = at, r.pingedLanes = at);
      var h = r.eventTimes, b = Yo(o);
      h[b] = f;
    }
    function zS(r, o) {
      r.suspendedLanes |= o, r.pingedLanes &= ~o;
      for (var f = r.expirationTimes, h = o; h > 0; ) {
        var b = Co(h), T = 1 << b;
        f[b] = Fr, h &= ~T;
      }
    }
    function mm(r, o, f) {
      r.pingedLanes |= r.suspendedLanes & o;
    }
    function oy(r, o) {
      var f = r.pendingLanes & ~o;
      r.pendingLanes = o, r.suspendedLanes = at, r.pingedLanes = at, r.expiredLanes &= o, r.mutableReadLanes &= o, r.entangledLanes &= o;
      for (var h = r.entanglements, b = r.eventTimes, T = r.expirationTimes, N = f; N > 0; ) {
        var V = Co(N), Z = 1 << V;
        h[V] = at, b[V] = Fr, T[V] = Fr, N &= ~Z;
      }
    }
    function gm(r, o) {
      for (var f = r.entangledLanes |= o, h = r.entanglements, b = f; b; ) {
        var T = Co(b), N = 1 << T;
        // Is this one of the newly entangled lanes?
        N & o | // Is this lane transitively entangled with the newly entangled lanes?
        h[T] & o && (h[T] |= o), b &= ~N;
      }
    }
    function iy(r, o) {
      var f = fu(o), h;
      switch (f) {
        case ns:
          h = cu;
          break;
        case lo:
          h = hi;
          break;
        case gc:
        case Xh:
        case Qh:
        case Jh:
        case Zh:
        case em:
        case tm:
        case nm:
        case rm:
        case vc:
        case om:
        case Ed:
        case Td:
        case im:
        case ep:
        case am:
        case yc:
        case sm:
        case np:
        case lm:
        case um:
          h = Cl;
          break;
        case bc:
          h = op;
          break;
        default:
          h = rr;
          break;
      }
      return (h & (r.suspendedLanes | o)) !== rr ? rr : h;
    }
    function cp(r, o, f) {
      if (qi)
        for (var h = r.pendingUpdatersLaneMap; f > 0; ) {
          var b = Yo(f), T = 1 << b, N = h[b];
          N.add(o), f &= ~T;
        }
    }
    function HS(r, o) {
      if (qi)
        for (var f = r.pendingUpdatersLaneMap, h = r.memoizedUpdaters; o > 0; ) {
          var b = Yo(o), T = 1 << b, N = f[b];
          N.size > 0 && (N.forEach(function(V) {
            var Z = V.alternate;
            (Z === null || !h.has(Z)) && h.add(V);
          }), N.clear()), o &= ~T;
        }
    }
    function ay(r, o) {
      return null;
    }
    var Ti = hn, Ns = ns, Fa = lo, _a = bc, dp = rr;
    function Aa() {
      return dp;
    }
    function So(r) {
      dp = r;
    }
    function VS(r, o) {
      var f = dp;
      try {
        return dp = r, o();
      } finally {
        dp = f;
      }
    }
    function BS(r, o) {
      return r !== 0 && r < o ? r : o;
    }
    function fp(r, o) {
      return r > o ? r : o;
    }
    function Ho(r, o) {
      return r !== 0 && r < o;
    }
    function US(r) {
      var o = fu(r);
      return Ho(Ti, o) ? Ho(Ns, o) ? ap(o) ? Fa : _a : Ns : Ti;
    }
    function vm(r) {
      var o = r.current.memoizedState;
      return o.isDehydrated;
    }
    var pp;
    function mi(r) {
      pp = r;
    }
    function lT(r) {
      pp(r);
    }
    var Ht;
    function Od(r) {
      Ht = r;
    }
    var ym;
    function GS(r) {
      ym = r;
    }
    var WS;
    function hp(r) {
      WS = r;
    }
    var mp;
    function sy(r) {
      mp = r;
    }
    var bm = !1, gp = [], Sl = null, Ls = null, Fs = null, uo = /* @__PURE__ */ new Map(), Ri = /* @__PURE__ */ new Map(), Oi = [], qS = [
      "mousedown",
      "mouseup",
      "touchcancel",
      "touchend",
      "touchstart",
      "auxclick",
      "dblclick",
      "pointercancel",
      "pointerdown",
      "pointerup",
      "dragend",
      "dragstart",
      "drop",
      "compositionend",
      "compositionstart",
      "keydown",
      "keypress",
      "keyup",
      "input",
      "textInput",
      // Intentionally camelCase
      "copy",
      "cut",
      "paste",
      "click",
      "change",
      "contextmenu",
      "reset",
      "submit"
    ];
    function KS(r) {
      return qS.indexOf(r) > -1;
    }
    function os(r, o, f, h, b) {
      return {
        blockedOn: r,
        domEventName: o,
        eventSystemFlags: f,
        nativeEvent: b,
        targetContainers: [h]
      };
    }
    function ly(r, o) {
      switch (r) {
        case "focusin":
        case "focusout":
          Sl = null;
          break;
        case "dragenter":
        case "dragleave":
          Ls = null;
          break;
        case "mouseover":
        case "mouseout":
          Fs = null;
          break;
        case "pointerover":
        case "pointerout": {
          var f = o.pointerId;
          uo.delete(f);
          break;
        }
        case "gotpointercapture":
        case "lostpointercapture": {
          var h = o.pointerId;
          Ri.delete(h);
          break;
        }
      }
    }
    function Xi(r, o, f, h, b, T) {
      if (r === null || r.nativeEvent !== T) {
        var N = os(o, f, h, b, T);
        if (o !== null) {
          var V = _d(o);
          V !== null && Ht(V);
        }
        return N;
      }
      r.eventSystemFlags |= h;
      var Z = r.targetContainers;
      return b !== null && Z.indexOf(b) === -1 && Z.push(b), r;
    }
    function uT(r, o, f, h, b) {
      switch (o) {
        case "focusin": {
          var T = b;
          return Sl = Xi(Sl, r, o, f, h, T), !0;
        }
        case "dragenter": {
          var N = b;
          return Ls = Xi(Ls, r, o, f, h, N), !0;
        }
        case "mouseover": {
          var V = b;
          return Fs = Xi(Fs, r, o, f, h, V), !0;
        }
        case "pointerover": {
          var Z = b, se = Z.pointerId;
          return uo.set(se, Xi(uo.get(se) || null, r, o, f, h, Z)), !0;
        }
        case "gotpointercapture": {
          var le = b, Te = le.pointerId;
          return Ri.set(Te, Xi(Ri.get(Te) || null, r, o, f, h, le)), !0;
        }
      }
      return !1;
    }
    function uy(r) {
      var o = kp(r.target);
      if (o !== null) {
        var f = ua(o);
        if (f !== null) {
          var h = f.tag;
          if (h === D) {
            var b = Ms(f);
            if (b !== null) {
              r.blockedOn = b, mp(r.priority, function() {
                ym(f);
              });
              return;
            }
          } else if (h === C) {
            var T = f.stateNode;
            if (vm(T)) {
              r.blockedOn = Is(f);
              return;
            }
          }
        }
      }
      r.blockedOn = null;
    }
    function YS(r) {
      for (var o = WS(), f = {
        blockedOn: null,
        target: r,
        priority: o
      }, h = 0; h < Oi.length && Ho(o, Oi[h].priority); h++)
        ;
      Oi.splice(h, 0, f), h === 0 && uy(f);
    }
    function vp(r) {
      if (r.blockedOn !== null)
        return !1;
      for (var o = r.targetContainers; o.length > 0; ) {
        var f = o[0], h = Pd(r.domEventName, r.eventSystemFlags, f, r.nativeEvent);
        if (h === null) {
          var b = r.nativeEvent, T = new b.constructor(b.type, b);
          rT(T), b.target.dispatchEvent(T), oT();
        } else {
          var N = _d(h);
          return N !== null && Ht(N), r.blockedOn = h, !1;
        }
        o.shift();
      }
      return !0;
    }
    function cy(r, o, f) {
      vp(r) && f.delete(o);
    }
    function cT() {
      bm = !1, Sl !== null && vp(Sl) && (Sl = null), Ls !== null && vp(Ls) && (Ls = null), Fs !== null && vp(Fs) && (Fs = null), uo.forEach(cy), Ri.forEach(cy);
    }
    function pu(r, o) {
      r.blockedOn === o && (r.blockedOn = null, bm || (bm = !0, t.unstable_scheduleCallback(t.unstable_NormalPriority, cT)));
    }
    function xc(r) {
      if (gp.length > 0) {
        pu(gp[0], r);
        for (var o = 1; o < gp.length; o++) {
          var f = gp[o];
          f.blockedOn === r && (f.blockedOn = null);
        }
      }
      Sl !== null && pu(Sl, r), Ls !== null && pu(Ls, r), Fs !== null && pu(Fs, r);
      var h = function(V) {
        return pu(V, r);
      };
      uo.forEach(h), Ri.forEach(h);
      for (var b = 0; b < Oi.length; b++) {
        var T = Oi[b];
        T.blockedOn === r && (T.blockedOn = null);
      }
      for (; Oi.length > 0; ) {
        var N = Oi[0];
        if (N.blockedOn !== null)
          break;
        uy(N), N.blockedOn === null && Oi.shift();
      }
    }
    var Xo = n.ReactCurrentBatchConfig, Yn = !0;
    function Fo(r) {
      Yn = !!r;
    }
    function wo() {
      return Yn;
    }
    function Qo(r, o, f) {
      var h = Cm(o), b;
      switch (h) {
        case Ti:
          b = pa;
          break;
        case Ns:
          b = kd;
          break;
        case Fa:
        default:
          b = co;
          break;
      }
      return b.bind(null, o, f, r);
    }
    function pa(r, o, f, h) {
      var b = Aa(), T = Xo.transition;
      Xo.transition = null;
      try {
        So(Ti), co(r, o, f, h);
      } finally {
        So(b), Xo.transition = T;
      }
    }
    function kd(r, o, f, h) {
      var b = Aa(), T = Xo.transition;
      Xo.transition = null;
      try {
        So(Ns), co(r, o, f, h);
      } finally {
        So(b), Xo.transition = T;
      }
    }
    function co(r, o, f, h) {
      Yn && yp(r, o, f, h);
    }
    function yp(r, o, f, h) {
      var b = Pd(r, o, f, h);
      if (b === null) {
        OT(r, o, h, _s, f), ly(r, h);
        return;
      }
      if (uT(b, r, o, f, h)) {
        h.stopPropagation();
        return;
      }
      if (ly(r, h), o & Pa && KS(r)) {
        for (; b !== null; ) {
          var T = _d(b);
          T !== null && lT(T);
          var N = Pd(r, o, f, h);
          if (N === null && OT(r, o, h, _s, f), N === b)
            break;
          b = N;
        }
        b !== null && h.stopPropagation();
        return;
      }
      OT(r, o, h, null, f);
    }
    var _s = null;
    function Pd(r, o, f, h) {
      _s = null;
      var b = _v(h), T = kp(b);
      if (T !== null) {
        var N = ua(T);
        if (N === null)
          T = null;
        else {
          var V = N.tag;
          if (V === D) {
            var Z = Ms(N);
            if (Z !== null)
              return Z;
            T = null;
          } else if (V === C) {
            var se = N.stateNode;
            if (vm(se))
              return Is(N);
            T = null;
          } else N !== T && (T = null);
        }
      }
      return _s = T, null;
    }
    function Cm(r) {
      switch (r) {
        case "cancel":
        case "click":
        case "close":
        case "contextmenu":
        case "copy":
        case "cut":
        case "auxclick":
        case "dblclick":
        case "dragend":
        case "dragstart":
        case "drop":
        case "focusin":
        case "focusout":
        case "input":
        case "invalid":
        case "keydown":
        case "keypress":
        case "keyup":
        case "mousedown":
        case "mouseup":
        case "paste":
        case "pause":
        case "play":
        case "pointercancel":
        case "pointerdown":
        case "pointerup":
        case "ratechange":
        case "reset":
        case "resize":
        case "seeked":
        case "submit":
        case "touchcancel":
        case "touchend":
        case "touchstart":
        case "volumechange":
        case "change":
        case "selectionchange":
        case "textInput":
        case "compositionstart":
        case "compositionend":
        case "compositionupdate":
        case "beforeblur":
        case "afterblur":
        case "beforeinput":
        case "blur":
        case "fullscreenchange":
        case "focus":
        case "hashchange":
        case "popstate":
        case "select":
        case "selectstart":
          return Ti;
        case "drag":
        case "dragenter":
        case "dragexit":
        case "dragleave":
        case "dragover":
        case "mousemove":
        case "mouseout":
        case "mouseover":
        case "pointermove":
        case "pointerout":
        case "pointerover":
        case "scroll":
        case "toggle":
        case "touchmove":
        case "wheel":
        case "mouseenter":
        case "mouseleave":
        case "pointerenter":
        case "pointerleave":
          return Ns;
        case "message": {
          var o = Uh();
          switch (o) {
            case qf:
              return Ti;
            case lu:
              return Ns;
            case yl:
            case sT:
              return Fa;
            case cc:
              return _a;
            default:
              return Fa;
          }
        }
        default:
          return Fa;
      }
    }
    function bp(r, o, f) {
      return r.addEventListener(o, f, !1), f;
    }
    function Qi(r, o, f) {
      return r.addEventListener(o, f, !0), f;
    }
    function dy(r, o, f, h) {
      return r.addEventListener(o, f, {
        capture: !0,
        passive: h
      }), f;
    }
    function Md(r, o, f, h) {
      return r.addEventListener(o, f, {
        passive: h
      }), f;
    }
    var ha = null, Id = null, Ec = null;
    function hu(r) {
      return ha = r, Id = Cp(), !0;
    }
    function Sm() {
      ha = null, Id = null, Ec = null;
    }
    function wl() {
      if (Ec)
        return Ec;
      var r, o = Id, f = o.length, h, b = Cp(), T = b.length;
      for (r = 0; r < f && o[r] === b[r]; r++)
        ;
      var N = f - r;
      for (h = 1; h <= N && o[f - h] === b[T - h]; h++)
        ;
      var V = h > 1 ? 1 - h : void 0;
      return Ec = b.slice(r, V), Ec;
    }
    function Cp() {
      return "value" in ha ? ha.value : ha.textContent;
    }
    function mu(r) {
      var o, f = r.keyCode;
      return "charCode" in r ? (o = r.charCode, o === 0 && f === 13 && (o = 13)) : o = f, o === 10 && (o = 13), o >= 32 || o === 13 ? o : 0;
    }
    function Dd() {
      return !0;
    }
    function Sp() {
      return !1;
    }
    function gi(r) {
      function o(f, h, b, T, N) {
        this._reactName = f, this._targetInst = b, this.type = h, this.nativeEvent = T, this.target = N, this.currentTarget = null;
        for (var V in r)
          if (r.hasOwnProperty(V)) {
            var Z = r[V];
            Z ? this[V] = Z(T) : this[V] = T[V];
          }
        var se = T.defaultPrevented != null ? T.defaultPrevented : T.returnValue === !1;
        return se ? this.isDefaultPrevented = Dd : this.isDefaultPrevented = Sp, this.isPropagationStopped = Sp, this;
      }
      return Rn(o.prototype, {
        preventDefault: function() {
          this.defaultPrevented = !0;
          var f = this.nativeEvent;
          f && (f.preventDefault ? f.preventDefault() : typeof f.returnValue != "unknown" && (f.returnValue = !1), this.isDefaultPrevented = Dd);
        },
        stopPropagation: function() {
          var f = this.nativeEvent;
          f && (f.stopPropagation ? f.stopPropagation() : typeof f.cancelBubble != "unknown" && (f.cancelBubble = !0), this.isPropagationStopped = Dd);
        },
        /**
         * We release all dispatched `SyntheticEvent`s after each event loop, adding
         * them back into the pool. This allows a way to hold onto a reference that
         * won't be added back into the pool.
         */
        persist: function() {
        },
        /**
         * Checks if this event should be released back into the pool.
         *
         * @return {boolean} True if this should not be released, false otherwise.
         */
        isPersistent: Dd
      }), o;
    }
    var xo = {
      eventPhase: 0,
      bubbles: 0,
      cancelable: 0,
      timeStamp: function(r) {
        return r.timeStamp || Date.now();
      },
      defaultPrevented: 0,
      isTrusted: 0
    }, As = gi(xo), ki = Rn({}, xo, {
      view: 0,
      detail: 0
    }), Ji = gi(ki), wm, wp, Tc;
    function dT(r) {
      r !== Tc && (Tc && r.type === "mousemove" ? (wm = r.screenX - Tc.screenX, wp = r.screenY - Tc.screenY) : (wm = 0, wp = 0), Tc = r);
    }
    var is = Rn({}, ki, {
      screenX: 0,
      screenY: 0,
      clientX: 0,
      clientY: 0,
      pageX: 0,
      pageY: 0,
      ctrlKey: 0,
      shiftKey: 0,
      altKey: 0,
      metaKey: 0,
      getModifierState: Kr,
      button: 0,
      buttons: 0,
      relatedTarget: function(r) {
        return r.relatedTarget === void 0 ? r.fromElement === r.srcElement ? r.toElement : r.fromElement : r.relatedTarget;
      },
      movementX: function(r) {
        return "movementX" in r ? r.movementX : (dT(r), wm);
      },
      movementY: function(r) {
        return "movementY" in r ? r.movementY : wp;
      }
    }), fy = gi(is), py = Rn({}, is, {
      dataTransfer: 0
    }), Rc = gi(py), hy = Rn({}, ki, {
      relatedTarget: 0
    }), xl = gi(hy), XS = Rn({}, xo, {
      animationName: 0,
      elapsedTime: 0,
      pseudoElement: 0
    }), QS = gi(XS), my = Rn({}, xo, {
      clipboardData: function(r) {
        return "clipboardData" in r ? r.clipboardData : window.clipboardData;
      }
    }), xm = gi(my), fT = Rn({}, xo, {
      data: 0
    }), JS = gi(fT), ZS = JS, ew = {
      Esc: "Escape",
      Spacebar: " ",
      Left: "ArrowLeft",
      Up: "ArrowUp",
      Right: "ArrowRight",
      Down: "ArrowDown",
      Del: "Delete",
      Win: "OS",
      Menu: "ContextMenu",
      Apps: "ContextMenu",
      Scroll: "ScrollLock",
      MozPrintableKey: "Unidentified"
    }, Oc = {
      8: "Backspace",
      9: "Tab",
      12: "Clear",
      13: "Enter",
      16: "Shift",
      17: "Control",
      18: "Alt",
      19: "Pause",
      20: "CapsLock",
      27: "Escape",
      32: " ",
      33: "PageUp",
      34: "PageDown",
      35: "End",
      36: "Home",
      37: "ArrowLeft",
      38: "ArrowUp",
      39: "ArrowRight",
      40: "ArrowDown",
      45: "Insert",
      46: "Delete",
      112: "F1",
      113: "F2",
      114: "F3",
      115: "F4",
      116: "F5",
      117: "F6",
      118: "F7",
      119: "F8",
      120: "F9",
      121: "F10",
      122: "F11",
      123: "F12",
      144: "NumLock",
      145: "ScrollLock",
      224: "Meta"
    };
    function pT(r) {
      if (r.key) {
        var o = ew[r.key] || r.key;
        if (o !== "Unidentified")
          return o;
      }
      if (r.type === "keypress") {
        var f = mu(r);
        return f === 13 ? "Enter" : String.fromCharCode(f);
      }
      return r.type === "keydown" || r.type === "keyup" ? Oc[r.keyCode] || "Unidentified" : "";
    }
    var Nd = {
      Alt: "altKey",
      Control: "ctrlKey",
      Meta: "metaKey",
      Shift: "shiftKey"
    };
    function tw(r) {
      var o = this, f = o.nativeEvent;
      if (f.getModifierState)
        return f.getModifierState(r);
      var h = Nd[r];
      return h ? !!f[h] : !1;
    }
    function Kr(r) {
      return tw;
    }
    var hT = Rn({}, ki, {
      key: pT,
      code: 0,
      location: 0,
      ctrlKey: 0,
      shiftKey: 0,
      altKey: 0,
      metaKey: 0,
      repeat: 0,
      locale: 0,
      getModifierState: Kr,
      // Legacy Interface
      charCode: function(r) {
        return r.type === "keypress" ? mu(r) : 0;
      },
      keyCode: function(r) {
        return r.type === "keydown" || r.type === "keyup" ? r.keyCode : 0;
      },
      which: function(r) {
        return r.type === "keypress" ? mu(r) : r.type === "keydown" || r.type === "keyup" ? r.keyCode : 0;
      }
    }), nw = gi(hT), mT = Rn({}, is, {
      pointerId: 0,
      width: 0,
      height: 0,
      pressure: 0,
      tangentialPressure: 0,
      tiltX: 0,
      tiltY: 0,
      twist: 0,
      pointerType: 0,
      isPrimary: 0
    }), rw = gi(mT), ow = Rn({}, ki, {
      touches: 0,
      targetTouches: 0,
      changedTouches: 0,
      altKey: 0,
      metaKey: 0,
      ctrlKey: 0,
      shiftKey: 0,
      getModifierState: Kr
    }), iw = gi(ow), gT = Rn({}, xo, {
      propertyName: 0,
      elapsedTime: 0,
      pseudoElement: 0
    }), $a = gi(gT), gy = Rn({}, is, {
      deltaX: function(r) {
        return "deltaX" in r ? r.deltaX : (
          // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
          "wheelDeltaX" in r ? -r.wheelDeltaX : 0
        );
      },
      deltaY: function(r) {
        return "deltaY" in r ? r.deltaY : (
          // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
          "wheelDeltaY" in r ? -r.wheelDeltaY : (
            // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
            "wheelDelta" in r ? -r.wheelDelta : 0
          )
        );
      },
      deltaZ: 0,
      // Browsers without "deltaMode" is reporting in raw wheel delta where one
      // notch on the scroll is always +/- 120, roughly equivalent to pixels.
      // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
      // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
      deltaMode: 0
    }), vT = gi(gy), gu = [9, 13, 27, 32], xp = 229, El = Re && "CompositionEvent" in window, vu = null;
    Re && "documentMode" in document && (vu = document.documentMode);
    var vy = Re && "TextEvent" in window && !vu, Em = Re && (!El || vu && vu > 8 && vu <= 11), aw = 32, Tm = String.fromCharCode(aw);
    function yT() {
      be("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]), be("onCompositionEnd", ["compositionend", "focusout", "keydown", "keypress", "keyup", "mousedown"]), be("onCompositionStart", ["compositionstart", "focusout", "keydown", "keypress", "keyup", "mousedown"]), be("onCompositionUpdate", ["compositionupdate", "focusout", "keydown", "keypress", "keyup", "mousedown"]);
    }
    var yy = !1;
    function sw(r) {
      return (r.ctrlKey || r.altKey || r.metaKey) && // ctrlKey && altKey is equivalent to AltGr, and is not a command.
      !(r.ctrlKey && r.altKey);
    }
    function Rm(r) {
      switch (r) {
        case "compositionstart":
          return "onCompositionStart";
        case "compositionend":
          return "onCompositionEnd";
        case "compositionupdate":
          return "onCompositionUpdate";
      }
    }
    function Om(r, o) {
      return r === "keydown" && o.keyCode === xp;
    }
    function by(r, o) {
      switch (r) {
        case "keyup":
          return gu.indexOf(o.keyCode) !== -1;
        case "keydown":
          return o.keyCode !== xp;
        case "keypress":
        case "mousedown":
        case "focusout":
          return !0;
        default:
          return !1;
      }
    }
    function km(r) {
      var o = r.detail;
      return typeof o == "object" && "data" in o ? o.data : null;
    }
    function lw(r) {
      return r.locale === "ko";
    }
    var kc = !1;
    function Cy(r, o, f, h, b) {
      var T, N;
      if (El ? T = Rm(o) : kc ? by(o, h) && (T = "onCompositionEnd") : Om(o, h) && (T = "onCompositionStart"), !T)
        return null;
      Em && !lw(h) && (!kc && T === "onCompositionStart" ? kc = hu(b) : T === "onCompositionEnd" && kc && (N = wl()));
      var V = mw(f, T);
      if (V.length > 0) {
        var Z = new JS(T, o, null, h, b);
        if (r.push({
          event: Z,
          listeners: V
        }), N)
          Z.data = N;
        else {
          var se = km(h);
          se !== null && (Z.data = se);
        }
      }
    }
    function Pm(r, o) {
      switch (r) {
        case "compositionend":
          return km(o);
        case "keypress":
          var f = o.which;
          return f !== aw ? null : (yy = !0, Tm);
        case "textInput":
          var h = o.data;
          return h === Tm && yy ? null : h;
        default:
          return null;
      }
    }
    function Sy(r, o) {
      if (kc) {
        if (r === "compositionend" || !El && by(r, o)) {
          var f = wl();
          return Sm(), kc = !1, f;
        }
        return null;
      }
      switch (r) {
        case "paste":
          return null;
        case "keypress":
          if (!sw(o)) {
            if (o.char && o.char.length > 1)
              return o.char;
            if (o.which)
              return String.fromCharCode(o.which);
          }
          return null;
        case "compositionend":
          return Em && !lw(o) ? null : o.data;
        default:
          return null;
      }
    }
    function Mm(r, o, f, h, b) {
      var T;
      if (vy ? T = Pm(o, h) : T = Sy(o, h), !T)
        return null;
      var N = mw(f, "onBeforeInput");
      if (N.length > 0) {
        var V = new ZS("onBeforeInput", "beforeinput", null, h, b);
        r.push({
          event: V,
          listeners: N
        }), V.data = T;
      }
    }
    function uw(r, o, f, h, b, T, N) {
      Cy(r, o, f, h, b), Mm(r, o, f, h, b);
    }
    var bT = {
      color: !0,
      date: !0,
      datetime: !0,
      "datetime-local": !0,
      email: !0,
      month: !0,
      number: !0,
      password: !0,
      range: !0,
      search: !0,
      tel: !0,
      text: !0,
      time: !0,
      url: !0,
      week: !0
    };
    function Ep(r) {
      var o = r && r.nodeName && r.nodeName.toLowerCase();
      return o === "input" ? !!bT[r.type] : o === "textarea";
    }
    /**
     * Checks if an event is supported in the current execution environment.
     *
     * NOTE: This will not work correctly for non-generic events such as `change`,
     * `reset`, `load`, `error`, and `select`.
     *
     * Borrows from Modernizr.
     *
     * @param {string} eventNameSuffix Event name, e.g. "click".
     * @return {boolean} True if the event is supported.
     * @internal
     * @license Modernizr 3.0.0pre (Custom Build) | MIT
     */
    function CT(r) {
      if (!Re)
        return !1;
      var o = "on" + r, f = o in document;
      if (!f) {
        var h = document.createElement("div");
        h.setAttribute(o, "return;"), f = typeof h[o] == "function";
      }
      return f;
    }
    function Tp() {
      be("onChange", ["change", "click", "focusin", "focusout", "input", "keydown", "keyup", "selectionchange"]);
    }
    function cw(r, o, f, h) {
      gd(h);
      var b = mw(o, "onChange");
      if (b.length > 0) {
        var T = new As("onChange", "change", null, f, h);
        r.push({
          event: T,
          listeners: b
        });
      }
    }
    var yu = null, l = null;
    function c(r) {
      var o = r.nodeName && r.nodeName.toLowerCase();
      return o === "select" || o === "input" && r.type === "file";
    }
    function g(r) {
      var o = [];
      cw(o, l, r, _v(r)), wS(x, o);
    }
    function x(r) {
      $M(r, 0);
    }
    function P(r) {
      var o = _m(r);
      if (Es(o))
        return r;
    }
    function $(r, o) {
      if (r === "change")
        return o;
    }
    var oe = !1;
    Re && (oe = CT("input") && (!document.documentMode || document.documentMode > 9));
    function he(r, o) {
      yu = r, l = o, yu.attachEvent("onpropertychange", je);
    }
    function Se() {
      yu && (yu.detachEvent("onpropertychange", je), yu = null, l = null);
    }
    function je(r) {
      r.propertyName === "value" && P(l) && g(r);
    }
    function lt(r, o, f) {
      r === "focusin" ? (Se(), he(o, f)) : r === "focusout" && Se();
    }
    function dt(r, o) {
      if (r === "selectionchange" || r === "keyup" || r === "keydown")
        return P(l);
    }
    function st(r) {
      var o = r.nodeName;
      return o && o.toLowerCase() === "input" && (r.type === "checkbox" || r.type === "radio");
    }
    function Ft(r, o) {
      if (r === "click")
        return P(o);
    }
    function Wt(r, o) {
      if (r === "input" || r === "change")
        return P(o);
    }
    function Yt(r) {
      var o = r._wrapperState;
      !o || !o.controlled || r.type !== "number" || sn(r, "number", r.value);
    }
    function fo(r, o, f, h, b, T, N) {
      var V = f ? _m(f) : window, Z, se;
      if (c(V) ? Z = $ : Ep(V) ? oe ? Z = Wt : (Z = dt, se = lt) : st(V) && (Z = Ft), Z) {
        var le = Z(o, f);
        if (le) {
          cw(r, le, h, b);
          return;
        }
      }
      se && se(o, V, f), o === "focusout" && Yt(V);
    }
    function Pe() {
      Ce("onMouseEnter", ["mouseout", "mouseover"]), Ce("onMouseLeave", ["mouseout", "mouseover"]), Ce("onPointerEnter", ["pointerout", "pointerover"]), Ce("onPointerLeave", ["pointerout", "pointerover"]);
    }
    function Ee(r, o, f, h, b, T, N) {
      var V = o === "mouseover" || o === "pointerover", Z = o === "mouseout" || o === "pointerout";
      if (V && !Hf(h)) {
        var se = h.relatedTarget || h.fromElement;
        if (se && (kp(se) || Fy(se)))
          return;
      }
      if (!(!Z && !V)) {
        var le;
        if (b.window === b)
          le = b;
        else {
          var Te = b.ownerDocument;
          Te ? le = Te.defaultView || Te.parentWindow : le = window;
        }
        var xe, Ae;
        if (Z) {
          var ze = h.relatedTarget || h.toElement;
          if (xe = f, Ae = ze ? kp(ze) : null, Ae !== null) {
            var qe = ua(Ae);
            (Ae !== qe || Ae.tag !== R && Ae.tag !== O) && (Ae = null);
          }
        } else
          xe = null, Ae = f;
        if (xe !== Ae) {
          var Dt = fy, ln = "onMouseLeave", Jt = "onMouseEnter", Qn = "mouse";
          (o === "pointerout" || o === "pointerover") && (Dt = rw, ln = "onPointerLeave", Jt = "onPointerEnter", Qn = "pointer");
          var Un = xe == null ? le : _m(xe), Ie = Ae == null ? le : _m(Ae), Ke = new Dt(ln, Qn + "leave", xe, h, b);
          Ke.target = Un, Ke.relatedTarget = Ie;
          var De = null, ft = kp(b);
          if (ft === f) {
            var $t = new Dt(Jt, Qn + "enter", Ae, h, b);
            $t.target = Ie, $t.relatedTarget = Un, De = $t;
          }
          IV(r, Ke, De, xe, Ae);
        }
      }
    }
    function Fe(r, o) {
      return r === o && (r !== 0 || 1 / r === 1 / o) || r !== r && o !== o;
    }
    var ut = typeof Object.is == "function" ? Object.is : Fe;
    function qt(r, o) {
      if (ut(r, o))
        return !0;
      if (typeof r != "object" || r === null || typeof o != "object" || o === null)
        return !1;
      var f = Object.keys(r), h = Object.keys(o);
      if (f.length !== h.length)
        return !1;
      for (var b = 0; b < f.length; b++) {
        var T = f[b];
        if (!ue.call(o, T) || !ut(r[T], o[T]))
          return !1;
      }
      return !0;
    }
    function un(r) {
      for (; r && r.firstChild; )
        r = r.firstChild;
      return r;
    }
    function dn(r) {
      for (; r; ) {
        if (r.nextSibling)
          return r.nextSibling;
        r = r.parentNode;
      }
    }
    function Cn(r, o) {
      for (var f = un(r), h = 0, b = 0; f; ) {
        if (f.nodeType === pl) {
          if (b = h + f.textContent.length, h <= o && b >= o)
            return {
              node: f,
              offset: o - h
            };
          h = b;
        }
        f = un(dn(f));
      }
    }
    function Vo(r) {
      var o = r.ownerDocument, f = o && o.defaultView || window, h = f.getSelection && f.getSelection();
      if (!h || h.rangeCount === 0)
        return null;
      var b = h.anchorNode, T = h.anchorOffset, N = h.focusNode, V = h.focusOffset;
      try {
        b.nodeType, N.nodeType;
      } catch {
        return null;
      }
      return lr(r, b, T, N, V);
    }
    function lr(r, o, f, h, b) {
      var T = 0, N = -1, V = -1, Z = 0, se = 0, le = r, Te = null;
      e: for (; ; ) {
        for (var xe = null; le === o && (f === 0 || le.nodeType === pl) && (N = T + f), le === h && (b === 0 || le.nodeType === pl) && (V = T + b), le.nodeType === pl && (T += le.nodeValue.length), (xe = le.firstChild) !== null; )
          Te = le, le = xe;
        for (; ; ) {
          if (le === r)
            break e;
          if (Te === o && ++Z === f && (N = T), Te === h && ++se === b && (V = T), (xe = le.nextSibling) !== null)
            break;
          le = Te, Te = le.parentNode;
        }
        le = xe;
      }
      return N === -1 || V === -1 ? null : {
        start: N,
        end: V
      };
    }
    function bu(r, o) {
      var f = r.ownerDocument || document, h = f && f.defaultView || window;
      if (h.getSelection) {
        var b = h.getSelection(), T = r.textContent.length, N = Math.min(o.start, T), V = o.end === void 0 ? N : Math.min(o.end, T);
        if (!b.extend && N > V) {
          var Z = V;
          V = N, N = Z;
        }
        var se = Cn(r, N), le = Cn(r, V);
        if (se && le) {
          if (b.rangeCount === 1 && b.anchorNode === se.node && b.anchorOffset === se.offset && b.focusNode === le.node && b.focusOffset === le.offset)
            return;
          var Te = f.createRange();
          Te.setStart(se.node, se.offset), b.removeAllRanges(), N > V ? (b.addRange(Te), b.extend(le.node, le.offset)) : (Te.setEnd(le.node, le.offset), b.addRange(Te));
        }
      }
    }
    function dw(r) {
      return r && r.nodeType === pl;
    }
    function OM(r, o) {
      return !r || !o ? !1 : r === o ? !0 : dw(r) ? !1 : dw(o) ? OM(r, o.parentNode) : "contains" in r ? r.contains(o) : r.compareDocumentPosition ? !!(r.compareDocumentPosition(o) & 16) : !1;
    }
    function pV(r) {
      return r && r.ownerDocument && OM(r.ownerDocument.documentElement, r);
    }
    function hV(r) {
      try {
        return typeof r.contentWindow.location.href == "string";
      } catch {
        return !1;
      }
    }
    function kM() {
      for (var r = window, o = ka(); o instanceof r.HTMLIFrameElement; ) {
        if (hV(o))
          r = o.contentWindow;
        else
          return o;
        o = ka(r.document);
      }
      return o;
    }
    function ST(r) {
      var o = r && r.nodeName && r.nodeName.toLowerCase();
      return o && (o === "input" && (r.type === "text" || r.type === "search" || r.type === "tel" || r.type === "url" || r.type === "password") || o === "textarea" || r.contentEditable === "true");
    }
    function mV() {
      var r = kM();
      return {
        focusedElem: r,
        selectionRange: ST(r) ? vV(r) : null
      };
    }
    function gV(r) {
      var o = kM(), f = r.focusedElem, h = r.selectionRange;
      if (o !== f && pV(f)) {
        h !== null && ST(f) && yV(f, h);
        for (var b = [], T = f; T = T.parentNode; )
          T.nodeType === Vi && b.push({
            element: T,
            left: T.scrollLeft,
            top: T.scrollTop
          });
        typeof f.focus == "function" && f.focus();
        for (var N = 0; N < b.length; N++) {
          var V = b[N];
          V.element.scrollLeft = V.left, V.element.scrollTop = V.top;
        }
      }
    }
    function vV(r) {
      var o;
      return "selectionStart" in r ? o = {
        start: r.selectionStart,
        end: r.selectionEnd
      } : o = Vo(r), o || {
        start: 0,
        end: 0
      };
    }
    function yV(r, o) {
      var f = o.start, h = o.end;
      h === void 0 && (h = f), "selectionStart" in r ? (r.selectionStart = f, r.selectionEnd = Math.min(h, r.value.length)) : bu(r, o);
    }
    var bV = Re && "documentMode" in document && document.documentMode <= 11;
    function CV() {
      be("onSelect", ["focusout", "contextmenu", "dragend", "focusin", "keydown", "keyup", "mousedown", "mouseup", "selectionchange"]);
    }
    var Im = null, wT = null, wy = null, xT = !1;
    function SV(r) {
      if ("selectionStart" in r && ST(r))
        return {
          start: r.selectionStart,
          end: r.selectionEnd
        };
      var o = r.ownerDocument && r.ownerDocument.defaultView || window, f = o.getSelection();
      return {
        anchorNode: f.anchorNode,
        anchorOffset: f.anchorOffset,
        focusNode: f.focusNode,
        focusOffset: f.focusOffset
      };
    }
    function wV(r) {
      return r.window === r ? r.document : r.nodeType === hl ? r : r.ownerDocument;
    }
    function PM(r, o, f) {
      var h = wV(f);
      if (!(xT || Im == null || Im !== ka(h))) {
        var b = SV(Im);
        if (!wy || !qt(wy, b)) {
          wy = b;
          var T = mw(wT, "onSelect");
          if (T.length > 0) {
            var N = new As("onSelect", "select", null, o, f);
            r.push({
              event: N,
              listeners: T
            }), N.target = Im;
          }
        }
      }
    }
    function xV(r, o, f, h, b, T, N) {
      var V = f ? _m(f) : window;
      switch (o) {
        case "focusin":
          (Ep(V) || V.contentEditable === "true") && (Im = V, wT = f, wy = null);
          break;
        case "focusout":
          Im = null, wT = null, wy = null;
          break;
        case "mousedown":
          xT = !0;
          break;
        case "contextmenu":
        case "mouseup":
        case "dragend":
          xT = !1, PM(r, h, b);
          break;
        case "selectionchange":
          if (bV)
            break;
        case "keydown":
        case "keyup":
          PM(r, h, b);
      }
    }
    function fw(r, o) {
      var f = {};
      return f[r.toLowerCase()] = o.toLowerCase(), f["Webkit" + r] = "webkit" + o, f["Moz" + r] = "moz" + o, f;
    }
    var Dm = {
      animationend: fw("Animation", "AnimationEnd"),
      animationiteration: fw("Animation", "AnimationIteration"),
      animationstart: fw("Animation", "AnimationStart"),
      transitionend: fw("Transition", "TransitionEnd")
    }, ET = {}, MM = {};
    Re && (MM = document.createElement("div").style, "AnimationEvent" in window || (delete Dm.animationend.animation, delete Dm.animationiteration.animation, delete Dm.animationstart.animation), "TransitionEvent" in window || delete Dm.transitionend.transition);
    function pw(r) {
      if (ET[r])
        return ET[r];
      if (!Dm[r])
        return r;
      var o = Dm[r];
      for (var f in o)
        if (o.hasOwnProperty(f) && f in MM)
          return ET[r] = o[f];
      return r;
    }
    var IM = pw("animationend"), DM = pw("animationiteration"), NM = pw("animationstart"), LM = pw("transitionend"), FM = /* @__PURE__ */ new Map(), _M = ["abort", "auxClick", "cancel", "canPlay", "canPlayThrough", "click", "close", "contextMenu", "copy", "cut", "drag", "dragEnd", "dragEnter", "dragExit", "dragLeave", "dragOver", "dragStart", "drop", "durationChange", "emptied", "encrypted", "ended", "error", "gotPointerCapture", "input", "invalid", "keyDown", "keyPress", "keyUp", "load", "loadedData", "loadedMetadata", "loadStart", "lostPointerCapture", "mouseDown", "mouseMove", "mouseOut", "mouseOver", "mouseUp", "paste", "pause", "play", "playing", "pointerCancel", "pointerDown", "pointerMove", "pointerOut", "pointerOver", "pointerUp", "progress", "rateChange", "reset", "resize", "seeked", "seeking", "stalled", "submit", "suspend", "timeUpdate", "touchCancel", "touchEnd", "touchStart", "volumeChange", "scroll", "toggle", "touchMove", "waiting", "wheel"];
    function Ld(r, o) {
      FM.set(r, o), be(o, [r]);
    }
    function EV() {
      for (var r = 0; r < _M.length; r++) {
        var o = _M[r], f = o.toLowerCase(), h = o[0].toUpperCase() + o.slice(1);
        Ld(f, "on" + h);
      }
      Ld(IM, "onAnimationEnd"), Ld(DM, "onAnimationIteration"), Ld(NM, "onAnimationStart"), Ld("dblclick", "onDoubleClick"), Ld("focusin", "onFocus"), Ld("focusout", "onBlur"), Ld(LM, "onTransitionEnd");
    }
    function TV(r, o, f, h, b, T, N) {
      var V = FM.get(o);
      if (V !== void 0) {
        var Z = As, se = o;
        switch (o) {
          case "keypress":
            if (mu(h) === 0)
              return;
          case "keydown":
          case "keyup":
            Z = nw;
            break;
          case "focusin":
            se = "focus", Z = xl;
            break;
          case "focusout":
            se = "blur", Z = xl;
            break;
          case "beforeblur":
          case "afterblur":
            Z = xl;
            break;
          case "click":
            if (h.button === 2)
              return;
          case "auxclick":
          case "dblclick":
          case "mousedown":
          case "mousemove":
          case "mouseup":
          case "mouseout":
          case "mouseover":
          case "contextmenu":
            Z = fy;
            break;
          case "drag":
          case "dragend":
          case "dragenter":
          case "dragexit":
          case "dragleave":
          case "dragover":
          case "dragstart":
          case "drop":
            Z = Rc;
            break;
          case "touchcancel":
          case "touchend":
          case "touchmove":
          case "touchstart":
            Z = iw;
            break;
          case IM:
          case DM:
          case NM:
            Z = QS;
            break;
          case LM:
            Z = $a;
            break;
          case "scroll":
            Z = Ji;
            break;
          case "wheel":
            Z = vT;
            break;
          case "copy":
          case "cut":
          case "paste":
            Z = xm;
            break;
          case "gotpointercapture":
          case "lostpointercapture":
          case "pointercancel":
          case "pointerdown":
          case "pointermove":
          case "pointerout":
          case "pointerover":
          case "pointerup":
            Z = rw;
            break;
        }
        var le = (T & Pa) !== 0;
        {
          var Te = !le && // TODO: ideally, we'd eventually add all events from
          // nonDelegatedEvents list in DOMPluginEventSystem.
          // Then we can remove this special list.
          // This is a breaking change that can wait until React 18.
          o === "scroll", xe = PV(f, V, h.type, le, Te);
          if (xe.length > 0) {
            var Ae = new Z(V, se, null, h, b);
            r.push({
              event: Ae,
              listeners: xe
            });
          }
        }
      }
    }
    EV(), Pe(), Tp(), CV(), yT();
    function RV(r, o, f, h, b, T, N) {
      TV(r, o, f, h, b, T);
      var V = (T & Fv) === 0;
      V && (Ee(r, o, f, h, b), fo(r, o, f, h, b), xV(r, o, f, h, b), uw(r, o, f, h, b));
    }
    var xy = ["abort", "canplay", "canplaythrough", "durationchange", "emptied", "encrypted", "ended", "error", "loadeddata", "loadedmetadata", "loadstart", "pause", "play", "playing", "progress", "ratechange", "resize", "seeked", "seeking", "stalled", "suspend", "timeupdate", "volumechange", "waiting"], TT = new Set(["cancel", "close", "invalid", "load", "scroll", "toggle"].concat(xy));
    function AM(r, o, f) {
      var h = r.type || "unknown-event";
      r.currentTarget = f, Os(h, o, void 0, r), r.currentTarget = null;
    }
    function OV(r, o, f) {
      var h;
      if (f)
        for (var b = o.length - 1; b >= 0; b--) {
          var T = o[b], N = T.instance, V = T.currentTarget, Z = T.listener;
          if (N !== h && r.isPropagationStopped())
            return;
          AM(r, Z, V), h = N;
        }
      else
        for (var se = 0; se < o.length; se++) {
          var le = o[se], Te = le.instance, xe = le.currentTarget, Ae = le.listener;
          if (Te !== h && r.isPropagationStopped())
            return;
          AM(r, Ae, xe), h = Te;
        }
    }
    function $M(r, o) {
      for (var f = (o & Pa) !== 0, h = 0; h < r.length; h++) {
        var b = r[h], T = b.event, N = b.listeners;
        OV(T, N, f);
      }
      Uf();
    }
    function kV(r, o, f, h, b) {
      var T = _v(f), N = [];
      RV(N, r, h, f, T, o), $M(N, o);
    }
    function eo(r, o) {
      TT.has(r) || d('Did not expect a listenToNonDelegatedEvent() call for "%s". This is a bug in React. Please file an issue.', r);
      var f = !1, h = oU(o), b = DV(r);
      h.has(b) || (jM(o, r, Ih, f), h.add(b));
    }
    function RT(r, o, f) {
      TT.has(r) && !o && d('Did not expect a listenToNativeEvent() call for "%s" in the bubble phase. This is a bug in React. Please file an issue.', r);
      var h = 0;
      o && (h |= Pa), jM(f, r, h, o);
    }
    var hw = "_reactListening" + Math.random().toString(36).slice(2);
    function Ey(r) {
      if (!r[hw]) {
        r[hw] = !0, ge.forEach(function(f) {
          f !== "selectionchange" && (TT.has(f) || RT(f, !1, r), RT(f, !0, r));
        });
        var o = r.nodeType === hl ? r : r.ownerDocument;
        o !== null && (o[hw] || (o[hw] = !0, RT("selectionchange", !1, o)));
      }
    }
    function jM(r, o, f, h, b) {
      var T = Qo(r, o, f), N = void 0;
      Bf && (o === "touchstart" || o === "touchmove" || o === "wheel") && (N = !0), r = r, h ? N !== void 0 ? dy(r, o, T, N) : Qi(r, o, T) : N !== void 0 ? Md(r, o, T, N) : bp(r, o, T);
    }
    function zM(r, o) {
      return r === o || r.nodeType === go && r.parentNode === o;
    }
    function OT(r, o, f, h, b) {
      var T = h;
      if (!(o & Lv) && !(o & Ih)) {
        var N = b;
        if (h !== null) {
          var V = h;
          e: for (; ; ) {
            if (V === null)
              return;
            var Z = V.tag;
            if (Z === C || Z === S) {
              var se = V.stateNode.containerInfo;
              if (zM(se, N))
                break;
              if (Z === S)
                for (var le = V.return; le !== null; ) {
                  var Te = le.tag;
                  if (Te === C || Te === S) {
                    var xe = le.stateNode.containerInfo;
                    if (zM(xe, N))
                      return;
                  }
                  le = le.return;
                }
              for (; se !== null; ) {
                var Ae = kp(se);
                if (Ae === null)
                  return;
                var ze = Ae.tag;
                if (ze === R || ze === O) {
                  V = T = Ae;
                  continue e;
                }
                se = se.parentNode;
              }
            }
            V = V.return;
          }
        }
      }
      wS(function() {
        return kV(r, o, f, T);
      });
    }
    function Ty(r, o, f) {
      return {
        instance: r,
        listener: o,
        currentTarget: f
      };
    }
    function PV(r, o, f, h, b, T) {
      for (var N = o !== null ? o + "Capture" : null, V = h ? N : o, Z = [], se = r, le = null; se !== null; ) {
        var Te = se, xe = Te.stateNode, Ae = Te.tag;
        if (Ae === R && xe !== null && (le = xe, V !== null)) {
          var ze = nu(se, V);
          ze != null && Z.push(Ty(se, ze, le));
        }
        if (b)
          break;
        se = se.return;
      }
      return Z;
    }
    function mw(r, o) {
      for (var f = o + "Capture", h = [], b = r; b !== null; ) {
        var T = b, N = T.stateNode, V = T.tag;
        if (V === R && N !== null) {
          var Z = N, se = nu(b, f);
          se != null && h.unshift(Ty(b, se, Z));
          var le = nu(b, o);
          le != null && h.push(Ty(b, le, Z));
        }
        b = b.return;
      }
      return h;
    }
    function Nm(r) {
      if (r === null)
        return null;
      do
        r = r.return;
      while (r && r.tag !== R);
      return r || null;
    }
    function MV(r, o) {
      for (var f = r, h = o, b = 0, T = f; T; T = Nm(T))
        b++;
      for (var N = 0, V = h; V; V = Nm(V))
        N++;
      for (; b - N > 0; )
        f = Nm(f), b--;
      for (; N - b > 0; )
        h = Nm(h), N--;
      for (var Z = b; Z--; ) {
        if (f === h || h !== null && f === h.alternate)
          return f;
        f = Nm(f), h = Nm(h);
      }
      return null;
    }
    function HM(r, o, f, h, b) {
      for (var T = o._reactName, N = [], V = f; V !== null && V !== h; ) {
        var Z = V, se = Z.alternate, le = Z.stateNode, Te = Z.tag;
        if (se !== null && se === h)
          break;
        if (Te === R && le !== null) {
          var xe = le;
          if (b) {
            var Ae = nu(V, T);
            Ae != null && N.unshift(Ty(V, Ae, xe));
          } else if (!b) {
            var ze = nu(V, T);
            ze != null && N.push(Ty(V, ze, xe));
          }
        }
        V = V.return;
      }
      N.length !== 0 && r.push({
        event: o,
        listeners: N
      });
    }
    function IV(r, o, f, h, b) {
      var T = h && b ? MV(h, b) : null;
      h !== null && HM(r, o, h, T, !1), b !== null && f !== null && HM(r, f, b, T, !0);
    }
    function DV(r, o) {
      return r + "__bubble";
    }
    var ja = !1, Ry = "dangerouslySetInnerHTML", gw = "suppressContentEditableWarning", Fd = "suppressHydrationWarning", VM = "autoFocus", Rp = "children", Op = "style", vw = "__html", kT, yw, Oy, BM, bw, UM, GM;
    kT = {
      // There are working polyfills for <dialog>. Let people use it.
      dialog: !0,
      // Electron ships a custom <webview> tag to display external web content in
      // an isolated frame and process.
      // This tag is not present in non Electron environments such as JSDom which
      // is often used for testing purposes.
      // @see https://electronjs.org/docs/api/webview-tag
      webview: !0
    }, yw = function(r, o) {
      Iv(r, o), Ph(r, o), bS(r, o, {
        registrationNameDependencies: de,
        possibleRegistrationNames: pe
      });
    }, UM = Re && !document.documentMode, Oy = function(r, o, f) {
      if (!ja) {
        var h = Cw(f), b = Cw(o);
        b !== h && (ja = !0, d("Prop `%s` did not match. Server: %s Client: %s", r, JSON.stringify(b), JSON.stringify(h)));
      }
    }, BM = function(r) {
      if (!ja) {
        ja = !0;
        var o = [];
        r.forEach(function(f) {
          o.push(f);
        }), d("Extra attributes from the server: %s", o);
      }
    }, bw = function(r, o) {
      o === !1 ? d("Expected `%s` listener to be a function, instead got `false`.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.", r, r, r) : d("Expected `%s` listener to be a function, instead got a value of `%s` type.", r, typeof o);
    }, GM = function(r, o) {
      var f = r.namespaceURI === fl ? r.ownerDocument.createElement(r.tagName) : r.ownerDocument.createElementNS(r.namespaceURI, r.tagName);
      return f.innerHTML = o, f.innerHTML;
    };
    var NV = /\r\n?/g, LV = /\u0000|\uFFFD/g;
    function Cw(r) {
      wt(r);
      var o = typeof r == "string" ? r : "" + r;
      return o.replace(NV, `
`).replace(LV, "");
    }
    function Sw(r, o, f, h) {
      var b = Cw(o), T = Cw(r);
      if (T !== b && (h && (ja || (ja = !0, d('Text content did not match. Server: "%s" Client: "%s"', T, b))), f && Y))
        throw new Error("Text content does not match server-rendered HTML.");
    }
    function WM(r) {
      return r.nodeType === hl ? r : r.ownerDocument;
    }
    function FV() {
    }
    function ww(r) {
      r.onclick = FV;
    }
    function _V(r, o, f, h, b) {
      for (var T in h)
        if (h.hasOwnProperty(T)) {
          var N = h[T];
          if (T === Op)
            N && Object.freeze(N), pS(o, N);
          else if (T === Ry) {
            var V = N ? N[vw] : void 0;
            V != null && tS(o, V);
          } else if (T === Rp)
            if (typeof N == "string") {
              var Z = r !== "textarea" || N !== "";
              Z && fd(o, N);
            } else typeof N == "number" && fd(o, "" + N);
          else T === gw || T === Fd || T === VM || (de.hasOwnProperty(T) ? N != null && (typeof N != "function" && bw(T, N), T === "onScroll" && eo("scroll", o)) : N != null && St(o, T, N, b));
        }
    }
    function AV(r, o, f, h) {
      for (var b = 0; b < o.length; b += 2) {
        var T = o[b], N = o[b + 1];
        T === Op ? pS(r, N) : T === Ry ? tS(r, N) : T === Rp ? fd(r, N) : St(r, T, N, h);
      }
    }
    function $V(r, o, f, h) {
      var b, T = WM(f), N, V = h;
      if (V === fl && (V = Ev(r)), V === fl) {
        if (b = eu(r, o), !b && r !== r.toLowerCase() && d("<%s /> is using incorrect casing. Use PascalCase for React components, or lowercase for HTML elements.", r), r === "script") {
          var Z = T.createElement("div");
          Z.innerHTML = "<script><\/script>";
          var se = Z.firstChild;
          N = Z.removeChild(se);
        } else if (typeof o.is == "string")
          N = T.createElement(r, {
            is: o.is
          });
        else if (N = T.createElement(r), r === "select") {
          var le = N;
          o.multiple ? le.multiple = !0 : o.size && (le.size = o.size);
        }
      } else
        N = T.createElementNS(V, r);
      return V === fl && !b && Object.prototype.toString.call(N) === "[object HTMLUnknownElement]" && !ue.call(kT, r) && (kT[r] = !0, d("The tag <%s> is unrecognized in this browser. If you meant to render a React component, start its name with an uppercase letter.", r)), N;
    }
    function jV(r, o) {
      return WM(o).createTextNode(r);
    }
    function zV(r, o, f, h) {
      var b = eu(o, f);
      yw(o, f);
      var T;
      switch (o) {
        case "dialog":
          eo("cancel", r), eo("close", r), T = f;
          break;
        case "iframe":
        case "object":
        case "embed":
          eo("load", r), T = f;
          break;
        case "video":
        case "audio":
          for (var N = 0; N < xy.length; N++)
            eo(xy[N], r);
          T = f;
          break;
        case "source":
          eo("error", r), T = f;
          break;
        case "img":
        case "image":
        case "link":
          eo("error", r), eo("load", r), T = f;
          break;
        case "details":
          eo("toggle", r), T = f;
          break;
        case "input":
          Za(r, f), T = dd(r, f), eo("invalid", r);
          break;
        case "option":
          er(r, f), T = f;
          break;
        case "select":
          nc(r, f), T = Lf(r, f), eo("invalid", r);
          break;
        case "textarea":
          Sv(r, f), T = Cv(r, f), eo("invalid", r);
          break;
        default:
          T = f;
      }
      switch (Oh(o, T), _V(o, r, h, T, b), o) {
        case "input":
          Ja(r), $e(r, f, !1);
          break;
        case "textarea":
          Ja(r), ZC(r);
          break;
        case "option":
          $r(r, f);
          break;
        case "select":
          yv(r, f);
          break;
        default:
          typeof T.onClick == "function" && ww(r);
          break;
      }
    }
    function HV(r, o, f, h, b) {
      yw(o, h);
      var T = null, N, V;
      switch (o) {
        case "input":
          N = dd(r, f), V = dd(r, h), T = [];
          break;
        case "select":
          N = Lf(r, f), V = Lf(r, h), T = [];
          break;
        case "textarea":
          N = Cv(r, f), V = Cv(r, h), T = [];
          break;
        default:
          N = f, V = h, typeof N.onClick != "function" && typeof V.onClick == "function" && ww(r);
          break;
      }
      Oh(o, V);
      var Z, se, le = null;
      for (Z in N)
        if (!(V.hasOwnProperty(Z) || !N.hasOwnProperty(Z) || N[Z] == null))
          if (Z === Op) {
            var Te = N[Z];
            for (se in Te)
              Te.hasOwnProperty(se) && (le || (le = {}), le[se] = "");
          } else Z === Ry || Z === Rp || Z === gw || Z === Fd || Z === VM || (de.hasOwnProperty(Z) ? T || (T = []) : (T = T || []).push(Z, null));
      for (Z in V) {
        var xe = V[Z], Ae = N != null ? N[Z] : void 0;
        if (!(!V.hasOwnProperty(Z) || xe === Ae || xe == null && Ae == null))
          if (Z === Op)
            if (xe && Object.freeze(xe), Ae) {
              for (se in Ae)
                Ae.hasOwnProperty(se) && (!xe || !xe.hasOwnProperty(se)) && (le || (le = {}), le[se] = "");
              for (se in xe)
                xe.hasOwnProperty(se) && Ae[se] !== xe[se] && (le || (le = {}), le[se] = xe[se]);
            } else
              le || (T || (T = []), T.push(Z, le)), le = xe;
          else if (Z === Ry) {
            var ze = xe ? xe[vw] : void 0, qe = Ae ? Ae[vw] : void 0;
            ze != null && qe !== ze && (T = T || []).push(Z, ze);
          } else Z === Rp ? (typeof xe == "string" || typeof xe == "number") && (T = T || []).push(Z, "" + xe) : Z === gw || Z === Fd || (de.hasOwnProperty(Z) ? (xe != null && (typeof xe != "function" && bw(Z, xe), Z === "onScroll" && eo("scroll", r)), !T && Ae !== xe && (T = [])) : (T = T || []).push(Z, xe));
      }
      return le && (tT(le, V[Op]), (T = T || []).push(Op, le)), T;
    }
    function VV(r, o, f, h, b) {
      f === "input" && b.type === "radio" && b.name != null && te(r, b);
      var T = eu(f, h), N = eu(f, b);
      switch (AV(r, o, T, N), f) {
        case "input":
          ye(r, b);
          break;
        case "textarea":
          JC(r, b);
          break;
        case "select":
          Eh(r, b);
          break;
      }
    }
    function BV(r) {
      {
        var o = r.toLowerCase();
        return jf.hasOwnProperty(o) && jf[o] || null;
      }
    }
    function UV(r, o, f, h, b, T, N) {
      var V, Z;
      switch (V = eu(o, f), yw(o, f), o) {
        case "dialog":
          eo("cancel", r), eo("close", r);
          break;
        case "iframe":
        case "object":
        case "embed":
          eo("load", r);
          break;
        case "video":
        case "audio":
          for (var se = 0; se < xy.length; se++)
            eo(xy[se], r);
          break;
        case "source":
          eo("error", r);
          break;
        case "img":
        case "image":
        case "link":
          eo("error", r), eo("load", r);
          break;
        case "details":
          eo("toggle", r);
          break;
        case "input":
          Za(r, f), eo("invalid", r);
          break;
        case "option":
          er(r, f);
          break;
        case "select":
          nc(r, f), eo("invalid", r);
          break;
        case "textarea":
          Sv(r, f), eo("invalid", r);
          break;
      }
      Oh(o, f);
      {
        Z = /* @__PURE__ */ new Set();
        for (var le = r.attributes, Te = 0; Te < le.length; Te++) {
          var xe = le[Te].name.toLowerCase();
          switch (xe) {
            case "value":
              break;
            case "checked":
              break;
            case "selected":
              break;
            default:
              Z.add(le[Te].name);
          }
        }
      }
      var Ae = null;
      for (var ze in f)
        if (f.hasOwnProperty(ze)) {
          var qe = f[ze];
          if (ze === Rp)
            typeof qe == "string" ? r.textContent !== qe && (f[Fd] !== !0 && Sw(r.textContent, qe, T, N), Ae = [Rp, qe]) : typeof qe == "number" && r.textContent !== "" + qe && (f[Fd] !== !0 && Sw(r.textContent, qe, T, N), Ae = [Rp, "" + qe]);
          else if (de.hasOwnProperty(ze))
            qe != null && (typeof qe != "function" && bw(ze, qe), ze === "onScroll" && eo("scroll", r));
          else if (N && // Convince Flow we've calculated it (it's DEV-only in this method.)
          typeof V == "boolean") {
            var Dt = void 0, ln = At(ze);
            if (f[Fd] !== !0) {
              if (!(ze === gw || ze === Fd || // Controlled attributes are not validated
              // TODO: Only ignore them on controlled tags.
              ze === "value" || ze === "checked" || ze === "selected")) {
                if (ze === Ry) {
                  var Jt = r.innerHTML, Qn = qe ? qe[vw] : void 0;
                  if (Qn != null) {
                    var Un = GM(r, Qn);
                    Un !== Jt && Oy(ze, Jt, Un);
                  }
                } else if (ze === Op) {
                  if (Z.delete(ze), UM) {
                    var Ie = ZE(qe);
                    Dt = r.getAttribute("style"), Ie !== Dt && Oy(ze, Dt, Ie);
                  }
                } else if (V && !j)
                  Z.delete(ze.toLowerCase()), Dt = Ct(r, ze, qe), qe !== Dt && Oy(ze, Dt, qe);
                else if (!bt(ze, ln, V) && !Et(ze, qe, ln, V)) {
                  var Ke = !1;
                  if (ln !== null)
                    Z.delete(ln.attributeName), Dt = fr(r, ze, qe, ln);
                  else {
                    var De = h;
                    if (De === fl && (De = Ev(o)), De === fl)
                      Z.delete(ze.toLowerCase());
                    else {
                      var ft = BV(ze);
                      ft !== null && ft !== ze && (Ke = !0, Z.delete(ft)), Z.delete(ze);
                    }
                    Dt = Ct(r, ze, qe);
                  }
                  var $t = j;
                  !$t && qe !== Dt && !Ke && Oy(ze, Dt, qe);
                }
              }
            }
          }
        }
      switch (N && // $FlowFixMe - Should be inferred as not undefined.
      Z.size > 0 && f[Fd] !== !0 && BM(Z), o) {
        case "input":
          Ja(r), $e(r, f, !0);
          break;
        case "textarea":
          Ja(r), ZC(r);
          break;
        case "select":
        case "option":
          break;
        default:
          typeof f.onClick == "function" && ww(r);
          break;
      }
      return Ae;
    }
    function GV(r, o, f) {
      var h = r.nodeValue !== o;
      return h;
    }
    function PT(r, o) {
      {
        if (ja)
          return;
        ja = !0, d("Did not expect server HTML to contain a <%s> in <%s>.", o.nodeName.toLowerCase(), r.nodeName.toLowerCase());
      }
    }
    function MT(r, o) {
      {
        if (ja)
          return;
        ja = !0, d('Did not expect server HTML to contain the text node "%s" in <%s>.', o.nodeValue, r.nodeName.toLowerCase());
      }
    }
    function IT(r, o, f) {
      {
        if (ja)
          return;
        ja = !0, d("Expected server HTML to contain a matching <%s> in <%s>.", o, r.nodeName.toLowerCase());
      }
    }
    function DT(r, o) {
      {
        if (o === "" || ja)
          return;
        ja = !0, d('Expected server HTML to contain a matching text node for "%s" in <%s>.', o, r.nodeName.toLowerCase());
      }
    }
    function WV(r, o, f) {
      switch (o) {
        case "input":
          Ve(r, f);
          return;
        case "textarea":
          YE(r, f);
          return;
        case "select":
          bv(r, f);
          return;
      }
    }
    var ky = function() {
    }, Py = function() {
    };
    {
      var qV = ["address", "applet", "area", "article", "aside", "base", "basefont", "bgsound", "blockquote", "body", "br", "button", "caption", "center", "col", "colgroup", "dd", "details", "dir", "div", "dl", "dt", "embed", "fieldset", "figcaption", "figure", "footer", "form", "frame", "frameset", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "iframe", "img", "input", "isindex", "li", "link", "listing", "main", "marquee", "menu", "menuitem", "meta", "nav", "noembed", "noframes", "noscript", "object", "ol", "p", "param", "plaintext", "pre", "script", "section", "select", "source", "style", "summary", "table", "tbody", "td", "template", "textarea", "tfoot", "th", "thead", "title", "tr", "track", "ul", "wbr", "xmp"], qM = [
        "applet",
        "caption",
        "html",
        "table",
        "td",
        "th",
        "marquee",
        "object",
        "template",
        // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
        // TODO: Distinguish by namespace here -- for <title>, including it here
        // errs on the side of fewer warnings
        "foreignObject",
        "desc",
        "title"
      ], KV = qM.concat(["button"]), YV = ["dd", "dt", "li", "option", "optgroup", "p", "rp", "rt"], KM = {
        current: null,
        formTag: null,
        aTagInScope: null,
        buttonTagInScope: null,
        nobrTagInScope: null,
        pTagInButtonScope: null,
        listItemTagAutoclosing: null,
        dlItemTagAutoclosing: null
      };
      Py = function(r, o) {
        var f = Rn({}, r || KM), h = {
          tag: o
        };
        return qM.indexOf(o) !== -1 && (f.aTagInScope = null, f.buttonTagInScope = null, f.nobrTagInScope = null), KV.indexOf(o) !== -1 && (f.pTagInButtonScope = null), qV.indexOf(o) !== -1 && o !== "address" && o !== "div" && o !== "p" && (f.listItemTagAutoclosing = null, f.dlItemTagAutoclosing = null), f.current = h, o === "form" && (f.formTag = h), o === "a" && (f.aTagInScope = h), o === "button" && (f.buttonTagInScope = h), o === "nobr" && (f.nobrTagInScope = h), o === "p" && (f.pTagInButtonScope = h), o === "li" && (f.listItemTagAutoclosing = h), (o === "dd" || o === "dt") && (f.dlItemTagAutoclosing = h), f;
      };
      var XV = function(r, o) {
        switch (o) {
          case "select":
            return r === "option" || r === "optgroup" || r === "#text";
          case "optgroup":
            return r === "option" || r === "#text";
          case "option":
            return r === "#text";
          case "tr":
            return r === "th" || r === "td" || r === "style" || r === "script" || r === "template";
          case "tbody":
          case "thead":
          case "tfoot":
            return r === "tr" || r === "style" || r === "script" || r === "template";
          case "colgroup":
            return r === "col" || r === "template";
          case "table":
            return r === "caption" || r === "colgroup" || r === "tbody" || r === "tfoot" || r === "thead" || r === "style" || r === "script" || r === "template";
          case "head":
            return r === "base" || r === "basefont" || r === "bgsound" || r === "link" || r === "meta" || r === "title" || r === "noscript" || r === "noframes" || r === "style" || r === "script" || r === "template";
          case "html":
            return r === "head" || r === "body" || r === "frameset";
          case "frameset":
            return r === "frame";
          case "#document":
            return r === "html";
        }
        switch (r) {
          case "h1":
          case "h2":
          case "h3":
          case "h4":
          case "h5":
          case "h6":
            return o !== "h1" && o !== "h2" && o !== "h3" && o !== "h4" && o !== "h5" && o !== "h6";
          case "rp":
          case "rt":
            return YV.indexOf(o) === -1;
          case "body":
          case "caption":
          case "col":
          case "colgroup":
          case "frameset":
          case "frame":
          case "head":
          case "html":
          case "tbody":
          case "td":
          case "tfoot":
          case "th":
          case "thead":
          case "tr":
            return o == null;
        }
        return !0;
      }, QV = function(r, o) {
        switch (r) {
          case "address":
          case "article":
          case "aside":
          case "blockquote":
          case "center":
          case "details":
          case "dialog":
          case "dir":
          case "div":
          case "dl":
          case "fieldset":
          case "figcaption":
          case "figure":
          case "footer":
          case "header":
          case "hgroup":
          case "main":
          case "menu":
          case "nav":
          case "ol":
          case "p":
          case "section":
          case "summary":
          case "ul":
          case "pre":
          case "listing":
          case "table":
          case "hr":
          case "xmp":
          case "h1":
          case "h2":
          case "h3":
          case "h4":
          case "h5":
          case "h6":
            return o.pTagInButtonScope;
          case "form":
            return o.formTag || o.pTagInButtonScope;
          case "li":
            return o.listItemTagAutoclosing;
          case "dd":
          case "dt":
            return o.dlItemTagAutoclosing;
          case "button":
            return o.buttonTagInScope;
          case "a":
            return o.aTagInScope;
          case "nobr":
            return o.nobrTagInScope;
        }
        return null;
      }, YM = {};
      ky = function(r, o, f) {
        f = f || KM;
        var h = f.current, b = h && h.tag;
        o != null && (r != null && d("validateDOMNesting: when childText is passed, childTag should be null"), r = "#text");
        var T = XV(r, b) ? null : h, N = T ? null : QV(r, f), V = T || N;
        if (V) {
          var Z = V.tag, se = !!T + "|" + r + "|" + Z;
          if (!YM[se]) {
            YM[se] = !0;
            var le = r, Te = "";
            if (r === "#text" ? /\S/.test(o) ? le = "Text nodes" : (le = "Whitespace text nodes", Te = " Make sure you don't have any extra whitespace between tags on each line of your source code.") : le = "<" + r + ">", T) {
              var xe = "";
              Z === "table" && r === "tr" && (xe += " Add a <tbody>, <thead> or <tfoot> to your code to match the DOM tree generated by the browser."), d("validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s", le, Z, Te, xe);
            } else
              d("validateDOMNesting(...): %s cannot appear as a descendant of <%s>.", le, Z);
          }
        }
      };
    }
    var xw = "suppressHydrationWarning", Ew = "$", Tw = "/$", My = "$?", Iy = "$!", JV = "style", NT = null, LT = null;
    function ZV(r) {
      var o, f, h = r.nodeType;
      switch (h) {
        case hl:
        case Rv: {
          o = h === hl ? "#document" : "#fragment";
          var b = r.documentElement;
          f = b ? b.namespaceURI : Tv(null, "");
          break;
        }
        default: {
          var T = h === go ? r.parentNode : r, N = T.namespaceURI || null;
          o = T.tagName, f = Tv(N, o);
          break;
        }
      }
      {
        var V = o.toLowerCase(), Z = Py(null, V);
        return {
          namespace: f,
          ancestorInfo: Z
        };
      }
    }
    function eB(r, o, f) {
      {
        var h = r, b = Tv(h.namespace, o), T = Py(h.ancestorInfo, o);
        return {
          namespace: b,
          ancestorInfo: T
        };
      }
    }
    function ice(r) {
      return r;
    }
    function tB(r) {
      NT = wo(), LT = mV();
      var o = null;
      return Fo(!1), o;
    }
    function nB(r) {
      gV(LT), Fo(NT), NT = null, LT = null;
    }
    function rB(r, o, f, h, b) {
      var T;
      {
        var N = h;
        if (ky(r, null, N.ancestorInfo), typeof o.children == "string" || typeof o.children == "number") {
          var V = "" + o.children, Z = Py(N.ancestorInfo, r);
          ky(null, V, Z);
        }
        T = N.namespace;
      }
      var se = $V(r, o, f, T);
      return Ly(b, se), VT(se, o), se;
    }
    function oB(r, o) {
      r.appendChild(o);
    }
    function iB(r, o, f, h, b) {
      switch (zV(r, o, f, h), o) {
        case "button":
        case "input":
        case "select":
        case "textarea":
          return !!f.autoFocus;
        case "img":
          return !0;
        default:
          return !1;
      }
    }
    function aB(r, o, f, h, b, T) {
      {
        var N = T;
        if (typeof h.children != typeof f.children && (typeof h.children == "string" || typeof h.children == "number")) {
          var V = "" + h.children, Z = Py(N.ancestorInfo, o);
          ky(null, V, Z);
        }
      }
      return HV(r, o, f, h);
    }
    function FT(r, o) {
      return r === "textarea" || r === "noscript" || typeof o.children == "string" || typeof o.children == "number" || typeof o.dangerouslySetInnerHTML == "object" && o.dangerouslySetInnerHTML !== null && o.dangerouslySetInnerHTML.__html != null;
    }
    function sB(r, o, f, h) {
      {
        var b = f;
        ky(null, r, b.ancestorInfo);
      }
      var T = jV(r, o);
      return Ly(h, T), T;
    }
    function lB() {
      var r = window.event;
      return r === void 0 ? Fa : Cm(r.type);
    }
    var _T = typeof setTimeout == "function" ? setTimeout : void 0, uB = typeof clearTimeout == "function" ? clearTimeout : void 0, AT = -1, XM = typeof Promise == "function" ? Promise : void 0, cB = typeof queueMicrotask == "function" ? queueMicrotask : typeof XM < "u" ? function(r) {
      return XM.resolve(null).then(r).catch(dB);
    } : _T;
    function dB(r) {
      setTimeout(function() {
        throw r;
      });
    }
    function fB(r, o, f, h) {
      switch (o) {
        case "button":
        case "input":
        case "select":
        case "textarea":
          f.autoFocus && r.focus();
          return;
        case "img": {
          f.src && (r.src = f.src);
          return;
        }
      }
    }
    function pB(r, o, f, h, b, T) {
      VV(r, o, f, h, b), VT(r, b);
    }
    function QM(r) {
      fd(r, "");
    }
    function hB(r, o, f) {
      r.nodeValue = f;
    }
    function mB(r, o) {
      r.appendChild(o);
    }
    function gB(r, o) {
      var f;
      r.nodeType === go ? (f = r.parentNode, f.insertBefore(o, r)) : (f = r, f.appendChild(o));
      var h = r._reactRootContainer;
      h == null && f.onclick === null && ww(f);
    }
    function vB(r, o, f) {
      r.insertBefore(o, f);
    }
    function yB(r, o, f) {
      r.nodeType === go ? r.parentNode.insertBefore(o, f) : r.insertBefore(o, f);
    }
    function bB(r, o) {
      r.removeChild(o);
    }
    function CB(r, o) {
      r.nodeType === go ? r.parentNode.removeChild(o) : r.removeChild(o);
    }
    function $T(r, o) {
      var f = o, h = 0;
      do {
        var b = f.nextSibling;
        if (r.removeChild(f), b && b.nodeType === go) {
          var T = b.data;
          if (T === Tw)
            if (h === 0) {
              r.removeChild(b), xc(o);
              return;
            } else
              h--;
          else (T === Ew || T === My || T === Iy) && h++;
        }
        f = b;
      } while (f);
      xc(o);
    }
    function SB(r, o) {
      r.nodeType === go ? $T(r.parentNode, o) : r.nodeType === Vi && $T(r, o), xc(r);
    }
    function wB(r) {
      r = r;
      var o = r.style;
      typeof o.setProperty == "function" ? o.setProperty("display", "none", "important") : o.display = "none";
    }
    function xB(r) {
      r.nodeValue = "";
    }
    function EB(r, o) {
      r = r;
      var f = o[JV], h = f != null && f.hasOwnProperty("display") ? f.display : null;
      r.style.display = Rh("display", h);
    }
    function TB(r, o) {
      r.nodeValue = o;
    }
    function RB(r) {
      r.nodeType === Vi ? r.textContent = "" : r.nodeType === hl && r.documentElement && r.removeChild(r.documentElement);
    }
    function OB(r, o, f) {
      return r.nodeType !== Vi || o.toLowerCase() !== r.nodeName.toLowerCase() ? null : r;
    }
    function kB(r, o) {
      return o === "" || r.nodeType !== pl ? null : r;
    }
    function PB(r) {
      return r.nodeType !== go ? null : r;
    }
    function JM(r) {
      return r.data === My;
    }
    function jT(r) {
      return r.data === Iy;
    }
    function MB(r) {
      var o = r.nextSibling && r.nextSibling.dataset, f, h, b;
      return o && (f = o.dgst, h = o.msg, b = o.stck), {
        message: h,
        digest: f,
        stack: b
      };
    }
    function IB(r, o) {
      r._reactRetry = o;
    }
    function Rw(r) {
      for (; r != null; r = r.nextSibling) {
        var o = r.nodeType;
        if (o === Vi || o === pl)
          break;
        if (o === go) {
          var f = r.data;
          if (f === Ew || f === Iy || f === My)
            break;
          if (f === Tw)
            return null;
        }
      }
      return r;
    }
    function Dy(r) {
      return Rw(r.nextSibling);
    }
    function DB(r) {
      return Rw(r.firstChild);
    }
    function NB(r) {
      return Rw(r.firstChild);
    }
    function LB(r) {
      return Rw(r.nextSibling);
    }
    function FB(r, o, f, h, b, T, N) {
      Ly(T, r), VT(r, f);
      var V;
      {
        var Z = b;
        V = Z.namespace;
      }
      var se = (T.mode & Ln) !== nn;
      return UV(r, o, f, V, h, se, N);
    }
    function _B(r, o, f, h) {
      return Ly(f, r), f.mode & Ln, GV(r, o);
    }
    function AB(r, o) {
      Ly(o, r);
    }
    function $B(r) {
      for (var o = r.nextSibling, f = 0; o; ) {
        if (o.nodeType === go) {
          var h = o.data;
          if (h === Tw) {
            if (f === 0)
              return Dy(o);
            f--;
          } else (h === Ew || h === Iy || h === My) && f++;
        }
        o = o.nextSibling;
      }
      return null;
    }
    function ZM(r) {
      for (var o = r.previousSibling, f = 0; o; ) {
        if (o.nodeType === go) {
          var h = o.data;
          if (h === Ew || h === Iy || h === My) {
            if (f === 0)
              return o;
            f--;
          } else h === Tw && f++;
        }
        o = o.previousSibling;
      }
      return null;
    }
    function jB(r) {
      xc(r);
    }
    function zB(r) {
      xc(r);
    }
    function HB(r) {
      return r !== "head" && r !== "body";
    }
    function VB(r, o, f, h) {
      var b = !0;
      Sw(o.nodeValue, f, h, b);
    }
    function BB(r, o, f, h, b, T) {
      if (o[xw] !== !0) {
        var N = !0;
        Sw(h.nodeValue, b, T, N);
      }
    }
    function UB(r, o) {
      o.nodeType === Vi ? PT(r, o) : o.nodeType === go || MT(r, o);
    }
    function GB(r, o) {
      {
        var f = r.parentNode;
        f !== null && (o.nodeType === Vi ? PT(f, o) : o.nodeType === go || MT(f, o));
      }
    }
    function WB(r, o, f, h, b) {
      (b || o[xw] !== !0) && (h.nodeType === Vi ? PT(f, h) : h.nodeType === go || MT(f, h));
    }
    function qB(r, o, f) {
      IT(r, o);
    }
    function KB(r, o) {
      DT(r, o);
    }
    function YB(r, o, f) {
      {
        var h = r.parentNode;
        h !== null && IT(h, o);
      }
    }
    function XB(r, o) {
      {
        var f = r.parentNode;
        f !== null && DT(f, o);
      }
    }
    function QB(r, o, f, h, b, T) {
      (T || o[xw] !== !0) && IT(f, h);
    }
    function JB(r, o, f, h, b) {
      (b || o[xw] !== !0) && DT(f, h);
    }
    function ZB(r) {
      d("An error occurred during hydration. The server HTML was replaced with client content in <%s>.", r.nodeName.toLowerCase());
    }
    function eU(r) {
      Ey(r);
    }
    var Lm = Math.random().toString(36).slice(2), Fm = "__reactFiber$" + Lm, zT = "__reactProps$" + Lm, Ny = "__reactContainer$" + Lm, HT = "__reactEvents$" + Lm, tU = "__reactListeners$" + Lm, nU = "__reactHandles$" + Lm;
    function rU(r) {
      delete r[Fm], delete r[zT], delete r[HT], delete r[tU], delete r[nU];
    }
    function Ly(r, o) {
      o[Fm] = r;
    }
    function Ow(r, o) {
      o[Ny] = r;
    }
    function eI(r) {
      r[Ny] = null;
    }
    function Fy(r) {
      return !!r[Ny];
    }
    function kp(r) {
      var o = r[Fm];
      if (o)
        return o;
      for (var f = r.parentNode; f; ) {
        if (o = f[Ny] || f[Fm], o) {
          var h = o.alternate;
          if (o.child !== null || h !== null && h.child !== null)
            for (var b = ZM(r); b !== null; ) {
              var T = b[Fm];
              if (T)
                return T;
              b = ZM(b);
            }
          return o;
        }
        r = f, f = r.parentNode;
      }
      return null;
    }
    function _d(r) {
      var o = r[Fm] || r[Ny];
      return o && (o.tag === R || o.tag === O || o.tag === D || o.tag === C) ? o : null;
    }
    function _m(r) {
      if (r.tag === R || r.tag === O)
        return r.stateNode;
      throw new Error("getNodeFromInstance: Invalid argument.");
    }
    function kw(r) {
      return r[zT] || null;
    }
    function VT(r, o) {
      r[zT] = o;
    }
    function oU(r) {
      var o = r[HT];
      return o === void 0 && (o = r[HT] = /* @__PURE__ */ new Set()), o;
    }
    var tI = {}, nI = n.ReactDebugCurrentFrame;
    function Pw(r) {
      if (r) {
        var o = r._owner, f = ul(r.type, r._source, o ? o.type : null);
        nI.setExtraStackFrame(f);
      } else
        nI.setExtraStackFrame(null);
    }
    function Tl(r, o, f, h, b) {
      {
        var T = Function.call.bind(ue);
        for (var N in r)
          if (T(r, N)) {
            var V = void 0;
            try {
              if (typeof r[N] != "function") {
                var Z = Error((h || "React class") + ": " + f + " type `" + N + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof r[N] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                throw Z.name = "Invariant Violation", Z;
              }
              V = r[N](o, N, h, f, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
            } catch (se) {
              V = se;
            }
            V && !(V instanceof Error) && (Pw(b), d("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", h || "React class", f, N, typeof V), Pw(null)), V instanceof Error && !(V.message in tI) && (tI[V.message] = !0, Pw(b), d("Failed %s type: %s", f, V.message), Pw(null));
          }
      }
    }
    var BT = [], Mw;
    Mw = [];
    var Pc = -1;
    function Ad(r) {
      return {
        current: r
      };
    }
    function Zi(r, o) {
      if (Pc < 0) {
        d("Unexpected pop.");
        return;
      }
      o !== Mw[Pc] && d("Unexpected Fiber popped."), r.current = BT[Pc], BT[Pc] = null, Mw[Pc] = null, Pc--;
    }
    function ea(r, o, f) {
      Pc++, BT[Pc] = r.current, Mw[Pc] = f, r.current = o;
    }
    var UT;
    UT = {};
    var as = {};
    Object.freeze(as);
    var Mc = Ad(as), Cu = Ad(!1), GT = as;
    function Am(r, o, f) {
      return f && Su(o) ? GT : Mc.current;
    }
    function rI(r, o, f) {
      {
        var h = r.stateNode;
        h.__reactInternalMemoizedUnmaskedChildContext = o, h.__reactInternalMemoizedMaskedChildContext = f;
      }
    }
    function $m(r, o) {
      {
        var f = r.type, h = f.contextTypes;
        if (!h)
          return as;
        var b = r.stateNode;
        if (b && b.__reactInternalMemoizedUnmaskedChildContext === o)
          return b.__reactInternalMemoizedMaskedChildContext;
        var T = {};
        for (var N in h)
          T[N] = o[N];
        {
          var V = Sn(r) || "Unknown";
          Tl(h, T, "context", V);
        }
        return b && rI(r, o, T), T;
      }
    }
    function Iw() {
      return Cu.current;
    }
    function Su(r) {
      {
        var o = r.childContextTypes;
        return o != null;
      }
    }
    function Dw(r) {
      Zi(Cu, r), Zi(Mc, r);
    }
    function WT(r) {
      Zi(Cu, r), Zi(Mc, r);
    }
    function oI(r, o, f) {
      {
        if (Mc.current !== as)
          throw new Error("Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue.");
        ea(Mc, o, r), ea(Cu, f, r);
      }
    }
    function iI(r, o, f) {
      {
        var h = r.stateNode, b = o.childContextTypes;
        if (typeof h.getChildContext != "function") {
          {
            var T = Sn(r) || "Unknown";
            UT[T] || (UT[T] = !0, d("%s.childContextTypes is specified but there is no getChildContext() method on the instance. You can either define getChildContext() on %s or remove childContextTypes from it.", T, T));
          }
          return f;
        }
        var N = h.getChildContext();
        for (var V in N)
          if (!(V in b))
            throw new Error((Sn(r) || "Unknown") + '.getChildContext(): key "' + V + '" is not defined in childContextTypes.');
        {
          var Z = Sn(r) || "Unknown";
          Tl(b, N, "child context", Z);
        }
        return Rn({}, f, N);
      }
    }
    function Nw(r) {
      {
        var o = r.stateNode, f = o && o.__reactInternalMemoizedMergedChildContext || as;
        return GT = Mc.current, ea(Mc, f, r), ea(Cu, Cu.current, r), !0;
      }
    }
    function aI(r, o, f) {
      {
        var h = r.stateNode;
        if (!h)
          throw new Error("Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue.");
        if (f) {
          var b = iI(r, o, GT);
          h.__reactInternalMemoizedMergedChildContext = b, Zi(Cu, r), Zi(Mc, r), ea(Mc, b, r), ea(Cu, f, r);
        } else
          Zi(Cu, r), ea(Cu, f, r);
      }
    }
    function iU(r) {
      {
        if (!uc(r) || r.tag !== v)
          throw new Error("Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue.");
        var o = r;
        do {
          switch (o.tag) {
            case C:
              return o.stateNode.context;
            case v: {
              var f = o.type;
              if (Su(f))
                return o.stateNode.__reactInternalMemoizedMergedChildContext;
              break;
            }
          }
          o = o.return;
        } while (o !== null);
        throw new Error("Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue.");
      }
    }
    var $d = 0, Lw = 1, Ic = null, qT = !1, KT = !1;
    function sI(r) {
      Ic === null ? Ic = [r] : Ic.push(r);
    }
    function aU(r) {
      qT = !0, sI(r);
    }
    function lI() {
      qT && jd();
    }
    function jd() {
      if (!KT && Ic !== null) {
        KT = !0;
        var r = 0, o = Aa();
        try {
          var f = !0, h = Ic;
          for (So(Ti); r < h.length; r++) {
            var b = h[r];
            do
              b = b(f);
            while (b !== null);
          }
          Ic = null, qT = !1;
        } catch (T) {
          throw Ic !== null && (Ic = Ic.slice(r + 1)), $v(qf, jd), T;
        } finally {
          So(o), KT = !1;
        }
      }
      return null;
    }
    var jm = [], zm = 0, Fw = null, _w = 0, $s = [], js = 0, Pp = null, Dc = 1, Nc = "";
    function sU(r) {
      return Ip(), (r.flags & ks) !== tn;
    }
    function lU(r) {
      return Ip(), _w;
    }
    function uU() {
      var r = Nc, o = Dc, f = o & ~cU(o);
      return f.toString(32) + r;
    }
    function Mp(r, o) {
      Ip(), jm[zm++] = _w, jm[zm++] = Fw, Fw = r, _w = o;
    }
    function uI(r, o, f) {
      Ip(), $s[js++] = Dc, $s[js++] = Nc, $s[js++] = Pp, Pp = r;
      var h = Dc, b = Nc, T = Aw(h) - 1, N = h & ~(1 << T), V = f + 1, Z = Aw(o) + T;
      if (Z > 30) {
        var se = T - T % 5, le = (1 << se) - 1, Te = (N & le).toString(32), xe = N >> se, Ae = T - se, ze = Aw(o) + Ae, qe = V << Ae, Dt = qe | xe, ln = Te + b;
        Dc = 1 << ze | Dt, Nc = ln;
      } else {
        var Jt = V << T, Qn = Jt | N, Un = b;
        Dc = 1 << Z | Qn, Nc = Un;
      }
    }
    function YT(r) {
      Ip();
      var o = r.return;
      if (o !== null) {
        var f = 1, h = 0;
        Mp(r, f), uI(r, f, h);
      }
    }
    function Aw(r) {
      return 32 - bo(r);
    }
    function cU(r) {
      return 1 << Aw(r) - 1;
    }
    function XT(r) {
      for (; r === Fw; )
        Fw = jm[--zm], jm[zm] = null, _w = jm[--zm], jm[zm] = null;
      for (; r === Pp; )
        Pp = $s[--js], $s[js] = null, Nc = $s[--js], $s[js] = null, Dc = $s[--js], $s[js] = null;
    }
    function dU() {
      return Ip(), Pp !== null ? {
        id: Dc,
        overflow: Nc
      } : null;
    }
    function fU(r, o) {
      Ip(), $s[js++] = Dc, $s[js++] = Nc, $s[js++] = Pp, Dc = o.id, Nc = o.overflow, Pp = r;
    }
    function Ip() {
      Mi() || d("Expected to be hydrating. This is a bug in React. Please file an issue.");
    }
    var Pi = null, zs = null, Rl = !1, Dp = !1, zd = null;
    function pU() {
      Rl && d("We should not be hydrating here. This is a bug in React. Please file a bug.");
    }
    function cI() {
      Dp = !0;
    }
    function hU() {
      return Dp;
    }
    function mU(r) {
      var o = r.stateNode.containerInfo;
      return zs = NB(o), Pi = r, Rl = !0, zd = null, Dp = !1, !0;
    }
    function gU(r, o, f) {
      return zs = LB(o), Pi = r, Rl = !0, zd = null, Dp = !1, f !== null && fU(r, f), !0;
    }
    function dI(r, o) {
      switch (r.tag) {
        case C: {
          UB(r.stateNode.containerInfo, o);
          break;
        }
        case R: {
          var f = (r.mode & Ln) !== nn;
          WB(
            r.type,
            r.memoizedProps,
            r.stateNode,
            o,
            // TODO: Delete this argument when we remove the legacy root API.
            f
          );
          break;
        }
        case D: {
          var h = r.memoizedState;
          h.dehydrated !== null && GB(h.dehydrated, o);
          break;
        }
      }
    }
    function fI(r, o) {
      dI(r, o);
      var f = C4();
      f.stateNode = o, f.return = r;
      var h = r.deletions;
      h === null ? (r.deletions = [f], r.flags |= Ma) : h.push(f);
    }
    function QT(r, o) {
      {
        if (Dp)
          return;
        switch (r.tag) {
          case C: {
            var f = r.stateNode.containerInfo;
            switch (o.tag) {
              case R:
                var h = o.type;
                o.pendingProps, qB(f, h);
                break;
              case O:
                var b = o.pendingProps;
                KB(f, b);
                break;
            }
            break;
          }
          case R: {
            var T = r.type, N = r.memoizedProps, V = r.stateNode;
            switch (o.tag) {
              case R: {
                var Z = o.type, se = o.pendingProps, le = (r.mode & Ln) !== nn;
                QB(
                  T,
                  N,
                  V,
                  Z,
                  se,
                  // TODO: Delete this argument when we remove the legacy root API.
                  le
                );
                break;
              }
              case O: {
                var Te = o.pendingProps, xe = (r.mode & Ln) !== nn;
                JB(
                  T,
                  N,
                  V,
                  Te,
                  // TODO: Delete this argument when we remove the legacy root API.
                  xe
                );
                break;
              }
            }
            break;
          }
          case D: {
            var Ae = r.memoizedState, ze = Ae.dehydrated;
            if (ze !== null) switch (o.tag) {
              case R:
                var qe = o.type;
                o.pendingProps, YB(ze, qe);
                break;
              case O:
                var Dt = o.pendingProps;
                XB(ze, Dt);
                break;
            }
            break;
          }
          default:
            return;
        }
      }
    }
    function pI(r, o) {
      o.flags = o.flags & ~Ui | Qr, QT(r, o);
    }
    function hI(r, o) {
      switch (r.tag) {
        case R: {
          var f = r.type;
          r.pendingProps;
          var h = OB(o, f);
          return h !== null ? (r.stateNode = h, Pi = r, zs = DB(h), !0) : !1;
        }
        case O: {
          var b = r.pendingProps, T = kB(o, b);
          return T !== null ? (r.stateNode = T, Pi = r, zs = null, !0) : !1;
        }
        case D: {
          var N = PB(o);
          if (N !== null) {
            var V = {
              dehydrated: N,
              treeContext: dU(),
              retryLane: Ki
            };
            r.memoizedState = V;
            var Z = S4(N);
            return Z.return = r, r.child = Z, Pi = r, zs = null, !0;
          }
          return !1;
        }
        default:
          return !1;
      }
    }
    function JT(r) {
      return (r.mode & Ln) !== nn && (r.flags & Zt) === tn;
    }
    function ZT(r) {
      throw new Error("Hydration failed because the initial UI does not match what was rendered on the server.");
    }
    function e1(r) {
      if (Rl) {
        var o = zs;
        if (!o) {
          JT(r) && (QT(Pi, r), ZT()), pI(Pi, r), Rl = !1, Pi = r;
          return;
        }
        var f = o;
        if (!hI(r, o)) {
          JT(r) && (QT(Pi, r), ZT()), o = Dy(f);
          var h = Pi;
          if (!o || !hI(r, o)) {
            pI(Pi, r), Rl = !1, Pi = r;
            return;
          }
          fI(h, f);
        }
      }
    }
    function vU(r, o, f) {
      var h = r.stateNode, b = !Dp, T = FB(h, r.type, r.memoizedProps, o, f, r, b);
      return r.updateQueue = T, T !== null;
    }
    function yU(r) {
      var o = r.stateNode, f = r.memoizedProps, h = _B(o, f, r);
      if (h) {
        var b = Pi;
        if (b !== null)
          switch (b.tag) {
            case C: {
              var T = b.stateNode.containerInfo, N = (b.mode & Ln) !== nn;
              VB(
                T,
                o,
                f,
                // TODO: Delete this argument when we remove the legacy root API.
                N
              );
              break;
            }
            case R: {
              var V = b.type, Z = b.memoizedProps, se = b.stateNode, le = (b.mode & Ln) !== nn;
              BB(
                V,
                Z,
                se,
                o,
                f,
                // TODO: Delete this argument when we remove the legacy root API.
                le
              );
              break;
            }
          }
      }
      return h;
    }
    function bU(r) {
      var o = r.memoizedState, f = o !== null ? o.dehydrated : null;
      if (!f)
        throw new Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.");
      AB(f, r);
    }
    function CU(r) {
      var o = r.memoizedState, f = o !== null ? o.dehydrated : null;
      if (!f)
        throw new Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.");
      return $B(f);
    }
    function mI(r) {
      for (var o = r.return; o !== null && o.tag !== R && o.tag !== C && o.tag !== D; )
        o = o.return;
      Pi = o;
    }
    function $w(r) {
      if (r !== Pi)
        return !1;
      if (!Rl)
        return mI(r), Rl = !0, !1;
      if (r.tag !== C && (r.tag !== R || HB(r.type) && !FT(r.type, r.memoizedProps))) {
        var o = zs;
        if (o)
          if (JT(r))
            gI(r), ZT();
          else
            for (; o; )
              fI(r, o), o = Dy(o);
      }
      return mI(r), r.tag === D ? zs = CU(r) : zs = Pi ? Dy(r.stateNode) : null, !0;
    }
    function SU() {
      return Rl && zs !== null;
    }
    function gI(r) {
      for (var o = zs; o; )
        dI(r, o), o = Dy(o);
    }
    function Hm() {
      Pi = null, zs = null, Rl = !1, Dp = !1;
    }
    function vI() {
      zd !== null && (cN(zd), zd = null);
    }
    function Mi() {
      return Rl;
    }
    function t1(r) {
      zd === null ? zd = [r] : zd.push(r);
    }
    var wU = n.ReactCurrentBatchConfig, xU = null;
    function EU() {
      return wU.transition;
    }
    var Ol = {
      recordUnsafeLifecycleWarnings: function(r, o) {
      },
      flushPendingUnsafeLifecycleWarnings: function() {
      },
      recordLegacyContextWarning: function(r, o) {
      },
      flushLegacyContextWarning: function() {
      },
      discardPendingWarnings: function() {
      }
    };
    {
      var TU = function(r) {
        for (var o = null, f = r; f !== null; )
          f.mode & Tr && (o = f), f = f.return;
        return o;
      }, Np = function(r) {
        var o = [];
        return r.forEach(function(f) {
          o.push(f);
        }), o.sort().join(", ");
      }, _y = [], Ay = [], $y = [], jy = [], zy = [], Hy = [], Lp = /* @__PURE__ */ new Set();
      Ol.recordUnsafeLifecycleWarnings = function(r, o) {
        Lp.has(r.type) || (typeof o.componentWillMount == "function" && // Don't warn about react-lifecycles-compat polyfilled components.
        o.componentWillMount.__suppressDeprecationWarning !== !0 && _y.push(r), r.mode & Tr && typeof o.UNSAFE_componentWillMount == "function" && Ay.push(r), typeof o.componentWillReceiveProps == "function" && o.componentWillReceiveProps.__suppressDeprecationWarning !== !0 && $y.push(r), r.mode & Tr && typeof o.UNSAFE_componentWillReceiveProps == "function" && jy.push(r), typeof o.componentWillUpdate == "function" && o.componentWillUpdate.__suppressDeprecationWarning !== !0 && zy.push(r), r.mode & Tr && typeof o.UNSAFE_componentWillUpdate == "function" && Hy.push(r));
      }, Ol.flushPendingUnsafeLifecycleWarnings = function() {
        var r = /* @__PURE__ */ new Set();
        _y.length > 0 && (_y.forEach(function(xe) {
          r.add(Sn(xe) || "Component"), Lp.add(xe.type);
        }), _y = []);
        var o = /* @__PURE__ */ new Set();
        Ay.length > 0 && (Ay.forEach(function(xe) {
          o.add(Sn(xe) || "Component"), Lp.add(xe.type);
        }), Ay = []);
        var f = /* @__PURE__ */ new Set();
        $y.length > 0 && ($y.forEach(function(xe) {
          f.add(Sn(xe) || "Component"), Lp.add(xe.type);
        }), $y = []);
        var h = /* @__PURE__ */ new Set();
        jy.length > 0 && (jy.forEach(function(xe) {
          h.add(Sn(xe) || "Component"), Lp.add(xe.type);
        }), jy = []);
        var b = /* @__PURE__ */ new Set();
        zy.length > 0 && (zy.forEach(function(xe) {
          b.add(Sn(xe) || "Component"), Lp.add(xe.type);
        }), zy = []);
        var T = /* @__PURE__ */ new Set();
        if (Hy.length > 0 && (Hy.forEach(function(xe) {
          T.add(Sn(xe) || "Component"), Lp.add(xe.type);
        }), Hy = []), o.size > 0) {
          var N = Np(o);
          d(`Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move code with side effects to componentDidMount, and set initial state in the constructor.

Please update the following components: %s`, N);
        }
        if (h.size > 0) {
          var V = Np(h);
          d(`Using UNSAFE_componentWillReceiveProps in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move data fetching code or side effects to componentDidUpdate.
* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state

Please update the following components: %s`, V);
        }
        if (T.size > 0) {
          var Z = Np(T);
          d(`Using UNSAFE_componentWillUpdate in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move data fetching code or side effects to componentDidUpdate.

Please update the following components: %s`, Z);
        }
        if (r.size > 0) {
          var se = Np(r);
          u(`componentWillMount has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move code with side effects to componentDidMount, and set initial state in the constructor.
* Rename componentWillMount to UNSAFE_componentWillMount to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run \`npx react-codemod rename-unsafe-lifecycles\` in your project source folder.

Please update the following components: %s`, se);
        }
        if (f.size > 0) {
          var le = Np(f);
          u(`componentWillReceiveProps has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move data fetching code or side effects to componentDidUpdate.
* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state
* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run \`npx react-codemod rename-unsafe-lifecycles\` in your project source folder.

Please update the following components: %s`, le);
        }
        if (b.size > 0) {
          var Te = Np(b);
          u(`componentWillUpdate has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move data fetching code or side effects to componentDidUpdate.
* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run \`npx react-codemod rename-unsafe-lifecycles\` in your project source folder.

Please update the following components: %s`, Te);
        }
      };
      var jw = /* @__PURE__ */ new Map(), yI = /* @__PURE__ */ new Set();
      Ol.recordLegacyContextWarning = function(r, o) {
        var f = TU(r);
        if (f === null) {
          d("Expected to find a StrictMode component in a strict mode tree. This error is likely caused by a bug in React. Please file an issue.");
          return;
        }
        if (!yI.has(r.type)) {
          var h = jw.get(f);
          (r.type.contextTypes != null || r.type.childContextTypes != null || o !== null && typeof o.getChildContext == "function") && (h === void 0 && (h = [], jw.set(f, h)), h.push(r));
        }
      }, Ol.flushLegacyContextWarning = function() {
        jw.forEach(function(r, o) {
          if (r.length !== 0) {
            var f = r[0], h = /* @__PURE__ */ new Set();
            r.forEach(function(T) {
              h.add(Sn(T) || "Component"), yI.add(T.type);
            });
            var b = Np(h);
            try {
              wr(f), d(`Legacy context API has been detected within a strict-mode tree.

The old API will be supported in all 16.x releases, but applications using it should migrate to the new version.

Please update the following components: %s

Learn more about this warning here: https://reactjs.org/link/legacy-context`, b);
            } finally {
              Br();
            }
          }
        });
      }, Ol.discardPendingWarnings = function() {
        _y = [], Ay = [], $y = [], jy = [], zy = [], Hy = [], jw = /* @__PURE__ */ new Map();
      };
    }
    var n1, r1, o1, i1, a1, bI = function(r, o) {
    };
    n1 = !1, r1 = !1, o1 = {}, i1 = {}, a1 = {}, bI = function(r, o) {
      if (!(r === null || typeof r != "object") && !(!r._store || r._store.validated || r.key != null)) {
        if (typeof r._store != "object")
          throw new Error("React Component in warnForMissingKey should have a _store. This error is likely caused by a bug in React. Please file an issue.");
        r._store.validated = !0;
        var f = Sn(o) || "Component";
        i1[f] || (i1[f] = !0, d('Each child in a list should have a unique "key" prop. See https://reactjs.org/link/warning-keys for more information.'));
      }
    };
    function RU(r) {
      return r.prototype && r.prototype.isReactComponent;
    }
    function Vy(r, o, f) {
      var h = f.ref;
      if (h !== null && typeof h != "function" && typeof h != "object") {
        if ((r.mode & Tr || ie) && // We warn in ReactElement.js if owner and self are equal for string refs
        // because these cannot be automatically converted to an arrow function
        // using a codemod. Therefore, we don't have to warn about string refs again.
        !(f._owner && f._self && f._owner.stateNode !== f._self) && // Will already throw with "Function components cannot have string refs"
        !(f._owner && f._owner.tag !== v) && // Will already warn with "Function components cannot be given refs"
        !(typeof f.type == "function" && !RU(f.type)) && // Will already throw with "Element ref was specified as a string (someStringRef) but no owner was set"
        f._owner) {
          var b = Sn(r) || "Component";
          o1[b] || (d('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. We recommend using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', b, h), o1[b] = !0);
        }
        if (f._owner) {
          var T = f._owner, N;
          if (T) {
            var V = T;
            if (V.tag !== v)
              throw new Error("Function components cannot have string refs. We recommend using useRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref");
            N = V.stateNode;
          }
          if (!N)
            throw new Error("Missing owner for string ref " + h + ". This error is likely caused by a bug in React. Please file an issue.");
          var Z = N;
          rt(h, "ref");
          var se = "" + h;
          if (o !== null && o.ref !== null && typeof o.ref == "function" && o.ref._stringRef === se)
            return o.ref;
          var le = function(Te) {
            var xe = Z.refs;
            Te === null ? delete xe[se] : xe[se] = Te;
          };
          return le._stringRef = se, le;
        } else {
          if (typeof h != "string")
            throw new Error("Expected ref to be a function, a string, an object returned by React.createRef(), or null.");
          if (!f._owner)
            throw new Error("Element ref was specified as a string (" + h + `) but no owner was set. This could happen for one of the following reasons:
1. You may be adding a ref to a function component
2. You may be adding a ref to a component that was not created inside a component's render method
3. You have multiple copies of React loaded
See https://reactjs.org/link/refs-must-have-owner for more information.`);
        }
      }
      return h;
    }
    function zw(r, o) {
      var f = Object.prototype.toString.call(o);
      throw new Error("Objects are not valid as a React child (found: " + (f === "[object Object]" ? "object with keys {" + Object.keys(o).join(", ") + "}" : f) + "). If you meant to render a collection of children, use an array instead.");
    }
    function Hw(r) {
      {
        var o = Sn(r) || "Component";
        if (a1[o])
          return;
        a1[o] = !0, d("Functions are not valid as a React child. This may happen if you return a Component instead of <Component /> from render. Or maybe you meant to call this function rather than return it.");
      }
    }
    function CI(r) {
      var o = r._payload, f = r._init;
      return f(o);
    }
    function SI(r) {
      function o(Ie, Ke) {
        if (r) {
          var De = Ie.deletions;
          De === null ? (Ie.deletions = [Ke], Ie.flags |= Ma) : De.push(Ke);
        }
      }
      function f(Ie, Ke) {
        if (!r)
          return null;
        for (var De = Ke; De !== null; )
          o(Ie, De), De = De.sibling;
        return null;
      }
      function h(Ie, Ke) {
        for (var De = /* @__PURE__ */ new Map(), ft = Ke; ft !== null; )
          ft.key !== null ? De.set(ft.key, ft) : De.set(ft.index, ft), ft = ft.sibling;
        return De;
      }
      function b(Ie, Ke) {
        var De = Bp(Ie, Ke);
        return De.index = 0, De.sibling = null, De;
      }
      function T(Ie, Ke, De) {
        if (Ie.index = De, !r)
          return Ie.flags |= ks, Ke;
        var ft = Ie.alternate;
        if (ft !== null) {
          var $t = ft.index;
          return $t < Ke ? (Ie.flags |= Qr, Ke) : $t;
        } else
          return Ie.flags |= Qr, Ke;
      }
      function N(Ie) {
        return r && Ie.alternate === null && (Ie.flags |= Qr), Ie;
      }
      function V(Ie, Ke, De, ft) {
        if (Ke === null || Ke.tag !== O) {
          var $t = tO(De, Ie.mode, ft);
          return $t.return = Ie, $t;
        } else {
          var Nt = b(Ke, De);
          return Nt.return = Ie, Nt;
        }
      }
      function Z(Ie, Ke, De, ft) {
        var $t = De.type;
        if ($t === zn)
          return le(Ie, Ke, De.props.children, ft, De.key);
        if (Ke !== null && (Ke.elementType === $t || // Keep this check inline so it only runs on the false path:
        RN(Ke, De) || // Lazy types should reconcile their resolved type.
        // We need to do this after the Hot Reloading check above,
        // because hot reloading has different semantics than prod because
        // it doesn't resuspend. So we can't let the call below suspend.
        typeof $t == "object" && $t !== null && $t.$$typeof === Le && CI($t) === Ke.type)) {
          var Nt = b(Ke, De.props);
          return Nt.ref = Vy(Ie, Ke, De), Nt.return = Ie, Nt._debugSource = De._source, Nt._debugOwner = De._owner, Nt;
        }
        var vn = eO(De, Ie.mode, ft);
        return vn.ref = Vy(Ie, Ke, De), vn.return = Ie, vn;
      }
      function se(Ie, Ke, De, ft) {
        if (Ke === null || Ke.tag !== S || Ke.stateNode.containerInfo !== De.containerInfo || Ke.stateNode.implementation !== De.implementation) {
          var $t = nO(De, Ie.mode, ft);
          return $t.return = Ie, $t;
        } else {
          var Nt = b(Ke, De.children || []);
          return Nt.return = Ie, Nt;
        }
      }
      function le(Ie, Ke, De, ft, $t) {
        if (Ke === null || Ke.tag !== E) {
          var Nt = Qd(De, Ie.mode, ft, $t);
          return Nt.return = Ie, Nt;
        } else {
          var vn = b(Ke, De);
          return vn.return = Ie, vn;
        }
      }
      function Te(Ie, Ke, De) {
        if (typeof Ke == "string" && Ke !== "" || typeof Ke == "number") {
          var ft = tO("" + Ke, Ie.mode, De);
          return ft.return = Ie, ft;
        }
        if (typeof Ke == "object" && Ke !== null) {
          switch (Ke.$$typeof) {
            case en: {
              var $t = eO(Ke, Ie.mode, De);
              return $t.ref = Vy(Ie, null, Ke), $t.return = Ie, $t;
            }
            case on: {
              var Nt = nO(Ke, Ie.mode, De);
              return Nt.return = Ie, Nt;
            }
            case Le: {
              var vn = Ke._payload, On = Ke._init;
              return Te(Ie, On(vn), De);
            }
          }
          if (Dn(Ke) || En(Ke)) {
            var Or = Qd(Ke, Ie.mode, De, null);
            return Or.return = Ie, Or;
          }
          zw(Ie, Ke);
        }
        return typeof Ke == "function" && Hw(Ie), null;
      }
      function xe(Ie, Ke, De, ft) {
        var $t = Ke !== null ? Ke.key : null;
        if (typeof De == "string" && De !== "" || typeof De == "number")
          return $t !== null ? null : V(Ie, Ke, "" + De, ft);
        if (typeof De == "object" && De !== null) {
          switch (De.$$typeof) {
            case en:
              return De.key === $t ? Z(Ie, Ke, De, ft) : null;
            case on:
              return De.key === $t ? se(Ie, Ke, De, ft) : null;
            case Le: {
              var Nt = De._payload, vn = De._init;
              return xe(Ie, Ke, vn(Nt), ft);
            }
          }
          if (Dn(De) || En(De))
            return $t !== null ? null : le(Ie, Ke, De, ft, null);
          zw(Ie, De);
        }
        return typeof De == "function" && Hw(Ie), null;
      }
      function Ae(Ie, Ke, De, ft, $t) {
        if (typeof ft == "string" && ft !== "" || typeof ft == "number") {
          var Nt = Ie.get(De) || null;
          return V(Ke, Nt, "" + ft, $t);
        }
        if (typeof ft == "object" && ft !== null) {
          switch (ft.$$typeof) {
            case en: {
              var vn = Ie.get(ft.key === null ? De : ft.key) || null;
              return Z(Ke, vn, ft, $t);
            }
            case on: {
              var On = Ie.get(ft.key === null ? De : ft.key) || null;
              return se(Ke, On, ft, $t);
            }
            case Le:
              var Or = ft._payload, ur = ft._init;
              return Ae(Ie, Ke, De, ur(Or), $t);
          }
          if (Dn(ft) || En(ft)) {
            var _o = Ie.get(De) || null;
            return le(Ke, _o, ft, $t, null);
          }
          zw(Ke, ft);
        }
        return typeof ft == "function" && Hw(Ke), null;
      }
      function ze(Ie, Ke, De) {
        {
          if (typeof Ie != "object" || Ie === null)
            return Ke;
          switch (Ie.$$typeof) {
            case en:
            case on:
              bI(Ie, De);
              var ft = Ie.key;
              if (typeof ft != "string")
                break;
              if (Ke === null) {
                Ke = /* @__PURE__ */ new Set(), Ke.add(ft);
                break;
              }
              if (!Ke.has(ft)) {
                Ke.add(ft);
                break;
              }
              d("Encountered two children with the same key, `%s`. Keys should be unique so that components maintain their identity across updates. Non-unique keys may cause children to be duplicated and/or omitted — the behavior is unsupported and could change in a future version.", ft);
              break;
            case Le:
              var $t = Ie._payload, Nt = Ie._init;
              ze(Nt($t), Ke, De);
              break;
          }
        }
        return Ke;
      }
      function qe(Ie, Ke, De, ft) {
        for (var $t = null, Nt = 0; Nt < De.length; Nt++) {
          var vn = De[Nt];
          $t = ze(vn, $t, Ie);
        }
        for (var On = null, Or = null, ur = Ke, _o = 0, cr = 0, Eo = null; ur !== null && cr < De.length; cr++) {
          ur.index > cr ? (Eo = ur, ur = null) : Eo = ur.sibling;
          var na = xe(Ie, ur, De[cr], ft);
          if (na === null) {
            ur === null && (ur = Eo);
            break;
          }
          r && ur && na.alternate === null && o(Ie, ur), _o = T(na, _o, cr), Or === null ? On = na : Or.sibling = na, Or = na, ur = Eo;
        }
        if (cr === De.length) {
          if (f(Ie, ur), Mi()) {
            var Ai = cr;
            Mp(Ie, Ai);
          }
          return On;
        }
        if (ur === null) {
          for (; cr < De.length; cr++) {
            var ls = Te(Ie, De[cr], ft);
            ls !== null && (_o = T(ls, _o, cr), Or === null ? On = ls : Or.sibling = ls, Or = ls);
          }
          if (Mi()) {
            var ya = cr;
            Mp(Ie, ya);
          }
          return On;
        }
        for (var ba = h(Ie, ur); cr < De.length; cr++) {
          var ra = Ae(ba, Ie, cr, De[cr], ft);
          ra !== null && (r && ra.alternate !== null && ba.delete(ra.key === null ? cr : ra.key), _o = T(ra, _o, cr), Or === null ? On = ra : Or.sibling = ra, Or = ra);
        }
        if (r && ba.forEach(function(ag) {
          return o(Ie, ag);
        }), Mi()) {
          var zc = cr;
          Mp(Ie, zc);
        }
        return On;
      }
      function Dt(Ie, Ke, De, ft) {
        var $t = En(De);
        if (typeof $t != "function")
          throw new Error("An object is not an iterable. This error is likely caused by a bug in React. Please file an issue.");
        {
          typeof Symbol == "function" && // $FlowFixMe Flow doesn't know about toStringTag
          De[Symbol.toStringTag] === "Generator" && (r1 || d("Using Generators as children is unsupported and will likely yield unexpected results because enumerating a generator mutates it. You may convert it to an array with `Array.from()` or the `[...spread]` operator before rendering. Keep in mind you might need to polyfill these features for older browsers."), r1 = !0), De.entries === $t && (n1 || d("Using Maps as children is not supported. Use an array of keyed ReactElements instead."), n1 = !0);
          var Nt = $t.call(De);
          if (Nt)
            for (var vn = null, On = Nt.next(); !On.done; On = Nt.next()) {
              var Or = On.value;
              vn = ze(Or, vn, Ie);
            }
        }
        var ur = $t.call(De);
        if (ur == null)
          throw new Error("An iterable object provided no iterator.");
        for (var _o = null, cr = null, Eo = Ke, na = 0, Ai = 0, ls = null, ya = ur.next(); Eo !== null && !ya.done; Ai++, ya = ur.next()) {
          Eo.index > Ai ? (ls = Eo, Eo = null) : ls = Eo.sibling;
          var ba = xe(Ie, Eo, ya.value, ft);
          if (ba === null) {
            Eo === null && (Eo = ls);
            break;
          }
          r && Eo && ba.alternate === null && o(Ie, Eo), na = T(ba, na, Ai), cr === null ? _o = ba : cr.sibling = ba, cr = ba, Eo = ls;
        }
        if (ya.done) {
          if (f(Ie, Eo), Mi()) {
            var ra = Ai;
            Mp(Ie, ra);
          }
          return _o;
        }
        if (Eo === null) {
          for (; !ya.done; Ai++, ya = ur.next()) {
            var zc = Te(Ie, ya.value, ft);
            zc !== null && (na = T(zc, na, Ai), cr === null ? _o = zc : cr.sibling = zc, cr = zc);
          }
          if (Mi()) {
            var ag = Ai;
            Mp(Ie, ag);
          }
          return _o;
        }
        for (var Cb = h(Ie, Eo); !ya.done; Ai++, ya = ur.next()) {
          var Pu = Ae(Cb, Ie, Ai, ya.value, ft);
          Pu !== null && (r && Pu.alternate !== null && Cb.delete(Pu.key === null ? Ai : Pu.key), na = T(Pu, na, Ai), cr === null ? _o = Pu : cr.sibling = Pu, cr = Pu);
        }
        if (r && Cb.forEach(function(J4) {
          return o(Ie, J4);
        }), Mi()) {
          var Q4 = Ai;
          Mp(Ie, Q4);
        }
        return _o;
      }
      function ln(Ie, Ke, De, ft) {
        if (Ke !== null && Ke.tag === O) {
          f(Ie, Ke.sibling);
          var $t = b(Ke, De);
          return $t.return = Ie, $t;
        }
        f(Ie, Ke);
        var Nt = tO(De, Ie.mode, ft);
        return Nt.return = Ie, Nt;
      }
      function Jt(Ie, Ke, De, ft) {
        for (var $t = De.key, Nt = Ke; Nt !== null; ) {
          if (Nt.key === $t) {
            var vn = De.type;
            if (vn === zn) {
              if (Nt.tag === E) {
                f(Ie, Nt.sibling);
                var On = b(Nt, De.props.children);
                return On.return = Ie, On._debugSource = De._source, On._debugOwner = De._owner, On;
              }
            } else if (Nt.elementType === vn || // Keep this check inline so it only runs on the false path:
            RN(Nt, De) || // Lazy types should reconcile their resolved type.
            // We need to do this after the Hot Reloading check above,
            // because hot reloading has different semantics than prod because
            // it doesn't resuspend. So we can't let the call below suspend.
            typeof vn == "object" && vn !== null && vn.$$typeof === Le && CI(vn) === Nt.type) {
              f(Ie, Nt.sibling);
              var Or = b(Nt, De.props);
              return Or.ref = Vy(Ie, Nt, De), Or.return = Ie, Or._debugSource = De._source, Or._debugOwner = De._owner, Or;
            }
            f(Ie, Nt);
            break;
          } else
            o(Ie, Nt);
          Nt = Nt.sibling;
        }
        if (De.type === zn) {
          var ur = Qd(De.props.children, Ie.mode, ft, De.key);
          return ur.return = Ie, ur;
        } else {
          var _o = eO(De, Ie.mode, ft);
          return _o.ref = Vy(Ie, Ke, De), _o.return = Ie, _o;
        }
      }
      function Qn(Ie, Ke, De, ft) {
        for (var $t = De.key, Nt = Ke; Nt !== null; ) {
          if (Nt.key === $t)
            if (Nt.tag === S && Nt.stateNode.containerInfo === De.containerInfo && Nt.stateNode.implementation === De.implementation) {
              f(Ie, Nt.sibling);
              var vn = b(Nt, De.children || []);
              return vn.return = Ie, vn;
            } else {
              f(Ie, Nt);
              break;
            }
          else
            o(Ie, Nt);
          Nt = Nt.sibling;
        }
        var On = nO(De, Ie.mode, ft);
        return On.return = Ie, On;
      }
      function Un(Ie, Ke, De, ft) {
        var $t = typeof De == "object" && De !== null && De.type === zn && De.key === null;
        if ($t && (De = De.props.children), typeof De == "object" && De !== null) {
          switch (De.$$typeof) {
            case en:
              return N(Jt(Ie, Ke, De, ft));
            case on:
              return N(Qn(Ie, Ke, De, ft));
            case Le:
              var Nt = De._payload, vn = De._init;
              return Un(Ie, Ke, vn(Nt), ft);
          }
          if (Dn(De))
            return qe(Ie, Ke, De, ft);
          if (En(De))
            return Dt(Ie, Ke, De, ft);
          zw(Ie, De);
        }
        return typeof De == "string" && De !== "" || typeof De == "number" ? N(ln(Ie, Ke, "" + De, ft)) : (typeof De == "function" && Hw(Ie), f(Ie, Ke));
      }
      return Un;
    }
    var Vm = SI(!0), wI = SI(!1);
    function OU(r, o) {
      if (r !== null && o.child !== r.child)
        throw new Error("Resuming work not yet implemented.");
      if (o.child !== null) {
        var f = o.child, h = Bp(f, f.pendingProps);
        for (o.child = h, h.return = o; f.sibling !== null; )
          f = f.sibling, h = h.sibling = Bp(f, f.pendingProps), h.return = o;
        h.sibling = null;
      }
    }
    function kU(r, o) {
      for (var f = r.child; f !== null; )
        m4(f, o), f = f.sibling;
    }
    var s1 = Ad(null), l1;
    l1 = {};
    var Vw = null, Bm = null, u1 = null, Bw = !1;
    function Uw() {
      Vw = null, Bm = null, u1 = null, Bw = !1;
    }
    function xI() {
      Bw = !0;
    }
    function EI() {
      Bw = !1;
    }
    function TI(r, o, f) {
      ea(s1, o._currentValue, r), o._currentValue = f, o._currentRenderer !== void 0 && o._currentRenderer !== null && o._currentRenderer !== l1 && d("Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported."), o._currentRenderer = l1;
    }
    function c1(r, o) {
      var f = s1.current;
      Zi(s1, o), r._currentValue = f;
    }
    function d1(r, o, f) {
      for (var h = r; h !== null; ) {
        var b = h.alternate;
        if (wc(h.childLanes, o) ? b !== null && !wc(b.childLanes, o) && (b.childLanes = kn(b.childLanes, o)) : (h.childLanes = kn(h.childLanes, o), b !== null && (b.childLanes = kn(b.childLanes, o))), h === f)
          break;
        h = h.return;
      }
      h !== f && d("Expected to find the propagation root when scheduling context work. This error is likely caused by a bug in React. Please file an issue.");
    }
    function PU(r, o, f) {
      MU(r, o, f);
    }
    function MU(r, o, f) {
      var h = r.child;
      for (h !== null && (h.return = r); h !== null; ) {
        var b = void 0, T = h.dependencies;
        if (T !== null) {
          b = h.child;
          for (var N = T.firstContext; N !== null; ) {
            if (N.context === o) {
              if (h.tag === v) {
                var V = sp(f), Z = Lc(Fr, V);
                Z.tag = Ww;
                var se = h.updateQueue;
                if (se !== null) {
                  var le = se.shared, Te = le.pending;
                  Te === null ? Z.next = Z : (Z.next = Te.next, Te.next = Z), le.pending = Z;
                }
              }
              h.lanes = kn(h.lanes, f);
              var xe = h.alternate;
              xe !== null && (xe.lanes = kn(xe.lanes, f)), d1(h.return, f, r), T.lanes = kn(T.lanes, f);
              break;
            }
            N = N.next;
          }
        } else if (h.tag === _)
          b = h.type === r.type ? null : h.child;
        else if (h.tag === I) {
          var Ae = h.return;
          if (Ae === null)
            throw new Error("We just came from a parent so we must have had a parent. This is a bug in React.");
          Ae.lanes = kn(Ae.lanes, f);
          var ze = Ae.alternate;
          ze !== null && (ze.lanes = kn(ze.lanes, f)), d1(Ae, f, r), b = h.sibling;
        } else
          b = h.child;
        if (b !== null)
          b.return = h;
        else
          for (b = h; b !== null; ) {
            if (b === r) {
              b = null;
              break;
            }
            var qe = b.sibling;
            if (qe !== null) {
              qe.return = b.return, b = qe;
              break;
            }
            b = b.return;
          }
        h = b;
      }
    }
    function Um(r, o) {
      Vw = r, Bm = null, u1 = null;
      var f = r.dependencies;
      if (f !== null) {
        var h = f.firstContext;
        h !== null && (Yi(f.lanes, o) && rb(), f.firstContext = null);
      }
    }
    function Bo(r) {
      Bw && d("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
      var o = r._currentValue;
      if (u1 !== r) {
        var f = {
          context: r,
          memoizedValue: o,
          next: null
        };
        if (Bm === null) {
          if (Vw === null)
            throw new Error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
          Bm = f, Vw.dependencies = {
            lanes: at,
            firstContext: f
          };
        } else
          Bm = Bm.next = f;
      }
      return o;
    }
    var Fp = null;
    function f1(r) {
      Fp === null ? Fp = [r] : Fp.push(r);
    }
    function IU() {
      if (Fp !== null) {
        for (var r = 0; r < Fp.length; r++) {
          var o = Fp[r], f = o.interleaved;
          if (f !== null) {
            o.interleaved = null;
            var h = f.next, b = o.pending;
            if (b !== null) {
              var T = b.next;
              b.next = h, f.next = T;
            }
            o.pending = f;
          }
        }
        Fp = null;
      }
    }
    function RI(r, o, f, h) {
      var b = o.interleaved;
      return b === null ? (f.next = f, f1(o)) : (f.next = b.next, b.next = f), o.interleaved = f, Gw(r, h);
    }
    function DU(r, o, f, h) {
      var b = o.interleaved;
      b === null ? (f.next = f, f1(o)) : (f.next = b.next, b.next = f), o.interleaved = f;
    }
    function NU(r, o, f, h) {
      var b = o.interleaved;
      return b === null ? (f.next = f, f1(o)) : (f.next = b.next, b.next = f), o.interleaved = f, Gw(r, h);
    }
    function za(r, o) {
      return Gw(r, o);
    }
    var LU = Gw;
    function Gw(r, o) {
      r.lanes = kn(r.lanes, o);
      var f = r.alternate;
      f !== null && (f.lanes = kn(f.lanes, o)), f === null && (r.flags & (Qr | Ui)) !== tn && wN(r);
      for (var h = r, b = r.return; b !== null; )
        b.childLanes = kn(b.childLanes, o), f = b.alternate, f !== null ? f.childLanes = kn(f.childLanes, o) : (b.flags & (Qr | Ui)) !== tn && wN(r), h = b, b = b.return;
      if (h.tag === C) {
        var T = h.stateNode;
        return T;
      } else
        return null;
    }
    var OI = 0, kI = 1, Ww = 2, p1 = 3, qw = !1, h1, Kw;
    h1 = !1, Kw = null;
    function m1(r) {
      var o = {
        baseState: r.memoizedState,
        firstBaseUpdate: null,
        lastBaseUpdate: null,
        shared: {
          pending: null,
          interleaved: null,
          lanes: at
        },
        effects: null
      };
      r.updateQueue = o;
    }
    function PI(r, o) {
      var f = o.updateQueue, h = r.updateQueue;
      if (f === h) {
        var b = {
          baseState: h.baseState,
          firstBaseUpdate: h.firstBaseUpdate,
          lastBaseUpdate: h.lastBaseUpdate,
          shared: h.shared,
          effects: h.effects
        };
        o.updateQueue = b;
      }
    }
    function Lc(r, o) {
      var f = {
        eventTime: r,
        lane: o,
        tag: OI,
        payload: null,
        callback: null,
        next: null
      };
      return f;
    }
    function Hd(r, o, f) {
      var h = r.updateQueue;
      if (h === null)
        return null;
      var b = h.shared;
      if (Kw === b && !h1 && (d("An update (setState, replaceState, or forceUpdate) was scheduled from inside an update function. Update functions should be pure, with zero side-effects. Consider using componentDidUpdate or a callback."), h1 = !0), DG()) {
        var T = b.pending;
        return T === null ? o.next = o : (o.next = T.next, T.next = o), b.pending = o, LU(r, f);
      } else
        return NU(r, b, o, f);
    }
    function Yw(r, o, f) {
      var h = o.updateQueue;
      if (h !== null) {
        var b = h.shared;
        if (ty(f)) {
          var T = b.lanes;
          T = ry(T, r.pendingLanes);
          var N = kn(T, f);
          b.lanes = N, gm(r, N);
        }
      }
    }
    function g1(r, o) {
      var f = r.updateQueue, h = r.alternate;
      if (h !== null) {
        var b = h.updateQueue;
        if (f === b) {
          var T = null, N = null, V = f.firstBaseUpdate;
          if (V !== null) {
            var Z = V;
            do {
              var se = {
                eventTime: Z.eventTime,
                lane: Z.lane,
                tag: Z.tag,
                payload: Z.payload,
                callback: Z.callback,
                next: null
              };
              N === null ? T = N = se : (N.next = se, N = se), Z = Z.next;
            } while (Z !== null);
            N === null ? T = N = o : (N.next = o, N = o);
          } else
            T = N = o;
          f = {
            baseState: b.baseState,
            firstBaseUpdate: T,
            lastBaseUpdate: N,
            shared: b.shared,
            effects: b.effects
          }, r.updateQueue = f;
          return;
        }
      }
      var le = f.lastBaseUpdate;
      le === null ? f.firstBaseUpdate = o : le.next = o, f.lastBaseUpdate = o;
    }
    function FU(r, o, f, h, b, T) {
      switch (f.tag) {
        case kI: {
          var N = f.payload;
          if (typeof N == "function") {
            xI();
            var V = N.call(T, h, b);
            {
              if (r.mode & Tr) {
                Jr(!0);
                try {
                  N.call(T, h, b);
                } finally {
                  Jr(!1);
                }
              }
              EI();
            }
            return V;
          }
          return N;
        }
        case p1:
          r.flags = r.flags & ~jo | Zt;
        case OI: {
          var Z = f.payload, se;
          if (typeof Z == "function") {
            xI(), se = Z.call(T, h, b);
            {
              if (r.mode & Tr) {
                Jr(!0);
                try {
                  Z.call(T, h, b);
                } finally {
                  Jr(!1);
                }
              }
              EI();
            }
          } else
            se = Z;
          return se == null ? h : Rn({}, h, se);
        }
        case Ww:
          return qw = !0, h;
      }
      return h;
    }
    function Xw(r, o, f, h) {
      var b = r.updateQueue;
      qw = !1, Kw = b.shared;
      var T = b.firstBaseUpdate, N = b.lastBaseUpdate, V = b.shared.pending;
      if (V !== null) {
        b.shared.pending = null;
        var Z = V, se = Z.next;
        Z.next = null, N === null ? T = se : N.next = se, N = Z;
        var le = r.alternate;
        if (le !== null) {
          var Te = le.updateQueue, xe = Te.lastBaseUpdate;
          xe !== N && (xe === null ? Te.firstBaseUpdate = se : xe.next = se, Te.lastBaseUpdate = Z);
        }
      }
      if (T !== null) {
        var Ae = b.baseState, ze = at, qe = null, Dt = null, ln = null, Jt = T;
        do {
          var Qn = Jt.lane, Un = Jt.eventTime;
          if (wc(h, Qn)) {
            if (ln !== null) {
              var Ke = {
                eventTime: Un,
                // This update is going to be committed so we never want uncommit
                // it. Using NoLane works because 0 is a subset of all bitmasks, so
                // this will never be skipped by the check above.
                lane: rr,
                tag: Jt.tag,
                payload: Jt.payload,
                callback: Jt.callback,
                next: null
              };
              ln = ln.next = Ke;
            }
            Ae = FU(r, b, Jt, Ae, o, f);
            var De = Jt.callback;
            if (De !== null && // If the update was already committed, we should not queue its
            // callback again.
            Jt.lane !== rr) {
              r.flags |= jr;
              var ft = b.effects;
              ft === null ? b.effects = [Jt] : ft.push(Jt);
            }
          } else {
            var Ie = {
              eventTime: Un,
              lane: Qn,
              tag: Jt.tag,
              payload: Jt.payload,
              callback: Jt.callback,
              next: null
            };
            ln === null ? (Dt = ln = Ie, qe = Ae) : ln = ln.next = Ie, ze = kn(ze, Qn);
          }
          if (Jt = Jt.next, Jt === null) {
            if (V = b.shared.pending, V === null)
              break;
            var $t = V, Nt = $t.next;
            $t.next = null, Jt = Nt, b.lastBaseUpdate = $t, b.shared.pending = null;
          }
        } while (!0);
        ln === null && (qe = Ae), b.baseState = qe, b.firstBaseUpdate = Dt, b.lastBaseUpdate = ln;
        var vn = b.shared.interleaved;
        if (vn !== null) {
          var On = vn;
          do
            ze = kn(ze, On.lane), On = On.next;
          while (On !== vn);
        } else T === null && (b.shared.lanes = at);
        mb(ze), r.lanes = ze, r.memoizedState = Ae;
      }
      Kw = null;
    }
    function _U(r, o) {
      if (typeof r != "function")
        throw new Error("Invalid argument passed as callback. Expected a function. Instead " + ("received: " + r));
      r.call(o);
    }
    function MI() {
      qw = !1;
    }
    function Qw() {
      return qw;
    }
    function II(r, o, f) {
      var h = o.effects;
      if (o.effects = null, h !== null)
        for (var b = 0; b < h.length; b++) {
          var T = h[b], N = T.callback;
          N !== null && (T.callback = null, _U(N, f));
        }
    }
    var By = {}, Vd = Ad(By), Uy = Ad(By), Jw = Ad(By);
    function Zw(r) {
      if (r === By)
        throw new Error("Expected host context to exist. This error is likely caused by a bug in React. Please file an issue.");
      return r;
    }
    function DI() {
      var r = Zw(Jw.current);
      return r;
    }
    function v1(r, o) {
      ea(Jw, o, r), ea(Uy, r, r), ea(Vd, By, r);
      var f = ZV(o);
      Zi(Vd, r), ea(Vd, f, r);
    }
    function Gm(r) {
      Zi(Vd, r), Zi(Uy, r), Zi(Jw, r);
    }
    function y1() {
      var r = Zw(Vd.current);
      return r;
    }
    function NI(r) {
      Zw(Jw.current);
      var o = Zw(Vd.current), f = eB(o, r.type);
      o !== f && (ea(Uy, r, r), ea(Vd, f, r));
    }
    function b1(r) {
      Uy.current === r && (Zi(Vd, r), Zi(Uy, r));
    }
    var AU = 0, LI = 1, FI = 1, Gy = 2, kl = Ad(AU);
    function C1(r, o) {
      return (r & o) !== 0;
    }
    function Wm(r) {
      return r & LI;
    }
    function S1(r, o) {
      return r & LI | o;
    }
    function $U(r, o) {
      return r | o;
    }
    function Bd(r, o) {
      ea(kl, o, r);
    }
    function qm(r) {
      Zi(kl, r);
    }
    function jU(r, o) {
      var f = r.memoizedState;
      return f !== null ? f.dehydrated !== null : (r.memoizedProps, !0);
    }
    function ex(r) {
      for (var o = r; o !== null; ) {
        if (o.tag === D) {
          var f = o.memoizedState;
          if (f !== null) {
            var h = f.dehydrated;
            if (h === null || JM(h) || jT(h))
              return o;
          }
        } else if (o.tag === G && // revealOrder undefined can't be trusted because it don't
        // keep track of whether it suspended or not.
        o.memoizedProps.revealOrder !== void 0) {
          var b = (o.flags & Zt) !== tn;
          if (b)
            return o;
        } else if (o.child !== null) {
          o.child.return = o, o = o.child;
          continue;
        }
        if (o === r)
          return null;
        for (; o.sibling === null; ) {
          if (o.return === null || o.return === r)
            return null;
          o = o.return;
        }
        o.sibling.return = o.return, o = o.sibling;
      }
      return null;
    }
    var Ha = (
      /*   */
      0
    ), Jo = (
      /* */
      1
    ), wu = (
      /*  */
      2
    ), Zo = (
      /*    */
      4
    ), Ii = (
      /*   */
      8
    ), w1 = [];
    function x1() {
      for (var r = 0; r < w1.length; r++) {
        var o = w1[r];
        o._workInProgressVersionPrimary = null;
      }
      w1.length = 0;
    }
    function zU(r, o) {
      var f = o._getVersion, h = f(o._source);
      r.mutableSourceEagerHydrationData == null ? r.mutableSourceEagerHydrationData = [o, h] : r.mutableSourceEagerHydrationData.push(o, h);
    }
    var _t = n.ReactCurrentDispatcher, Wy = n.ReactCurrentBatchConfig, E1, Km;
    E1 = /* @__PURE__ */ new Set();
    var _p = at, Rr = null, ei = null, ti = null, tx = !1, qy = !1, Ky = 0, HU = 0, VU = 25, Je = null, Hs = null, Ud = -1, T1 = !1;
    function hr() {
      {
        var r = Je;
        Hs === null ? Hs = [r] : Hs.push(r);
      }
    }
    function kt() {
      {
        var r = Je;
        Hs !== null && (Ud++, Hs[Ud] !== r && BU(r));
      }
    }
    function Ym(r) {
      r != null && !Dn(r) && d("%s received a final argument that is not an array (instead, received `%s`). When specified, the final argument must be an array.", Je, typeof r);
    }
    function BU(r) {
      {
        var o = Sn(Rr);
        if (!E1.has(o) && (E1.add(o), Hs !== null)) {
          for (var f = "", h = 30, b = 0; b <= Ud; b++) {
            for (var T = Hs[b], N = b === Ud ? r : T, V = b + 1 + ". " + T; V.length < h; )
              V += " ";
            V += N + `
`, f += V;
          }
          d(`React has detected a change in the order of Hooks called by %s. This will lead to bugs and errors if not fixed. For more information, read the Rules of Hooks: https://reactjs.org/link/rules-of-hooks

   Previous render            Next render
   ------------------------------------------------------
%s   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
`, o, f);
        }
      }
    }
    function ta() {
      throw new Error(`Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:
1. You might have mismatching versions of React and the renderer (such as React DOM)
2. You might be breaking the Rules of Hooks
3. You might have more than one copy of React in the same app
See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.`);
    }
    function R1(r, o) {
      if (T1)
        return !1;
      if (o === null)
        return d("%s received a final argument during this render, but not during the previous render. Even though the final argument is optional, its type cannot change between renders.", Je), !1;
      r.length !== o.length && d(`The final argument passed to %s changed size between renders. The order and size of this array must remain constant.

Previous: %s
Incoming: %s`, Je, "[" + o.join(", ") + "]", "[" + r.join(", ") + "]");
      for (var f = 0; f < o.length && f < r.length; f++)
        if (!ut(r[f], o[f]))
          return !1;
      return !0;
    }
    function Xm(r, o, f, h, b, T) {
      _p = T, Rr = o, Hs = r !== null ? r._debugHookTypes : null, Ud = -1, T1 = r !== null && r.type !== o.type, o.memoizedState = null, o.updateQueue = null, o.lanes = at, r !== null && r.memoizedState !== null ? _t.current = rD : Hs !== null ? _t.current = nD : _t.current = tD;
      var N = f(h, b);
      if (qy) {
        var V = 0;
        do {
          if (qy = !1, Ky = 0, V >= VU)
            throw new Error("Too many re-renders. React limits the number of renders to prevent an infinite loop.");
          V += 1, T1 = !1, ei = null, ti = null, o.updateQueue = null, Ud = -1, _t.current = oD, N = f(h, b);
        } while (qy);
      }
      _t.current = hx, o._debugHookTypes = Hs;
      var Z = ei !== null && ei.next !== null;
      if (_p = at, Rr = null, ei = null, ti = null, Je = null, Hs = null, Ud = -1, r !== null && (r.flags & yo) !== (o.flags & yo) && // Disable this warning in legacy mode, because legacy Suspense is weird
      // and creates false positives. To make this work in legacy mode, we'd
      // need to mark fibers that commit in an incomplete state, somehow. For
      // now I'll disable the warning that most of the bugs that would trigger
      // it are either exclusive to concurrent mode or exist in both.
      (r.mode & Ln) !== nn && d("Internal React error: Expected static flag was missing. Please notify the React team."), tx = !1, Z)
        throw new Error("Rendered fewer hooks than expected. This may be caused by an accidental early return statement.");
      return N;
    }
    function Qm() {
      var r = Ky !== 0;
      return Ky = 0, r;
    }
    function _I(r, o, f) {
      o.updateQueue = r.updateQueue, (o.mode & sr) !== nn ? o.flags &= -50333701 : o.flags &= -2053, r.lanes = lp(r.lanes, f);
    }
    function AI() {
      if (_t.current = hx, tx) {
        for (var r = Rr.memoizedState; r !== null; ) {
          var o = r.queue;
          o !== null && (o.pending = null), r = r.next;
        }
        tx = !1;
      }
      _p = at, Rr = null, ei = null, ti = null, Hs = null, Ud = -1, Je = null, XI = !1, qy = !1, Ky = 0;
    }
    function xu() {
      var r = {
        memoizedState: null,
        baseState: null,
        baseQueue: null,
        queue: null,
        next: null
      };
      return ti === null ? Rr.memoizedState = ti = r : ti = ti.next = r, ti;
    }
    function Vs() {
      var r;
      if (ei === null) {
        var o = Rr.alternate;
        o !== null ? r = o.memoizedState : r = null;
      } else
        r = ei.next;
      var f;
      if (ti === null ? f = Rr.memoizedState : f = ti.next, f !== null)
        ti = f, f = ti.next, ei = r;
      else {
        if (r === null)
          throw new Error("Rendered more hooks than during the previous render.");
        ei = r;
        var h = {
          memoizedState: ei.memoizedState,
          baseState: ei.baseState,
          baseQueue: ei.baseQueue,
          queue: ei.queue,
          next: null
        };
        ti === null ? Rr.memoizedState = ti = h : ti = ti.next = h;
      }
      return ti;
    }
    function $I() {
      return {
        lastEffect: null,
        stores: null
      };
    }
    function O1(r, o) {
      return typeof o == "function" ? o(r) : o;
    }
    function k1(r, o, f) {
      var h = xu(), b;
      f !== void 0 ? b = f(o) : b = o, h.memoizedState = h.baseState = b;
      var T = {
        pending: null,
        interleaved: null,
        lanes: at,
        dispatch: null,
        lastRenderedReducer: r,
        lastRenderedState: b
      };
      h.queue = T;
      var N = T.dispatch = qU.bind(null, Rr, T);
      return [h.memoizedState, N];
    }
    function P1(r, o, f) {
      var h = Vs(), b = h.queue;
      if (b === null)
        throw new Error("Should have a queue. This is likely a bug in React. Please file an issue.");
      b.lastRenderedReducer = r;
      var T = ei, N = T.baseQueue, V = b.pending;
      if (V !== null) {
        if (N !== null) {
          var Z = N.next, se = V.next;
          N.next = se, V.next = Z;
        }
        T.baseQueue !== N && d("Internal error: Expected work-in-progress queue to be a clone. This is a bug in React."), T.baseQueue = N = V, b.pending = null;
      }
      if (N !== null) {
        var le = N.next, Te = T.baseState, xe = null, Ae = null, ze = null, qe = le;
        do {
          var Dt = qe.lane;
          if (wc(_p, Dt)) {
            if (ze !== null) {
              var Jt = {
                // This update is going to be committed so we never want uncommit
                // it. Using NoLane works because 0 is a subset of all bitmasks, so
                // this will never be skipped by the check above.
                lane: rr,
                action: qe.action,
                hasEagerState: qe.hasEagerState,
                eagerState: qe.eagerState,
                next: null
              };
              ze = ze.next = Jt;
            }
            if (qe.hasEagerState)
              Te = qe.eagerState;
            else {
              var Qn = qe.action;
              Te = r(Te, Qn);
            }
          } else {
            var ln = {
              lane: Dt,
              action: qe.action,
              hasEagerState: qe.hasEagerState,
              eagerState: qe.eagerState,
              next: null
            };
            ze === null ? (Ae = ze = ln, xe = Te) : ze = ze.next = ln, Rr.lanes = kn(Rr.lanes, Dt), mb(Dt);
          }
          qe = qe.next;
        } while (qe !== null && qe !== le);
        ze === null ? xe = Te : ze.next = Ae, ut(Te, h.memoizedState) || rb(), h.memoizedState = Te, h.baseState = xe, h.baseQueue = ze, b.lastRenderedState = Te;
      }
      var Un = b.interleaved;
      if (Un !== null) {
        var Ie = Un;
        do {
          var Ke = Ie.lane;
          Rr.lanes = kn(Rr.lanes, Ke), mb(Ke), Ie = Ie.next;
        } while (Ie !== Un);
      } else N === null && (b.lanes = at);
      var De = b.dispatch;
      return [h.memoizedState, De];
    }
    function M1(r, o, f) {
      var h = Vs(), b = h.queue;
      if (b === null)
        throw new Error("Should have a queue. This is likely a bug in React. Please file an issue.");
      b.lastRenderedReducer = r;
      var T = b.dispatch, N = b.pending, V = h.memoizedState;
      if (N !== null) {
        b.pending = null;
        var Z = N.next, se = Z;
        do {
          var le = se.action;
          V = r(V, le), se = se.next;
        } while (se !== Z);
        ut(V, h.memoizedState) || rb(), h.memoizedState = V, h.baseQueue === null && (h.baseState = V), b.lastRenderedState = V;
      }
      return [V, T];
    }
    function ace(r, o, f) {
    }
    function sce(r, o, f) {
    }
    function I1(r, o, f) {
      var h = Rr, b = xu(), T, N = Mi();
      if (N) {
        if (f === void 0)
          throw new Error("Missing getServerSnapshot, which is required for server-rendered content. Will revert to client rendering.");
        T = f(), Km || T !== f() && (d("The result of getServerSnapshot should be cached to avoid an infinite loop"), Km = !0);
      } else {
        if (T = o(), !Km) {
          var V = o();
          ut(T, V) || (d("The result of getSnapshot should be cached to avoid an infinite loop"), Km = !0);
        }
        var Z = Nx();
        if (Z === null)
          throw new Error("Expected a work-in-progress root. This is a bug in React. Please file an issue.");
        hm(Z, _p) || jI(h, o, T);
      }
      b.memoizedState = T;
      var se = {
        value: T,
        getSnapshot: o
      };
      return b.queue = se, ax(HI.bind(null, h, se, r), [r]), h.flags |= Bi, Yy(Jo | Ii, zI.bind(null, h, se, T, o), void 0, null), T;
    }
    function nx(r, o, f) {
      var h = Rr, b = Vs(), T = o();
      if (!Km) {
        var N = o();
        ut(T, N) || (d("The result of getSnapshot should be cached to avoid an infinite loop"), Km = !0);
      }
      var V = b.memoizedState, Z = !ut(V, T);
      Z && (b.memoizedState = T, rb());
      var se = b.queue;
      if (Qy(HI.bind(null, h, se, r), [r]), se.getSnapshot !== o || Z || // Check if the susbcribe function changed. We can save some memory by
      // checking whether we scheduled a subscription effect above.
      ti !== null && ti.memoizedState.tag & Jo) {
        h.flags |= Bi, Yy(Jo | Ii, zI.bind(null, h, se, T, o), void 0, null);
        var le = Nx();
        if (le === null)
          throw new Error("Expected a work-in-progress root. This is a bug in React. Please file an issue.");
        hm(le, _p) || jI(h, o, T);
      }
      return T;
    }
    function jI(r, o, f) {
      r.flags |= Sd;
      var h = {
        getSnapshot: o,
        value: f
      }, b = Rr.updateQueue;
      if (b === null)
        b = $I(), Rr.updateQueue = b, b.stores = [h];
      else {
        var T = b.stores;
        T === null ? b.stores = [h] : T.push(h);
      }
    }
    function zI(r, o, f, h) {
      o.value = f, o.getSnapshot = h, VI(o) && BI(r);
    }
    function HI(r, o, f) {
      var h = function() {
        VI(o) && BI(r);
      };
      return f(h);
    }
    function VI(r) {
      var o = r.getSnapshot, f = r.value;
      try {
        var h = o();
        return !ut(f, h);
      } catch {
        return !0;
      }
    }
    function BI(r) {
      var o = za(r, hn);
      o !== null && ii(o, r, hn, Fr);
    }
    function rx(r) {
      var o = xu();
      typeof r == "function" && (r = r()), o.memoizedState = o.baseState = r;
      var f = {
        pending: null,
        interleaved: null,
        lanes: at,
        dispatch: null,
        lastRenderedReducer: O1,
        lastRenderedState: r
      };
      o.queue = f;
      var h = f.dispatch = KU.bind(null, Rr, f);
      return [o.memoizedState, h];
    }
    function D1(r) {
      return P1(O1);
    }
    function N1(r) {
      return M1(O1);
    }
    function Yy(r, o, f, h) {
      var b = {
        tag: r,
        create: o,
        destroy: f,
        deps: h,
        // Circular
        next: null
      }, T = Rr.updateQueue;
      if (T === null)
        T = $I(), Rr.updateQueue = T, T.lastEffect = b.next = b;
      else {
        var N = T.lastEffect;
        if (N === null)
          T.lastEffect = b.next = b;
        else {
          var V = N.next;
          N.next = b, b.next = V, T.lastEffect = b;
        }
      }
      return b;
    }
    function L1(r) {
      var o = xu();
      {
        var f = {
          current: r
        };
        return o.memoizedState = f, f;
      }
    }
    function ox(r) {
      var o = Vs();
      return o.memoizedState;
    }
    function Xy(r, o, f, h) {
      var b = xu(), T = h === void 0 ? null : h;
      Rr.flags |= r, b.memoizedState = Yy(Jo | o, f, void 0, T);
    }
    function ix(r, o, f, h) {
      var b = Vs(), T = h === void 0 ? null : h, N = void 0;
      if (ei !== null) {
        var V = ei.memoizedState;
        if (N = V.destroy, T !== null) {
          var Z = V.deps;
          if (R1(T, Z)) {
            b.memoizedState = Yy(o, f, N, T);
            return;
          }
        }
      }
      Rr.flags |= r, b.memoizedState = Yy(Jo | o, f, N, T);
    }
    function ax(r, o) {
      return (Rr.mode & sr) !== nn ? Xy(Ps | Bi | Hh, Ii, r, o) : Xy(Bi | Hh, Ii, r, o);
    }
    function Qy(r, o) {
      return ix(Bi, Ii, r, o);
    }
    function F1(r, o) {
      return Xy(Kn, wu, r, o);
    }
    function sx(r, o) {
      return ix(Kn, wu, r, o);
    }
    function _1(r, o) {
      var f = Kn;
      return f |= gl, (Rr.mode & sr) !== nn && (f |= ou), Xy(f, Zo, r, o);
    }
    function lx(r, o) {
      return ix(Kn, Zo, r, o);
    }
    function UI(r, o) {
      if (typeof o == "function") {
        var f = o, h = r();
        return f(h), function() {
          f(null);
        };
      } else if (o != null) {
        var b = o;
        b.hasOwnProperty("current") || d("Expected useImperativeHandle() first argument to either be a ref callback or React.createRef() object. Instead received: %s.", "an object with keys {" + Object.keys(b).join(", ") + "}");
        var T = r();
        return b.current = T, function() {
          b.current = null;
        };
      }
    }
    function A1(r, o, f) {
      typeof o != "function" && d("Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.", o !== null ? typeof o : "null");
      var h = f != null ? f.concat([r]) : null, b = Kn;
      return b |= gl, (Rr.mode & sr) !== nn && (b |= ou), Xy(b, Zo, UI.bind(null, o, r), h);
    }
    function ux(r, o, f) {
      typeof o != "function" && d("Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.", o !== null ? typeof o : "null");
      var h = f != null ? f.concat([r]) : null;
      return ix(Kn, Zo, UI.bind(null, o, r), h);
    }
    function UU(r, o) {
    }
    var cx = UU;
    function $1(r, o) {
      var f = xu(), h = o === void 0 ? null : o;
      return f.memoizedState = [r, h], r;
    }
    function dx(r, o) {
      var f = Vs(), h = o === void 0 ? null : o, b = f.memoizedState;
      if (b !== null && h !== null) {
        var T = b[1];
        if (R1(h, T))
          return b[0];
      }
      return f.memoizedState = [r, h], r;
    }
    function j1(r, o) {
      var f = xu(), h = o === void 0 ? null : o, b = r();
      return f.memoizedState = [b, h], b;
    }
    function fx(r, o) {
      var f = Vs(), h = o === void 0 ? null : o, b = f.memoizedState;
      if (b !== null && h !== null) {
        var T = b[1];
        if (R1(h, T))
          return b[0];
      }
      var N = r();
      return f.memoizedState = [N, h], N;
    }
    function z1(r) {
      var o = xu();
      return o.memoizedState = r, r;
    }
    function GI(r) {
      var o = Vs(), f = ei, h = f.memoizedState;
      return qI(o, h, r);
    }
    function WI(r) {
      var o = Vs();
      if (ei === null)
        return o.memoizedState = r, r;
      var f = ei.memoizedState;
      return qI(o, f, r);
    }
    function qI(r, o, f) {
      var h = !Zv(_p);
      if (h) {
        if (!ut(f, o)) {
          var b = ny();
          Rr.lanes = kn(Rr.lanes, b), mb(b), r.baseState = !0;
        }
        return o;
      } else
        return r.baseState && (r.baseState = !1, rb()), r.memoizedState = f, f;
    }
    function GU(r, o, f) {
      var h = Aa();
      So(BS(h, Ns)), r(!0);
      var b = Wy.transition;
      Wy.transition = {};
      var T = Wy.transition;
      Wy.transition._updatedFibers = /* @__PURE__ */ new Set();
      try {
        r(!1), o();
      } finally {
        if (So(h), Wy.transition = b, b === null && T._updatedFibers) {
          var N = T._updatedFibers.size;
          N > 10 && u("Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table."), T._updatedFibers.clear();
        }
      }
    }
    function H1() {
      var r = rx(!1), o = r[0], f = r[1], h = GU.bind(null, f), b = xu();
      return b.memoizedState = h, [o, h];
    }
    function KI() {
      var r = D1(), o = r[0], f = Vs(), h = f.memoizedState;
      return [o, h];
    }
    function YI() {
      var r = N1(), o = r[0], f = Vs(), h = f.memoizedState;
      return [o, h];
    }
    var XI = !1;
    function WU() {
      return XI;
    }
    function V1() {
      var r = xu(), o = Nx(), f = o.identifierPrefix, h;
      if (Mi()) {
        var b = uU();
        h = ":" + f + "R" + b;
        var T = Ky++;
        T > 0 && (h += "H" + T.toString(32)), h += ":";
      } else {
        var N = HU++;
        h = ":" + f + "r" + N.toString(32) + ":";
      }
      return r.memoizedState = h, h;
    }
    function px() {
      var r = Vs(), o = r.memoizedState;
      return o;
    }
    function qU(r, o, f) {
      typeof arguments[3] == "function" && d("State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect().");
      var h = Yd(r), b = {
        lane: h,
        action: f,
        hasEagerState: !1,
        eagerState: null,
        next: null
      };
      if (QI(r))
        JI(o, b);
      else {
        var T = RI(r, o, b, h);
        if (T !== null) {
          var N = va();
          ii(T, r, h, N), ZI(T, o, h);
        }
      }
      eD(r, h);
    }
    function KU(r, o, f) {
      typeof arguments[3] == "function" && d("State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect().");
      var h = Yd(r), b = {
        lane: h,
        action: f,
        hasEagerState: !1,
        eagerState: null,
        next: null
      };
      if (QI(r))
        JI(o, b);
      else {
        var T = r.alternate;
        if (r.lanes === at && (T === null || T.lanes === at)) {
          var N = o.lastRenderedReducer;
          if (N !== null) {
            var V;
            V = _t.current, _t.current = Pl;
            try {
              var Z = o.lastRenderedState, se = N(Z, f);
              if (b.hasEagerState = !0, b.eagerState = se, ut(se, Z)) {
                DU(r, o, b, h);
                return;
              }
            } catch {
            } finally {
              _t.current = V;
            }
          }
        }
        var le = RI(r, o, b, h);
        if (le !== null) {
          var Te = va();
          ii(le, r, h, Te), ZI(le, o, h);
        }
      }
      eD(r, h);
    }
    function QI(r) {
      var o = r.alternate;
      return r === Rr || o !== null && o === Rr;
    }
    function JI(r, o) {
      qy = tx = !0;
      var f = r.pending;
      f === null ? o.next = o : (o.next = f.next, f.next = o), r.pending = o;
    }
    function ZI(r, o, f) {
      if (ty(f)) {
        var h = o.lanes;
        h = ry(h, r.pendingLanes);
        var b = kn(h, f);
        o.lanes = b, gm(r, b);
      }
    }
    function eD(r, o, f) {
      Jf(r, o);
    }
    var hx = {
      readContext: Bo,
      useCallback: ta,
      useContext: ta,
      useEffect: ta,
      useImperativeHandle: ta,
      useInsertionEffect: ta,
      useLayoutEffect: ta,
      useMemo: ta,
      useReducer: ta,
      useRef: ta,
      useState: ta,
      useDebugValue: ta,
      useDeferredValue: ta,
      useTransition: ta,
      useMutableSource: ta,
      useSyncExternalStore: ta,
      useId: ta,
      unstable_isNewReconciler: ne
    }, tD = null, nD = null, rD = null, oD = null, Eu = null, Pl = null, mx = null;
    {
      var B1 = function() {
        d("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
      }, Tn = function() {
        d("Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. You can only call Hooks at the top level of your React function. For more information, see https://reactjs.org/link/rules-of-hooks");
      };
      tD = {
        readContext: function(r) {
          return Bo(r);
        },
        useCallback: function(r, o) {
          return Je = "useCallback", hr(), Ym(o), $1(r, o);
        },
        useContext: function(r) {
          return Je = "useContext", hr(), Bo(r);
        },
        useEffect: function(r, o) {
          return Je = "useEffect", hr(), Ym(o), ax(r, o);
        },
        useImperativeHandle: function(r, o, f) {
          return Je = "useImperativeHandle", hr(), Ym(f), A1(r, o, f);
        },
        useInsertionEffect: function(r, o) {
          return Je = "useInsertionEffect", hr(), Ym(o), F1(r, o);
        },
        useLayoutEffect: function(r, o) {
          return Je = "useLayoutEffect", hr(), Ym(o), _1(r, o);
        },
        useMemo: function(r, o) {
          Je = "useMemo", hr(), Ym(o);
          var f = _t.current;
          _t.current = Eu;
          try {
            return j1(r, o);
          } finally {
            _t.current = f;
          }
        },
        useReducer: function(r, o, f) {
          Je = "useReducer", hr();
          var h = _t.current;
          _t.current = Eu;
          try {
            return k1(r, o, f);
          } finally {
            _t.current = h;
          }
        },
        useRef: function(r) {
          return Je = "useRef", hr(), L1(r);
        },
        useState: function(r) {
          Je = "useState", hr();
          var o = _t.current;
          _t.current = Eu;
          try {
            return rx(r);
          } finally {
            _t.current = o;
          }
        },
        useDebugValue: function(r, o) {
          return Je = "useDebugValue", hr(), void 0;
        },
        useDeferredValue: function(r) {
          return Je = "useDeferredValue", hr(), z1(r);
        },
        useTransition: function() {
          return Je = "useTransition", hr(), H1();
        },
        useMutableSource: function(r, o, f) {
          return Je = "useMutableSource", hr(), void 0;
        },
        useSyncExternalStore: function(r, o, f) {
          return Je = "useSyncExternalStore", hr(), I1(r, o, f);
        },
        useId: function() {
          return Je = "useId", hr(), V1();
        },
        unstable_isNewReconciler: ne
      }, nD = {
        readContext: function(r) {
          return Bo(r);
        },
        useCallback: function(r, o) {
          return Je = "useCallback", kt(), $1(r, o);
        },
        useContext: function(r) {
          return Je = "useContext", kt(), Bo(r);
        },
        useEffect: function(r, o) {
          return Je = "useEffect", kt(), ax(r, o);
        },
        useImperativeHandle: function(r, o, f) {
          return Je = "useImperativeHandle", kt(), A1(r, o, f);
        },
        useInsertionEffect: function(r, o) {
          return Je = "useInsertionEffect", kt(), F1(r, o);
        },
        useLayoutEffect: function(r, o) {
          return Je = "useLayoutEffect", kt(), _1(r, o);
        },
        useMemo: function(r, o) {
          Je = "useMemo", kt();
          var f = _t.current;
          _t.current = Eu;
          try {
            return j1(r, o);
          } finally {
            _t.current = f;
          }
        },
        useReducer: function(r, o, f) {
          Je = "useReducer", kt();
          var h = _t.current;
          _t.current = Eu;
          try {
            return k1(r, o, f);
          } finally {
            _t.current = h;
          }
        },
        useRef: function(r) {
          return Je = "useRef", kt(), L1(r);
        },
        useState: function(r) {
          Je = "useState", kt();
          var o = _t.current;
          _t.current = Eu;
          try {
            return rx(r);
          } finally {
            _t.current = o;
          }
        },
        useDebugValue: function(r, o) {
          return Je = "useDebugValue", kt(), void 0;
        },
        useDeferredValue: function(r) {
          return Je = "useDeferredValue", kt(), z1(r);
        },
        useTransition: function() {
          return Je = "useTransition", kt(), H1();
        },
        useMutableSource: function(r, o, f) {
          return Je = "useMutableSource", kt(), void 0;
        },
        useSyncExternalStore: function(r, o, f) {
          return Je = "useSyncExternalStore", kt(), I1(r, o, f);
        },
        useId: function() {
          return Je = "useId", kt(), V1();
        },
        unstable_isNewReconciler: ne
      }, rD = {
        readContext: function(r) {
          return Bo(r);
        },
        useCallback: function(r, o) {
          return Je = "useCallback", kt(), dx(r, o);
        },
        useContext: function(r) {
          return Je = "useContext", kt(), Bo(r);
        },
        useEffect: function(r, o) {
          return Je = "useEffect", kt(), Qy(r, o);
        },
        useImperativeHandle: function(r, o, f) {
          return Je = "useImperativeHandle", kt(), ux(r, o, f);
        },
        useInsertionEffect: function(r, o) {
          return Je = "useInsertionEffect", kt(), sx(r, o);
        },
        useLayoutEffect: function(r, o) {
          return Je = "useLayoutEffect", kt(), lx(r, o);
        },
        useMemo: function(r, o) {
          Je = "useMemo", kt();
          var f = _t.current;
          _t.current = Pl;
          try {
            return fx(r, o);
          } finally {
            _t.current = f;
          }
        },
        useReducer: function(r, o, f) {
          Je = "useReducer", kt();
          var h = _t.current;
          _t.current = Pl;
          try {
            return P1(r, o, f);
          } finally {
            _t.current = h;
          }
        },
        useRef: function(r) {
          return Je = "useRef", kt(), ox();
        },
        useState: function(r) {
          Je = "useState", kt();
          var o = _t.current;
          _t.current = Pl;
          try {
            return D1(r);
          } finally {
            _t.current = o;
          }
        },
        useDebugValue: function(r, o) {
          return Je = "useDebugValue", kt(), cx();
        },
        useDeferredValue: function(r) {
          return Je = "useDeferredValue", kt(), GI(r);
        },
        useTransition: function() {
          return Je = "useTransition", kt(), KI();
        },
        useMutableSource: function(r, o, f) {
          return Je = "useMutableSource", kt(), void 0;
        },
        useSyncExternalStore: function(r, o, f) {
          return Je = "useSyncExternalStore", kt(), nx(r, o);
        },
        useId: function() {
          return Je = "useId", kt(), px();
        },
        unstable_isNewReconciler: ne
      }, oD = {
        readContext: function(r) {
          return Bo(r);
        },
        useCallback: function(r, o) {
          return Je = "useCallback", kt(), dx(r, o);
        },
        useContext: function(r) {
          return Je = "useContext", kt(), Bo(r);
        },
        useEffect: function(r, o) {
          return Je = "useEffect", kt(), Qy(r, o);
        },
        useImperativeHandle: function(r, o, f) {
          return Je = "useImperativeHandle", kt(), ux(r, o, f);
        },
        useInsertionEffect: function(r, o) {
          return Je = "useInsertionEffect", kt(), sx(r, o);
        },
        useLayoutEffect: function(r, o) {
          return Je = "useLayoutEffect", kt(), lx(r, o);
        },
        useMemo: function(r, o) {
          Je = "useMemo", kt();
          var f = _t.current;
          _t.current = mx;
          try {
            return fx(r, o);
          } finally {
            _t.current = f;
          }
        },
        useReducer: function(r, o, f) {
          Je = "useReducer", kt();
          var h = _t.current;
          _t.current = mx;
          try {
            return M1(r, o, f);
          } finally {
            _t.current = h;
          }
        },
        useRef: function(r) {
          return Je = "useRef", kt(), ox();
        },
        useState: function(r) {
          Je = "useState", kt();
          var o = _t.current;
          _t.current = mx;
          try {
            return N1(r);
          } finally {
            _t.current = o;
          }
        },
        useDebugValue: function(r, o) {
          return Je = "useDebugValue", kt(), cx();
        },
        useDeferredValue: function(r) {
          return Je = "useDeferredValue", kt(), WI(r);
        },
        useTransition: function() {
          return Je = "useTransition", kt(), YI();
        },
        useMutableSource: function(r, o, f) {
          return Je = "useMutableSource", kt(), void 0;
        },
        useSyncExternalStore: function(r, o, f) {
          return Je = "useSyncExternalStore", kt(), nx(r, o);
        },
        useId: function() {
          return Je = "useId", kt(), px();
        },
        unstable_isNewReconciler: ne
      }, Eu = {
        readContext: function(r) {
          return B1(), Bo(r);
        },
        useCallback: function(r, o) {
          return Je = "useCallback", Tn(), hr(), $1(r, o);
        },
        useContext: function(r) {
          return Je = "useContext", Tn(), hr(), Bo(r);
        },
        useEffect: function(r, o) {
          return Je = "useEffect", Tn(), hr(), ax(r, o);
        },
        useImperativeHandle: function(r, o, f) {
          return Je = "useImperativeHandle", Tn(), hr(), A1(r, o, f);
        },
        useInsertionEffect: function(r, o) {
          return Je = "useInsertionEffect", Tn(), hr(), F1(r, o);
        },
        useLayoutEffect: function(r, o) {
          return Je = "useLayoutEffect", Tn(), hr(), _1(r, o);
        },
        useMemo: function(r, o) {
          Je = "useMemo", Tn(), hr();
          var f = _t.current;
          _t.current = Eu;
          try {
            return j1(r, o);
          } finally {
            _t.current = f;
          }
        },
        useReducer: function(r, o, f) {
          Je = "useReducer", Tn(), hr();
          var h = _t.current;
          _t.current = Eu;
          try {
            return k1(r, o, f);
          } finally {
            _t.current = h;
          }
        },
        useRef: function(r) {
          return Je = "useRef", Tn(), hr(), L1(r);
        },
        useState: function(r) {
          Je = "useState", Tn(), hr();
          var o = _t.current;
          _t.current = Eu;
          try {
            return rx(r);
          } finally {
            _t.current = o;
          }
        },
        useDebugValue: function(r, o) {
          return Je = "useDebugValue", Tn(), hr(), void 0;
        },
        useDeferredValue: function(r) {
          return Je = "useDeferredValue", Tn(), hr(), z1(r);
        },
        useTransition: function() {
          return Je = "useTransition", Tn(), hr(), H1();
        },
        useMutableSource: function(r, o, f) {
          return Je = "useMutableSource", Tn(), hr(), void 0;
        },
        useSyncExternalStore: function(r, o, f) {
          return Je = "useSyncExternalStore", Tn(), hr(), I1(r, o, f);
        },
        useId: function() {
          return Je = "useId", Tn(), hr(), V1();
        },
        unstable_isNewReconciler: ne
      }, Pl = {
        readContext: function(r) {
          return B1(), Bo(r);
        },
        useCallback: function(r, o) {
          return Je = "useCallback", Tn(), kt(), dx(r, o);
        },
        useContext: function(r) {
          return Je = "useContext", Tn(), kt(), Bo(r);
        },
        useEffect: function(r, o) {
          return Je = "useEffect", Tn(), kt(), Qy(r, o);
        },
        useImperativeHandle: function(r, o, f) {
          return Je = "useImperativeHandle", Tn(), kt(), ux(r, o, f);
        },
        useInsertionEffect: function(r, o) {
          return Je = "useInsertionEffect", Tn(), kt(), sx(r, o);
        },
        useLayoutEffect: function(r, o) {
          return Je = "useLayoutEffect", Tn(), kt(), lx(r, o);
        },
        useMemo: function(r, o) {
          Je = "useMemo", Tn(), kt();
          var f = _t.current;
          _t.current = Pl;
          try {
            return fx(r, o);
          } finally {
            _t.current = f;
          }
        },
        useReducer: function(r, o, f) {
          Je = "useReducer", Tn(), kt();
          var h = _t.current;
          _t.current = Pl;
          try {
            return P1(r, o, f);
          } finally {
            _t.current = h;
          }
        },
        useRef: function(r) {
          return Je = "useRef", Tn(), kt(), ox();
        },
        useState: function(r) {
          Je = "useState", Tn(), kt();
          var o = _t.current;
          _t.current = Pl;
          try {
            return D1(r);
          } finally {
            _t.current = o;
          }
        },
        useDebugValue: function(r, o) {
          return Je = "useDebugValue", Tn(), kt(), cx();
        },
        useDeferredValue: function(r) {
          return Je = "useDeferredValue", Tn(), kt(), GI(r);
        },
        useTransition: function() {
          return Je = "useTransition", Tn(), kt(), KI();
        },
        useMutableSource: function(r, o, f) {
          return Je = "useMutableSource", Tn(), kt(), void 0;
        },
        useSyncExternalStore: function(r, o, f) {
          return Je = "useSyncExternalStore", Tn(), kt(), nx(r, o);
        },
        useId: function() {
          return Je = "useId", Tn(), kt(), px();
        },
        unstable_isNewReconciler: ne
      }, mx = {
        readContext: function(r) {
          return B1(), Bo(r);
        },
        useCallback: function(r, o) {
          return Je = "useCallback", Tn(), kt(), dx(r, o);
        },
        useContext: function(r) {
          return Je = "useContext", Tn(), kt(), Bo(r);
        },
        useEffect: function(r, o) {
          return Je = "useEffect", Tn(), kt(), Qy(r, o);
        },
        useImperativeHandle: function(r, o, f) {
          return Je = "useImperativeHandle", Tn(), kt(), ux(r, o, f);
        },
        useInsertionEffect: function(r, o) {
          return Je = "useInsertionEffect", Tn(), kt(), sx(r, o);
        },
        useLayoutEffect: function(r, o) {
          return Je = "useLayoutEffect", Tn(), kt(), lx(r, o);
        },
        useMemo: function(r, o) {
          Je = "useMemo", Tn(), kt();
          var f = _t.current;
          _t.current = Pl;
          try {
            return fx(r, o);
          } finally {
            _t.current = f;
          }
        },
        useReducer: function(r, o, f) {
          Je = "useReducer", Tn(), kt();
          var h = _t.current;
          _t.current = Pl;
          try {
            return M1(r, o, f);
          } finally {
            _t.current = h;
          }
        },
        useRef: function(r) {
          return Je = "useRef", Tn(), kt(), ox();
        },
        useState: function(r) {
          Je = "useState", Tn(), kt();
          var o = _t.current;
          _t.current = Pl;
          try {
            return N1(r);
          } finally {
            _t.current = o;
          }
        },
        useDebugValue: function(r, o) {
          return Je = "useDebugValue", Tn(), kt(), cx();
        },
        useDeferredValue: function(r) {
          return Je = "useDeferredValue", Tn(), kt(), WI(r);
        },
        useTransition: function() {
          return Je = "useTransition", Tn(), kt(), YI();
        },
        useMutableSource: function(r, o, f) {
          return Je = "useMutableSource", Tn(), kt(), void 0;
        },
        useSyncExternalStore: function(r, o, f) {
          return Je = "useSyncExternalStore", Tn(), kt(), nx(r, o);
        },
        useId: function() {
          return Je = "useId", Tn(), kt(), px();
        },
        unstable_isNewReconciler: ne
      };
    }
    var Gd = t.unstable_now, iD = 0, gx = -1, Jy = -1, vx = -1, U1 = !1, yx = !1;
    function aD() {
      return U1;
    }
    function YU() {
      yx = !0;
    }
    function XU() {
      U1 = !1, yx = !1;
    }
    function QU() {
      U1 = yx, yx = !1;
    }
    function sD() {
      return iD;
    }
    function lD() {
      iD = Gd();
    }
    function G1(r) {
      Jy = Gd(), r.actualStartTime < 0 && (r.actualStartTime = Gd());
    }
    function uD(r) {
      Jy = -1;
    }
    function bx(r, o) {
      if (Jy >= 0) {
        var f = Gd() - Jy;
        r.actualDuration += f, o && (r.selfBaseDuration = f), Jy = -1;
      }
    }
    function Tu(r) {
      if (gx >= 0) {
        var o = Gd() - gx;
        gx = -1;
        for (var f = r.return; f !== null; ) {
          switch (f.tag) {
            case C:
              var h = f.stateNode;
              h.effectDuration += o;
              return;
            case M:
              var b = f.stateNode;
              b.effectDuration += o;
              return;
          }
          f = f.return;
        }
      }
    }
    function W1(r) {
      if (vx >= 0) {
        var o = Gd() - vx;
        vx = -1;
        for (var f = r.return; f !== null; ) {
          switch (f.tag) {
            case C:
              var h = f.stateNode;
              h !== null && (h.passiveEffectDuration += o);
              return;
            case M:
              var b = f.stateNode;
              b !== null && (b.passiveEffectDuration += o);
              return;
          }
          f = f.return;
        }
      }
    }
    function Ru() {
      gx = Gd();
    }
    function q1() {
      vx = Gd();
    }
    function K1(r) {
      for (var o = r.child; o; )
        r.actualDuration += o.actualDuration, o = o.sibling;
    }
    function Ml(r, o) {
      if (r && r.defaultProps) {
        var f = Rn({}, o), h = r.defaultProps;
        for (var b in h)
          f[b] === void 0 && (f[b] = h[b]);
        return f;
      }
      return o;
    }
    var Y1 = {}, X1, Q1, J1, Z1, eR, cD, Cx, tR, nR, rR, Zy;
    {
      X1 = /* @__PURE__ */ new Set(), Q1 = /* @__PURE__ */ new Set(), J1 = /* @__PURE__ */ new Set(), Z1 = /* @__PURE__ */ new Set(), tR = /* @__PURE__ */ new Set(), eR = /* @__PURE__ */ new Set(), nR = /* @__PURE__ */ new Set(), rR = /* @__PURE__ */ new Set(), Zy = /* @__PURE__ */ new Set();
      var dD = /* @__PURE__ */ new Set();
      Cx = function(r, o) {
        if (!(r === null || typeof r == "function")) {
          var f = o + "_" + r;
          dD.has(f) || (dD.add(f), d("%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", o, r));
        }
      }, cD = function(r, o) {
        if (o === void 0) {
          var f = Zn(r) || "Component";
          eR.has(f) || (eR.add(f), d("%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. You have returned undefined.", f));
        }
      }, Object.defineProperty(Y1, "_processChildContext", {
        enumerable: !1,
        value: function() {
          throw new Error("_processChildContext is not available in React 16+. This likely means you have multiple copies of React and are attempting to nest a React 15 tree inside a React 16 tree using unstable_renderSubtreeIntoContainer, which isn't supported. Try to make sure you have only one copy of React (and ideally, switch to ReactDOM.createPortal).");
        }
      }), Object.freeze(Y1);
    }
    function oR(r, o, f, h) {
      var b = r.memoizedState, T = f(h, b);
      {
        if (r.mode & Tr) {
          Jr(!0);
          try {
            T = f(h, b);
          } finally {
            Jr(!1);
          }
        }
        cD(o, T);
      }
      var N = T == null ? b : Rn({}, b, T);
      if (r.memoizedState = N, r.lanes === at) {
        var V = r.updateQueue;
        V.baseState = N;
      }
    }
    var iR = {
      isMounted: OS,
      enqueueSetState: function(r, o, f) {
        var h = Cd(r), b = va(), T = Yd(h), N = Lc(b, T);
        N.payload = o, f != null && (Cx(f, "setState"), N.callback = f);
        var V = Hd(h, N, T);
        V !== null && (ii(V, h, T, b), Yw(V, h, T)), Jf(h, T);
      },
      enqueueReplaceState: function(r, o, f) {
        var h = Cd(r), b = va(), T = Yd(h), N = Lc(b, T);
        N.tag = kI, N.payload = o, f != null && (Cx(f, "replaceState"), N.callback = f);
        var V = Hd(h, N, T);
        V !== null && (ii(V, h, T, b), Yw(V, h, T)), Jf(h, T);
      },
      enqueueForceUpdate: function(r, o) {
        var f = Cd(r), h = va(), b = Yd(f), T = Lc(h, b);
        T.tag = Ww, o != null && (Cx(o, "forceUpdate"), T.callback = o);
        var N = Hd(f, T, b);
        N !== null && (ii(N, f, b, h), Yw(N, f, b)), Kh(f, b);
      }
    };
    function fD(r, o, f, h, b, T, N) {
      var V = r.stateNode;
      if (typeof V.shouldComponentUpdate == "function") {
        var Z = V.shouldComponentUpdate(h, T, N);
        {
          if (r.mode & Tr) {
            Jr(!0);
            try {
              Z = V.shouldComponentUpdate(h, T, N);
            } finally {
              Jr(!1);
            }
          }
          Z === void 0 && d("%s.shouldComponentUpdate(): Returned undefined instead of a boolean value. Make sure to return true or false.", Zn(o) || "Component");
        }
        return Z;
      }
      return o.prototype && o.prototype.isPureReactComponent ? !qt(f, h) || !qt(b, T) : !0;
    }
    function JU(r, o, f) {
      var h = r.stateNode;
      {
        var b = Zn(o) || "Component", T = h.render;
        T || (o.prototype && typeof o.prototype.render == "function" ? d("%s(...): No `render` method found on the returned component instance: did you accidentally return an object from the constructor?", b) : d("%s(...): No `render` method found on the returned component instance: you may have forgotten to define `render`.", b)), h.getInitialState && !h.getInitialState.isReactClassApproved && !h.state && d("getInitialState was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Did you mean to define a state property instead?", b), h.getDefaultProps && !h.getDefaultProps.isReactClassApproved && d("getDefaultProps was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Use a static property to define defaultProps instead.", b), h.propTypes && d("propTypes was defined as an instance property on %s. Use a static property to define propTypes instead.", b), h.contextType && d("contextType was defined as an instance property on %s. Use a static property to define contextType instead.", b), o.childContextTypes && !Zy.has(o) && // Strict Mode has its own warning for legacy context, so we can skip
        // this one.
        (r.mode & Tr) === nn && (Zy.add(o), d(`%s uses the legacy childContextTypes API which is no longer supported and will be removed in the next major release. Use React.createContext() instead

.Learn more about this warning here: https://reactjs.org/link/legacy-context`, b)), o.contextTypes && !Zy.has(o) && // Strict Mode has its own warning for legacy context, so we can skip
        // this one.
        (r.mode & Tr) === nn && (Zy.add(o), d(`%s uses the legacy contextTypes API which is no longer supported and will be removed in the next major release. Use React.createContext() with static contextType instead.

Learn more about this warning here: https://reactjs.org/link/legacy-context`, b)), h.contextTypes && d("contextTypes was defined as an instance property on %s. Use a static property to define contextTypes instead.", b), o.contextType && o.contextTypes && !nR.has(o) && (nR.add(o), d("%s declares both contextTypes and contextType static properties. The legacy contextTypes property will be ignored.", b)), typeof h.componentShouldUpdate == "function" && d("%s has a method called componentShouldUpdate(). Did you mean shouldComponentUpdate()? The name is phrased as a question because the function is expected to return a value.", b), o.prototype && o.prototype.isPureReactComponent && typeof h.shouldComponentUpdate < "u" && d("%s has a method called shouldComponentUpdate(). shouldComponentUpdate should not be used when extending React.PureComponent. Please extend React.Component if shouldComponentUpdate is used.", Zn(o) || "A pure component"), typeof h.componentDidUnmount == "function" && d("%s has a method called componentDidUnmount(). But there is no such lifecycle method. Did you mean componentWillUnmount()?", b), typeof h.componentDidReceiveProps == "function" && d("%s has a method called componentDidReceiveProps(). But there is no such lifecycle method. If you meant to update the state in response to changing props, use componentWillReceiveProps(). If you meant to fetch data or run side-effects or mutations after React has updated the UI, use componentDidUpdate().", b), typeof h.componentWillRecieveProps == "function" && d("%s has a method called componentWillRecieveProps(). Did you mean componentWillReceiveProps()?", b), typeof h.UNSAFE_componentWillRecieveProps == "function" && d("%s has a method called UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?", b);
        var N = h.props !== f;
        h.props !== void 0 && N && d("%s(...): When calling super() in `%s`, make sure to pass up the same props that your component's constructor was passed.", b, b), h.defaultProps && d("Setting defaultProps as an instance property on %s is not supported and will be ignored. Instead, define defaultProps as a static property on %s.", b, b), typeof h.getSnapshotBeforeUpdate == "function" && typeof h.componentDidUpdate != "function" && !J1.has(o) && (J1.add(o), d("%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). This component defines getSnapshotBeforeUpdate() only.", Zn(o))), typeof h.getDerivedStateFromProps == "function" && d("%s: getDerivedStateFromProps() is defined as an instance method and will be ignored. Instead, declare it as a static method.", b), typeof h.getDerivedStateFromError == "function" && d("%s: getDerivedStateFromError() is defined as an instance method and will be ignored. Instead, declare it as a static method.", b), typeof o.getSnapshotBeforeUpdate == "function" && d("%s: getSnapshotBeforeUpdate() is defined as a static method and will be ignored. Instead, declare it as an instance method.", b);
        var V = h.state;
        V && (typeof V != "object" || Dn(V)) && d("%s.state: must be set to an object or null", b), typeof h.getChildContext == "function" && typeof o.childContextTypes != "object" && d("%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().", b);
      }
    }
    function pD(r, o) {
      o.updater = iR, r.stateNode = o, lc(o, r), o._reactInternalInstance = Y1;
    }
    function hD(r, o, f) {
      var h = !1, b = as, T = as, N = o.contextType;
      if ("contextType" in o) {
        var V = (
          // Allow null for conditional declaration
          N === null || N !== void 0 && N.$$typeof === ve && N._context === void 0
        );
        if (!V && !rR.has(o)) {
          rR.add(o);
          var Z = "";
          N === void 0 ? Z = " However, it is set to undefined. This can be caused by a typo or by mixing up named and default imports. This can also happen due to a circular dependency, so try moving the createContext() call to a separate file." : typeof N != "object" ? Z = " However, it is set to a " + typeof N + "." : N.$$typeof === mo ? Z = " Did you accidentally pass the Context.Provider instead?" : N._context !== void 0 ? Z = " Did you accidentally pass the Context.Consumer instead?" : Z = " However, it is set to an object with keys {" + Object.keys(N).join(", ") + "}.", d("%s defines an invalid contextType. contextType should point to the Context object returned by React.createContext().%s", Zn(o) || "Component", Z);
        }
      }
      if (typeof N == "object" && N !== null)
        T = Bo(N);
      else {
        b = Am(r, o, !0);
        var se = o.contextTypes;
        h = se != null, T = h ? $m(r, b) : as;
      }
      var le = new o(f, T);
      if (r.mode & Tr) {
        Jr(!0);
        try {
          le = new o(f, T);
        } finally {
          Jr(!1);
        }
      }
      var Te = r.memoizedState = le.state !== null && le.state !== void 0 ? le.state : null;
      pD(r, le);
      {
        if (typeof o.getDerivedStateFromProps == "function" && Te === null) {
          var xe = Zn(o) || "Component";
          Q1.has(xe) || (Q1.add(xe), d("`%s` uses `getDerivedStateFromProps` but its initial state is %s. This is not recommended. Instead, define the initial state by assigning an object to `this.state` in the constructor of `%s`. This ensures that `getDerivedStateFromProps` arguments have a consistent shape.", xe, le.state === null ? "null" : "undefined", xe));
        }
        if (typeof o.getDerivedStateFromProps == "function" || typeof le.getSnapshotBeforeUpdate == "function") {
          var Ae = null, ze = null, qe = null;
          if (typeof le.componentWillMount == "function" && le.componentWillMount.__suppressDeprecationWarning !== !0 ? Ae = "componentWillMount" : typeof le.UNSAFE_componentWillMount == "function" && (Ae = "UNSAFE_componentWillMount"), typeof le.componentWillReceiveProps == "function" && le.componentWillReceiveProps.__suppressDeprecationWarning !== !0 ? ze = "componentWillReceiveProps" : typeof le.UNSAFE_componentWillReceiveProps == "function" && (ze = "UNSAFE_componentWillReceiveProps"), typeof le.componentWillUpdate == "function" && le.componentWillUpdate.__suppressDeprecationWarning !== !0 ? qe = "componentWillUpdate" : typeof le.UNSAFE_componentWillUpdate == "function" && (qe = "UNSAFE_componentWillUpdate"), Ae !== null || ze !== null || qe !== null) {
            var Dt = Zn(o) || "Component", ln = typeof o.getDerivedStateFromProps == "function" ? "getDerivedStateFromProps()" : "getSnapshotBeforeUpdate()";
            Z1.has(Dt) || (Z1.add(Dt), d(`Unsafe legacy lifecycles will not be called for components using new component APIs.

%s uses %s but also contains the following legacy lifecycles:%s%s%s

The above lifecycles should be removed. Learn more about this warning here:
https://reactjs.org/link/unsafe-component-lifecycles`, Dt, ln, Ae !== null ? `
  ` + Ae : "", ze !== null ? `
  ` + ze : "", qe !== null ? `
  ` + qe : ""));
          }
        }
      }
      return h && rI(r, b, T), le;
    }
    function ZU(r, o) {
      var f = o.state;
      typeof o.componentWillMount == "function" && o.componentWillMount(), typeof o.UNSAFE_componentWillMount == "function" && o.UNSAFE_componentWillMount(), f !== o.state && (d("%s.componentWillMount(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", Sn(r) || "Component"), iR.enqueueReplaceState(o, o.state, null));
    }
    function mD(r, o, f, h) {
      var b = o.state;
      if (typeof o.componentWillReceiveProps == "function" && o.componentWillReceiveProps(f, h), typeof o.UNSAFE_componentWillReceiveProps == "function" && o.UNSAFE_componentWillReceiveProps(f, h), o.state !== b) {
        {
          var T = Sn(r) || "Component";
          X1.has(T) || (X1.add(T), d("%s.componentWillReceiveProps(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", T));
        }
        iR.enqueueReplaceState(o, o.state, null);
      }
    }
    function aR(r, o, f, h) {
      JU(r, o, f);
      var b = r.stateNode;
      b.props = f, b.state = r.memoizedState, b.refs = {}, m1(r);
      var T = o.contextType;
      if (typeof T == "object" && T !== null)
        b.context = Bo(T);
      else {
        var N = Am(r, o, !0);
        b.context = $m(r, N);
      }
      {
        if (b.state === f) {
          var V = Zn(o) || "Component";
          tR.has(V) || (tR.add(V), d("%s: It is not recommended to assign props directly to state because updates to props won't be reflected in state. In most cases, it is better to use props directly.", V));
        }
        r.mode & Tr && Ol.recordLegacyContextWarning(r, b), Ol.recordUnsafeLifecycleWarnings(r, b);
      }
      b.state = r.memoizedState;
      var Z = o.getDerivedStateFromProps;
      if (typeof Z == "function" && (oR(r, o, Z, f), b.state = r.memoizedState), typeof o.getDerivedStateFromProps != "function" && typeof b.getSnapshotBeforeUpdate != "function" && (typeof b.UNSAFE_componentWillMount == "function" || typeof b.componentWillMount == "function") && (ZU(r, b), Xw(r, f, b, h), b.state = r.memoizedState), typeof b.componentDidMount == "function") {
        var se = Kn;
        se |= gl, (r.mode & sr) !== nn && (se |= ou), r.flags |= se;
      }
    }
    function e5(r, o, f, h) {
      var b = r.stateNode, T = r.memoizedProps;
      b.props = T;
      var N = b.context, V = o.contextType, Z = as;
      if (typeof V == "object" && V !== null)
        Z = Bo(V);
      else {
        var se = Am(r, o, !0);
        Z = $m(r, se);
      }
      var le = o.getDerivedStateFromProps, Te = typeof le == "function" || typeof b.getSnapshotBeforeUpdate == "function";
      !Te && (typeof b.UNSAFE_componentWillReceiveProps == "function" || typeof b.componentWillReceiveProps == "function") && (T !== f || N !== Z) && mD(r, b, f, Z), MI();
      var xe = r.memoizedState, Ae = b.state = xe;
      if (Xw(r, f, b, h), Ae = r.memoizedState, T === f && xe === Ae && !Iw() && !Qw()) {
        if (typeof b.componentDidMount == "function") {
          var ze = Kn;
          ze |= gl, (r.mode & sr) !== nn && (ze |= ou), r.flags |= ze;
        }
        return !1;
      }
      typeof le == "function" && (oR(r, o, le, f), Ae = r.memoizedState);
      var qe = Qw() || fD(r, o, T, f, xe, Ae, Z);
      if (qe) {
        if (!Te && (typeof b.UNSAFE_componentWillMount == "function" || typeof b.componentWillMount == "function") && (typeof b.componentWillMount == "function" && b.componentWillMount(), typeof b.UNSAFE_componentWillMount == "function" && b.UNSAFE_componentWillMount()), typeof b.componentDidMount == "function") {
          var Dt = Kn;
          Dt |= gl, (r.mode & sr) !== nn && (Dt |= ou), r.flags |= Dt;
        }
      } else {
        if (typeof b.componentDidMount == "function") {
          var ln = Kn;
          ln |= gl, (r.mode & sr) !== nn && (ln |= ou), r.flags |= ln;
        }
        r.memoizedProps = f, r.memoizedState = Ae;
      }
      return b.props = f, b.state = Ae, b.context = Z, qe;
    }
    function t5(r, o, f, h, b) {
      var T = o.stateNode;
      PI(r, o);
      var N = o.memoizedProps, V = o.type === o.elementType ? N : Ml(o.type, N);
      T.props = V;
      var Z = o.pendingProps, se = T.context, le = f.contextType, Te = as;
      if (typeof le == "object" && le !== null)
        Te = Bo(le);
      else {
        var xe = Am(o, f, !0);
        Te = $m(o, xe);
      }
      var Ae = f.getDerivedStateFromProps, ze = typeof Ae == "function" || typeof T.getSnapshotBeforeUpdate == "function";
      !ze && (typeof T.UNSAFE_componentWillReceiveProps == "function" || typeof T.componentWillReceiveProps == "function") && (N !== Z || se !== Te) && mD(o, T, h, Te), MI();
      var qe = o.memoizedState, Dt = T.state = qe;
      if (Xw(o, h, T, b), Dt = o.memoizedState, N === Z && qe === Dt && !Iw() && !Qw() && !re)
        return typeof T.componentDidUpdate == "function" && (N !== r.memoizedProps || qe !== r.memoizedState) && (o.flags |= Kn), typeof T.getSnapshotBeforeUpdate == "function" && (N !== r.memoizedProps || qe !== r.memoizedState) && (o.flags |= No), !1;
      typeof Ae == "function" && (oR(o, f, Ae, h), Dt = o.memoizedState);
      var ln = Qw() || fD(o, f, V, h, qe, Dt, Te) || // TODO: In some cases, we'll end up checking if context has changed twice,
      // both before and after `shouldComponentUpdate` has been called. Not ideal,
      // but I'm loath to refactor this function. This only happens for memoized
      // components so it's not that common.
      re;
      return ln ? (!ze && (typeof T.UNSAFE_componentWillUpdate == "function" || typeof T.componentWillUpdate == "function") && (typeof T.componentWillUpdate == "function" && T.componentWillUpdate(h, Dt, Te), typeof T.UNSAFE_componentWillUpdate == "function" && T.UNSAFE_componentWillUpdate(h, Dt, Te)), typeof T.componentDidUpdate == "function" && (o.flags |= Kn), typeof T.getSnapshotBeforeUpdate == "function" && (o.flags |= No)) : (typeof T.componentDidUpdate == "function" && (N !== r.memoizedProps || qe !== r.memoizedState) && (o.flags |= Kn), typeof T.getSnapshotBeforeUpdate == "function" && (N !== r.memoizedProps || qe !== r.memoizedState) && (o.flags |= No), o.memoizedProps = h, o.memoizedState = Dt), T.props = h, T.state = Dt, T.context = Te, ln;
    }
    function Ap(r, o) {
      return {
        value: r,
        source: o,
        stack: cl(o),
        digest: null
      };
    }
    function sR(r, o, f) {
      return {
        value: r,
        source: null,
        stack: f ?? null,
        digest: o ?? null
      };
    }
    function n5(r, o) {
      return !0;
    }
    function lR(r, o) {
      try {
        var f = n5(r, o);
        if (f === !1)
          return;
        var h = o.value, b = o.source, T = o.stack, N = T !== null ? T : "";
        if (h != null && h._suppressLogging) {
          if (r.tag === v)
            return;
          console.error(h);
        }
        var V = b ? Sn(b) : null, Z = V ? "The above error occurred in the <" + V + "> component:" : "The above error occurred in one of your React components:", se;
        if (r.tag === C)
          se = `Consider adding an error boundary to your tree to customize error handling behavior.
Visit https://reactjs.org/link/error-boundaries to learn more about error boundaries.`;
        else {
          var le = Sn(r) || "Anonymous";
          se = "React will try to recreate this component tree from scratch " + ("using the error boundary you provided, " + le + ".");
        }
        var Te = Z + `
` + N + `

` + ("" + se);
        console.error(Te);
      } catch (xe) {
        setTimeout(function() {
          throw xe;
        });
      }
    }
    var r5 = typeof WeakMap == "function" ? WeakMap : Map;
    function gD(r, o, f) {
      var h = Lc(Fr, f);
      h.tag = p1, h.payload = {
        element: null
      };
      var b = o.value;
      return h.callback = function() {
        YG(b), lR(r, o);
      }, h;
    }
    function uR(r, o, f) {
      var h = Lc(Fr, f);
      h.tag = p1;
      var b = r.type.getDerivedStateFromError;
      if (typeof b == "function") {
        var T = o.value;
        h.payload = function() {
          return b(T);
        }, h.callback = function() {
          ON(r), lR(r, o);
        };
      }
      var N = r.stateNode;
      return N !== null && typeof N.componentDidCatch == "function" && (h.callback = function() {
        ON(r), lR(r, o), typeof b != "function" && qG(this);
        var Z = o.value, se = o.stack;
        this.componentDidCatch(Z, {
          componentStack: se !== null ? se : ""
        }), typeof b != "function" && (Yi(r.lanes, hn) || d("%s: Error boundaries should implement getDerivedStateFromError(). In that method, return a state update to display an error message or fallback UI.", Sn(r) || "Unknown"));
      }), h;
    }
    function vD(r, o, f) {
      var h = r.pingCache, b;
      if (h === null ? (h = r.pingCache = new r5(), b = /* @__PURE__ */ new Set(), h.set(o, b)) : (b = h.get(o), b === void 0 && (b = /* @__PURE__ */ new Set(), h.set(o, b))), !b.has(f)) {
        b.add(f);
        var T = XG.bind(null, r, o, f);
        qi && gb(r, f), o.then(T, T);
      }
    }
    function o5(r, o, f, h) {
      var b = r.updateQueue;
      if (b === null) {
        var T = /* @__PURE__ */ new Set();
        T.add(f), r.updateQueue = T;
      } else
        b.add(f);
    }
    function i5(r, o) {
      var f = r.tag;
      if ((r.mode & Ln) === nn && (f === m || f === L || f === K)) {
        var h = r.alternate;
        h ? (r.updateQueue = h.updateQueue, r.memoizedState = h.memoizedState, r.lanes = h.lanes) : (r.updateQueue = null, r.memoizedState = null);
      }
    }
    function yD(r) {
      var o = r;
      do {
        if (o.tag === D && jU(o))
          return o;
        o = o.return;
      } while (o !== null);
      return null;
    }
    function bD(r, o, f, h, b) {
      if ((r.mode & Ln) === nn) {
        if (r === o)
          r.flags |= jo;
        else {
          if (r.flags |= Zt, f.flags |= zh, f.flags &= -52805, f.tag === v) {
            var T = f.alternate;
            if (T === null)
              f.tag = z;
            else {
              var N = Lc(Fr, hn);
              N.tag = Ww, Hd(f, N, hn);
            }
          }
          f.lanes = kn(f.lanes, hn);
        }
        return r;
      }
      return r.flags |= jo, r.lanes = b, r;
    }
    function a5(r, o, f, h, b) {
      if (f.flags |= Wf, qi && gb(r, b), h !== null && typeof h == "object" && typeof h.then == "function") {
        var T = h;
        i5(f), Mi() && f.mode & Ln && cI();
        var N = yD(o);
        if (N !== null) {
          N.flags &= ~pi, bD(N, o, f, r, b), N.mode & Ln && vD(r, T, b), o5(N, r, T);
          return;
        } else {
          if (!FS(b)) {
            vD(r, T, b), VR();
            return;
          }
          var V = new Error("A component suspended while responding to synchronous input. This will cause the UI to be replaced with a loading indicator. To fix, updates that suspend should be wrapped with startTransition.");
          h = V;
        }
      } else if (Mi() && f.mode & Ln) {
        cI();
        var Z = yD(o);
        if (Z !== null) {
          (Z.flags & jo) === tn && (Z.flags |= pi), bD(Z, o, f, r, b), t1(Ap(h, f));
          return;
        }
      }
      h = Ap(h, f), jG(h);
      var se = o;
      do {
        switch (se.tag) {
          case C: {
            var le = h;
            se.flags |= jo;
            var Te = sp(b);
            se.lanes = kn(se.lanes, Te);
            var xe = gD(se, le, Te);
            g1(se, xe);
            return;
          }
          case v:
            var Ae = h, ze = se.type, qe = se.stateNode;
            if ((se.flags & Zt) === tn && (typeof ze.getDerivedStateFromError == "function" || qe !== null && typeof qe.componentDidCatch == "function" && !yN(qe))) {
              se.flags |= jo;
              var Dt = sp(b);
              se.lanes = kn(se.lanes, Dt);
              var ln = uR(se, Ae, Dt);
              g1(se, ln);
              return;
            }
            break;
        }
        se = se.return;
      } while (se !== null);
    }
    function s5() {
      return null;
    }
    var eb = n.ReactCurrentOwner, Il = !1, cR, tb, dR, fR, pR, $p, hR, Sx, nb;
    cR = {}, tb = {}, dR = {}, fR = {}, pR = {}, $p = !1, hR = {}, Sx = {}, nb = {};
    function ma(r, o, f, h) {
      r === null ? o.child = wI(o, null, f, h) : o.child = Vm(o, r.child, f, h);
    }
    function l5(r, o, f, h) {
      o.child = Vm(o, r.child, null, h), o.child = Vm(o, null, f, h);
    }
    function CD(r, o, f, h, b) {
      if (o.type !== o.elementType) {
        var T = f.propTypes;
        T && Tl(
          T,
          h,
          // Resolved props
          "prop",
          Zn(f)
        );
      }
      var N = f.render, V = o.ref, Z, se;
      Um(o, b), da(o);
      {
        if (eb.current = o, Do(!0), Z = Xm(r, o, N, h, V, b), se = Qm(), o.mode & Tr) {
          Jr(!0);
          try {
            Z = Xm(r, o, N, h, V, b), se = Qm();
          } finally {
            Jr(!1);
          }
        }
        Do(!1);
      }
      return fa(), r !== null && !Il ? (_I(r, o, b), Fc(r, o, b)) : (Mi() && se && YT(o), o.flags |= ts, ma(r, o, Z, b), o.child);
    }
    function SD(r, o, f, h, b) {
      if (r === null) {
        var T = f.type;
        if (p4(T) && f.compare === null && // SimpleMemoComponent codepath doesn't resolve outer props either.
        f.defaultProps === void 0) {
          var N = T;
          return N = ig(T), o.tag = K, o.type = N, vR(o, T), wD(r, o, N, h, b);
        }
        {
          var V = T.propTypes;
          if (V && Tl(
            V,
            h,
            // Resolved props
            "prop",
            Zn(T)
          ), f.defaultProps !== void 0) {
            var Z = Zn(T) || "Unknown";
            nb[Z] || (d("%s: Support for defaultProps will be removed from memo components in a future major release. Use JavaScript default parameters instead.", Z), nb[Z] = !0);
          }
        }
        var se = ZR(f.type, null, h, o, o.mode, b);
        return se.ref = o.ref, se.return = o, o.child = se, se;
      }
      {
        var le = f.type, Te = le.propTypes;
        Te && Tl(
          Te,
          h,
          // Resolved props
          "prop",
          Zn(le)
        );
      }
      var xe = r.child, Ae = xR(r, b);
      if (!Ae) {
        var ze = xe.memoizedProps, qe = f.compare;
        if (qe = qe !== null ? qe : qt, qe(ze, h) && r.ref === o.ref)
          return Fc(r, o, b);
      }
      o.flags |= ts;
      var Dt = Bp(xe, h);
      return Dt.ref = o.ref, Dt.return = o, o.child = Dt, Dt;
    }
    function wD(r, o, f, h, b) {
      if (o.type !== o.elementType) {
        var T = o.elementType;
        if (T.$$typeof === Le) {
          var N = T, V = N._payload, Z = N._init;
          try {
            T = Z(V);
          } catch {
            T = null;
          }
          var se = T && T.propTypes;
          se && Tl(
            se,
            h,
            // Resolved (SimpleMemoComponent has no defaultProps)
            "prop",
            Zn(T)
          );
        }
      }
      if (r !== null) {
        var le = r.memoizedProps;
        if (qt(le, h) && r.ref === o.ref && // Prevent bailout if the implementation changed due to hot reload.
        o.type === r.type)
          if (Il = !1, o.pendingProps = h = le, xR(r, b))
            (r.flags & zh) !== tn && (Il = !0);
          else return o.lanes = r.lanes, Fc(r, o, b);
      }
      return mR(r, o, f, h, b);
    }
    function xD(r, o, f) {
      var h = o.pendingProps, b = h.children, T = r !== null ? r.memoizedState : null;
      if (h.mode === "hidden" || X)
        if ((o.mode & Ln) === nn) {
          var N = {
            baseLanes: at,
            cachePool: null,
            transitions: null
          };
          o.memoizedState = N, Lx(o, f);
        } else if (Yi(f, Ki)) {
          var Te = {
            baseLanes: at,
            cachePool: null,
            transitions: null
          };
          o.memoizedState = Te;
          var xe = T !== null ? T.baseLanes : f;
          Lx(o, xe);
        } else {
          var V = null, Z;
          if (T !== null) {
            var se = T.baseLanes;
            Z = kn(se, f);
          } else
            Z = f;
          o.lanes = o.childLanes = Ki;
          var le = {
            baseLanes: Z,
            cachePool: V,
            transitions: null
          };
          return o.memoizedState = le, o.updateQueue = null, Lx(o, Z), null;
        }
      else {
        var Ae;
        T !== null ? (Ae = kn(T.baseLanes, f), o.memoizedState = null) : Ae = f, Lx(o, Ae);
      }
      return ma(r, o, b, f), o.child;
    }
    function u5(r, o, f) {
      var h = o.pendingProps;
      return ma(r, o, h, f), o.child;
    }
    function c5(r, o, f) {
      var h = o.pendingProps.children;
      return ma(r, o, h, f), o.child;
    }
    function d5(r, o, f) {
      {
        o.flags |= Kn;
        {
          var h = o.stateNode;
          h.effectDuration = 0, h.passiveEffectDuration = 0;
        }
      }
      var b = o.pendingProps, T = b.children;
      return ma(r, o, T, f), o.child;
    }
    function ED(r, o) {
      var f = o.ref;
      (r === null && f !== null || r !== null && r.ref !== f) && (o.flags |= oo, o.flags |= wd);
    }
    function mR(r, o, f, h, b) {
      if (o.type !== o.elementType) {
        var T = f.propTypes;
        T && Tl(
          T,
          h,
          // Resolved props
          "prop",
          Zn(f)
        );
      }
      var N;
      {
        var V = Am(o, f, !0);
        N = $m(o, V);
      }
      var Z, se;
      Um(o, b), da(o);
      {
        if (eb.current = o, Do(!0), Z = Xm(r, o, f, h, N, b), se = Qm(), o.mode & Tr) {
          Jr(!0);
          try {
            Z = Xm(r, o, f, h, N, b), se = Qm();
          } finally {
            Jr(!1);
          }
        }
        Do(!1);
      }
      return fa(), r !== null && !Il ? (_I(r, o, b), Fc(r, o, b)) : (Mi() && se && YT(o), o.flags |= ts, ma(r, o, Z, b), o.child);
    }
    function TD(r, o, f, h, b) {
      {
        switch (k4(o)) {
          case !1: {
            var T = o.stateNode, N = o.type, V = new N(o.memoizedProps, T.context), Z = V.state;
            T.updater.enqueueSetState(T, Z, null);
            break;
          }
          case !0: {
            o.flags |= Zt, o.flags |= jo;
            var se = new Error("Simulated error coming from DevTools"), le = sp(b);
            o.lanes = kn(o.lanes, le);
            var Te = uR(o, Ap(se, o), le);
            g1(o, Te);
            break;
          }
        }
        if (o.type !== o.elementType) {
          var xe = f.propTypes;
          xe && Tl(
            xe,
            h,
            // Resolved props
            "prop",
            Zn(f)
          );
        }
      }
      var Ae;
      Su(f) ? (Ae = !0, Nw(o)) : Ae = !1, Um(o, b);
      var ze = o.stateNode, qe;
      ze === null ? (xx(r, o), hD(o, f, h), aR(o, f, h, b), qe = !0) : r === null ? qe = e5(o, f, h, b) : qe = t5(r, o, f, h, b);
      var Dt = gR(r, o, f, qe, Ae, b);
      {
        var ln = o.stateNode;
        qe && ln.props !== h && ($p || d("It looks like %s is reassigning its own `this.props` while rendering. This is not supported and can lead to confusing bugs.", Sn(o) || "a component"), $p = !0);
      }
      return Dt;
    }
    function gR(r, o, f, h, b, T) {
      ED(r, o);
      var N = (o.flags & Zt) !== tn;
      if (!h && !N)
        return b && aI(o, f, !1), Fc(r, o, T);
      var V = o.stateNode;
      eb.current = o;
      var Z;
      if (N && typeof f.getDerivedStateFromError != "function")
        Z = null, uD();
      else {
        da(o);
        {
          if (Do(!0), Z = V.render(), o.mode & Tr) {
            Jr(!0);
            try {
              V.render();
            } finally {
              Jr(!1);
            }
          }
          Do(!1);
        }
        fa();
      }
      return o.flags |= ts, r !== null && N ? l5(r, o, Z, T) : ma(r, o, Z, T), o.memoizedState = V.state, b && aI(o, f, !0), o.child;
    }
    function RD(r) {
      var o = r.stateNode;
      o.pendingContext ? oI(r, o.pendingContext, o.pendingContext !== o.context) : o.context && oI(r, o.context, !1), v1(r, o.containerInfo);
    }
    function f5(r, o, f) {
      if (RD(o), r === null)
        throw new Error("Should have a current fiber. This is a bug in React.");
      var h = o.pendingProps, b = o.memoizedState, T = b.element;
      PI(r, o), Xw(o, h, null, f);
      var N = o.memoizedState;
      o.stateNode;
      var V = N.element;
      if (b.isDehydrated) {
        var Z = {
          element: V,
          isDehydrated: !1,
          cache: N.cache,
          pendingSuspenseBoundaries: N.pendingSuspenseBoundaries,
          transitions: N.transitions
        }, se = o.updateQueue;
        if (se.baseState = Z, o.memoizedState = Z, o.flags & pi) {
          var le = Ap(new Error("There was an error while hydrating. Because the error happened outside of a Suspense boundary, the entire root will switch to client rendering."), o);
          return OD(r, o, V, f, le);
        } else if (V !== T) {
          var Te = Ap(new Error("This root received an early update, before anything was able hydrate. Switched the entire root to client rendering."), o);
          return OD(r, o, V, f, Te);
        } else {
          mU(o);
          var xe = wI(o, null, V, f);
          o.child = xe;
          for (var Ae = xe; Ae; )
            Ae.flags = Ae.flags & ~Qr | Ui, Ae = Ae.sibling;
        }
      } else {
        if (Hm(), V === T)
          return Fc(r, o, f);
        ma(r, o, V, f);
      }
      return o.child;
    }
    function OD(r, o, f, h, b) {
      return Hm(), t1(b), o.flags |= pi, ma(r, o, f, h), o.child;
    }
    function p5(r, o, f) {
      NI(o), r === null && e1(o);
      var h = o.type, b = o.pendingProps, T = r !== null ? r.memoizedProps : null, N = b.children, V = FT(h, b);
      return V ? N = null : T !== null && FT(h, T) && (o.flags |= Ia), ED(r, o), ma(r, o, N, f), o.child;
    }
    function h5(r, o) {
      return r === null && e1(o), null;
    }
    function m5(r, o, f, h) {
      xx(r, o);
      var b = o.pendingProps, T = f, N = T._payload, V = T._init, Z = V(N);
      o.type = Z;
      var se = o.tag = h4(Z), le = Ml(Z, b), Te;
      switch (se) {
        case m:
          return vR(o, Z), o.type = Z = ig(Z), Te = mR(null, o, Z, le, h), Te;
        case v:
          return o.type = Z = qR(Z), Te = TD(null, o, Z, le, h), Te;
        case L:
          return o.type = Z = KR(Z), Te = CD(null, o, Z, le, h), Te;
        case H: {
          if (o.type !== o.elementType) {
            var xe = Z.propTypes;
            xe && Tl(
              xe,
              le,
              // Resolved for outer only
              "prop",
              Zn(Z)
            );
          }
          return Te = SD(
            null,
            o,
            Z,
            Ml(Z.type, le),
            // The inner type can have defaults too
            h
          ), Te;
        }
      }
      var Ae = "";
      throw Z !== null && typeof Z == "object" && Z.$$typeof === Le && (Ae = " Did you wrap a component in React.lazy() more than once?"), new Error("Element type is invalid. Received a promise that resolves to: " + Z + ". " + ("Lazy element type must resolve to a class or function." + Ae));
    }
    function g5(r, o, f, h, b) {
      xx(r, o), o.tag = v;
      var T;
      return Su(f) ? (T = !0, Nw(o)) : T = !1, Um(o, b), hD(o, f, h), aR(o, f, h, b), gR(null, o, f, !0, T, b);
    }
    function v5(r, o, f, h) {
      xx(r, o);
      var b = o.pendingProps, T;
      {
        var N = Am(o, f, !1);
        T = $m(o, N);
      }
      Um(o, h);
      var V, Z;
      da(o);
      {
        if (f.prototype && typeof f.prototype.render == "function") {
          var se = Zn(f) || "Unknown";
          cR[se] || (d("The <%s /> component appears to have a render method, but doesn't extend React.Component. This is likely to cause errors. Change %s to extend React.Component instead.", se, se), cR[se] = !0);
        }
        o.mode & Tr && Ol.recordLegacyContextWarning(o, null), Do(!0), eb.current = o, V = Xm(null, o, f, b, T, h), Z = Qm(), Do(!1);
      }
      if (fa(), o.flags |= ts, typeof V == "object" && V !== null && typeof V.render == "function" && V.$$typeof === void 0) {
        var le = Zn(f) || "Unknown";
        tb[le] || (d("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", le, le, le), tb[le] = !0);
      }
      if (
        // Run these checks in production only if the flag is off.
        // Eventually we'll delete this branch altogether.
        typeof V == "object" && V !== null && typeof V.render == "function" && V.$$typeof === void 0
      ) {
        {
          var Te = Zn(f) || "Unknown";
          tb[Te] || (d("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", Te, Te, Te), tb[Te] = !0);
        }
        o.tag = v, o.memoizedState = null, o.updateQueue = null;
        var xe = !1;
        return Su(f) ? (xe = !0, Nw(o)) : xe = !1, o.memoizedState = V.state !== null && V.state !== void 0 ? V.state : null, m1(o), pD(o, V), aR(o, f, b, h), gR(null, o, f, !0, xe, h);
      } else {
        if (o.tag = m, o.mode & Tr) {
          Jr(!0);
          try {
            V = Xm(null, o, f, b, T, h), Z = Qm();
          } finally {
            Jr(!1);
          }
        }
        return Mi() && Z && YT(o), ma(null, o, V, h), vR(o, f), o.child;
      }
    }
    function vR(r, o) {
      {
        if (o && o.childContextTypes && d("%s(...): childContextTypes cannot be defined on a function component.", o.displayName || o.name || "Component"), r.ref !== null) {
          var f = "", h = xi();
          h && (f += `

Check the render method of \`` + h + "`.");
          var b = h || "", T = r._debugSource;
          T && (b = T.fileName + ":" + T.lineNumber), pR[b] || (pR[b] = !0, d("Function components cannot be given refs. Attempts to access this ref will fail. Did you mean to use React.forwardRef()?%s", f));
        }
        if (o.defaultProps !== void 0) {
          var N = Zn(o) || "Unknown";
          nb[N] || (d("%s: Support for defaultProps will be removed from function components in a future major release. Use JavaScript default parameters instead.", N), nb[N] = !0);
        }
        if (typeof o.getDerivedStateFromProps == "function") {
          var V = Zn(o) || "Unknown";
          fR[V] || (d("%s: Function components do not support getDerivedStateFromProps.", V), fR[V] = !0);
        }
        if (typeof o.contextType == "object" && o.contextType !== null) {
          var Z = Zn(o) || "Unknown";
          dR[Z] || (d("%s: Function components do not support contextType.", Z), dR[Z] = !0);
        }
      }
    }
    var yR = {
      dehydrated: null,
      treeContext: null,
      retryLane: rr
    };
    function bR(r) {
      return {
        baseLanes: r,
        cachePool: s5(),
        transitions: null
      };
    }
    function y5(r, o) {
      var f = null;
      return {
        baseLanes: kn(r.baseLanes, o),
        cachePool: f,
        transitions: r.transitions
      };
    }
    function b5(r, o, f, h) {
      if (o !== null) {
        var b = o.memoizedState;
        if (b === null)
          return !1;
      }
      return C1(r, Gy);
    }
    function C5(r, o) {
      return lp(r.childLanes, o);
    }
    function kD(r, o, f) {
      var h = o.pendingProps;
      P4(o) && (o.flags |= Zt);
      var b = kl.current, T = !1, N = (o.flags & Zt) !== tn;
      if (N || b5(b, r) ? (T = !0, o.flags &= ~Zt) : (r === null || r.memoizedState !== null) && (b = $U(b, FI)), b = Wm(b), Bd(o, b), r === null) {
        e1(o);
        var V = o.memoizedState;
        if (V !== null) {
          var Z = V.dehydrated;
          if (Z !== null)
            return T5(o, Z);
        }
        var se = h.children, le = h.fallback;
        if (T) {
          var Te = S5(o, se, le, f), xe = o.child;
          return xe.memoizedState = bR(f), o.memoizedState = yR, Te;
        } else
          return CR(o, se);
      } else {
        var Ae = r.memoizedState;
        if (Ae !== null) {
          var ze = Ae.dehydrated;
          if (ze !== null)
            return R5(r, o, N, h, ze, Ae, f);
        }
        if (T) {
          var qe = h.fallback, Dt = h.children, ln = x5(r, o, Dt, qe, f), Jt = o.child, Qn = r.child.memoizedState;
          return Jt.memoizedState = Qn === null ? bR(f) : y5(Qn, f), Jt.childLanes = C5(r, f), o.memoizedState = yR, ln;
        } else {
          var Un = h.children, Ie = w5(r, o, Un, f);
          return o.memoizedState = null, Ie;
        }
      }
    }
    function CR(r, o, f) {
      var h = r.mode, b = {
        mode: "visible",
        children: o
      }, T = SR(b, h);
      return T.return = r, r.child = T, T;
    }
    function S5(r, o, f, h) {
      var b = r.mode, T = r.child, N = {
        mode: "hidden",
        children: o
      }, V, Z;
      return (b & Ln) === nn && T !== null ? (V = T, V.childLanes = at, V.pendingProps = N, r.mode & ar && (V.actualDuration = 0, V.actualStartTime = -1, V.selfBaseDuration = 0, V.treeBaseDuration = 0), Z = Qd(f, b, h, null)) : (V = SR(N, b), Z = Qd(f, b, h, null)), V.return = r, Z.return = r, V.sibling = Z, r.child = V, Z;
    }
    function SR(r, o, f) {
      return PN(r, o, at, null);
    }
    function PD(r, o) {
      return Bp(r, o);
    }
    function w5(r, o, f, h) {
      var b = r.child, T = b.sibling, N = PD(b, {
        mode: "visible",
        children: f
      });
      if ((o.mode & Ln) === nn && (N.lanes = h), N.return = o, N.sibling = null, T !== null) {
        var V = o.deletions;
        V === null ? (o.deletions = [T], o.flags |= Ma) : V.push(T);
      }
      return o.child = N, N;
    }
    function x5(r, o, f, h, b) {
      var T = o.mode, N = r.child, V = N.sibling, Z = {
        mode: "hidden",
        children: f
      }, se;
      if (
        // In legacy mode, we commit the primary tree as if it successfully
        // completed, even though it's in an inconsistent state.
        (T & Ln) === nn && // Make sure we're on the second pass, i.e. the primary child fragment was
        // already cloned. In legacy mode, the only case where this isn't true is
        // when DevTools forces us to display a fallback; we skip the first render
        // pass entirely and go straight to rendering the fallback. (In Concurrent
        // Mode, SuspenseList can also trigger this scenario, but this is a legacy-
        // only codepath.)
        o.child !== N
      ) {
        var le = o.child;
        se = le, se.childLanes = at, se.pendingProps = Z, o.mode & ar && (se.actualDuration = 0, se.actualStartTime = -1, se.selfBaseDuration = N.selfBaseDuration, se.treeBaseDuration = N.treeBaseDuration), o.deletions = null;
      } else
        se = PD(N, Z), se.subtreeFlags = N.subtreeFlags & yo;
      var Te;
      return V !== null ? Te = Bp(V, h) : (Te = Qd(h, T, b, null), Te.flags |= Qr), Te.return = o, se.return = o, se.sibling = Te, o.child = se, Te;
    }
    function wx(r, o, f, h) {
      h !== null && t1(h), Vm(o, r.child, null, f);
      var b = o.pendingProps, T = b.children, N = CR(o, T);
      return N.flags |= Qr, o.memoizedState = null, N;
    }
    function E5(r, o, f, h, b) {
      var T = o.mode, N = {
        mode: "visible",
        children: f
      }, V = SR(N, T), Z = Qd(h, T, b, null);
      return Z.flags |= Qr, V.return = o, Z.return = o, V.sibling = Z, o.child = V, (o.mode & Ln) !== nn && Vm(o, r.child, null, b), Z;
    }
    function T5(r, o, f) {
      return (r.mode & Ln) === nn ? (d("Cannot hydrate Suspense in legacy mode. Switch from ReactDOM.hydrate(element, container) to ReactDOMClient.hydrateRoot(container, <App />).render(element) or remove the Suspense components from the server rendered components."), r.lanes = hn) : jT(o) ? r.lanes = hi : r.lanes = Ki, null;
    }
    function R5(r, o, f, h, b, T, N) {
      if (f)
        if (o.flags & pi) {
          o.flags &= ~pi;
          var Ie = sR(new Error("There was an error while hydrating this Suspense boundary. Switched to client rendering."));
          return wx(r, o, N, Ie);
        } else {
          if (o.memoizedState !== null)
            return o.child = r.child, o.flags |= Zt, null;
          var Ke = h.children, De = h.fallback, ft = E5(r, o, Ke, De, N), $t = o.child;
          return $t.memoizedState = bR(N), o.memoizedState = yR, ft;
        }
      else {
        if (pU(), (o.mode & Ln) === nn)
          return wx(
            r,
            o,
            N,
            // TODO: When we delete legacy mode, we should make this error argument
            // required — every concurrent mode path that causes hydration to
            // de-opt to client rendering should have an error message.
            null
          );
        if (jT(b)) {
          var V, Z, se;
          {
            var le = MB(b);
            V = le.digest, Z = le.message, se = le.stack;
          }
          var Te;
          Z ? Te = new Error(Z) : Te = new Error("The server could not finish this Suspense boundary, likely due to an error during server rendering. Switched to client rendering.");
          var xe = sR(Te, V, se);
          return wx(r, o, N, xe);
        }
        var Ae = Yi(N, r.childLanes);
        if (Il || Ae) {
          var ze = Nx();
          if (ze !== null) {
            var qe = iy(ze, N);
            if (qe !== rr && qe !== T.retryLane) {
              T.retryLane = qe;
              var Dt = Fr;
              za(r, qe), ii(ze, r, qe, Dt);
            }
          }
          VR();
          var ln = sR(new Error("This Suspense boundary received an update before it finished hydrating. This caused the boundary to switch to client rendering. The usual way to fix this is to wrap the original update in startTransition."));
          return wx(r, o, N, ln);
        } else if (JM(b)) {
          o.flags |= Zt, o.child = r.child;
          var Jt = QG.bind(null, r);
          return IB(b, Jt), null;
        } else {
          gU(o, b, T.treeContext);
          var Qn = h.children, Un = CR(o, Qn);
          return Un.flags |= Ui, Un;
        }
      }
    }
    function MD(r, o, f) {
      r.lanes = kn(r.lanes, o);
      var h = r.alternate;
      h !== null && (h.lanes = kn(h.lanes, o)), d1(r.return, o, f);
    }
    function O5(r, o, f) {
      for (var h = o; h !== null; ) {
        if (h.tag === D) {
          var b = h.memoizedState;
          b !== null && MD(h, f, r);
        } else if (h.tag === G)
          MD(h, f, r);
        else if (h.child !== null) {
          h.child.return = h, h = h.child;
          continue;
        }
        if (h === r)
          return;
        for (; h.sibling === null; ) {
          if (h.return === null || h.return === r)
            return;
          h = h.return;
        }
        h.sibling.return = h.return, h = h.sibling;
      }
    }
    function k5(r) {
      for (var o = r, f = null; o !== null; ) {
        var h = o.alternate;
        h !== null && ex(h) === null && (f = o), o = o.sibling;
      }
      return f;
    }
    function P5(r) {
      if (r !== void 0 && r !== "forwards" && r !== "backwards" && r !== "together" && !hR[r])
        if (hR[r] = !0, typeof r == "string")
          switch (r.toLowerCase()) {
            case "together":
            case "forwards":
            case "backwards": {
              d('"%s" is not a valid value for revealOrder on <SuspenseList />. Use lowercase "%s" instead.', r, r.toLowerCase());
              break;
            }
            case "forward":
            case "backward": {
              d('"%s" is not a valid value for revealOrder on <SuspenseList />. React uses the -s suffix in the spelling. Use "%ss" instead.', r, r.toLowerCase());
              break;
            }
            default:
              d('"%s" is not a supported revealOrder on <SuspenseList />. Did you mean "together", "forwards" or "backwards"?', r);
              break;
          }
        else
          d('%s is not a supported value for revealOrder on <SuspenseList />. Did you mean "together", "forwards" or "backwards"?', r);
    }
    function M5(r, o) {
      r !== void 0 && !Sx[r] && (r !== "collapsed" && r !== "hidden" ? (Sx[r] = !0, d('"%s" is not a supported value for tail on <SuspenseList />. Did you mean "collapsed" or "hidden"?', r)) : o !== "forwards" && o !== "backwards" && (Sx[r] = !0, d('<SuspenseList tail="%s" /> is only valid if revealOrder is "forwards" or "backwards". Did you mean to specify revealOrder="forwards"?', r)));
    }
    function ID(r, o) {
      {
        var f = Dn(r), h = !f && typeof En(r) == "function";
        if (f || h) {
          var b = f ? "array" : "iterable";
          return d("A nested %s was passed to row #%s in <SuspenseList />. Wrap it in an additional SuspenseList to configure its revealOrder: <SuspenseList revealOrder=...> ... <SuspenseList revealOrder=...>{%s}</SuspenseList> ... </SuspenseList>", b, o, b), !1;
        }
      }
      return !0;
    }
    function I5(r, o) {
      if ((o === "forwards" || o === "backwards") && r !== void 0 && r !== null && r !== !1)
        if (Dn(r)) {
          for (var f = 0; f < r.length; f++)
            if (!ID(r[f], f))
              return;
        } else {
          var h = En(r);
          if (typeof h == "function") {
            var b = h.call(r);
            if (b)
              for (var T = b.next(), N = 0; !T.done; T = b.next()) {
                if (!ID(T.value, N))
                  return;
                N++;
              }
          } else
            d('A single row was passed to a <SuspenseList revealOrder="%s" />. This is not useful since it needs multiple rows. Did you mean to pass multiple children or an array?', o);
        }
    }
    function wR(r, o, f, h, b) {
      var T = r.memoizedState;
      T === null ? r.memoizedState = {
        isBackwards: o,
        rendering: null,
        renderingStartTime: 0,
        last: h,
        tail: f,
        tailMode: b
      } : (T.isBackwards = o, T.rendering = null, T.renderingStartTime = 0, T.last = h, T.tail = f, T.tailMode = b);
    }
    function DD(r, o, f) {
      var h = o.pendingProps, b = h.revealOrder, T = h.tail, N = h.children;
      P5(b), M5(T, b), I5(N, b), ma(r, o, N, f);
      var V = kl.current, Z = C1(V, Gy);
      if (Z)
        V = S1(V, Gy), o.flags |= Zt;
      else {
        var se = r !== null && (r.flags & Zt) !== tn;
        se && O5(o, o.child, f), V = Wm(V);
      }
      if (Bd(o, V), (o.mode & Ln) === nn)
        o.memoizedState = null;
      else
        switch (b) {
          case "forwards": {
            var le = k5(o.child), Te;
            le === null ? (Te = o.child, o.child = null) : (Te = le.sibling, le.sibling = null), wR(
              o,
              !1,
              // isBackwards
              Te,
              le,
              T
            );
            break;
          }
          case "backwards": {
            var xe = null, Ae = o.child;
            for (o.child = null; Ae !== null; ) {
              var ze = Ae.alternate;
              if (ze !== null && ex(ze) === null) {
                o.child = Ae;
                break;
              }
              var qe = Ae.sibling;
              Ae.sibling = xe, xe = Ae, Ae = qe;
            }
            wR(
              o,
              !0,
              // isBackwards
              xe,
              null,
              // last
              T
            );
            break;
          }
          case "together": {
            wR(
              o,
              !1,
              // isBackwards
              null,
              // tail
              null,
              // last
              void 0
            );
            break;
          }
          default:
            o.memoizedState = null;
        }
      return o.child;
    }
    function D5(r, o, f) {
      v1(o, o.stateNode.containerInfo);
      var h = o.pendingProps;
      return r === null ? o.child = Vm(o, null, h, f) : ma(r, o, h, f), o.child;
    }
    var ND = !1;
    function N5(r, o, f) {
      var h = o.type, b = h._context, T = o.pendingProps, N = o.memoizedProps, V = T.value;
      {
        "value" in T || ND || (ND = !0, d("The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?"));
        var Z = o.type.propTypes;
        Z && Tl(Z, T, "prop", "Context.Provider");
      }
      if (TI(o, b, V), N !== null) {
        var se = N.value;
        if (ut(se, V)) {
          if (N.children === T.children && !Iw())
            return Fc(r, o, f);
        } else
          PU(o, b, f);
      }
      var le = T.children;
      return ma(r, o, le, f), o.child;
    }
    var LD = !1;
    function L5(r, o, f) {
      var h = o.type;
      h._context === void 0 ? h !== h.Consumer && (LD || (LD = !0, d("Rendering <Context> directly is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?"))) : h = h._context;
      var b = o.pendingProps, T = b.children;
      typeof T != "function" && d("A context consumer was rendered with multiple children, or a child that isn't a function. A context consumer expects a single child that is a function. If you did pass a function, make sure there is no trailing or leading whitespace around it."), Um(o, f);
      var N = Bo(h);
      da(o);
      var V;
      return eb.current = o, Do(!0), V = T(N), Do(!1), fa(), o.flags |= ts, ma(r, o, V, f), o.child;
    }
    function rb() {
      Il = !0;
    }
    function xx(r, o) {
      (o.mode & Ln) === nn && r !== null && (r.alternate = null, o.alternate = null, o.flags |= Qr);
    }
    function Fc(r, o, f) {
      return r !== null && (o.dependencies = r.dependencies), uD(), mb(o.lanes), Yi(f, o.childLanes) ? (OU(r, o), o.child) : null;
    }
    function F5(r, o, f) {
      {
        var h = o.return;
        if (h === null)
          throw new Error("Cannot swap the root fiber.");
        if (r.alternate = null, o.alternate = null, f.index = o.index, f.sibling = o.sibling, f.return = o.return, f.ref = o.ref, o === h.child)
          h.child = f;
        else {
          var b = h.child;
          if (b === null)
            throw new Error("Expected parent to have a child.");
          for (; b.sibling !== o; )
            if (b = b.sibling, b === null)
              throw new Error("Expected to find the previous sibling.");
          b.sibling = f;
        }
        var T = h.deletions;
        return T === null ? (h.deletions = [r], h.flags |= Ma) : T.push(r), f.flags |= Qr, f;
      }
    }
    function xR(r, o) {
      var f = r.lanes;
      return !!Yi(f, o);
    }
    function _5(r, o, f) {
      switch (o.tag) {
        case C:
          RD(o), o.stateNode, Hm();
          break;
        case R:
          NI(o);
          break;
        case v: {
          var h = o.type;
          Su(h) && Nw(o);
          break;
        }
        case S:
          v1(o, o.stateNode.containerInfo);
          break;
        case _: {
          var b = o.memoizedProps.value, T = o.type._context;
          TI(o, T, b);
          break;
        }
        case M:
          {
            var N = Yi(f, o.childLanes);
            N && (o.flags |= Kn);
            {
              var V = o.stateNode;
              V.effectDuration = 0, V.passiveEffectDuration = 0;
            }
          }
          break;
        case D: {
          var Z = o.memoizedState;
          if (Z !== null) {
            if (Z.dehydrated !== null)
              return Bd(o, Wm(kl.current)), o.flags |= Zt, null;
            var se = o.child, le = se.childLanes;
            if (Yi(f, le))
              return kD(r, o, f);
            Bd(o, Wm(kl.current));
            var Te = Fc(r, o, f);
            return Te !== null ? Te.sibling : null;
          } else
            Bd(o, Wm(kl.current));
          break;
        }
        case G: {
          var xe = (r.flags & Zt) !== tn, Ae = Yi(f, o.childLanes);
          if (xe) {
            if (Ae)
              return DD(r, o, f);
            o.flags |= Zt;
          }
          var ze = o.memoizedState;
          if (ze !== null && (ze.rendering = null, ze.tail = null, ze.lastEffect = null), Bd(o, kl.current), Ae)
            break;
          return null;
        }
        case B:
        case ee:
          return o.lanes = at, xD(r, o, f);
      }
      return Fc(r, o, f);
    }
    function FD(r, o, f) {
      if (o._debugNeedsRemount && r !== null)
        return F5(r, o, ZR(o.type, o.key, o.pendingProps, o._debugOwner || null, o.mode, o.lanes));
      if (r !== null) {
        var h = r.memoizedProps, b = o.pendingProps;
        if (h !== b || Iw() || // Force a re-render if the implementation changed due to hot reload:
        o.type !== r.type)
          Il = !0;
        else {
          var T = xR(r, f);
          if (!T && // If this is the second pass of an error or suspense boundary, there
          // may not be work scheduled on `current`, so we check for this flag.
          (o.flags & Zt) === tn)
            return Il = !1, _5(r, o, f);
          (r.flags & zh) !== tn ? Il = !0 : Il = !1;
        }
      } else if (Il = !1, Mi() && sU(o)) {
        var N = o.index, V = lU();
        uI(o, V, N);
      }
      switch (o.lanes = at, o.tag) {
        case y:
          return v5(r, o, o.type, f);
        case Q: {
          var Z = o.elementType;
          return m5(r, o, Z, f);
        }
        case m: {
          var se = o.type, le = o.pendingProps, Te = o.elementType === se ? le : Ml(se, le);
          return mR(r, o, se, Te, f);
        }
        case v: {
          var xe = o.type, Ae = o.pendingProps, ze = o.elementType === xe ? Ae : Ml(xe, Ae);
          return TD(r, o, xe, ze, f);
        }
        case C:
          return f5(r, o, f);
        case R:
          return p5(r, o, f);
        case O:
          return h5(r, o);
        case D:
          return kD(r, o, f);
        case S:
          return D5(r, o, f);
        case L: {
          var qe = o.type, Dt = o.pendingProps, ln = o.elementType === qe ? Dt : Ml(qe, Dt);
          return CD(r, o, qe, ln, f);
        }
        case E:
          return u5(r, o, f);
        case k:
          return c5(r, o, f);
        case M:
          return d5(r, o, f);
        case _:
          return N5(r, o, f);
        case F:
          return L5(r, o, f);
        case H: {
          var Jt = o.type, Qn = o.pendingProps, Un = Ml(Jt, Qn);
          if (o.type !== o.elementType) {
            var Ie = Jt.propTypes;
            Ie && Tl(
              Ie,
              Un,
              // Resolved for outer only
              "prop",
              Zn(Jt)
            );
          }
          return Un = Ml(Jt.type, Un), SD(r, o, Jt, Un, f);
        }
        case K:
          return wD(r, o, o.type, o.pendingProps, f);
        case z: {
          var Ke = o.type, De = o.pendingProps, ft = o.elementType === Ke ? De : Ml(Ke, De);
          return g5(r, o, Ke, ft, f);
        }
        case G:
          return DD(r, o, f);
        case W:
          break;
        case B:
          return xD(r, o, f);
      }
      throw new Error("Unknown unit of work tag (" + o.tag + "). This error is likely caused by a bug in React. Please file an issue.");
    }
    function Jm(r) {
      r.flags |= Kn;
    }
    function _D(r) {
      r.flags |= oo, r.flags |= wd;
    }
    var AD, ER, $D, jD;
    AD = function(r, o, f, h) {
      for (var b = o.child; b !== null; ) {
        if (b.tag === R || b.tag === O)
          oB(r, b.stateNode);
        else if (b.tag !== S) {
          if (b.child !== null) {
            b.child.return = b, b = b.child;
            continue;
          }
        }
        if (b === o)
          return;
        for (; b.sibling === null; ) {
          if (b.return === null || b.return === o)
            return;
          b = b.return;
        }
        b.sibling.return = b.return, b = b.sibling;
      }
    }, ER = function(r, o) {
    }, $D = function(r, o, f, h, b) {
      var T = r.memoizedProps;
      if (T !== h) {
        var N = o.stateNode, V = y1(), Z = aB(N, f, T, h, b, V);
        o.updateQueue = Z, Z && Jm(o);
      }
    }, jD = function(r, o, f, h) {
      f !== h && Jm(o);
    };
    function ob(r, o) {
      if (!Mi())
        switch (r.tailMode) {
          case "hidden": {
            for (var f = r.tail, h = null; f !== null; )
              f.alternate !== null && (h = f), f = f.sibling;
            h === null ? r.tail = null : h.sibling = null;
            break;
          }
          case "collapsed": {
            for (var b = r.tail, T = null; b !== null; )
              b.alternate !== null && (T = b), b = b.sibling;
            T === null ? !o && r.tail !== null ? r.tail.sibling = null : r.tail = null : T.sibling = null;
            break;
          }
        }
    }
    function Di(r) {
      var o = r.alternate !== null && r.alternate.child === r.child, f = at, h = tn;
      if (o) {
        if ((r.mode & ar) !== nn) {
          for (var Z = r.selfBaseDuration, se = r.child; se !== null; )
            f = kn(f, kn(se.lanes, se.childLanes)), h |= se.subtreeFlags & yo, h |= se.flags & yo, Z += se.treeBaseDuration, se = se.sibling;
          r.treeBaseDuration = Z;
        } else
          for (var le = r.child; le !== null; )
            f = kn(f, kn(le.lanes, le.childLanes)), h |= le.subtreeFlags & yo, h |= le.flags & yo, le.return = r, le = le.sibling;
        r.subtreeFlags |= h;
      } else {
        if ((r.mode & ar) !== nn) {
          for (var b = r.actualDuration, T = r.selfBaseDuration, N = r.child; N !== null; )
            f = kn(f, kn(N.lanes, N.childLanes)), h |= N.subtreeFlags, h |= N.flags, b += N.actualDuration, T += N.treeBaseDuration, N = N.sibling;
          r.actualDuration = b, r.treeBaseDuration = T;
        } else
          for (var V = r.child; V !== null; )
            f = kn(f, kn(V.lanes, V.childLanes)), h |= V.subtreeFlags, h |= V.flags, V.return = r, V = V.sibling;
        r.subtreeFlags |= h;
      }
      return r.childLanes = f, o;
    }
    function A5(r, o, f) {
      if (SU() && (o.mode & Ln) !== nn && (o.flags & Zt) === tn)
        return gI(o), Hm(), o.flags |= pi | Wf | jo, !1;
      var h = $w(o);
      if (f !== null && f.dehydrated !== null)
        if (r === null) {
          if (!h)
            throw new Error("A dehydrated suspense component was completed without a hydrated node. This is probably a bug in React.");
          if (bU(o), Di(o), (o.mode & ar) !== nn) {
            var b = f !== null;
            if (b) {
              var T = o.child;
              T !== null && (o.treeBaseDuration -= T.treeBaseDuration);
            }
          }
          return !1;
        } else {
          if (Hm(), (o.flags & Zt) === tn && (o.memoizedState = null), o.flags |= Kn, Di(o), (o.mode & ar) !== nn) {
            var N = f !== null;
            if (N) {
              var V = o.child;
              V !== null && (o.treeBaseDuration -= V.treeBaseDuration);
            }
          }
          return !1;
        }
      else
        return vI(), !0;
    }
    function zD(r, o, f) {
      var h = o.pendingProps;
      switch (XT(o), o.tag) {
        case y:
        case Q:
        case K:
        case m:
        case L:
        case E:
        case k:
        case M:
        case F:
        case H:
          return Di(o), null;
        case v: {
          var b = o.type;
          return Su(b) && Dw(o), Di(o), null;
        }
        case C: {
          var T = o.stateNode;
          if (Gm(o), WT(o), x1(), T.pendingContext && (T.context = T.pendingContext, T.pendingContext = null), r === null || r.child === null) {
            var N = $w(o);
            if (N)
              Jm(o);
            else if (r !== null) {
              var V = r.memoizedState;
              // Check if this is a client root
              (!V.isDehydrated || // Check if we reverted to client rendering (e.g. due to an error)
              (o.flags & pi) !== tn) && (o.flags |= No, vI());
            }
          }
          return ER(r, o), Di(o), null;
        }
        case R: {
          b1(o);
          var Z = DI(), se = o.type;
          if (r !== null && o.stateNode != null)
            $D(r, o, se, h, Z), r.ref !== o.ref && _D(o);
          else {
            if (!h) {
              if (o.stateNode === null)
                throw new Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
              return Di(o), null;
            }
            var le = y1(), Te = $w(o);
            if (Te)
              vU(o, Z, le) && Jm(o);
            else {
              var xe = rB(se, h, Z, le, o);
              AD(xe, o, !1, !1), o.stateNode = xe, iB(xe, se, h, Z) && Jm(o);
            }
            o.ref !== null && _D(o);
          }
          return Di(o), null;
        }
        case O: {
          var Ae = h;
          if (r && o.stateNode != null) {
            var ze = r.memoizedProps;
            jD(r, o, ze, Ae);
          } else {
            if (typeof Ae != "string" && o.stateNode === null)
              throw new Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
            var qe = DI(), Dt = y1(), ln = $w(o);
            ln ? yU(o) && Jm(o) : o.stateNode = sB(Ae, qe, Dt, o);
          }
          return Di(o), null;
        }
        case D: {
          qm(o);
          var Jt = o.memoizedState;
          if (r === null || r.memoizedState !== null && r.memoizedState.dehydrated !== null) {
            var Qn = A5(r, o, Jt);
            if (!Qn)
              return o.flags & jo ? o : null;
          }
          if ((o.flags & Zt) !== tn)
            return o.lanes = f, (o.mode & ar) !== nn && K1(o), o;
          var Un = Jt !== null, Ie = r !== null && r.memoizedState !== null;
          if (Un !== Ie && Un) {
            var Ke = o.child;
            if (Ke.flags |= vo, (o.mode & Ln) !== nn) {
              var De = r === null && (o.memoizedProps.unstable_avoidThisFallback !== !0 || !0);
              De || C1(kl.current, FI) ? $G() : VR();
            }
          }
          var ft = o.updateQueue;
          if (ft !== null && (o.flags |= Kn), Di(o), (o.mode & ar) !== nn && Un) {
            var $t = o.child;
            $t !== null && (o.treeBaseDuration -= $t.treeBaseDuration);
          }
          return null;
        }
        case S:
          return Gm(o), ER(r, o), r === null && eU(o.stateNode.containerInfo), Di(o), null;
        case _:
          var Nt = o.type._context;
          return c1(Nt, o), Di(o), null;
        case z: {
          var vn = o.type;
          return Su(vn) && Dw(o), Di(o), null;
        }
        case G: {
          qm(o);
          var On = o.memoizedState;
          if (On === null)
            return Di(o), null;
          var Or = (o.flags & Zt) !== tn, ur = On.rendering;
          if (ur === null)
            if (Or)
              ob(On, !1);
            else {
              var _o = zG() && (r === null || (r.flags & Zt) === tn);
              if (!_o)
                for (var cr = o.child; cr !== null; ) {
                  var Eo = ex(cr);
                  if (Eo !== null) {
                    Or = !0, o.flags |= Zt, ob(On, !1);
                    var na = Eo.updateQueue;
                    return na !== null && (o.updateQueue = na, o.flags |= Kn), o.subtreeFlags = tn, kU(o, f), Bd(o, S1(kl.current, Gy)), o.child;
                  }
                  cr = cr.sibling;
                }
              On.tail !== null && Lo() > sN() && (o.flags |= Zt, Or = !0, ob(On, !1), o.lanes = Xv);
            }
          else {
            if (!Or) {
              var Ai = ex(ur);
              if (Ai !== null) {
                o.flags |= Zt, Or = !0;
                var ls = Ai.updateQueue;
                if (ls !== null && (o.updateQueue = ls, o.flags |= Kn), ob(On, !0), On.tail === null && On.tailMode === "hidden" && !ur.alternate && !Mi())
                  return Di(o), null;
              } else // The time it took to render last row is greater than the remaining
              // time we have to render. So rendering one more row would likely
              // exceed it.
              Lo() * 2 - On.renderingStartTime > sN() && f !== Ki && (o.flags |= Zt, Or = !0, ob(On, !1), o.lanes = Xv);
            }
            if (On.isBackwards)
              ur.sibling = o.child, o.child = ur;
            else {
              var ya = On.last;
              ya !== null ? ya.sibling = ur : o.child = ur, On.last = ur;
            }
          }
          if (On.tail !== null) {
            var ba = On.tail;
            On.rendering = ba, On.tail = ba.sibling, On.renderingStartTime = Lo(), ba.sibling = null;
            var ra = kl.current;
            return Or ? ra = S1(ra, Gy) : ra = Wm(ra), Bd(o, ra), ba;
          }
          return Di(o), null;
        }
        case W:
          break;
        case B:
        case ee: {
          HR(o);
          var zc = o.memoizedState, ag = zc !== null;
          if (r !== null) {
            var Cb = r.memoizedState, Pu = Cb !== null;
            Pu !== ag && // LegacyHidden doesn't do any hiding — it only pre-renders.
            !X && (o.flags |= vo);
          }
          return !ag || (o.mode & Ln) === nn ? Di(o) : Yi(ku, Ki) && (Di(o), o.subtreeFlags & (Qr | Kn) && (o.flags |= vo)), null;
        }
        case U:
          return null;
        case q:
          return null;
      }
      throw new Error("Unknown unit of work tag (" + o.tag + "). This error is likely caused by a bug in React. Please file an issue.");
    }
    function $5(r, o, f) {
      switch (XT(o), o.tag) {
        case v: {
          var h = o.type;
          Su(h) && Dw(o);
          var b = o.flags;
          return b & jo ? (o.flags = b & ~jo | Zt, (o.mode & ar) !== nn && K1(o), o) : null;
        }
        case C: {
          o.stateNode, Gm(o), WT(o), x1();
          var T = o.flags;
          return (T & jo) !== tn && (T & Zt) === tn ? (o.flags = T & ~jo | Zt, o) : null;
        }
        case R:
          return b1(o), null;
        case D: {
          qm(o);
          var N = o.memoizedState;
          if (N !== null && N.dehydrated !== null) {
            if (o.alternate === null)
              throw new Error("Threw in newly mounted dehydrated component. This is likely a bug in React. Please file an issue.");
            Hm();
          }
          var V = o.flags;
          return V & jo ? (o.flags = V & ~jo | Zt, (o.mode & ar) !== nn && K1(o), o) : null;
        }
        case G:
          return qm(o), null;
        case S:
          return Gm(o), null;
        case _:
          var Z = o.type._context;
          return c1(Z, o), null;
        case B:
        case ee:
          return HR(o), null;
        case U:
          return null;
        default:
          return null;
      }
    }
    function HD(r, o, f) {
      switch (XT(o), o.tag) {
        case v: {
          var h = o.type.childContextTypes;
          h != null && Dw(o);
          break;
        }
        case C: {
          o.stateNode, Gm(o), WT(o), x1();
          break;
        }
        case R: {
          b1(o);
          break;
        }
        case S:
          Gm(o);
          break;
        case D:
          qm(o);
          break;
        case G:
          qm(o);
          break;
        case _:
          var b = o.type._context;
          c1(b, o);
          break;
        case B:
        case ee:
          HR(o);
          break;
      }
    }
    var VD = null;
    VD = /* @__PURE__ */ new Set();
    var Ex = !1, Ni = !1, j5 = typeof WeakSet == "function" ? WeakSet : Set, Kt = null, Zm = null, eg = null;
    function z5(r) {
      ru(null, function() {
        throw r;
      }), Gf();
    }
    var H5 = function(r, o) {
      if (o.props = r.memoizedProps, o.state = r.memoizedState, r.mode & ar)
        try {
          Ru(), o.componentWillUnmount();
        } finally {
          Tu(r);
        }
      else
        o.componentWillUnmount();
    };
    function BD(r, o) {
      try {
        Wd(Zo, r);
      } catch (f) {
        Ur(r, o, f);
      }
    }
    function TR(r, o, f) {
      try {
        H5(r, f);
      } catch (h) {
        Ur(r, o, h);
      }
    }
    function V5(r, o, f) {
      try {
        f.componentDidMount();
      } catch (h) {
        Ur(r, o, h);
      }
    }
    function UD(r, o) {
      try {
        WD(r);
      } catch (f) {
        Ur(r, o, f);
      }
    }
    function tg(r, o) {
      var f = r.ref;
      if (f !== null)
        if (typeof f == "function") {
          var h;
          try {
            if (ce && me && r.mode & ar)
              try {
                Ru(), h = f(null);
              } finally {
                Tu(r);
              }
            else
              h = f(null);
          } catch (b) {
            Ur(r, o, b);
          }
          typeof h == "function" && d("Unexpected return value from a callback ref in %s. A callback ref should not return a function.", Sn(r));
        } else
          f.current = null;
    }
    function Tx(r, o, f) {
      try {
        f();
      } catch (h) {
        Ur(r, o, h);
      }
    }
    var GD = !1;
    function B5(r, o) {
      tB(r.containerInfo), Kt = o, U5();
      var f = GD;
      return GD = !1, f;
    }
    function U5() {
      for (; Kt !== null; ) {
        var r = Kt, o = r.child;
        (r.subtreeFlags & iu) !== tn && o !== null ? (o.return = r, Kt = o) : G5();
      }
    }
    function G5() {
      for (; Kt !== null; ) {
        var r = Kt;
        wr(r);
        try {
          W5(r);
        } catch (f) {
          Ur(r, r.return, f);
        }
        Br();
        var o = r.sibling;
        if (o !== null) {
          o.return = r.return, Kt = o;
          return;
        }
        Kt = r.return;
      }
    }
    function W5(r) {
      var o = r.alternate, f = r.flags;
      if ((f & No) !== tn) {
        switch (wr(r), r.tag) {
          case m:
          case L:
          case K:
            break;
          case v: {
            if (o !== null) {
              var h = o.memoizedProps, b = o.memoizedState, T = r.stateNode;
              r.type === r.elementType && !$p && (T.props !== r.memoizedProps && d("Expected %s props to match memoized props before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", Sn(r) || "instance"), T.state !== r.memoizedState && d("Expected %s state to match memoized state before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", Sn(r) || "instance"));
              var N = T.getSnapshotBeforeUpdate(r.elementType === r.type ? h : Ml(r.type, h), b);
              {
                var V = VD;
                N === void 0 && !V.has(r.type) && (V.add(r.type), d("%s.getSnapshotBeforeUpdate(): A snapshot value (or null) must be returned. You have returned undefined.", Sn(r)));
              }
              T.__reactInternalSnapshotBeforeUpdate = N;
            }
            break;
          }
          case C: {
            {
              var Z = r.stateNode;
              RB(Z.containerInfo);
            }
            break;
          }
          case R:
          case O:
          case S:
          case z:
            break;
          default:
            throw new Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
        }
        Br();
      }
    }
    function Dl(r, o, f) {
      var h = o.updateQueue, b = h !== null ? h.lastEffect : null;
      if (b !== null) {
        var T = b.next, N = T;
        do {
          if ((N.tag & r) === r) {
            var V = N.destroy;
            N.destroy = void 0, V !== void 0 && ((r & Ii) !== Ha ? bl(o) : (r & Zo) !== Ha && Kf(o), (r & wu) !== Ha && vb(!0), Tx(o, f, V), (r & wu) !== Ha && vb(!1), (r & Ii) !== Ha ? uu() : (r & Zo) !== Ha && Kv());
          }
          N = N.next;
        } while (N !== T);
      }
    }
    function Wd(r, o) {
      var f = o.updateQueue, h = f !== null ? f.lastEffect : null;
      if (h !== null) {
        var b = h.next, T = b;
        do {
          if ((T.tag & r) === r) {
            (r & Ii) !== Ha ? qv(o) : (r & Zo) !== Ha && Wh(o);
            var N = T.create;
            (r & wu) !== Ha && vb(!0), T.destroy = N(), (r & wu) !== Ha && vb(!1), (r & Ii) !== Ha ? MS() : (r & Zo) !== Ha && IS();
            {
              var V = T.destroy;
              if (V !== void 0 && typeof V != "function") {
                var Z = void 0;
                (T.tag & Zo) !== tn ? Z = "useLayoutEffect" : (T.tag & wu) !== tn ? Z = "useInsertionEffect" : Z = "useEffect";
                var se = void 0;
                V === null ? se = " You returned null. If your effect does not require clean up, return undefined (or nothing)." : typeof V.then == "function" ? se = `

It looks like you wrote ` + Z + `(async () => ...) or returned a Promise. Instead, write the async function inside your effect and call it immediately:

` + Z + `(() => {
  async function fetchData() {
    // You can await here
    const response = await MyAPI.getData(someId);
    // ...
  }
  fetchData();
}, [someId]); // Or [] if effect doesn't need props or state

Learn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching` : se = " You returned: " + V, d("%s must not return anything besides a function, which is used for clean-up.%s", Z, se);
              }
            }
          }
          T = T.next;
        } while (T !== b);
      }
    }
    function q5(r, o) {
      if ((o.flags & Kn) !== tn)
        switch (o.tag) {
          case M: {
            var f = o.stateNode.passiveEffectDuration, h = o.memoizedProps, b = h.id, T = h.onPostCommit, N = sD(), V = o.alternate === null ? "mount" : "update";
            aD() && (V = "nested-update"), typeof T == "function" && T(b, V, f, N);
            var Z = o.return;
            e: for (; Z !== null; ) {
              switch (Z.tag) {
                case C:
                  var se = Z.stateNode;
                  se.passiveEffectDuration += f;
                  break e;
                case M:
                  var le = Z.stateNode;
                  le.passiveEffectDuration += f;
                  break e;
              }
              Z = Z.return;
            }
            break;
          }
        }
    }
    function K5(r, o, f, h) {
      if ((f.flags & su) !== tn)
        switch (f.tag) {
          case m:
          case L:
          case K: {
            if (!Ni)
              if (f.mode & ar)
                try {
                  Ru(), Wd(Zo | Jo, f);
                } finally {
                  Tu(f);
                }
              else
                Wd(Zo | Jo, f);
            break;
          }
          case v: {
            var b = f.stateNode;
            if (f.flags & Kn && !Ni)
              if (o === null)
                if (f.type === f.elementType && !$p && (b.props !== f.memoizedProps && d("Expected %s props to match memoized props before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", Sn(f) || "instance"), b.state !== f.memoizedState && d("Expected %s state to match memoized state before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", Sn(f) || "instance")), f.mode & ar)
                  try {
                    Ru(), b.componentDidMount();
                  } finally {
                    Tu(f);
                  }
                else
                  b.componentDidMount();
              else {
                var T = f.elementType === f.type ? o.memoizedProps : Ml(f.type, o.memoizedProps), N = o.memoizedState;
                if (f.type === f.elementType && !$p && (b.props !== f.memoizedProps && d("Expected %s props to match memoized props before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", Sn(f) || "instance"), b.state !== f.memoizedState && d("Expected %s state to match memoized state before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", Sn(f) || "instance")), f.mode & ar)
                  try {
                    Ru(), b.componentDidUpdate(T, N, b.__reactInternalSnapshotBeforeUpdate);
                  } finally {
                    Tu(f);
                  }
                else
                  b.componentDidUpdate(T, N, b.__reactInternalSnapshotBeforeUpdate);
              }
            var V = f.updateQueue;
            V !== null && (f.type === f.elementType && !$p && (b.props !== f.memoizedProps && d("Expected %s props to match memoized props before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", Sn(f) || "instance"), b.state !== f.memoizedState && d("Expected %s state to match memoized state before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", Sn(f) || "instance")), II(f, V, b));
            break;
          }
          case C: {
            var Z = f.updateQueue;
            if (Z !== null) {
              var se = null;
              if (f.child !== null)
                switch (f.child.tag) {
                  case R:
                    se = f.child.stateNode;
                    break;
                  case v:
                    se = f.child.stateNode;
                    break;
                }
              II(f, Z, se);
            }
            break;
          }
          case R: {
            var le = f.stateNode;
            if (o === null && f.flags & Kn) {
              var Te = f.type, xe = f.memoizedProps;
              fB(le, Te, xe);
            }
            break;
          }
          case O:
            break;
          case S:
            break;
          case M: {
            {
              var Ae = f.memoizedProps, ze = Ae.onCommit, qe = Ae.onRender, Dt = f.stateNode.effectDuration, ln = sD(), Jt = o === null ? "mount" : "update";
              aD() && (Jt = "nested-update"), typeof qe == "function" && qe(f.memoizedProps.id, Jt, f.actualDuration, f.treeBaseDuration, f.actualStartTime, ln);
              {
                typeof ze == "function" && ze(f.memoizedProps.id, Jt, Dt, ln), GG(f);
                var Qn = f.return;
                e: for (; Qn !== null; ) {
                  switch (Qn.tag) {
                    case C:
                      var Un = Qn.stateNode;
                      Un.effectDuration += Dt;
                      break e;
                    case M:
                      var Ie = Qn.stateNode;
                      Ie.effectDuration += Dt;
                      break e;
                  }
                  Qn = Qn.return;
                }
              }
            }
            break;
          }
          case D: {
            nG(r, f);
            break;
          }
          case G:
          case z:
          case W:
          case B:
          case ee:
          case q:
            break;
          default:
            throw new Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
        }
      Ni || f.flags & oo && WD(f);
    }
    function Y5(r) {
      switch (r.tag) {
        case m:
        case L:
        case K: {
          if (r.mode & ar)
            try {
              Ru(), BD(r, r.return);
            } finally {
              Tu(r);
            }
          else
            BD(r, r.return);
          break;
        }
        case v: {
          var o = r.stateNode;
          typeof o.componentDidMount == "function" && V5(r, r.return, o), UD(r, r.return);
          break;
        }
        case R: {
          UD(r, r.return);
          break;
        }
      }
    }
    function X5(r, o) {
      for (var f = null, h = r; ; ) {
        if (h.tag === R) {
          if (f === null) {
            f = h;
            try {
              var b = h.stateNode;
              o ? wB(b) : EB(h.stateNode, h.memoizedProps);
            } catch (N) {
              Ur(r, r.return, N);
            }
          }
        } else if (h.tag === O) {
          if (f === null)
            try {
              var T = h.stateNode;
              o ? xB(T) : TB(T, h.memoizedProps);
            } catch (N) {
              Ur(r, r.return, N);
            }
        } else if (!((h.tag === B || h.tag === ee) && h.memoizedState !== null && h !== r)) {
          if (h.child !== null) {
            h.child.return = h, h = h.child;
            continue;
          }
        }
        if (h === r)
          return;
        for (; h.sibling === null; ) {
          if (h.return === null || h.return === r)
            return;
          f === h && (f = null), h = h.return;
        }
        f === h && (f = null), h.sibling.return = h.return, h = h.sibling;
      }
    }
    function WD(r) {
      var o = r.ref;
      if (o !== null) {
        var f = r.stateNode, h;
        switch (r.tag) {
          case R:
            h = f;
            break;
          default:
            h = f;
        }
        if (typeof o == "function") {
          var b;
          if (r.mode & ar)
            try {
              Ru(), b = o(h);
            } finally {
              Tu(r);
            }
          else
            b = o(h);
          typeof b == "function" && d("Unexpected return value from a callback ref in %s. A callback ref should not return a function.", Sn(r));
        } else
          o.hasOwnProperty("current") || d("Unexpected ref object provided for %s. Use either a ref-setter function or React.createRef().", Sn(r)), o.current = h;
      }
    }
    function Q5(r) {
      var o = r.alternate;
      o !== null && (o.return = null), r.return = null;
    }
    function qD(r) {
      var o = r.alternate;
      o !== null && (r.alternate = null, qD(o));
      {
        if (r.child = null, r.deletions = null, r.sibling = null, r.tag === R) {
          var f = r.stateNode;
          f !== null && rU(f);
        }
        r.stateNode = null, r._debugOwner = null, r.return = null, r.dependencies = null, r.memoizedProps = null, r.memoizedState = null, r.pendingProps = null, r.stateNode = null, r.updateQueue = null;
      }
    }
    function J5(r) {
      for (var o = r.return; o !== null; ) {
        if (KD(o))
          return o;
        o = o.return;
      }
      throw new Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
    }
    function KD(r) {
      return r.tag === R || r.tag === C || r.tag === S;
    }
    function YD(r) {
      var o = r;
      e: for (; ; ) {
        for (; o.sibling === null; ) {
          if (o.return === null || KD(o.return))
            return null;
          o = o.return;
        }
        for (o.sibling.return = o.return, o = o.sibling; o.tag !== R && o.tag !== O && o.tag !== I; ) {
          if (o.flags & Qr || o.child === null || o.tag === S)
            continue e;
          o.child.return = o, o = o.child;
        }
        if (!(o.flags & Qr))
          return o.stateNode;
      }
    }
    function Z5(r) {
      var o = J5(r);
      switch (o.tag) {
        case R: {
          var f = o.stateNode;
          o.flags & Ia && (QM(f), o.flags &= ~Ia);
          var h = YD(r);
          OR(r, h, f);
          break;
        }
        case C:
        case S: {
          var b = o.stateNode.containerInfo, T = YD(r);
          RR(r, T, b);
          break;
        }
        default:
          throw new Error("Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue.");
      }
    }
    function RR(r, o, f) {
      var h = r.tag, b = h === R || h === O;
      if (b) {
        var T = r.stateNode;
        o ? yB(f, T, o) : gB(f, T);
      } else if (h !== S) {
        var N = r.child;
        if (N !== null) {
          RR(N, o, f);
          for (var V = N.sibling; V !== null; )
            RR(V, o, f), V = V.sibling;
        }
      }
    }
    function OR(r, o, f) {
      var h = r.tag, b = h === R || h === O;
      if (b) {
        var T = r.stateNode;
        o ? vB(f, T, o) : mB(f, T);
      } else if (h !== S) {
        var N = r.child;
        if (N !== null) {
          OR(N, o, f);
          for (var V = N.sibling; V !== null; )
            OR(V, o, f), V = V.sibling;
        }
      }
    }
    var Li = null, Nl = !1;
    function eG(r, o, f) {
      {
        var h = o;
        e: for (; h !== null; ) {
          switch (h.tag) {
            case R: {
              Li = h.stateNode, Nl = !1;
              break e;
            }
            case C: {
              Li = h.stateNode.containerInfo, Nl = !0;
              break e;
            }
            case S: {
              Li = h.stateNode.containerInfo, Nl = !0;
              break e;
            }
          }
          h = h.return;
        }
        if (Li === null)
          throw new Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
        XD(r, o, f), Li = null, Nl = !1;
      }
      Q5(f);
    }
    function qd(r, o, f) {
      for (var h = f.child; h !== null; )
        XD(r, o, h), h = h.sibling;
    }
    function XD(r, o, f) {
      switch (Uv(f), f.tag) {
        case R:
          Ni || tg(f, o);
        case O: {
          {
            var h = Li, b = Nl;
            Li = null, qd(r, o, f), Li = h, Nl = b, Li !== null && (Nl ? CB(Li, f.stateNode) : bB(Li, f.stateNode));
          }
          return;
        }
        case I: {
          Li !== null && (Nl ? SB(Li, f.stateNode) : $T(Li, f.stateNode));
          return;
        }
        case S: {
          {
            var T = Li, N = Nl;
            Li = f.stateNode.containerInfo, Nl = !0, qd(r, o, f), Li = T, Nl = N;
          }
          return;
        }
        case m:
        case L:
        case H:
        case K: {
          if (!Ni) {
            var V = f.updateQueue;
            if (V !== null) {
              var Z = V.lastEffect;
              if (Z !== null) {
                var se = Z.next, le = se;
                do {
                  var Te = le, xe = Te.destroy, Ae = Te.tag;
                  xe !== void 0 && ((Ae & wu) !== Ha ? Tx(f, o, xe) : (Ae & Zo) !== Ha && (Kf(f), f.mode & ar ? (Ru(), Tx(f, o, xe), Tu(f)) : Tx(f, o, xe), Kv())), le = le.next;
                } while (le !== se);
              }
            }
          }
          qd(r, o, f);
          return;
        }
        case v: {
          if (!Ni) {
            tg(f, o);
            var ze = f.stateNode;
            typeof ze.componentWillUnmount == "function" && TR(f, o, ze);
          }
          qd(r, o, f);
          return;
        }
        case W: {
          qd(r, o, f);
          return;
        }
        case B: {
          if (
            // TODO: Remove this dead flag
            f.mode & Ln
          ) {
            var qe = Ni;
            Ni = qe || f.memoizedState !== null, qd(r, o, f), Ni = qe;
          } else
            qd(r, o, f);
          break;
        }
        default: {
          qd(r, o, f);
          return;
        }
      }
    }
    function tG(r) {
      r.memoizedState;
    }
    function nG(r, o) {
      var f = o.memoizedState;
      if (f === null) {
        var h = o.alternate;
        if (h !== null) {
          var b = h.memoizedState;
          if (b !== null) {
            var T = b.dehydrated;
            T !== null && zB(T);
          }
        }
      }
    }
    function QD(r) {
      var o = r.updateQueue;
      if (o !== null) {
        r.updateQueue = null;
        var f = r.stateNode;
        f === null && (f = r.stateNode = new j5()), o.forEach(function(h) {
          var b = JG.bind(null, r, h);
          if (!f.has(h)) {
            if (f.add(h), qi)
              if (Zm !== null && eg !== null)
                gb(eg, Zm);
              else
                throw Error("Expected finished root and lanes to be set. This is a bug in React.");
            h.then(b, b);
          }
        });
      }
    }
    function rG(r, o, f) {
      Zm = f, eg = r, wr(o), JD(o, r), wr(o), Zm = null, eg = null;
    }
    function Ll(r, o, f) {
      var h = o.deletions;
      if (h !== null)
        for (var b = 0; b < h.length; b++) {
          var T = h[b];
          try {
            eG(r, o, T);
          } catch (Z) {
            Ur(T, o, Z);
          }
        }
      var N = Xl();
      if (o.subtreeFlags & au)
        for (var V = o.child; V !== null; )
          wr(V), JD(V, r), V = V.sibling;
      wr(N);
    }
    function JD(r, o, f) {
      var h = r.alternate, b = r.flags;
      switch (r.tag) {
        case m:
        case L:
        case H:
        case K: {
          if (Ll(o, r), Ou(r), b & Kn) {
            try {
              Dl(wu | Jo, r, r.return), Wd(wu | Jo, r);
            } catch (vn) {
              Ur(r, r.return, vn);
            }
            if (r.mode & ar) {
              try {
                Ru(), Dl(Zo | Jo, r, r.return);
              } catch (vn) {
                Ur(r, r.return, vn);
              }
              Tu(r);
            } else
              try {
                Dl(Zo | Jo, r, r.return);
              } catch (vn) {
                Ur(r, r.return, vn);
              }
          }
          return;
        }
        case v: {
          Ll(o, r), Ou(r), b & oo && h !== null && tg(h, h.return);
          return;
        }
        case R: {
          Ll(o, r), Ou(r), b & oo && h !== null && tg(h, h.return);
          {
            if (r.flags & Ia) {
              var T = r.stateNode;
              try {
                QM(T);
              } catch (vn) {
                Ur(r, r.return, vn);
              }
            }
            if (b & Kn) {
              var N = r.stateNode;
              if (N != null) {
                var V = r.memoizedProps, Z = h !== null ? h.memoizedProps : V, se = r.type, le = r.updateQueue;
                if (r.updateQueue = null, le !== null)
                  try {
                    pB(N, le, se, Z, V, r);
                  } catch (vn) {
                    Ur(r, r.return, vn);
                  }
              }
            }
          }
          return;
        }
        case O: {
          if (Ll(o, r), Ou(r), b & Kn) {
            if (r.stateNode === null)
              throw new Error("This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue.");
            var Te = r.stateNode, xe = r.memoizedProps, Ae = h !== null ? h.memoizedProps : xe;
            try {
              hB(Te, Ae, xe);
            } catch (vn) {
              Ur(r, r.return, vn);
            }
          }
          return;
        }
        case C: {
          if (Ll(o, r), Ou(r), b & Kn && h !== null) {
            var ze = h.memoizedState;
            if (ze.isDehydrated)
              try {
                jB(o.containerInfo);
              } catch (vn) {
                Ur(r, r.return, vn);
              }
          }
          return;
        }
        case S: {
          Ll(o, r), Ou(r);
          return;
        }
        case D: {
          Ll(o, r), Ou(r);
          var qe = r.child;
          if (qe.flags & vo) {
            var Dt = qe.stateNode, ln = qe.memoizedState, Jt = ln !== null;
            if (Dt.isHidden = Jt, Jt) {
              var Qn = qe.alternate !== null && qe.alternate.memoizedState !== null;
              Qn || AG();
            }
          }
          if (b & Kn) {
            try {
              tG(r);
            } catch (vn) {
              Ur(r, r.return, vn);
            }
            QD(r);
          }
          return;
        }
        case B: {
          var Un = h !== null && h.memoizedState !== null;
          if (
            // TODO: Remove this dead flag
            r.mode & Ln
          ) {
            var Ie = Ni;
            Ni = Ie || Un, Ll(o, r), Ni = Ie;
          } else
            Ll(o, r);
          if (Ou(r), b & vo) {
            var Ke = r.stateNode, De = r.memoizedState, ft = De !== null, $t = r;
            if (Ke.isHidden = ft, ft && !Un && ($t.mode & Ln) !== nn) {
              Kt = $t;
              for (var Nt = $t.child; Nt !== null; )
                Kt = Nt, iG(Nt), Nt = Nt.sibling;
            }
            X5($t, ft);
          }
          return;
        }
        case G: {
          Ll(o, r), Ou(r), b & Kn && QD(r);
          return;
        }
        case W:
          return;
        default: {
          Ll(o, r), Ou(r);
          return;
        }
      }
    }
    function Ou(r) {
      var o = r.flags;
      if (o & Qr) {
        try {
          Z5(r);
        } catch (f) {
          Ur(r, r.return, f);
        }
        r.flags &= ~Qr;
      }
      o & Ui && (r.flags &= ~Ui);
    }
    function oG(r, o, f) {
      Zm = f, eg = o, Kt = r, ZD(r, o, f), Zm = null, eg = null;
    }
    function ZD(r, o, f) {
      for (var h = (r.mode & Ln) !== nn; Kt !== null; ) {
        var b = Kt, T = b.child;
        if (b.tag === B && h) {
          var N = b.memoizedState !== null, V = N || Ex;
          if (V) {
            kR(r, o, f);
            continue;
          } else {
            var Z = b.alternate, se = Z !== null && Z.memoizedState !== null, le = se || Ni, Te = Ex, xe = Ni;
            Ex = V, Ni = le, Ni && !xe && (Kt = b, aG(b));
            for (var Ae = T; Ae !== null; )
              Kt = Ae, ZD(
                Ae,
                // New root; bubble back up to here and stop.
                o,
                f
              ), Ae = Ae.sibling;
            Kt = b, Ex = Te, Ni = xe, kR(r, o, f);
            continue;
          }
        }
        (b.subtreeFlags & su) !== tn && T !== null ? (T.return = b, Kt = T) : kR(r, o, f);
      }
    }
    function kR(r, o, f) {
      for (; Kt !== null; ) {
        var h = Kt;
        if ((h.flags & su) !== tn) {
          var b = h.alternate;
          wr(h);
          try {
            K5(o, b, h, f);
          } catch (N) {
            Ur(h, h.return, N);
          }
          Br();
        }
        if (h === r) {
          Kt = null;
          return;
        }
        var T = h.sibling;
        if (T !== null) {
          T.return = h.return, Kt = T;
          return;
        }
        Kt = h.return;
      }
    }
    function iG(r) {
      for (; Kt !== null; ) {
        var o = Kt, f = o.child;
        switch (o.tag) {
          case m:
          case L:
          case H:
          case K: {
            if (o.mode & ar)
              try {
                Ru(), Dl(Zo, o, o.return);
              } finally {
                Tu(o);
              }
            else
              Dl(Zo, o, o.return);
            break;
          }
          case v: {
            tg(o, o.return);
            var h = o.stateNode;
            typeof h.componentWillUnmount == "function" && TR(o, o.return, h);
            break;
          }
          case R: {
            tg(o, o.return);
            break;
          }
          case B: {
            var b = o.memoizedState !== null;
            if (b) {
              eN(r);
              continue;
            }
            break;
          }
        }
        f !== null ? (f.return = o, Kt = f) : eN(r);
      }
    }
    function eN(r) {
      for (; Kt !== null; ) {
        var o = Kt;
        if (o === r) {
          Kt = null;
          return;
        }
        var f = o.sibling;
        if (f !== null) {
          f.return = o.return, Kt = f;
          return;
        }
        Kt = o.return;
      }
    }
    function aG(r) {
      for (; Kt !== null; ) {
        var o = Kt, f = o.child;
        if (o.tag === B) {
          var h = o.memoizedState !== null;
          if (h) {
            tN(r);
            continue;
          }
        }
        f !== null ? (f.return = o, Kt = f) : tN(r);
      }
    }
    function tN(r) {
      for (; Kt !== null; ) {
        var o = Kt;
        wr(o);
        try {
          Y5(o);
        } catch (h) {
          Ur(o, o.return, h);
        }
        if (Br(), o === r) {
          Kt = null;
          return;
        }
        var f = o.sibling;
        if (f !== null) {
          f.return = o.return, Kt = f;
          return;
        }
        Kt = o.return;
      }
    }
    function sG(r, o, f, h) {
      Kt = o, lG(o, r, f, h);
    }
    function lG(r, o, f, h) {
      for (; Kt !== null; ) {
        var b = Kt, T = b.child;
        (b.subtreeFlags & vl) !== tn && T !== null ? (T.return = b, Kt = T) : uG(r, o, f, h);
      }
    }
    function uG(r, o, f, h) {
      for (; Kt !== null; ) {
        var b = Kt;
        if ((b.flags & Bi) !== tn) {
          wr(b);
          try {
            cG(o, b, f, h);
          } catch (N) {
            Ur(b, b.return, N);
          }
          Br();
        }
        if (b === r) {
          Kt = null;
          return;
        }
        var T = b.sibling;
        if (T !== null) {
          T.return = b.return, Kt = T;
          return;
        }
        Kt = b.return;
      }
    }
    function cG(r, o, f, h) {
      switch (o.tag) {
        case m:
        case L:
        case K: {
          if (o.mode & ar) {
            q1();
            try {
              Wd(Ii | Jo, o);
            } finally {
              W1(o);
            }
          } else
            Wd(Ii | Jo, o);
          break;
        }
      }
    }
    function dG(r) {
      Kt = r, fG();
    }
    function fG() {
      for (; Kt !== null; ) {
        var r = Kt, o = r.child;
        if ((Kt.flags & Ma) !== tn) {
          var f = r.deletions;
          if (f !== null) {
            for (var h = 0; h < f.length; h++) {
              var b = f[h];
              Kt = b, mG(b, r);
            }
            {
              var T = r.alternate;
              if (T !== null) {
                var N = T.child;
                if (N !== null) {
                  T.child = null;
                  do {
                    var V = N.sibling;
                    N.sibling = null, N = V;
                  } while (N !== null);
                }
              }
            }
            Kt = r;
          }
        }
        (r.subtreeFlags & vl) !== tn && o !== null ? (o.return = r, Kt = o) : pG();
      }
    }
    function pG() {
      for (; Kt !== null; ) {
        var r = Kt;
        (r.flags & Bi) !== tn && (wr(r), hG(r), Br());
        var o = r.sibling;
        if (o !== null) {
          o.return = r.return, Kt = o;
          return;
        }
        Kt = r.return;
      }
    }
    function hG(r) {
      switch (r.tag) {
        case m:
        case L:
        case K: {
          r.mode & ar ? (q1(), Dl(Ii | Jo, r, r.return), W1(r)) : Dl(Ii | Jo, r, r.return);
          break;
        }
      }
    }
    function mG(r, o) {
      for (; Kt !== null; ) {
        var f = Kt;
        wr(f), vG(f, o), Br();
        var h = f.child;
        h !== null ? (h.return = f, Kt = h) : gG(r);
      }
    }
    function gG(r) {
      for (; Kt !== null; ) {
        var o = Kt, f = o.sibling, h = o.return;
        if (qD(o), o === r) {
          Kt = null;
          return;
        }
        if (f !== null) {
          f.return = h, Kt = f;
          return;
        }
        Kt = h;
      }
    }
    function vG(r, o) {
      switch (r.tag) {
        case m:
        case L:
        case K: {
          r.mode & ar ? (q1(), Dl(Ii, r, o), W1(r)) : Dl(Ii, r, o);
          break;
        }
      }
    }
    function yG(r) {
      switch (r.tag) {
        case m:
        case L:
        case K: {
          try {
            Wd(Zo | Jo, r);
          } catch (f) {
            Ur(r, r.return, f);
          }
          break;
        }
        case v: {
          var o = r.stateNode;
          try {
            o.componentDidMount();
          } catch (f) {
            Ur(r, r.return, f);
          }
          break;
        }
      }
    }
    function bG(r) {
      switch (r.tag) {
        case m:
        case L:
        case K: {
          try {
            Wd(Ii | Jo, r);
          } catch (o) {
            Ur(r, r.return, o);
          }
          break;
        }
      }
    }
    function CG(r) {
      switch (r.tag) {
        case m:
        case L:
        case K: {
          try {
            Dl(Zo | Jo, r, r.return);
          } catch (f) {
            Ur(r, r.return, f);
          }
          break;
        }
        case v: {
          var o = r.stateNode;
          typeof o.componentWillUnmount == "function" && TR(r, r.return, o);
          break;
        }
      }
    }
    function SG(r) {
      switch (r.tag) {
        case m:
        case L:
        case K:
          try {
            Dl(Ii | Jo, r, r.return);
          } catch (o) {
            Ur(r, r.return, o);
          }
      }
    }
    if (typeof Symbol == "function" && Symbol.for) {
      var ib = Symbol.for;
      ib("selector.component"), ib("selector.has_pseudo_class"), ib("selector.role"), ib("selector.test_id"), ib("selector.text");
    }
    var wG = [];
    function xG() {
      wG.forEach(function(r) {
        return r();
      });
    }
    var EG = n.ReactCurrentActQueue;
    function TG(r) {
      {
        var o = (
          // $FlowExpectedError – Flow doesn't know about IS_REACT_ACT_ENVIRONMENT global
          typeof IS_REACT_ACT_ENVIRONMENT < "u" ? IS_REACT_ACT_ENVIRONMENT : void 0
        ), f = typeof jest < "u";
        return f && o !== !1;
      }
    }
    function nN() {
      {
        var r = (
          // $FlowExpectedError – Flow doesn't know about IS_REACT_ACT_ENVIRONMENT global
          typeof IS_REACT_ACT_ENVIRONMENT < "u" ? IS_REACT_ACT_ENVIRONMENT : void 0
        );
        return !r && EG.current !== null && d("The current testing environment is not configured to support act(...)"), r;
      }
    }
    var RG = Math.ceil, PR = n.ReactCurrentDispatcher, MR = n.ReactCurrentOwner, Fi = n.ReactCurrentBatchConfig, Fl = n.ReactCurrentActQueue, ni = (
      /*             */
      0
    ), rN = (
      /*               */
      1
    ), _i = (
      /*                */
      2
    ), Bs = (
      /*                */
      4
    ), _c = 0, ab = 1, jp = 2, Rx = 3, sb = 4, oN = 5, IR = 6, Xn = ni, ga = null, po = null, ri = at, ku = at, DR = Ad(at), oi = _c, lb = null, Ox = at, ub = at, kx = at, cb = null, Va = null, NR = 0, iN = 500, aN = 1 / 0, OG = 500, Ac = null;
    function db() {
      aN = Lo() + OG;
    }
    function sN() {
      return aN;
    }
    var Px = !1, LR = null, ng = null, zp = !1, Kd = null, fb = at, FR = [], _R = null, kG = 50, pb = 0, AR = null, $R = !1, Mx = !1, PG = 50, rg = 0, Ix = null, hb = Fr, Dx = at, lN = !1;
    function Nx() {
      return ga;
    }
    function va() {
      return (Xn & (_i | Bs)) !== ni ? Lo() : (hb !== Fr || (hb = Lo()), hb);
    }
    function Yd(r) {
      var o = r.mode;
      if ((o & Ln) === nn)
        return hn;
      if ((Xn & _i) !== ni && ri !== at)
        return sp(ri);
      var f = EU() !== xU;
      if (f) {
        if (Fi.transition !== null) {
          var h = Fi.transition;
          h._updatedFibers || (h._updatedFibers = /* @__PURE__ */ new Set()), h._updatedFibers.add(r);
        }
        return Dx === rr && (Dx = ny()), Dx;
      }
      var b = Aa();
      if (b !== rr)
        return b;
      var T = lB();
      return T;
    }
    function MG(r) {
      var o = r.mode;
      return (o & Ln) === nn ? hn : AS();
    }
    function ii(r, o, f, h) {
      e4(), lN && d("useInsertionEffect must not schedule updates."), $R && (Mx = !0), Rd(r, f, h), (Xn & _i) !== at && r === ga ? r4(o) : (qi && cp(r, o, f), o4(o), r === ga && ((Xn & _i) === ni && (ub = kn(ub, f)), oi === sb && Xd(r, ri)), Ba(r, h), f === hn && Xn === ni && (o.mode & Ln) === nn && // Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.
      !Fl.isBatchingLegacy && (db(), lI()));
    }
    function IG(r, o, f) {
      var h = r.current;
      h.lanes = o, Rd(r, o, f), Ba(r, f);
    }
    function DG(r) {
      return (
        // TODO: Remove outdated deferRenderPhaseUpdateToNextBatch experiment. We
        // decided not to enable it.
        (Xn & _i) !== ni
      );
    }
    function Ba(r, o) {
      var f = r.callbackNode;
      fm(r, o);
      var h = dm(r, r === ga ? ri : at);
      if (h === at) {
        f !== null && EN(f), r.callbackNode = null, r.callbackPriority = rr;
        return;
      }
      var b = fu(h), T = r.callbackPriority;
      if (T === b && // Special case related to `act`. If the currently scheduled task is a
      // Scheduler task, rather than an `act` task, cancel it and re-scheduled
      // on the `act` queue.
      !(Fl.current !== null && f !== GR)) {
        f == null && T !== hn && d("Expected scheduled callback to exist. This error is likely caused by a bug in React. Please file an issue.");
        return;
      }
      f != null && EN(f);
      var N;
      if (b === hn)
        r.tag === $d ? (Fl.isBatchingLegacy !== null && (Fl.didScheduleLegacyUpdate = !0), aU(dN.bind(null, r))) : sI(dN.bind(null, r)), Fl.current !== null ? Fl.current.push(jd) : cB(function() {
          (Xn & (_i | Bs)) === ni && jd();
        }), N = null;
      else {
        var V;
        switch (US(h)) {
          case Ti:
            V = qf;
            break;
          case Ns:
            V = lu;
            break;
          case Fa:
            V = yl;
            break;
          case _a:
            V = cc;
            break;
          default:
            V = yl;
            break;
        }
        N = WR(V, uN.bind(null, r));
      }
      r.callbackPriority = b, r.callbackNode = N;
    }
    function uN(r, o) {
      if (XU(), hb = Fr, Dx = at, (Xn & (_i | Bs)) !== ni)
        throw new Error("Should not already be working.");
      var f = r.callbackNode, h = jc();
      if (h && r.callbackNode !== f)
        return null;
      var b = dm(r, r === ga ? ri : at);
      if (b === at)
        return null;
      var T = !hm(r, b) && !_S(r, b) && !o, N = T ? VG(r, b) : Fx(r, b);
      if (N !== _c) {
        if (N === jp) {
          var V = pm(r);
          V !== at && (b = V, N = jR(r, V));
        }
        if (N === ab) {
          var Z = lb;
          throw Hp(r, at), Xd(r, b), Ba(r, Lo()), Z;
        }
        if (N === IR)
          Xd(r, b);
        else {
          var se = !hm(r, b), le = r.current.alternate;
          if (se && !LG(le)) {
            if (N = Fx(r, b), N === jp) {
              var Te = pm(r);
              Te !== at && (b = Te, N = jR(r, Te));
            }
            if (N === ab) {
              var xe = lb;
              throw Hp(r, at), Xd(r, b), Ba(r, Lo()), xe;
            }
          }
          r.finishedWork = le, r.finishedLanes = b, NG(r, N, b);
        }
      }
      return Ba(r, Lo()), r.callbackNode === f ? uN.bind(null, r) : null;
    }
    function jR(r, o) {
      var f = cb;
      if (vm(r)) {
        var h = Hp(r, o);
        h.flags |= pi, ZB(r.containerInfo);
      }
      var b = Fx(r, o);
      if (b !== jp) {
        var T = Va;
        Va = f, T !== null && cN(T);
      }
      return b;
    }
    function cN(r) {
      Va === null ? Va = r : Va.push.apply(Va, r);
    }
    function NG(r, o, f) {
      switch (o) {
        case _c:
        case ab:
          throw new Error("Root did not complete. This is a bug in React.");
        case jp: {
          Vp(r, Va, Ac);
          break;
        }
        case Rx: {
          if (Xd(r, f), Sc(f) && // do not delay if we're inside an act() scope
          !TN()) {
            var h = NR + iN - Lo();
            if (h > 10) {
              var b = dm(r, at);
              if (b !== at)
                break;
              var T = r.suspendedLanes;
              if (!wc(T, f)) {
                va(), mm(r, T);
                break;
              }
              r.timeoutHandle = _T(Vp.bind(null, r, Va, Ac), h);
              break;
            }
          }
          Vp(r, Va, Ac);
          break;
        }
        case sb: {
          if (Xd(r, f), ey(f))
            break;
          if (!TN()) {
            var N = rs(r, f), V = N, Z = Lo() - V, se = ZG(Z) - Z;
            if (se > 10) {
              r.timeoutHandle = _T(Vp.bind(null, r, Va, Ac), se);
              break;
            }
          }
          Vp(r, Va, Ac);
          break;
        }
        case oN: {
          Vp(r, Va, Ac);
          break;
        }
        default:
          throw new Error("Unknown root exit status.");
      }
    }
    function LG(r) {
      for (var o = r; ; ) {
        if (o.flags & Sd) {
          var f = o.updateQueue;
          if (f !== null) {
            var h = f.stores;
            if (h !== null)
              for (var b = 0; b < h.length; b++) {
                var T = h[b], N = T.getSnapshot, V = T.value;
                try {
                  if (!ut(N(), V))
                    return !1;
                } catch {
                  return !1;
                }
              }
          }
        }
        var Z = o.child;
        if (o.subtreeFlags & Sd && Z !== null) {
          Z.return = o, o = Z;
          continue;
        }
        if (o === r)
          return !0;
        for (; o.sibling === null; ) {
          if (o.return === null || o.return === r)
            return !0;
          o = o.return;
        }
        o.sibling.return = o.return, o = o.sibling;
      }
      return !0;
    }
    function Xd(r, o) {
      o = lp(o, kx), o = lp(o, ub), zS(r, o);
    }
    function dN(r) {
      if (QU(), (Xn & (_i | Bs)) !== ni)
        throw new Error("Should not already be working.");
      jc();
      var o = dm(r, at);
      if (!Yi(o, hn))
        return Ba(r, Lo()), null;
      var f = Fx(r, o);
      if (r.tag !== $d && f === jp) {
        var h = pm(r);
        h !== at && (o = h, f = jR(r, h));
      }
      if (f === ab) {
        var b = lb;
        throw Hp(r, at), Xd(r, o), Ba(r, Lo()), b;
      }
      if (f === IR)
        throw new Error("Root did not complete. This is a bug in React.");
      var T = r.current.alternate;
      return r.finishedWork = T, r.finishedLanes = o, Vp(r, Va, Ac), Ba(r, Lo()), null;
    }
    function FG(r, o) {
      o !== at && (gm(r, kn(o, hn)), Ba(r, Lo()), (Xn & (_i | Bs)) === ni && (db(), jd()));
    }
    function zR(r, o) {
      var f = Xn;
      Xn |= rN;
      try {
        return r(o);
      } finally {
        Xn = f, Xn === ni && // Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.
        !Fl.isBatchingLegacy && (db(), lI());
      }
    }
    function _G(r, o, f, h, b) {
      var T = Aa(), N = Fi.transition;
      try {
        return Fi.transition = null, So(Ti), r(o, f, h, b);
      } finally {
        So(T), Fi.transition = N, Xn === ni && db();
      }
    }
    function $c(r) {
      Kd !== null && Kd.tag === $d && (Xn & (_i | Bs)) === ni && jc();
      var o = Xn;
      Xn |= rN;
      var f = Fi.transition, h = Aa();
      try {
        return Fi.transition = null, So(Ti), r ? r() : void 0;
      } finally {
        So(h), Fi.transition = f, Xn = o, (Xn & (_i | Bs)) === ni && jd();
      }
    }
    function fN() {
      return (Xn & (_i | Bs)) !== ni;
    }
    function Lx(r, o) {
      ea(DR, ku, r), ku = kn(ku, o);
    }
    function HR(r) {
      ku = DR.current, Zi(DR, r);
    }
    function Hp(r, o) {
      r.finishedWork = null, r.finishedLanes = at;
      var f = r.timeoutHandle;
      if (f !== AT && (r.timeoutHandle = AT, uB(f)), po !== null)
        for (var h = po.return; h !== null; ) {
          var b = h.alternate;
          HD(b, h), h = h.return;
        }
      ga = r;
      var T = Bp(r.current, null);
      return po = T, ri = ku = o, oi = _c, lb = null, Ox = at, ub = at, kx = at, cb = null, Va = null, IU(), Ol.discardPendingWarnings(), T;
    }
    function pN(r, o) {
      do {
        var f = po;
        try {
          if (Uw(), AI(), Br(), MR.current = null, f === null || f.return === null) {
            oi = ab, lb = o, po = null;
            return;
          }
          if (ce && f.mode & ar && bx(f, !0), fe)
            if (fa(), o !== null && typeof o == "object" && typeof o.then == "function") {
              var h = o;
              Ds(f, h, ri);
            } else
              Yf(f, o, ri);
          a5(r, f.return, f, o, ri), vN(f);
        } catch (b) {
          o = b, po === f && f !== null ? (f = f.return, po = f) : f = po;
          continue;
        }
        return;
      } while (!0);
    }
    function hN() {
      var r = PR.current;
      return PR.current = hx, r === null ? hx : r;
    }
    function mN(r) {
      PR.current = r;
    }
    function AG() {
      NR = Lo();
    }
    function mb(r) {
      Ox = kn(r, Ox);
    }
    function $G() {
      oi === _c && (oi = Rx);
    }
    function VR() {
      (oi === _c || oi === Rx || oi === jp) && (oi = sb), ga !== null && (ap(Ox) || ap(ub)) && Xd(ga, ri);
    }
    function jG(r) {
      oi !== sb && (oi = jp), cb === null ? cb = [r] : cb.push(r);
    }
    function zG() {
      return oi === _c;
    }
    function Fx(r, o) {
      var f = Xn;
      Xn |= _i;
      var h = hN();
      if (ga !== r || ri !== o) {
        if (qi) {
          var b = r.memoizedUpdaters;
          b.size > 0 && (gb(r, ri), b.clear()), HS(r, o);
        }
        Ac = ay(), Hp(r, o);
      }
      hc(o);
      do
        try {
          HG();
          break;
        } catch (T) {
          pN(r, T);
        }
      while (!0);
      if (Uw(), Xn = f, mN(h), po !== null)
        throw new Error("Cannot commit an incomplete root. This error is likely caused by a bug in React. Please file an issue.");
      return qh(), ga = null, ri = at, oi;
    }
    function HG() {
      for (; po !== null; )
        gN(po);
    }
    function VG(r, o) {
      var f = Xn;
      Xn |= _i;
      var h = hN();
      if (ga !== r || ri !== o) {
        if (qi) {
          var b = r.memoizedUpdaters;
          b.size > 0 && (gb(r, ri), b.clear()), HS(r, o);
        }
        Ac = ay(), db(), Hp(r, o);
      }
      hc(o);
      do
        try {
          BG();
          break;
        } catch (T) {
          pN(r, T);
        }
      while (!0);
      return Uw(), mN(h), Xn = f, po !== null ? (DS(), _c) : (qh(), ga = null, ri = at, oi);
    }
    function BG() {
      for (; po !== null && !jv(); )
        gN(po);
    }
    function gN(r) {
      var o = r.alternate;
      wr(r);
      var f;
      (r.mode & ar) !== nn ? (G1(r), f = BR(o, r, ku), bx(r, !0)) : f = BR(o, r, ku), Br(), r.memoizedProps = r.pendingProps, f === null ? vN(r) : po = f, MR.current = null;
    }
    function vN(r) {
      var o = r;
      do {
        var f = o.alternate, h = o.return;
        if ((o.flags & Wf) === tn) {
          wr(o);
          var b = void 0;
          if ((o.mode & ar) === nn ? b = zD(f, o, ku) : (G1(o), b = zD(f, o, ku), bx(o, !1)), Br(), b !== null) {
            po = b;
            return;
          }
        } else {
          var T = $5(f, o);
          if (T !== null) {
            T.flags &= RS, po = T;
            return;
          }
          if ((o.mode & ar) !== nn) {
            bx(o, !1);
            for (var N = o.actualDuration, V = o.child; V !== null; )
              N += V.actualDuration, V = V.sibling;
            o.actualDuration = N;
          }
          if (h !== null)
            h.flags |= Wf, h.subtreeFlags = tn, h.deletions = null;
          else {
            oi = IR, po = null;
            return;
          }
        }
        var Z = o.sibling;
        if (Z !== null) {
          po = Z;
          return;
        }
        o = h, po = o;
      } while (o !== null);
      oi === _c && (oi = oN);
    }
    function Vp(r, o, f) {
      var h = Aa(), b = Fi.transition;
      try {
        Fi.transition = null, So(Ti), UG(r, o, f, h);
      } finally {
        Fi.transition = b, So(h);
      }
      return null;
    }
    function UG(r, o, f, h) {
      do
        jc();
      while (Kd !== null);
      if (t4(), (Xn & (_i | Bs)) !== ni)
        throw new Error("Should not already be working.");
      var b = r.finishedWork, T = r.finishedLanes;
      if (Gv(T), b === null)
        return Wv(), null;
      if (T === at && d("root.finishedLanes should not be empty during a commit. This is a bug in React."), r.finishedWork = null, r.finishedLanes = at, b === r.current)
        throw new Error("Cannot commit the same tree as before. This error is likely caused by a bug in React. Please file an issue.");
      r.callbackNode = null, r.callbackPriority = rr;
      var N = kn(b.lanes, b.childLanes);
      oy(r, N), r === ga && (ga = null, po = null, ri = at), ((b.subtreeFlags & vl) !== tn || (b.flags & vl) !== tn) && (zp || (zp = !0, _R = f, WR(yl, function() {
        return jc(), null;
      })));
      var V = (b.subtreeFlags & (iu | au | su | vl)) !== tn, Z = (b.flags & (iu | au | su | vl)) !== tn;
      if (V || Z) {
        var se = Fi.transition;
        Fi.transition = null;
        var le = Aa();
        So(Ti);
        var Te = Xn;
        Xn |= Bs, MR.current = null, B5(r, b), lD(), rG(r, b, T), nB(r.containerInfo), r.current = b, Xf(T), oG(b, r, T), Qf(), zv(), Xn = Te, So(le), Fi.transition = se;
      } else
        r.current = b, lD();
      var xe = zp;
      if (zp ? (zp = !1, Kd = r, fb = T) : (rg = 0, Ix = null), N = r.pendingLanes, N === at && (ng = null), xe || SN(r.current, !1), Vv(b.stateNode, h), qi && r.memoizedUpdaters.clear(), xG(), Ba(r, Lo()), o !== null)
        for (var Ae = r.onRecoverableError, ze = 0; ze < o.length; ze++) {
          var qe = o[ze], Dt = qe.stack, ln = qe.digest;
          Ae(qe.value, {
            componentStack: Dt,
            digest: ln
          });
        }
      if (Px) {
        Px = !1;
        var Jt = LR;
        throw LR = null, Jt;
      }
      return Yi(fb, hn) && r.tag !== $d && jc(), N = r.pendingLanes, Yi(N, hn) ? (YU(), r === AR ? pb++ : (pb = 0, AR = r)) : pb = 0, jd(), Wv(), null;
    }
    function jc() {
      if (Kd !== null) {
        var r = US(fb), o = fp(Fa, r), f = Fi.transition, h = Aa();
        try {
          return Fi.transition = null, So(o), WG();
        } finally {
          So(h), Fi.transition = f;
        }
      }
      return !1;
    }
    function GG(r) {
      FR.push(r), zp || (zp = !0, WR(yl, function() {
        return jc(), null;
      }));
    }
    function WG() {
      if (Kd === null)
        return !1;
      var r = _R;
      _R = null;
      var o = Kd, f = fb;
      if (Kd = null, fb = at, (Xn & (_i | Bs)) !== ni)
        throw new Error("Cannot flush passive effects while already rendering.");
      $R = !0, Mx = !1, pc(f);
      var h = Xn;
      Xn |= Bs, dG(o.current), sG(o, o.current, f, r);
      {
        var b = FR;
        FR = [];
        for (var T = 0; T < b.length; T++) {
          var N = b[T];
          q5(o, N);
        }
      }
      Yv(), SN(o.current, !0), Xn = h, jd(), Mx ? o === Ix ? rg++ : (rg = 0, Ix = o) : rg = 0, $R = !1, Mx = !1, Bv(o);
      {
        var V = o.current.stateNode;
        V.effectDuration = 0, V.passiveEffectDuration = 0;
      }
      return !0;
    }
    function yN(r) {
      return ng !== null && ng.has(r);
    }
    function qG(r) {
      ng === null ? ng = /* @__PURE__ */ new Set([r]) : ng.add(r);
    }
    function KG(r) {
      Px || (Px = !0, LR = r);
    }
    var YG = KG;
    function bN(r, o, f) {
      var h = Ap(f, o), b = gD(r, h, hn), T = Hd(r, b, hn), N = va();
      T !== null && (Rd(T, hn, N), Ba(T, N));
    }
    function Ur(r, o, f) {
      if (z5(f), vb(!1), r.tag === C) {
        bN(r, r, f);
        return;
      }
      var h = null;
      for (h = o; h !== null; ) {
        if (h.tag === C) {
          bN(h, r, f);
          return;
        } else if (h.tag === v) {
          var b = h.type, T = h.stateNode;
          if (typeof b.getDerivedStateFromError == "function" || typeof T.componentDidCatch == "function" && !yN(T)) {
            var N = Ap(f, r), V = uR(h, N, hn), Z = Hd(h, V, hn), se = va();
            Z !== null && (Rd(Z, hn, se), Ba(Z, se));
            return;
          }
        }
        h = h.return;
      }
      d(`Internal React error: Attempted to capture a commit phase error inside a detached tree. This indicates a bug in React. Likely causes include deleting the same fiber more than once, committing an already-finished tree, or an inconsistent return pointer.

Error message:

%s`, f);
    }
    function XG(r, o, f) {
      var h = r.pingCache;
      h !== null && h.delete(o);
      var b = va();
      mm(r, f), i4(r), ga === r && wc(ri, f) && (oi === sb || oi === Rx && Sc(ri) && Lo() - NR < iN ? Hp(r, at) : kx = kn(kx, f)), Ba(r, b);
    }
    function CN(r, o) {
      o === rr && (o = MG(r));
      var f = va(), h = za(r, o);
      h !== null && (Rd(h, o, f), Ba(h, f));
    }
    function QG(r) {
      var o = r.memoizedState, f = rr;
      o !== null && (f = o.retryLane), CN(r, f);
    }
    function JG(r, o) {
      var f = rr, h;
      switch (r.tag) {
        case D:
          h = r.stateNode;
          var b = r.memoizedState;
          b !== null && (f = b.retryLane);
          break;
        case G:
          h = r.stateNode;
          break;
        default:
          throw new Error("Pinged unknown suspense boundary type. This is probably a bug in React.");
      }
      h !== null && h.delete(o), CN(r, f);
    }
    function ZG(r) {
      return r < 120 ? 120 : r < 480 ? 480 : r < 1080 ? 1080 : r < 1920 ? 1920 : r < 3e3 ? 3e3 : r < 4320 ? 4320 : RG(r / 1960) * 1960;
    }
    function e4() {
      if (pb > kG)
        throw pb = 0, AR = null, new Error("Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops.");
      rg > PG && (rg = 0, Ix = null, d("Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render."));
    }
    function t4() {
      Ol.flushLegacyContextWarning(), Ol.flushPendingUnsafeLifecycleWarnings();
    }
    function SN(r, o) {
      wr(r), _x(r, ou, CG), o && _x(r, Ps, SG), _x(r, ou, yG), o && _x(r, Ps, bG), Br();
    }
    function _x(r, o, f) {
      for (var h = r, b = null; h !== null; ) {
        var T = h.subtreeFlags & o;
        h !== b && h.child !== null && T !== tn ? h = h.child : ((h.flags & o) !== tn && f(h), h.sibling !== null ? h = h.sibling : h = b = h.return);
      }
    }
    var Ax = null;
    function wN(r) {
      {
        if ((Xn & _i) !== ni || !(r.mode & Ln))
          return;
        var o = r.tag;
        if (o !== y && o !== C && o !== v && o !== m && o !== L && o !== H && o !== K)
          return;
        var f = Sn(r) || "ReactComponent";
        if (Ax !== null) {
          if (Ax.has(f))
            return;
          Ax.add(f);
        } else
          Ax = /* @__PURE__ */ new Set([f]);
        var h = qo;
        try {
          wr(r), d("Can't perform a React state update on a component that hasn't mounted yet. This indicates that you have a side-effect in your render function that asynchronously later calls tries to update the component. Move this work to useEffect instead.");
        } finally {
          h ? wr(r) : Br();
        }
      }
    }
    var BR;
    {
      var n4 = null;
      BR = function(r, o, f) {
        var h = MN(n4, o);
        try {
          return FD(r, o, f);
        } catch (T) {
          if (hU() || T !== null && typeof T == "object" && typeof T.then == "function")
            throw T;
          if (Uw(), AI(), HD(r, o), MN(o, h), o.mode & ar && G1(o), ru(null, FD, null, r, o, f), ml()) {
            var b = Gf();
            typeof b == "object" && b !== null && b._suppressLogging && typeof T == "object" && T !== null && !T._suppressLogging && (T._suppressLogging = !0);
          }
          throw T;
        }
      };
    }
    var xN = !1, UR;
    UR = /* @__PURE__ */ new Set();
    function r4(r) {
      if (ws && !WU())
        switch (r.tag) {
          case m:
          case L:
          case K: {
            var o = po && Sn(po) || "Unknown", f = o;
            if (!UR.has(f)) {
              UR.add(f);
              var h = Sn(r) || "Unknown";
              d("Cannot update a component (`%s`) while rendering a different component (`%s`). To locate the bad setState() call inside `%s`, follow the stack trace as described in https://reactjs.org/link/setstate-in-render", h, o, o);
            }
            break;
          }
          case v: {
            xN || (d("Cannot update during an existing state transition (such as within `render`). Render methods should be a pure function of props and state."), xN = !0);
            break;
          }
        }
    }
    function gb(r, o) {
      if (qi) {
        var f = r.memoizedUpdaters;
        f.forEach(function(h) {
          cp(r, h, o);
        });
      }
    }
    var GR = {};
    function WR(r, o) {
      {
        var f = Fl.current;
        return f !== null ? (f.push(o), GR) : $v(r, o);
      }
    }
    function EN(r) {
      if (r !== GR)
        return kS(r);
    }
    function TN() {
      return Fl.current !== null;
    }
    function o4(r) {
      {
        if (r.mode & Ln) {
          if (!nN())
            return;
        } else if (!TG() || Xn !== ni || r.tag !== m && r.tag !== L && r.tag !== K)
          return;
        if (Fl.current === null) {
          var o = qo;
          try {
            wr(r), d(`An update to %s inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act`, Sn(r));
          } finally {
            o ? wr(r) : Br();
          }
        }
      }
    }
    function i4(r) {
      r.tag !== $d && nN() && Fl.current === null && d(`A suspended resource finished loading inside a test, but the event was not wrapped in act(...).

When testing, code that resolves suspended data should be wrapped into act(...):

act(() => {
  /* finish loading suspended data */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act`);
    }
    function vb(r) {
      lN = r;
    }
    var Us = null, og = null, a4 = function(r) {
      Us = r;
    };
    function ig(r) {
      {
        if (Us === null)
          return r;
        var o = Us(r);
        return o === void 0 ? r : o.current;
      }
    }
    function qR(r) {
      return ig(r);
    }
    function KR(r) {
      {
        if (Us === null)
          return r;
        var o = Us(r);
        if (o === void 0) {
          if (r != null && typeof r.render == "function") {
            var f = ig(r.render);
            if (r.render !== f) {
              var h = {
                $$typeof: We,
                render: f
              };
              return r.displayName !== void 0 && (h.displayName = r.displayName), h;
            }
          }
          return r;
        }
        return o.current;
      }
    }
    function RN(r, o) {
      {
        if (Us === null)
          return !1;
        var f = r.elementType, h = o.type, b = !1, T = typeof h == "object" && h !== null ? h.$$typeof : null;
        switch (r.tag) {
          case v: {
            typeof h == "function" && (b = !0);
            break;
          }
          case m: {
            (typeof h == "function" || T === Le) && (b = !0);
            break;
          }
          case L: {
            (T === We || T === Le) && (b = !0);
            break;
          }
          case H:
          case K: {
            (T === gn || T === Le) && (b = !0);
            break;
          }
          default:
            return !1;
        }
        if (b) {
          var N = Us(f);
          if (N !== void 0 && N === Us(h))
            return !0;
        }
        return !1;
      }
    }
    function ON(r) {
      {
        if (Us === null || typeof WeakSet != "function")
          return;
        og === null && (og = /* @__PURE__ */ new WeakSet()), og.add(r);
      }
    }
    var s4 = function(r, o) {
      {
        if (Us === null)
          return;
        var f = o.staleFamilies, h = o.updatedFamilies;
        jc(), $c(function() {
          YR(r.current, h, f);
        });
      }
    }, l4 = function(r, o) {
      {
        if (r.context !== as)
          return;
        jc(), $c(function() {
          yb(o, r, null, null);
        });
      }
    };
    function YR(r, o, f) {
      {
        var h = r.alternate, b = r.child, T = r.sibling, N = r.tag, V = r.type, Z = null;
        switch (N) {
          case m:
          case K:
          case v:
            Z = V;
            break;
          case L:
            Z = V.render;
            break;
        }
        if (Us === null)
          throw new Error("Expected resolveFamily to be set during hot reload.");
        var se = !1, le = !1;
        if (Z !== null) {
          var Te = Us(Z);
          Te !== void 0 && (f.has(Te) ? le = !0 : o.has(Te) && (N === v ? le = !0 : se = !0));
        }
        if (og !== null && (og.has(r) || h !== null && og.has(h)) && (le = !0), le && (r._debugNeedsRemount = !0), le || se) {
          var xe = za(r, hn);
          xe !== null && ii(xe, r, hn, Fr);
        }
        b !== null && !le && YR(b, o, f), T !== null && YR(T, o, f);
      }
    }
    var u4 = function(r, o) {
      {
        var f = /* @__PURE__ */ new Set(), h = new Set(o.map(function(b) {
          return b.current;
        }));
        return XR(r.current, h, f), f;
      }
    };
    function XR(r, o, f) {
      {
        var h = r.child, b = r.sibling, T = r.tag, N = r.type, V = null;
        switch (T) {
          case m:
          case K:
          case v:
            V = N;
            break;
          case L:
            V = N.render;
            break;
        }
        var Z = !1;
        V !== null && o.has(V) && (Z = !0), Z ? c4(r, f) : h !== null && XR(h, o, f), b !== null && XR(b, o, f);
      }
    }
    function c4(r, o) {
      {
        var f = d4(r, o);
        if (f)
          return;
        for (var h = r; ; ) {
          switch (h.tag) {
            case R:
              o.add(h.stateNode);
              return;
            case S:
              o.add(h.stateNode.containerInfo);
              return;
            case C:
              o.add(h.stateNode.containerInfo);
              return;
          }
          if (h.return === null)
            throw new Error("Expected to reach root first.");
          h = h.return;
        }
      }
    }
    function d4(r, o) {
      for (var f = r, h = !1; ; ) {
        if (f.tag === R)
          h = !0, o.add(f.stateNode);
        else if (f.child !== null) {
          f.child.return = f, f = f.child;
          continue;
        }
        if (f === r)
          return h;
        for (; f.sibling === null; ) {
          if (f.return === null || f.return === r)
            return h;
          f = f.return;
        }
        f.sibling.return = f.return, f = f.sibling;
      }
      return !1;
    }
    var QR;
    {
      QR = !1;
      try {
        var kN = Object.preventExtensions({});
      } catch {
        QR = !0;
      }
    }
    function f4(r, o, f, h) {
      this.tag = r, this.key = f, this.elementType = null, this.type = null, this.stateNode = null, this.return = null, this.child = null, this.sibling = null, this.index = 0, this.ref = null, this.pendingProps = o, this.memoizedProps = null, this.updateQueue = null, this.memoizedState = null, this.dependencies = null, this.mode = h, this.flags = tn, this.subtreeFlags = tn, this.deletions = null, this.lanes = at, this.childLanes = at, this.alternate = null, this.actualDuration = Number.NaN, this.actualStartTime = Number.NaN, this.selfBaseDuration = Number.NaN, this.treeBaseDuration = Number.NaN, this.actualDuration = 0, this.actualStartTime = -1, this.selfBaseDuration = 0, this.treeBaseDuration = 0, this._debugSource = null, this._debugOwner = null, this._debugNeedsRemount = !1, this._debugHookTypes = null, !QR && typeof Object.preventExtensions == "function" && Object.preventExtensions(this);
    }
    var ss = function(r, o, f, h) {
      return new f4(r, o, f, h);
    };
    function JR(r) {
      var o = r.prototype;
      return !!(o && o.isReactComponent);
    }
    function p4(r) {
      return typeof r == "function" && !JR(r) && r.defaultProps === void 0;
    }
    function h4(r) {
      if (typeof r == "function")
        return JR(r) ? v : m;
      if (r != null) {
        var o = r.$$typeof;
        if (o === We)
          return L;
        if (o === gn)
          return H;
      }
      return y;
    }
    function Bp(r, o) {
      var f = r.alternate;
      f === null ? (f = ss(r.tag, o, r.key, r.mode), f.elementType = r.elementType, f.type = r.type, f.stateNode = r.stateNode, f._debugSource = r._debugSource, f._debugOwner = r._debugOwner, f._debugHookTypes = r._debugHookTypes, f.alternate = r, r.alternate = f) : (f.pendingProps = o, f.type = r.type, f.flags = tn, f.subtreeFlags = tn, f.deletions = null, f.actualDuration = 0, f.actualStartTime = -1), f.flags = r.flags & yo, f.childLanes = r.childLanes, f.lanes = r.lanes, f.child = r.child, f.memoizedProps = r.memoizedProps, f.memoizedState = r.memoizedState, f.updateQueue = r.updateQueue;
      var h = r.dependencies;
      switch (f.dependencies = h === null ? null : {
        lanes: h.lanes,
        firstContext: h.firstContext
      }, f.sibling = r.sibling, f.index = r.index, f.ref = r.ref, f.selfBaseDuration = r.selfBaseDuration, f.treeBaseDuration = r.treeBaseDuration, f._debugNeedsRemount = r._debugNeedsRemount, f.tag) {
        case y:
        case m:
        case K:
          f.type = ig(r.type);
          break;
        case v:
          f.type = qR(r.type);
          break;
        case L:
          f.type = KR(r.type);
          break;
      }
      return f;
    }
    function m4(r, o) {
      r.flags &= yo | Qr;
      var f = r.alternate;
      if (f === null)
        r.childLanes = at, r.lanes = o, r.child = null, r.subtreeFlags = tn, r.memoizedProps = null, r.memoizedState = null, r.updateQueue = null, r.dependencies = null, r.stateNode = null, r.selfBaseDuration = 0, r.treeBaseDuration = 0;
      else {
        r.childLanes = f.childLanes, r.lanes = f.lanes, r.child = f.child, r.subtreeFlags = tn, r.deletions = null, r.memoizedProps = f.memoizedProps, r.memoizedState = f.memoizedState, r.updateQueue = f.updateQueue, r.type = f.type;
        var h = f.dependencies;
        r.dependencies = h === null ? null : {
          lanes: h.lanes,
          firstContext: h.firstContext
        }, r.selfBaseDuration = f.selfBaseDuration, r.treeBaseDuration = f.treeBaseDuration;
      }
      return r;
    }
    function g4(r, o, f) {
      var h;
      return r === Lw ? (h = Ln, o === !0 && (h |= Tr, h |= sr)) : h = nn, qi && (h |= ar), ss(C, null, null, h);
    }
    function ZR(r, o, f, h, b, T) {
      var N = y, V = r;
      if (typeof r == "function")
        JR(r) ? (N = v, V = qR(V)) : V = ig(V);
      else if (typeof r == "string")
        N = R;
      else
        e: switch (r) {
          case zn:
            return Qd(f.children, b, T, o);
          case Ar:
            N = k, b |= Tr, (b & Ln) !== nn && (b |= sr);
            break;
          case ro:
            return v4(f, b, T, o);
          case pt:
            return y4(f, b, T, o);
          case Ot:
            return b4(f, b, T, o);
          case Gt:
            return PN(f, b, T, o);
          case Bt:
          case ke:
          case Qt:
          case Hn:
          case Ze:
          default: {
            if (typeof r == "object" && r !== null)
              switch (r.$$typeof) {
                case mo:
                  N = _;
                  break e;
                case ve:
                  N = F;
                  break e;
                case We:
                  N = L, V = KR(V);
                  break e;
                case gn:
                  N = H;
                  break e;
                case Le:
                  N = Q, V = null;
                  break e;
              }
            var Z = "";
            {
              (r === void 0 || typeof r == "object" && r !== null && Object.keys(r).length === 0) && (Z += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.");
              var se = h ? Sn(h) : null;
              se && (Z += `

Check the render method of \`` + se + "`.");
            }
            throw new Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) " + ("but got: " + (r == null ? r : typeof r) + "." + Z));
          }
        }
      var le = ss(N, f, o, b);
      return le.elementType = r, le.type = V, le.lanes = T, le._debugOwner = h, le;
    }
    function eO(r, o, f) {
      var h = null;
      h = r._owner;
      var b = r.type, T = r.key, N = r.props, V = ZR(b, T, N, h, o, f);
      return V._debugSource = r._source, V._debugOwner = r._owner, V;
    }
    function Qd(r, o, f, h) {
      var b = ss(E, r, h, o);
      return b.lanes = f, b;
    }
    function v4(r, o, f, h) {
      typeof r.id != "string" && d('Profiler must specify an "id" of type `string` as a prop. Received the type `%s` instead.', typeof r.id);
      var b = ss(M, r, h, o | ar);
      return b.elementType = ro, b.lanes = f, b.stateNode = {
        effectDuration: 0,
        passiveEffectDuration: 0
      }, b;
    }
    function y4(r, o, f, h) {
      var b = ss(D, r, h, o);
      return b.elementType = pt, b.lanes = f, b;
    }
    function b4(r, o, f, h) {
      var b = ss(G, r, h, o);
      return b.elementType = Ot, b.lanes = f, b;
    }
    function PN(r, o, f, h) {
      var b = ss(B, r, h, o);
      b.elementType = Gt, b.lanes = f;
      var T = {
        isHidden: !1
      };
      return b.stateNode = T, b;
    }
    function tO(r, o, f) {
      var h = ss(O, r, null, o);
      return h.lanes = f, h;
    }
    function C4() {
      var r = ss(R, null, null, nn);
      return r.elementType = "DELETED", r;
    }
    function S4(r) {
      var o = ss(I, null, null, nn);
      return o.stateNode = r, o;
    }
    function nO(r, o, f) {
      var h = r.children !== null ? r.children : [], b = ss(S, h, r.key, o);
      return b.lanes = f, b.stateNode = {
        containerInfo: r.containerInfo,
        pendingChildren: null,
        // Used by persistent updates
        implementation: r.implementation
      }, b;
    }
    function MN(r, o) {
      return r === null && (r = ss(y, null, null, nn)), r.tag = o.tag, r.key = o.key, r.elementType = o.elementType, r.type = o.type, r.stateNode = o.stateNode, r.return = o.return, r.child = o.child, r.sibling = o.sibling, r.index = o.index, r.ref = o.ref, r.pendingProps = o.pendingProps, r.memoizedProps = o.memoizedProps, r.updateQueue = o.updateQueue, r.memoizedState = o.memoizedState, r.dependencies = o.dependencies, r.mode = o.mode, r.flags = o.flags, r.subtreeFlags = o.subtreeFlags, r.deletions = o.deletions, r.lanes = o.lanes, r.childLanes = o.childLanes, r.alternate = o.alternate, r.actualDuration = o.actualDuration, r.actualStartTime = o.actualStartTime, r.selfBaseDuration = o.selfBaseDuration, r.treeBaseDuration = o.treeBaseDuration, r._debugSource = o._debugSource, r._debugOwner = o._debugOwner, r._debugNeedsRemount = o._debugNeedsRemount, r._debugHookTypes = o._debugHookTypes, r;
    }
    function w4(r, o, f, h, b) {
      this.tag = o, this.containerInfo = r, this.pendingChildren = null, this.current = null, this.pingCache = null, this.finishedWork = null, this.timeoutHandle = AT, this.context = null, this.pendingContext = null, this.callbackNode = null, this.callbackPriority = rr, this.eventTimes = up(at), this.expirationTimes = up(Fr), this.pendingLanes = at, this.suspendedLanes = at, this.pingedLanes = at, this.expiredLanes = at, this.mutableReadLanes = at, this.finishedLanes = at, this.entangledLanes = at, this.entanglements = up(at), this.identifierPrefix = h, this.onRecoverableError = b, this.mutableSourceEagerHydrationData = null, this.effectDuration = 0, this.passiveEffectDuration = 0;
      {
        this.memoizedUpdaters = /* @__PURE__ */ new Set();
        for (var T = this.pendingUpdatersLaneMap = [], N = 0; N < mc; N++)
          T.push(/* @__PURE__ */ new Set());
      }
      switch (o) {
        case Lw:
          this._debugRootType = f ? "hydrateRoot()" : "createRoot()";
          break;
        case $d:
          this._debugRootType = f ? "hydrate()" : "render()";
          break;
      }
    }
    function IN(r, o, f, h, b, T, N, V, Z, se) {
      var le = new w4(r, o, f, V, Z), Te = g4(o, T);
      le.current = Te, Te.stateNode = le;
      {
        var xe = {
          element: h,
          isDehydrated: f,
          cache: null,
          // not enabled yet
          transitions: null,
          pendingSuspenseBoundaries: null
        };
        Te.memoizedState = xe;
      }
      return m1(Te), le;
    }
    var rO = "18.3.1";
    function x4(r, o, f) {
      var h = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : null;
      return Ne(h), {
        // This tag allow us to uniquely identify this as a React Portal
        $$typeof: on,
        key: h == null ? null : "" + h,
        children: r,
        containerInfo: o,
        implementation: f
      };
    }
    var oO, iO;
    oO = !1, iO = {};
    function DN(r) {
      if (!r)
        return as;
      var o = Cd(r), f = iU(o);
      if (o.tag === v) {
        var h = o.type;
        if (Su(h))
          return iI(o, h, f);
      }
      return f;
    }
    function E4(r, o) {
      {
        var f = Cd(r);
        if (f === void 0) {
          if (typeof r.render == "function")
            throw new Error("Unable to find node on an unmounted component.");
          var h = Object.keys(r).join(",");
          throw new Error("Argument appears to not be a ReactComponent. Keys: " + h);
        }
        var b = Gi(f);
        if (b === null)
          return null;
        if (b.mode & Tr) {
          var T = Sn(f) || "Component";
          if (!iO[T]) {
            iO[T] = !0;
            var N = qo;
            try {
              wr(b), f.mode & Tr ? d("%s is deprecated in StrictMode. %s was passed an instance of %s which is inside StrictMode. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node", o, o, T) : d("%s is deprecated in StrictMode. %s was passed an instance of %s which renders StrictMode children. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node", o, o, T);
            } finally {
              N ? wr(N) : Br();
            }
          }
        }
        return b.stateNode;
      }
    }
    function NN(r, o, f, h, b, T, N, V) {
      var Z = !1, se = null;
      return IN(r, o, Z, se, f, h, b, T, N);
    }
    function LN(r, o, f, h, b, T, N, V, Z, se) {
      var le = !0, Te = IN(f, h, le, r, b, T, N, V, Z);
      Te.context = DN(null);
      var xe = Te.current, Ae = va(), ze = Yd(xe), qe = Lc(Ae, ze);
      return qe.callback = o ?? null, Hd(xe, qe, ze), IG(Te, ze, Ae), Te;
    }
    function yb(r, o, f, h) {
      Hv(o, r);
      var b = o.current, T = va(), N = Yd(b);
      Zr(N);
      var V = DN(f);
      o.context === null ? o.context = V : o.pendingContext = V, ws && qo !== null && !oO && (oO = !0, d(`Render methods should be a pure function of props and state; triggering nested component updates from render is not allowed. If necessary, trigger nested updates in componentDidUpdate.

Check the render method of %s.`, Sn(qo) || "Unknown"));
      var Z = Lc(T, N);
      Z.payload = {
        element: r
      }, h = h === void 0 ? null : h, h !== null && (typeof h != "function" && d("render(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", h), Z.callback = h);
      var se = Hd(b, Z, N);
      return se !== null && (ii(se, b, N, T), Yw(se, b, N)), N;
    }
    function $x(r) {
      var o = r.current;
      if (!o.child)
        return null;
      switch (o.child.tag) {
        case R:
          return o.child.stateNode;
        default:
          return o.child.stateNode;
      }
    }
    function T4(r) {
      switch (r.tag) {
        case C: {
          var o = r.stateNode;
          if (vm(o)) {
            var f = LS(o);
            FG(o, f);
          }
          break;
        }
        case D: {
          $c(function() {
            var b = za(r, hn);
            if (b !== null) {
              var T = va();
              ii(b, r, hn, T);
            }
          });
          var h = hn;
          aO(r, h);
          break;
        }
      }
    }
    function FN(r, o) {
      var f = r.memoizedState;
      f !== null && f.dehydrated !== null && (f.retryLane = jS(f.retryLane, o));
    }
    function aO(r, o) {
      FN(r, o);
      var f = r.alternate;
      f && FN(f, o);
    }
    function R4(r) {
      if (r.tag === D) {
        var o = rp, f = za(r, o);
        if (f !== null) {
          var h = va();
          ii(f, r, o, h);
        }
        aO(r, o);
      }
    }
    function O4(r) {
      if (r.tag === D) {
        var o = Yd(r), f = za(r, o);
        if (f !== null) {
          var h = va();
          ii(f, r, o, h);
        }
        aO(r, o);
      }
    }
    function _N(r) {
      var o = qr(r);
      return o === null ? null : o.stateNode;
    }
    var AN = function(r) {
      return null;
    };
    function k4(r) {
      return AN(r);
    }
    var $N = function(r) {
      return !1;
    };
    function P4(r) {
      return $N(r);
    }
    var jN = null, zN = null, HN = null, VN = null, BN = null, UN = null, GN = null, WN = null, qN = null;
    {
      var KN = function(r, o, f) {
        var h = o[f], b = Dn(r) ? r.slice() : Rn({}, r);
        return f + 1 === o.length ? (Dn(b) ? b.splice(h, 1) : delete b[h], b) : (b[h] = KN(r[h], o, f + 1), b);
      }, YN = function(r, o) {
        return KN(r, o, 0);
      }, XN = function(r, o, f, h) {
        var b = o[h], T = Dn(r) ? r.slice() : Rn({}, r);
        if (h + 1 === o.length) {
          var N = f[h];
          T[N] = T[b], Dn(T) ? T.splice(b, 1) : delete T[b];
        } else
          T[b] = XN(
            // $FlowFixMe number or string is fine here
            r[b],
            o,
            f,
            h + 1
          );
        return T;
      }, QN = function(r, o, f) {
        if (o.length !== f.length) {
          u("copyWithRename() expects paths of the same length");
          return;
        } else
          for (var h = 0; h < f.length - 1; h++)
            if (o[h] !== f[h]) {
              u("copyWithRename() expects paths to be the same except for the deepest key");
              return;
            }
        return XN(r, o, f, 0);
      }, JN = function(r, o, f, h) {
        if (f >= o.length)
          return h;
        var b = o[f], T = Dn(r) ? r.slice() : Rn({}, r);
        return T[b] = JN(r[b], o, f + 1, h), T;
      }, ZN = function(r, o, f) {
        return JN(r, o, 0, f);
      }, sO = function(r, o) {
        for (var f = r.memoizedState; f !== null && o > 0; )
          f = f.next, o--;
        return f;
      };
      jN = function(r, o, f, h) {
        var b = sO(r, o);
        if (b !== null) {
          var T = ZN(b.memoizedState, f, h);
          b.memoizedState = T, b.baseState = T, r.memoizedProps = Rn({}, r.memoizedProps);
          var N = za(r, hn);
          N !== null && ii(N, r, hn, Fr);
        }
      }, zN = function(r, o, f) {
        var h = sO(r, o);
        if (h !== null) {
          var b = YN(h.memoizedState, f);
          h.memoizedState = b, h.baseState = b, r.memoizedProps = Rn({}, r.memoizedProps);
          var T = za(r, hn);
          T !== null && ii(T, r, hn, Fr);
        }
      }, HN = function(r, o, f, h) {
        var b = sO(r, o);
        if (b !== null) {
          var T = QN(b.memoizedState, f, h);
          b.memoizedState = T, b.baseState = T, r.memoizedProps = Rn({}, r.memoizedProps);
          var N = za(r, hn);
          N !== null && ii(N, r, hn, Fr);
        }
      }, VN = function(r, o, f) {
        r.pendingProps = ZN(r.memoizedProps, o, f), r.alternate && (r.alternate.pendingProps = r.pendingProps);
        var h = za(r, hn);
        h !== null && ii(h, r, hn, Fr);
      }, BN = function(r, o) {
        r.pendingProps = YN(r.memoizedProps, o), r.alternate && (r.alternate.pendingProps = r.pendingProps);
        var f = za(r, hn);
        f !== null && ii(f, r, hn, Fr);
      }, UN = function(r, o, f) {
        r.pendingProps = QN(r.memoizedProps, o, f), r.alternate && (r.alternate.pendingProps = r.pendingProps);
        var h = za(r, hn);
        h !== null && ii(h, r, hn, Fr);
      }, GN = function(r) {
        var o = za(r, hn);
        o !== null && ii(o, r, hn, Fr);
      }, WN = function(r) {
        AN = r;
      }, qN = function(r) {
        $N = r;
      };
    }
    function M4(r) {
      var o = Gi(r);
      return o === null ? null : o.stateNode;
    }
    function I4(r) {
      return null;
    }
    function D4() {
      return qo;
    }
    function N4(r) {
      var o = r.findFiberByHostInstance, f = n.ReactCurrentDispatcher;
      return xd({
        bundleType: r.bundleType,
        version: r.version,
        rendererPackageName: r.rendererPackageName,
        rendererConfig: r.rendererConfig,
        overrideHookState: jN,
        overrideHookStateDeletePath: zN,
        overrideHookStateRenamePath: HN,
        overrideProps: VN,
        overridePropsDeletePath: BN,
        overridePropsRenamePath: UN,
        setErrorHandler: WN,
        setSuspenseHandler: qN,
        scheduleUpdate: GN,
        currentDispatcherRef: f,
        findHostInstanceByFiber: M4,
        findFiberByHostInstance: o || I4,
        // React Refresh
        findHostInstancesForRefresh: u4,
        scheduleRefresh: s4,
        scheduleRoot: l4,
        setRefreshHandler: a4,
        // Enables DevTools to append owner stacks to error messages in DEV mode.
        getCurrentFiber: D4,
        // Enables DevTools to detect reconciler version rather than renderer version
        // which may not match for third party renderers.
        reconcilerVersion: rO
      });
    }
    var eL = typeof reportError == "function" ? (
      // In modern browsers, reportError will dispatch an error event,
      // emulating an uncaught JavaScript error.
      reportError
    ) : function(r) {
      console.error(r);
    };
    function lO(r) {
      this._internalRoot = r;
    }
    jx.prototype.render = lO.prototype.render = function(r) {
      var o = this._internalRoot;
      if (o === null)
        throw new Error("Cannot update an unmounted root.");
      {
        typeof arguments[1] == "function" ? d("render(...): does not support the second callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().") : zx(arguments[1]) ? d("You passed a container to the second argument of root.render(...). You don't need to pass it again since you already passed it to create the root.") : typeof arguments[1] < "u" && d("You passed a second argument to root.render(...) but it only accepts one argument.");
        var f = o.containerInfo;
        if (f.nodeType !== go) {
          var h = _N(o.current);
          h && h.parentNode !== f && d("render(...): It looks like the React-rendered content of the root container was removed without using React. This is not supported and will cause errors. Instead, call root.unmount() to empty a root's container.");
        }
      }
      yb(r, o, null, null);
    }, jx.prototype.unmount = lO.prototype.unmount = function() {
      typeof arguments[0] == "function" && d("unmount(...): does not support a callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().");
      var r = this._internalRoot;
      if (r !== null) {
        this._internalRoot = null;
        var o = r.containerInfo;
        fN() && d("Attempted to synchronously unmount a root while React was already rendering. React cannot finish unmounting the root until the current render has completed, which may lead to a race condition."), $c(function() {
          yb(null, r, null, null);
        }), eI(o);
      }
    };
    function L4(r, o) {
      if (!zx(r))
        throw new Error("createRoot(...): Target container is not a DOM element.");
      tL(r);
      var f = !1, h = !1, b = "", T = eL;
      o != null && (o.hydrate ? u("hydrate through createRoot is deprecated. Use ReactDOMClient.hydrateRoot(container, <App />) instead.") : typeof o == "object" && o !== null && o.$$typeof === en && d(`You passed a JSX element to createRoot. You probably meant to call root.render instead. Example usage:

  let root = createRoot(domContainer);
  root.render(<App />);`), o.unstable_strictMode === !0 && (f = !0), o.identifierPrefix !== void 0 && (b = o.identifierPrefix), o.onRecoverableError !== void 0 && (T = o.onRecoverableError), o.transitionCallbacks !== void 0 && o.transitionCallbacks);
      var N = NN(r, Lw, null, f, h, b, T);
      Ow(N.current, r);
      var V = r.nodeType === go ? r.parentNode : r;
      return Ey(V), new lO(N);
    }
    function jx(r) {
      this._internalRoot = r;
    }
    function F4(r) {
      r && YS(r);
    }
    jx.prototype.unstable_scheduleHydration = F4;
    function _4(r, o, f) {
      if (!zx(r))
        throw new Error("hydrateRoot(...): Target container is not a DOM element.");
      tL(r), o === void 0 && d("Must provide initial children as second argument to hydrateRoot. Example usage: hydrateRoot(domContainer, <App />)");
      var h = f ?? null, b = f != null && f.hydratedSources || null, T = !1, N = !1, V = "", Z = eL;
      f != null && (f.unstable_strictMode === !0 && (T = !0), f.identifierPrefix !== void 0 && (V = f.identifierPrefix), f.onRecoverableError !== void 0 && (Z = f.onRecoverableError));
      var se = LN(o, null, r, Lw, h, T, N, V, Z);
      if (Ow(se.current, r), Ey(r), b)
        for (var le = 0; le < b.length; le++) {
          var Te = b[le];
          zU(se, Te);
        }
      return new jx(se);
    }
    function zx(r) {
      return !!(r && (r.nodeType === Vi || r.nodeType === hl || r.nodeType === Rv));
    }
    function bb(r) {
      return !!(r && (r.nodeType === Vi || r.nodeType === hl || r.nodeType === Rv || r.nodeType === go && r.nodeValue === " react-mount-point-unstable "));
    }
    function tL(r) {
      r.nodeType === Vi && r.tagName && r.tagName.toUpperCase() === "BODY" && d("createRoot(): Creating roots directly with document.body is discouraged, since its children are often manipulated by third-party scripts and browser extensions. This may lead to subtle reconciliation issues. Try using a container element created for your app."), Fy(r) && (r._reactRootContainer ? d("You are calling ReactDOMClient.createRoot() on a container that was previously passed to ReactDOM.render(). This is not supported.") : d("You are calling ReactDOMClient.createRoot() on a container that has already been passed to createRoot() before. Instead, call root.render() on the existing root instead if you want to update it."));
    }
    var A4 = n.ReactCurrentOwner, nL;
    nL = function(r) {
      if (r._reactRootContainer && r.nodeType !== go) {
        var o = _N(r._reactRootContainer.current);
        o && o.parentNode !== r && d("render(...): It looks like the React-rendered content of this container was removed without using React. This is not supported and will cause errors. Instead, call ReactDOM.unmountComponentAtNode to empty a container.");
      }
      var f = !!r._reactRootContainer, h = uO(r), b = !!(h && _d(h));
      b && !f && d("render(...): Replacing React-rendered children with a new root component. If you intended to update the children of this node, you should instead have the existing children update their state and render the new components instead of calling ReactDOM.render."), r.nodeType === Vi && r.tagName && r.tagName.toUpperCase() === "BODY" && d("render(): Rendering components directly into document.body is discouraged, since its children are often manipulated by third-party scripts and browser extensions. This may lead to subtle reconciliation issues. Try rendering into a container element created for your app.");
    };
    function uO(r) {
      return r ? r.nodeType === hl ? r.documentElement : r.firstChild : null;
    }
    function rL() {
    }
    function $4(r, o, f, h, b) {
      if (b) {
        if (typeof h == "function") {
          var T = h;
          h = function() {
            var xe = $x(N);
            T.call(xe);
          };
        }
        var N = LN(
          o,
          h,
          r,
          $d,
          null,
          // hydrationCallbacks
          !1,
          // isStrictMode
          !1,
          // concurrentUpdatesByDefaultOverride,
          "",
          // identifierPrefix
          rL
        );
        r._reactRootContainer = N, Ow(N.current, r);
        var V = r.nodeType === go ? r.parentNode : r;
        return Ey(V), $c(), N;
      } else {
        for (var Z; Z = r.lastChild; )
          r.removeChild(Z);
        if (typeof h == "function") {
          var se = h;
          h = function() {
            var xe = $x(le);
            se.call(xe);
          };
        }
        var le = NN(
          r,
          $d,
          null,
          // hydrationCallbacks
          !1,
          // isStrictMode
          !1,
          // concurrentUpdatesByDefaultOverride,
          "",
          // identifierPrefix
          rL
        );
        r._reactRootContainer = le, Ow(le.current, r);
        var Te = r.nodeType === go ? r.parentNode : r;
        return Ey(Te), $c(function() {
          yb(o, le, f, h);
        }), le;
      }
    }
    function j4(r, o) {
      r !== null && typeof r != "function" && d("%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", o, r);
    }
    function Hx(r, o, f, h, b) {
      nL(f), j4(b === void 0 ? null : b, "render");
      var T = f._reactRootContainer, N;
      if (!T)
        N = $4(f, o, r, b, h);
      else {
        if (N = T, typeof b == "function") {
          var V = b;
          b = function() {
            var Z = $x(N);
            V.call(Z);
          };
        }
        yb(o, N, r, b);
      }
      return $x(N);
    }
    var oL = !1;
    function z4(r) {
      {
        oL || (oL = !0, d("findDOMNode is deprecated and will be removed in the next major release. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node"));
        var o = A4.current;
        if (o !== null && o.stateNode !== null) {
          var f = o.stateNode._warnedAboutRefsInRender;
          f || d("%s is accessing findDOMNode inside its render(). render() should be a pure function of props and state. It should never access something that requires stale data from the previous render, such as refs. Move this logic to componentDidMount and componentDidUpdate instead.", Zn(o.type) || "A component"), o.stateNode._warnedAboutRefsInRender = !0;
        }
      }
      return r == null ? null : r.nodeType === Vi ? r : E4(r, "findDOMNode");
    }
    function H4(r, o, f) {
      if (d("ReactDOM.hydrate is no longer supported in React 18. Use hydrateRoot instead. Until you switch to the new API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot"), !bb(o))
        throw new Error("Target container is not a DOM element.");
      {
        var h = Fy(o) && o._reactRootContainer === void 0;
        h && d("You are calling ReactDOM.hydrate() on a container that was previously passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call hydrateRoot(container, element)?");
      }
      return Hx(null, r, o, !0, f);
    }
    function V4(r, o, f) {
      if (d("ReactDOM.render is no longer supported in React 18. Use createRoot instead. Until you switch to the new API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot"), !bb(o))
        throw new Error("Target container is not a DOM element.");
      {
        var h = Fy(o) && o._reactRootContainer === void 0;
        h && d("You are calling ReactDOM.render() on a container that was previously passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call root.render(element)?");
      }
      return Hx(null, r, o, !1, f);
    }
    function B4(r, o, f, h) {
      if (d("ReactDOM.unstable_renderSubtreeIntoContainer() is no longer supported in React 18. Consider using a portal instead. Until you switch to the createRoot API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot"), !bb(f))
        throw new Error("Target container is not a DOM element.");
      if (r == null || !aT(r))
        throw new Error("parentComponent must be a valid React Component");
      return Hx(r, o, f, !1, h);
    }
    var iL = !1;
    function U4(r) {
      if (iL || (iL = !0, d("unmountComponentAtNode is deprecated and will be removed in the next major release. Switch to the createRoot API. Learn more: https://reactjs.org/link/switch-to-createroot")), !bb(r))
        throw new Error("unmountComponentAtNode(...): Target container is not a DOM element.");
      {
        var o = Fy(r) && r._reactRootContainer === void 0;
        o && d("You are calling ReactDOM.unmountComponentAtNode() on a container that was previously passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call root.unmount()?");
      }
      if (r._reactRootContainer) {
        {
          var f = uO(r), h = f && !_d(f);
          h && d("unmountComponentAtNode(): The node you're attempting to unmount was rendered by another copy of React.");
        }
        return $c(function() {
          Hx(null, null, r, !1, function() {
            r._reactRootContainer = null, eI(r);
          });
        }), !0;
      } else {
        {
          var b = uO(r), T = !!(b && _d(b)), N = r.nodeType === Vi && bb(r.parentNode) && !!r.parentNode._reactRootContainer;
          T && d("unmountComponentAtNode(): The node you're attempting to unmount was rendered by React and is not a top-level container. %s", N ? "You may have accidentally passed in a React root node instead of its container." : "Instead, have the parent component update its state and rerender in order to remove this component.");
        }
        return !1;
      }
    }
    mi(T4), Od(R4), GS(O4), hp(Aa), sy(VS), (typeof Map != "function" || // $FlowIssue Flow incorrectly thinks Map has no prototype
    Map.prototype == null || typeof Map.prototype.forEach != "function" || typeof Set != "function" || // $FlowIssue Flow incorrectly thinks Set has no prototype
    Set.prototype == null || typeof Set.prototype.clear != "function" || typeof Set.prototype.forEach != "function") && d("React depends on Map and Set built-in types. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"), Lh(WV), iT(zR, _G, $c);
    function G4(r, o) {
      var f = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
      if (!zx(o))
        throw new Error("Target container is not a DOM element.");
      return x4(r, o, null, f);
    }
    function W4(r, o, f, h) {
      return B4(r, o, f, h);
    }
    var cO = {
      usingClientEntryPoint: !1,
      // Keep in sync with ReactTestUtils.js.
      // This is an array for better minification.
      Events: [_d, _m, kw, gd, Fh, zR]
    };
    function q4(r, o) {
      return cO.usingClientEntryPoint || d('You are importing createRoot from "react-dom" which is not supported. You should instead import it from "react-dom/client".'), L4(r, o);
    }
    function K4(r, o, f) {
      return cO.usingClientEntryPoint || d('You are importing hydrateRoot from "react-dom" which is not supported. You should instead import it from "react-dom/client".'), _4(r, o, f);
    }
    function Y4(r) {
      return fN() && d("flushSync was called from inside a lifecycle method. React cannot flush when React is already rendering. Consider moving this call to a scheduler task or micro task."), $c(r);
    }
    var X4 = N4({
      findFiberByHostInstance: kp,
      bundleType: 1,
      version: rO,
      rendererPackageName: "react-dom"
    });
    if (!X4 && Re && window.top === window.self && (navigator.userAgent.indexOf("Chrome") > -1 && navigator.userAgent.indexOf("Edge") === -1 || navigator.userAgent.indexOf("Firefox") > -1)) {
      var aL = window.location.protocol;
      /^(https?|file):$/.test(aL) && console.info("%cDownload the React DevTools for a better development experience: https://reactjs.org/link/react-devtools" + (aL === "file:" ? `
You might need to use a local HTTP server (instead of file://): https://reactjs.org/link/react-devtools-faq` : ""), "font-weight:bold");
    }
    Ga.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = cO, Ga.createPortal = G4, Ga.createRoot = q4, Ga.findDOMNode = z4, Ga.flushSync = Y4, Ga.hydrate = H4, Ga.hydrateRoot = K4, Ga.render = V4, Ga.unmountComponentAtNode = U4, Ga.unstable_batchedUpdates = zR, Ga.unstable_renderSubtreeIntoContainer = W4, Ga.version = rO, typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
  }()), Ga;
}
function s$() {
  if (!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ > "u" || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE != "function")) {
    if (process.env.NODE_ENV !== "production")
      throw new Error("^_^");
    try {
      __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(s$);
    } catch (e) {
      console.error(e);
    }
  }
}
process.env.NODE_ENV === "production" ? (s$(), ek.exports = l3()) : ek.exports = u3();
var oE = ek.exports;
const Ux = /* @__PURE__ */ nP(oE);
var xb = oE;
if (process.env.NODE_ENV === "production")
  Ab.createRoot = xb.createRoot, Ab.hydrateRoot = xb.hydrateRoot;
else {
  var Gx = xb.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
  Ab.createRoot = function(e, t) {
    Gx.usingClientEntryPoint = !0;
    try {
      return xb.createRoot(e, t);
    } finally {
      Gx.usingClientEntryPoint = !1;
    }
  }, Ab.hydrateRoot = function(e, t, n) {
    Gx.usingClientEntryPoint = !0;
    try {
      return xb.hydrateRoot(e, t, n);
    } finally {
      Gx.usingClientEntryPoint = !1;
    }
  };
}
var iE = class {
  constructor() {
    this.listeners = /* @__PURE__ */ new Set(), this.subscribe = this.subscribe.bind(this);
  }
  subscribe(e) {
    return this.listeners.add(e), this.onSubscribe(), () => {
      this.listeners.delete(e), this.onUnsubscribe();
    };
  }
  hasListeners() {
    return this.listeners.size > 0;
  }
  onSubscribe() {
  }
  onUnsubscribe() {
  }
}, c3 = {
  // We need the wrapper function syntax below instead of direct references to
  // global setTimeout etc.
  //
  // BAD: `setTimeout: setTimeout`
  // GOOD: `setTimeout: (cb, delay) => setTimeout(cb, delay)`
  //
  // If we use direct references here, then anything that wants to spy on or
  // replace the global setTimeout (like tests) won't work since we'll already
  // have a hard reference to the original implementation at the time when this
  // file was imported.
  setTimeout: (e, t) => setTimeout(e, t),
  clearTimeout: (e) => clearTimeout(e),
  setInterval: (e, t) => setInterval(e, t),
  clearInterval: (e) => clearInterval(e)
}, Nu, Zp, QA, d3 = (QA = class {
  constructor() {
    // We cannot have TimeoutManager<T> as we must instantiate it with a concrete
    // type at app boot; and if we leave that type, then any new timer provider
    // would need to support ReturnType<typeof setTimeout>, which is infeasible.
    //
    // We settle for type safety for the TimeoutProvider type, and accept that
    // this class is unsafe internally to allow for extension.
    or(this, Nu, c3);
    or(this, Zp, !1);
  }
  setTimeoutProvider(e) {
    process.env.NODE_ENV !== "production" && Xe(this, Zp) && e !== Xe(this, Nu) && console.error(
      "[timeoutManager]: Switching provider after calls to previous provider might result in unexpected behavior.",
      { previous: Xe(this, Nu), provider: e }
    ), wn(this, Nu, e), process.env.NODE_ENV !== "production" && wn(this, Zp, !1);
  }
  setTimeout(e, t) {
    return process.env.NODE_ENV !== "production" && wn(this, Zp, !0), Xe(this, Nu).setTimeout(e, t);
  }
  clearTimeout(e) {
    Xe(this, Nu).clearTimeout(e);
  }
  setInterval(e, t) {
    return process.env.NODE_ENV !== "production" && wn(this, Zp, !0), Xe(this, Nu).setInterval(e, t);
  }
  clearInterval(e) {
    Xe(this, Nu).clearInterval(e);
  }
}, Nu = new WeakMap(), Zp = new WeakMap(), QA), tk = new d3();
function f3(e) {
  setTimeout(e, 0);
}
var aE = typeof window > "u" || "Deno" in globalThis;
function _l() {
}
function p3(e, t) {
  return typeof e == "function" ? e(t) : e;
}
function h3(e) {
  return typeof e == "number" && e >= 0 && e !== 1 / 0;
}
function m3(e, t) {
  return Math.max(e + (t || 0) - Date.now(), 0);
}
function nk(e, t) {
  return typeof e == "function" ? e(t) : e;
}
function g3(e, t) {
  return typeof e == "function" ? e(t) : e;
}
function vL(e, t) {
  const {
    type: n = "all",
    exact: i,
    fetchStatus: s,
    predicate: u,
    queryKey: d,
    stale: p
  } = e;
  if (d) {
    if (i) {
      if (t.queryHash !== rP(d, t.options))
        return !1;
    } else if (!eC(t.queryKey, d))
      return !1;
  }
  if (n !== "all") {
    const m = t.isActive();
    if (n === "active" && !m || n === "inactive" && m)
      return !1;
  }
  return !(typeof p == "boolean" && t.isStale() !== p || s && s !== t.state.fetchStatus || u && !u(t));
}
function yL(e, t) {
  const { exact: n, status: i, predicate: s, mutationKey: u } = e;
  if (u) {
    if (!t.options.mutationKey)
      return !1;
    if (n) {
      if (Zb(t.options.mutationKey) !== Zb(u))
        return !1;
    } else if (!eC(t.options.mutationKey, u))
      return !1;
  }
  return !(i && t.state.status !== i || s && !s(t));
}
function rP(e, t) {
  return ((t == null ? void 0 : t.queryKeyHashFn) || Zb)(e);
}
function Zb(e) {
  return JSON.stringify(
    e,
    (t, n) => ok(n) ? Object.keys(n).sort().reduce((i, s) => (i[s] = n[s], i), {}) : n
  );
}
function eC(e, t) {
  return e === t ? !0 : typeof e != typeof t ? !1 : e && t && typeof e == "object" && typeof t == "object" ? Object.keys(t).every((n) => eC(e[n], t[n])) : !1;
}
var v3 = Object.prototype.hasOwnProperty;
function rk(e, t) {
  if (e === t)
    return e;
  const n = bL(e) && bL(t);
  if (!n && !(ok(e) && ok(t))) return t;
  const s = (n ? e : Object.keys(e)).length, u = n ? t : Object.keys(t), d = u.length, p = n ? new Array(d) : {};
  let m = 0;
  for (let v = 0; v < d; v++) {
    const y = n ? v : u[v], C = e[y], S = t[y];
    if (C === S) {
      p[y] = C, (n ? v < s : v3.call(e, y)) && m++;
      continue;
    }
    if (C === null || S === null || typeof C != "object" || typeof S != "object") {
      p[y] = S;
      continue;
    }
    const R = rk(C, S);
    p[y] = R, R === C && m++;
  }
  return s === d && m === s ? e : p;
}
function bL(e) {
  return Array.isArray(e) && e.length === Object.keys(e).length;
}
function ok(e) {
  if (!CL(e))
    return !1;
  const t = e.constructor;
  if (t === void 0)
    return !0;
  const n = t.prototype;
  return !(!CL(n) || !n.hasOwnProperty("isPrototypeOf") || Object.getPrototypeOf(e) !== Object.prototype);
}
function CL(e) {
  return Object.prototype.toString.call(e) === "[object Object]";
}
function y3(e) {
  return new Promise((t) => {
    tk.setTimeout(t, e);
  });
}
function b3(e, t, n) {
  if (typeof n.structuralSharing == "function")
    return n.structuralSharing(e, t);
  if (n.structuralSharing !== !1) {
    if (process.env.NODE_ENV !== "production")
      try {
        return rk(e, t);
      } catch (i) {
        throw console.error(
          `Structural sharing requires data to be JSON serializable. To fix this, turn off structuralSharing or return JSON-serializable data from your queryFn. [${n.queryHash}]: ${i}`
        ), i;
      }
    return rk(e, t);
  }
  return t;
}
function C3(e, t, n = 0) {
  const i = [...e, t];
  return n && i.length > n ? i.slice(1) : i;
}
function S3(e, t, n = 0) {
  const i = [t, ...e];
  return n && i.length > n ? i.slice(0, -1) : i;
}
var x0 = Symbol();
function l$(e, t) {
  return process.env.NODE_ENV !== "production" && e.queryFn === x0 && console.error(
    `Attempted to invoke queryFn when set to skipToken. This is likely a configuration error. Query hash: '${e.queryHash}'`
  ), !e.queryFn && (t != null && t.initialPromise) ? () => t.initialPromise : !e.queryFn || e.queryFn === x0 ? () => Promise.reject(new Error(`Missing queryFn: '${e.queryHash}'`)) : e.queryFn;
}
var eh, af, Lg, JA, w3 = (JA = class extends iE {
  constructor() {
    super();
    or(this, eh);
    or(this, af);
    or(this, Lg);
    wn(this, Lg, (t) => {
      if (!aE && window.addEventListener) {
        const n = () => t();
        return window.addEventListener("visibilitychange", n, !1), () => {
          window.removeEventListener("visibilitychange", n);
        };
      }
    });
  }
  onSubscribe() {
    Xe(this, af) || this.setEventListener(Xe(this, Lg));
  }
  onUnsubscribe() {
    var t;
    this.hasListeners() || ((t = Xe(this, af)) == null || t.call(this), wn(this, af, void 0));
  }
  setEventListener(t) {
    var n;
    wn(this, Lg, t), (n = Xe(this, af)) == null || n.call(this), wn(this, af, t((i) => {
      typeof i == "boolean" ? this.setFocused(i) : this.onFocus();
    }));
  }
  setFocused(t) {
    Xe(this, eh) !== t && (wn(this, eh, t), this.onFocus());
  }
  onFocus() {
    const t = this.isFocused();
    this.listeners.forEach((n) => {
      n(t);
    });
  }
  isFocused() {
    var t;
    return typeof Xe(this, eh) == "boolean" ? Xe(this, eh) : ((t = globalThis.document) == null ? void 0 : t.visibilityState) !== "hidden";
  }
}, eh = new WeakMap(), af = new WeakMap(), Lg = new WeakMap(), JA), u$ = new w3();
function x3() {
  let e, t;
  const n = new Promise((s, u) => {
    e = s, t = u;
  });
  n.status = "pending", n.catch(() => {
  });
  function i(s) {
    Object.assign(n, s), delete n.resolve, delete n.reject;
  }
  return n.resolve = (s) => {
    i({
      status: "fulfilled",
      value: s
    }), e(s);
  }, n.reject = (s) => {
    i({
      status: "rejected",
      reason: s
    }), t(s);
  }, n;
}
var E3 = f3;
function T3() {
  let e = [], t = 0, n = (p) => {
    p();
  }, i = (p) => {
    p();
  }, s = E3;
  const u = (p) => {
    t ? e.push(p) : s(() => {
      n(p);
    });
  }, d = () => {
    const p = e;
    e = [], p.length && s(() => {
      i(() => {
        p.forEach((m) => {
          n(m);
        });
      });
    });
  };
  return {
    batch: (p) => {
      let m;
      t++;
      try {
        m = p();
      } finally {
        t--, t || d();
      }
      return m;
    },
    /**
     * All calls to the wrapped function will be batched.
     */
    batchCalls: (p) => (...m) => {
      u(() => {
        p(...m);
      });
    },
    schedule: u,
    /**
     * Use this method to set a custom notify function.
     * This can be used to for example wrap notifications with `React.act` while running tests.
     */
    setNotifyFunction: (p) => {
      n = p;
    },
    /**
     * Use this method to set a custom function to batch notifications together into a single tick.
     * By default React Query will use the batch function provided by ReactDOM or React Native.
     */
    setBatchNotifyFunction: (p) => {
      i = p;
    },
    setScheduler: (p) => {
      s = p;
    }
  };
}
var wa = T3(), Fg, sf, _g, ZA, R3 = (ZA = class extends iE {
  constructor() {
    super();
    or(this, Fg, !0);
    or(this, sf);
    or(this, _g);
    wn(this, _g, (t) => {
      if (!aE && window.addEventListener) {
        const n = () => t(!0), i = () => t(!1);
        return window.addEventListener("online", n, !1), window.addEventListener("offline", i, !1), () => {
          window.removeEventListener("online", n), window.removeEventListener("offline", i);
        };
      }
    });
  }
  onSubscribe() {
    Xe(this, sf) || this.setEventListener(Xe(this, _g));
  }
  onUnsubscribe() {
    var t;
    this.hasListeners() || ((t = Xe(this, sf)) == null || t.call(this), wn(this, sf, void 0));
  }
  setEventListener(t) {
    var n;
    wn(this, _g, t), (n = Xe(this, sf)) == null || n.call(this), wn(this, sf, t(this.setOnline.bind(this)));
  }
  setOnline(t) {
    Xe(this, Fg) !== t && (wn(this, Fg, t), this.listeners.forEach((i) => {
      i(t);
    }));
  }
  isOnline() {
    return Xe(this, Fg);
  }
}, Fg = new WeakMap(), sf = new WeakMap(), _g = new WeakMap(), ZA), E0 = new R3();
function O3(e) {
  return Math.min(1e3 * 2 ** e, 3e4);
}
function c$(e) {
  return (e ?? "online") === "online" ? E0.isOnline() : !0;
}
var ik = class extends Error {
  constructor(e) {
    super("CancelledError"), this.revert = e == null ? void 0 : e.revert, this.silent = e == null ? void 0 : e.silent;
  }
};
function d$(e) {
  let t = !1, n = 0, i;
  const s = x3(), u = () => s.status !== "pending", d = (E) => {
    var k;
    if (!u()) {
      const F = new ik(E);
      S(F), (k = e.onCancel) == null || k.call(e, F);
    }
  }, p = () => {
    t = !0;
  }, m = () => {
    t = !1;
  }, v = () => u$.isFocused() && (e.networkMode === "always" || E0.isOnline()) && e.canRun(), y = () => c$(e.networkMode) && e.canRun(), C = (E) => {
    u() || (i == null || i(), s.resolve(E));
  }, S = (E) => {
    u() || (i == null || i(), s.reject(E));
  }, R = () => new Promise((E) => {
    var k;
    i = (F) => {
      (u() || v()) && E(F);
    }, (k = e.onPause) == null || k.call(e);
  }).then(() => {
    var E;
    i = void 0, u() || (E = e.onContinue) == null || E.call(e);
  }), O = () => {
    if (u())
      return;
    let E;
    const k = n === 0 ? e.initialPromise : void 0;
    try {
      E = k ?? e.fn();
    } catch (F) {
      E = Promise.reject(F);
    }
    Promise.resolve(E).then(C).catch((F) => {
      var H;
      if (u())
        return;
      const _ = e.retry ?? (aE ? 0 : 3), L = e.retryDelay ?? O3, M = typeof L == "function" ? L(n, F) : L, D = _ === !0 || typeof _ == "number" && n < _ || typeof _ == "function" && _(n, F);
      if (t || !D) {
        S(F);
        return;
      }
      n++, (H = e.onFail) == null || H.call(e, n, F), y3(M).then(() => v() ? void 0 : R()).then(() => {
        t ? S(F) : O();
      });
    });
  };
  return {
    promise: s,
    status: () => s.status,
    cancel: d,
    continue: () => (i == null || i(), s),
    cancelRetry: p,
    continueRetry: m,
    canStart: y,
    start: () => (y() ? O() : R().then(O), s)
  };
}
var th, e$, f$ = (e$ = class {
  constructor() {
    or(this, th);
  }
  destroy() {
    this.clearGcTimeout();
  }
  scheduleGc() {
    this.clearGcTimeout(), h3(this.gcTime) && wn(this, th, tk.setTimeout(() => {
      this.optionalRemove();
    }, this.gcTime));
  }
  updateGcTime(e) {
    this.gcTime = Math.max(
      this.gcTime || 0,
      e ?? (aE ? 1 / 0 : 5 * 60 * 1e3)
    );
  }
  clearGcTimeout() {
    Xe(this, th) && (tk.clearTimeout(Xe(this, th)), wn(this, th, void 0));
  }
}, th = new WeakMap(), e$), nh, Ag, Ks, rh, vi, wC, oh, jl, Bc, t$, k3 = (t$ = class extends f$ {
  constructor(t) {
    super();
    or(this, jl);
    or(this, nh);
    or(this, Ag);
    or(this, Ks);
    or(this, rh);
    or(this, vi);
    or(this, wC);
    or(this, oh);
    wn(this, oh, !1), wn(this, wC, t.defaultOptions), this.setOptions(t.options), this.observers = [], wn(this, rh, t.client), wn(this, Ks, Xe(this, rh).getQueryCache()), this.queryKey = t.queryKey, this.queryHash = t.queryHash, wn(this, nh, SL(this.options)), this.state = t.state ?? Xe(this, nh), this.scheduleGc();
  }
  get meta() {
    return this.options.meta;
  }
  get promise() {
    var t;
    return (t = Xe(this, vi)) == null ? void 0 : t.promise;
  }
  setOptions(t) {
    if (this.options = { ...Xe(this, wC), ...t }, this.updateGcTime(this.options.gcTime), this.state && this.state.data === void 0) {
      const n = SL(this.options);
      n.data !== void 0 && (this.setData(n.data, {
        updatedAt: n.dataUpdatedAt,
        manual: !0
      }), wn(this, nh, n));
    }
  }
  optionalRemove() {
    !this.observers.length && this.state.fetchStatus === "idle" && Xe(this, Ks).remove(this);
  }
  setData(t, n) {
    const i = b3(this.state.data, t, this.options);
    return oa(this, jl, Bc).call(this, {
      data: i,
      type: "success",
      dataUpdatedAt: n == null ? void 0 : n.updatedAt,
      manual: n == null ? void 0 : n.manual
    }), i;
  }
  setState(t, n) {
    oa(this, jl, Bc).call(this, { type: "setState", state: t, setStateOptions: n });
  }
  cancel(t) {
    var i, s;
    const n = (i = Xe(this, vi)) == null ? void 0 : i.promise;
    return (s = Xe(this, vi)) == null || s.cancel(t), n ? n.then(_l).catch(_l) : Promise.resolve();
  }
  destroy() {
    super.destroy(), this.cancel({ silent: !0 });
  }
  reset() {
    this.destroy(), this.setState(Xe(this, nh));
  }
  isActive() {
    return this.observers.some(
      (t) => g3(t.options.enabled, this) !== !1
    );
  }
  isDisabled() {
    return this.getObserversCount() > 0 ? !this.isActive() : this.options.queryFn === x0 || this.state.dataUpdateCount + this.state.errorUpdateCount === 0;
  }
  isStatic() {
    return this.getObserversCount() > 0 ? this.observers.some(
      (t) => nk(t.options.staleTime, this) === "static"
    ) : !1;
  }
  isStale() {
    return this.getObserversCount() > 0 ? this.observers.some(
      (t) => t.getCurrentResult().isStale
    ) : this.state.data === void 0 || this.state.isInvalidated;
  }
  isStaleByTime(t = 0) {
    return this.state.data === void 0 ? !0 : t === "static" ? !1 : this.state.isInvalidated ? !0 : !m3(this.state.dataUpdatedAt, t);
  }
  onFocus() {
    var n;
    const t = this.observers.find((i) => i.shouldFetchOnWindowFocus());
    t == null || t.refetch({ cancelRefetch: !1 }), (n = Xe(this, vi)) == null || n.continue();
  }
  onOnline() {
    var n;
    const t = this.observers.find((i) => i.shouldFetchOnReconnect());
    t == null || t.refetch({ cancelRefetch: !1 }), (n = Xe(this, vi)) == null || n.continue();
  }
  addObserver(t) {
    this.observers.includes(t) || (this.observers.push(t), this.clearGcTimeout(), Xe(this, Ks).notify({ type: "observerAdded", query: this, observer: t }));
  }
  removeObserver(t) {
    this.observers.includes(t) && (this.observers = this.observers.filter((n) => n !== t), this.observers.length || (Xe(this, vi) && (Xe(this, oh) ? Xe(this, vi).cancel({ revert: !0 }) : Xe(this, vi).cancelRetry()), this.scheduleGc()), Xe(this, Ks).notify({ type: "observerRemoved", query: this, observer: t }));
  }
  getObserversCount() {
    return this.observers.length;
  }
  invalidate() {
    this.state.isInvalidated || oa(this, jl, Bc).call(this, { type: "invalidate" });
  }
  async fetch(t, n) {
    var m, v, y, C, S, R, O, E, k, F, _, L;
    if (this.state.fetchStatus !== "idle" && // If the promise in the retyer is already rejected, we have to definitely
    // re-start the fetch; there is a chance that the query is still in a
    // pending state when that happens
    ((m = Xe(this, vi)) == null ? void 0 : m.status()) !== "rejected") {
      if (this.state.data !== void 0 && (n != null && n.cancelRefetch))
        this.cancel({ silent: !0 });
      else if (Xe(this, vi))
        return Xe(this, vi).continueRetry(), Xe(this, vi).promise;
    }
    if (t && this.setOptions(t), !this.options.queryFn) {
      const M = this.observers.find((D) => D.options.queryFn);
      M && this.setOptions(M.options);
    }
    process.env.NODE_ENV !== "production" && (Array.isArray(this.options.queryKey) || console.error(
      "As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']"
    ));
    const i = new AbortController(), s = (M) => {
      Object.defineProperty(M, "signal", {
        enumerable: !0,
        get: () => (wn(this, oh, !0), i.signal)
      });
    }, u = () => {
      const M = l$(this.options, n), H = (() => {
        const K = {
          client: Xe(this, rh),
          queryKey: this.queryKey,
          meta: this.meta
        };
        return s(K), K;
      })();
      return wn(this, oh, !1), this.options.persister ? this.options.persister(
        M,
        H,
        this
      ) : M(H);
    }, p = (() => {
      const M = {
        fetchOptions: n,
        options: this.options,
        queryKey: this.queryKey,
        client: Xe(this, rh),
        state: this.state,
        fetchFn: u
      };
      return s(M), M;
    })();
    (v = this.options.behavior) == null || v.onFetch(p, this), wn(this, Ag, this.state), (this.state.fetchStatus === "idle" || this.state.fetchMeta !== ((y = p.fetchOptions) == null ? void 0 : y.meta)) && oa(this, jl, Bc).call(this, { type: "fetch", meta: (C = p.fetchOptions) == null ? void 0 : C.meta }), wn(this, vi, d$({
      initialPromise: n == null ? void 0 : n.initialPromise,
      fn: p.fetchFn,
      onCancel: (M) => {
        M instanceof ik && M.revert && this.setState({
          ...Xe(this, Ag),
          fetchStatus: "idle"
        }), i.abort();
      },
      onFail: (M, D) => {
        oa(this, jl, Bc).call(this, { type: "failed", failureCount: M, error: D });
      },
      onPause: () => {
        oa(this, jl, Bc).call(this, { type: "pause" });
      },
      onContinue: () => {
        oa(this, jl, Bc).call(this, { type: "continue" });
      },
      retry: p.options.retry,
      retryDelay: p.options.retryDelay,
      networkMode: p.options.networkMode,
      canRun: () => !0
    }));
    try {
      const M = await Xe(this, vi).start();
      if (M === void 0)
        throw process.env.NODE_ENV !== "production" && console.error(
          `Query data cannot be undefined. Please make sure to return a value other than undefined from your query function. Affected query key: ${this.queryHash}`
        ), new Error(`${this.queryHash} data is undefined`);
      return this.setData(M), (R = (S = Xe(this, Ks).config).onSuccess) == null || R.call(S, M, this), (E = (O = Xe(this, Ks).config).onSettled) == null || E.call(
        O,
        M,
        this.state.error,
        this
      ), M;
    } catch (M) {
      if (M instanceof ik) {
        if (M.silent)
          return Xe(this, vi).promise;
        if (M.revert) {
          if (this.state.data === void 0)
            throw M;
          return this.state.data;
        }
      }
      throw oa(this, jl, Bc).call(this, {
        type: "error",
        error: M
      }), (F = (k = Xe(this, Ks).config).onError) == null || F.call(
        k,
        M,
        this
      ), (L = (_ = Xe(this, Ks).config).onSettled) == null || L.call(
        _,
        this.state.data,
        M,
        this
      ), M;
    } finally {
      this.scheduleGc();
    }
  }
}, nh = new WeakMap(), Ag = new WeakMap(), Ks = new WeakMap(), rh = new WeakMap(), vi = new WeakMap(), wC = new WeakMap(), oh = new WeakMap(), jl = new WeakSet(), Bc = function(t) {
  const n = (i) => {
    switch (t.type) {
      case "failed":
        return {
          ...i,
          fetchFailureCount: t.failureCount,
          fetchFailureReason: t.error
        };
      case "pause":
        return {
          ...i,
          fetchStatus: "paused"
        };
      case "continue":
        return {
          ...i,
          fetchStatus: "fetching"
        };
      case "fetch":
        return {
          ...i,
          ...P3(i.data, this.options),
          fetchMeta: t.meta ?? null
        };
      case "success":
        const s = {
          ...i,
          data: t.data,
          dataUpdateCount: i.dataUpdateCount + 1,
          dataUpdatedAt: t.dataUpdatedAt ?? Date.now(),
          error: null,
          isInvalidated: !1,
          status: "success",
          ...!t.manual && {
            fetchStatus: "idle",
            fetchFailureCount: 0,
            fetchFailureReason: null
          }
        };
        return wn(this, Ag, t.manual ? s : void 0), s;
      case "error":
        const u = t.error;
        return {
          ...i,
          error: u,
          errorUpdateCount: i.errorUpdateCount + 1,
          errorUpdatedAt: Date.now(),
          fetchFailureCount: i.fetchFailureCount + 1,
          fetchFailureReason: u,
          fetchStatus: "idle",
          status: "error"
        };
      case "invalidate":
        return {
          ...i,
          isInvalidated: !0
        };
      case "setState":
        return {
          ...i,
          ...t.state
        };
    }
  };
  this.state = n(this.state), wa.batch(() => {
    this.observers.forEach((i) => {
      i.onQueryUpdate();
    }), Xe(this, Ks).notify({ query: this, type: "updated", action: t });
  });
}, t$);
function P3(e, t) {
  return {
    fetchFailureCount: 0,
    fetchFailureReason: null,
    fetchStatus: c$(t.networkMode) ? "fetching" : "paused",
    ...e === void 0 && {
      error: null,
      status: "pending"
    }
  };
}
function SL(e) {
  const t = typeof e.initialData == "function" ? e.initialData() : e.initialData, n = t !== void 0, i = n ? typeof e.initialDataUpdatedAt == "function" ? e.initialDataUpdatedAt() : e.initialDataUpdatedAt : 0;
  return {
    data: t,
    dataUpdateCount: 0,
    dataUpdatedAt: n ? i ?? Date.now() : 0,
    error: null,
    errorUpdateCount: 0,
    errorUpdatedAt: 0,
    fetchFailureCount: 0,
    fetchFailureReason: null,
    fetchMeta: null,
    isInvalidated: !1,
    status: n ? "success" : "pending",
    fetchStatus: "idle"
  };
}
function wL(e) {
  return {
    onFetch: (t, n) => {
      var y, C, S, R, O;
      const i = t.options, s = (S = (C = (y = t.fetchOptions) == null ? void 0 : y.meta) == null ? void 0 : C.fetchMore) == null ? void 0 : S.direction, u = ((R = t.state.data) == null ? void 0 : R.pages) || [], d = ((O = t.state.data) == null ? void 0 : O.pageParams) || [];
      let p = { pages: [], pageParams: [] }, m = 0;
      const v = async () => {
        let E = !1;
        const k = (L) => {
          Object.defineProperty(L, "signal", {
            enumerable: !0,
            get: () => (t.signal.aborted ? E = !0 : t.signal.addEventListener("abort", () => {
              E = !0;
            }), t.signal)
          });
        }, F = l$(t.options, t.fetchOptions), _ = async (L, M, D) => {
          if (E)
            return Promise.reject();
          if (M == null && L.pages.length)
            return Promise.resolve(L);
          const K = (() => {
            const G = {
              client: t.client,
              queryKey: t.queryKey,
              pageParam: M,
              direction: D ? "backward" : "forward",
              meta: t.options.meta
            };
            return k(G), G;
          })(), Q = await F(K), { maxPages: z } = t.options, I = D ? S3 : C3;
          return {
            pages: I(L.pages, Q, z),
            pageParams: I(L.pageParams, M, z)
          };
        };
        if (s && u.length) {
          const L = s === "backward", M = L ? M3 : xL, D = {
            pages: u,
            pageParams: d
          }, H = M(i, D);
          p = await _(D, H, L);
        } else {
          const L = e ?? u.length;
          do {
            const M = m === 0 ? d[0] ?? i.initialPageParam : xL(i, p);
            if (m > 0 && M == null)
              break;
            p = await _(p, M), m++;
          } while (m < L);
        }
        return p;
      };
      t.options.persister ? t.fetchFn = () => {
        var E, k;
        return (k = (E = t.options).persister) == null ? void 0 : k.call(
          E,
          v,
          {
            client: t.client,
            queryKey: t.queryKey,
            meta: t.options.meta,
            signal: t.signal
          },
          n
        );
      } : t.fetchFn = v;
    }
  };
}
function xL(e, { pages: t, pageParams: n }) {
  const i = t.length - 1;
  return t.length > 0 ? e.getNextPageParam(
    t[i],
    t,
    n[i],
    n
  ) : void 0;
}
function M3(e, { pages: t, pageParams: n }) {
  var i;
  return t.length > 0 ? (i = e.getPreviousPageParam) == null ? void 0 : i.call(e, t[0], t, n[0], n) : void 0;
}
var xC, Lu, Ca, ih, Fu, ef, n$, I3 = (n$ = class extends f$ {
  constructor(t) {
    super();
    or(this, Fu);
    or(this, xC);
    or(this, Lu);
    or(this, Ca);
    or(this, ih);
    wn(this, xC, t.client), this.mutationId = t.mutationId, wn(this, Ca, t.mutationCache), wn(this, Lu, []), this.state = t.state || D3(), this.setOptions(t.options), this.scheduleGc();
  }
  setOptions(t) {
    this.options = t, this.updateGcTime(this.options.gcTime);
  }
  get meta() {
    return this.options.meta;
  }
  addObserver(t) {
    Xe(this, Lu).includes(t) || (Xe(this, Lu).push(t), this.clearGcTimeout(), Xe(this, Ca).notify({
      type: "observerAdded",
      mutation: this,
      observer: t
    }));
  }
  removeObserver(t) {
    wn(this, Lu, Xe(this, Lu).filter((n) => n !== t)), this.scheduleGc(), Xe(this, Ca).notify({
      type: "observerRemoved",
      mutation: this,
      observer: t
    });
  }
  optionalRemove() {
    Xe(this, Lu).length || (this.state.status === "pending" ? this.scheduleGc() : Xe(this, Ca).remove(this));
  }
  continue() {
    var t;
    return ((t = Xe(this, ih)) == null ? void 0 : t.continue()) ?? // continuing a mutation assumes that variables are set, mutation must have been dehydrated before
    this.execute(this.state.variables);
  }
  async execute(t) {
    var d, p, m, v, y, C, S, R, O, E, k, F, _, L, M, D, H, K, Q, z;
    const n = () => {
      oa(this, Fu, ef).call(this, { type: "continue" });
    }, i = {
      client: Xe(this, xC),
      meta: this.options.meta,
      mutationKey: this.options.mutationKey
    };
    wn(this, ih, d$({
      fn: () => this.options.mutationFn ? this.options.mutationFn(t, i) : Promise.reject(new Error("No mutationFn found")),
      onFail: (I, G) => {
        oa(this, Fu, ef).call(this, { type: "failed", failureCount: I, error: G });
      },
      onPause: () => {
        oa(this, Fu, ef).call(this, { type: "pause" });
      },
      onContinue: n,
      retry: this.options.retry ?? 0,
      retryDelay: this.options.retryDelay,
      networkMode: this.options.networkMode,
      canRun: () => Xe(this, Ca).canRun(this)
    }));
    const s = this.state.status === "pending", u = !Xe(this, ih).canStart();
    try {
      if (s)
        n();
      else {
        oa(this, Fu, ef).call(this, { type: "pending", variables: t, isPaused: u }), await ((p = (d = Xe(this, Ca).config).onMutate) == null ? void 0 : p.call(
          d,
          t,
          this,
          i
        ));
        const G = await ((v = (m = this.options).onMutate) == null ? void 0 : v.call(
          m,
          t,
          i
        ));
        G !== this.state.context && oa(this, Fu, ef).call(this, {
          type: "pending",
          context: G,
          variables: t,
          isPaused: u
        });
      }
      const I = await Xe(this, ih).start();
      return await ((C = (y = Xe(this, Ca).config).onSuccess) == null ? void 0 : C.call(
        y,
        I,
        t,
        this.state.context,
        this,
        i
      )), await ((R = (S = this.options).onSuccess) == null ? void 0 : R.call(
        S,
        I,
        t,
        this.state.context,
        i
      )), await ((E = (O = Xe(this, Ca).config).onSettled) == null ? void 0 : E.call(
        O,
        I,
        null,
        this.state.variables,
        this.state.context,
        this,
        i
      )), await ((F = (k = this.options).onSettled) == null ? void 0 : F.call(
        k,
        I,
        null,
        t,
        this.state.context,
        i
      )), oa(this, Fu, ef).call(this, { type: "success", data: I }), I;
    } catch (I) {
      try {
        throw await ((L = (_ = Xe(this, Ca).config).onError) == null ? void 0 : L.call(
          _,
          I,
          t,
          this.state.context,
          this,
          i
        )), await ((D = (M = this.options).onError) == null ? void 0 : D.call(
          M,
          I,
          t,
          this.state.context,
          i
        )), await ((K = (H = Xe(this, Ca).config).onSettled) == null ? void 0 : K.call(
          H,
          void 0,
          I,
          this.state.variables,
          this.state.context,
          this,
          i
        )), await ((z = (Q = this.options).onSettled) == null ? void 0 : z.call(
          Q,
          void 0,
          I,
          t,
          this.state.context,
          i
        )), I;
      } finally {
        oa(this, Fu, ef).call(this, { type: "error", error: I });
      }
    } finally {
      Xe(this, Ca).runNext(this);
    }
  }
}, xC = new WeakMap(), Lu = new WeakMap(), Ca = new WeakMap(), ih = new WeakMap(), Fu = new WeakSet(), ef = function(t) {
  const n = (i) => {
    switch (t.type) {
      case "failed":
        return {
          ...i,
          failureCount: t.failureCount,
          failureReason: t.error
        };
      case "pause":
        return {
          ...i,
          isPaused: !0
        };
      case "continue":
        return {
          ...i,
          isPaused: !1
        };
      case "pending":
        return {
          ...i,
          context: t.context,
          data: void 0,
          failureCount: 0,
          failureReason: null,
          error: null,
          isPaused: t.isPaused,
          status: "pending",
          variables: t.variables,
          submittedAt: Date.now()
        };
      case "success":
        return {
          ...i,
          data: t.data,
          failureCount: 0,
          failureReason: null,
          error: null,
          status: "success",
          isPaused: !1
        };
      case "error":
        return {
          ...i,
          data: void 0,
          error: t.error,
          failureCount: i.failureCount + 1,
          failureReason: t.error,
          isPaused: !1,
          status: "error"
        };
    }
  };
  this.state = n(this.state), wa.batch(() => {
    Xe(this, Lu).forEach((i) => {
      i.onMutationUpdate(t);
    }), Xe(this, Ca).notify({
      mutation: this,
      type: "updated",
      action: t
    });
  });
}, n$);
function D3() {
  return {
    context: void 0,
    data: void 0,
    error: null,
    failureCount: 0,
    failureReason: null,
    isPaused: !1,
    status: "idle",
    variables: void 0,
    submittedAt: 0
  };
}
var Gc, zl, EC, r$, N3 = (r$ = class extends iE {
  constructor(t = {}) {
    super();
    or(this, Gc);
    or(this, zl);
    or(this, EC);
    this.config = t, wn(this, Gc, /* @__PURE__ */ new Set()), wn(this, zl, /* @__PURE__ */ new Map()), wn(this, EC, 0);
  }
  build(t, n, i) {
    const s = new I3({
      client: t,
      mutationCache: this,
      mutationId: ++Vx(this, EC)._,
      options: t.defaultMutationOptions(n),
      state: i
    });
    return this.add(s), s;
  }
  add(t) {
    Xe(this, Gc).add(t);
    const n = Wx(t);
    if (typeof n == "string") {
      const i = Xe(this, zl).get(n);
      i ? i.push(t) : Xe(this, zl).set(n, [t]);
    }
    this.notify({ type: "added", mutation: t });
  }
  remove(t) {
    if (Xe(this, Gc).delete(t)) {
      const n = Wx(t);
      if (typeof n == "string") {
        const i = Xe(this, zl).get(n);
        if (i)
          if (i.length > 1) {
            const s = i.indexOf(t);
            s !== -1 && i.splice(s, 1);
          } else i[0] === t && Xe(this, zl).delete(n);
      }
    }
    this.notify({ type: "removed", mutation: t });
  }
  canRun(t) {
    const n = Wx(t);
    if (typeof n == "string") {
      const i = Xe(this, zl).get(n), s = i == null ? void 0 : i.find(
        (u) => u.state.status === "pending"
      );
      return !s || s === t;
    } else
      return !0;
  }
  runNext(t) {
    var i;
    const n = Wx(t);
    if (typeof n == "string") {
      const s = (i = Xe(this, zl).get(n)) == null ? void 0 : i.find((u) => u !== t && u.state.isPaused);
      return (s == null ? void 0 : s.continue()) ?? Promise.resolve();
    } else
      return Promise.resolve();
  }
  clear() {
    wa.batch(() => {
      Xe(this, Gc).forEach((t) => {
        this.notify({ type: "removed", mutation: t });
      }), Xe(this, Gc).clear(), Xe(this, zl).clear();
    });
  }
  getAll() {
    return Array.from(Xe(this, Gc));
  }
  find(t) {
    const n = { exact: !0, ...t };
    return this.getAll().find(
      (i) => yL(n, i)
    );
  }
  findAll(t = {}) {
    return this.getAll().filter((n) => yL(t, n));
  }
  notify(t) {
    wa.batch(() => {
      this.listeners.forEach((n) => {
        n(t);
      });
    });
  }
  resumePausedMutations() {
    const t = this.getAll().filter((n) => n.state.isPaused);
    return wa.batch(
      () => Promise.all(
        t.map((n) => n.continue().catch(_l))
      )
    );
  }
}, Gc = new WeakMap(), zl = new WeakMap(), EC = new WeakMap(), r$);
function Wx(e) {
  var t;
  return (t = e.options.scope) == null ? void 0 : t.id;
}
var _u, o$, L3 = (o$ = class extends iE {
  constructor(t = {}) {
    super();
    or(this, _u);
    this.config = t, wn(this, _u, /* @__PURE__ */ new Map());
  }
  build(t, n, i) {
    const s = n.queryKey, u = n.queryHash ?? rP(s, n);
    let d = this.get(u);
    return d || (d = new k3({
      client: t,
      queryKey: s,
      queryHash: u,
      options: t.defaultQueryOptions(n),
      state: i,
      defaultOptions: t.getQueryDefaults(s)
    }), this.add(d)), d;
  }
  add(t) {
    Xe(this, _u).has(t.queryHash) || (Xe(this, _u).set(t.queryHash, t), this.notify({
      type: "added",
      query: t
    }));
  }
  remove(t) {
    const n = Xe(this, _u).get(t.queryHash);
    n && (t.destroy(), n === t && Xe(this, _u).delete(t.queryHash), this.notify({ type: "removed", query: t }));
  }
  clear() {
    wa.batch(() => {
      this.getAll().forEach((t) => {
        this.remove(t);
      });
    });
  }
  get(t) {
    return Xe(this, _u).get(t);
  }
  getAll() {
    return [...Xe(this, _u).values()];
  }
  find(t) {
    const n = { exact: !0, ...t };
    return this.getAll().find(
      (i) => vL(n, i)
    );
  }
  findAll(t = {}) {
    const n = this.getAll();
    return Object.keys(t).length > 0 ? n.filter((i) => vL(t, i)) : n;
  }
  notify(t) {
    wa.batch(() => {
      this.listeners.forEach((n) => {
        n(t);
      });
    });
  }
  onFocus() {
    wa.batch(() => {
      this.getAll().forEach((t) => {
        t.onFocus();
      });
    });
  }
  onOnline() {
    wa.batch(() => {
      this.getAll().forEach((t) => {
        t.onOnline();
      });
    });
  }
}, _u = new WeakMap(), o$), Oo, lf, uf, $g, jg, cf, zg, Hg, i$, F3 = (i$ = class {
  constructor(e = {}) {
    or(this, Oo);
    or(this, lf);
    or(this, uf);
    or(this, $g);
    or(this, jg);
    or(this, cf);
    or(this, zg);
    or(this, Hg);
    wn(this, Oo, e.queryCache || new L3()), wn(this, lf, e.mutationCache || new N3()), wn(this, uf, e.defaultOptions || {}), wn(this, $g, /* @__PURE__ */ new Map()), wn(this, jg, /* @__PURE__ */ new Map()), wn(this, cf, 0);
  }
  mount() {
    Vx(this, cf)._++, Xe(this, cf) === 1 && (wn(this, zg, u$.subscribe(async (e) => {
      e && (await this.resumePausedMutations(), Xe(this, Oo).onFocus());
    })), wn(this, Hg, E0.subscribe(async (e) => {
      e && (await this.resumePausedMutations(), Xe(this, Oo).onOnline());
    })));
  }
  unmount() {
    var e, t;
    Vx(this, cf)._--, Xe(this, cf) === 0 && ((e = Xe(this, zg)) == null || e.call(this), wn(this, zg, void 0), (t = Xe(this, Hg)) == null || t.call(this), wn(this, Hg, void 0));
  }
  isFetching(e) {
    return Xe(this, Oo).findAll({ ...e, fetchStatus: "fetching" }).length;
  }
  isMutating(e) {
    return Xe(this, lf).findAll({ ...e, status: "pending" }).length;
  }
  /**
   * Imperative (non-reactive) way to retrieve data for a QueryKey.
   * Should only be used in callbacks or functions where reading the latest data is necessary, e.g. for optimistic updates.
   *
   * Hint: Do not use this function inside a component, because it won't receive updates.
   * Use `useQuery` to create a `QueryObserver` that subscribes to changes.
   */
  getQueryData(e) {
    var n;
    const t = this.defaultQueryOptions({ queryKey: e });
    return (n = Xe(this, Oo).get(t.queryHash)) == null ? void 0 : n.state.data;
  }
  ensureQueryData(e) {
    const t = this.defaultQueryOptions(e), n = Xe(this, Oo).build(this, t), i = n.state.data;
    return i === void 0 ? this.fetchQuery(e) : (e.revalidateIfStale && n.isStaleByTime(nk(t.staleTime, n)) && this.prefetchQuery(t), Promise.resolve(i));
  }
  getQueriesData(e) {
    return Xe(this, Oo).findAll(e).map(({ queryKey: t, state: n }) => {
      const i = n.data;
      return [t, i];
    });
  }
  setQueryData(e, t, n) {
    const i = this.defaultQueryOptions({ queryKey: e }), s = Xe(this, Oo).get(
      i.queryHash
    ), u = s == null ? void 0 : s.state.data, d = p3(t, u);
    if (d !== void 0)
      return Xe(this, Oo).build(this, i).setData(d, { ...n, manual: !0 });
  }
  setQueriesData(e, t, n) {
    return wa.batch(
      () => Xe(this, Oo).findAll(e).map(({ queryKey: i }) => [
        i,
        this.setQueryData(i, t, n)
      ])
    );
  }
  getQueryState(e) {
    var n;
    const t = this.defaultQueryOptions({ queryKey: e });
    return (n = Xe(this, Oo).get(
      t.queryHash
    )) == null ? void 0 : n.state;
  }
  removeQueries(e) {
    const t = Xe(this, Oo);
    wa.batch(() => {
      t.findAll(e).forEach((n) => {
        t.remove(n);
      });
    });
  }
  resetQueries(e, t) {
    const n = Xe(this, Oo);
    return wa.batch(() => (n.findAll(e).forEach((i) => {
      i.reset();
    }), this.refetchQueries(
      {
        type: "active",
        ...e
      },
      t
    )));
  }
  cancelQueries(e, t = {}) {
    const n = { revert: !0, ...t }, i = wa.batch(
      () => Xe(this, Oo).findAll(e).map((s) => s.cancel(n))
    );
    return Promise.all(i).then(_l).catch(_l);
  }
  invalidateQueries(e, t = {}) {
    return wa.batch(() => (Xe(this, Oo).findAll(e).forEach((n) => {
      n.invalidate();
    }), (e == null ? void 0 : e.refetchType) === "none" ? Promise.resolve() : this.refetchQueries(
      {
        ...e,
        type: (e == null ? void 0 : e.refetchType) ?? (e == null ? void 0 : e.type) ?? "active"
      },
      t
    )));
  }
  refetchQueries(e, t = {}) {
    const n = {
      ...t,
      cancelRefetch: t.cancelRefetch ?? !0
    }, i = wa.batch(
      () => Xe(this, Oo).findAll(e).filter((s) => !s.isDisabled() && !s.isStatic()).map((s) => {
        let u = s.fetch(void 0, n);
        return n.throwOnError || (u = u.catch(_l)), s.state.fetchStatus === "paused" ? Promise.resolve() : u;
      })
    );
    return Promise.all(i).then(_l);
  }
  fetchQuery(e) {
    const t = this.defaultQueryOptions(e);
    t.retry === void 0 && (t.retry = !1);
    const n = Xe(this, Oo).build(this, t);
    return n.isStaleByTime(
      nk(t.staleTime, n)
    ) ? n.fetch(t) : Promise.resolve(n.state.data);
  }
  prefetchQuery(e) {
    return this.fetchQuery(e).then(_l).catch(_l);
  }
  fetchInfiniteQuery(e) {
    return e.behavior = wL(e.pages), this.fetchQuery(e);
  }
  prefetchInfiniteQuery(e) {
    return this.fetchInfiniteQuery(e).then(_l).catch(_l);
  }
  ensureInfiniteQueryData(e) {
    return e.behavior = wL(e.pages), this.ensureQueryData(e);
  }
  resumePausedMutations() {
    return E0.isOnline() ? Xe(this, lf).resumePausedMutations() : Promise.resolve();
  }
  getQueryCache() {
    return Xe(this, Oo);
  }
  getMutationCache() {
    return Xe(this, lf);
  }
  getDefaultOptions() {
    return Xe(this, uf);
  }
  setDefaultOptions(e) {
    wn(this, uf, e);
  }
  setQueryDefaults(e, t) {
    Xe(this, $g).set(Zb(e), {
      queryKey: e,
      defaultOptions: t
    });
  }
  getQueryDefaults(e) {
    const t = [...Xe(this, $g).values()], n = {};
    return t.forEach((i) => {
      eC(e, i.queryKey) && Object.assign(n, i.defaultOptions);
    }), n;
  }
  setMutationDefaults(e, t) {
    Xe(this, jg).set(Zb(e), {
      mutationKey: e,
      defaultOptions: t
    });
  }
  getMutationDefaults(e) {
    const t = [...Xe(this, jg).values()], n = {};
    return t.forEach((i) => {
      eC(e, i.mutationKey) && Object.assign(n, i.defaultOptions);
    }), n;
  }
  defaultQueryOptions(e) {
    if (e._defaulted)
      return e;
    const t = {
      ...Xe(this, uf).queries,
      ...this.getQueryDefaults(e.queryKey),
      ...e,
      _defaulted: !0
    };
    return t.queryHash || (t.queryHash = rP(
      t.queryKey,
      t
    )), t.refetchOnReconnect === void 0 && (t.refetchOnReconnect = t.networkMode !== "always"), t.throwOnError === void 0 && (t.throwOnError = !!t.suspense), !t.networkMode && t.persister && (t.networkMode = "offlineFirst"), t.queryFn === x0 && (t.enabled = !1), t;
  }
  defaultMutationOptions(e) {
    return e != null && e._defaulted ? e : {
      ...Xe(this, uf).mutations,
      ...(e == null ? void 0 : e.mutationKey) && this.getMutationDefaults(e.mutationKey),
      ...e,
      _defaulted: !0
    };
  }
  clear() {
    Xe(this, Oo).clear(), Xe(this, lf).clear();
  }
}, Oo = new WeakMap(), lf = new WeakMap(), uf = new WeakMap(), $g = new WeakMap(), jg = new WeakMap(), cf = new WeakMap(), zg = new WeakMap(), Hg = new WeakMap(), i$), _3 = w.createContext(
  void 0
), A3 = ({
  client: e,
  children: t
}) => (w.useEffect(() => (e.mount(), () => {
  e.unmount();
}), [e]), /* @__PURE__ */ A.jsx(_3.Provider, { value: e, children: t }));
const tC = {
  black: "#000",
  white: "#fff"
}, sg = {
  300: "#e57373",
  400: "#ef5350",
  500: "#f44336",
  700: "#d32f2f",
  800: "#c62828"
}, lg = {
  50: "#f3e5f5",
  200: "#ce93d8",
  300: "#ba68c8",
  400: "#ab47bc",
  500: "#9c27b0",
  700: "#7b1fa2"
}, ug = {
  50: "#e3f2fd",
  200: "#90caf9",
  400: "#42a5f5",
  700: "#1976d2",
  800: "#1565c0"
}, cg = {
  300: "#4fc3f7",
  400: "#29b6f6",
  500: "#03a9f4",
  700: "#0288d1",
  900: "#01579b"
}, dg = {
  300: "#81c784",
  400: "#66bb6a",
  500: "#4caf50",
  700: "#388e3c",
  800: "#2e7d32",
  900: "#1b5e20"
}, Eb = {
  300: "#ffb74d",
  400: "#ffa726",
  500: "#ff9800",
  700: "#f57c00",
  900: "#e65100"
}, $3 = {
  50: "#fafafa",
  100: "#f5f5f5",
  200: "#eeeeee",
  300: "#e0e0e0",
  400: "#bdbdbd",
  500: "#9e9e9e",
  600: "#757575",
  700: "#616161",
  800: "#424242",
  900: "#212121",
  A100: "#f5f5f5",
  A200: "#eeeeee",
  A400: "#bdbdbd",
  A700: "#616161"
};
function Gu(e, ...t) {
  const n = new URL(`https://mui.com/production-error/?code=${e}`);
  return t.forEach((i) => n.searchParams.append("args[]", i)), `Minified MUI error #${e}; visit ${n} for the full message.`;
}
const Hu = "$$material";
function J() {
  return J = Object.assign ? Object.assign.bind() : function(e) {
    for (var t = 1; t < arguments.length; t++) {
      var n = arguments[t];
      for (var i in n) ({}).hasOwnProperty.call(n, i) && (e[i] = n[i]);
    }
    return e;
  }, J.apply(null, arguments);
}
function j3(e) {
  if (e.sheet)
    return e.sheet;
  for (var t = 0; t < document.styleSheets.length; t++)
    if (document.styleSheets[t].ownerNode === e)
      return document.styleSheets[t];
}
function z3(e) {
  var t = document.createElement("style");
  return t.setAttribute("data-emotion", e.key), e.nonce !== void 0 && t.setAttribute("nonce", e.nonce), t.appendChild(document.createTextNode("")), t.setAttribute("data-s", ""), t;
}
var H3 = /* @__PURE__ */ function() {
  function e(n) {
    var i = this;
    this._insertTag = function(s) {
      var u;
      i.tags.length === 0 ? i.insertionPoint ? u = i.insertionPoint.nextSibling : i.prepend ? u = i.container.firstChild : u = i.before : u = i.tags[i.tags.length - 1].nextSibling, i.container.insertBefore(s, u), i.tags.push(s);
    }, this.isSpeedy = n.speedy === void 0 ? !0 : n.speedy, this.tags = [], this.ctr = 0, this.nonce = n.nonce, this.key = n.key, this.container = n.container, this.prepend = n.prepend, this.insertionPoint = n.insertionPoint, this.before = null;
  }
  var t = e.prototype;
  return t.hydrate = function(i) {
    i.forEach(this._insertTag);
  }, t.insert = function(i) {
    this.ctr % (this.isSpeedy ? 65e3 : 1) === 0 && this._insertTag(z3(this));
    var s = this.tags[this.tags.length - 1];
    if (this.isSpeedy) {
      var u = j3(s);
      try {
        u.insertRule(i, u.cssRules.length);
      } catch {
      }
    } else
      s.appendChild(document.createTextNode(i));
    this.ctr++;
  }, t.flush = function() {
    this.tags.forEach(function(i) {
      var s;
      return (s = i.parentNode) == null ? void 0 : s.removeChild(i);
    }), this.tags = [], this.ctr = 0;
  }, e;
}(), ia = "-ms-", T0 = "-moz-", vr = "-webkit-", p$ = "comm", oP = "rule", iP = "decl", V3 = "@import", h$ = "@keyframes", B3 = "@layer", U3 = Math.abs, sE = String.fromCharCode, G3 = Object.assign;
function W3(e, t) {
  return $i(e, 0) ^ 45 ? (((t << 2 ^ $i(e, 0)) << 2 ^ $i(e, 1)) << 2 ^ $i(e, 2)) << 2 ^ $i(e, 3) : 0;
}
function m$(e) {
  return e.trim();
}
function q3(e, t) {
  return (e = t.exec(e)) ? e[0] : e;
}
function br(e, t, n) {
  return e.replace(t, n);
}
function ak(e, t) {
  return e.indexOf(t);
}
function $i(e, t) {
  return e.charCodeAt(t) | 0;
}
function nC(e, t, n) {
  return e.slice(t, n);
}
function Au(e) {
  return e.length;
}
function aP(e) {
  return e.length;
}
function qx(e, t) {
  return t.push(e), e;
}
function K3(e, t) {
  return e.map(t).join("");
}
var lE = 1, Vg = 1, g$ = 0, Ka = 0, Uo = 0, nv = "";
function uE(e, t, n, i, s, u, d) {
  return { value: e, root: t, parent: n, type: i, props: s, children: u, line: lE, column: Vg, length: d, return: "" };
}
function Tb(e, t) {
  return G3(uE("", null, null, "", null, null, 0), e, { length: -e.length }, t);
}
function Y3() {
  return Uo;
}
function X3() {
  return Uo = Ka > 0 ? $i(nv, --Ka) : 0, Vg--, Uo === 10 && (Vg = 1, lE--), Uo;
}
function hs() {
  return Uo = Ka < g$ ? $i(nv, Ka++) : 0, Vg++, Uo === 10 && (Vg = 1, lE++), Uo;
}
function Vu() {
  return $i(nv, Ka);
}
function u0() {
  return Ka;
}
function TC(e, t) {
  return nC(nv, e, t);
}
function rC(e) {
  switch (e) {
    case 0:
    case 9:
    case 10:
    case 13:
    case 32:
      return 5;
    case 33:
    case 43:
    case 44:
    case 47:
    case 62:
    case 64:
    case 126:
    case 59:
    case 123:
    case 125:
      return 4;
    case 58:
      return 3;
    case 34:
    case 39:
    case 40:
    case 91:
      return 2;
    case 41:
    case 93:
      return 1;
  }
  return 0;
}
function v$(e) {
  return lE = Vg = 1, g$ = Au(nv = e), Ka = 0, [];
}
function y$(e) {
  return nv = "", e;
}
function c0(e) {
  return m$(TC(Ka - 1, sk(e === 91 ? e + 2 : e === 40 ? e + 1 : e)));
}
function Q3(e) {
  for (; (Uo = Vu()) && Uo < 33; )
    hs();
  return rC(e) > 2 || rC(Uo) > 3 ? "" : " ";
}
function J3(e, t) {
  for (; --t && hs() && !(Uo < 48 || Uo > 102 || Uo > 57 && Uo < 65 || Uo > 70 && Uo < 97); )
    ;
  return TC(e, u0() + (t < 6 && Vu() == 32 && hs() == 32));
}
function sk(e) {
  for (; hs(); )
    switch (Uo) {
      case e:
        return Ka;
      case 34:
      case 39:
        e !== 34 && e !== 39 && sk(Uo);
        break;
      case 40:
        e === 41 && sk(e);
        break;
      case 92:
        hs();
        break;
    }
  return Ka;
}
function Z3(e, t) {
  for (; hs() && e + Uo !== 57; )
    if (e + Uo === 84 && Vu() === 47)
      break;
  return "/*" + TC(t, Ka - 1) + "*" + sE(e === 47 ? e : hs());
}
function eW(e) {
  for (; !rC(Vu()); )
    hs();
  return TC(e, Ka);
}
function tW(e) {
  return y$(d0("", null, null, null, [""], e = v$(e), 0, [0], e));
}
function d0(e, t, n, i, s, u, d, p, m) {
  for (var v = 0, y = 0, C = d, S = 0, R = 0, O = 0, E = 1, k = 1, F = 1, _ = 0, L = "", M = s, D = u, H = i, K = L; k; )
    switch (O = _, _ = hs()) {
      case 40:
        if (O != 108 && $i(K, C - 1) == 58) {
          ak(K += br(c0(_), "&", "&\f"), "&\f") != -1 && (F = -1);
          break;
        }
      case 34:
      case 39:
      case 91:
        K += c0(_);
        break;
      case 9:
      case 10:
      case 13:
      case 32:
        K += Q3(O);
        break;
      case 92:
        K += J3(u0() - 1, 7);
        continue;
      case 47:
        switch (Vu()) {
          case 42:
          case 47:
            qx(nW(Z3(hs(), u0()), t, n), m);
            break;
          default:
            K += "/";
        }
        break;
      case 123 * E:
        p[v++] = Au(K) * F;
      case 125 * E:
      case 59:
      case 0:
        switch (_) {
          case 0:
          case 125:
            k = 0;
          case 59 + y:
            F == -1 && (K = br(K, /\f/g, "")), R > 0 && Au(K) - C && qx(R > 32 ? TL(K + ";", i, n, C - 1) : TL(br(K, " ", "") + ";", i, n, C - 2), m);
            break;
          case 59:
            K += ";";
          default:
            if (qx(H = EL(K, t, n, v, y, s, p, L, M = [], D = [], C), u), _ === 123)
              if (y === 0)
                d0(K, t, H, H, M, u, C, p, D);
              else
                switch (S === 99 && $i(K, 3) === 110 ? 100 : S) {
                  case 100:
                  case 108:
                  case 109:
                  case 115:
                    d0(e, H, H, i && qx(EL(e, H, H, 0, 0, s, p, L, s, M = [], C), D), s, D, C, p, i ? M : D);
                    break;
                  default:
                    d0(K, H, H, H, [""], D, 0, p, D);
                }
        }
        v = y = R = 0, E = F = 1, L = K = "", C = d;
        break;
      case 58:
        C = 1 + Au(K), R = O;
      default:
        if (E < 1) {
          if (_ == 123)
            --E;
          else if (_ == 125 && E++ == 0 && X3() == 125)
            continue;
        }
        switch (K += sE(_), _ * E) {
          case 38:
            F = y > 0 ? 1 : (K += "\f", -1);
            break;
          case 44:
            p[v++] = (Au(K) - 1) * F, F = 1;
            break;
          case 64:
            Vu() === 45 && (K += c0(hs())), S = Vu(), y = C = Au(L = K += eW(u0())), _++;
            break;
          case 45:
            O === 45 && Au(K) == 2 && (E = 0);
        }
    }
  return u;
}
function EL(e, t, n, i, s, u, d, p, m, v, y) {
  for (var C = s - 1, S = s === 0 ? u : [""], R = aP(S), O = 0, E = 0, k = 0; O < i; ++O)
    for (var F = 0, _ = nC(e, C + 1, C = U3(E = d[O])), L = e; F < R; ++F)
      (L = m$(E > 0 ? S[F] + " " + _ : br(_, /&\f/g, S[F]))) && (m[k++] = L);
  return uE(e, t, n, s === 0 ? oP : p, m, v, y);
}
function nW(e, t, n) {
  return uE(e, t, n, p$, sE(Y3()), nC(e, 2, -2), 0);
}
function TL(e, t, n, i) {
  return uE(e, t, n, iP, nC(e, 0, i), nC(e, i + 1, -1), i);
}
function Mg(e, t) {
  for (var n = "", i = aP(e), s = 0; s < i; s++)
    n += t(e[s], s, e, t) || "";
  return n;
}
function rW(e, t, n, i) {
  switch (e.type) {
    case B3:
      if (e.children.length) break;
    case V3:
    case iP:
      return e.return = e.return || e.value;
    case p$:
      return "";
    case h$:
      return e.return = e.value + "{" + Mg(e.children, i) + "}";
    case oP:
      e.value = e.props.join(",");
  }
  return Au(n = Mg(e.children, i)) ? e.return = e.value + "{" + n + "}" : "";
}
function oW(e) {
  var t = aP(e);
  return function(n, i, s, u) {
    for (var d = "", p = 0; p < t; p++)
      d += e[p](n, i, s, u) || "";
    return d;
  };
}
function iW(e) {
  return function(t) {
    t.root || (t = t.return) && e(t);
  };
}
function b$(e) {
  var t = /* @__PURE__ */ Object.create(null);
  return function(n) {
    return t[n] === void 0 && (t[n] = e(n)), t[n];
  };
}
var aW = function(t, n, i) {
  for (var s = 0, u = 0; s = u, u = Vu(), s === 38 && u === 12 && (n[i] = 1), !rC(u); )
    hs();
  return TC(t, Ka);
}, sW = function(t, n) {
  var i = -1, s = 44;
  do
    switch (rC(s)) {
      case 0:
        s === 38 && Vu() === 12 && (n[i] = 1), t[i] += aW(Ka - 1, n, i);
        break;
      case 2:
        t[i] += c0(s);
        break;
      case 4:
        if (s === 44) {
          t[++i] = Vu() === 58 ? "&\f" : "", n[i] = t[i].length;
          break;
        }
      default:
        t[i] += sE(s);
    }
  while (s = hs());
  return t;
}, lW = function(t, n) {
  return y$(sW(v$(t), n));
}, RL = /* @__PURE__ */ new WeakMap(), uW = function(t) {
  if (!(t.type !== "rule" || !t.parent || // positive .length indicates that this rule contains pseudo
  // negative .length indicates that this rule has been already prefixed
  t.length < 1)) {
    for (var n = t.value, i = t.parent, s = t.column === i.column && t.line === i.line; i.type !== "rule"; )
      if (i = i.parent, !i) return;
    if (!(t.props.length === 1 && n.charCodeAt(0) !== 58 && !RL.get(i)) && !s) {
      RL.set(t, !0);
      for (var u = [], d = lW(n, u), p = i.props, m = 0, v = 0; m < d.length; m++)
        for (var y = 0; y < p.length; y++, v++)
          t.props[v] = u[m] ? d[m].replace(/&\f/g, p[y]) : p[y] + " " + d[m];
    }
  }
}, cW = function(t) {
  if (t.type === "decl") {
    var n = t.value;
    // charcode for l
    n.charCodeAt(0) === 108 && // charcode for b
    n.charCodeAt(2) === 98 && (t.return = "", t.value = "");
  }
};
function C$(e, t) {
  switch (W3(e, t)) {
    case 5103:
      return vr + "print-" + e + e;
    case 5737:
    case 4201:
    case 3177:
    case 3433:
    case 1641:
    case 4457:
    case 2921:
    case 5572:
    case 6356:
    case 5844:
    case 3191:
    case 6645:
    case 3005:
    case 6391:
    case 5879:
    case 5623:
    case 6135:
    case 4599:
    case 4855:
    case 4215:
    case 6389:
    case 5109:
    case 5365:
    case 5621:
    case 3829:
      return vr + e + e;
    case 5349:
    case 4246:
    case 4810:
    case 6968:
    case 2756:
      return vr + e + T0 + e + ia + e + e;
    case 6828:
    case 4268:
      return vr + e + ia + e + e;
    case 6165:
      return vr + e + ia + "flex-" + e + e;
    case 5187:
      return vr + e + br(e, /(\w+).+(:[^]+)/, vr + "box-$1$2" + ia + "flex-$1$2") + e;
    case 5443:
      return vr + e + ia + "flex-item-" + br(e, /flex-|-self/, "") + e;
    case 4675:
      return vr + e + ia + "flex-line-pack" + br(e, /align-content|flex-|-self/, "") + e;
    case 5548:
      return vr + e + ia + br(e, "shrink", "negative") + e;
    case 5292:
      return vr + e + ia + br(e, "basis", "preferred-size") + e;
    case 6060:
      return vr + "box-" + br(e, "-grow", "") + vr + e + ia + br(e, "grow", "positive") + e;
    case 4554:
      return vr + br(e, /([^-])(transform)/g, "$1" + vr + "$2") + e;
    case 6187:
      return br(br(br(e, /(zoom-|grab)/, vr + "$1"), /(image-set)/, vr + "$1"), e, "") + e;
    case 5495:
    case 3959:
      return br(e, /(image-set\([^]*)/, vr + "$1$`$1");
    case 4968:
      return br(br(e, /(.+:)(flex-)?(.*)/, vr + "box-pack:$3" + ia + "flex-pack:$3"), /s.+-b[^;]+/, "justify") + vr + e + e;
    case 4095:
    case 3583:
    case 4068:
    case 2532:
      return br(e, /(.+)-inline(.+)/, vr + "$1$2") + e;
    case 8116:
    case 7059:
    case 5753:
    case 5535:
    case 5445:
    case 5701:
    case 4933:
    case 4677:
    case 5533:
    case 5789:
    case 5021:
    case 4765:
      if (Au(e) - 1 - t > 6) switch ($i(e, t + 1)) {
        case 109:
          if ($i(e, t + 4) !== 45) break;
        case 102:
          return br(e, /(.+:)(.+)-([^]+)/, "$1" + vr + "$2-$3$1" + T0 + ($i(e, t + 3) == 108 ? "$3" : "$2-$3")) + e;
        case 115:
          return ~ak(e, "stretch") ? C$(br(e, "stretch", "fill-available"), t) + e : e;
      }
      break;
    case 4949:
      if ($i(e, t + 1) !== 115) break;
    case 6444:
      switch ($i(e, Au(e) - 3 - (~ak(e, "!important") && 10))) {
        case 107:
          return br(e, ":", ":" + vr) + e;
        case 101:
          return br(e, /(.+:)([^;!]+)(;|!.+)?/, "$1" + vr + ($i(e, 14) === 45 ? "inline-" : "") + "box$3$1" + vr + "$2$3$1" + ia + "$2box$3") + e;
      }
      break;
    case 5936:
      switch ($i(e, t + 11)) {
        case 114:
          return vr + e + ia + br(e, /[svh]\w+-[tblr]{2}/, "tb") + e;
        case 108:
          return vr + e + ia + br(e, /[svh]\w+-[tblr]{2}/, "tb-rl") + e;
        case 45:
          return vr + e + ia + br(e, /[svh]\w+-[tblr]{2}/, "lr") + e;
      }
      return vr + e + ia + e + e;
  }
  return e;
}
var dW = function(t, n, i, s) {
  if (t.length > -1 && !t.return) switch (t.type) {
    case iP:
      t.return = C$(t.value, t.length);
      break;
    case h$:
      return Mg([Tb(t, {
        value: br(t.value, "@", "@" + vr)
      })], s);
    case oP:
      if (t.length) return K3(t.props, function(u) {
        switch (q3(u, /(::plac\w+|:read-\w+)/)) {
          case ":read-only":
          case ":read-write":
            return Mg([Tb(t, {
              props: [br(u, /:(read-\w+)/, ":" + T0 + "$1")]
            })], s);
          case "::placeholder":
            return Mg([Tb(t, {
              props: [br(u, /:(plac\w+)/, ":" + vr + "input-$1")]
            }), Tb(t, {
              props: [br(u, /:(plac\w+)/, ":" + T0 + "$1")]
            }), Tb(t, {
              props: [br(u, /:(plac\w+)/, ia + "input-$1")]
            })], s);
        }
        return "";
      });
  }
}, fW = [dW], pW = function(t) {
  var n = t.key;
  if (n === "css") {
    var i = document.querySelectorAll("style[data-emotion]:not([data-s])");
    Array.prototype.forEach.call(i, function(E) {
      var k = E.getAttribute("data-emotion");
      k.indexOf(" ") !== -1 && (document.head.appendChild(E), E.setAttribute("data-s", ""));
    });
  }
  var s = t.stylisPlugins || fW, u = {}, d, p = [];
  d = t.container || document.head, Array.prototype.forEach.call(
    // this means we will ignore elements which don't have a space in them which
    // means that the style elements we're looking at are only Emotion 11 server-rendered style elements
    document.querySelectorAll('style[data-emotion^="' + n + ' "]'),
    function(E) {
      for (var k = E.getAttribute("data-emotion").split(" "), F = 1; F < k.length; F++)
        u[k[F]] = !0;
      p.push(E);
    }
  );
  var m, v = [uW, cW];
  {
    var y, C = [rW, iW(function(E) {
      y.insert(E);
    })], S = oW(v.concat(s, C)), R = function(k) {
      return Mg(tW(k), S);
    };
    m = function(k, F, _, L) {
      y = _, R(k ? k + "{" + F.styles + "}" : F.styles), L && (O.inserted[F.name] = !0);
    };
  }
  var O = {
    key: n,
    sheet: new H3({
      key: n,
      container: d,
      nonce: t.nonce,
      speedy: t.speedy,
      prepend: t.prepend,
      insertionPoint: t.insertionPoint
    }),
    nonce: t.nonce,
    inserted: u,
    registered: {},
    insert: m
  };
  return O.sheet.hydrate(p), O;
}, lk = { exports: {} }, kr = {};
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var OL;
function hW() {
  if (OL) return kr;
  OL = 1;
  var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, n = e ? Symbol.for("react.portal") : 60106, i = e ? Symbol.for("react.fragment") : 60107, s = e ? Symbol.for("react.strict_mode") : 60108, u = e ? Symbol.for("react.profiler") : 60114, d = e ? Symbol.for("react.provider") : 60109, p = e ? Symbol.for("react.context") : 60110, m = e ? Symbol.for("react.async_mode") : 60111, v = e ? Symbol.for("react.concurrent_mode") : 60111, y = e ? Symbol.for("react.forward_ref") : 60112, C = e ? Symbol.for("react.suspense") : 60113, S = e ? Symbol.for("react.suspense_list") : 60120, R = e ? Symbol.for("react.memo") : 60115, O = e ? Symbol.for("react.lazy") : 60116, E = e ? Symbol.for("react.block") : 60121, k = e ? Symbol.for("react.fundamental") : 60117, F = e ? Symbol.for("react.responder") : 60118, _ = e ? Symbol.for("react.scope") : 60119;
  function L(D) {
    if (typeof D == "object" && D !== null) {
      var H = D.$$typeof;
      switch (H) {
        case t:
          switch (D = D.type, D) {
            case m:
            case v:
            case i:
            case u:
            case s:
            case C:
              return D;
            default:
              switch (D = D && D.$$typeof, D) {
                case p:
                case y:
                case O:
                case R:
                case d:
                  return D;
                default:
                  return H;
              }
          }
        case n:
          return H;
      }
    }
  }
  function M(D) {
    return L(D) === v;
  }
  return kr.AsyncMode = m, kr.ConcurrentMode = v, kr.ContextConsumer = p, kr.ContextProvider = d, kr.Element = t, kr.ForwardRef = y, kr.Fragment = i, kr.Lazy = O, kr.Memo = R, kr.Portal = n, kr.Profiler = u, kr.StrictMode = s, kr.Suspense = C, kr.isAsyncMode = function(D) {
    return M(D) || L(D) === m;
  }, kr.isConcurrentMode = M, kr.isContextConsumer = function(D) {
    return L(D) === p;
  }, kr.isContextProvider = function(D) {
    return L(D) === d;
  }, kr.isElement = function(D) {
    return typeof D == "object" && D !== null && D.$$typeof === t;
  }, kr.isForwardRef = function(D) {
    return L(D) === y;
  }, kr.isFragment = function(D) {
    return L(D) === i;
  }, kr.isLazy = function(D) {
    return L(D) === O;
  }, kr.isMemo = function(D) {
    return L(D) === R;
  }, kr.isPortal = function(D) {
    return L(D) === n;
  }, kr.isProfiler = function(D) {
    return L(D) === u;
  }, kr.isStrictMode = function(D) {
    return L(D) === s;
  }, kr.isSuspense = function(D) {
    return L(D) === C;
  }, kr.isValidElementType = function(D) {
    return typeof D == "string" || typeof D == "function" || D === i || D === v || D === u || D === s || D === C || D === S || typeof D == "object" && D !== null && (D.$$typeof === O || D.$$typeof === R || D.$$typeof === d || D.$$typeof === p || D.$$typeof === y || D.$$typeof === k || D.$$typeof === F || D.$$typeof === _ || D.$$typeof === E);
  }, kr.typeOf = L, kr;
}
var Pr = {};
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var kL;
function mW() {
  return kL || (kL = 1, process.env.NODE_ENV !== "production" && function() {
    var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, n = e ? Symbol.for("react.portal") : 60106, i = e ? Symbol.for("react.fragment") : 60107, s = e ? Symbol.for("react.strict_mode") : 60108, u = e ? Symbol.for("react.profiler") : 60114, d = e ? Symbol.for("react.provider") : 60109, p = e ? Symbol.for("react.context") : 60110, m = e ? Symbol.for("react.async_mode") : 60111, v = e ? Symbol.for("react.concurrent_mode") : 60111, y = e ? Symbol.for("react.forward_ref") : 60112, C = e ? Symbol.for("react.suspense") : 60113, S = e ? Symbol.for("react.suspense_list") : 60120, R = e ? Symbol.for("react.memo") : 60115, O = e ? Symbol.for("react.lazy") : 60116, E = e ? Symbol.for("react.block") : 60121, k = e ? Symbol.for("react.fundamental") : 60117, F = e ? Symbol.for("react.responder") : 60118, _ = e ? Symbol.for("react.scope") : 60119;
    function L(ue) {
      return typeof ue == "string" || typeof ue == "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
      ue === i || ue === v || ue === u || ue === s || ue === C || ue === S || typeof ue == "object" && ue !== null && (ue.$$typeof === O || ue.$$typeof === R || ue.$$typeof === d || ue.$$typeof === p || ue.$$typeof === y || ue.$$typeof === k || ue.$$typeof === F || ue.$$typeof === _ || ue.$$typeof === E);
    }
    function M(ue) {
      if (typeof ue == "object" && ue !== null) {
        var we = ue.$$typeof;
        switch (we) {
          case t:
            var _e = ue.type;
            switch (_e) {
              case m:
              case v:
              case i:
              case u:
              case s:
              case C:
                return _e;
              default:
                var He = _e && _e.$$typeof;
                switch (He) {
                  case p:
                  case y:
                  case O:
                  case R:
                  case d:
                    return He;
                  default:
                    return we;
                }
            }
          case n:
            return we;
        }
      }
    }
    var D = m, H = v, K = p, Q = d, z = t, I = y, G = i, W = O, B = R, ee = n, U = u, q = s, Y = C, ne = !1;
    function re(ue) {
      return ne || (ne = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.")), X(ue) || M(ue) === m;
    }
    function X(ue) {
      return M(ue) === v;
    }
    function j(ue) {
      return M(ue) === p;
    }
    function ie(ue) {
      return M(ue) === d;
    }
    function fe(ue) {
      return typeof ue == "object" && ue !== null && ue.$$typeof === t;
    }
    function ce(ue) {
      return M(ue) === y;
    }
    function me(ue) {
      return M(ue) === i;
    }
    function ge(ue) {
      return M(ue) === O;
    }
    function de(ue) {
      return M(ue) === R;
    }
    function pe(ue) {
      return M(ue) === n;
    }
    function be(ue) {
      return M(ue) === u;
    }
    function Ce(ue) {
      return M(ue) === s;
    }
    function Re(ue) {
      return M(ue) === C;
    }
    Pr.AsyncMode = D, Pr.ConcurrentMode = H, Pr.ContextConsumer = K, Pr.ContextProvider = Q, Pr.Element = z, Pr.ForwardRef = I, Pr.Fragment = G, Pr.Lazy = W, Pr.Memo = B, Pr.Portal = ee, Pr.Profiler = U, Pr.StrictMode = q, Pr.Suspense = Y, Pr.isAsyncMode = re, Pr.isConcurrentMode = X, Pr.isContextConsumer = j, Pr.isContextProvider = ie, Pr.isElement = fe, Pr.isForwardRef = ce, Pr.isFragment = me, Pr.isLazy = ge, Pr.isMemo = de, Pr.isPortal = pe, Pr.isProfiler = be, Pr.isStrictMode = Ce, Pr.isSuspense = Re, Pr.isValidElementType = L, Pr.typeOf = M;
  }()), Pr;
}
process.env.NODE_ENV === "production" ? lk.exports = hW() : lk.exports = mW();
var gW = lk.exports, S$ = gW, vW = {
  $$typeof: !0,
  render: !0,
  defaultProps: !0,
  displayName: !0,
  propTypes: !0
}, yW = {
  $$typeof: !0,
  compare: !0,
  defaultProps: !0,
  displayName: !0,
  propTypes: !0,
  type: !0
}, w$ = {};
w$[S$.ForwardRef] = vW;
w$[S$.Memo] = yW;
var bW = !0;
function x$(e, t, n) {
  var i = "";
  return n.split(" ").forEach(function(s) {
    e[s] !== void 0 ? t.push(e[s] + ";") : s && (i += s + " ");
  }), i;
}
var sP = function(t, n, i) {
  var s = t.key + "-" + n.name;
  // we only need to add the styles to the registered cache if the
  // class name could be used further down
  // the tree but if it's a string tag, we know it won't
  // so we don't have to add it to registered cache.
  // this improves memory usage since we can avoid storing the whole style string
  (i === !1 || // we need to always store it if we're in compat mode and
  // in node since emotion-server relies on whether a style is in
  // the registered cache to know whether a style is global or not
  // also, note that this check will be dead code eliminated in the browser
  bW === !1) && t.registered[s] === void 0 && (t.registered[s] = n.styles);
}, lP = function(t, n, i) {
  sP(t, n, i);
  var s = t.key + "-" + n.name;
  if (t.inserted[n.name] === void 0) {
    var u = n;
    do
      t.insert(n === u ? "." + s : "", u, t.sheet, !0), u = u.next;
    while (u !== void 0);
  }
};
function CW(e) {
  for (var t = 0, n, i = 0, s = e.length; s >= 4; ++i, s -= 4)
    n = e.charCodeAt(i) & 255 | (e.charCodeAt(++i) & 255) << 8 | (e.charCodeAt(++i) & 255) << 16 | (e.charCodeAt(++i) & 255) << 24, n = /* Math.imul(k, m): */
    (n & 65535) * 1540483477 + ((n >>> 16) * 59797 << 16), n ^= /* k >>> r: */
    n >>> 24, t = /* Math.imul(k, m): */
    (n & 65535) * 1540483477 + ((n >>> 16) * 59797 << 16) ^ /* Math.imul(h, m): */
    (t & 65535) * 1540483477 + ((t >>> 16) * 59797 << 16);
  switch (s) {
    case 3:
      t ^= (e.charCodeAt(i + 2) & 255) << 16;
    case 2:
      t ^= (e.charCodeAt(i + 1) & 255) << 8;
    case 1:
      t ^= e.charCodeAt(i) & 255, t = /* Math.imul(h, m): */
      (t & 65535) * 1540483477 + ((t >>> 16) * 59797 << 16);
  }
  return t ^= t >>> 13, t = /* Math.imul(h, m): */
  (t & 65535) * 1540483477 + ((t >>> 16) * 59797 << 16), ((t ^ t >>> 15) >>> 0).toString(36);
}
var SW = {
  animationIterationCount: 1,
  aspectRatio: 1,
  borderImageOutset: 1,
  borderImageSlice: 1,
  borderImageWidth: 1,
  boxFlex: 1,
  boxFlexGroup: 1,
  boxOrdinalGroup: 1,
  columnCount: 1,
  columns: 1,
  flex: 1,
  flexGrow: 1,
  flexPositive: 1,
  flexShrink: 1,
  flexNegative: 1,
  flexOrder: 1,
  gridRow: 1,
  gridRowEnd: 1,
  gridRowSpan: 1,
  gridRowStart: 1,
  gridColumn: 1,
  gridColumnEnd: 1,
  gridColumnSpan: 1,
  gridColumnStart: 1,
  msGridRow: 1,
  msGridRowSpan: 1,
  msGridColumn: 1,
  msGridColumnSpan: 1,
  fontWeight: 1,
  lineHeight: 1,
  opacity: 1,
  order: 1,
  orphans: 1,
  scale: 1,
  tabSize: 1,
  widows: 1,
  zIndex: 1,
  zoom: 1,
  WebkitLineClamp: 1,
  // SVG-related properties
  fillOpacity: 1,
  floodOpacity: 1,
  stopOpacity: 1,
  strokeDasharray: 1,
  strokeDashoffset: 1,
  strokeMiterlimit: 1,
  strokeOpacity: 1,
  strokeWidth: 1
}, wW = /[A-Z]|^ms/g, xW = /_EMO_([^_]+?)_([^]*?)_EMO_/g, E$ = function(t) {
  return t.charCodeAt(1) === 45;
}, PL = function(t) {
  return t != null && typeof t != "boolean";
}, hO = /* @__PURE__ */ b$(function(e) {
  return E$(e) ? e : e.replace(wW, "-$&").toLowerCase();
}), ML = function(t, n) {
  switch (t) {
    case "animation":
    case "animationName":
      if (typeof n == "string")
        return n.replace(xW, function(i, s, u) {
          return $u = {
            name: s,
            styles: u,
            next: $u
          }, s;
        });
  }
  return SW[t] !== 1 && !E$(t) && typeof n == "number" && n !== 0 ? n + "px" : n;
};
function oC(e, t, n) {
  if (n == null)
    return "";
  var i = n;
  if (i.__emotion_styles !== void 0)
    return i;
  switch (typeof n) {
    case "boolean":
      return "";
    case "object": {
      var s = n;
      if (s.anim === 1)
        return $u = {
          name: s.name,
          styles: s.styles,
          next: $u
        }, s.name;
      var u = n;
      if (u.styles !== void 0) {
        var d = u.next;
        if (d !== void 0)
          for (; d !== void 0; )
            $u = {
              name: d.name,
              styles: d.styles,
              next: $u
            }, d = d.next;
        var p = u.styles + ";";
        return p;
      }
      return EW(e, t, n);
    }
    case "function": {
      if (e !== void 0) {
        var m = $u, v = n(e);
        return $u = m, oC(e, t, v);
      }
      break;
    }
  }
  var y = n;
  if (t == null)
    return y;
  var C = t[y];
  return C !== void 0 ? C : y;
}
function EW(e, t, n) {
  var i = "";
  if (Array.isArray(n))
    for (var s = 0; s < n.length; s++)
      i += oC(e, t, n[s]) + ";";
  else
    for (var u in n) {
      var d = n[u];
      if (typeof d != "object") {
        var p = d;
        t != null && t[p] !== void 0 ? i += u + "{" + t[p] + "}" : PL(p) && (i += hO(u) + ":" + ML(u, p) + ";");
      } else if (Array.isArray(d) && typeof d[0] == "string" && (t == null || t[d[0]] === void 0))
        for (var m = 0; m < d.length; m++)
          PL(d[m]) && (i += hO(u) + ":" + ML(u, d[m]) + ";");
      else {
        var v = oC(e, t, d);
        switch (u) {
          case "animation":
          case "animationName": {
            i += hO(u) + ":" + v + ";";
            break;
          }
          default:
            i += u + "{" + v + "}";
        }
      }
    }
  return i;
}
var IL = /label:\s*([^\s;{]+)\s*(;|$)/g, $u;
function RC(e, t, n) {
  if (e.length === 1 && typeof e[0] == "object" && e[0] !== null && e[0].styles !== void 0)
    return e[0];
  var i = !0, s = "";
  $u = void 0;
  var u = e[0];
  if (u == null || u.raw === void 0)
    i = !1, s += oC(n, t, u);
  else {
    var d = u;
    s += d[0];
  }
  for (var p = 1; p < e.length; p++)
    if (s += oC(n, t, e[p]), i) {
      var m = u;
      s += m[p];
    }
  IL.lastIndex = 0;
  for (var v = "", y; (y = IL.exec(s)) !== null; )
    v += "-" + y[1];
  var C = CW(s) + v;
  return {
    name: C,
    styles: s,
    next: $u
  };
}
var TW = function(t) {
  return t();
}, T$ = w0.useInsertionEffect ? w0.useInsertionEffect : !1, R$ = T$ || TW, DL = T$ || w.useLayoutEffect, O$ = /* @__PURE__ */ w.createContext(
  // we're doing this to avoid preconstruct's dead code elimination in this one case
  // because this module is primarily intended for the browser and node
  // but it's also required in react native and similar environments sometimes
  // and we could have a special build just for that
  // but this is much easier and the native packages
  // might use a different theme context in the future anyway
  typeof HTMLElement < "u" ? /* @__PURE__ */ pW({
    key: "css"
  }) : null
);
O$.Provider;
var uP = function(t) {
  return /* @__PURE__ */ w.forwardRef(function(n, i) {
    var s = w.useContext(O$);
    return t(n, s, i);
  });
}, OC = /* @__PURE__ */ w.createContext({}), cP = {}.hasOwnProperty, uk = "__EMOTION_TYPE_PLEASE_DO_NOT_USE__", RW = function(t, n) {
  var i = {};
  for (var s in n)
    cP.call(n, s) && (i[s] = n[s]);
  return i[uk] = t, i;
}, OW = function(t) {
  var n = t.cache, i = t.serialized, s = t.isStringTag;
  return sP(n, i, s), R$(function() {
    return lP(n, i, s);
  }), null;
}, kW = /* @__PURE__ */ uP(function(e, t, n) {
  var i = e.css;
  typeof i == "string" && t.registered[i] !== void 0 && (i = t.registered[i]);
  var s = e[uk], u = [i], d = "";
  typeof e.className == "string" ? d = x$(t.registered, u, e.className) : e.className != null && (d = e.className + " ");
  var p = RC(u, void 0, w.useContext(OC));
  d += t.key + "-" + p.name;
  var m = {};
  for (var v in e)
    cP.call(e, v) && v !== "css" && v !== uk && (m[v] = e[v]);
  return m.className = d, n && (m.ref = n), /* @__PURE__ */ w.createElement(w.Fragment, null, /* @__PURE__ */ w.createElement(OW, {
    cache: t,
    serialized: p,
    isStringTag: typeof s == "string"
  }), /* @__PURE__ */ w.createElement(s, m));
}), PW = kW, NL = function(t, n) {
  var i = arguments;
  if (n == null || !cP.call(n, "css"))
    return w.createElement.apply(void 0, i);
  var s = i.length, u = new Array(s);
  u[0] = PW, u[1] = RW(t, n);
  for (var d = 2; d < s; d++)
    u[d] = i[d];
  return w.createElement.apply(null, u);
};
(function(e) {
  var t;
  t || (t = e.JSX || (e.JSX = {}));
})(NL || (NL = {}));
var MW = /* @__PURE__ */ uP(function(e, t) {
  var n = e.styles, i = RC([n], void 0, w.useContext(OC)), s = w.useRef();
  return DL(function() {
    var u = t.key + "-global", d = new t.sheet.constructor({
      key: u,
      nonce: t.sheet.nonce,
      container: t.sheet.container,
      speedy: t.sheet.isSpeedy
    }), p = !1, m = document.querySelector('style[data-emotion="' + u + " " + i.name + '"]');
    return t.sheet.tags.length && (d.before = t.sheet.tags[0]), m !== null && (p = !0, m.setAttribute("data-emotion", u), d.hydrate([m])), s.current = [d, p], function() {
      d.flush();
    };
  }, [t]), DL(function() {
    var u = s.current, d = u[0], p = u[1];
    if (p) {
      u[1] = !1;
      return;
    }
    if (i.next !== void 0 && lP(t, i.next, !0), d.tags.length) {
      var m = d.tags[d.tags.length - 1].nextElementSibling;
      d.before = m, d.flush();
    }
    t.insert("", i, d, !1);
  }, [t, i.name]), null;
});
function xf() {
  for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
    t[n] = arguments[n];
  return RC(t);
}
function Xu() {
  var e = xf.apply(void 0, arguments), t = "animation-" + e.name;
  return {
    name: t,
    styles: "@keyframes " + t + "{" + e.styles + "}",
    anim: 1,
    toString: function() {
      return "_EMO_" + this.name + "_" + this.styles + "_EMO_";
    }
  };
}
var IW = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|disableRemotePlayback|download|draggable|encType|enterKeyHint|fetchpriority|fetchPriority|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|popover|popoverTarget|popoverTargetAction|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/, DW = /* @__PURE__ */ b$(
  function(e) {
    return IW.test(e) || e.charCodeAt(0) === 111 && e.charCodeAt(1) === 110 && e.charCodeAt(2) < 91;
  }
  /* Z+1 */
), NW = DW, LW = function(t) {
  return t !== "theme";
}, LL = function(t) {
  return typeof t == "string" && // 96 is one less than the char code
  // for "a" so this is checking that
  // it's a lowercase character
  t.charCodeAt(0) > 96 ? NW : LW;
}, FL = function(t, n, i) {
  var s;
  if (n) {
    var u = n.shouldForwardProp;
    s = t.__emotion_forwardProp && u ? function(d) {
      return t.__emotion_forwardProp(d) && u(d);
    } : u;
  }
  return typeof s != "function" && i && (s = t.__emotion_forwardProp), s;
}, FW = function(t) {
  var n = t.cache, i = t.serialized, s = t.isStringTag;
  return sP(n, i, s), R$(function() {
    return lP(n, i, s);
  }), null;
}, _W = function e(t, n) {
  var i = t.__emotion_real === t, s = i && t.__emotion_base || t, u, d;
  n !== void 0 && (u = n.label, d = n.target);
  var p = FL(t, n, i), m = p || LL(s), v = !m("as");
  return function() {
    var y = arguments, C = i && t.__emotion_styles !== void 0 ? t.__emotion_styles.slice(0) : [];
    if (u !== void 0 && C.push("label:" + u + ";"), y[0] == null || y[0].raw === void 0)
      C.push.apply(C, y);
    else {
      var S = y[0];
      C.push(S[0]);
      for (var R = y.length, O = 1; O < R; O++)
        C.push(y[O], S[O]);
    }
    var E = uP(function(k, F, _) {
      var L = v && k.as || s, M = "", D = [], H = k;
      if (k.theme == null) {
        H = {};
        for (var K in k)
          H[K] = k[K];
        H.theme = w.useContext(OC);
      }
      typeof k.className == "string" ? M = x$(F.registered, D, k.className) : k.className != null && (M = k.className + " ");
      var Q = RC(C.concat(D), F.registered, H);
      M += F.key + "-" + Q.name, d !== void 0 && (M += " " + d);
      var z = v && p === void 0 ? LL(L) : m, I = {};
      for (var G in k)
        v && G === "as" || z(G) && (I[G] = k[G]);
      return I.className = M, _ && (I.ref = _), /* @__PURE__ */ w.createElement(w.Fragment, null, /* @__PURE__ */ w.createElement(FW, {
        cache: F,
        serialized: Q,
        isStringTag: typeof L == "string"
      }), /* @__PURE__ */ w.createElement(L, I));
    });
    return E.displayName = u !== void 0 ? u : "Styled(" + (typeof s == "string" ? s : s.displayName || s.name || "Component") + ")", E.defaultProps = t.defaultProps, E.__emotion_real = E, E.__emotion_base = s, E.__emotion_styles = C, E.__emotion_forwardProp = p, Object.defineProperty(E, "toString", {
      value: function() {
        return "." + d;
      }
    }), E.withComponent = function(k, F) {
      var _ = e(k, J({}, n, F, {
        shouldForwardProp: FL(E, F, !0)
      }));
      return _.apply(void 0, C);
    }, E;
  };
}, AW = [
  "a",
  "abbr",
  "address",
  "area",
  "article",
  "aside",
  "audio",
  "b",
  "base",
  "bdi",
  "bdo",
  "big",
  "blockquote",
  "body",
  "br",
  "button",
  "canvas",
  "caption",
  "cite",
  "code",
  "col",
  "colgroup",
  "data",
  "datalist",
  "dd",
  "del",
  "details",
  "dfn",
  "dialog",
  "div",
  "dl",
  "dt",
  "em",
  "embed",
  "fieldset",
  "figcaption",
  "figure",
  "footer",
  "form",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "head",
  "header",
  "hgroup",
  "hr",
  "html",
  "i",
  "iframe",
  "img",
  "input",
  "ins",
  "kbd",
  "keygen",
  "label",
  "legend",
  "li",
  "link",
  "main",
  "map",
  "mark",
  "marquee",
  "menu",
  "menuitem",
  "meta",
  "meter",
  "nav",
  "noscript",
  "object",
  "ol",
  "optgroup",
  "option",
  "output",
  "p",
  "param",
  "picture",
  "pre",
  "progress",
  "q",
  "rp",
  "rt",
  "ruby",
  "s",
  "samp",
  "script",
  "section",
  "select",
  "small",
  "source",
  "span",
  "strong",
  "style",
  "sub",
  "summary",
  "sup",
  "table",
  "tbody",
  "td",
  "textarea",
  "tfoot",
  "th",
  "thead",
  "time",
  "title",
  "tr",
  "track",
  "u",
  "ul",
  "var",
  "video",
  "wbr",
  // SVG
  "circle",
  "clipPath",
  "defs",
  "ellipse",
  "foreignObject",
  "g",
  "image",
  "line",
  "linearGradient",
  "mask",
  "path",
  "pattern",
  "polygon",
  "polyline",
  "radialGradient",
  "rect",
  "stop",
  "svg",
  "text",
  "tspan"
], ck = _W.bind(null);
AW.forEach(function(e) {
  ck[e] = ck(e);
});
var dk = { exports: {} }, Kx = { exports: {} }, Mr = {};
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var _L;
function $W() {
  if (_L) return Mr;
  _L = 1;
  var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, n = e ? Symbol.for("react.portal") : 60106, i = e ? Symbol.for("react.fragment") : 60107, s = e ? Symbol.for("react.strict_mode") : 60108, u = e ? Symbol.for("react.profiler") : 60114, d = e ? Symbol.for("react.provider") : 60109, p = e ? Symbol.for("react.context") : 60110, m = e ? Symbol.for("react.async_mode") : 60111, v = e ? Symbol.for("react.concurrent_mode") : 60111, y = e ? Symbol.for("react.forward_ref") : 60112, C = e ? Symbol.for("react.suspense") : 60113, S = e ? Symbol.for("react.suspense_list") : 60120, R = e ? Symbol.for("react.memo") : 60115, O = e ? Symbol.for("react.lazy") : 60116, E = e ? Symbol.for("react.block") : 60121, k = e ? Symbol.for("react.fundamental") : 60117, F = e ? Symbol.for("react.responder") : 60118, _ = e ? Symbol.for("react.scope") : 60119;
  function L(D) {
    if (typeof D == "object" && D !== null) {
      var H = D.$$typeof;
      switch (H) {
        case t:
          switch (D = D.type, D) {
            case m:
            case v:
            case i:
            case u:
            case s:
            case C:
              return D;
            default:
              switch (D = D && D.$$typeof, D) {
                case p:
                case y:
                case O:
                case R:
                case d:
                  return D;
                default:
                  return H;
              }
          }
        case n:
          return H;
      }
    }
  }
  function M(D) {
    return L(D) === v;
  }
  return Mr.AsyncMode = m, Mr.ConcurrentMode = v, Mr.ContextConsumer = p, Mr.ContextProvider = d, Mr.Element = t, Mr.ForwardRef = y, Mr.Fragment = i, Mr.Lazy = O, Mr.Memo = R, Mr.Portal = n, Mr.Profiler = u, Mr.StrictMode = s, Mr.Suspense = C, Mr.isAsyncMode = function(D) {
    return M(D) || L(D) === m;
  }, Mr.isConcurrentMode = M, Mr.isContextConsumer = function(D) {
    return L(D) === p;
  }, Mr.isContextProvider = function(D) {
    return L(D) === d;
  }, Mr.isElement = function(D) {
    return typeof D == "object" && D !== null && D.$$typeof === t;
  }, Mr.isForwardRef = function(D) {
    return L(D) === y;
  }, Mr.isFragment = function(D) {
    return L(D) === i;
  }, Mr.isLazy = function(D) {
    return L(D) === O;
  }, Mr.isMemo = function(D) {
    return L(D) === R;
  }, Mr.isPortal = function(D) {
    return L(D) === n;
  }, Mr.isProfiler = function(D) {
    return L(D) === u;
  }, Mr.isStrictMode = function(D) {
    return L(D) === s;
  }, Mr.isSuspense = function(D) {
    return L(D) === C;
  }, Mr.isValidElementType = function(D) {
    return typeof D == "string" || typeof D == "function" || D === i || D === v || D === u || D === s || D === C || D === S || typeof D == "object" && D !== null && (D.$$typeof === O || D.$$typeof === R || D.$$typeof === d || D.$$typeof === p || D.$$typeof === y || D.$$typeof === k || D.$$typeof === F || D.$$typeof === _ || D.$$typeof === E);
  }, Mr.typeOf = L, Mr;
}
var Ir = {};
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var AL;
function jW() {
  return AL || (AL = 1, process.env.NODE_ENV !== "production" && function() {
    var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, n = e ? Symbol.for("react.portal") : 60106, i = e ? Symbol.for("react.fragment") : 60107, s = e ? Symbol.for("react.strict_mode") : 60108, u = e ? Symbol.for("react.profiler") : 60114, d = e ? Symbol.for("react.provider") : 60109, p = e ? Symbol.for("react.context") : 60110, m = e ? Symbol.for("react.async_mode") : 60111, v = e ? Symbol.for("react.concurrent_mode") : 60111, y = e ? Symbol.for("react.forward_ref") : 60112, C = e ? Symbol.for("react.suspense") : 60113, S = e ? Symbol.for("react.suspense_list") : 60120, R = e ? Symbol.for("react.memo") : 60115, O = e ? Symbol.for("react.lazy") : 60116, E = e ? Symbol.for("react.block") : 60121, k = e ? Symbol.for("react.fundamental") : 60117, F = e ? Symbol.for("react.responder") : 60118, _ = e ? Symbol.for("react.scope") : 60119;
    function L(ue) {
      return typeof ue == "string" || typeof ue == "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
      ue === i || ue === v || ue === u || ue === s || ue === C || ue === S || typeof ue == "object" && ue !== null && (ue.$$typeof === O || ue.$$typeof === R || ue.$$typeof === d || ue.$$typeof === p || ue.$$typeof === y || ue.$$typeof === k || ue.$$typeof === F || ue.$$typeof === _ || ue.$$typeof === E);
    }
    function M(ue) {
      if (typeof ue == "object" && ue !== null) {
        var we = ue.$$typeof;
        switch (we) {
          case t:
            var _e = ue.type;
            switch (_e) {
              case m:
              case v:
              case i:
              case u:
              case s:
              case C:
                return _e;
              default:
                var He = _e && _e.$$typeof;
                switch (He) {
                  case p:
                  case y:
                  case O:
                  case R:
                  case d:
                    return He;
                  default:
                    return we;
                }
            }
          case n:
            return we;
        }
      }
    }
    var D = m, H = v, K = p, Q = d, z = t, I = y, G = i, W = O, B = R, ee = n, U = u, q = s, Y = C, ne = !1;
    function re(ue) {
      return ne || (ne = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.")), X(ue) || M(ue) === m;
    }
    function X(ue) {
      return M(ue) === v;
    }
    function j(ue) {
      return M(ue) === p;
    }
    function ie(ue) {
      return M(ue) === d;
    }
    function fe(ue) {
      return typeof ue == "object" && ue !== null && ue.$$typeof === t;
    }
    function ce(ue) {
      return M(ue) === y;
    }
    function me(ue) {
      return M(ue) === i;
    }
    function ge(ue) {
      return M(ue) === O;
    }
    function de(ue) {
      return M(ue) === R;
    }
    function pe(ue) {
      return M(ue) === n;
    }
    function be(ue) {
      return M(ue) === u;
    }
    function Ce(ue) {
      return M(ue) === s;
    }
    function Re(ue) {
      return M(ue) === C;
    }
    Ir.AsyncMode = D, Ir.ConcurrentMode = H, Ir.ContextConsumer = K, Ir.ContextProvider = Q, Ir.Element = z, Ir.ForwardRef = I, Ir.Fragment = G, Ir.Lazy = W, Ir.Memo = B, Ir.Portal = ee, Ir.Profiler = U, Ir.StrictMode = q, Ir.Suspense = Y, Ir.isAsyncMode = re, Ir.isConcurrentMode = X, Ir.isContextConsumer = j, Ir.isContextProvider = ie, Ir.isElement = fe, Ir.isForwardRef = ce, Ir.isFragment = me, Ir.isLazy = ge, Ir.isMemo = de, Ir.isPortal = pe, Ir.isProfiler = be, Ir.isStrictMode = Ce, Ir.isSuspense = Re, Ir.isValidElementType = L, Ir.typeOf = M;
  }()), Ir;
}
var $L;
function k$() {
  return $L || ($L = 1, process.env.NODE_ENV === "production" ? Kx.exports = $W() : Kx.exports = jW()), Kx.exports;
}
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
var mO, jL;
function zW() {
  if (jL) return mO;
  jL = 1;
  var e = Object.getOwnPropertySymbols, t = Object.prototype.hasOwnProperty, n = Object.prototype.propertyIsEnumerable;
  function i(u) {
    if (u == null)
      throw new TypeError("Object.assign cannot be called with null or undefined");
    return Object(u);
  }
  function s() {
    try {
      if (!Object.assign)
        return !1;
      var u = new String("abc");
      if (u[5] = "de", Object.getOwnPropertyNames(u)[0] === "5")
        return !1;
      for (var d = {}, p = 0; p < 10; p++)
        d["_" + String.fromCharCode(p)] = p;
      var m = Object.getOwnPropertyNames(d).map(function(y) {
        return d[y];
      });
      if (m.join("") !== "0123456789")
        return !1;
      var v = {};
      return "abcdefghijklmnopqrst".split("").forEach(function(y) {
        v[y] = y;
      }), Object.keys(Object.assign({}, v)).join("") === "abcdefghijklmnopqrst";
    } catch {
      return !1;
    }
  }
  return mO = s() ? Object.assign : function(u, d) {
    for (var p, m = i(u), v, y = 1; y < arguments.length; y++) {
      p = Object(arguments[y]);
      for (var C in p)
        t.call(p, C) && (m[C] = p[C]);
      if (e) {
        v = e(p);
        for (var S = 0; S < v.length; S++)
          n.call(p, v[S]) && (m[v[S]] = p[v[S]]);
      }
    }
    return m;
  }, mO;
}
var gO, zL;
function dP() {
  if (zL) return gO;
  zL = 1;
  var e = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
  return gO = e, gO;
}
var vO, HL;
function P$() {
  return HL || (HL = 1, vO = Function.call.bind(Object.prototype.hasOwnProperty)), vO;
}
var yO, VL;
function HW() {
  if (VL) return yO;
  VL = 1;
  var e = function() {
  };
  if (process.env.NODE_ENV !== "production") {
    var t = dP(), n = {}, i = P$();
    e = function(u) {
      var d = "Warning: " + u;
      typeof console < "u" && console.error(d);
      try {
        throw new Error(d);
      } catch {
      }
    };
  }
  function s(u, d, p, m, v) {
    if (process.env.NODE_ENV !== "production") {
      for (var y in u)
        if (i(u, y)) {
          var C;
          try {
            if (typeof u[y] != "function") {
              var S = Error(
                (m || "React class") + ": " + p + " type `" + y + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof u[y] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`."
              );
              throw S.name = "Invariant Violation", S;
            }
            C = u[y](d, y, m, p, null, t);
          } catch (O) {
            C = O;
          }
          if (C && !(C instanceof Error) && e(
            (m || "React class") + ": type specification of " + p + " `" + y + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof C + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."
          ), C instanceof Error && !(C.message in n)) {
            n[C.message] = !0;
            var R = v ? v() : "";
            e(
              "Failed " + p + " type: " + C.message + (R ?? "")
            );
          }
        }
    }
  }
  return s.resetWarningCache = function() {
    process.env.NODE_ENV !== "production" && (n = {});
  }, yO = s, yO;
}
var bO, BL;
function VW() {
  if (BL) return bO;
  BL = 1;
  var e = k$(), t = zW(), n = dP(), i = P$(), s = HW(), u = function() {
  };
  process.env.NODE_ENV !== "production" && (u = function(p) {
    var m = "Warning: " + p;
    typeof console < "u" && console.error(m);
    try {
      throw new Error(m);
    } catch {
    }
  });
  function d() {
    return null;
  }
  return bO = function(p, m) {
    var v = typeof Symbol == "function" && Symbol.iterator, y = "@@iterator";
    function C(X) {
      var j = X && (v && X[v] || X[y]);
      if (typeof j == "function")
        return j;
    }
    var S = "<<anonymous>>", R = {
      array: F("array"),
      bigint: F("bigint"),
      bool: F("boolean"),
      func: F("function"),
      number: F("number"),
      object: F("object"),
      string: F("string"),
      symbol: F("symbol"),
      any: _(),
      arrayOf: L,
      element: M(),
      elementType: D(),
      instanceOf: H,
      node: I(),
      objectOf: Q,
      oneOf: K,
      oneOfType: z,
      shape: W,
      exact: B
    };
    function O(X, j) {
      return X === j ? X !== 0 || 1 / X === 1 / j : X !== X && j !== j;
    }
    function E(X, j) {
      this.message = X, this.data = j && typeof j == "object" ? j : {}, this.stack = "";
    }
    E.prototype = Error.prototype;
    function k(X) {
      if (process.env.NODE_ENV !== "production")
        var j = {}, ie = 0;
      function fe(me, ge, de, pe, be, Ce, Re) {
        if (pe = pe || S, Ce = Ce || de, Re !== n) {
          if (m) {
            var ue = new Error(
              "Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types"
            );
            throw ue.name = "Invariant Violation", ue;
          } else if (process.env.NODE_ENV !== "production" && typeof console < "u") {
            var we = pe + ":" + de;
            !j[we] && // Avoid spamming the console because they are often not actionable except for lib authors
            ie < 3 && (u(
              "You are manually calling a React.PropTypes validation function for the `" + Ce + "` prop on `" + pe + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."
            ), j[we] = !0, ie++);
          }
        }
        return ge[de] == null ? me ? ge[de] === null ? new E("The " + be + " `" + Ce + "` is marked as required " + ("in `" + pe + "`, but its value is `null`.")) : new E("The " + be + " `" + Ce + "` is marked as required in " + ("`" + pe + "`, but its value is `undefined`.")) : null : X(ge, de, pe, be, Ce);
      }
      var ce = fe.bind(null, !1);
      return ce.isRequired = fe.bind(null, !0), ce;
    }
    function F(X) {
      function j(ie, fe, ce, me, ge, de) {
        var pe = ie[fe], be = q(pe);
        if (be !== X) {
          var Ce = Y(pe);
          return new E(
            "Invalid " + me + " `" + ge + "` of type " + ("`" + Ce + "` supplied to `" + ce + "`, expected ") + ("`" + X + "`."),
            { expectedType: X }
          );
        }
        return null;
      }
      return k(j);
    }
    function _() {
      return k(d);
    }
    function L(X) {
      function j(ie, fe, ce, me, ge) {
        if (typeof X != "function")
          return new E("Property `" + ge + "` of component `" + ce + "` has invalid PropType notation inside arrayOf.");
        var de = ie[fe];
        if (!Array.isArray(de)) {
          var pe = q(de);
          return new E("Invalid " + me + " `" + ge + "` of type " + ("`" + pe + "` supplied to `" + ce + "`, expected an array."));
        }
        for (var be = 0; be < de.length; be++) {
          var Ce = X(de, be, ce, me, ge + "[" + be + "]", n);
          if (Ce instanceof Error)
            return Ce;
        }
        return null;
      }
      return k(j);
    }
    function M() {
      function X(j, ie, fe, ce, me) {
        var ge = j[ie];
        if (!p(ge)) {
          var de = q(ge);
          return new E("Invalid " + ce + " `" + me + "` of type " + ("`" + de + "` supplied to `" + fe + "`, expected a single ReactElement."));
        }
        return null;
      }
      return k(X);
    }
    function D() {
      function X(j, ie, fe, ce, me) {
        var ge = j[ie];
        if (!e.isValidElementType(ge)) {
          var de = q(ge);
          return new E("Invalid " + ce + " `" + me + "` of type " + ("`" + de + "` supplied to `" + fe + "`, expected a single ReactElement type."));
        }
        return null;
      }
      return k(X);
    }
    function H(X) {
      function j(ie, fe, ce, me, ge) {
        if (!(ie[fe] instanceof X)) {
          var de = X.name || S, pe = re(ie[fe]);
          return new E("Invalid " + me + " `" + ge + "` of type " + ("`" + pe + "` supplied to `" + ce + "`, expected ") + ("instance of `" + de + "`."));
        }
        return null;
      }
      return k(j);
    }
    function K(X) {
      if (!Array.isArray(X))
        return process.env.NODE_ENV !== "production" && (arguments.length > 1 ? u(
          "Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z])."
        ) : u("Invalid argument supplied to oneOf, expected an array.")), d;
      function j(ie, fe, ce, me, ge) {
        for (var de = ie[fe], pe = 0; pe < X.length; pe++)
          if (O(de, X[pe]))
            return null;
        var be = JSON.stringify(X, function(Re, ue) {
          var we = Y(ue);
          return we === "symbol" ? String(ue) : ue;
        });
        return new E("Invalid " + me + " `" + ge + "` of value `" + String(de) + "` " + ("supplied to `" + ce + "`, expected one of " + be + "."));
      }
      return k(j);
    }
    function Q(X) {
      function j(ie, fe, ce, me, ge) {
        if (typeof X != "function")
          return new E("Property `" + ge + "` of component `" + ce + "` has invalid PropType notation inside objectOf.");
        var de = ie[fe], pe = q(de);
        if (pe !== "object")
          return new E("Invalid " + me + " `" + ge + "` of type " + ("`" + pe + "` supplied to `" + ce + "`, expected an object."));
        for (var be in de)
          if (i(de, be)) {
            var Ce = X(de, be, ce, me, ge + "." + be, n);
            if (Ce instanceof Error)
              return Ce;
          }
        return null;
      }
      return k(j);
    }
    function z(X) {
      if (!Array.isArray(X))
        return process.env.NODE_ENV !== "production" && u("Invalid argument supplied to oneOfType, expected an instance of array."), d;
      for (var j = 0; j < X.length; j++) {
        var ie = X[j];
        if (typeof ie != "function")
          return u(
            "Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + ne(ie) + " at index " + j + "."
          ), d;
      }
      function fe(ce, me, ge, de, pe) {
        for (var be = [], Ce = 0; Ce < X.length; Ce++) {
          var Re = X[Ce], ue = Re(ce, me, ge, de, pe, n);
          if (ue == null)
            return null;
          ue.data && i(ue.data, "expectedType") && be.push(ue.data.expectedType);
        }
        var we = be.length > 0 ? ", expected one of type [" + be.join(", ") + "]" : "";
        return new E("Invalid " + de + " `" + pe + "` supplied to " + ("`" + ge + "`" + we + "."));
      }
      return k(fe);
    }
    function I() {
      function X(j, ie, fe, ce, me) {
        return ee(j[ie]) ? null : new E("Invalid " + ce + " `" + me + "` supplied to " + ("`" + fe + "`, expected a ReactNode."));
      }
      return k(X);
    }
    function G(X, j, ie, fe, ce) {
      return new E(
        (X || "React class") + ": " + j + " type `" + ie + "." + fe + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + ce + "`."
      );
    }
    function W(X) {
      function j(ie, fe, ce, me, ge) {
        var de = ie[fe], pe = q(de);
        if (pe !== "object")
          return new E("Invalid " + me + " `" + ge + "` of type `" + pe + "` " + ("supplied to `" + ce + "`, expected `object`."));
        for (var be in X) {
          var Ce = X[be];
          if (typeof Ce != "function")
            return G(ce, me, ge, be, Y(Ce));
          var Re = Ce(de, be, ce, me, ge + "." + be, n);
          if (Re)
            return Re;
        }
        return null;
      }
      return k(j);
    }
    function B(X) {
      function j(ie, fe, ce, me, ge) {
        var de = ie[fe], pe = q(de);
        if (pe !== "object")
          return new E("Invalid " + me + " `" + ge + "` of type `" + pe + "` " + ("supplied to `" + ce + "`, expected `object`."));
        var be = t({}, ie[fe], X);
        for (var Ce in be) {
          var Re = X[Ce];
          if (i(X, Ce) && typeof Re != "function")
            return G(ce, me, ge, Ce, Y(Re));
          if (!Re)
            return new E(
              "Invalid " + me + " `" + ge + "` key `" + Ce + "` supplied to `" + ce + "`.\nBad object: " + JSON.stringify(ie[fe], null, "  ") + `
Valid keys: ` + JSON.stringify(Object.keys(X), null, "  ")
            );
          var ue = Re(de, Ce, ce, me, ge + "." + Ce, n);
          if (ue)
            return ue;
        }
        return null;
      }
      return k(j);
    }
    function ee(X) {
      switch (typeof X) {
        case "number":
        case "string":
        case "undefined":
          return !0;
        case "boolean":
          return !X;
        case "object":
          if (Array.isArray(X))
            return X.every(ee);
          if (X === null || p(X))
            return !0;
          var j = C(X);
          if (j) {
            var ie = j.call(X), fe;
            if (j !== X.entries) {
              for (; !(fe = ie.next()).done; )
                if (!ee(fe.value))
                  return !1;
            } else
              for (; !(fe = ie.next()).done; ) {
                var ce = fe.value;
                if (ce && !ee(ce[1]))
                  return !1;
              }
          } else
            return !1;
          return !0;
        default:
          return !1;
      }
    }
    function U(X, j) {
      return X === "symbol" ? !0 : j ? j["@@toStringTag"] === "Symbol" || typeof Symbol == "function" && j instanceof Symbol : !1;
    }
    function q(X) {
      var j = typeof X;
      return Array.isArray(X) ? "array" : X instanceof RegExp ? "object" : U(j, X) ? "symbol" : j;
    }
    function Y(X) {
      if (typeof X > "u" || X === null)
        return "" + X;
      var j = q(X);
      if (j === "object") {
        if (X instanceof Date)
          return "date";
        if (X instanceof RegExp)
          return "regexp";
      }
      return j;
    }
    function ne(X) {
      var j = Y(X);
      switch (j) {
        case "array":
        case "object":
          return "an " + j;
        case "boolean":
        case "date":
        case "regexp":
          return "a " + j;
        default:
          return j;
      }
    }
    function re(X) {
      return !X.constructor || !X.constructor.name ? S : X.constructor.name;
    }
    return R.checkPropTypes = s, R.resetWarningCache = s.resetWarningCache, R.PropTypes = R, R;
  }, bO;
}
var CO, UL;
function BW() {
  if (UL) return CO;
  UL = 1;
  var e = dP();
  function t() {
  }
  function n() {
  }
  return n.resetWarningCache = t, CO = function() {
    function i(d, p, m, v, y, C) {
      if (C !== e) {
        var S = new Error(
          "Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types"
        );
        throw S.name = "Invariant Violation", S;
      }
    }
    i.isRequired = i;
    function s() {
      return i;
    }
    var u = {
      array: i,
      bigint: i,
      bool: i,
      func: i,
      number: i,
      object: i,
      string: i,
      symbol: i,
      any: i,
      arrayOf: s,
      element: i,
      elementType: i,
      instanceOf: s,
      node: i,
      objectOf: s,
      oneOf: s,
      oneOfType: s,
      shape: s,
      exact: s,
      checkPropTypes: n,
      resetWarningCache: t
    };
    return u.PropTypes = u, u;
  }, CO;
}
if (process.env.NODE_ENV !== "production") {
  var UW = k$(), GW = !0;
  dk.exports = VW()(UW.isElement, GW);
} else
  dk.exports = BW()();
var WW = dk.exports;
const a = /* @__PURE__ */ nP(WW);
function qW(e) {
  return e == null || Object.keys(e).length === 0;
}
function fP(e) {
  const {
    styles: t,
    defaultTheme: n = {}
  } = e, i = typeof t == "function" ? (s) => t(qW(s) ? n : s) : t;
  return /* @__PURE__ */ A.jsx(MW, {
    styles: i
  });
}
process.env.NODE_ENV !== "production" && (fP.propTypes = {
  defaultTheme: a.object,
  styles: a.oneOfType([a.array, a.string, a.object, a.func])
});
/**
 * @mui/styled-engine v6.5.0
 *
 * @license MIT
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function M$(e, t) {
  const n = ck(e, t);
  return process.env.NODE_ENV !== "production" ? (...i) => {
    const s = typeof e == "string" ? `"${e}"` : "component";
    return i.length === 0 ? console.error([`MUI: Seems like you called \`styled(${s})()\` without a \`style\` argument.`, 'You must provide a `styles` argument: `styled("div")(styleYouForgotToPass)`.'].join(`
`)) : i.some((u) => u === void 0) && console.error(`MUI: the styled(${s})(...args) API requires all its args to be defined.`), n(...i);
  } : n;
}
function KW(e, t) {
  Array.isArray(e.__emotion_styles) && (e.__emotion_styles = t(e.__emotion_styles));
}
const GL = [];
function pf(e) {
  return GL[0] = e, RC(GL);
}
var fk = { exports: {} }, zr = {};
/**
 * @license React
 * react-is.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var WL;
function YW() {
  if (WL) return zr;
  WL = 1;
  var e = Symbol.for("react.transitional.element"), t = Symbol.for("react.portal"), n = Symbol.for("react.fragment"), i = Symbol.for("react.strict_mode"), s = Symbol.for("react.profiler"), u = Symbol.for("react.consumer"), d = Symbol.for("react.context"), p = Symbol.for("react.forward_ref"), m = Symbol.for("react.suspense"), v = Symbol.for("react.suspense_list"), y = Symbol.for("react.memo"), C = Symbol.for("react.lazy"), S = Symbol.for("react.view_transition"), R = Symbol.for("react.client.reference");
  function O(E) {
    if (typeof E == "object" && E !== null) {
      var k = E.$$typeof;
      switch (k) {
        case e:
          switch (E = E.type, E) {
            case n:
            case s:
            case i:
            case m:
            case v:
            case S:
              return E;
            default:
              switch (E = E && E.$$typeof, E) {
                case d:
                case p:
                case C:
                case y:
                  return E;
                case u:
                  return E;
                default:
                  return k;
              }
          }
        case t:
          return k;
      }
    }
  }
  return zr.ContextConsumer = u, zr.ContextProvider = d, zr.Element = e, zr.ForwardRef = p, zr.Fragment = n, zr.Lazy = C, zr.Memo = y, zr.Portal = t, zr.Profiler = s, zr.StrictMode = i, zr.Suspense = m, zr.SuspenseList = v, zr.isContextConsumer = function(E) {
    return O(E) === u;
  }, zr.isContextProvider = function(E) {
    return O(E) === d;
  }, zr.isElement = function(E) {
    return typeof E == "object" && E !== null && E.$$typeof === e;
  }, zr.isForwardRef = function(E) {
    return O(E) === p;
  }, zr.isFragment = function(E) {
    return O(E) === n;
  }, zr.isLazy = function(E) {
    return O(E) === C;
  }, zr.isMemo = function(E) {
    return O(E) === y;
  }, zr.isPortal = function(E) {
    return O(E) === t;
  }, zr.isProfiler = function(E) {
    return O(E) === s;
  }, zr.isStrictMode = function(E) {
    return O(E) === i;
  }, zr.isSuspense = function(E) {
    return O(E) === m;
  }, zr.isSuspenseList = function(E) {
    return O(E) === v;
  }, zr.isValidElementType = function(E) {
    return typeof E == "string" || typeof E == "function" || E === n || E === s || E === i || E === m || E === v || typeof E == "object" && E !== null && (E.$$typeof === C || E.$$typeof === y || E.$$typeof === d || E.$$typeof === u || E.$$typeof === p || E.$$typeof === R || E.getModuleId !== void 0);
  }, zr.typeOf = O, zr;
}
var Hr = {};
/**
 * @license React
 * react-is.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var qL;
function XW() {
  return qL || (qL = 1, process.env.NODE_ENV !== "production" && function() {
    function e(E) {
      if (typeof E == "object" && E !== null) {
        var k = E.$$typeof;
        switch (k) {
          case t:
            switch (E = E.type, E) {
              case i:
              case u:
              case s:
              case v:
              case y:
              case R:
                return E;
              default:
                switch (E = E && E.$$typeof, E) {
                  case p:
                  case m:
                  case S:
                  case C:
                    return E;
                  case d:
                    return E;
                  default:
                    return k;
                }
            }
          case n:
            return k;
        }
      }
    }
    var t = Symbol.for("react.transitional.element"), n = Symbol.for("react.portal"), i = Symbol.for("react.fragment"), s = Symbol.for("react.strict_mode"), u = Symbol.for("react.profiler"), d = Symbol.for("react.consumer"), p = Symbol.for("react.context"), m = Symbol.for("react.forward_ref"), v = Symbol.for("react.suspense"), y = Symbol.for("react.suspense_list"), C = Symbol.for("react.memo"), S = Symbol.for("react.lazy"), R = Symbol.for("react.view_transition"), O = Symbol.for("react.client.reference");
    Hr.ContextConsumer = d, Hr.ContextProvider = p, Hr.Element = t, Hr.ForwardRef = m, Hr.Fragment = i, Hr.Lazy = S, Hr.Memo = C, Hr.Portal = n, Hr.Profiler = u, Hr.StrictMode = s, Hr.Suspense = v, Hr.SuspenseList = y, Hr.isContextConsumer = function(E) {
      return e(E) === d;
    }, Hr.isContextProvider = function(E) {
      return e(E) === p;
    }, Hr.isElement = function(E) {
      return typeof E == "object" && E !== null && E.$$typeof === t;
    }, Hr.isForwardRef = function(E) {
      return e(E) === m;
    }, Hr.isFragment = function(E) {
      return e(E) === i;
    }, Hr.isLazy = function(E) {
      return e(E) === S;
    }, Hr.isMemo = function(E) {
      return e(E) === C;
    }, Hr.isPortal = function(E) {
      return e(E) === n;
    }, Hr.isProfiler = function(E) {
      return e(E) === u;
    }, Hr.isStrictMode = function(E) {
      return e(E) === s;
    }, Hr.isSuspense = function(E) {
      return e(E) === v;
    }, Hr.isSuspenseList = function(E) {
      return e(E) === y;
    }, Hr.isValidElementType = function(E) {
      return typeof E == "string" || typeof E == "function" || E === i || E === u || E === s || E === v || E === y || typeof E == "object" && E !== null && (E.$$typeof === S || E.$$typeof === C || E.$$typeof === p || E.$$typeof === d || E.$$typeof === m || E.$$typeof === O || E.getModuleId !== void 0);
    }, Hr.typeOf = e;
  }()), Hr;
}
process.env.NODE_ENV === "production" ? fk.exports = YW() : fk.exports = XW();
var vf = fk.exports;
function ju(e) {
  if (typeof e != "object" || e === null)
    return !1;
  const t = Object.getPrototypeOf(e);
  return (t === null || t === Object.prototype || Object.getPrototypeOf(t) === null) && !(Symbol.toStringTag in e) && !(Symbol.iterator in e);
}
function I$(e) {
  if (/* @__PURE__ */ w.isValidElement(e) || vf.isValidElementType(e) || !ju(e))
    return e;
  const t = {};
  return Object.keys(e).forEach((n) => {
    t[n] = I$(e[n]);
  }), t;
}
function Ci(e, t, n = {
  clone: !0
}) {
  const i = n.clone ? {
    ...e
  } : e;
  return ju(e) && ju(t) && Object.keys(t).forEach((s) => {
    /* @__PURE__ */ w.isValidElement(t[s]) || vf.isValidElementType(t[s]) ? i[s] = t[s] : ju(t[s]) && // Avoid prototype pollution
    Object.prototype.hasOwnProperty.call(e, s) && ju(e[s]) ? i[s] = Ci(e[s], t[s], n) : n.clone ? i[s] = ju(t[s]) ? I$(t[s]) : t[s] : i[s] = t[s];
  }), i;
}
const QW = (e) => {
  const t = Object.keys(e).map((n) => ({
    key: n,
    val: e[n]
  })) || [];
  return t.sort((n, i) => n.val - i.val), t.reduce((n, i) => ({
    ...n,
    [i.key]: i.val
  }), {});
};
function JW(e) {
  const {
    // The breakpoint **start** at this value.
    // For instance with the first breakpoint xs: [xs, sm).
    values: t = {
      xs: 0,
      // phone
      sm: 600,
      // tablet
      md: 900,
      // small laptop
      lg: 1200,
      // desktop
      xl: 1536
      // large screen
    },
    unit: n = "px",
    step: i = 5,
    ...s
  } = e, u = QW(t), d = Object.keys(u);
  function p(S) {
    return `@media (min-width:${typeof t[S] == "number" ? t[S] : S}${n})`;
  }
  function m(S) {
    return `@media (max-width:${(typeof t[S] == "number" ? t[S] : S) - i / 100}${n})`;
  }
  function v(S, R) {
    const O = d.indexOf(R);
    return `@media (min-width:${typeof t[S] == "number" ? t[S] : S}${n}) and (max-width:${(O !== -1 && typeof t[d[O]] == "number" ? t[d[O]] : R) - i / 100}${n})`;
  }
  function y(S) {
    return d.indexOf(S) + 1 < d.length ? v(S, d[d.indexOf(S) + 1]) : p(S);
  }
  function C(S) {
    const R = d.indexOf(S);
    return R === 0 ? p(d[1]) : R === d.length - 1 ? m(d[R]) : v(S, d[d.indexOf(S) + 1]).replace("@media", "@media not all and");
  }
  return {
    keys: d,
    values: u,
    up: p,
    down: m,
    between: v,
    only: y,
    not: C,
    unit: n,
    ...s
  };
}
function KL(e, t) {
  if (!e.containerQueries)
    return t;
  const n = Object.keys(t).filter((i) => i.startsWith("@container")).sort((i, s) => {
    var d, p;
    const u = /min-width:\s*([0-9.]+)/;
    return +(((d = i.match(u)) == null ? void 0 : d[1]) || 0) - +(((p = s.match(u)) == null ? void 0 : p[1]) || 0);
  });
  return n.length ? n.reduce((i, s) => {
    const u = t[s];
    return delete i[s], i[s] = u, i;
  }, {
    ...t
  }) : t;
}
function ZW(e, t) {
  return t === "@" || t.startsWith("@") && (e.some((n) => t.startsWith(`@${n}`)) || !!t.match(/^@\d/));
}
function e6(e, t) {
  const n = t.match(/^@([^/]+)?\/?(.+)?$/);
  if (!n) {
    if (process.env.NODE_ENV !== "production")
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The provided shorthand ${`(${t})`} is invalid. The format should be \`@<breakpoint | number>\` or \`@<breakpoint | number>/<container>\`.
For example, \`@sm\` or \`@600\` or \`@40rem/sidebar\`.` : Gu(18, `(${t})`));
    return null;
  }
  const [, i, s] = n, u = Number.isNaN(+i) ? i || 0 : +i;
  return e.containerQueries(s).up(u);
}
function t6(e) {
  const t = (u, d) => u.replace("@media", d ? `@container ${d}` : "@container");
  function n(u, d) {
    u.up = (...p) => t(e.breakpoints.up(...p), d), u.down = (...p) => t(e.breakpoints.down(...p), d), u.between = (...p) => t(e.breakpoints.between(...p), d), u.only = (...p) => t(e.breakpoints.only(...p), d), u.not = (...p) => {
      const m = t(e.breakpoints.not(...p), d);
      return m.includes("not all and") ? m.replace("not all and ", "").replace("min-width:", "width<").replace("max-width:", "width>").replace("and", "or") : m;
    };
  }
  const i = {}, s = (u) => (n(i, u), i);
  return n(s), {
    ...e,
    containerQueries: s
  };
}
const n6 = {
  borderRadius: 4
}, Ef = process.env.NODE_ENV !== "production" ? a.oneOfType([a.number, a.string, a.object, a.array]) : {};
function Wb(e, t) {
  return t ? Ci(e, t, {
    clone: !1
    // No need to clone deep, it's way faster.
  }) : e;
}
const cE = {
  xs: 0,
  // phone
  sm: 600,
  // tablet
  md: 900,
  // small laptop
  lg: 1200,
  // desktop
  xl: 1536
  // large screen
}, YL = {
  // Sorted ASC by size. That's important.
  // It can't be configured as it's used statically for propTypes.
  keys: ["xs", "sm", "md", "lg", "xl"],
  up: (e) => `@media (min-width:${cE[e]}px)`
}, r6 = {
  containerQueries: (e) => ({
    up: (t) => {
      let n = typeof t == "number" ? t : cE[t] || t;
      return typeof n == "number" && (n = `${n}px`), e ? `@container ${e} (min-width:${n})` : `@container (min-width:${n})`;
    }
  })
};
function Ul(e, t, n) {
  const i = e.theme || {};
  if (Array.isArray(t)) {
    const u = i.breakpoints || YL;
    return t.reduce((d, p, m) => (d[u.up(u.keys[m])] = n(t[m]), d), {});
  }
  if (typeof t == "object") {
    const u = i.breakpoints || YL;
    return Object.keys(t).reduce((d, p) => {
      if (ZW(u.keys, p)) {
        const m = e6(i.containerQueries ? i : r6, p);
        m && (d[m] = n(t[p], p));
      } else if (Object.keys(u.values || cE).includes(p)) {
        const m = u.up(p);
        d[m] = n(t[p], p);
      } else {
        const m = p;
        d[m] = t[m];
      }
      return d;
    }, {});
  }
  return n(t);
}
function D$(e = {}) {
  var n;
  return ((n = e.keys) == null ? void 0 : n.reduce((i, s) => {
    const u = e.up(s);
    return i[u] = {}, i;
  }, {})) || {};
}
function pk(e, t) {
  return e.reduce((n, i) => {
    const s = n[i];
    return (!s || Object.keys(s).length === 0) && delete n[i], n;
  }, t);
}
function o6(e, ...t) {
  const n = D$(e), i = [n, ...t].reduce((s, u) => Ci(s, u), {});
  return pk(Object.keys(n), i);
}
function i6(e, t) {
  if (typeof e != "object")
    return {};
  const n = {}, i = Object.keys(t);
  return Array.isArray(e) ? i.forEach((s, u) => {
    u < e.length && (n[s] = !0);
  }) : i.forEach((s) => {
    e[s] != null && (n[s] = !0);
  }), n;
}
function SO({
  values: e,
  breakpoints: t,
  base: n
}) {
  const i = n || i6(e, t), s = Object.keys(i);
  if (s.length === 0)
    return e;
  let u;
  return s.reduce((d, p, m) => (Array.isArray(e) ? (d[p] = e[m] != null ? e[m] : e[u], u = m) : typeof e == "object" ? (d[p] = e[p] != null ? e[p] : e[u], u = p) : d[p] = e, d), {});
}
function Ue(e) {
  if (typeof e != "string")
    throw new Error(process.env.NODE_ENV !== "production" ? "MUI: `capitalize(string)` expects a string argument." : Gu(7));
  return e.charAt(0).toUpperCase() + e.slice(1);
}
function dE(e, t, n = !0) {
  if (!t || typeof t != "string")
    return null;
  if (e && e.vars && n) {
    const i = `vars.${t}`.split(".").reduce((s, u) => s && s[u] ? s[u] : null, e);
    if (i != null)
      return i;
  }
  return t.split(".").reduce((i, s) => i && i[s] != null ? i[s] : null, e);
}
function R0(e, t, n, i = n) {
  let s;
  return typeof e == "function" ? s = e(n) : Array.isArray(e) ? s = e[n] || i : s = dE(e, n) || i, t && (s = t(s, i, e)), s;
}
function $o(e) {
  const {
    prop: t,
    cssProperty: n = e.prop,
    themeKey: i,
    transform: s
  } = e, u = (d) => {
    if (d[t] == null)
      return null;
    const p = d[t], m = d.theme, v = dE(m, i) || {};
    return Ul(d, p, (C) => {
      let S = R0(v, s, C);
      return C === S && typeof C == "string" && (S = R0(v, s, `${t}${C === "default" ? "" : Ue(C)}`, C)), n === !1 ? S : {
        [n]: S
      };
    });
  };
  return u.propTypes = process.env.NODE_ENV !== "production" ? {
    [t]: Ef
  } : {}, u.filterProps = [t], u;
}
function a6(e) {
  const t = {};
  return (n) => (t[n] === void 0 && (t[n] = e(n)), t[n]);
}
const s6 = {
  m: "margin",
  p: "padding"
}, l6 = {
  t: "Top",
  r: "Right",
  b: "Bottom",
  l: "Left",
  x: ["Left", "Right"],
  y: ["Top", "Bottom"]
}, XL = {
  marginX: "mx",
  marginY: "my",
  paddingX: "px",
  paddingY: "py"
}, u6 = a6((e) => {
  if (e.length > 2)
    if (XL[e])
      e = XL[e];
    else
      return [e];
  const [t, n] = e.split(""), i = s6[t], s = l6[n] || "";
  return Array.isArray(s) ? s.map((u) => i + u) : [i + s];
}), fE = ["m", "mt", "mr", "mb", "ml", "mx", "my", "margin", "marginTop", "marginRight", "marginBottom", "marginLeft", "marginX", "marginY", "marginInline", "marginInlineStart", "marginInlineEnd", "marginBlock", "marginBlockStart", "marginBlockEnd"], pE = ["p", "pt", "pr", "pb", "pl", "px", "py", "padding", "paddingTop", "paddingRight", "paddingBottom", "paddingLeft", "paddingX", "paddingY", "paddingInline", "paddingInlineStart", "paddingInlineEnd", "paddingBlock", "paddingBlockStart", "paddingBlockEnd"], c6 = [...fE, ...pE];
function kC(e, t, n, i) {
  const s = dE(e, t, !0) ?? n;
  return typeof s == "number" || typeof s == "string" ? (u) => typeof u == "string" ? u : (process.env.NODE_ENV !== "production" && typeof u != "number" && console.error(`MUI: Expected ${i} argument to be a number or a string, got ${u}.`), typeof s == "string" ? `calc(${u} * ${s})` : s * u) : Array.isArray(s) ? (u) => {
    if (typeof u == "string")
      return u;
    const d = Math.abs(u);
    process.env.NODE_ENV !== "production" && (Number.isInteger(d) ? d > s.length - 1 && console.error([`MUI: The value provided (${d}) overflows.`, `The supported values are: ${JSON.stringify(s)}.`, `${d} > ${s.length - 1}, you need to add the missing values.`].join(`
`)) : console.error([`MUI: The \`theme.${t}\` array type cannot be combined with non integer values.You should either use an integer value that can be used as index, or define the \`theme.${t}\` as a number.`].join(`
`)));
    const p = s[d];
    return u >= 0 ? p : typeof p == "number" ? -p : `-${p}`;
  } : typeof s == "function" ? s : (process.env.NODE_ENV !== "production" && console.error([`MUI: The \`theme.${t}\` value (${s}) is invalid.`, "It should be a number, an array or a function."].join(`
`)), () => {
  });
}
function hE(e) {
  return kC(e, "spacing", 8, "spacing");
}
function fh(e, t) {
  return typeof t == "string" || t == null ? t : e(t);
}
function d6(e, t) {
  return (n) => e.reduce((i, s) => (i[s] = fh(t, n), i), {});
}
function f6(e, t, n, i) {
  if (!t.includes(n))
    return null;
  const s = u6(n), u = d6(s, i), d = e[n];
  return Ul(e, d, u);
}
function N$(e, t) {
  const n = hE(e.theme);
  return Object.keys(e).map((i) => f6(e, t, i, n)).reduce(Wb, {});
}
function To(e) {
  return N$(e, fE);
}
To.propTypes = process.env.NODE_ENV !== "production" ? fE.reduce((e, t) => (e[t] = Ef, e), {}) : {};
To.filterProps = fE;
function Ro(e) {
  return N$(e, pE);
}
Ro.propTypes = process.env.NODE_ENV !== "production" ? pE.reduce((e, t) => (e[t] = Ef, e), {}) : {};
Ro.filterProps = pE;
process.env.NODE_ENV !== "production" && c6.reduce((e, t) => (e[t] = Ef, e), {});
function L$(e = 8, t = hE({
  spacing: e
})) {
  if (e.mui)
    return e;
  const n = (...i) => (process.env.NODE_ENV !== "production" && (i.length <= 4 || console.error(`MUI: Too many arguments provided, expected between 0 and 4, got ${i.length}`)), (i.length === 0 ? [1] : i).map((u) => {
    const d = t(u);
    return typeof d == "number" ? `${d}px` : d;
  }).join(" "));
  return n.mui = !0, n;
}
function mE(...e) {
  const t = e.reduce((i, s) => (s.filterProps.forEach((u) => {
    i[u] = s;
  }), i), {}), n = (i) => Object.keys(i).reduce((s, u) => t[u] ? Wb(s, t[u](i)) : s, {});
  return n.propTypes = process.env.NODE_ENV !== "production" ? e.reduce((i, s) => Object.assign(i, s.propTypes), {}) : {}, n.filterProps = e.reduce((i, s) => i.concat(s.filterProps), []), n;
}
function Xs(e) {
  return typeof e != "number" ? e : `${e}px solid`;
}
function al(e, t) {
  return $o({
    prop: e,
    themeKey: "borders",
    transform: t
  });
}
const p6 = al("border", Xs), h6 = al("borderTop", Xs), m6 = al("borderRight", Xs), g6 = al("borderBottom", Xs), v6 = al("borderLeft", Xs), y6 = al("borderColor"), b6 = al("borderTopColor"), C6 = al("borderRightColor"), S6 = al("borderBottomColor"), w6 = al("borderLeftColor"), x6 = al("outline", Xs), E6 = al("outlineColor"), gE = (e) => {
  if (e.borderRadius !== void 0 && e.borderRadius !== null) {
    const t = kC(e.theme, "shape.borderRadius", 4, "borderRadius"), n = (i) => ({
      borderRadius: fh(t, i)
    });
    return Ul(e, e.borderRadius, n);
  }
  return null;
};
gE.propTypes = process.env.NODE_ENV !== "production" ? {
  borderRadius: Ef
} : {};
gE.filterProps = ["borderRadius"];
mE(p6, h6, m6, g6, v6, y6, b6, C6, S6, w6, gE, x6, E6);
const vE = (e) => {
  if (e.gap !== void 0 && e.gap !== null) {
    const t = kC(e.theme, "spacing", 8, "gap"), n = (i) => ({
      gap: fh(t, i)
    });
    return Ul(e, e.gap, n);
  }
  return null;
};
vE.propTypes = process.env.NODE_ENV !== "production" ? {
  gap: Ef
} : {};
vE.filterProps = ["gap"];
const yE = (e) => {
  if (e.columnGap !== void 0 && e.columnGap !== null) {
    const t = kC(e.theme, "spacing", 8, "columnGap"), n = (i) => ({
      columnGap: fh(t, i)
    });
    return Ul(e, e.columnGap, n);
  }
  return null;
};
yE.propTypes = process.env.NODE_ENV !== "production" ? {
  columnGap: Ef
} : {};
yE.filterProps = ["columnGap"];
const bE = (e) => {
  if (e.rowGap !== void 0 && e.rowGap !== null) {
    const t = kC(e.theme, "spacing", 8, "rowGap"), n = (i) => ({
      rowGap: fh(t, i)
    });
    return Ul(e, e.rowGap, n);
  }
  return null;
};
bE.propTypes = process.env.NODE_ENV !== "production" ? {
  rowGap: Ef
} : {};
bE.filterProps = ["rowGap"];
const T6 = $o({
  prop: "gridColumn"
}), R6 = $o({
  prop: "gridRow"
}), O6 = $o({
  prop: "gridAutoFlow"
}), k6 = $o({
  prop: "gridAutoColumns"
}), P6 = $o({
  prop: "gridAutoRows"
}), M6 = $o({
  prop: "gridTemplateColumns"
}), I6 = $o({
  prop: "gridTemplateRows"
}), D6 = $o({
  prop: "gridTemplateAreas"
}), N6 = $o({
  prop: "gridArea"
});
mE(vE, yE, bE, T6, R6, O6, k6, P6, M6, I6, D6, N6);
function Ig(e, t) {
  return t === "grey" ? t : e;
}
const L6 = $o({
  prop: "color",
  themeKey: "palette",
  transform: Ig
}), F6 = $o({
  prop: "bgcolor",
  cssProperty: "backgroundColor",
  themeKey: "palette",
  transform: Ig
}), _6 = $o({
  prop: "backgroundColor",
  themeKey: "palette",
  transform: Ig
});
mE(L6, F6, _6);
function fs(e) {
  return e <= 1 && e !== 0 ? `${e * 100}%` : e;
}
const A6 = $o({
  prop: "width",
  transform: fs
}), pP = (e) => {
  if (e.maxWidth !== void 0 && e.maxWidth !== null) {
    const t = (n) => {
      var s, u, d, p, m;
      const i = ((d = (u = (s = e.theme) == null ? void 0 : s.breakpoints) == null ? void 0 : u.values) == null ? void 0 : d[n]) || cE[n];
      return i ? ((m = (p = e.theme) == null ? void 0 : p.breakpoints) == null ? void 0 : m.unit) !== "px" ? {
        maxWidth: `${i}${e.theme.breakpoints.unit}`
      } : {
        maxWidth: i
      } : {
        maxWidth: fs(n)
      };
    };
    return Ul(e, e.maxWidth, t);
  }
  return null;
};
pP.filterProps = ["maxWidth"];
const $6 = $o({
  prop: "minWidth",
  transform: fs
}), j6 = $o({
  prop: "height",
  transform: fs
}), z6 = $o({
  prop: "maxHeight",
  transform: fs
}), H6 = $o({
  prop: "minHeight",
  transform: fs
});
$o({
  prop: "size",
  cssProperty: "width",
  transform: fs
});
$o({
  prop: "size",
  cssProperty: "height",
  transform: fs
});
const V6 = $o({
  prop: "boxSizing"
});
mE(A6, pP, $6, j6, z6, H6, V6);
const PC = {
  // borders
  border: {
    themeKey: "borders",
    transform: Xs
  },
  borderTop: {
    themeKey: "borders",
    transform: Xs
  },
  borderRight: {
    themeKey: "borders",
    transform: Xs
  },
  borderBottom: {
    themeKey: "borders",
    transform: Xs
  },
  borderLeft: {
    themeKey: "borders",
    transform: Xs
  },
  borderColor: {
    themeKey: "palette"
  },
  borderTopColor: {
    themeKey: "palette"
  },
  borderRightColor: {
    themeKey: "palette"
  },
  borderBottomColor: {
    themeKey: "palette"
  },
  borderLeftColor: {
    themeKey: "palette"
  },
  outline: {
    themeKey: "borders",
    transform: Xs
  },
  outlineColor: {
    themeKey: "palette"
  },
  borderRadius: {
    themeKey: "shape.borderRadius",
    style: gE
  },
  // palette
  color: {
    themeKey: "palette",
    transform: Ig
  },
  bgcolor: {
    themeKey: "palette",
    cssProperty: "backgroundColor",
    transform: Ig
  },
  backgroundColor: {
    themeKey: "palette",
    transform: Ig
  },
  // spacing
  p: {
    style: Ro
  },
  pt: {
    style: Ro
  },
  pr: {
    style: Ro
  },
  pb: {
    style: Ro
  },
  pl: {
    style: Ro
  },
  px: {
    style: Ro
  },
  py: {
    style: Ro
  },
  padding: {
    style: Ro
  },
  paddingTop: {
    style: Ro
  },
  paddingRight: {
    style: Ro
  },
  paddingBottom: {
    style: Ro
  },
  paddingLeft: {
    style: Ro
  },
  paddingX: {
    style: Ro
  },
  paddingY: {
    style: Ro
  },
  paddingInline: {
    style: Ro
  },
  paddingInlineStart: {
    style: Ro
  },
  paddingInlineEnd: {
    style: Ro
  },
  paddingBlock: {
    style: Ro
  },
  paddingBlockStart: {
    style: Ro
  },
  paddingBlockEnd: {
    style: Ro
  },
  m: {
    style: To
  },
  mt: {
    style: To
  },
  mr: {
    style: To
  },
  mb: {
    style: To
  },
  ml: {
    style: To
  },
  mx: {
    style: To
  },
  my: {
    style: To
  },
  margin: {
    style: To
  },
  marginTop: {
    style: To
  },
  marginRight: {
    style: To
  },
  marginBottom: {
    style: To
  },
  marginLeft: {
    style: To
  },
  marginX: {
    style: To
  },
  marginY: {
    style: To
  },
  marginInline: {
    style: To
  },
  marginInlineStart: {
    style: To
  },
  marginInlineEnd: {
    style: To
  },
  marginBlock: {
    style: To
  },
  marginBlockStart: {
    style: To
  },
  marginBlockEnd: {
    style: To
  },
  // display
  displayPrint: {
    cssProperty: !1,
    transform: (e) => ({
      "@media print": {
        display: e
      }
    })
  },
  display: {},
  overflow: {},
  textOverflow: {},
  visibility: {},
  whiteSpace: {},
  // flexbox
  flexBasis: {},
  flexDirection: {},
  flexWrap: {},
  justifyContent: {},
  alignItems: {},
  alignContent: {},
  order: {},
  flex: {},
  flexGrow: {},
  flexShrink: {},
  alignSelf: {},
  justifyItems: {},
  justifySelf: {},
  // grid
  gap: {
    style: vE
  },
  rowGap: {
    style: bE
  },
  columnGap: {
    style: yE
  },
  gridColumn: {},
  gridRow: {},
  gridAutoFlow: {},
  gridAutoColumns: {},
  gridAutoRows: {},
  gridTemplateColumns: {},
  gridTemplateRows: {},
  gridTemplateAreas: {},
  gridArea: {},
  // positions
  position: {},
  zIndex: {
    themeKey: "zIndex"
  },
  top: {},
  right: {},
  bottom: {},
  left: {},
  // shadows
  boxShadow: {
    themeKey: "shadows"
  },
  // sizing
  width: {
    transform: fs
  },
  maxWidth: {
    style: pP
  },
  minWidth: {
    transform: fs
  },
  height: {
    transform: fs
  },
  maxHeight: {
    transform: fs
  },
  minHeight: {
    transform: fs
  },
  boxSizing: {},
  // typography
  font: {
    themeKey: "font"
  },
  fontFamily: {
    themeKey: "typography"
  },
  fontSize: {
    themeKey: "typography"
  },
  fontStyle: {
    themeKey: "typography"
  },
  fontWeight: {
    themeKey: "typography"
  },
  letterSpacing: {},
  textTransform: {},
  lineHeight: {},
  textAlign: {},
  typography: {
    cssProperty: !1,
    themeKey: "typography"
  }
};
function B6(...e) {
  const t = e.reduce((i, s) => i.concat(Object.keys(s)), []), n = new Set(t);
  return e.every((i) => n.size === Object.keys(i).length);
}
function U6(e, t) {
  return typeof e == "function" ? e(t) : e;
}
function G6() {
  function e(n, i, s, u) {
    const d = {
      [n]: i,
      theme: s
    }, p = u[n];
    if (!p)
      return {
        [n]: i
      };
    const {
      cssProperty: m = n,
      themeKey: v,
      transform: y,
      style: C
    } = p;
    if (i == null)
      return null;
    if (v === "typography" && i === "inherit")
      return {
        [n]: i
      };
    const S = dE(s, v) || {};
    return C ? C(d) : Ul(d, i, (O) => {
      let E = R0(S, y, O);
      return O === E && typeof O == "string" && (E = R0(S, y, `${n}${O === "default" ? "" : Ue(O)}`, O)), m === !1 ? E : {
        [m]: E
      };
    });
  }
  function t(n) {
    const {
      sx: i,
      theme: s = {},
      nested: u
    } = n || {};
    if (!i)
      return null;
    const d = s.unstable_sxConfig ?? PC;
    function p(m) {
      let v = m;
      if (typeof m == "function")
        v = m(s);
      else if (typeof m != "object")
        return m;
      if (!v)
        return null;
      const y = D$(s.breakpoints), C = Object.keys(y);
      let S = y;
      return Object.keys(v).forEach((R) => {
        const O = U6(v[R], s);
        if (O != null)
          if (typeof O == "object")
            if (d[R])
              S = Wb(S, e(R, O, s, d));
            else {
              const E = Ul({
                theme: s
              }, O, (k) => ({
                [R]: k
              }));
              B6(E, O) ? S[R] = t({
                sx: O,
                theme: s,
                nested: !0
              }) : S = Wb(S, E);
            }
          else
            S = Wb(S, e(R, O, s, d));
      }), !u && s.modularCssLayers ? {
        "@layer sx": KL(s, pk(C, S))
      } : KL(s, pk(C, S));
    }
    return Array.isArray(i) ? i.map(p) : p(i);
  }
  return t;
}
const yf = G6();
yf.filterProps = ["sx"];
function W6(e, t) {
  var i;
  const n = this;
  if (n.vars) {
    if (!((i = n.colorSchemes) != null && i[e]) || typeof n.getColorSchemeSelector != "function")
      return {};
    let s = n.getColorSchemeSelector(e);
    return s === "&" ? t : ((s.includes("data-") || s.includes(".")) && (s = `*:where(${s.replace(/\s*&$/, "")}) &`), {
      [s]: t
    });
  }
  return n.palette.mode === e ? t : {};
}
function MC(e = {}, ...t) {
  const {
    breakpoints: n = {},
    palette: i = {},
    spacing: s,
    shape: u = {},
    ...d
  } = e, p = JW(n), m = L$(s);
  let v = Ci({
    breakpoints: p,
    direction: "ltr",
    components: {},
    // Inject component definitions.
    palette: {
      mode: "light",
      ...i
    },
    spacing: m,
    shape: {
      ...n6,
      ...u
    }
  }, d);
  return v = t6(v), v.applyStyles = W6, v = t.reduce((y, C) => Ci(y, C), v), v.unstable_sxConfig = {
    ...PC,
    ...d == null ? void 0 : d.unstable_sxConfig
  }, v.unstable_sx = function(C) {
    return yf({
      sx: C,
      theme: this
    });
  }, v;
}
function q6(e) {
  return Object.keys(e).length === 0;
}
function hP(e = null) {
  const t = w.useContext(OC);
  return !t || q6(t) ? e : t;
}
const K6 = MC();
function CE(e = K6) {
  return hP(e);
}
function wO(e) {
  const t = pf(e);
  return e !== t && t.styles ? (t.styles.match(/^@layer\s+[^{]*$/) || (t.styles = `@layer global{${t.styles}}`), t) : e;
}
function mP({
  styles: e,
  themeId: t,
  defaultTheme: n = {}
}) {
  const i = CE(n), s = t && i[t] || i;
  let u = typeof e == "function" ? e(s) : e;
  return s.modularCssLayers && (Array.isArray(u) ? u = u.map((d) => wO(typeof d == "function" ? d(s) : d)) : u = wO(u)), /* @__PURE__ */ A.jsx(fP, {
    styles: u
  });
}
process.env.NODE_ENV !== "production" && (mP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  defaultTheme: a.object,
  /**
   * @ignore
   */
  styles: a.oneOfType([a.array, a.func, a.number, a.object, a.string, a.bool]),
  /**
   * @ignore
   */
  themeId: a.string
});
const Y6 = (e) => {
  var i;
  const t = {
    systemProps: {},
    otherProps: {}
  }, n = ((i = e == null ? void 0 : e.theme) == null ? void 0 : i.unstable_sxConfig) ?? PC;
  return Object.keys(e).forEach((s) => {
    n[s] ? t.systemProps[s] = e[s] : t.otherProps[s] = e[s];
  }), t;
};
function gP(e) {
  const {
    sx: t,
    ...n
  } = e, {
    systemProps: i,
    otherProps: s
  } = Y6(n);
  let u;
  return Array.isArray(t) ? u = [i, ...t] : typeof t == "function" ? u = (...d) => {
    const p = t(...d);
    return ju(p) ? {
      ...i,
      ...p
    } : i;
  } : u = {
    ...i,
    ...t
  }, {
    ...s,
    sx: u
  };
}
const QL = (e) => e, X6 = () => {
  let e = QL;
  return {
    configure(t) {
      e = t;
    },
    generate(t) {
      return e(t);
    },
    reset() {
      e = QL;
    }
  };
}, F$ = X6();
function _$(e) {
  var t, n, i = "";
  if (typeof e == "string" || typeof e == "number") i += e;
  else if (typeof e == "object") if (Array.isArray(e)) {
    var s = e.length;
    for (t = 0; t < s; t++) e[t] && (n = _$(e[t])) && (i && (i += " "), i += n);
  } else for (n in e) e[n] && (i && (i += " "), i += n);
  return i;
}
function nt() {
  for (var e, t, n = 0, i = "", s = arguments.length; n < s; n++) (e = arguments[n]) && (t = _$(e)) && (i && (i += " "), i += t);
  return i;
}
function Q6(e = {}) {
  const {
    themeId: t,
    defaultTheme: n,
    defaultClassName: i = "MuiBox-root",
    generateClassName: s
  } = e, u = M$("div", {
    shouldForwardProp: (p) => p !== "theme" && p !== "sx" && p !== "as"
  })(yf);
  return /* @__PURE__ */ w.forwardRef(function(m, v) {
    const y = CE(n), {
      className: C,
      component: S = "div",
      ...R
    } = gP(m);
    return /* @__PURE__ */ A.jsx(u, {
      as: S,
      ref: v,
      className: nt(C, s ? s(i) : i),
      theme: t && y[t] || y,
      ...R
    });
  });
}
const J6 = {
  active: "active",
  checked: "checked",
  completed: "completed",
  disabled: "disabled",
  error: "error",
  expanded: "expanded",
  focused: "focused",
  focusVisible: "focusVisible",
  open: "open",
  readOnly: "readOnly",
  required: "required",
  selected: "selected"
};
function mn(e, t, n = "Mui") {
  const i = J6[t];
  return i ? `${n}-${i}` : `${F$.generate(e)}-${t}`;
}
function bn(e, t, n = "Mui") {
  const i = {};
  return t.forEach((s) => {
    i[s] = mn(e, s, n);
  }), i;
}
function A$(e, t = "") {
  return e.displayName || e.name || t;
}
function JL(e, t, n) {
  const i = A$(t);
  return e.displayName || (i !== "" ? `${n}(${i})` : n);
}
function Z6(e) {
  if (e != null) {
    if (typeof e == "string")
      return e;
    if (typeof e == "function")
      return A$(e, "Component");
    if (typeof e == "object")
      switch (e.$$typeof) {
        case vf.ForwardRef:
          return JL(e, e.render, "ForwardRef");
        case vf.Memo:
          return JL(e, e.type, "memo");
        default:
          return;
      }
  }
}
function $$(e) {
  const {
    variants: t,
    ...n
  } = e, i = {
    variants: t,
    style: pf(n),
    isProcessed: !0
  };
  return i.style === n || t && t.forEach((s) => {
    typeof s.style != "function" && (s.style = pf(s.style));
  }), i;
}
const eq = MC();
function xO(e) {
  return e !== "ownerState" && e !== "theme" && e !== "sx" && e !== "as";
}
function Xp(e, t) {
  return t && e && typeof e == "object" && e.styles && !e.styles.startsWith("@layer") && (e.styles = `@layer ${t}{${String(e.styles)}}`), e;
}
function tq(e) {
  return e ? (t, n) => n[e] : null;
}
function nq(e, t, n) {
  e.theme = iq(e.theme) ? n : e.theme[t] || e.theme;
}
function f0(e, t, n) {
  const i = typeof t == "function" ? t(e) : t;
  if (Array.isArray(i))
    return i.flatMap((s) => f0(e, s, n));
  if (Array.isArray(i == null ? void 0 : i.variants)) {
    let s;
    if (i.isProcessed)
      s = n ? Xp(i.style, n) : i.style;
    else {
      const {
        variants: u,
        ...d
      } = i;
      s = n ? Xp(pf(d), n) : d;
    }
    return j$(e, i.variants, [s], n);
  }
  return i != null && i.isProcessed ? n ? Xp(pf(i.style), n) : i.style : n ? Xp(pf(i), n) : i;
}
function j$(e, t, n = [], i = void 0) {
  var u;
  let s;
  e: for (let d = 0; d < t.length; d += 1) {
    const p = t[d];
    if (typeof p.props == "function") {
      if (s ?? (s = {
        ...e,
        ...e.ownerState,
        ownerState: e.ownerState
      }), !p.props(s))
        continue;
    } else
      for (const m in p.props)
        if (e[m] !== p.props[m] && ((u = e.ownerState) == null ? void 0 : u[m]) !== p.props[m])
          continue e;
    typeof p.style == "function" ? (s ?? (s = {
      ...e,
      ...e.ownerState,
      ownerState: e.ownerState
    }), n.push(i ? Xp(pf(p.style(s)), i) : p.style(s))) : n.push(i ? Xp(pf(p.style), i) : p.style);
  }
  return n;
}
function z$(e = {}) {
  const {
    themeId: t,
    defaultTheme: n = eq,
    rootShouldForwardProp: i = xO,
    slotShouldForwardProp: s = xO
  } = e;
  function u(p) {
    nq(p, t, n);
  }
  return (p, m = {}) => {
    KW(p, (H) => H.filter((K) => K !== yf));
    const {
      name: v,
      slot: y,
      skipVariantsResolver: C,
      skipSx: S,
      // TODO v6: remove `lowercaseFirstLetter()` in the next major release
      // For more details: https://github.com/mui/material-ui/pull/37908
      overridesResolver: R = tq(H$(y)),
      ...O
    } = m, E = v && v.startsWith("Mui") || y ? "components" : "custom", k = C !== void 0 ? C : (
      // TODO v6: remove `Root` in the next major release
      // For more details: https://github.com/mui/material-ui/pull/37908
      y && y !== "Root" && y !== "root" || !1
    ), F = S || !1;
    let _ = xO;
    y === "Root" || y === "root" ? _ = i : y ? _ = s : aq(p) && (_ = void 0);
    const L = M$(p, {
      shouldForwardProp: _,
      label: oq(v, y),
      ...O
    }), M = (H) => {
      if (H.__emotion_real === H)
        return H;
      if (typeof H == "function")
        return function(Q) {
          return f0(Q, H, Q.theme.modularCssLayers ? E : void 0);
        };
      if (ju(H)) {
        const K = $$(H);
        return function(z) {
          return K.variants ? f0(z, K, z.theme.modularCssLayers ? E : void 0) : z.theme.modularCssLayers ? Xp(K.style, E) : K.style;
        };
      }
      return H;
    }, D = (...H) => {
      const K = [], Q = H.map(M), z = [];
      if (K.push(u), v && R && z.push(function(B) {
        var Y, ne;
        const U = (ne = (Y = B.theme.components) == null ? void 0 : Y[v]) == null ? void 0 : ne.styleOverrides;
        if (!U)
          return null;
        const q = {};
        for (const re in U)
          q[re] = f0(B, U[re], B.theme.modularCssLayers ? "theme" : void 0);
        return R(B, q);
      }), v && !k && z.push(function(B) {
        var q, Y;
        const ee = B.theme, U = (Y = (q = ee == null ? void 0 : ee.components) == null ? void 0 : q[v]) == null ? void 0 : Y.variants;
        return U ? j$(B, U, [], B.theme.modularCssLayers ? "theme" : void 0) : null;
      }), F || z.push(yf), Array.isArray(Q[0])) {
        const W = Q.shift(), B = new Array(K.length).fill(""), ee = new Array(z.length).fill("");
        let U;
        U = [...B, ...W, ...ee], U.raw = [...B, ...W.raw, ...ee], K.unshift(U);
      }
      const I = [...K, ...Q, ...z], G = L(...I);
      return p.muiName && (G.muiName = p.muiName), process.env.NODE_ENV !== "production" && (G.displayName = rq(v, y, p)), G;
    };
    return L.withConfig && (D.withConfig = L.withConfig), D;
  };
}
function rq(e, t, n) {
  return e ? `${e}${Ue(t || "")}` : `Styled(${Z6(n)})`;
}
function oq(e, t) {
  let n;
  return process.env.NODE_ENV !== "production" && e && (n = `${e}-${H$(t || "Root")}`), n;
}
function iq(e) {
  for (const t in e)
    return !1;
  return !0;
}
function aq(e) {
  return typeof e == "string" && // 96 is one less than the char code
  // for "a" so this is checking that
  // it's a lowercase character
  e.charCodeAt(0) > 96;
}
function H$(e) {
  return e && e.charAt(0).toLowerCase() + e.slice(1);
}
const Dr = z$();
function Bg(e, t) {
  const n = {
    ...t
  };
  for (const i in e)
    if (Object.prototype.hasOwnProperty.call(e, i)) {
      const s = i;
      if (s === "components" || s === "slots")
        n[s] = {
          ...e[s],
          ...n[s]
        };
      else if (s === "componentsProps" || s === "slotProps") {
        const u = e[s], d = t[s];
        if (!d)
          n[s] = u || {};
        else if (!u)
          n[s] = d;
        else {
          n[s] = {
            ...d
          };
          for (const p in u)
            if (Object.prototype.hasOwnProperty.call(u, p)) {
              const m = p;
              n[s][m] = Bg(u[m], d[m]);
            }
        }
      } else n[s] === void 0 && (n[s] = e[s]);
    }
  return n;
}
function V$(e) {
  const {
    theme: t,
    name: n,
    props: i
  } = e;
  return !t || !t.components || !t.components[n] || !t.components[n].defaultProps ? i : Bg(t.components[n].defaultProps, i);
}
function B$({
  props: e,
  name: t,
  defaultTheme: n,
  themeId: i
}) {
  let s = CE(n);
  return i && (s = s[i] || s), V$({
    theme: s,
    name: t,
    props: e
  });
}
const _r = typeof window < "u" ? w.useLayoutEffect : w.useEffect;
function sq(e, t = Number.MIN_SAFE_INTEGER, n = Number.MAX_SAFE_INTEGER) {
  return Math.max(t, Math.min(e, n));
}
function vP(e, t = 0, n = 1) {
  return process.env.NODE_ENV !== "production" && (e < t || e > n) && console.error(`MUI: The value provided ${e} is out of range [${t}, ${n}].`), sq(e, t, n);
}
function lq(e) {
  e = e.slice(1);
  const t = new RegExp(`.{1,${e.length >= 6 ? 2 : 1}}`, "g");
  let n = e.match(t);
  return n && n[0].length === 1 && (n = n.map((i) => i + i)), process.env.NODE_ENV !== "production" && e.length !== e.trim().length && console.error(`MUI: The color: "${e}" is invalid. Make sure the color input doesn't contain leading/trailing space.`), n ? `rgb${n.length === 4 ? "a" : ""}(${n.map((i, s) => s < 3 ? parseInt(i, 16) : Math.round(parseInt(i, 16) / 255 * 1e3) / 1e3).join(", ")})` : "";
}
function Wu(e) {
  if (e.type)
    return e;
  if (e.charAt(0) === "#")
    return Wu(lq(e));
  const t = e.indexOf("("), n = e.substring(0, t);
  if (!["rgb", "rgba", "hsl", "hsla", "color"].includes(n))
    throw new Error(process.env.NODE_ENV !== "production" ? `MUI: Unsupported \`${e}\` color.
The following formats are supported: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().` : Gu(9, e));
  let i = e.substring(t + 1, e.length - 1), s;
  if (n === "color") {
    if (i = i.split(" "), s = i.shift(), i.length === 4 && i[3].charAt(0) === "/" && (i[3] = i[3].slice(1)), !["srgb", "display-p3", "a98-rgb", "prophoto-rgb", "rec-2020"].includes(s))
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: unsupported \`${s}\` color space.
The following color spaces are supported: srgb, display-p3, a98-rgb, prophoto-rgb, rec-2020.` : Gu(10, s));
  } else
    i = i.split(",");
  return i = i.map((u) => parseFloat(u)), {
    type: n,
    values: i,
    colorSpace: s
  };
}
const uq = (e) => {
  const t = Wu(e);
  return t.values.slice(0, 3).map((n, i) => t.type.includes("hsl") && i !== 0 ? `${n}%` : n).join(" ");
}, $b = (e, t) => {
  try {
    return uq(e);
  } catch {
    return t && process.env.NODE_ENV !== "production" && console.warn(t), e;
  }
};
function IC(e) {
  const {
    type: t,
    colorSpace: n
  } = e;
  let {
    values: i
  } = e;
  return t.includes("rgb") ? i = i.map((s, u) => u < 3 ? parseInt(s, 10) : s) : t.includes("hsl") && (i[1] = `${i[1]}%`, i[2] = `${i[2]}%`), t.includes("color") ? i = `${n} ${i.join(" ")}` : i = `${i.join(", ")}`, `${t}(${i})`;
}
function U$(e) {
  e = Wu(e);
  const {
    values: t
  } = e, n = t[0], i = t[1] / 100, s = t[2] / 100, u = i * Math.min(s, 1 - s), d = (v, y = (v + n / 30) % 12) => s - u * Math.max(Math.min(y - 3, 9 - y, 1), -1);
  let p = "rgb";
  const m = [Math.round(d(0) * 255), Math.round(d(8) * 255), Math.round(d(4) * 255)];
  return e.type === "hsla" && (p += "a", m.push(t[3])), IC({
    type: p,
    values: m
  });
}
function hk(e) {
  e = Wu(e);
  let t = e.type === "hsl" || e.type === "hsla" ? Wu(U$(e)).values : e.values;
  return t = t.map((n) => (e.type !== "color" && (n /= 255), n <= 0.03928 ? n / 12.92 : ((n + 0.055) / 1.055) ** 2.4)), Number((0.2126 * t[0] + 0.7152 * t[1] + 0.0722 * t[2]).toFixed(3));
}
function ZL(e, t) {
  const n = hk(e), i = hk(t);
  return (Math.max(n, i) + 0.05) / (Math.min(n, i) + 0.05);
}
function $n(e, t) {
  return e = Wu(e), t = vP(t), (e.type === "rgb" || e.type === "hsl") && (e.type += "a"), e.type === "color" ? e.values[3] = `/${t}` : e.values[3] = t, IC(e);
}
function Yx(e, t, n) {
  try {
    return $n(e, t);
  } catch {
    return e;
  }
}
function bf(e, t) {
  if (e = Wu(e), t = vP(t), e.type.includes("hsl"))
    e.values[2] *= 1 - t;
  else if (e.type.includes("rgb") || e.type.includes("color"))
    for (let n = 0; n < 3; n += 1)
      e.values[n] *= 1 - t;
  return IC(e);
}
function Gr(e, t, n) {
  try {
    return bf(e, t);
  } catch {
    return e;
  }
}
function Cf(e, t) {
  if (e = Wu(e), t = vP(t), e.type.includes("hsl"))
    e.values[2] += (100 - e.values[2]) * t;
  else if (e.type.includes("rgb"))
    for (let n = 0; n < 3; n += 1)
      e.values[n] += (255 - e.values[n]) * t;
  else if (e.type.includes("color"))
    for (let n = 0; n < 3; n += 1)
      e.values[n] += (1 - e.values[n]) * t;
  return IC(e);
}
function Wr(e, t, n) {
  try {
    return Cf(e, t);
  } catch {
    return e;
  }
}
function cq(e, t = 0.15) {
  return hk(e) > 0.5 ? bf(e, t) : Cf(e, t);
}
function Xx(e, t, n) {
  try {
    return cq(e, t);
  } catch {
    return e;
  }
}
function Gl(e, t) {
  return process.env.NODE_ENV === "production" ? () => null : function(...i) {
    return e(...i) || t(...i);
  };
}
function dq(e) {
  const {
    prototype: t = {}
  } = e;
  return !!t.isReactComponent;
}
function G$(e, t, n, i, s) {
  const u = e[t], d = s || t;
  if (u == null || // When server-side rendering React doesn't warn either.
  // This is not an accurate check for SSR.
  // This is only in place for Emotion compat.
  // TODO: Revisit once https://github.com/facebook/react/issues/20047 is resolved.
  typeof window > "u")
    return null;
  let p;
  const m = u.type;
  return typeof m == "function" && !dq(m) && (p = "Did you accidentally use a plain function component for an element instead?"), p !== void 0 ? new Error(`Invalid ${i} \`${d}\` supplied to \`${n}\`. Expected an element that can hold a ref. ${p} For more information see https://mui.com/r/caveat-with-refs-guide`) : null;
}
const vh = Gl(a.element, G$);
vh.isRequired = Gl(a.element.isRequired, G$);
function fq(e) {
  const {
    prototype: t = {}
  } = e;
  return !!t.isReactComponent;
}
function pq(e, t, n, i, s) {
  const u = e[t], d = s || t;
  if (u == null || // When server-side rendering React doesn't warn either.
  // This is not an accurate check for SSR.
  // This is only in place for emotion compat.
  // TODO: Revisit once https://github.com/facebook/react/issues/20047 is resolved.
  typeof window > "u")
    return null;
  let p;
  return typeof u == "function" && !fq(u) && (p = "Did you accidentally provide a plain function component instead?"), p !== void 0 ? new Error(`Invalid ${i} \`${d}\` supplied to \`${n}\`. Expected an element type that can hold a ref. ${p} For more information see https://mui.com/r/caveat-with-refs-guide`) : null;
}
const yP = Gl(a.elementType, pq), hq = "exact-prop: ​";
function DC(e) {
  return process.env.NODE_ENV === "production" ? e : {
    ...e,
    [hq]: (t) => {
      const n = Object.keys(t).filter((i) => !e.hasOwnProperty(i));
      return n.length > 0 ? new Error(`The following props are not supported: ${n.map((i) => `\`${i}\``).join(", ")}. Please remove them.`) : null;
    }
  };
}
function Wl(e, t, n, i, s) {
  if (process.env.NODE_ENV === "production")
    return null;
  const u = e[t], d = s || t;
  return u == null ? null : u && u.nodeType !== 1 ? new Error(`Invalid ${i} \`${d}\` supplied to \`${n}\`. Expected an HTMLElement.`) : null;
}
const Ea = a.oneOfType([a.func, a.object]);
function eF(...e) {
  return e.reduce((t, n) => n == null ? t : function(...s) {
    t.apply(this, s), n.apply(this, s);
  }, () => {
  });
}
function SE(e, t = 166) {
  let n;
  function i(...s) {
    const u = () => {
      e.apply(this, s);
    };
    clearTimeout(n), n = setTimeout(u, t);
  }
  return i.clear = () => {
    clearTimeout(n);
  }, i;
}
function EO(e, t) {
  var n, i, s;
  return /* @__PURE__ */ w.isValidElement(e) && t.indexOf(
    // For server components `muiName` is avaialble in element.type._payload.value.muiName
    // relevant info - https://github.com/facebook/react/blob/2807d781a08db8e9873687fccc25c0f12b4fb3d4/packages/react/src/ReactLazy.js#L45
    // eslint-disable-next-line no-underscore-dangle
    e.type.muiName ?? ((s = (i = (n = e.type) == null ? void 0 : n._payload) == null ? void 0 : i.value) == null ? void 0 : s.muiName)
  ) !== -1;
}
function ao(e) {
  return e && e.ownerDocument || document;
}
function rl(e) {
  return ao(e).defaultView || window;
}
function mk(e, t) {
  typeof e == "function" ? e(t) : e && (e.current = t);
}
let tF = 0;
function mq(e) {
  const [t, n] = w.useState(e), i = e || t;
  return w.useEffect(() => {
    t == null && (tF += 1, n(`mui-${tF}`));
  }, [t]), i;
}
const gq = {
  ...w0
}, nF = gq.useId;
function Sr(e) {
  if (nF !== void 0) {
    const t = nF();
    return e ?? t;
  }
  return mq(e);
}
function W$(e, t, n, i, s) {
  if (process.env.NODE_ENV === "production")
    return null;
  const u = s || t;
  return typeof e[t] < "u" ? new Error(`The prop \`${u}\` is not supported. Please remove it.`) : null;
}
function ah({
  controlled: e,
  default: t,
  name: n,
  state: i = "value"
}) {
  const {
    current: s
  } = w.useRef(e !== void 0), [u, d] = w.useState(t), p = s ? e : u;
  if (process.env.NODE_ENV !== "production") {
    w.useEffect(() => {
      s !== (e !== void 0) && console.error([`MUI: A component is changing the ${s ? "" : "un"}controlled ${i} state of ${n} to be ${s ? "un" : ""}controlled.`, "Elements should not switch from uncontrolled to controlled (or vice versa).", `Decide between using a controlled or uncontrolled ${n} element for the lifetime of the component.`, "The nature of the state is determined during the first render. It's considered controlled if the value is not `undefined`.", "More info: https://fb.me/react-controlled-components"].join(`
`));
    }, [i, n, e]);
    const {
      current: v
    } = w.useRef(t);
    w.useEffect(() => {
      !s && !Object.is(v, t) && console.error([`MUI: A component is changing the default ${i} state of an uncontrolled ${n} after being initialized. To suppress this warning opt to use a controlled ${n}.`].join(`
`));
    }, [JSON.stringify(t)]);
  }
  const m = w.useCallback((v) => {
    s || d(v);
  }, []);
  return [p, m];
}
function Nn(e) {
  const t = w.useRef(e);
  return _r(() => {
    t.current = e;
  }), w.useRef((...n) => (
    // @ts-expect-error hide `this`
    (0, t.current)(...n)
  )).current;
}
function Vr(...e) {
  const t = w.useRef(void 0), n = w.useCallback((i) => {
    const s = e.map((u) => {
      if (u == null)
        return null;
      if (typeof u == "function") {
        const d = u, p = d(i);
        return typeof p == "function" ? p : () => {
          d(null);
        };
      }
      return u.current = i, () => {
        u.current = null;
      };
    });
    return () => {
      s.forEach((u) => u == null ? void 0 : u());
    };
  }, e);
  return w.useMemo(() => e.every((i) => i == null) ? null : (i) => {
    t.current && (t.current(), t.current = void 0), i != null && (t.current = n(i));
  }, e);
}
const rF = {};
function sl(e, t) {
  const n = w.useRef(rF);
  return n.current === rF && (n.current = e(t)), n;
}
const vq = [];
function bP(e) {
  w.useEffect(e, vq);
}
class wE {
  constructor() {
    Mu(this, "currentId", null);
    Mu(this, "clear", () => {
      this.currentId !== null && (clearTimeout(this.currentId), this.currentId = null);
    });
    Mu(this, "disposeEffect", () => this.clear);
  }
  static create() {
    return new wE();
  }
  /**
   * Executes `fn` after `delay`, clearing any previously scheduled call.
   */
  start(t, n) {
    this.clear(), this.currentId = setTimeout(() => {
      this.currentId = null, n();
    }, t);
  }
}
function ps() {
  const e = sl(wE.create).current;
  return bP(e.disposeEffect), e;
}
function O0(e) {
  try {
    return e.matches(":focus-visible");
  } catch {
    process.env.NODE_ENV !== "production" && !/jsdom/.test(window.navigator.userAgent) && console.warn(["MUI: The `:focus-visible` pseudo class is not supported in this browser.", "Some components rely on this feature to work properly."].join(`
`));
  }
  return !1;
}
function q$(e = window) {
  const t = e.document.documentElement.clientWidth;
  return e.innerWidth - t;
}
const CP = (e) => {
  const t = w.useRef({});
  return w.useEffect(() => {
    t.current = e;
  }), t.current;
};
function yq(e) {
  const t = typeof e;
  switch (t) {
    case "number":
      return Number.isNaN(e) ? "NaN" : Number.isFinite(e) ? e !== Math.floor(e) ? "float" : "number" : "Infinity";
    case "object":
      return e === null ? "null" : e.constructor.name;
    default:
      return t;
  }
}
function K$(e, t, n, i) {
  const s = e[t];
  if (s == null || !Number.isInteger(s)) {
    const u = yq(s);
    return new RangeError(`Invalid ${i} \`${t}\` of type \`${u}\` supplied to \`${n}\`, expected \`integer\`.`);
  }
  return null;
}
function Y$(e, t, ...n) {
  return e[t] === void 0 ? null : K$(e, t, ...n);
}
function gk() {
  return null;
}
Y$.isRequired = K$;
gk.isRequired = gk;
const Dg = process.env.NODE_ENV === "production" ? gk : Y$;
function yt(e, t, n = void 0) {
  const i = {};
  for (const s in e) {
    const u = e[s];
    let d = "", p = !0;
    for (let m = 0; m < u.length; m += 1) {
      const v = u[m];
      v && (d += (p === !0 ? "" : " ") + t(v), p = !1, n && n[v] && (d += " " + n[v]));
    }
    i[s] = d;
  }
  return i;
}
function bq(e) {
  return typeof e == "string";
}
function X$(e, t, n) {
  return e === void 0 || bq(e) ? t : {
    ...t,
    ownerState: {
      ...t.ownerState,
      ...n
    }
  };
}
function Q$(e, t = []) {
  if (e === void 0)
    return {};
  const n = {};
  return Object.keys(e).filter((i) => i.match(/^on[A-Z]/) && typeof e[i] == "function" && !t.includes(i)).forEach((i) => {
    n[i] = e[i];
  }), n;
}
function oF(e) {
  if (e === void 0)
    return {};
  const t = {};
  return Object.keys(e).filter((n) => !(n.match(/^on[A-Z]/) && typeof e[n] == "function")).forEach((n) => {
    t[n] = e[n];
  }), t;
}
function J$(e) {
  const {
    getSlotProps: t,
    additionalProps: n,
    externalSlotProps: i,
    externalForwardedProps: s,
    className: u
  } = e;
  if (!t) {
    const R = nt(n == null ? void 0 : n.className, u, s == null ? void 0 : s.className, i == null ? void 0 : i.className), O = {
      ...n == null ? void 0 : n.style,
      ...s == null ? void 0 : s.style,
      ...i == null ? void 0 : i.style
    }, E = {
      ...n,
      ...s,
      ...i
    };
    return R.length > 0 && (E.className = R), Object.keys(O).length > 0 && (E.style = O), {
      props: E,
      internalRef: void 0
    };
  }
  const d = Q$({
    ...s,
    ...i
  }), p = oF(i), m = oF(s), v = t(d), y = nt(v == null ? void 0 : v.className, n == null ? void 0 : n.className, u, s == null ? void 0 : s.className, i == null ? void 0 : i.className), C = {
    ...v == null ? void 0 : v.style,
    ...n == null ? void 0 : n.style,
    ...s == null ? void 0 : s.style,
    ...i == null ? void 0 : i.style
  }, S = {
    ...v,
    ...n,
    ...m,
    ...p
  };
  return y.length > 0 && (S.className = y), Object.keys(C).length > 0 && (S.style = C), {
    props: S,
    internalRef: v.ref
  };
}
function Z$(e, t, n) {
  return typeof e == "function" ? e(t, n) : e;
}
function Ug(e) {
  var C;
  const {
    elementType: t,
    externalSlotProps: n,
    ownerState: i,
    skipResolvingSlotProps: s = !1,
    ...u
  } = e, d = s ? {} : Z$(n, i), {
    props: p,
    internalRef: m
  } = J$({
    ...u,
    externalSlotProps: d
  }), v = Vr(m, d == null ? void 0 : d.ref, (C = e.additionalProps) == null ? void 0 : C.ref);
  return X$(t, {
    ...p,
    ref: v
  }, i);
}
function yh(e) {
  var t;
  return parseInt(w.version, 10) >= 19 ? ((t = e == null ? void 0 : e.props) == null ? void 0 : t.ref) || null : (e == null ? void 0 : e.ref) || null;
}
const SP = /* @__PURE__ */ w.createContext(null);
process.env.NODE_ENV !== "production" && (SP.displayName = "ThemeContext");
function wP() {
  const e = w.useContext(SP);
  return process.env.NODE_ENV !== "production" && w.useDebugValue(e), e;
}
const Cq = typeof Symbol == "function" && Symbol.for, Sq = Cq ? Symbol.for("mui.nested") : "__THEME_NESTED__";
function wq(e, t) {
  if (typeof t == "function") {
    const n = t(e);
    return process.env.NODE_ENV !== "production" && (n || console.error(["MUI: You should return an object from your theme function, i.e.", "<ThemeProvider theme={() => ({})} />"].join(`
`))), n;
  }
  return {
    ...e,
    ...t
  };
}
function k0(e) {
  const {
    children: t,
    theme: n
  } = e, i = wP();
  process.env.NODE_ENV !== "production" && i === null && typeof n == "function" && console.error(["MUI: You are providing a theme function prop to the ThemeProvider component:", "<ThemeProvider theme={outerTheme => outerTheme} />", "", "However, no outer theme is present.", "Make sure a theme is already injected higher in the React tree or provide a theme object."].join(`
`));
  const s = w.useMemo(() => {
    const u = i === null ? {
      ...n
    } : wq(i, n);
    return u != null && (u[Sq] = i !== null), u;
  }, [n, i]);
  return /* @__PURE__ */ A.jsx(SP.Provider, {
    value: s,
    children: t
  });
}
process.env.NODE_ENV !== "production" && (k0.propTypes = {
  /**
   * Your component tree.
   */
  children: a.node,
  /**
   * A theme object. You can provide a function to extend the outer theme.
   */
  theme: a.oneOfType([a.object, a.func]).isRequired
});
process.env.NODE_ENV !== "production" && process.env.NODE_ENV !== "production" && (k0.propTypes = DC(k0.propTypes));
const ej = /* @__PURE__ */ w.createContext();
function tj({
  value: e,
  ...t
}) {
  return /* @__PURE__ */ A.jsx(ej.Provider, {
    value: e ?? !0,
    ...t
  });
}
process.env.NODE_ENV !== "production" && (tj.propTypes = {
  children: a.node,
  value: a.bool
});
const zi = () => w.useContext(ej) ?? !1, nj = /* @__PURE__ */ w.createContext(void 0);
function rj({
  value: e,
  children: t
}) {
  return /* @__PURE__ */ A.jsx(nj.Provider, {
    value: e,
    children: t
  });
}
process.env.NODE_ENV !== "production" && (rj.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  children: a.node,
  /**
   * @ignore
   */
  value: a.object
});
function xq(e) {
  const {
    theme: t,
    name: n,
    props: i
  } = e;
  if (!t || !t.components || !t.components[n])
    return i;
  const s = t.components[n];
  return s.defaultProps ? Bg(s.defaultProps, i) : !s.styleOverrides && !s.variants ? Bg(s, i) : i;
}
function Eq({
  props: e,
  name: t
}) {
  const n = w.useContext(nj);
  return xq({
    props: e,
    name: t,
    theme: {
      components: n
    }
  });
}
function Tq(e) {
  const t = hP(), n = Sr() || "", {
    modularCssLayers: i
  } = e;
  let s = "mui.global, mui.components, mui.theme, mui.custom, mui.sx";
  return !i || t !== null ? s = "" : typeof i == "string" ? s = i.replace(/mui(?!\.)/g, s) : s = `@layer ${s};`, _r(() => {
    var p, m;
    const u = document.querySelector("head");
    if (!u)
      return;
    const d = u.firstChild;
    if (s) {
      if (d && ((p = d.hasAttribute) != null && p.call(d, "data-mui-layer-order")) && d.getAttribute("data-mui-layer-order") === n)
        return;
      const v = document.createElement("style");
      v.setAttribute("data-mui-layer-order", n), v.textContent = s, u.prepend(v);
    } else
      (m = u.querySelector(`style[data-mui-layer-order="${n}"]`)) == null || m.remove();
  }, [s, n]), s ? /* @__PURE__ */ A.jsx(mP, {
    styles: s
  }) : null;
}
const iF = {};
function aF(e, t, n, i = !1) {
  return w.useMemo(() => {
    const s = e && t[e] || t;
    if (typeof n == "function") {
      const u = n(s), d = e ? {
        ...t,
        [e]: u
      } : u;
      return i ? () => d : d;
    }
    return e ? {
      ...t,
      [e]: n
    } : {
      ...t,
      ...n
    };
  }, [e, t, n, i]);
}
function iC(e) {
  const {
    children: t,
    theme: n,
    themeId: i
  } = e, s = hP(iF), u = wP() || iF;
  process.env.NODE_ENV !== "production" && (s === null && typeof n == "function" || i && s && !s[i] && typeof n == "function") && console.error(["MUI: You are providing a theme function prop to the ThemeProvider component:", "<ThemeProvider theme={outerTheme => outerTheme} />", "", "However, no outer theme is present.", "Make sure a theme is already injected higher in the React tree or provide a theme object."].join(`
`));
  const d = aF(i, s, n), p = aF(i, u, n, !0), m = (i ? d[i] : d).direction === "rtl", v = Tq(d);
  return /* @__PURE__ */ A.jsx(k0, {
    theme: p,
    children: /* @__PURE__ */ A.jsx(OC.Provider, {
      value: d,
      children: /* @__PURE__ */ A.jsx(tj, {
        value: m,
        children: /* @__PURE__ */ A.jsxs(rj, {
          value: i ? d[i].components : d.components,
          children: [v, t]
        })
      })
    })
  });
}
process.env.NODE_ENV !== "production" && (iC.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Your component tree.
   */
  children: a.node,
  /**
   * A theme object. You can provide a function to extend the outer theme.
   */
  theme: a.oneOfType([a.func, a.object]).isRequired,
  /**
   * The design system's unique id for getting the corresponded theme when there are multiple design systems.
   */
  themeId: a.string
});
process.env.NODE_ENV !== "production" && process.env.NODE_ENV !== "production" && (iC.propTypes = DC(iC.propTypes));
const sF = {
  theme: void 0
};
function Rq(e) {
  let t, n;
  return function(s) {
    let u = t;
    return (u === void 0 || s.theme !== n) && (sF.theme = s.theme, u = $$(e(sF)), t = u, n = s.theme), u;
  };
}
const xP = "mode", EP = "color-scheme", Oq = "data-color-scheme";
function kq(e) {
  const {
    defaultMode: t = "system",
    defaultLightColorScheme: n = "light",
    defaultDarkColorScheme: i = "dark",
    modeStorageKey: s = xP,
    colorSchemeStorageKey: u = EP,
    attribute: d = Oq,
    colorSchemeNode: p = "document.documentElement",
    nonce: m
  } = e || {};
  let v = "", y = d;
  if (d === "class" && (y = ".%s"), d === "data" && (y = "[data-%s]"), y.startsWith(".")) {
    const S = y.substring(1);
    v += `${p}.classList.remove('${S}'.replace('%s', light), '${S}'.replace('%s', dark));
      ${p}.classList.add('${S}'.replace('%s', colorScheme));`;
  }
  const C = y.match(/\[([^\]]+)\]/);
  if (C) {
    const [S, R] = C[1].split("=");
    R || (v += `${p}.removeAttribute('${S}'.replace('%s', light));
      ${p}.removeAttribute('${S}'.replace('%s', dark));`), v += `
      ${p}.setAttribute('${S}'.replace('%s', colorScheme), ${R ? `${R}.replace('%s', colorScheme)` : '""'});`;
  } else
    v += `${p}.setAttribute('${y}', colorScheme);`;
  return /* @__PURE__ */ A.jsx("script", {
    suppressHydrationWarning: !0,
    nonce: typeof window > "u" ? m : "",
    dangerouslySetInnerHTML: {
      __html: `(function() {
try {
  let colorScheme = '';
  const mode = localStorage.getItem('${s}') || '${t}';
  const dark = localStorage.getItem('${u}-dark') || '${i}';
  const light = localStorage.getItem('${u}-light') || '${n}';
  if (mode === 'system') {
    // handle system mode
    const mql = window.matchMedia('(prefers-color-scheme: dark)');
    if (mql.matches) {
      colorScheme = dark
    } else {
      colorScheme = light
    }
  }
  if (mode === 'light') {
    colorScheme = light;
  }
  if (mode === 'dark') {
    colorScheme = dark;
  }
  if (colorScheme) {
    ${v}
  }
} catch(e){}})();`
    }
  }, "mui-color-scheme-init");
}
function Pq() {
}
const Mq = ({
  key: e,
  storageWindow: t
}) => (!t && typeof window < "u" && (t = window), {
  get(n) {
    if (typeof window > "u")
      return;
    if (!t)
      return n;
    let i;
    try {
      i = t.localStorage.getItem(e);
    } catch {
    }
    return i || n;
  },
  set: (n) => {
    if (t)
      try {
        t.localStorage.setItem(e, n);
      } catch {
      }
  },
  subscribe: (n) => {
    if (!t)
      return Pq;
    const i = (s) => {
      const u = s.newValue;
      s.key === e && n(u);
    };
    return t.addEventListener("storage", i), () => {
      t.removeEventListener("storage", i);
    };
  }
});
function TO() {
}
function lF(e) {
  if (typeof window < "u" && typeof window.matchMedia == "function" && e === "system")
    return window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";
}
function oj(e, t) {
  if (e.mode === "light" || e.mode === "system" && e.systemMode === "light")
    return t("light");
  if (e.mode === "dark" || e.mode === "system" && e.systemMode === "dark")
    return t("dark");
}
function Iq(e) {
  return oj(e, (t) => {
    if (t === "light")
      return e.lightColorScheme;
    if (t === "dark")
      return e.darkColorScheme;
  });
}
function Dq(e) {
  const {
    defaultMode: t = "light",
    defaultLightColorScheme: n,
    defaultDarkColorScheme: i,
    supportedColorSchemes: s = [],
    modeStorageKey: u = xP,
    colorSchemeStorageKey: d = EP,
    storageWindow: p = typeof window > "u" ? void 0 : window,
    storageManager: m = Mq,
    noSsr: v = !1
  } = e, y = s.join(","), C = s.length > 1, S = w.useMemo(() => m == null ? void 0 : m({
    key: u,
    storageWindow: p
  }), [m, u, p]), R = w.useMemo(() => m == null ? void 0 : m({
    key: `${d}-light`,
    storageWindow: p
  }), [m, d, p]), O = w.useMemo(() => m == null ? void 0 : m({
    key: `${d}-dark`,
    storageWindow: p
  }), [m, d, p]), [E, k] = w.useState(() => {
    const Q = (S == null ? void 0 : S.get(t)) || t, z = (R == null ? void 0 : R.get(n)) || n, I = (O == null ? void 0 : O.get(i)) || i;
    return {
      mode: Q,
      systemMode: lF(Q),
      lightColorScheme: z,
      darkColorScheme: I
    };
  }), [F, _] = w.useState(v || !C);
  w.useEffect(() => {
    _(!0);
  }, []);
  const L = Iq(E), M = w.useCallback((Q) => {
    k((z) => {
      if (Q === z.mode)
        return z;
      const I = Q ?? t;
      return S == null || S.set(I), {
        ...z,
        mode: I,
        systemMode: lF(I)
      };
    });
  }, [S, t]), D = w.useCallback((Q) => {
    Q ? typeof Q == "string" ? Q && !y.includes(Q) ? console.error(`\`${Q}\` does not exist in \`theme.colorSchemes\`.`) : k((z) => {
      const I = {
        ...z
      };
      return oj(z, (G) => {
        G === "light" && (R == null || R.set(Q), I.lightColorScheme = Q), G === "dark" && (O == null || O.set(Q), I.darkColorScheme = Q);
      }), I;
    }) : k((z) => {
      const I = {
        ...z
      }, G = Q.light === null ? n : Q.light, W = Q.dark === null ? i : Q.dark;
      return G && (y.includes(G) ? (I.lightColorScheme = G, R == null || R.set(G)) : console.error(`\`${G}\` does not exist in \`theme.colorSchemes\`.`)), W && (y.includes(W) ? (I.darkColorScheme = W, O == null || O.set(W)) : console.error(`\`${W}\` does not exist in \`theme.colorSchemes\`.`)), I;
    }) : k((z) => (R == null || R.set(n), O == null || O.set(i), {
      ...z,
      lightColorScheme: n,
      darkColorScheme: i
    }));
  }, [y, R, O, n, i]), H = w.useCallback((Q) => {
    E.mode === "system" && k((z) => {
      const I = Q != null && Q.matches ? "dark" : "light";
      return z.systemMode === I ? z : {
        ...z,
        systemMode: I
      };
    });
  }, [E.mode]), K = w.useRef(H);
  return K.current = H, w.useEffect(() => {
    if (typeof window.matchMedia != "function" || !C)
      return;
    const Q = (...I) => K.current(...I), z = window.matchMedia("(prefers-color-scheme: dark)");
    return z.addListener(Q), Q(z), () => {
      z.removeListener(Q);
    };
  }, [C]), w.useEffect(() => {
    if (C) {
      const Q = (S == null ? void 0 : S.subscribe((G) => {
        (!G || ["light", "dark", "system"].includes(G)) && M(G || t);
      })) || TO, z = (R == null ? void 0 : R.subscribe((G) => {
        (!G || y.match(G)) && D({
          light: G
        });
      })) || TO, I = (O == null ? void 0 : O.subscribe((G) => {
        (!G || y.match(G)) && D({
          dark: G
        });
      })) || TO;
      return () => {
        Q(), z(), I();
      };
    }
  }, [D, M, y, t, p, C, S, R, O]), {
    ...E,
    mode: F ? E.mode : void 0,
    systemMode: F ? E.systemMode : void 0,
    colorScheme: F ? L : void 0,
    setMode: M,
    setColorScheme: D
  };
}
const Nq = "*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}";
function Lq(e) {
  const {
    themeId: t,
    /**
     * This `theme` object needs to follow a certain structure to
     * be used correctly by the finel `CssVarsProvider`. It should have a
     * `colorSchemes` key with the light and dark (and any other) palette.
     * It should also ideally have a vars object created using `prepareCssVars`.
     */
    theme: n = {},
    modeStorageKey: i = xP,
    colorSchemeStorageKey: s = EP,
    disableTransitionOnChange: u = !1,
    defaultColorScheme: d,
    resolveTheme: p
  } = e, m = {
    allColorSchemes: [],
    colorScheme: void 0,
    darkColorScheme: void 0,
    lightColorScheme: void 0,
    mode: void 0,
    setColorScheme: () => {
    },
    setMode: () => {
    },
    systemMode: void 0
  }, v = /* @__PURE__ */ w.createContext(void 0);
  process.env.NODE_ENV !== "production" && (v.displayName = "ColorSchemeContext");
  const y = () => w.useContext(v) || m, C = {}, S = {};
  function R(F) {
    var ct, Tt, Rt, Lt;
    const {
      children: _,
      theme: L,
      modeStorageKey: M = i,
      colorSchemeStorageKey: D = s,
      disableTransitionOnChange: H = u,
      storageManager: K,
      storageWindow: Q = typeof window > "u" ? void 0 : window,
      documentNode: z = typeof document > "u" ? void 0 : document,
      colorSchemeNode: I = typeof document > "u" ? void 0 : document.documentElement,
      disableNestedContext: G = !1,
      disableStyleSheetGeneration: W = !1,
      defaultMode: B = "system",
      noSsr: ee
    } = F, U = w.useRef(!1), q = wP(), Y = w.useContext(v), ne = !!Y && !G, re = w.useMemo(() => L || (typeof n == "function" ? n() : n), [L]), X = re[t], j = X || re, {
      colorSchemes: ie = C,
      components: fe = S,
      cssVarPrefix: ce
    } = j, me = Object.keys(ie).filter((vt) => !!ie[vt]).join(","), ge = w.useMemo(() => me.split(","), [me]), de = typeof d == "string" ? d : d.light, pe = typeof d == "string" ? d : d.dark, be = ie[de] && ie[pe] ? B : ((Tt = (ct = ie[j.defaultColorScheme]) == null ? void 0 : ct.palette) == null ? void 0 : Tt.mode) || ((Rt = j.palette) == null ? void 0 : Rt.mode), {
      mode: Ce,
      setMode: Re,
      systemMode: ue,
      lightColorScheme: we,
      darkColorScheme: _e,
      colorScheme: He,
      setColorScheme: et
    } = Dq({
      supportedColorSchemes: ge,
      defaultLightColorScheme: de,
      defaultDarkColorScheme: pe,
      modeStorageKey: M,
      colorSchemeStorageKey: D,
      defaultMode: be,
      storageManager: K,
      storageWindow: Q,
      noSsr: ee
    });
    let Ne = Ce, rt = He;
    ne && (Ne = Y.mode, rt = Y.colorScheme);
    const it = w.useMemo(() => {
      var Me;
      const vt = rt || j.defaultColorScheme, Qe = ((Me = j.generateThemeVars) == null ? void 0 : Me.call(j)) || j.vars, Oe = {
        ...j,
        components: fe,
        colorSchemes: ie,
        cssVarPrefix: ce,
        vars: Qe
      };
      if (typeof Oe.generateSpacing == "function" && (Oe.spacing = Oe.generateSpacing()), vt) {
        const ht = ie[vt];
        ht && typeof ht == "object" && Object.keys(ht).forEach((xt) => {
          ht[xt] && typeof ht[xt] == "object" ? Oe[xt] = {
            ...Oe[xt],
            ...ht[xt]
          } : Oe[xt] = ht[xt];
        });
      }
      return p ? p(Oe) : Oe;
    }, [j, rt, fe, ie, ce]), wt = j.colorSchemeSelector;
    _r(() => {
      if (rt && I && wt && wt !== "media") {
        const vt = wt;
        let Qe = wt;
        if (vt === "class" && (Qe = ".%s"), vt === "data" && (Qe = "[data-%s]"), vt != null && vt.startsWith("data-") && !vt.includes("%s") && (Qe = `[${vt}="%s"]`), Qe.startsWith("."))
          I.classList.remove(...ge.map((Oe) => Qe.substring(1).replace("%s", Oe))), I.classList.add(Qe.substring(1).replace("%s", rt));
        else {
          const Oe = Qe.replace("%s", rt).match(/\[([^\]]+)\]/);
          if (Oe) {
            const [Me, ht] = Oe[1].split("=");
            ht || ge.forEach((xt) => {
              I.removeAttribute(Me.replace(rt, xt));
            }), I.setAttribute(Me, ht ? ht.replace(/"|'/g, "") : "");
          } else
            I.setAttribute(Qe, rt);
        }
      }
    }, [rt, wt, I, ge]), w.useEffect(() => {
      let vt;
      if (H && U.current && z) {
        const Qe = z.createElement("style");
        Qe.appendChild(z.createTextNode(Nq)), z.head.appendChild(Qe), window.getComputedStyle(z.body), vt = setTimeout(() => {
          z.head.removeChild(Qe);
        }, 1);
      }
      return () => {
        clearTimeout(vt);
      };
    }, [rt, H, z]), w.useEffect(() => (U.current = !0, () => {
      U.current = !1;
    }), []);
    const gt = w.useMemo(() => ({
      allColorSchemes: ge,
      colorScheme: rt,
      darkColorScheme: _e,
      lightColorScheme: we,
      mode: Ne,
      setColorScheme: et,
      setMode: process.env.NODE_ENV === "production" ? Re : (vt) => {
        it.colorSchemeSelector === "media" && console.error(["MUI: The `setMode` function has no effect if `colorSchemeSelector` is `media` (`media` is the default value).", "To toggle the mode manually, please configure `colorSchemeSelector` to use a class or data attribute.", "To learn more, visit https://mui.com/material-ui/customization/css-theme-variables/configuration/#toggling-dark-mode-manually"].join(`
`)), Re(vt);
      },
      systemMode: ue
    }), [ge, rt, _e, we, Ne, et, Re, ue, it.colorSchemeSelector]);
    let ot = !0;
    (W || j.cssVariables === !1 || ne && (q == null ? void 0 : q.cssVarPrefix) === ce) && (ot = !1);
    const jt = /* @__PURE__ */ A.jsxs(w.Fragment, {
      children: [/* @__PURE__ */ A.jsx(iC, {
        themeId: X ? t : void 0,
        theme: it,
        children: _
      }), ot && /* @__PURE__ */ A.jsx(fP, {
        styles: ((Lt = it.generateStyleSheets) == null ? void 0 : Lt.call(it)) || []
      })]
    });
    return ne ? jt : /* @__PURE__ */ A.jsx(v.Provider, {
      value: gt,
      children: jt
    });
  }
  process.env.NODE_ENV !== "production" && (R.propTypes = {
    /**
     * The component tree.
     */
    children: a.node,
    /**
     * The node used to attach the color-scheme attribute
     */
    colorSchemeNode: a.any,
    /**
     * localStorage key used to store `colorScheme`
     */
    colorSchemeStorageKey: a.string,
    /**
     * The default mode when the storage is empty,
     * require the theme to have `colorSchemes` with light and dark.
     */
    defaultMode: a.string,
    /**
     * If `true`, the provider creates its own context and generate stylesheet as if it is a root `CssVarsProvider`.
     */
    disableNestedContext: a.bool,
    /**
     * If `true`, the style sheet won't be generated.
     *
     * This is useful for controlling nested CssVarsProvider behavior.
     */
    disableStyleSheetGeneration: a.bool,
    /**
     * Disable CSS transitions when switching between modes or color schemes.
     */
    disableTransitionOnChange: a.bool,
    /**
     * The document to attach the attribute to.
     */
    documentNode: a.any,
    /**
     * The key in the local storage used to store current color scheme.
     */
    modeStorageKey: a.string,
    /**
     * If `true`, the mode will be the same value as the storage without an extra rerendering after the hydration.
     * You should use this option in conjuction with `InitColorSchemeScript` component.
     */
    noSsr: a.bool,
    /**
     * The storage manager to be used for storing the mode and color scheme
     * @default using `window.localStorage`
     */
    storageManager: a.func,
    /**
     * The window that attaches the 'storage' event listener.
     * @default window
     */
    storageWindow: a.any,
    /**
     * The calculated theme object that will be passed through context.
     */
    theme: a.object
  });
  const O = typeof d == "string" ? d : d.light, E = typeof d == "string" ? d : d.dark;
  return {
    CssVarsProvider: R,
    useColorScheme: y,
    getInitColorSchemeScript: (F) => kq({
      colorSchemeStorageKey: s,
      defaultLightColorScheme: O,
      defaultDarkColorScheme: E,
      modeStorageKey: i,
      ...F
    })
  };
}
function Fq(e = "") {
  function t(...i) {
    if (!i.length)
      return "";
    const s = i[0];
    return typeof s == "string" && !s.match(/(#|\(|\)|(-?(\d*\.)?\d+)(px|em|%|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc))|^(-?(\d*\.)?\d+)$|(\d+ \d+ \d+)/) ? `, var(--${e ? `${e}-` : ""}${s}${t(...i.slice(1))})` : `, ${s}`;
  }
  return (i, ...s) => `var(--${e ? `${e}-` : ""}${i}${t(...s)})`;
}
const uF = (e, t, n, i = []) => {
  let s = e;
  t.forEach((u, d) => {
    d === t.length - 1 ? Array.isArray(s) ? s[Number(u)] = n : s && typeof s == "object" && (s[u] = n) : s && typeof s == "object" && (s[u] || (s[u] = i.includes(u) ? [] : {}), s = s[u]);
  });
}, _q = (e, t, n) => {
  function i(s, u = [], d = []) {
    Object.entries(s).forEach(([p, m]) => {
      (!n || n && !n([...u, p])) && m != null && (typeof m == "object" && Object.keys(m).length > 0 ? i(m, [...u, p], Array.isArray(m) ? [...d, p] : d) : t([...u, p], m, d));
    });
  }
  i(e);
}, Aq = (e, t) => typeof t == "number" ? ["lineHeight", "fontWeight", "opacity", "zIndex"].some((i) => e.includes(i)) || e[e.length - 1].toLowerCase().includes("opacity") ? t : `${t}px` : t;
function RO(e, t) {
  const {
    prefix: n,
    shouldSkipGeneratingVar: i
  } = t || {}, s = {}, u = {}, d = {};
  return _q(
    e,
    (p, m, v) => {
      if ((typeof m == "string" || typeof m == "number") && (!i || !i(p, m))) {
        const y = `--${n ? `${n}-` : ""}${p.join("-")}`, C = Aq(p, m);
        Object.assign(s, {
          [y]: C
        }), uF(u, p, `var(${y})`, v), uF(d, p, `var(${y}, ${C})`, v);
      }
    },
    (p) => p[0] === "vars"
    // skip 'vars/*' paths
  ), {
    css: s,
    vars: u,
    varsWithDefaults: d
  };
}
function $q(e, t = {}) {
  const {
    getSelector: n = k,
    disableCssColorScheme: i,
    colorSchemeSelector: s
  } = t, {
    colorSchemes: u = {},
    components: d,
    defaultColorScheme: p = "light",
    ...m
  } = e, {
    vars: v,
    css: y,
    varsWithDefaults: C
  } = RO(m, t);
  let S = C;
  const R = {}, {
    [p]: O,
    ...E
  } = u;
  if (Object.entries(E || {}).forEach(([L, M]) => {
    const {
      vars: D,
      css: H,
      varsWithDefaults: K
    } = RO(M, t);
    S = Ci(S, K), R[L] = {
      css: H,
      vars: D
    };
  }), O) {
    const {
      css: L,
      vars: M,
      varsWithDefaults: D
    } = RO(O, t);
    S = Ci(S, D), R[p] = {
      css: L,
      vars: M
    };
  }
  function k(L, M) {
    var H, K;
    let D = s;
    if (s === "class" && (D = ".%s"), s === "data" && (D = "[data-%s]"), s != null && s.startsWith("data-") && !s.includes("%s") && (D = `[${s}="%s"]`), L) {
      if (D === "media")
        return e.defaultColorScheme === L ? ":root" : {
          [`@media (prefers-color-scheme: ${((K = (H = u[L]) == null ? void 0 : H.palette) == null ? void 0 : K.mode) || L})`]: {
            ":root": M
          }
        };
      if (D)
        return e.defaultColorScheme === L ? `:root, ${D.replace("%s", String(L))}` : D.replace("%s", String(L));
    }
    return ":root";
  }
  return {
    vars: S,
    generateThemeVars: () => {
      let L = {
        ...v
      };
      return Object.entries(R).forEach(([, {
        vars: M
      }]) => {
        L = Ci(L, M);
      }), L;
    },
    generateStyleSheets: () => {
      var Q, z;
      const L = [], M = e.defaultColorScheme || "light";
      function D(I, G) {
        Object.keys(G).length && L.push(typeof I == "string" ? {
          [I]: {
            ...G
          }
        } : I);
      }
      D(n(void 0, {
        ...y
      }), y);
      const {
        [M]: H,
        ...K
      } = R;
      if (H) {
        const {
          css: I
        } = H, G = (z = (Q = u[M]) == null ? void 0 : Q.palette) == null ? void 0 : z.mode, W = !i && G ? {
          colorScheme: G,
          ...I
        } : {
          ...I
        };
        D(n(M, {
          ...W
        }), W);
      }
      return Object.entries(K).forEach(([I, {
        css: G
      }]) => {
        var ee, U;
        const W = (U = (ee = u[I]) == null ? void 0 : ee.palette) == null ? void 0 : U.mode, B = !i && W ? {
          colorScheme: W,
          ...G
        } : {
          ...G
        };
        D(n(I, {
          ...B
        }), B);
      }), L;
    }
  };
}
function jq(e) {
  return function(n) {
    return e === "media" ? (process.env.NODE_ENV !== "production" && n !== "light" && n !== "dark" && console.error(`MUI: @media (prefers-color-scheme) supports only 'light' or 'dark', but receive '${n}'.`), `@media (prefers-color-scheme: ${n})`) : e ? e.startsWith("data-") && !e.includes("%s") ? `[${e}="${n}"] &` : e === "class" ? `.${n} &` : e === "data" ? `[data-${n}] &` : `${e.replace("%s", n)} &` : "&";
  };
}
const zq = MC(), Hq = Dr("div", {
  name: "MuiContainer",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[`maxWidth${Ue(String(n.maxWidth))}`], n.fixed && t.fixed, n.disableGutters && t.disableGutters];
  }
}), Vq = (e) => B$({
  props: e,
  name: "MuiContainer",
  defaultTheme: zq
}), Bq = (e, t) => {
  const n = (m) => mn(t, m), {
    classes: i,
    fixed: s,
    disableGutters: u,
    maxWidth: d
  } = e, p = {
    root: ["root", d && `maxWidth${Ue(String(d))}`, s && "fixed", u && "disableGutters"]
  };
  return yt(p, n, i);
};
function Uq(e = {}) {
  const {
    // This will allow adding custom styled fn (for example for custom sx style function)
    createStyledComponent: t = Hq,
    useThemeProps: n = Vq,
    componentName: i = "MuiContainer"
  } = e, s = t(({
    theme: d,
    ownerState: p
  }) => ({
    width: "100%",
    marginLeft: "auto",
    boxSizing: "border-box",
    marginRight: "auto",
    ...!p.disableGutters && {
      paddingLeft: d.spacing(2),
      paddingRight: d.spacing(2),
      // @ts-ignore module augmentation fails if custom breakpoints are used
      [d.breakpoints.up("sm")]: {
        paddingLeft: d.spacing(3),
        paddingRight: d.spacing(3)
      }
    }
  }), ({
    theme: d,
    ownerState: p
  }) => p.fixed && Object.keys(d.breakpoints.values).reduce((m, v) => {
    const y = v, C = d.breakpoints.values[y];
    return C !== 0 && (m[d.breakpoints.up(y)] = {
      maxWidth: `${C}${d.breakpoints.unit}`
    }), m;
  }, {}), ({
    theme: d,
    ownerState: p
  }) => ({
    // @ts-ignore module augmentation fails if custom breakpoints are used
    ...p.maxWidth === "xs" && {
      // @ts-ignore module augmentation fails if custom breakpoints are used
      [d.breakpoints.up("xs")]: {
        // @ts-ignore module augmentation fails if custom breakpoints are used
        maxWidth: Math.max(d.breakpoints.values.xs, 444)
      }
    },
    ...p.maxWidth && // @ts-ignore module augmentation fails if custom breakpoints are used
    p.maxWidth !== "xs" && {
      // @ts-ignore module augmentation fails if custom breakpoints are used
      [d.breakpoints.up(p.maxWidth)]: {
        // @ts-ignore module augmentation fails if custom breakpoints are used
        maxWidth: `${d.breakpoints.values[p.maxWidth]}${d.breakpoints.unit}`
      }
    }
  })), u = /* @__PURE__ */ w.forwardRef(function(p, m) {
    const v = n(p), {
      className: y,
      component: C = "div",
      disableGutters: S = !1,
      fixed: R = !1,
      maxWidth: O = "lg",
      classes: E,
      ...k
    } = v, F = {
      ...v,
      component: C,
      disableGutters: S,
      fixed: R,
      maxWidth: O
    }, _ = Bq(F, i);
    return (
      // @ts-ignore theme is injected by the styled util
      /* @__PURE__ */ A.jsx(s, {
        as: C,
        ownerState: F,
        className: nt(_.root, y),
        ref: m,
        ...k
      })
    );
  });
  return process.env.NODE_ENV !== "production" && (u.propTypes = {
    children: a.node,
    classes: a.object,
    className: a.string,
    component: a.elementType,
    disableGutters: a.bool,
    fixed: a.bool,
    maxWidth: a.oneOfType([a.oneOf(["xs", "sm", "md", "lg", "xl", !1]), a.string]),
    sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
  }), u;
}
const Gq = MC(), Wq = Dr("div", {
  name: "MuiStack",
  slot: "Root",
  overridesResolver: (e, t) => t.root
});
function qq(e) {
  return B$({
    props: e,
    name: "MuiStack",
    defaultTheme: Gq
  });
}
function Kq(e, t) {
  const n = w.Children.toArray(e).filter(Boolean);
  return n.reduce((i, s, u) => (i.push(s), u < n.length - 1 && i.push(/* @__PURE__ */ w.cloneElement(t, {
    key: `separator-${u}`
  })), i), []);
}
const Yq = (e) => ({
  row: "Left",
  "row-reverse": "Right",
  column: "Top",
  "column-reverse": "Bottom"
})[e], Xq = ({
  ownerState: e,
  theme: t
}) => {
  let n = {
    display: "flex",
    flexDirection: "column",
    ...Ul({
      theme: t
    }, SO({
      values: e.direction,
      breakpoints: t.breakpoints.values
    }), (i) => ({
      flexDirection: i
    }))
  };
  if (e.spacing) {
    const i = hE(t), s = Object.keys(t.breakpoints.values).reduce((m, v) => ((typeof e.spacing == "object" && e.spacing[v] != null || typeof e.direction == "object" && e.direction[v] != null) && (m[v] = !0), m), {}), u = SO({
      values: e.direction,
      base: s
    }), d = SO({
      values: e.spacing,
      base: s
    });
    typeof u == "object" && Object.keys(u).forEach((m, v, y) => {
      if (!u[m]) {
        const S = v > 0 ? u[y[v - 1]] : "column";
        u[m] = S;
      }
    }), n = Ci(n, Ul({
      theme: t
    }, d, (m, v) => e.useFlexGap ? {
      gap: fh(i, m)
    } : {
      // The useFlexGap={false} implement relies on each child to give up control of the margin.
      // We need to reset the margin to avoid double spacing.
      "& > :not(style):not(style)": {
        margin: 0
      },
      "& > :not(style) ~ :not(style)": {
        [`margin${Yq(v ? u[v] : e.direction)}`]: fh(i, m)
      }
    }));
  }
  return n = o6(t.breakpoints, n), n;
};
function Qq(e = {}) {
  const {
    // This will allow adding custom styled fn (for example for custom sx style function)
    createStyledComponent: t = Wq,
    useThemeProps: n = qq,
    componentName: i = "MuiStack"
  } = e, s = () => yt({
    root: ["root"]
  }, (m) => mn(i, m), {}), u = t(Xq), d = /* @__PURE__ */ w.forwardRef(function(m, v) {
    const y = n(m), C = gP(y), {
      component: S = "div",
      direction: R = "column",
      spacing: O = 0,
      divider: E,
      children: k,
      className: F,
      useFlexGap: _ = !1,
      ...L
    } = C, M = {
      direction: R,
      spacing: O,
      useFlexGap: _
    }, D = s();
    return /* @__PURE__ */ A.jsx(u, {
      as: S,
      ownerState: M,
      ref: v,
      className: nt(D.root, F),
      ...L,
      children: E ? Kq(k, E) : k
    });
  });
  return process.env.NODE_ENV !== "production" && (d.propTypes = {
    children: a.node,
    direction: a.oneOfType([a.oneOf(["column-reverse", "column", "row-reverse", "row"]), a.arrayOf(a.oneOf(["column-reverse", "column", "row-reverse", "row"])), a.object]),
    divider: a.node,
    spacing: a.oneOfType([a.arrayOf(a.oneOfType([a.number, a.string])), a.number, a.object, a.string]),
    sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
  }), d;
}
function ij() {
  return {
    // The colors used to style the text.
    text: {
      // The most important text.
      primary: "rgba(0, 0, 0, 0.87)",
      // Secondary text.
      secondary: "rgba(0, 0, 0, 0.6)",
      // Disabled text have even lower visual prominence.
      disabled: "rgba(0, 0, 0, 0.38)"
    },
    // The color used to divide different elements.
    divider: "rgba(0, 0, 0, 0.12)",
    // The background colors used to style the surfaces.
    // Consistency between these values is important.
    background: {
      paper: tC.white,
      default: tC.white
    },
    // The colors used to style the action elements.
    action: {
      // The color of an active action like an icon button.
      active: "rgba(0, 0, 0, 0.54)",
      // The color of an hovered action.
      hover: "rgba(0, 0, 0, 0.04)",
      hoverOpacity: 0.04,
      // The color of a selected action.
      selected: "rgba(0, 0, 0, 0.08)",
      selectedOpacity: 0.08,
      // The color of a disabled action.
      disabled: "rgba(0, 0, 0, 0.26)",
      // The background color of a disabled action.
      disabledBackground: "rgba(0, 0, 0, 0.12)",
      disabledOpacity: 0.38,
      focus: "rgba(0, 0, 0, 0.12)",
      focusOpacity: 0.12,
      activatedOpacity: 0.12
    }
  };
}
const Jq = ij();
function aj() {
  return {
    text: {
      primary: tC.white,
      secondary: "rgba(255, 255, 255, 0.7)",
      disabled: "rgba(255, 255, 255, 0.5)",
      icon: "rgba(255, 255, 255, 0.5)"
    },
    divider: "rgba(255, 255, 255, 0.12)",
    background: {
      paper: "#121212",
      default: "#121212"
    },
    action: {
      active: tC.white,
      hover: "rgba(255, 255, 255, 0.08)",
      hoverOpacity: 0.08,
      selected: "rgba(255, 255, 255, 0.16)",
      selectedOpacity: 0.16,
      disabled: "rgba(255, 255, 255, 0.3)",
      disabledBackground: "rgba(255, 255, 255, 0.12)",
      disabledOpacity: 0.38,
      focus: "rgba(255, 255, 255, 0.12)",
      focusOpacity: 0.12,
      activatedOpacity: 0.24
    }
  };
}
const cF = aj();
function dF(e, t, n, i) {
  const s = i.light || i, u = i.dark || i * 1.5;
  e[t] || (e.hasOwnProperty(n) ? e[t] = e[n] : t === "light" ? e.light = Cf(e.main, s) : t === "dark" && (e.dark = bf(e.main, u)));
}
function Zq(e = "light") {
  return e === "dark" ? {
    main: ug[200],
    light: ug[50],
    dark: ug[400]
  } : {
    main: ug[700],
    light: ug[400],
    dark: ug[800]
  };
}
function e8(e = "light") {
  return e === "dark" ? {
    main: lg[200],
    light: lg[50],
    dark: lg[400]
  } : {
    main: lg[500],
    light: lg[300],
    dark: lg[700]
  };
}
function t8(e = "light") {
  return e === "dark" ? {
    main: sg[500],
    light: sg[300],
    dark: sg[700]
  } : {
    main: sg[700],
    light: sg[400],
    dark: sg[800]
  };
}
function n8(e = "light") {
  return e === "dark" ? {
    main: cg[400],
    light: cg[300],
    dark: cg[700]
  } : {
    main: cg[700],
    light: cg[500],
    dark: cg[900]
  };
}
function r8(e = "light") {
  return e === "dark" ? {
    main: dg[400],
    light: dg[300],
    dark: dg[700]
  } : {
    main: dg[800],
    light: dg[500],
    dark: dg[900]
  };
}
function o8(e = "light") {
  return e === "dark" ? {
    main: Eb[400],
    light: Eb[300],
    dark: Eb[700]
  } : {
    main: "#ed6c02",
    // closest to orange[800] that pass 3:1.
    light: Eb[500],
    dark: Eb[900]
  };
}
function TP(e) {
  const {
    mode: t = "light",
    contrastThreshold: n = 3,
    tonalOffset: i = 0.2,
    ...s
  } = e, u = e.primary || Zq(t), d = e.secondary || e8(t), p = e.error || t8(t), m = e.info || n8(t), v = e.success || r8(t), y = e.warning || o8(t);
  function C(E) {
    const k = ZL(E, cF.text.primary) >= n ? cF.text.primary : Jq.text.primary;
    if (process.env.NODE_ENV !== "production") {
      const F = ZL(E, k);
      F < 3 && console.error([`MUI: The contrast ratio of ${F}:1 for ${k} on ${E}`, "falls below the WCAG recommended absolute minimum contrast ratio of 3:1.", "https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast"].join(`
`));
    }
    return k;
  }
  const S = ({
    color: E,
    name: k,
    mainShade: F = 500,
    lightShade: _ = 300,
    darkShade: L = 700
  }) => {
    if (E = {
      ...E
    }, !E.main && E[F] && (E.main = E[F]), !E.hasOwnProperty("main"))
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The color${k ? ` (${k})` : ""} provided to augmentColor(color) is invalid.
The color object needs to have a \`main\` property or a \`${F}\` property.` : Gu(11, k ? ` (${k})` : "", F));
    if (typeof E.main != "string")
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The color${k ? ` (${k})` : ""} provided to augmentColor(color) is invalid.
\`color.main\` should be a string, but \`${JSON.stringify(E.main)}\` was provided instead.

Did you intend to use one of the following approaches?

import { green } from "@mui/material/colors";

const theme1 = createTheme({ palette: {
  primary: green,
} });

const theme2 = createTheme({ palette: {
  primary: { main: green[500] },
} });` : Gu(12, k ? ` (${k})` : "", JSON.stringify(E.main)));
    return dF(E, "light", _, i), dF(E, "dark", L, i), E.contrastText || (E.contrastText = C(E.main)), E;
  };
  let R;
  return t === "light" ? R = ij() : t === "dark" && (R = aj()), process.env.NODE_ENV !== "production" && (R || console.error(`MUI: The palette mode \`${t}\` is not supported.`)), Ci({
    // A collection of common colors.
    common: {
      ...tC
    },
    // prevent mutable object.
    // The palette mode, can be light or dark.
    mode: t,
    // The colors used to represent primary interface elements for a user.
    primary: S({
      color: u,
      name: "primary"
    }),
    // The colors used to represent secondary interface elements for a user.
    secondary: S({
      color: d,
      name: "secondary",
      mainShade: "A400",
      lightShade: "A200",
      darkShade: "A700"
    }),
    // The colors used to represent interface elements that the user should be made aware of.
    error: S({
      color: p,
      name: "error"
    }),
    // The colors used to represent potentially dangerous actions or important messages.
    warning: S({
      color: y,
      name: "warning"
    }),
    // The colors used to present information to the user that is neutral and not necessarily important.
    info: S({
      color: m,
      name: "info"
    }),
    // The colors used to indicate the successful completion of an action that user triggered.
    success: S({
      color: v,
      name: "success"
    }),
    // The grey colors.
    grey: $3,
    // Used by `getContrastText()` to maximize the contrast between
    // the background and the text.
    contrastThreshold: n,
    // Takes a background color and returns the text color that maximizes the contrast.
    getContrastText: C,
    // Generate a rich color object.
    augmentColor: S,
    // Used by the functions below to shift a color's luminance by approximately
    // two indexes within its tonal palette.
    // E.g., shift from Red 500 to Red 300 or Red 700.
    tonalOffset: i,
    // The light and dark mode object.
    ...R
  }, s);
}
function i8(e) {
  const t = {};
  return Object.entries(e).forEach((i) => {
    const [s, u] = i;
    typeof u == "object" && (t[s] = `${u.fontStyle ? `${u.fontStyle} ` : ""}${u.fontVariant ? `${u.fontVariant} ` : ""}${u.fontWeight ? `${u.fontWeight} ` : ""}${u.fontStretch ? `${u.fontStretch} ` : ""}${u.fontSize || ""}${u.lineHeight ? `/${u.lineHeight} ` : ""}${u.fontFamily || ""}`);
  }), t;
}
function a8(e, t) {
  return {
    toolbar: {
      minHeight: 56,
      [e.up("xs")]: {
        "@media (orientation: landscape)": {
          minHeight: 48
        }
      },
      [e.up("sm")]: {
        minHeight: 64
      }
    },
    ...t
  };
}
function s8(e) {
  return Math.round(e * 1e5) / 1e5;
}
const fF = {
  textTransform: "uppercase"
}, pF = '"Roboto", "Helvetica", "Arial", sans-serif';
function sj(e, t) {
  const {
    fontFamily: n = pF,
    // The default font size of the Material Specification.
    fontSize: i = 14,
    // px
    fontWeightLight: s = 300,
    fontWeightRegular: u = 400,
    fontWeightMedium: d = 500,
    fontWeightBold: p = 700,
    // Tell MUI what's the font-size on the html element.
    // 16px is the default font-size used by browsers.
    htmlFontSize: m = 16,
    // Apply the CSS properties to all the variants.
    allVariants: v,
    pxToRem: y,
    ...C
  } = typeof t == "function" ? t(e) : t;
  process.env.NODE_ENV !== "production" && (typeof i != "number" && console.error("MUI: `fontSize` is required to be a number."), typeof m != "number" && console.error("MUI: `htmlFontSize` is required to be a number."));
  const S = i / 14, R = y || ((k) => `${k / m * S}rem`), O = (k, F, _, L, M) => ({
    fontFamily: n,
    fontWeight: k,
    fontSize: R(F),
    // Unitless following https://meyerweb.com/eric/thoughts/2006/02/08/unitless-line-heights/
    lineHeight: _,
    // The letter spacing was designed for the Roboto font-family. Using the same letter-spacing
    // across font-families can cause issues with the kerning.
    ...n === pF ? {
      letterSpacing: `${s8(L / F)}em`
    } : {},
    ...M,
    ...v
  }), E = {
    h1: O(s, 96, 1.167, -1.5),
    h2: O(s, 60, 1.2, -0.5),
    h3: O(u, 48, 1.167, 0),
    h4: O(u, 34, 1.235, 0.25),
    h5: O(u, 24, 1.334, 0),
    h6: O(d, 20, 1.6, 0.15),
    subtitle1: O(u, 16, 1.75, 0.15),
    subtitle2: O(d, 14, 1.57, 0.1),
    body1: O(u, 16, 1.5, 0.15),
    body2: O(u, 14, 1.43, 0.15),
    button: O(d, 14, 1.75, 0.4, fF),
    caption: O(u, 12, 1.66, 0.4),
    overline: O(u, 12, 2.66, 1, fF),
    // TODO v6: Remove handling of 'inherit' variant from the theme as it is already handled in Material UI's Typography component. Also, remember to remove the associated types.
    inherit: {
      fontFamily: "inherit",
      fontWeight: "inherit",
      fontSize: "inherit",
      lineHeight: "inherit",
      letterSpacing: "inherit"
    }
  };
  return Ci({
    htmlFontSize: m,
    pxToRem: R,
    fontFamily: n,
    fontSize: i,
    fontWeightLight: s,
    fontWeightRegular: u,
    fontWeightMedium: d,
    fontWeightBold: p,
    ...E
  }, C, {
    clone: !1
    // No need to clone deep
  });
}
const l8 = 0.2, u8 = 0.14, c8 = 0.12;
function io(...e) {
  return [`${e[0]}px ${e[1]}px ${e[2]}px ${e[3]}px rgba(0,0,0,${l8})`, `${e[4]}px ${e[5]}px ${e[6]}px ${e[7]}px rgba(0,0,0,${u8})`, `${e[8]}px ${e[9]}px ${e[10]}px ${e[11]}px rgba(0,0,0,${c8})`].join(",");
}
const d8 = ["none", io(0, 2, 1, -1, 0, 1, 1, 0, 0, 1, 3, 0), io(0, 3, 1, -2, 0, 2, 2, 0, 0, 1, 5, 0), io(0, 3, 3, -2, 0, 3, 4, 0, 0, 1, 8, 0), io(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0), io(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0), io(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0), io(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1), io(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2), io(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2), io(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3), io(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3), io(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4), io(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4), io(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4), io(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5), io(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5), io(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5), io(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6), io(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6), io(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7), io(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7), io(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7), io(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8), io(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8)], f8 = {
  // This is the most common easing curve.
  easeInOut: "cubic-bezier(0.4, 0, 0.2, 1)",
  // Objects enter the screen at full velocity from off-screen and
  // slowly decelerate to a resting point.
  easeOut: "cubic-bezier(0.0, 0, 0.2, 1)",
  // Objects leave the screen at full velocity. They do not decelerate when off-screen.
  easeIn: "cubic-bezier(0.4, 0, 1, 1)",
  // The sharp curve is used by objects that may return to the screen at any time.
  sharp: "cubic-bezier(0.4, 0, 0.6, 1)"
}, p8 = {
  shortest: 150,
  shorter: 200,
  short: 250,
  // most basic recommended timing
  standard: 300,
  // this is to be used in complex animations
  complex: 375,
  // recommended when something is entering screen
  enteringScreen: 225,
  // recommended when something is leaving screen
  leavingScreen: 195
};
function hF(e) {
  return `${Math.round(e)}ms`;
}
function h8(e) {
  if (!e)
    return 0;
  const t = e / 36;
  return Math.min(Math.round((4 + 15 * t ** 0.25 + t / 5) * 10), 3e3);
}
function m8(e) {
  const t = {
    ...f8,
    ...e.easing
  }, n = {
    ...p8,
    ...e.duration
  };
  return {
    getAutoHeightDuration: h8,
    create: (s = ["all"], u = {}) => {
      const {
        duration: d = n.standard,
        easing: p = t.easeInOut,
        delay: m = 0,
        ...v
      } = u;
      if (process.env.NODE_ENV !== "production") {
        const y = (S) => typeof S == "string", C = (S) => !Number.isNaN(parseFloat(S));
        !y(s) && !Array.isArray(s) && console.error('MUI: Argument "props" must be a string or Array.'), !C(d) && !y(d) && console.error(`MUI: Argument "duration" must be a number or a string but found ${d}.`), y(p) || console.error('MUI: Argument "easing" must be a string.'), !C(m) && !y(m) && console.error('MUI: Argument "delay" must be a number or a string.'), typeof u != "object" && console.error(["MUI: Secong argument of transition.create must be an object.", "Arguments should be either `create('prop1', options)` or `create(['prop1', 'prop2'], options)`"].join(`
`)), Object.keys(v).length !== 0 && console.error(`MUI: Unrecognized argument(s) [${Object.keys(v).join(",")}].`);
      }
      return (Array.isArray(s) ? s : [s]).map((y) => `${y} ${typeof d == "string" ? d : hF(d)} ${p} ${typeof m == "string" ? m : hF(m)}`).join(",");
    },
    ...e,
    easing: t,
    duration: n
  };
}
const g8 = {
  mobileStepper: 1e3,
  fab: 1050,
  speedDial: 1050,
  appBar: 1100,
  drawer: 1200,
  modal: 1300,
  snackbar: 1400,
  tooltip: 1500
};
function v8(e) {
  return ju(e) || typeof e > "u" || typeof e == "string" || typeof e == "boolean" || typeof e == "number" || Array.isArray(e);
}
function lj(e = {}) {
  const t = {
    ...e
  };
  function n(i) {
    const s = Object.entries(i);
    for (let u = 0; u < s.length; u++) {
      const [d, p] = s[u];
      !v8(p) || d.startsWith("unstable_") ? delete i[d] : ju(p) && (i[d] = {
        ...p
      }, n(i[d]));
    }
  }
  return n(t), `import { unstable_createBreakpoints as createBreakpoints, createTransitions } from '@mui/material/styles';

const theme = ${JSON.stringify(t, null, 2)};

theme.breakpoints = createBreakpoints(theme.breakpoints || {});
theme.transitions = createTransitions(theme.transitions || {});

export default theme;`;
}
function vk(e = {}, ...t) {
  const {
    breakpoints: n,
    mixins: i = {},
    spacing: s,
    palette: u = {},
    transitions: d = {},
    typography: p = {},
    shape: m,
    ...v
  } = e;
  if (e.vars && // The error should throw only for the root theme creation because user is not allowed to use a custom node `vars`.
  // `generateThemeVars` is the closest identifier for checking that the `options` is a result of `createTheme` with CSS variables so that user can create new theme for nested ThemeProvider.
  e.generateThemeVars === void 0)
    throw new Error(process.env.NODE_ENV !== "production" ? "MUI: `vars` is a private field used for CSS variables support.\nPlease use another name or follow the [docs](https://mui.com/material-ui/customization/css-theme-variables/usage/) to enable the feature." : Gu(20));
  const y = TP(u), C = MC(e);
  let S = Ci(C, {
    mixins: a8(C.breakpoints, i),
    palette: y,
    // Don't use [...shadows] until you've verified its transpiled code is not invoking the iterator protocol.
    shadows: d8.slice(),
    typography: sj(y, p),
    transitions: m8(d),
    zIndex: {
      ...g8
    }
  });
  if (S = Ci(S, v), S = t.reduce((R, O) => Ci(R, O), S), process.env.NODE_ENV !== "production") {
    const R = ["active", "checked", "completed", "disabled", "error", "expanded", "focused", "focusVisible", "required", "selected"], O = (E, k) => {
      let F;
      for (F in E) {
        const _ = E[F];
        if (R.includes(F) && Object.keys(_).length > 0) {
          if (process.env.NODE_ENV !== "production") {
            const L = mn("", F);
            console.error([`MUI: The \`${k}\` component increases the CSS specificity of the \`${F}\` internal state.`, "You can not override it like this: ", JSON.stringify(E, null, 2), "", `Instead, you need to use the '&.${L}' syntax:`, JSON.stringify({
              root: {
                [`&.${L}`]: _
              }
            }, null, 2), "", "https://mui.com/r/state-classes-guide"].join(`
`));
          }
          E[F] = {};
        }
      }
    };
    Object.keys(S.components).forEach((E) => {
      const k = S.components[E].styleOverrides;
      k && E.startsWith("Mui") && O(k, E);
    });
  }
  return S.unstable_sxConfig = {
    ...PC,
    ...v == null ? void 0 : v.unstable_sxConfig
  }, S.unstable_sx = function(O) {
    return yf({
      sx: O,
      theme: this
    });
  }, S.toRuntimeSource = lj, S;
}
function yk(e) {
  let t;
  return e < 1 ? t = 5.11916 * e ** 2 : t = 4.5 * Math.log(e + 1) + 2, Math.round(t * 10) / 1e3;
}
const y8 = [...Array(25)].map((e, t) => {
  if (t === 0)
    return "none";
  const n = yk(t);
  return `linear-gradient(rgba(255 255 255 / ${n}), rgba(255 255 255 / ${n}))`;
});
function uj(e) {
  return {
    inputPlaceholder: e === "dark" ? 0.5 : 0.42,
    inputUnderline: e === "dark" ? 0.7 : 0.42,
    switchTrackDisabled: e === "dark" ? 0.2 : 0.12,
    switchTrack: e === "dark" ? 0.3 : 0.38
  };
}
function cj(e) {
  return e === "dark" ? y8 : [];
}
function b8(e) {
  const {
    palette: t = {
      mode: "light"
    },
    // need to cast to avoid module augmentation test
    opacity: n,
    overlays: i,
    ...s
  } = e, u = TP(t);
  return {
    palette: u,
    opacity: {
      ...uj(u.mode),
      ...n
    },
    overlays: i || cj(u.mode),
    ...s
  };
}
function C8(e) {
  var t;
  return !!e[0].match(/(cssVarPrefix|colorSchemeSelector|modularCssLayers|rootSelector|typography|mixins|breakpoints|direction|transitions)/) || !!e[0].match(/sxConfig$/) || // ends with sxConfig
  e[0] === "palette" && !!((t = e[1]) != null && t.match(/(mode|contrastThreshold|tonalOffset)/));
}
const S8 = (e) => [...[...Array(25)].map((t, n) => `--${e ? `${e}-` : ""}overlays-${n}`), `--${e ? `${e}-` : ""}palette-AppBar-darkBg`, `--${e ? `${e}-` : ""}palette-AppBar-darkColor`], w8 = (e) => (t, n) => {
  const i = e.rootSelector || ":root", s = e.colorSchemeSelector;
  let u = s;
  if (s === "class" && (u = ".%s"), s === "data" && (u = "[data-%s]"), s != null && s.startsWith("data-") && !s.includes("%s") && (u = `[${s}="%s"]`), e.defaultColorScheme === t) {
    if (t === "dark") {
      const d = {};
      return S8(e.cssVarPrefix).forEach((p) => {
        d[p] = n[p], delete n[p];
      }), u === "media" ? {
        [i]: n,
        "@media (prefers-color-scheme: dark)": {
          [i]: d
        }
      } : u ? {
        [u.replace("%s", t)]: d,
        [`${i}, ${u.replace("%s", t)}`]: n
      } : {
        [i]: {
          ...n,
          ...d
        }
      };
    }
    if (u && u !== "media")
      return `${i}, ${u.replace("%s", String(t))}`;
  } else if (t) {
    if (u === "media")
      return {
        [`@media (prefers-color-scheme: ${String(t)})`]: {
          [i]: n
        }
      };
    if (u)
      return u.replace("%s", String(t));
  }
  return i;
};
function x8(e, t) {
  t.forEach((n) => {
    e[n] || (e[n] = {});
  });
}
function Ye(e, t, n) {
  !e[t] && n && (e[t] = n);
}
function jb(e) {
  return typeof e != "string" || !e.startsWith("hsl") ? e : U$(e);
}
function Hc(e, t) {
  `${t}Channel` in e || (e[`${t}Channel`] = $b(jb(e[t]), `MUI: Can't create \`palette.${t}Channel\` because \`palette.${t}\` is not one of these formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().
To suppress this warning, you need to explicitly provide the \`palette.${t}Channel\` as a string (in rgb format, for example "12 12 12") or undefined if you want to remove the channel token.`));
}
function E8(e) {
  return typeof e == "number" ? `${e}px` : typeof e == "string" || typeof e == "function" || Array.isArray(e) ? e : "8px";
}
const Iu = (e) => {
  try {
    return e();
  } catch {
  }
}, T8 = (e = "mui") => Fq(e);
function OO(e, t, n, i) {
  if (!t)
    return;
  t = t === !0 ? {} : t;
  const s = i === "dark" ? "dark" : "light";
  if (!n) {
    e[i] = b8({
      ...t,
      palette: {
        mode: s,
        ...t == null ? void 0 : t.palette
      }
    });
    return;
  }
  const {
    palette: u,
    ...d
  } = vk({
    ...n,
    palette: {
      mode: s,
      ...t == null ? void 0 : t.palette
    }
  });
  return e[i] = {
    ...t,
    palette: u,
    opacity: {
      ...uj(s),
      ...t == null ? void 0 : t.opacity
    },
    overlays: (t == null ? void 0 : t.overlays) || cj(s)
  }, d;
}
function R8(e = {}, ...t) {
  const {
    colorSchemes: n = {
      light: !0
    },
    defaultColorScheme: i,
    disableCssColorScheme: s = !1,
    cssVarPrefix: u = "mui",
    shouldSkipGeneratingVar: d = C8,
    colorSchemeSelector: p = n.light && n.dark ? "media" : void 0,
    rootSelector: m = ":root",
    ...v
  } = e, y = Object.keys(n)[0], C = i || (n.light && y !== "light" ? "light" : y), S = T8(u), {
    [C]: R,
    light: O,
    dark: E,
    ...k
  } = n, F = {
    ...k
  };
  let _ = R;
  if ((C === "dark" && !("dark" in n) || C === "light" && !("light" in n)) && (_ = !0), !_)
    throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The \`colorSchemes.${C}\` option is either missing or invalid.` : Gu(21, C));
  const L = OO(F, _, v, C);
  O && !F.light && OO(F, O, void 0, "light"), E && !F.dark && OO(F, E, void 0, "dark");
  let M = {
    defaultColorScheme: C,
    ...L,
    cssVarPrefix: u,
    colorSchemeSelector: p,
    rootSelector: m,
    getCssVar: S,
    colorSchemes: F,
    font: {
      ...i8(L.typography),
      ...L.font
    },
    spacing: E8(v.spacing)
  };
  Object.keys(M.colorSchemes).forEach((z) => {
    const I = M.colorSchemes[z].palette, G = (W) => {
      const B = W.split("-"), ee = B[1], U = B[2];
      return S(W, I[ee][U]);
    };
    if (I.mode === "light" && (Ye(I.common, "background", "#fff"), Ye(I.common, "onBackground", "#000")), I.mode === "dark" && (Ye(I.common, "background", "#000"), Ye(I.common, "onBackground", "#fff")), x8(I, ["Alert", "AppBar", "Avatar", "Button", "Chip", "FilledInput", "LinearProgress", "Skeleton", "Slider", "SnackbarContent", "SpeedDialAction", "StepConnector", "StepContent", "Switch", "TableCell", "Tooltip"]), I.mode === "light") {
      Ye(I.Alert, "errorColor", Gr(I.error.light, 0.6)), Ye(I.Alert, "infoColor", Gr(I.info.light, 0.6)), Ye(I.Alert, "successColor", Gr(I.success.light, 0.6)), Ye(I.Alert, "warningColor", Gr(I.warning.light, 0.6)), Ye(I.Alert, "errorFilledBg", G("palette-error-main")), Ye(I.Alert, "infoFilledBg", G("palette-info-main")), Ye(I.Alert, "successFilledBg", G("palette-success-main")), Ye(I.Alert, "warningFilledBg", G("palette-warning-main")), Ye(I.Alert, "errorFilledColor", Iu(() => I.getContrastText(I.error.main))), Ye(I.Alert, "infoFilledColor", Iu(() => I.getContrastText(I.info.main))), Ye(I.Alert, "successFilledColor", Iu(() => I.getContrastText(I.success.main))), Ye(I.Alert, "warningFilledColor", Iu(() => I.getContrastText(I.warning.main))), Ye(I.Alert, "errorStandardBg", Wr(I.error.light, 0.9)), Ye(I.Alert, "infoStandardBg", Wr(I.info.light, 0.9)), Ye(I.Alert, "successStandardBg", Wr(I.success.light, 0.9)), Ye(I.Alert, "warningStandardBg", Wr(I.warning.light, 0.9)), Ye(I.Alert, "errorIconColor", G("palette-error-main")), Ye(I.Alert, "infoIconColor", G("palette-info-main")), Ye(I.Alert, "successIconColor", G("palette-success-main")), Ye(I.Alert, "warningIconColor", G("palette-warning-main")), Ye(I.AppBar, "defaultBg", G("palette-grey-100")), Ye(I.Avatar, "defaultBg", G("palette-grey-400")), Ye(I.Button, "inheritContainedBg", G("palette-grey-300")), Ye(I.Button, "inheritContainedHoverBg", G("palette-grey-A100")), Ye(I.Chip, "defaultBorder", G("palette-grey-400")), Ye(I.Chip, "defaultAvatarColor", G("palette-grey-700")), Ye(I.Chip, "defaultIconColor", G("palette-grey-700")), Ye(I.FilledInput, "bg", "rgba(0, 0, 0, 0.06)"), Ye(I.FilledInput, "hoverBg", "rgba(0, 0, 0, 0.09)"), Ye(I.FilledInput, "disabledBg", "rgba(0, 0, 0, 0.12)"), Ye(I.LinearProgress, "primaryBg", Wr(I.primary.main, 0.62)), Ye(I.LinearProgress, "secondaryBg", Wr(I.secondary.main, 0.62)), Ye(I.LinearProgress, "errorBg", Wr(I.error.main, 0.62)), Ye(I.LinearProgress, "infoBg", Wr(I.info.main, 0.62)), Ye(I.LinearProgress, "successBg", Wr(I.success.main, 0.62)), Ye(I.LinearProgress, "warningBg", Wr(I.warning.main, 0.62)), Ye(I.Skeleton, "bg", `rgba(${G("palette-text-primaryChannel")} / 0.11)`), Ye(I.Slider, "primaryTrack", Wr(I.primary.main, 0.62)), Ye(I.Slider, "secondaryTrack", Wr(I.secondary.main, 0.62)), Ye(I.Slider, "errorTrack", Wr(I.error.main, 0.62)), Ye(I.Slider, "infoTrack", Wr(I.info.main, 0.62)), Ye(I.Slider, "successTrack", Wr(I.success.main, 0.62)), Ye(I.Slider, "warningTrack", Wr(I.warning.main, 0.62));
      const W = Xx(I.background.default, 0.8);
      Ye(I.SnackbarContent, "bg", W), Ye(I.SnackbarContent, "color", Iu(() => I.getContrastText(W))), Ye(I.SpeedDialAction, "fabHoverBg", Xx(I.background.paper, 0.15)), Ye(I.StepConnector, "border", G("palette-grey-400")), Ye(I.StepContent, "border", G("palette-grey-400")), Ye(I.Switch, "defaultColor", G("palette-common-white")), Ye(I.Switch, "defaultDisabledColor", G("palette-grey-100")), Ye(I.Switch, "primaryDisabledColor", Wr(I.primary.main, 0.62)), Ye(I.Switch, "secondaryDisabledColor", Wr(I.secondary.main, 0.62)), Ye(I.Switch, "errorDisabledColor", Wr(I.error.main, 0.62)), Ye(I.Switch, "infoDisabledColor", Wr(I.info.main, 0.62)), Ye(I.Switch, "successDisabledColor", Wr(I.success.main, 0.62)), Ye(I.Switch, "warningDisabledColor", Wr(I.warning.main, 0.62)), Ye(I.TableCell, "border", Wr(Yx(I.divider, 1), 0.88)), Ye(I.Tooltip, "bg", Yx(I.grey[700], 0.92));
    }
    if (I.mode === "dark") {
      Ye(I.Alert, "errorColor", Wr(I.error.light, 0.6)), Ye(I.Alert, "infoColor", Wr(I.info.light, 0.6)), Ye(I.Alert, "successColor", Wr(I.success.light, 0.6)), Ye(I.Alert, "warningColor", Wr(I.warning.light, 0.6)), Ye(I.Alert, "errorFilledBg", G("palette-error-dark")), Ye(I.Alert, "infoFilledBg", G("palette-info-dark")), Ye(I.Alert, "successFilledBg", G("palette-success-dark")), Ye(I.Alert, "warningFilledBg", G("palette-warning-dark")), Ye(I.Alert, "errorFilledColor", Iu(() => I.getContrastText(I.error.dark))), Ye(I.Alert, "infoFilledColor", Iu(() => I.getContrastText(I.info.dark))), Ye(I.Alert, "successFilledColor", Iu(() => I.getContrastText(I.success.dark))), Ye(I.Alert, "warningFilledColor", Iu(() => I.getContrastText(I.warning.dark))), Ye(I.Alert, "errorStandardBg", Gr(I.error.light, 0.9)), Ye(I.Alert, "infoStandardBg", Gr(I.info.light, 0.9)), Ye(I.Alert, "successStandardBg", Gr(I.success.light, 0.9)), Ye(I.Alert, "warningStandardBg", Gr(I.warning.light, 0.9)), Ye(I.Alert, "errorIconColor", G("palette-error-main")), Ye(I.Alert, "infoIconColor", G("palette-info-main")), Ye(I.Alert, "successIconColor", G("palette-success-main")), Ye(I.Alert, "warningIconColor", G("palette-warning-main")), Ye(I.AppBar, "defaultBg", G("palette-grey-900")), Ye(I.AppBar, "darkBg", G("palette-background-paper")), Ye(I.AppBar, "darkColor", G("palette-text-primary")), Ye(I.Avatar, "defaultBg", G("palette-grey-600")), Ye(I.Button, "inheritContainedBg", G("palette-grey-800")), Ye(I.Button, "inheritContainedHoverBg", G("palette-grey-700")), Ye(I.Chip, "defaultBorder", G("palette-grey-700")), Ye(I.Chip, "defaultAvatarColor", G("palette-grey-300")), Ye(I.Chip, "defaultIconColor", G("palette-grey-300")), Ye(I.FilledInput, "bg", "rgba(255, 255, 255, 0.09)"), Ye(I.FilledInput, "hoverBg", "rgba(255, 255, 255, 0.13)"), Ye(I.FilledInput, "disabledBg", "rgba(255, 255, 255, 0.12)"), Ye(I.LinearProgress, "primaryBg", Gr(I.primary.main, 0.5)), Ye(I.LinearProgress, "secondaryBg", Gr(I.secondary.main, 0.5)), Ye(I.LinearProgress, "errorBg", Gr(I.error.main, 0.5)), Ye(I.LinearProgress, "infoBg", Gr(I.info.main, 0.5)), Ye(I.LinearProgress, "successBg", Gr(I.success.main, 0.5)), Ye(I.LinearProgress, "warningBg", Gr(I.warning.main, 0.5)), Ye(I.Skeleton, "bg", `rgba(${G("palette-text-primaryChannel")} / 0.13)`), Ye(I.Slider, "primaryTrack", Gr(I.primary.main, 0.5)), Ye(I.Slider, "secondaryTrack", Gr(I.secondary.main, 0.5)), Ye(I.Slider, "errorTrack", Gr(I.error.main, 0.5)), Ye(I.Slider, "infoTrack", Gr(I.info.main, 0.5)), Ye(I.Slider, "successTrack", Gr(I.success.main, 0.5)), Ye(I.Slider, "warningTrack", Gr(I.warning.main, 0.5));
      const W = Xx(I.background.default, 0.98);
      Ye(I.SnackbarContent, "bg", W), Ye(I.SnackbarContent, "color", Iu(() => I.getContrastText(W))), Ye(I.SpeedDialAction, "fabHoverBg", Xx(I.background.paper, 0.15)), Ye(I.StepConnector, "border", G("palette-grey-600")), Ye(I.StepContent, "border", G("palette-grey-600")), Ye(I.Switch, "defaultColor", G("palette-grey-300")), Ye(I.Switch, "defaultDisabledColor", G("palette-grey-600")), Ye(I.Switch, "primaryDisabledColor", Gr(I.primary.main, 0.55)), Ye(I.Switch, "secondaryDisabledColor", Gr(I.secondary.main, 0.55)), Ye(I.Switch, "errorDisabledColor", Gr(I.error.main, 0.55)), Ye(I.Switch, "infoDisabledColor", Gr(I.info.main, 0.55)), Ye(I.Switch, "successDisabledColor", Gr(I.success.main, 0.55)), Ye(I.Switch, "warningDisabledColor", Gr(I.warning.main, 0.55)), Ye(I.TableCell, "border", Gr(Yx(I.divider, 1), 0.68)), Ye(I.Tooltip, "bg", Yx(I.grey[700], 0.92));
    }
    Hc(I.background, "default"), Hc(I.background, "paper"), Hc(I.common, "background"), Hc(I.common, "onBackground"), Hc(I, "divider"), Object.keys(I).forEach((W) => {
      const B = I[W];
      W !== "tonalOffset" && B && typeof B == "object" && (B.main && Ye(I[W], "mainChannel", $b(jb(B.main))), B.light && Ye(I[W], "lightChannel", $b(jb(B.light))), B.dark && Ye(I[W], "darkChannel", $b(jb(B.dark))), B.contrastText && Ye(I[W], "contrastTextChannel", $b(jb(B.contrastText))), W === "text" && (Hc(I[W], "primary"), Hc(I[W], "secondary")), W === "action" && (B.active && Hc(I[W], "active"), B.selected && Hc(I[W], "selected")));
    });
  }), M = t.reduce((z, I) => Ci(z, I), M);
  const D = {
    prefix: u,
    disableCssColorScheme: s,
    shouldSkipGeneratingVar: d,
    getSelector: w8(M)
  }, {
    vars: H,
    generateThemeVars: K,
    generateStyleSheets: Q
  } = $q(M, D);
  return M.vars = H, Object.entries(M.colorSchemes[M.defaultColorScheme]).forEach(([z, I]) => {
    M[z] = I;
  }), M.generateThemeVars = K, M.generateStyleSheets = Q, M.generateSpacing = function() {
    return L$(v.spacing, hE(this));
  }, M.getColorSchemeSelector = jq(p), M.spacing = M.generateSpacing(), M.shouldSkipGeneratingVar = d, M.unstable_sxConfig = {
    ...PC,
    ...v == null ? void 0 : v.unstable_sxConfig
  }, M.unstable_sx = function(I) {
    return yf({
      sx: I,
      theme: this
    });
  }, M.toRuntimeSource = lj, M;
}
function mF(e, t, n) {
  e.colorSchemes && n && (e.colorSchemes[t] = {
    ...n !== !0 && n,
    palette: TP({
      ...n === !0 ? {} : n.palette,
      mode: t
    })
    // cast type to skip module augmentation test
  });
}
function xE(e = {}, ...t) {
  const {
    palette: n,
    cssVariables: i = !1,
    colorSchemes: s = n ? void 0 : {
      light: !0
    },
    defaultColorScheme: u = n == null ? void 0 : n.mode,
    ...d
  } = e, p = u || "light", m = s == null ? void 0 : s[p], v = {
    ...s,
    ...n ? {
      [p]: {
        ...typeof m != "boolean" && m,
        palette: n
      }
    } : void 0
  };
  if (i === !1) {
    if (!("colorSchemes" in e))
      return vk(e, ...t);
    let y = n;
    "palette" in e || v[p] && (v[p] !== !0 ? y = v[p].palette : p === "dark" && (y = {
      mode: "dark"
    }));
    const C = vk({
      ...e,
      palette: y
    }, ...t);
    return C.defaultColorScheme = p, C.colorSchemes = v, C.palette.mode === "light" && (C.colorSchemes.light = {
      ...v.light !== !0 && v.light,
      palette: C.palette
    }, mF(C, "dark", v.dark)), C.palette.mode === "dark" && (C.colorSchemes.dark = {
      ...v.dark !== !0 && v.dark,
      palette: C.palette
    }, mF(C, "light", v.light)), C;
  }
  return !n && !("light" in v) && p === "light" && (v.light = !0), R8({
    ...d,
    colorSchemes: v,
    defaultColorScheme: p,
    ...typeof i != "boolean" && i
  }, ...t);
}
function O8(e) {
  return String(e).match(/[\d.\-+]*\s*(.*)/)[1] || "";
}
function k8(e) {
  return parseFloat(e);
}
const RP = xE();
function rv() {
  const e = CE(RP);
  return process.env.NODE_ENV !== "production" && w.useDebugValue(e), e[Hu] || e;
}
function dj(e) {
  return e !== "ownerState" && e !== "theme" && e !== "sx" && e !== "as";
}
const Ya = (e) => dj(e) && e !== "classes", Be = z$({
  themeId: Hu,
  defaultTheme: RP,
  rootShouldForwardProp: Ya
});
function P8({
  theme: e,
  ...t
}) {
  const n = Hu in e ? e[Hu] : void 0;
  return /* @__PURE__ */ A.jsx(iC, {
    ...t,
    themeId: n ? Hu : void 0,
    theme: n || e
  });
}
const Qx = {
  colorSchemeStorageKey: "mui-color-scheme",
  defaultLightColorScheme: "light",
  defaultDarkColorScheme: "dark",
  modeStorageKey: "mui-mode"
}, {
  CssVarsProvider: M8
} = Lq({
  themeId: Hu,
  // @ts-ignore ignore module augmentation tests
  theme: () => xE({
    cssVariables: !0
  }),
  colorSchemeStorageKey: Qx.colorSchemeStorageKey,
  modeStorageKey: Qx.modeStorageKey,
  defaultColorScheme: {
    light: Qx.defaultLightColorScheme,
    dark: Qx.defaultDarkColorScheme
  },
  resolveTheme: (e) => {
    const t = {
      ...e,
      typography: sj(e.palette, e.typography)
    };
    return t.unstable_sx = function(i) {
      return yf({
        sx: i,
        theme: this
      });
    }, t;
  }
}), I8 = M8;
function D8({
  theme: e,
  ...t
}) {
  const n = w.useMemo(() => {
    if (typeof e == "function")
      return e;
    const i = Hu in e ? e[Hu] : e;
    return "colorSchemes" in i ? null : "vars" in i ? e : {
      ...e,
      vars: null
    };
  }, [e]);
  return n ? /* @__PURE__ */ A.jsx(P8, {
    theme: n,
    ...t
  }) : /* @__PURE__ */ A.jsx(I8, {
    theme: e,
    ...t
  });
}
function fj(e) {
  return /* @__PURE__ */ A.jsx(mP, {
    ...e,
    defaultTheme: RP,
    themeId: Hu
  });
}
process.env.NODE_ENV !== "production" && (fj.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The styles you want to apply globally.
   */
  styles: a.oneOfType([a.array, a.func, a.number, a.object, a.string, a.bool])
});
function OP(e) {
  return function(n) {
    return (
      // Pigment CSS `globalCss` support callback with theme inside an object but `GlobalStyles` support theme as a callback value.
      /* @__PURE__ */ A.jsx(fj, {
        styles: typeof e == "function" ? (i) => e({
          theme: i,
          ...n
        }) : e
      })
    );
  };
}
function N8() {
  return gP;
}
const rn = Rq;
process.env.NODE_ENV !== "production" && (a.node, a.object.isRequired);
function xn(e) {
  return Eq(e);
}
function L8(e) {
  return mn("MuiSvgIcon", e);
}
bn("MuiSvgIcon", ["root", "colorPrimary", "colorSecondary", "colorAction", "colorError", "colorDisabled", "fontSizeInherit", "fontSizeSmall", "fontSizeMedium", "fontSizeLarge"]);
const F8 = (e) => {
  const {
    color: t,
    fontSize: n,
    classes: i
  } = e, s = {
    root: ["root", t !== "inherit" && `color${Ue(t)}`, `fontSize${Ue(n)}`]
  };
  return yt(s, L8, i);
}, _8 = Be("svg", {
  name: "MuiSvgIcon",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.color !== "inherit" && t[`color${Ue(n.color)}`], t[`fontSize${Ue(n.fontSize)}`]];
  }
})(rn(({
  theme: e
}) => {
  var t, n, i, s, u, d, p, m, v, y, C, S, R, O;
  return {
    userSelect: "none",
    width: "1em",
    height: "1em",
    display: "inline-block",
    flexShrink: 0,
    transition: (s = (t = e.transitions) == null ? void 0 : t.create) == null ? void 0 : s.call(t, "fill", {
      duration: (i = (n = (e.vars ?? e).transitions) == null ? void 0 : n.duration) == null ? void 0 : i.shorter
    }),
    variants: [
      {
        props: (E) => !E.hasSvgAsChild,
        style: {
          // the <svg> will define the property that has `currentColor`
          // for example heroicons uses fill="none" and stroke="currentColor"
          fill: "currentColor"
        }
      },
      {
        props: {
          fontSize: "inherit"
        },
        style: {
          fontSize: "inherit"
        }
      },
      {
        props: {
          fontSize: "small"
        },
        style: {
          fontSize: ((d = (u = e.typography) == null ? void 0 : u.pxToRem) == null ? void 0 : d.call(u, 20)) || "1.25rem"
        }
      },
      {
        props: {
          fontSize: "medium"
        },
        style: {
          fontSize: ((m = (p = e.typography) == null ? void 0 : p.pxToRem) == null ? void 0 : m.call(p, 24)) || "1.5rem"
        }
      },
      {
        props: {
          fontSize: "large"
        },
        style: {
          fontSize: ((y = (v = e.typography) == null ? void 0 : v.pxToRem) == null ? void 0 : y.call(v, 35)) || "2.1875rem"
        }
      },
      // TODO v5 deprecate color prop, v6 remove for sx
      ...Object.entries((e.vars ?? e).palette).filter(([, E]) => E && E.main).map(([E]) => {
        var k, F;
        return {
          props: {
            color: E
          },
          style: {
            color: (F = (k = (e.vars ?? e).palette) == null ? void 0 : k[E]) == null ? void 0 : F.main
          }
        };
      }),
      {
        props: {
          color: "action"
        },
        style: {
          color: (S = (C = (e.vars ?? e).palette) == null ? void 0 : C.action) == null ? void 0 : S.active
        }
      },
      {
        props: {
          color: "disabled"
        },
        style: {
          color: (O = (R = (e.vars ?? e).palette) == null ? void 0 : R.action) == null ? void 0 : O.disabled
        }
      },
      {
        props: {
          color: "inherit"
        },
        style: {
          color: void 0
        }
      }
    ]
  };
})), P0 = /* @__PURE__ */ w.forwardRef(function(t, n) {
  const i = xn({
    props: t,
    name: "MuiSvgIcon"
  }), {
    children: s,
    className: u,
    color: d = "inherit",
    component: p = "svg",
    fontSize: m = "medium",
    htmlColor: v,
    inheritViewBox: y = !1,
    titleAccess: C,
    viewBox: S = "0 0 24 24",
    ...R
  } = i, O = /* @__PURE__ */ w.isValidElement(s) && s.type === "svg", E = {
    ...i,
    color: d,
    component: p,
    fontSize: m,
    instanceFontSize: t.fontSize,
    inheritViewBox: y,
    viewBox: S,
    hasSvgAsChild: O
  }, k = {};
  y || (k.viewBox = S);
  const F = F8(E);
  return /* @__PURE__ */ A.jsxs(_8, {
    as: p,
    className: nt(F.root, u),
    focusable: "false",
    color: v,
    "aria-hidden": C ? void 0 : !0,
    role: C ? "img" : void 0,
    ref: n,
    ...k,
    ...R,
    ...O && s.props,
    ownerState: E,
    children: [O ? s.props.children : s, C ? /* @__PURE__ */ A.jsx("title", {
      children: C
    }) : null]
  });
});
process.env.NODE_ENV !== "production" && (P0.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Node passed into the SVG element.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * You can use the `htmlColor` prop to apply a color attribute to the SVG element.
   * @default 'inherit'
   */
  color: a.oneOfType([a.oneOf(["inherit", "action", "disabled", "primary", "secondary", "error", "info", "success", "warning"]), a.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.
   * @default 'medium'
   */
  fontSize: a.oneOfType([a.oneOf(["inherit", "large", "medium", "small"]), a.string]),
  /**
   * Applies a color attribute to the SVG element.
   */
  htmlColor: a.string,
  /**
   * If `true`, the root node will inherit the custom `component`'s viewBox and the `viewBox`
   * prop will be ignored.
   * Useful when you want to reference a custom `component` and have `SvgIcon` pass that
   * `component`'s viewBox to the root node.
   * @default false
   */
  inheritViewBox: a.bool,
  /**
   * The shape-rendering attribute. The behavior of the different options is described on the
   * [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering).
   * If you are having issues with blurry icons you should investigate this prop.
   */
  shapeRendering: a.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * Provides a human-readable title for the element that contains it.
   * https://www.w3.org/TR/SVG-access/#Equivalent
   */
  titleAccess: a.string,
  /**
   * Allows you to redefine what the coordinates without units mean inside an SVG element.
   * For example, if the SVG element is 500 (width) by 200 (height),
   * and you pass viewBox="0 0 50 20",
   * this means that the coordinates inside the SVG will go from the top left corner (0,0)
   * to bottom right (50,20) and each unit will be worth 10px.
   * @default '0 0 24 24'
   */
  viewBox: a.string
});
P0.muiName = "SvgIcon";
function Fn(e, t) {
  function n(i, s) {
    return /* @__PURE__ */ A.jsx(P0, {
      "data-testid": `${t}Icon`,
      ref: s,
      ...i,
      children: e
    });
  }
  return process.env.NODE_ENV !== "production" && (n.displayName = `${t}Icon`), n.muiName = P0.muiName, /* @__PURE__ */ w.memo(/* @__PURE__ */ w.forwardRef(n));
}
function pj(e, t) {
  if (!e)
    return t;
  if (typeof e == "function" || typeof t == "function")
    return (s) => {
      const u = typeof t == "function" ? t(s) : t, d = typeof e == "function" ? e({
        ...s,
        ...u
      }) : e, p = nt(s == null ? void 0 : s.className, u == null ? void 0 : u.className, d == null ? void 0 : d.className);
      return {
        ...u,
        ...d,
        ...!!p && {
          className: p
        },
        ...(u == null ? void 0 : u.style) && (d == null ? void 0 : d.style) && {
          style: {
            ...u.style,
            ...d.style
          }
        },
        ...(u == null ? void 0 : u.sx) && (d == null ? void 0 : d.sx) && {
          sx: [...Array.isArray(u.sx) ? u.sx : [u.sx], ...Array.isArray(d.sx) ? d.sx : [d.sx]]
        }
      };
    };
  const n = t, i = nt(n == null ? void 0 : n.className, e == null ? void 0 : e.className);
  return {
    ...t,
    ...e,
    ...!!i && {
      className: i
    },
    ...(n == null ? void 0 : n.style) && (e == null ? void 0 : e.style) && {
      style: {
        ...n.style,
        ...e.style
      }
    },
    ...(n == null ? void 0 : n.sx) && (e == null ? void 0 : e.sx) && {
      sx: [...Array.isArray(n.sx) ? n.sx : [n.sx], ...Array.isArray(e.sx) ? e.sx : [e.sx]]
    }
  };
}
function Xt(e, t) {
  if (e == null) return {};
  var n = {};
  for (var i in e) if ({}.hasOwnProperty.call(e, i)) {
    if (t.indexOf(i) !== -1) continue;
    n[i] = e[i];
  }
  return n;
}
function bk(e, t) {
  return bk = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(n, i) {
    return n.__proto__ = i, n;
  }, bk(e, t);
}
function hj(e, t) {
  e.prototype = Object.create(t.prototype), e.prototype.constructor = e, bk(e, t);
}
const gF = {
  disabled: !1
};
var A8 = process.env.NODE_ENV !== "production" ? a.oneOfType([a.number, a.shape({
  enter: a.number,
  exit: a.number,
  appear: a.number
}).isRequired]) : null;
process.env.NODE_ENV !== "production" && a.oneOfType([a.string, a.shape({
  enter: a.string,
  exit: a.string,
  active: a.string
}), a.shape({
  enter: a.string,
  enterDone: a.string,
  enterActive: a.string,
  exit: a.string,
  exitDone: a.string,
  exitActive: a.string
})]);
const M0 = tr.createContext(null);
var $8 = function(t) {
  return t.scrollTop;
}, zb = "unmounted", Gp = "exited", Wp = "entering", Sg = "entered", Ck = "exiting", Qu = /* @__PURE__ */ function(e) {
  hj(t, e);
  function t(i, s) {
    var u;
    u = e.call(this, i, s) || this;
    var d = s, p = d && !d.isMounting ? i.enter : i.appear, m;
    return u.appearStatus = null, i.in ? p ? (m = Gp, u.appearStatus = Wp) : m = Sg : i.unmountOnExit || i.mountOnEnter ? m = zb : m = Gp, u.state = {
      status: m
    }, u.nextCallback = null, u;
  }
  t.getDerivedStateFromProps = function(s, u) {
    var d = s.in;
    return d && u.status === zb ? {
      status: Gp
    } : null;
  };
  var n = t.prototype;
  return n.componentDidMount = function() {
    this.updateStatus(!0, this.appearStatus);
  }, n.componentDidUpdate = function(s) {
    var u = null;
    if (s !== this.props) {
      var d = this.state.status;
      this.props.in ? d !== Wp && d !== Sg && (u = Wp) : (d === Wp || d === Sg) && (u = Ck);
    }
    this.updateStatus(!1, u);
  }, n.componentWillUnmount = function() {
    this.cancelNextCallback();
  }, n.getTimeouts = function() {
    var s = this.props.timeout, u, d, p;
    return u = d = p = s, s != null && typeof s != "number" && (u = s.exit, d = s.enter, p = s.appear !== void 0 ? s.appear : d), {
      exit: u,
      enter: d,
      appear: p
    };
  }, n.updateStatus = function(s, u) {
    if (s === void 0 && (s = !1), u !== null)
      if (this.cancelNextCallback(), u === Wp) {
        if (this.props.unmountOnExit || this.props.mountOnEnter) {
          var d = this.props.nodeRef ? this.props.nodeRef.current : Ux.findDOMNode(this);
          d && $8(d);
        }
        this.performEnter(s);
      } else
        this.performExit();
    else this.props.unmountOnExit && this.state.status === Gp && this.setState({
      status: zb
    });
  }, n.performEnter = function(s) {
    var u = this, d = this.props.enter, p = this.context ? this.context.isMounting : s, m = this.props.nodeRef ? [p] : [Ux.findDOMNode(this), p], v = m[0], y = m[1], C = this.getTimeouts(), S = p ? C.appear : C.enter;
    if (!s && !d || gF.disabled) {
      this.safeSetState({
        status: Sg
      }, function() {
        u.props.onEntered(v);
      });
      return;
    }
    this.props.onEnter(v, y), this.safeSetState({
      status: Wp
    }, function() {
      u.props.onEntering(v, y), u.onTransitionEnd(S, function() {
        u.safeSetState({
          status: Sg
        }, function() {
          u.props.onEntered(v, y);
        });
      });
    });
  }, n.performExit = function() {
    var s = this, u = this.props.exit, d = this.getTimeouts(), p = this.props.nodeRef ? void 0 : Ux.findDOMNode(this);
    if (!u || gF.disabled) {
      this.safeSetState({
        status: Gp
      }, function() {
        s.props.onExited(p);
      });
      return;
    }
    this.props.onExit(p), this.safeSetState({
      status: Ck
    }, function() {
      s.props.onExiting(p), s.onTransitionEnd(d.exit, function() {
        s.safeSetState({
          status: Gp
        }, function() {
          s.props.onExited(p);
        });
      });
    });
  }, n.cancelNextCallback = function() {
    this.nextCallback !== null && (this.nextCallback.cancel(), this.nextCallback = null);
  }, n.safeSetState = function(s, u) {
    u = this.setNextCallback(u), this.setState(s, u);
  }, n.setNextCallback = function(s) {
    var u = this, d = !0;
    return this.nextCallback = function(p) {
      d && (d = !1, u.nextCallback = null, s(p));
    }, this.nextCallback.cancel = function() {
      d = !1;
    }, this.nextCallback;
  }, n.onTransitionEnd = function(s, u) {
    this.setNextCallback(u);
    var d = this.props.nodeRef ? this.props.nodeRef.current : Ux.findDOMNode(this), p = s == null && !this.props.addEndListener;
    if (!d || p) {
      setTimeout(this.nextCallback, 0);
      return;
    }
    if (this.props.addEndListener) {
      var m = this.props.nodeRef ? [this.nextCallback] : [d, this.nextCallback], v = m[0], y = m[1];
      this.props.addEndListener(v, y);
    }
    s != null && setTimeout(this.nextCallback, s);
  }, n.render = function() {
    var s = this.state.status;
    if (s === zb)
      return null;
    var u = this.props, d = u.children;
    u.in, u.mountOnEnter, u.unmountOnExit, u.appear, u.enter, u.exit, u.timeout, u.addEndListener, u.onEnter, u.onEntering, u.onEntered, u.onExit, u.onExiting, u.onExited, u.nodeRef;
    var p = Xt(u, ["children", "in", "mountOnEnter", "unmountOnExit", "appear", "enter", "exit", "timeout", "addEndListener", "onEnter", "onEntering", "onEntered", "onExit", "onExiting", "onExited", "nodeRef"]);
    return (
      // allows for nested Transitions
      /* @__PURE__ */ tr.createElement(M0.Provider, {
        value: null
      }, typeof d == "function" ? d(s, p) : tr.cloneElement(tr.Children.only(d), p))
    );
  }, t;
}(tr.Component);
Qu.contextType = M0;
Qu.propTypes = process.env.NODE_ENV !== "production" ? {
  /**
   * A React reference to DOM element that need to transition:
   * https://stackoverflow.com/a/51127130/4671932
   *
   *   - When `nodeRef` prop is used, `node` is not passed to callback functions
   *      (e.g. `onEnter`) because user already has direct access to the node.
   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new
   *     `nodeRef` need to be provided to `Transition` with changed `key` prop
   *     (see
   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).
   */
  nodeRef: a.shape({
    current: typeof Element > "u" ? a.any : function(e, t, n, i, s, u) {
      var d = e[t];
      return a.instanceOf(d && "ownerDocument" in d ? d.ownerDocument.defaultView.Element : Element)(e, t, n, i, s, u);
    }
  }),
  /**
   * A `function` child can be used instead of a React element. This function is
   * called with the current transition status (`'entering'`, `'entered'`,
   * `'exiting'`, `'exited'`), which can be used to apply context
   * specific props to a component.
   *
   * ```jsx
   * <Transition in={this.state.in} timeout={150}>
   *   {state => (
   *     <MyComponent className={`fade fade-${state}`} />
   *   )}
   * </Transition>
   * ```
   */
  children: a.oneOfType([a.func.isRequired, a.element.isRequired]).isRequired,
  /**
   * Show the component; triggers the enter or exit states
   */
  in: a.bool,
  /**
   * By default the child component is mounted immediately along with
   * the parent `Transition` component. If you want to "lazy mount" the component on the
   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay
   * mounted, even on "exited", unless you also specify `unmountOnExit`.
   */
  mountOnEnter: a.bool,
  /**
   * By default the child component stays mounted after it reaches the `'exited'` state.
   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.
   */
  unmountOnExit: a.bool,
  /**
   * By default the child component does not perform the enter transition when
   * it first mounts, regardless of the value of `in`. If you want this
   * behavior, set both `appear` and `in` to `true`.
   *
   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop
   * > only adds an additional enter transition. However, in the
   * > `<CSSTransition>` component that first enter transition does result in
   * > additional `.appear-*` classes, that way you can choose to style it
   * > differently.
   */
  appear: a.bool,
  /**
   * Enable or disable enter transitions.
   */
  enter: a.bool,
  /**
   * Enable or disable exit transitions.
   */
  exit: a.bool,
  /**
   * The duration of the transition, in milliseconds.
   * Required unless `addEndListener` is provided.
   *
   * You may specify a single timeout for all transitions:
   *
   * ```jsx
   * timeout={500}
   * ```
   *
   * or individually:
   *
   * ```jsx
   * timeout={{
   *  appear: 500,
   *  enter: 300,
   *  exit: 500,
   * }}
   * ```
   *
   * - `appear` defaults to the value of `enter`
   * - `enter` defaults to `0`
   * - `exit` defaults to `0`
   *
   * @type {number | { enter?: number, exit?: number, appear?: number }}
   */
  timeout: function(t) {
    var n = A8;
    t.addEndListener || (n = n.isRequired);
    for (var i = arguments.length, s = new Array(i > 1 ? i - 1 : 0), u = 1; u < i; u++)
      s[u - 1] = arguments[u];
    return n.apply(void 0, [t].concat(s));
  },
  /**
   * Add a custom transition end trigger. Called with the transitioning
   * DOM node and a `done` callback. Allows for more fine grained transition end
   * logic. Timeouts are still used as a fallback if provided.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * ```jsx
   * addEndListener={(node, done) => {
   *   // use the css transitionend event to mark the finish of a transition
   *   node.addEventListener('transitionend', done, false);
   * }}
   * ```
   */
  addEndListener: a.func,
  /**
   * Callback fired before the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEnter: a.func,
  /**
   * Callback fired after the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntering: a.func,
  /**
   * Callback fired after the "entered" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEntered: a.func,
  /**
   * Callback fired before the "exiting" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExit: a.func,
  /**
   * Callback fired after the "exiting" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExiting: a.func,
  /**
   * Callback fired after the "exited" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExited: a.func
} : {};
function fg() {
}
Qu.defaultProps = {
  in: !1,
  mountOnEnter: !1,
  unmountOnExit: !1,
  appear: !1,
  enter: !0,
  exit: !0,
  onEnter: fg,
  onEntering: fg,
  onEntered: fg,
  onExit: fg,
  onExiting: fg,
  onExited: fg
};
Qu.UNMOUNTED = zb;
Qu.EXITED = Gp;
Qu.ENTERING = Wp;
Qu.ENTERED = Sg;
Qu.EXITING = Ck;
function j8(e) {
  if (e === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return e;
}
function kP(e, t) {
  var n = function(u) {
    return t && w.isValidElement(u) ? t(u) : u;
  }, i = /* @__PURE__ */ Object.create(null);
  return e && w.Children.map(e, function(s) {
    return s;
  }).forEach(function(s) {
    i[s.key] = n(s);
  }), i;
}
function z8(e, t) {
  e = e || {}, t = t || {};
  function n(y) {
    return y in t ? t[y] : e[y];
  }
  var i = /* @__PURE__ */ Object.create(null), s = [];
  for (var u in e)
    u in t ? s.length && (i[u] = s, s = []) : s.push(u);
  var d, p = {};
  for (var m in t) {
    if (i[m])
      for (d = 0; d < i[m].length; d++) {
        var v = i[m][d];
        p[i[m][d]] = n(v);
      }
    p[m] = n(m);
  }
  for (d = 0; d < s.length; d++)
    p[s[d]] = n(s[d]);
  return p;
}
function Qp(e, t, n) {
  return n[t] != null ? n[t] : e.props[t];
}
function H8(e, t) {
  return kP(e.children, function(n) {
    return w.cloneElement(n, {
      onExited: t.bind(null, n),
      in: !0,
      appear: Qp(n, "appear", e),
      enter: Qp(n, "enter", e),
      exit: Qp(n, "exit", e)
    });
  });
}
function V8(e, t, n) {
  var i = kP(e.children), s = z8(t, i);
  return Object.keys(s).forEach(function(u) {
    var d = s[u];
    if (w.isValidElement(d)) {
      var p = u in t, m = u in i, v = t[u], y = w.isValidElement(v) && !v.props.in;
      m && (!p || y) ? s[u] = w.cloneElement(d, {
        onExited: n.bind(null, d),
        in: !0,
        exit: Qp(d, "exit", e),
        enter: Qp(d, "enter", e)
      }) : !m && p && !y ? s[u] = w.cloneElement(d, {
        in: !1
      }) : m && p && w.isValidElement(v) && (s[u] = w.cloneElement(d, {
        onExited: n.bind(null, d),
        in: v.props.in,
        exit: Qp(d, "exit", e),
        enter: Qp(d, "enter", e)
      }));
    }
  }), s;
}
var B8 = Object.values || function(e) {
  return Object.keys(e).map(function(t) {
    return e[t];
  });
}, U8 = {
  component: "div",
  childFactory: function(t) {
    return t;
  }
}, PP = /* @__PURE__ */ function(e) {
  hj(t, e);
  function t(i, s) {
    var u;
    u = e.call(this, i, s) || this;
    var d = u.handleExited.bind(j8(u));
    return u.state = {
      contextValue: {
        isMounting: !0
      },
      handleExited: d,
      firstRender: !0
    }, u;
  }
  var n = t.prototype;
  return n.componentDidMount = function() {
    this.mounted = !0, this.setState({
      contextValue: {
        isMounting: !1
      }
    });
  }, n.componentWillUnmount = function() {
    this.mounted = !1;
  }, t.getDerivedStateFromProps = function(s, u) {
    var d = u.children, p = u.handleExited, m = u.firstRender;
    return {
      children: m ? H8(s, p) : V8(s, d, p),
      firstRender: !1
    };
  }, n.handleExited = function(s, u) {
    var d = kP(this.props.children);
    s.key in d || (s.props.onExited && s.props.onExited(u), this.mounted && this.setState(function(p) {
      var m = J({}, p.children);
      return delete m[s.key], {
        children: m
      };
    }));
  }, n.render = function() {
    var s = this.props, u = s.component, d = s.childFactory, p = Xt(s, ["component", "childFactory"]), m = this.state.contextValue, v = B8(this.state.children).map(d);
    return delete p.appear, delete p.enter, delete p.exit, u === null ? /* @__PURE__ */ tr.createElement(M0.Provider, {
      value: m
    }, v) : /* @__PURE__ */ tr.createElement(M0.Provider, {
      value: m
    }, /* @__PURE__ */ tr.createElement(u, p, v));
  }, t;
}(tr.Component);
PP.propTypes = process.env.NODE_ENV !== "production" ? {
  /**
   * `<TransitionGroup>` renders a `<div>` by default. You can change this
   * behavior by providing a `component` prop.
   * If you use React v16+ and would like to avoid a wrapping `<div>` element
   * you can pass in `component={null}`. This is useful if the wrapping div
   * borks your css styles.
   */
  component: a.any,
  /**
   * A set of `<Transition>` components, that are toggled `in` and out as they
   * leave. the `<TransitionGroup>` will inject specific transition props, so
   * remember to spread them through if you are wrapping the `<Transition>` as
   * with our `<Fade>` example.
   *
   * While this component is meant for multiple `Transition` or `CSSTransition`
   * children, sometimes you may want to have a single transition child with
   * content that you want to be transitioned out and in when you change it
   * (e.g. routes, images etc.) In that case you can change the `key` prop of
   * the transition child as you change its content, this will cause
   * `TransitionGroup` to transition the child out and back in.
   */
  children: a.node,
  /**
   * A convenience prop that enables or disables appear animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  appear: a.bool,
  /**
   * A convenience prop that enables or disables enter animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  enter: a.bool,
  /**
   * A convenience prop that enables or disables exit animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  exit: a.bool,
  /**
   * You may need to apply reactive updates to a child as it is exiting.
   * This is generally done by using `cloneElement` however in the case of an exiting
   * child the element has already been removed and not accessible to the consumer.
   *
   * If you do need to update a child as it leaves you can provide a `childFactory`
   * to wrap every child, even the ones that are leaving.
   *
   * @type Function(child: ReactElement) -> ReactElement
   */
  childFactory: a.func
} : {};
PP.defaultProps = U8;
const mj = (e) => e.scrollTop;
function I0(e, t) {
  const {
    timeout: n,
    easing: i,
    style: s = {}
  } = e;
  return {
    duration: s.transitionDuration ?? (typeof n == "number" ? n : n[t.mode] || 0),
    easing: s.transitionTimingFunction ?? (typeof i == "object" ? i[t.mode] : i),
    delay: s.transitionDelay
  };
}
function G8(e) {
  return mn("MuiPaper", e);
}
bn("MuiPaper", ["root", "rounded", "outlined", "elevation", "elevation0", "elevation1", "elevation2", "elevation3", "elevation4", "elevation5", "elevation6", "elevation7", "elevation8", "elevation9", "elevation10", "elevation11", "elevation12", "elevation13", "elevation14", "elevation15", "elevation16", "elevation17", "elevation18", "elevation19", "elevation20", "elevation21", "elevation22", "elevation23", "elevation24"]);
const W8 = (e) => {
  const {
    square: t,
    elevation: n,
    variant: i,
    classes: s
  } = e, u = {
    root: ["root", i, !t && "rounded", i === "elevation" && `elevation${n}`]
  };
  return yt(u, G8, s);
}, q8 = Be("div", {
  name: "MuiPaper",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[n.variant], !n.square && t.rounded, n.variant === "elevation" && t[`elevation${n.elevation}`]];
  }
})(rn(({
  theme: e
}) => ({
  backgroundColor: (e.vars || e).palette.background.paper,
  color: (e.vars || e).palette.text.primary,
  transition: e.transitions.create("box-shadow"),
  variants: [{
    props: ({
      ownerState: t
    }) => !t.square,
    style: {
      borderRadius: e.shape.borderRadius
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      border: `1px solid ${(e.vars || e).palette.divider}`
    }
  }, {
    props: {
      variant: "elevation"
    },
    style: {
      boxShadow: "var(--Paper-shadow)",
      backgroundImage: "var(--Paper-overlay)"
    }
  }]
}))), bs = /* @__PURE__ */ w.forwardRef(function(t, n) {
  var R;
  const i = xn({
    props: t,
    name: "MuiPaper"
  }), s = rv(), {
    className: u,
    component: d = "div",
    elevation: p = 1,
    square: m = !1,
    variant: v = "elevation",
    ...y
  } = i, C = {
    ...i,
    component: d,
    elevation: p,
    square: m,
    variant: v
  }, S = W8(C);
  return process.env.NODE_ENV !== "production" && s.shadows[p] === void 0 && console.error([`MUI: The elevation provided <Paper elevation={${p}}> is not available in the theme.`, `Please make sure that \`theme.shadows[${p}]\` is defined.`].join(`
`)), /* @__PURE__ */ A.jsx(q8, {
    as: d,
    ownerState: C,
    className: nt(S.root, u),
    ref: n,
    ...y,
    style: {
      ...v === "elevation" && {
        "--Paper-shadow": (s.vars || s).shadows[p],
        ...s.vars && {
          "--Paper-overlay": (R = s.vars.overlays) == null ? void 0 : R[p]
        },
        ...!s.vars && s.palette.mode === "dark" && {
          "--Paper-overlay": `linear-gradient(${$n("#fff", yk(p))}, ${$n("#fff", yk(p))})`
        }
      },
      ...y.style
    }
  });
});
process.env.NODE_ENV !== "production" && (bs.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * Shadow depth, corresponds to `dp` in the spec.
   * It accepts values between 0 and 24 inclusive.
   * @default 1
   */
  elevation: Gl(Dg, (e) => {
    const {
      elevation: t,
      variant: n
    } = e;
    return t > 0 && n === "outlined" ? new Error(`MUI: Combining \`elevation={${t}}\` with \`variant="${n}"\` has no effect. Either use \`elevation={0}\` or use a different \`variant\`.`) : null;
  }),
  /**
   * If `true`, rounded corners are disabled.
   * @default false
   */
  square: a.bool,
  /**
   * @ignore
   */
  style: a.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The variant to use.
   * @default 'elevation'
   */
  variant: a.oneOfType([a.oneOf(["elevation", "outlined"]), a.string])
});
function yn(e, t) {
  const {
    className: n,
    elementType: i,
    ownerState: s,
    externalForwardedProps: u,
    internalForwardedProps: d,
    shouldForwardComponentProp: p = !1,
    ...m
  } = t, {
    component: v,
    slots: y = {
      [e]: void 0
    },
    slotProps: C = {
      [e]: void 0
    },
    ...S
  } = u, R = y[e] || i, O = Z$(C[e], s), {
    props: {
      component: E,
      ...k
    },
    internalRef: F
  } = J$({
    className: n,
    ...m,
    externalForwardedProps: e === "root" ? S : void 0,
    externalSlotProps: O
  }), _ = Vr(F, O == null ? void 0 : O.ref, t.ref), L = e === "root" ? E || v : E, M = X$(R, {
    ...e === "root" && !v && !y[e] && d,
    ...e !== "root" && !y[e] && d,
    ...k,
    ...L && !p && {
      as: L
    },
    ...L && p && {
      component: L
    },
    ref: _
  }, s);
  return [R, M];
}
class D0 {
  constructor() {
    Mu(this, "mountEffect", () => {
      this.shouldMount && !this.didMount && this.ref.current !== null && (this.didMount = !0, this.mounted.resolve());
    });
    this.ref = {
      current: null
    }, this.mounted = null, this.didMount = !1, this.shouldMount = !1, this.setShouldMount = null;
  }
  /** React ref to the ripple instance */
  /** If the ripple component should be mounted */
  /** Promise that resolves when the ripple component is mounted */
  /** If the ripple component has been mounted */
  /** React state hook setter */
  static create() {
    return new D0();
  }
  static use() {
    const t = sl(D0.create).current, [n, i] = w.useState(!1);
    return t.shouldMount = n, t.setShouldMount = i, w.useEffect(t.mountEffect, [n]), t;
  }
  mount() {
    return this.mounted || (this.mounted = Y8(), this.shouldMount = !0, this.setShouldMount(this.shouldMount)), this.mounted;
  }
  /* Ripple API */
  start(...t) {
    this.mount().then(() => {
      var n;
      return (n = this.ref.current) == null ? void 0 : n.start(...t);
    });
  }
  stop(...t) {
    this.mount().then(() => {
      var n;
      return (n = this.ref.current) == null ? void 0 : n.stop(...t);
    });
  }
  pulsate(...t) {
    this.mount().then(() => {
      var n;
      return (n = this.ref.current) == null ? void 0 : n.pulsate(...t);
    });
  }
}
function K8() {
  return D0.use();
}
function Y8() {
  let e, t;
  const n = new Promise((i, s) => {
    e = i, t = s;
  });
  return n.resolve = e, n.reject = t, n;
}
function gj(e) {
  const {
    className: t,
    classes: n,
    pulsate: i = !1,
    rippleX: s,
    rippleY: u,
    rippleSize: d,
    in: p,
    onExited: m,
    timeout: v
  } = e, [y, C] = w.useState(!1), S = nt(t, n.ripple, n.rippleVisible, i && n.ripplePulsate), R = {
    width: d,
    height: d,
    top: -(d / 2) + u,
    left: -(d / 2) + s
  }, O = nt(n.child, y && n.childLeaving, i && n.childPulsate);
  return !p && !y && C(!0), w.useEffect(() => {
    if (!p && m != null) {
      const E = setTimeout(m, v);
      return () => {
        clearTimeout(E);
      };
    }
  }, [m, p, v]), /* @__PURE__ */ A.jsx("span", {
    className: S,
    style: R,
    children: /* @__PURE__ */ A.jsx("span", {
      className: O
    })
  });
}
process.env.NODE_ENV !== "production" && (gj.propTypes = {
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object.isRequired,
  className: a.string,
  /**
   * @ignore - injected from TransitionGroup
   */
  in: a.bool,
  /**
   * @ignore - injected from TransitionGroup
   */
  onExited: a.func,
  /**
   * If `true`, the ripple pulsates, typically indicating the keyboard focus state of an element.
   */
  pulsate: a.bool,
  /**
   * Diameter of the ripple.
   */
  rippleSize: a.number,
  /**
   * Horizontal position of the ripple center.
   */
  rippleX: a.number,
  /**
   * Vertical position of the ripple center.
   */
  rippleY: a.number,
  /**
   * exit delay
   */
  timeout: a.number.isRequired
});
const Ys = bn("MuiTouchRipple", ["root", "ripple", "rippleVisible", "ripplePulsate", "child", "childLeaving", "childPulsate"]), Sk = 550, X8 = 80, Q8 = Xu`
  0% {
    transform: scale(0);
    opacity: 0.1;
  }

  100% {
    transform: scale(1);
    opacity: 0.3;
  }
`, J8 = Xu`
  0% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
`, Z8 = Xu`
  0% {
    transform: scale(1);
  }

  50% {
    transform: scale(0.92);
  }

  100% {
    transform: scale(1);
  }
`, e9 = Be("span", {
  name: "MuiTouchRipple",
  slot: "Root"
})({
  overflow: "hidden",
  pointerEvents: "none",
  position: "absolute",
  zIndex: 0,
  top: 0,
  right: 0,
  bottom: 0,
  left: 0,
  borderRadius: "inherit"
}), t9 = Be(gj, {
  name: "MuiTouchRipple",
  slot: "Ripple"
})`
  opacity: 0;
  position: absolute;

  &.${Ys.rippleVisible} {
    opacity: 0.3;
    transform: scale(1);
    animation-name: ${Q8};
    animation-duration: ${Sk}ms;
    animation-timing-function: ${({
  theme: e
}) => e.transitions.easing.easeInOut};
  }

  &.${Ys.ripplePulsate} {
    animation-duration: ${({
  theme: e
}) => e.transitions.duration.shorter}ms;
  }

  & .${Ys.child} {
    opacity: 1;
    display: block;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    background-color: currentColor;
  }

  & .${Ys.childLeaving} {
    opacity: 0;
    animation-name: ${J8};
    animation-duration: ${Sk}ms;
    animation-timing-function: ${({
  theme: e
}) => e.transitions.easing.easeInOut};
  }

  & .${Ys.childPulsate} {
    position: absolute;
    /* @noflip */
    left: 0px;
    top: 0;
    animation-name: ${Z8};
    animation-duration: 2500ms;
    animation-timing-function: ${({
  theme: e
}) => e.transitions.easing.easeInOut};
    animation-iteration-count: infinite;
    animation-delay: 200ms;
  }
`, vj = /* @__PURE__ */ w.forwardRef(function(t, n) {
  const i = xn({
    props: t,
    name: "MuiTouchRipple"
  }), {
    center: s = !1,
    classes: u = {},
    className: d,
    ...p
  } = i, [m, v] = w.useState([]), y = w.useRef(0), C = w.useRef(null);
  w.useEffect(() => {
    C.current && (C.current(), C.current = null);
  }, [m]);
  const S = w.useRef(!1), R = ps(), O = w.useRef(null), E = w.useRef(null), k = w.useCallback((M) => {
    const {
      pulsate: D,
      rippleX: H,
      rippleY: K,
      rippleSize: Q,
      cb: z
    } = M;
    v((I) => [...I, /* @__PURE__ */ A.jsx(t9, {
      classes: {
        ripple: nt(u.ripple, Ys.ripple),
        rippleVisible: nt(u.rippleVisible, Ys.rippleVisible),
        ripplePulsate: nt(u.ripplePulsate, Ys.ripplePulsate),
        child: nt(u.child, Ys.child),
        childLeaving: nt(u.childLeaving, Ys.childLeaving),
        childPulsate: nt(u.childPulsate, Ys.childPulsate)
      },
      timeout: Sk,
      pulsate: D,
      rippleX: H,
      rippleY: K,
      rippleSize: Q
    }, y.current)]), y.current += 1, C.current = z;
  }, [u]), F = w.useCallback((M = {}, D = {}, H = () => {
  }) => {
    const {
      pulsate: K = !1,
      center: Q = s || D.pulsate,
      fakeElement: z = !1
      // For test purposes
    } = D;
    if ((M == null ? void 0 : M.type) === "mousedown" && S.current) {
      S.current = !1;
      return;
    }
    (M == null ? void 0 : M.type) === "touchstart" && (S.current = !0);
    const I = z ? null : E.current, G = I ? I.getBoundingClientRect() : {
      width: 0,
      height: 0,
      left: 0,
      top: 0
    };
    let W, B, ee;
    if (Q || M === void 0 || M.clientX === 0 && M.clientY === 0 || !M.clientX && !M.touches)
      W = Math.round(G.width / 2), B = Math.round(G.height / 2);
    else {
      const {
        clientX: U,
        clientY: q
      } = M.touches && M.touches.length > 0 ? M.touches[0] : M;
      W = Math.round(U - G.left), B = Math.round(q - G.top);
    }
    if (Q)
      ee = Math.sqrt((2 * G.width ** 2 + G.height ** 2) / 3), ee % 2 === 0 && (ee += 1);
    else {
      const U = Math.max(Math.abs((I ? I.clientWidth : 0) - W), W) * 2 + 2, q = Math.max(Math.abs((I ? I.clientHeight : 0) - B), B) * 2 + 2;
      ee = Math.sqrt(U ** 2 + q ** 2);
    }
    M != null && M.touches ? O.current === null && (O.current = () => {
      k({
        pulsate: K,
        rippleX: W,
        rippleY: B,
        rippleSize: ee,
        cb: H
      });
    }, R.start(X8, () => {
      O.current && (O.current(), O.current = null);
    })) : k({
      pulsate: K,
      rippleX: W,
      rippleY: B,
      rippleSize: ee,
      cb: H
    });
  }, [s, k, R]), _ = w.useCallback(() => {
    F({}, {
      pulsate: !0
    });
  }, [F]), L = w.useCallback((M, D) => {
    if (R.clear(), (M == null ? void 0 : M.type) === "touchend" && O.current) {
      O.current(), O.current = null, R.start(0, () => {
        L(M, D);
      });
      return;
    }
    O.current = null, v((H) => H.length > 0 ? H.slice(1) : H), C.current = D;
  }, [R]);
  return w.useImperativeHandle(n, () => ({
    pulsate: _,
    start: F,
    stop: L
  }), [_, F, L]), /* @__PURE__ */ A.jsx(e9, {
    className: nt(Ys.root, u.root, d),
    ref: E,
    ...p,
    children: /* @__PURE__ */ A.jsx(PP, {
      component: null,
      exit: !0,
      children: m
    })
  });
});
process.env.NODE_ENV !== "production" && (vj.propTypes = {
  /**
   * If `true`, the ripple starts at the center of the component
   * rather than at the point of interaction.
   */
  center: a.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string
});
function n9(e) {
  return mn("MuiButtonBase", e);
}
const r9 = bn("MuiButtonBase", ["root", "disabled", "focusVisible"]), o9 = (e) => {
  const {
    disabled: t,
    focusVisible: n,
    focusVisibleClassName: i,
    classes: s
  } = e, d = yt({
    root: ["root", t && "disabled", n && "focusVisible"]
  }, n9, s);
  return n && i && (d.root += ` ${i}`), d;
}, i9 = Be("button", {
  name: "MuiButtonBase",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({
  display: "inline-flex",
  alignItems: "center",
  justifyContent: "center",
  position: "relative",
  boxSizing: "border-box",
  WebkitTapHighlightColor: "transparent",
  backgroundColor: "transparent",
  // Reset default value
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0,
  border: 0,
  margin: 0,
  // Remove the margin in Safari
  borderRadius: 0,
  padding: 0,
  // Remove the padding in Firefox
  cursor: "pointer",
  userSelect: "none",
  verticalAlign: "middle",
  MozAppearance: "none",
  // Reset
  WebkitAppearance: "none",
  // Reset
  textDecoration: "none",
  // So we take precedent over the style of a native <a /> element.
  color: "inherit",
  "&::-moz-focus-inner": {
    borderStyle: "none"
    // Remove Firefox dotted outline.
  },
  [`&.${r9.disabled}`]: {
    pointerEvents: "none",
    // Disable link interactions
    cursor: "default"
  },
  "@media print": {
    colorAdjust: "exact"
  }
}), Yc = /* @__PURE__ */ w.forwardRef(function(t, n) {
  const i = xn({
    props: t,
    name: "MuiButtonBase"
  }), {
    action: s,
    centerRipple: u = !1,
    children: d,
    className: p,
    component: m = "button",
    disabled: v = !1,
    disableRipple: y = !1,
    disableTouchRipple: C = !1,
    focusRipple: S = !1,
    focusVisibleClassName: R,
    LinkComponent: O = "a",
    onBlur: E,
    onClick: k,
    onContextMenu: F,
    onDragLeave: _,
    onFocus: L,
    onFocusVisible: M,
    onKeyDown: D,
    onKeyUp: H,
    onMouseDown: K,
    onMouseLeave: Q,
    onMouseUp: z,
    onTouchEnd: I,
    onTouchMove: G,
    onTouchStart: W,
    tabIndex: B = 0,
    TouchRippleProps: ee,
    touchRippleRef: U,
    type: q,
    ...Y
  } = i, ne = w.useRef(null), re = K8(), X = Vr(re.ref, U), [j, ie] = w.useState(!1);
  v && j && ie(!1), w.useImperativeHandle(s, () => ({
    focusVisible: () => {
      ie(!0), ne.current.focus();
    }
  }), []);
  const fe = re.shouldMount && !y && !v;
  w.useEffect(() => {
    j && S && !y && re.pulsate();
  }, [y, S, j, re]);
  const ce = Vc(re, "start", K, C), me = Vc(re, "stop", F, C), ge = Vc(re, "stop", _, C), de = Vc(re, "stop", z, C), pe = Vc(re, "stop", (ot) => {
    j && ot.preventDefault(), Q && Q(ot);
  }, C), be = Vc(re, "start", W, C), Ce = Vc(re, "stop", I, C), Re = Vc(re, "stop", G, C), ue = Vc(re, "stop", (ot) => {
    O0(ot.target) || ie(!1), E && E(ot);
  }, !1), we = Nn((ot) => {
    ne.current || (ne.current = ot.currentTarget), O0(ot.target) && (ie(!0), M && M(ot)), L && L(ot);
  }), _e = () => {
    const ot = ne.current;
    return m && m !== "button" && !(ot.tagName === "A" && ot.href);
  }, He = Nn((ot) => {
    S && !ot.repeat && j && ot.key === " " && re.stop(ot, () => {
      re.start(ot);
    }), ot.target === ot.currentTarget && _e() && ot.key === " " && ot.preventDefault(), D && D(ot), ot.target === ot.currentTarget && _e() && ot.key === "Enter" && !v && (ot.preventDefault(), k && k(ot));
  }), et = Nn((ot) => {
    S && ot.key === " " && j && !ot.defaultPrevented && re.stop(ot, () => {
      re.pulsate(ot);
    }), H && H(ot), k && ot.target === ot.currentTarget && _e() && ot.key === " " && !ot.defaultPrevented && k(ot);
  });
  let Ne = m;
  Ne === "button" && (Y.href || Y.to) && (Ne = O);
  const rt = {};
  Ne === "button" ? (rt.type = q === void 0 ? "button" : q, rt.disabled = v) : (!Y.href && !Y.to && (rt.role = "button"), v && (rt["aria-disabled"] = v));
  const it = Vr(n, ne), wt = {
    ...i,
    centerRipple: u,
    component: m,
    disabled: v,
    disableRipple: y,
    disableTouchRipple: C,
    focusRipple: S,
    tabIndex: B,
    focusVisible: j
  }, gt = o9(wt);
  return /* @__PURE__ */ A.jsxs(i9, {
    as: Ne,
    className: nt(gt.root, p),
    ownerState: wt,
    onBlur: ue,
    onClick: k,
    onContextMenu: me,
    onFocus: we,
    onKeyDown: He,
    onKeyUp: et,
    onMouseDown: ce,
    onMouseLeave: pe,
    onMouseUp: de,
    onDragLeave: ge,
    onTouchEnd: Ce,
    onTouchMove: Re,
    onTouchStart: be,
    ref: it,
    tabIndex: v ? -1 : B,
    type: q,
    ...rt,
    ...Y,
    children: [d, fe ? /* @__PURE__ */ A.jsx(vj, {
      ref: X,
      center: u,
      ...ee
    }) : null]
  });
});
function Vc(e, t, n, i = !1) {
  return Nn((s) => (n && n(s), i || e[t](s), !0));
}
process.env.NODE_ENV !== "production" && (Yc.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A ref for imperative actions.
   * It currently only supports `focusVisible()` action.
   */
  action: Ea,
  /**
   * If `true`, the ripples are centered.
   * They won't start at the cursor interaction position.
   * @default false
   */
  centerRipple: a.bool,
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: yP,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: a.bool,
  /**
   * If `true`, the ripple effect is disabled.
   *
   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
   * @default false
   */
  disableRipple: a.bool,
  /**
   * If `true`, the touch ripple effect is disabled.
   * @default false
   */
  disableTouchRipple: a.bool,
  /**
   * If `true`, the base button will have a keyboard focus ripple.
   * @default false
   */
  focusRipple: a.bool,
  /**
   * This prop can help identify which element has keyboard focus.
   * The class name will be applied when the element gains the focus through keyboard interaction.
   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).
   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).
   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components
   * if needed.
   */
  focusVisibleClassName: a.string,
  /**
   * @ignore
   */
  href: a.any,
  /**
   * The component used to render a link when the `href` prop is provided.
   * @default 'a'
   */
  LinkComponent: a.elementType,
  /**
   * @ignore
   */
  onBlur: a.func,
  /**
   * @ignore
   */
  onClick: a.func,
  /**
   * @ignore
   */
  onContextMenu: a.func,
  /**
   * @ignore
   */
  onDragLeave: a.func,
  /**
   * @ignore
   */
  onFocus: a.func,
  /**
   * Callback fired when the component is focused with a keyboard.
   * We trigger a `onFocus` callback too.
   */
  onFocusVisible: a.func,
  /**
   * @ignore
   */
  onKeyDown: a.func,
  /**
   * @ignore
   */
  onKeyUp: a.func,
  /**
   * @ignore
   */
  onMouseDown: a.func,
  /**
   * @ignore
   */
  onMouseLeave: a.func,
  /**
   * @ignore
   */
  onMouseUp: a.func,
  /**
   * @ignore
   */
  onTouchEnd: a.func,
  /**
   * @ignore
   */
  onTouchMove: a.func,
  /**
   * @ignore
   */
  onTouchStart: a.func,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * @default 0
   */
  tabIndex: a.number,
  /**
   * Props applied to the `TouchRipple` element.
   */
  TouchRippleProps: a.object,
  /**
   * A ref that points to the `TouchRipple` element.
   */
  touchRippleRef: a.oneOfType([a.func, a.shape({
    current: a.shape({
      pulsate: a.func.isRequired,
      start: a.func.isRequired,
      stop: a.func.isRequired
    })
  })]),
  /**
   * @ignore
   */
  type: a.oneOfType([a.oneOf(["button", "reset", "submit"]), a.string])
});
function a9(e) {
  return typeof e.main == "string";
}
function s9(e, t = []) {
  if (!a9(e))
    return !1;
  for (const n of t)
    if (!e.hasOwnProperty(n) || typeof e[n] != "string")
      return !1;
  return !0;
}
function to(e = []) {
  return ([, t]) => t && s9(t, e);
}
function l9(e) {
  return mn("MuiAlert", e);
}
const vF = bn("MuiAlert", ["root", "action", "icon", "message", "filled", "colorSuccess", "colorInfo", "colorWarning", "colorError", "filledSuccess", "filledInfo", "filledWarning", "filledError", "outlined", "outlinedSuccess", "outlinedInfo", "outlinedWarning", "outlinedError", "standard", "standardSuccess", "standardInfo", "standardWarning", "standardError"]);
function u9(e) {
  return mn("MuiCircularProgress", e);
}
bn("MuiCircularProgress", ["root", "determinate", "indeterminate", "colorPrimary", "colorSecondary", "svg", "circle", "circleDeterminate", "circleIndeterminate", "circleDisableShrink"]);
const Jd = 44, wk = Xu`
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
`, xk = Xu`
  0% {
    stroke-dasharray: 1px, 200px;
    stroke-dashoffset: 0;
  }

  50% {
    stroke-dasharray: 100px, 200px;
    stroke-dashoffset: -15px;
  }

  100% {
    stroke-dasharray: 1px, 200px;
    stroke-dashoffset: -126px;
  }
`, c9 = typeof wk != "string" ? xf`
        animation: ${wk} 1.4s linear infinite;
      ` : null, d9 = typeof xk != "string" ? xf`
        animation: ${xk} 1.4s ease-in-out infinite;
      ` : null, f9 = (e) => {
  const {
    classes: t,
    variant: n,
    color: i,
    disableShrink: s
  } = e, u = {
    root: ["root", n, `color${Ue(i)}`],
    svg: ["svg"],
    circle: ["circle", `circle${Ue(n)}`, s && "circleDisableShrink"]
  };
  return yt(u, u9, t);
}, p9 = Be("span", {
  name: "MuiCircularProgress",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[n.variant], t[`color${Ue(n.color)}`]];
  }
})(rn(({
  theme: e
}) => ({
  display: "inline-block",
  variants: [{
    props: {
      variant: "determinate"
    },
    style: {
      transition: e.transitions.create("transform")
    }
  }, {
    props: {
      variant: "indeterminate"
    },
    style: c9 || {
      animation: `${wk} 1.4s linear infinite`
    }
  }, ...Object.entries(e.palette).filter(to()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      color: (e.vars || e).palette[t].main
    }
  }))]
}))), h9 = Be("svg", {
  name: "MuiCircularProgress",
  slot: "Svg",
  overridesResolver: (e, t) => t.svg
})({
  display: "block"
  // Keeps the progress centered
}), m9 = Be("circle", {
  name: "MuiCircularProgress",
  slot: "Circle",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.circle, t[`circle${Ue(n.variant)}`], n.disableShrink && t.circleDisableShrink];
  }
})(rn(({
  theme: e
}) => ({
  stroke: "currentColor",
  variants: [{
    props: {
      variant: "determinate"
    },
    style: {
      transition: e.transitions.create("stroke-dashoffset")
    }
  }, {
    props: {
      variant: "indeterminate"
    },
    style: {
      // Some default value that looks fine waiting for the animation to kicks in.
      strokeDasharray: "80px, 200px",
      strokeDashoffset: 0
      // Add the unit to fix a Edge 16 and below bug.
    }
  }, {
    props: ({
      ownerState: t
    }) => t.variant === "indeterminate" && !t.disableShrink,
    style: d9 || {
      // At runtime for Pigment CSS, `bufferAnimation` will be null and the generated keyframe will be used.
      animation: `${xk} 1.4s ease-in-out infinite`
    }
  }]
}))), EE = /* @__PURE__ */ w.forwardRef(function(t, n) {
  const i = xn({
    props: t,
    name: "MuiCircularProgress"
  }), {
    className: s,
    color: u = "primary",
    disableShrink: d = !1,
    size: p = 40,
    style: m,
    thickness: v = 3.6,
    value: y = 0,
    variant: C = "indeterminate",
    ...S
  } = i, R = {
    ...i,
    color: u,
    disableShrink: d,
    size: p,
    thickness: v,
    value: y,
    variant: C
  }, O = f9(R), E = {}, k = {}, F = {};
  if (C === "determinate") {
    const _ = 2 * Math.PI * ((Jd - v) / 2);
    E.strokeDasharray = _.toFixed(3), F["aria-valuenow"] = Math.round(y), E.strokeDashoffset = `${((100 - y) / 100 * _).toFixed(3)}px`, k.transform = "rotate(-90deg)";
  }
  return /* @__PURE__ */ A.jsx(p9, {
    className: nt(O.root, s),
    style: {
      width: p,
      height: p,
      ...k,
      ...m
    },
    ownerState: R,
    ref: n,
    role: "progressbar",
    ...F,
    ...S,
    children: /* @__PURE__ */ A.jsx(h9, {
      className: O.svg,
      ownerState: R,
      viewBox: `${Jd / 2} ${Jd / 2} ${Jd} ${Jd}`,
      children: /* @__PURE__ */ A.jsx(m9, {
        className: O.circle,
        style: E,
        ownerState: R,
        cx: Jd,
        cy: Jd,
        r: (Jd - v) / 2,
        fill: "none",
        strokeWidth: v
      })
    })
  });
});
process.env.NODE_ENV !== "production" && (EE.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: a.oneOfType([a.oneOf(["inherit", "primary", "secondary", "error", "info", "success", "warning"]), a.string]),
  /**
   * If `true`, the shrink animation is disabled.
   * This only works if variant is `indeterminate`.
   * @default false
   */
  disableShrink: Gl(a.bool, (e) => e.disableShrink && e.variant && e.variant !== "indeterminate" ? new Error("MUI: You have provided the `disableShrink` prop with a variant other than `indeterminate`. This will have no effect.") : null),
  /**
   * The size of the component.
   * If using a number, the pixel unit is assumed.
   * If using a string, you need to provide the CSS unit, for example '3rem'.
   * @default 40
   */
  size: a.oneOfType([a.number, a.string]),
  /**
   * @ignore
   */
  style: a.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The thickness of the circle.
   * @default 3.6
   */
  thickness: a.number,
  /**
   * The value of the progress indicator for the determinate variant.
   * Value between 0 and 100.
   * @default 0
   */
  value: a.number,
  /**
   * The variant to use.
   * Use indeterminate when there is no progress value.
   * @default 'indeterminate'
   */
  variant: a.oneOf(["determinate", "indeterminate"])
});
function g9(e) {
  return mn("MuiIconButton", e);
}
const yF = bn("MuiIconButton", ["root", "disabled", "colorInherit", "colorPrimary", "colorSecondary", "colorError", "colorInfo", "colorSuccess", "colorWarning", "edgeStart", "edgeEnd", "sizeSmall", "sizeMedium", "sizeLarge", "loading", "loadingIndicator", "loadingWrapper"]), v9 = (e) => {
  const {
    classes: t,
    disabled: n,
    color: i,
    edge: s,
    size: u,
    loading: d
  } = e, p = {
    root: ["root", d && "loading", n && "disabled", i !== "default" && `color${Ue(i)}`, s && `edge${Ue(s)}`, `size${Ue(u)}`],
    loadingIndicator: ["loadingIndicator"],
    loadingWrapper: ["loadingWrapper"]
  };
  return yt(p, g9, t);
}, y9 = Be(Yc, {
  name: "MuiIconButton",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.loading && t.loading, n.color !== "default" && t[`color${Ue(n.color)}`], n.edge && t[`edge${Ue(n.edge)}`], t[`size${Ue(n.size)}`]];
  }
})(rn(({
  theme: e
}) => ({
  textAlign: "center",
  flex: "0 0 auto",
  fontSize: e.typography.pxToRem(24),
  padding: 8,
  borderRadius: "50%",
  color: (e.vars || e).palette.action.active,
  transition: e.transitions.create("background-color", {
    duration: e.transitions.duration.shortest
  }),
  variants: [{
    props: (t) => !t.disableRipple,
    style: {
      "--IconButton-hoverBg": e.vars ? `rgba(${e.vars.palette.action.activeChannel} / ${e.vars.palette.action.hoverOpacity})` : $n(e.palette.action.active, e.palette.action.hoverOpacity),
      "&:hover": {
        backgroundColor: "var(--IconButton-hoverBg)",
        // Reset on touch devices, it doesn't add specificity
        "@media (hover: none)": {
          backgroundColor: "transparent"
        }
      }
    }
  }, {
    props: {
      edge: "start"
    },
    style: {
      marginLeft: -12
    }
  }, {
    props: {
      edge: "start",
      size: "small"
    },
    style: {
      marginLeft: -3
    }
  }, {
    props: {
      edge: "end"
    },
    style: {
      marginRight: -12
    }
  }, {
    props: {
      edge: "end",
      size: "small"
    },
    style: {
      marginRight: -3
    }
  }]
})), rn(({
  theme: e
}) => ({
  variants: [{
    props: {
      color: "inherit"
    },
    style: {
      color: "inherit"
    }
  }, ...Object.entries(e.palette).filter(to()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      color: (e.vars || e).palette[t].main
    }
  })), ...Object.entries(e.palette).filter(to()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      "--IconButton-hoverBg": e.vars ? `rgba(${(e.vars || e).palette[t].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : $n((e.vars || e).palette[t].main, e.palette.action.hoverOpacity)
    }
  })), {
    props: {
      size: "small"
    },
    style: {
      padding: 5,
      fontSize: e.typography.pxToRem(18)
    }
  }, {
    props: {
      size: "large"
    },
    style: {
      padding: 12,
      fontSize: e.typography.pxToRem(28)
    }
  }],
  [`&.${yF.disabled}`]: {
    backgroundColor: "transparent",
    color: (e.vars || e).palette.action.disabled
  },
  [`&.${yF.loading}`]: {
    color: "transparent"
  }
}))), b9 = Be("span", {
  name: "MuiIconButton",
  slot: "LoadingIndicator",
  overridesResolver: (e, t) => t.loadingIndicator
})(({
  theme: e
}) => ({
  display: "none",
  position: "absolute",
  visibility: "visible",
  top: "50%",
  left: "50%",
  transform: "translate(-50%, -50%)",
  color: (e.vars || e).palette.action.disabled,
  variants: [{
    props: {
      loading: !0
    },
    style: {
      display: "flex"
    }
  }]
})), Wc = /* @__PURE__ */ w.forwardRef(function(t, n) {
  const i = xn({
    props: t,
    name: "MuiIconButton"
  }), {
    edge: s = !1,
    children: u,
    className: d,
    color: p = "default",
    disabled: m = !1,
    disableFocusRipple: v = !1,
    size: y = "medium",
    id: C,
    loading: S = null,
    loadingIndicator: R,
    ...O
  } = i, E = Sr(C), k = R ?? /* @__PURE__ */ A.jsx(EE, {
    "aria-labelledby": E,
    color: "inherit",
    size: 16
  }), F = {
    ...i,
    edge: s,
    color: p,
    disabled: m,
    disableFocusRipple: v,
    loading: S,
    loadingIndicator: k,
    size: y
  }, _ = v9(F);
  return /* @__PURE__ */ A.jsxs(y9, {
    id: S ? E : C,
    className: nt(_.root, d),
    centerRipple: !0,
    focusRipple: !v,
    disabled: m || S,
    ref: n,
    ...O,
    ownerState: F,
    children: [typeof S == "boolean" && // use plain HTML span to minimize the runtime overhead
    /* @__PURE__ */ A.jsx("span", {
      className: _.loadingWrapper,
      style: {
        display: "contents"
      },
      children: /* @__PURE__ */ A.jsx(b9, {
        className: _.loadingIndicator,
        ownerState: F,
        children: S && k
      })
    }), u]
  });
});
process.env.NODE_ENV !== "production" && (Wc.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The icon to display.
   */
  children: Gl(a.node, (e) => w.Children.toArray(e.children).some((n) => /* @__PURE__ */ w.isValidElement(n) && n.props.onClick) ? new Error(["MUI: You are providing an onClick event listener to a child of a button element.", "Prefer applying it to the IconButton directly.", "This guarantees that the whole <button> will be responsive to click events."].join(`
`)) : null),
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'default'
   */
  color: a.oneOfType([a.oneOf(["inherit", "default", "primary", "secondary", "error", "info", "success", "warning"]), a.string]),
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: a.bool,
  /**
   * If `true`, the  keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: a.bool,
  /**
   * If `true`, the ripple effect is disabled.
   *
   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
   * @default false
   */
  disableRipple: a.bool,
  /**
   * If given, uses a negative margin to counteract the padding on one
   * side (this is often helpful for aligning the left or right
   * side of the icon with content above or below, without ruining the border
   * size and shape).
   * @default false
   */
  edge: a.oneOf(["end", "start", !1]),
  /**
   * @ignore
   */
  id: a.string,
  /**
   * If `true`, the loading indicator is visible and the button is disabled.
   * If `true | false`, the loading wrapper is always rendered before the children to prevent [Google Translation Crash](https://github.com/mui/material-ui/issues/27853).
   * @default null
   */
  loading: a.bool,
  /**
   * Element placed before the children if the button is in loading state.
   * The node should contain an element with `role="progressbar"` with an accessible name.
   * By default, it renders a `CircularProgress` that is labeled by the button itself.
   * @default <CircularProgress color="inherit" size={16} />
   */
  loadingIndicator: a.node,
  /**
   * The size of the component.
   * `small` is equivalent to the dense button styling.
   * @default 'medium'
   */
  size: a.oneOfType([a.oneOf(["small", "medium", "large"]), a.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
const C9 = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z"
}), "SuccessOutlined"), S9 = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z"
}), "ReportProblemOutlined"), w9 = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
}), "ErrorOutline"), x9 = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20, 12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10, 10 0 0,0 12,2M11,17H13V11H11V17Z"
}), "InfoOutlined"), yj = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
}), "Close"), E9 = (e) => {
  const {
    variant: t,
    color: n,
    severity: i,
    classes: s
  } = e, u = {
    root: ["root", `color${Ue(n || i)}`, `${t}${Ue(n || i)}`, `${t}`],
    icon: ["icon"],
    message: ["message"],
    action: ["action"]
  };
  return yt(u, l9, s);
}, T9 = Be(bs, {
  name: "MuiAlert",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[n.variant], t[`${n.variant}${Ue(n.color || n.severity)}`]];
  }
})(rn(({
  theme: e
}) => {
  const t = e.palette.mode === "light" ? bf : Cf, n = e.palette.mode === "light" ? Cf : bf;
  return {
    ...e.typography.body2,
    backgroundColor: "transparent",
    display: "flex",
    padding: "6px 16px",
    variants: [...Object.entries(e.palette).filter(to(["light"])).map(([i]) => ({
      props: {
        colorSeverity: i,
        variant: "standard"
      },
      style: {
        color: e.vars ? e.vars.palette.Alert[`${i}Color`] : t(e.palette[i].light, 0.6),
        backgroundColor: e.vars ? e.vars.palette.Alert[`${i}StandardBg`] : n(e.palette[i].light, 0.9),
        [`& .${vF.icon}`]: e.vars ? {
          color: e.vars.palette.Alert[`${i}IconColor`]
        } : {
          color: e.palette[i].main
        }
      }
    })), ...Object.entries(e.palette).filter(to(["light"])).map(([i]) => ({
      props: {
        colorSeverity: i,
        variant: "outlined"
      },
      style: {
        color: e.vars ? e.vars.palette.Alert[`${i}Color`] : t(e.palette[i].light, 0.6),
        border: `1px solid ${(e.vars || e).palette[i].light}`,
        [`& .${vF.icon}`]: e.vars ? {
          color: e.vars.palette.Alert[`${i}IconColor`]
        } : {
          color: e.palette[i].main
        }
      }
    })), ...Object.entries(e.palette).filter(to(["dark"])).map(([i]) => ({
      props: {
        colorSeverity: i,
        variant: "filled"
      },
      style: {
        fontWeight: e.typography.fontWeightMedium,
        ...e.vars ? {
          color: e.vars.palette.Alert[`${i}FilledColor`],
          backgroundColor: e.vars.palette.Alert[`${i}FilledBg`]
        } : {
          backgroundColor: e.palette.mode === "dark" ? e.palette[i].dark : e.palette[i].main,
          color: e.palette.getContrastText(e.palette[i].main)
        }
      }
    }))]
  };
})), R9 = Be("div", {
  name: "MuiAlert",
  slot: "Icon",
  overridesResolver: (e, t) => t.icon
})({
  marginRight: 12,
  padding: "7px 0",
  display: "flex",
  fontSize: 22,
  opacity: 0.9
}), O9 = Be("div", {
  name: "MuiAlert",
  slot: "Message",
  overridesResolver: (e, t) => t.message
})({
  padding: "8px 0",
  minWidth: 0,
  overflow: "auto"
}), k9 = Be("div", {
  name: "MuiAlert",
  slot: "Action",
  overridesResolver: (e, t) => t.action
})({
  display: "flex",
  alignItems: "flex-start",
  padding: "4px 0 0 16px",
  marginLeft: "auto",
  marginRight: -8
}), bF = {
  success: /* @__PURE__ */ A.jsx(C9, {
    fontSize: "inherit"
  }),
  warning: /* @__PURE__ */ A.jsx(S9, {
    fontSize: "inherit"
  }),
  error: /* @__PURE__ */ A.jsx(w9, {
    fontSize: "inherit"
  }),
  info: /* @__PURE__ */ A.jsx(x9, {
    fontSize: "inherit"
  })
}, MP = /* @__PURE__ */ w.forwardRef(function(t, n) {
  const i = xn({
    props: t,
    name: "MuiAlert"
  }), {
    action: s,
    children: u,
    className: d,
    closeText: p = "Close",
    color: m,
    components: v = {},
    componentsProps: y = {},
    icon: C,
    iconMapping: S = bF,
    onClose: R,
    role: O = "alert",
    severity: E = "success",
    slotProps: k = {},
    slots: F = {},
    variant: _ = "standard",
    ...L
  } = i, M = {
    ...i,
    color: m,
    severity: E,
    variant: _,
    colorSeverity: m || E
  }, D = E9(M), H = {
    slots: {
      closeButton: v.CloseButton,
      closeIcon: v.CloseIcon,
      ...F
    },
    slotProps: {
      ...y,
      ...k
    }
  }, [K, Q] = yn("root", {
    ref: n,
    shouldForwardComponentProp: !0,
    className: nt(D.root, d),
    elementType: T9,
    externalForwardedProps: {
      ...H,
      ...L
    },
    ownerState: M,
    additionalProps: {
      role: O,
      elevation: 0
    }
  }), [z, I] = yn("icon", {
    className: D.icon,
    elementType: R9,
    externalForwardedProps: H,
    ownerState: M
  }), [G, W] = yn("message", {
    className: D.message,
    elementType: O9,
    externalForwardedProps: H,
    ownerState: M
  }), [B, ee] = yn("action", {
    className: D.action,
    elementType: k9,
    externalForwardedProps: H,
    ownerState: M
  }), [U, q] = yn("closeButton", {
    elementType: Wc,
    externalForwardedProps: H,
    ownerState: M
  }), [Y, ne] = yn("closeIcon", {
    elementType: yj,
    externalForwardedProps: H,
    ownerState: M
  });
  return /* @__PURE__ */ A.jsxs(K, {
    ...Q,
    children: [C !== !1 ? /* @__PURE__ */ A.jsx(z, {
      ...I,
      children: C || S[E] || bF[E]
    }) : null, /* @__PURE__ */ A.jsx(G, {
      ...W,
      children: u
    }), s != null ? /* @__PURE__ */ A.jsx(B, {
      ...ee,
      children: s
    }) : null, s == null && R ? /* @__PURE__ */ A.jsx(B, {
      ...ee,
      children: /* @__PURE__ */ A.jsx(U, {
        size: "small",
        "aria-label": p,
        title: p,
        color: "inherit",
        onClick: R,
        ...q,
        children: /* @__PURE__ */ A.jsx(Y, {
          fontSize: "small",
          ...ne
        })
      })
    }) : null]
  });
});
process.env.NODE_ENV !== "production" && (MP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The action to display. It renders after the message, at the end of the alert.
   */
  action: a.node,
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * Override the default label for the *close popup* icon button.
   *
   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).
   * @default 'Close'
   */
  closeText: a.string,
  /**
   * The color of the component. Unless provided, the value is taken from the `severity` prop.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   */
  color: a.oneOfType([a.oneOf(["error", "info", "success", "warning"]), a.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: a.shape({
    CloseButton: a.elementType,
    CloseIcon: a.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: a.shape({
    closeButton: a.object,
    closeIcon: a.object
  }),
  /**
   * Override the icon displayed before the children.
   * Unless provided, the icon is mapped to the value of the `severity` prop.
   * Set to `false` to remove the `icon`.
   */
  icon: a.node,
  /**
   * The component maps the `severity` prop to a range of different icons,
   * for instance success to `<SuccessOutlined>`.
   * If you wish to change this mapping, you can provide your own.
   * Alternatively, you can use the `icon` prop to override the icon displayed.
   */
  iconMapping: a.shape({
    error: a.node,
    info: a.node,
    success: a.node,
    warning: a.node
  }),
  /**
   * Callback fired when the component requests to be closed.
   * When provided and no `action` prop is set, a close icon button is displayed that triggers the callback when clicked.
   * @param {React.SyntheticEvent} event The event source of the callback.
   */
  onClose: a.func,
  /**
   * The ARIA role attribute of the element.
   * @default 'alert'
   */
  role: a.string,
  /**
   * The severity of the alert. This defines the color and icon used.
   * @default 'success'
   */
  severity: a.oneOfType([a.oneOf(["error", "info", "success", "warning"]), a.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    action: a.oneOfType([a.func, a.object]),
    closeButton: a.oneOfType([a.func, a.object]),
    closeIcon: a.oneOfType([a.func, a.object]),
    icon: a.oneOfType([a.func, a.object]),
    message: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    action: a.elementType,
    closeButton: a.elementType,
    closeIcon: a.elementType,
    icon: a.elementType,
    message: a.elementType,
    root: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The variant to use.
   * @default 'standard'
   */
  variant: a.oneOfType([a.oneOf(["filled", "outlined", "standard"]), a.string])
});
function P9(e) {
  return mn("MuiTypography", e);
}
const CF = bn("MuiTypography", ["root", "h1", "h2", "h3", "h4", "h5", "h6", "subtitle1", "subtitle2", "body1", "body2", "inherit", "button", "caption", "overline", "alignLeft", "alignRight", "alignCenter", "alignJustify", "noWrap", "gutterBottom", "paragraph"]), M9 = {
  primary: !0,
  secondary: !0,
  error: !0,
  info: !0,
  success: !0,
  warning: !0,
  textPrimary: !0,
  textSecondary: !0,
  textDisabled: !0
}, I9 = N8(), D9 = (e) => {
  const {
    align: t,
    gutterBottom: n,
    noWrap: i,
    paragraph: s,
    variant: u,
    classes: d
  } = e, p = {
    root: ["root", u, e.align !== "inherit" && `align${Ue(t)}`, n && "gutterBottom", i && "noWrap", s && "paragraph"]
  };
  return yt(p, P9, d);
}, N9 = Be("span", {
  name: "MuiTypography",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.variant && t[n.variant], n.align !== "inherit" && t[`align${Ue(n.align)}`], n.noWrap && t.noWrap, n.gutterBottom && t.gutterBottom, n.paragraph && t.paragraph];
  }
})(rn(({
  theme: e
}) => {
  var t;
  return {
    margin: 0,
    variants: [{
      props: {
        variant: "inherit"
      },
      style: {
        // Some elements, like <button> on Chrome have default font that doesn't inherit, reset this.
        font: "inherit",
        lineHeight: "inherit",
        letterSpacing: "inherit"
      }
    }, ...Object.entries(e.typography).filter(([n, i]) => n !== "inherit" && i && typeof i == "object").map(([n, i]) => ({
      props: {
        variant: n
      },
      style: i
    })), ...Object.entries(e.palette).filter(to()).map(([n]) => ({
      props: {
        color: n
      },
      style: {
        color: (e.vars || e).palette[n].main
      }
    })), ...Object.entries(((t = e.palette) == null ? void 0 : t.text) || {}).filter(([, n]) => typeof n == "string").map(([n]) => ({
      props: {
        color: `text${Ue(n)}`
      },
      style: {
        color: (e.vars || e).palette.text[n]
      }
    })), {
      props: ({
        ownerState: n
      }) => n.align !== "inherit",
      style: {
        textAlign: "var(--Typography-textAlign)"
      }
    }, {
      props: ({
        ownerState: n
      }) => n.noWrap,
      style: {
        overflow: "hidden",
        textOverflow: "ellipsis",
        whiteSpace: "nowrap"
      }
    }, {
      props: ({
        ownerState: n
      }) => n.gutterBottom,
      style: {
        marginBottom: "0.35em"
      }
    }, {
      props: ({
        ownerState: n
      }) => n.paragraph,
      style: {
        marginBottom: 16
      }
    }]
  };
})), SF = {
  h1: "h1",
  h2: "h2",
  h3: "h3",
  h4: "h4",
  h5: "h5",
  h6: "h6",
  subtitle1: "h6",
  subtitle2: "h6",
  body1: "p",
  body2: "p",
  inherit: "p"
}, li = /* @__PURE__ */ w.forwardRef(function(t, n) {
  const {
    color: i,
    ...s
  } = xn({
    props: t,
    name: "MuiTypography"
  }), u = !M9[i], d = I9({
    ...s,
    ...u && {
      color: i
    }
  }), {
    align: p = "inherit",
    className: m,
    component: v,
    gutterBottom: y = !1,
    noWrap: C = !1,
    paragraph: S = !1,
    variant: R = "body1",
    variantMapping: O = SF,
    ...E
  } = d, k = {
    ...d,
    align: p,
    color: i,
    className: m,
    component: v,
    gutterBottom: y,
    noWrap: C,
    paragraph: S,
    variant: R,
    variantMapping: O
  }, F = v || (S ? "p" : O[R] || SF[R]) || "span", _ = D9(k);
  return /* @__PURE__ */ A.jsx(N9, {
    as: F,
    ref: n,
    className: nt(_.root, m),
    ...E,
    ownerState: k,
    style: {
      ...p !== "inherit" && {
        "--Typography-textAlign": p
      },
      ...E.style
    }
  });
});
process.env.NODE_ENV !== "production" && (li.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Set the text-align on the component.
   * @default 'inherit'
   */
  align: a.oneOf(["center", "inherit", "justify", "left", "right"]),
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   */
  color: a.oneOfType([a.oneOf(["primary", "secondary", "success", "error", "info", "warning", "textPrimary", "textSecondary", "textDisabled"]), a.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * If `true`, the text will have a bottom margin.
   * @default false
   */
  gutterBottom: a.bool,
  /**
   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.
   *
   * Note that text overflow can only happen with block or inline-block level elements
   * (the element needs to have a width in order to overflow).
   * @default false
   */
  noWrap: a.bool,
  /**
   * If `true`, the element will be a paragraph element.
   * @default false
   * @deprecated Use the `component` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  paragraph: a.bool,
  /**
   * @ignore
   */
  style: a.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * Applies the theme typography styles.
   * @default 'body1'
   */
  variant: a.oneOfType([a.oneOf(["body1", "body2", "button", "caption", "h1", "h2", "h3", "h4", "h5", "h6", "inherit", "overline", "subtitle1", "subtitle2"]), a.string]),
  /**
   * The component maps the variant prop to a range of different HTML element types.
   * For instance, subtitle1 to `<h6>`.
   * If you wish to change that mapping, you can provide your own.
   * Alternatively, you can use the `component` prop.
   * @default {
   *   h1: 'h1',
   *   h2: 'h2',
   *   h3: 'h3',
   *   h4: 'h4',
   *   h5: 'h5',
   *   h6: 'h6',
   *   subtitle1: 'h6',
   *   subtitle2: 'h6',
   *   body1: 'p',
   *   body2: 'p',
   *   inherit: 'p',
   * }
   */
  variantMapping: a.object
});
function L9(e) {
  return mn("MuiAppBar", e);
}
bn("MuiAppBar", ["root", "positionFixed", "positionAbsolute", "positionSticky", "positionStatic", "positionRelative", "colorDefault", "colorPrimary", "colorSecondary", "colorInherit", "colorTransparent", "colorError", "colorInfo", "colorSuccess", "colorWarning"]);
const F9 = (e) => {
  const {
    color: t,
    position: n,
    classes: i
  } = e, s = {
    root: ["root", `color${Ue(t)}`, `position${Ue(n)}`]
  };
  return yt(s, L9, i);
}, wF = (e, t) => e ? `${e == null ? void 0 : e.replace(")", "")}, ${t})` : t, _9 = Be(bs, {
  name: "MuiAppBar",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[`position${Ue(n.position)}`], t[`color${Ue(n.color)}`]];
  }
})(rn(({
  theme: e
}) => ({
  display: "flex",
  flexDirection: "column",
  width: "100%",
  boxSizing: "border-box",
  // Prevent padding issue with the Modal and fixed positioned AppBar.
  flexShrink: 0,
  variants: [{
    props: {
      position: "fixed"
    },
    style: {
      position: "fixed",
      zIndex: (e.vars || e).zIndex.appBar,
      top: 0,
      left: "auto",
      right: 0,
      "@media print": {
        // Prevent the app bar to be visible on each printed page.
        position: "absolute"
      }
    }
  }, {
    props: {
      position: "absolute"
    },
    style: {
      position: "absolute",
      zIndex: (e.vars || e).zIndex.appBar,
      top: 0,
      left: "auto",
      right: 0
    }
  }, {
    props: {
      position: "sticky"
    },
    style: {
      position: "sticky",
      zIndex: (e.vars || e).zIndex.appBar,
      top: 0,
      left: "auto",
      right: 0
    }
  }, {
    props: {
      position: "static"
    },
    style: {
      position: "static"
    }
  }, {
    props: {
      position: "relative"
    },
    style: {
      position: "relative"
    }
  }, {
    props: {
      color: "inherit"
    },
    style: {
      "--AppBar-color": "inherit"
    }
  }, {
    props: {
      color: "default"
    },
    style: {
      "--AppBar-background": e.vars ? e.vars.palette.AppBar.defaultBg : e.palette.grey[100],
      "--AppBar-color": e.vars ? e.vars.palette.text.primary : e.palette.getContrastText(e.palette.grey[100]),
      ...e.applyStyles("dark", {
        "--AppBar-background": e.vars ? e.vars.palette.AppBar.defaultBg : e.palette.grey[900],
        "--AppBar-color": e.vars ? e.vars.palette.text.primary : e.palette.getContrastText(e.palette.grey[900])
      })
    }
  }, ...Object.entries(e.palette).filter(to(["contrastText"])).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      "--AppBar-background": (e.vars ?? e).palette[t].main,
      "--AppBar-color": (e.vars ?? e).palette[t].contrastText
    }
  })), {
    props: (t) => t.enableColorOnDark === !0 && !["inherit", "transparent"].includes(t.color),
    style: {
      backgroundColor: "var(--AppBar-background)",
      color: "var(--AppBar-color)"
    }
  }, {
    props: (t) => t.enableColorOnDark === !1 && !["inherit", "transparent"].includes(t.color),
    style: {
      backgroundColor: "var(--AppBar-background)",
      color: "var(--AppBar-color)",
      ...e.applyStyles("dark", {
        backgroundColor: e.vars ? wF(e.vars.palette.AppBar.darkBg, "var(--AppBar-background)") : null,
        color: e.vars ? wF(e.vars.palette.AppBar.darkColor, "var(--AppBar-color)") : null
      })
    }
  }, {
    props: {
      color: "transparent"
    },
    style: {
      "--AppBar-background": "transparent",
      "--AppBar-color": "inherit",
      backgroundColor: "var(--AppBar-background)",
      color: "var(--AppBar-color)",
      ...e.applyStyles("dark", {
        backgroundImage: "none"
      })
    }
  }]
}))), bj = /* @__PURE__ */ w.forwardRef(function(t, n) {
  const i = xn({
    props: t,
    name: "MuiAppBar"
  }), {
    className: s,
    color: u = "primary",
    enableColorOnDark: d = !1,
    position: p = "fixed",
    ...m
  } = i, v = {
    ...i,
    color: u,
    position: p,
    enableColorOnDark: d
  }, y = F9(v);
  return /* @__PURE__ */ A.jsx(_9, {
    square: !0,
    component: "header",
    ownerState: v,
    elevation: 4,
    className: nt(y.root, s, p === "fixed" && "mui-fixed"),
    ref: n,
    ...m
  });
});
process.env.NODE_ENV !== "production" && (bj.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: a.oneOfType([a.oneOf(["default", "inherit", "primary", "secondary", "transparent", "error", "info", "success", "warning"]), a.string]),
  /**
   * If true, the `color` prop is applied in dark mode.
   * @default false
   */
  enableColorOnDark: a.bool,
  /**
   * The positioning type. The behavior of the different options is described
   * [in the MDN web docs](https://developer.mozilla.org/en-US/docs/Web/CSS/position).
   * Note: `sticky` is not universally supported and will fall back to `static` when unavailable.
   * @default 'fixed'
   */
  position: a.oneOf(["absolute", "fixed", "relative", "static", "sticky"]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
function xF(e) {
  return e.normalize("NFD").replace(/[\u0300-\u036f]/g, "");
}
function Cj(e = {}) {
  const {
    ignoreAccents: t = !0,
    ignoreCase: n = !0,
    limit: i,
    matchFrom: s = "any",
    stringify: u,
    trim: d = !1
  } = e;
  return (p, {
    inputValue: m,
    getOptionLabel: v
  }) => {
    let y = d ? m.trim() : m;
    n && (y = y.toLowerCase()), t && (y = xF(y));
    const C = y ? p.filter((S) => {
      let R = (u || v)(S);
      return n && (R = R.toLowerCase()), t && (R = xF(R)), s === "start" ? R.startsWith(y) : R.includes(y);
    }) : p;
    return typeof i == "number" ? C.slice(0, i) : C;
  };
}
const A9 = Cj(), EF = 5, $9 = (e) => {
  var t;
  return e.current !== null && ((t = e.current.parentElement) == null ? void 0 : t.contains(document.activeElement));
}, j9 = [];
function TF(e, t, n) {
  if (t || e == null)
    return "";
  const i = n(e);
  return typeof i == "string" ? i : "";
}
function z9(e) {
  const {
    // eslint-disable-next-line @typescript-eslint/naming-convention
    unstable_isActiveElementInListbox: t = $9,
    // eslint-disable-next-line @typescript-eslint/naming-convention
    unstable_classNamePrefix: n = "Mui",
    autoComplete: i = !1,
    autoHighlight: s = !1,
    autoSelect: u = !1,
    blurOnSelect: d = !1,
    clearOnBlur: p = !e.freeSolo,
    clearOnEscape: m = !1,
    componentName: v = "useAutocomplete",
    defaultValue: y = e.multiple ? j9 : null,
    disableClearable: C = !1,
    disableCloseOnSelect: S = !1,
    disabled: R,
    disabledItemsFocusable: O = !1,
    disableListWrap: E = !1,
    filterOptions: k = A9,
    filterSelectedOptions: F = !1,
    freeSolo: _ = !1,
    getOptionDisabled: L,
    getOptionKey: M,
    getOptionLabel: D = (Le) => Le.label ?? Le,
    groupBy: H,
    handleHomeEndKeys: K = !e.freeSolo,
    id: Q,
    includeInputInList: z = !1,
    inputValue: I,
    isOptionEqualToValue: G = (Le, ke) => Le === ke,
    multiple: W = !1,
    onChange: B,
    onClose: ee,
    onHighlightChange: U,
    onInputChange: q,
    onOpen: Y,
    open: ne,
    openOnFocus: re = !1,
    options: X,
    readOnly: j = !1,
    selectOnFocus: ie = !e.freeSolo,
    value: fe
  } = e, ce = Sr(Q);
  let me = D;
  me = (Le) => {
    const ke = D(Le);
    if (typeof ke != "string") {
      if (process.env.NODE_ENV !== "production") {
        const Ze = ke === void 0 ? "undefined" : `${typeof ke} (${ke})`;
        console.error(`MUI: The \`getOptionLabel\` method of ${v} returned ${Ze} instead of a string for ${JSON.stringify(Le)}.`);
      }
      return String(ke);
    }
    return ke;
  };
  const ge = w.useRef(!1), de = w.useRef(!0), pe = w.useRef(null), be = w.useRef(null), [Ce, Re] = w.useState(null), [ue, we] = w.useState(-1), _e = s ? 0 : -1, He = w.useRef(_e), et = w.useRef(TF(y ?? fe, W, me)).current, [Ne, rt] = ah({
    controlled: fe,
    default: y,
    name: v
  }), [it, wt] = ah({
    controlled: I,
    default: et,
    name: v,
    state: "inputValue"
  }), [gt, ot] = w.useState(!1), jt = w.useCallback((Le, ke, Ze) => {
    if (!(W ? Ne.length < ke.length : ke !== null) && !p)
      return;
    const Bt = TF(ke, W, me);
    it !== Bt && (wt(Bt), q && q(Le, Bt, Ze));
  }, [me, it, W, q, wt, p, Ne]), [ct, Tt] = ah({
    controlled: ne,
    default: !1,
    name: v,
    state: "open"
  }), [Rt, Lt] = w.useState(!0), vt = !W && Ne != null && it === me(Ne), Qe = ct && !j, Oe = Qe ? k(
    X.filter((Le) => !(F && (W ? Ne : [Ne]).some((ke) => ke !== null && G(Le, ke)))),
    // we use the empty string to manipulate `filterOptions` to not filter any options
    // i.e. the filter predicate always returns true
    {
      inputValue: vt && Rt ? "" : it,
      getOptionLabel: me
    }
  ) : [], Me = CP({
    filteredOptions: Oe,
    value: Ne,
    inputValue: it
  });
  w.useEffect(() => {
    const Le = Ne !== Me.value;
    gt && !Le || _ && !Le || jt(null, Ne, "reset");
  }, [Ne, jt, gt, Me.value, _]);
  const ht = ct && Oe.length > 0 && !j, xt = Nn((Le) => {
    Le === -1 ? pe.current.focus() : Ce.querySelector(`[data-tag-index="${Le}"]`).focus();
  });
  w.useEffect(() => {
    W && ue > Ne.length - 1 && (we(-1), xt(-1));
  }, [Ne, W, ue, xt]);
  function zt(Le, ke) {
    if (!be.current || Le < 0 || Le >= Oe.length)
      return -1;
    let Ze = Le;
    for (; ; ) {
      const Gt = be.current.querySelector(`[data-option-index="${Ze}"]`), Bt = O ? !1 : !Gt || Gt.disabled || Gt.getAttribute("aria-disabled") === "true";
      if (Gt && Gt.hasAttribute("tabindex") && !Bt)
        return Ze;
      if (ke === "next" ? Ze = (Ze + 1) % Oe.length : Ze = (Ze - 1 + Oe.length) % Oe.length, Ze === Le)
        return -1;
    }
  }
  const bt = Nn(({
    event: Le,
    index: ke,
    reason: Ze
  }) => {
    if (He.current = ke, ke === -1 ? pe.current.removeAttribute("aria-activedescendant") : pe.current.setAttribute("aria-activedescendant", `${ce}-option-${ke}`), U && ["mouse", "keyboard", "touch"].includes(Ze) && U(Le, ke === -1 ? null : Oe[ke], Ze), !be.current)
      return;
    const Gt = be.current.querySelector(`[role="option"].${n}-focused`);
    Gt && (Gt.classList.remove(`${n}-focused`), Gt.classList.remove(`${n}-focusVisible`));
    let Bt = be.current;
    if (be.current.getAttribute("role") !== "listbox" && (Bt = be.current.parentElement.querySelector('[role="listbox"]')), !Bt)
      return;
    if (ke === -1) {
      Bt.scrollTop = 0;
      return;
    }
    const Qt = be.current.querySelector(`[data-option-index="${ke}"]`);
    if (Qt && (Qt.classList.add(`${n}-focused`), Ze === "keyboard" && Qt.classList.add(`${n}-focusVisible`), Bt.scrollHeight > Bt.clientHeight && Ze !== "mouse" && Ze !== "touch")) {
      const Hn = Qt, Lr = Bt.clientHeight + Bt.scrollTop, Wo = Hn.offsetTop + Hn.offsetHeight;
      Wo > Lr ? Bt.scrollTop = Wo - Bt.clientHeight : Hn.offsetTop - Hn.offsetHeight * (H ? 1.3 : 0) < Bt.scrollTop && (Bt.scrollTop = Hn.offsetTop - Hn.offsetHeight * (H ? 1.3 : 0));
    }
  }), Ge = Nn(({
    event: Le,
    diff: ke,
    direction: Ze = "next",
    reason: Gt
  }) => {
    if (!Qe)
      return;
    const Qt = zt((() => {
      const Hn = Oe.length - 1;
      if (ke === "reset")
        return _e;
      if (ke === "start")
        return 0;
      if (ke === "end")
        return Hn;
      const Lr = He.current + ke;
      return Lr < 0 ? Lr === -1 && z ? -1 : E && He.current !== -1 || Math.abs(ke) > 1 ? 0 : Hn : Lr > Hn ? Lr === Hn + 1 && z ? -1 : E || Math.abs(ke) > 1 ? Hn : 0 : Lr;
    })(), Ze);
    if (bt({
      index: Qt,
      reason: Gt,
      event: Le
    }), i && ke !== "reset")
      if (Qt === -1)
        pe.current.value = it;
      else {
        const Hn = me(Oe[Qt]);
        pe.current.value = Hn, Hn.toLowerCase().indexOf(it.toLowerCase()) === 0 && it.length > 0 && pe.current.setSelectionRange(it.length, Hn.length);
      }
  }), Et = () => {
    const Le = (ke, Ze) => {
      const Gt = ke ? me(ke) : "", Bt = Ze ? me(Ze) : "";
      return Gt === Bt;
    };
    if (He.current !== -1 && Me.filteredOptions && Me.filteredOptions.length !== Oe.length && Me.inputValue === it && (W ? Ne.length === Me.value.length && Me.value.every((ke, Ze) => me(Ne[Ze]) === me(ke)) : Le(Me.value, Ne))) {
      const ke = Me.filteredOptions[He.current];
      if (ke)
        return Oe.findIndex((Ze) => me(Ze) === me(ke));
    }
    return -1;
  }, At = w.useCallback(() => {
    if (!Qe)
      return;
    const Le = Et();
    if (Le !== -1) {
      He.current = Le;
      return;
    }
    const ke = W ? Ne[0] : Ne;
    if (Oe.length === 0 || ke == null) {
      Ge({
        diff: "reset"
      });
      return;
    }
    if (be.current) {
      if (ke != null) {
        const Ze = Oe[He.current];
        if (W && Ze && Ne.findIndex((Bt) => G(Ze, Bt)) !== -1)
          return;
        const Gt = Oe.findIndex((Bt) => G(Bt, ke));
        Gt === -1 ? Ge({
          diff: "reset"
        }) : bt({
          index: Gt
        });
        return;
      }
      if (He.current >= Oe.length - 1) {
        bt({
          index: Oe.length - 1
        });
        return;
      }
      bt({
        index: He.current
      });
    }
  }, [
    // Only sync the highlighted index when the option switch between empty and not
    Oe.length,
    // Don't sync the highlighted index with the value when multiple
    // eslint-disable-next-line react-hooks/exhaustive-deps
    W ? !1 : Ne,
    F,
    Ge,
    bt,
    Qe,
    it,
    W
  ]), pn = Nn((Le) => {
    mk(be, Le), Le && At();
  });
  process.env.NODE_ENV !== "production" && w.useEffect(() => {
    (!pe.current || pe.current.nodeName !== "INPUT") && (pe.current && pe.current.nodeName === "TEXTAREA" ? console.warn([`A textarea element was provided to ${v} where input was expected.`, "This is not a supported scenario but it may work under certain conditions.", "A textarea keyboard navigation may conflict with Autocomplete controls (for example enter and arrow keys).", "Make sure to test keyboard navigation and add custom event handlers if necessary."].join(`
`)) : console.error([`MUI: Unable to find the input element. It was resolved to ${pe.current} while an HTMLInputElement was expected.`, `Instead, ${v} expects an input element.`, "", v === "useAutocomplete" ? "Make sure you have bound getInputProps correctly and that the normal ref/effect resolutions order is guaranteed." : "Make sure you have customized the input component correctly."].join(`
`)));
  }, [v]), w.useEffect(() => {
    At();
  }, [At]);
  const fn = (Le) => {
    ct || (Tt(!0), Lt(!0), Y && Y(Le));
  }, mr = (Le, ke) => {
    ct && (Tt(!1), ee && ee(Le, ke));
  }, qn = (Le, ke, Ze, Gt) => {
    if (W) {
      if (Ne.length === ke.length && Ne.every((Bt, Qt) => Bt === ke[Qt]))
        return;
    } else if (Ne === ke)
      return;
    B && B(Le, ke, Ze, Gt), rt(ke);
  }, Nr = w.useRef(!1), gr = (Le, ke, Ze = "selectOption", Gt = "options") => {
    let Bt = Ze, Qt = ke;
    if (W) {
      if (Qt = Array.isArray(Ne) ? Ne.slice() : [], process.env.NODE_ENV !== "production") {
        const Lr = Qt.filter((Wo) => G(ke, Wo));
        Lr.length > 1 && console.error([`MUI: The \`isOptionEqualToValue\` method of ${v} does not handle the arguments correctly.`, `The component expects a single value to match a given option but found ${Lr.length} matches.`].join(`
`));
      }
      const Hn = Qt.findIndex((Lr) => G(ke, Lr));
      Hn === -1 ? Qt.push(ke) : Gt !== "freeSolo" && (Qt.splice(Hn, 1), Bt = "removeOption");
    }
    jt(Le, Qt, Bt), qn(Le, Qt, Bt, {
      option: ke
    }), !S && (!Le || !Le.ctrlKey && !Le.metaKey) && mr(Le, Bt), (d === !0 || d === "touch" && Nr.current || d === "mouse" && !Nr.current) && pe.current.blur();
  };
  function Po(Le, ke) {
    if (Le === -1)
      return -1;
    let Ze = Le;
    for (; ; ) {
      if (ke === "next" && Ze === Ne.length || ke === "previous" && Ze === -1)
        return -1;
      const Gt = Ce.querySelector(`[data-tag-index="${Ze}"]`);
      if (!Gt || !Gt.hasAttribute("tabindex") || Gt.disabled || Gt.getAttribute("aria-disabled") === "true")
        Ze += ke === "next" ? 1 : -1;
      else
        return Ze;
    }
  }
  const Mo = (Le, ke) => {
    if (!W)
      return;
    it === "" && mr(Le, "toggleInput");
    let Ze = ue;
    ue === -1 ? it === "" && ke === "previous" && (Ze = Ne.length - 1) : (Ze += ke === "next" ? 1 : -1, Ze < 0 && (Ze = 0), Ze === Ne.length && (Ze = -1)), Ze = Po(Ze, ke), we(Ze), xt(Ze);
  }, Ut = (Le) => {
    ge.current = !0, wt(""), q && q(Le, "", "clear"), qn(Le, W ? [] : null, "clear");
  }, fr = (Le) => (ke) => {
    if (Le.onKeyDown && Le.onKeyDown(ke), !ke.defaultMuiPrevented && (ue !== -1 && !["ArrowLeft", "ArrowRight"].includes(ke.key) && (we(-1), xt(-1)), ke.which !== 229))
      switch (ke.key) {
        case "Home":
          Qe && K && (ke.preventDefault(), Ge({
            diff: "start",
            direction: "next",
            reason: "keyboard",
            event: ke
          }));
          break;
        case "End":
          Qe && K && (ke.preventDefault(), Ge({
            diff: "end",
            direction: "previous",
            reason: "keyboard",
            event: ke
          }));
          break;
        case "PageUp":
          ke.preventDefault(), Ge({
            diff: -EF,
            direction: "previous",
            reason: "keyboard",
            event: ke
          }), fn(ke);
          break;
        case "PageDown":
          ke.preventDefault(), Ge({
            diff: EF,
            direction: "next",
            reason: "keyboard",
            event: ke
          }), fn(ke);
          break;
        case "ArrowDown":
          ke.preventDefault(), Ge({
            diff: 1,
            direction: "next",
            reason: "keyboard",
            event: ke
          }), fn(ke);
          break;
        case "ArrowUp":
          ke.preventDefault(), Ge({
            diff: -1,
            direction: "previous",
            reason: "keyboard",
            event: ke
          }), fn(ke);
          break;
        case "ArrowLeft":
          Mo(ke, "previous");
          break;
        case "ArrowRight":
          Mo(ke, "next");
          break;
        case "Enter":
          if (He.current !== -1 && Qe) {
            const Ze = Oe[He.current], Gt = L ? L(Ze) : !1;
            if (ke.preventDefault(), Gt)
              return;
            gr(ke, Ze, "selectOption"), i && pe.current.setSelectionRange(pe.current.value.length, pe.current.value.length);
          } else _ && it !== "" && vt === !1 && (W && ke.preventDefault(), gr(ke, it, "createOption", "freeSolo"));
          break;
        case "Escape":
          Qe ? (ke.preventDefault(), ke.stopPropagation(), mr(ke, "escape")) : m && (it !== "" || W && Ne.length > 0) && (ke.preventDefault(), ke.stopPropagation(), Ut(ke));
          break;
        case "Backspace":
          if (W && !j && it === "" && Ne.length > 0) {
            const Ze = ue === -1 ? Ne.length - 1 : ue, Gt = Ne.slice();
            Gt.splice(Ze, 1), qn(ke, Gt, "removeOption", {
              option: Ne[Ze]
            });
          }
          break;
        case "Delete":
          if (W && !j && it === "" && Ne.length > 0 && ue !== -1) {
            const Ze = ue, Gt = Ne.slice();
            Gt.splice(Ze, 1), qn(ke, Gt, "removeOption", {
              option: Ne[Ze]
            });
          }
          break;
      }
  }, Ct = (Le) => {
    ot(!0), re && !ge.current && fn(Le);
  }, St = (Le) => {
    if (t(be)) {
      pe.current.focus();
      return;
    }
    ot(!1), de.current = !0, ge.current = !1, u && He.current !== -1 && Qe ? gr(Le, Oe[He.current], "blur") : u && _ && it !== "" ? gr(Le, it, "blur", "freeSolo") : p && jt(Le, Ne, "blur"), mr(Le, "blur");
  }, en = (Le) => {
    const ke = Le.target.value;
    it !== ke && (wt(ke), Lt(!1), q && q(Le, ke, "input")), ke === "" ? !C && !W && qn(Le, null, "clear") : fn(Le);
  }, on = (Le) => {
    const ke = Number(Le.currentTarget.getAttribute("data-option-index"));
    He.current !== ke && bt({
      event: Le,
      index: ke,
      reason: "mouse"
    });
  }, zn = (Le) => {
    bt({
      event: Le,
      index: Number(Le.currentTarget.getAttribute("data-option-index")),
      reason: "touch"
    }), Nr.current = !0;
  }, Ar = (Le) => {
    const ke = Number(Le.currentTarget.getAttribute("data-option-index"));
    gr(Le, Oe[ke], "selectOption"), Nr.current = !1;
  }, ro = (Le) => (ke) => {
    const Ze = Ne.slice();
    Ze.splice(Le, 1), qn(ke, Ze, "removeOption", {
      option: Ne[Le]
    });
  }, mo = (Le) => {
    ct ? mr(Le, "toggleInput") : fn(Le);
  }, ve = (Le) => {
    Le.currentTarget.contains(Le.target) && Le.target.getAttribute("id") !== ce && Le.preventDefault();
  }, We = (Le) => {
    Le.currentTarget.contains(Le.target) && (pe.current.focus(), ie && de.current && pe.current.selectionEnd - pe.current.selectionStart === 0 && pe.current.select(), de.current = !1);
  }, pt = (Le) => {
    !R && (it === "" || !ct) && mo(Le);
  };
  let Ot = _ && it.length > 0;
  Ot = Ot || (W ? Ne.length > 0 : Ne !== null);
  let gn = Oe;
  if (H) {
    const Le = /* @__PURE__ */ new Map();
    let ke = !1;
    gn = Oe.reduce((Ze, Gt, Bt) => {
      const Qt = H(Gt);
      return Ze.length > 0 && Ze[Ze.length - 1].group === Qt ? Ze[Ze.length - 1].options.push(Gt) : (process.env.NODE_ENV !== "production" && (Le.get(Qt) && !ke && (console.warn(`MUI: The options provided combined with the \`groupBy\` method of ${v} returns duplicated headers.`, "You can solve the issue by sorting the options with the output of `groupBy`."), ke = !0), Le.set(Qt, !0)), Ze.push({
        key: Bt,
        index: Bt,
        group: Qt,
        options: [Gt]
      })), Ze;
    }, []);
  }
  return R && gt && St(), {
    getRootProps: (Le = {}) => ({
      ...Le,
      onKeyDown: fr(Le),
      onMouseDown: ve,
      onClick: We
    }),
    getInputLabelProps: () => ({
      id: `${ce}-label`,
      htmlFor: ce
    }),
    getInputProps: () => ({
      id: ce,
      value: it,
      onBlur: St,
      onFocus: Ct,
      onChange: en,
      onMouseDown: pt,
      // if open then this is handled imperatively so don't let react override
      // only have an opinion about this when closed
      "aria-activedescendant": Qe ? "" : null,
      "aria-autocomplete": i ? "both" : "list",
      "aria-controls": ht ? `${ce}-listbox` : void 0,
      "aria-expanded": ht,
      // Disable browser's suggestion that might overlap with the popup.
      // Handle autocomplete but not autofill.
      autoComplete: "off",
      ref: pe,
      autoCapitalize: "none",
      spellCheck: "false",
      role: "combobox",
      disabled: R
    }),
    getClearProps: () => ({
      tabIndex: -1,
      type: "button",
      onClick: Ut
    }),
    getPopupIndicatorProps: () => ({
      tabIndex: -1,
      type: "button",
      onClick: mo
    }),
    getTagProps: ({
      index: Le
    }) => ({
      key: Le,
      "data-tag-index": Le,
      tabIndex: -1,
      ...!j && {
        onDelete: ro(Le)
      }
    }),
    getListboxProps: () => ({
      role: "listbox",
      id: `${ce}-listbox`,
      "aria-labelledby": `${ce}-label`,
      ref: pn,
      onMouseDown: (Le) => {
        Le.preventDefault();
      }
    }),
    getOptionProps: ({
      index: Le,
      option: ke
    }) => {
      const Ze = (W ? Ne : [Ne]).some((Bt) => Bt != null && G(ke, Bt)), Gt = L ? L(ke) : !1;
      return {
        key: (M == null ? void 0 : M(ke)) ?? me(ke),
        tabIndex: -1,
        role: "option",
        id: `${ce}-option-${Le}`,
        onMouseMove: on,
        onClick: Ar,
        onTouchStart: zn,
        "data-option-index": Le,
        "aria-disabled": Gt,
        "aria-selected": Ze
      };
    },
    id: ce,
    inputValue: it,
    value: Ne,
    dirty: Ot,
    expanded: Qe && Ce,
    popupOpen: Qe,
    focused: gt || ue !== -1,
    anchorEl: Ce,
    setAnchorEl: Re,
    focusedTag: ue,
    groupedOptions: gn
  };
}
var Wa = "top", ol = "bottom", il = "right", qa = "left", IP = "auto", NC = [Wa, ol, il, qa], Gg = "start", aC = "end", H9 = "clippingParents", Sj = "viewport", Rb = "popper", V9 = "reference", RF = /* @__PURE__ */ NC.reduce(function(e, t) {
  return e.concat([t + "-" + Gg, t + "-" + aC]);
}, []), wj = /* @__PURE__ */ [].concat(NC, [IP]).reduce(function(e, t) {
  return e.concat([t, t + "-" + Gg, t + "-" + aC]);
}, []), B9 = "beforeRead", U9 = "read", G9 = "afterRead", W9 = "beforeMain", q9 = "main", K9 = "afterMain", Y9 = "beforeWrite", X9 = "write", Q9 = "afterWrite", J9 = [B9, U9, G9, W9, q9, K9, Y9, X9, Q9];
function qu(e) {
  return e ? (e.nodeName || "").toLowerCase() : null;
}
function ys(e) {
  if (e == null)
    return window;
  if (e.toString() !== "[object Window]") {
    var t = e.ownerDocument;
    return t && t.defaultView || window;
  }
  return e;
}
function ph(e) {
  var t = ys(e).Element;
  return e instanceof t || e instanceof Element;
}
function el(e) {
  var t = ys(e).HTMLElement;
  return e instanceof t || e instanceof HTMLElement;
}
function DP(e) {
  if (typeof ShadowRoot > "u")
    return !1;
  var t = ys(e).ShadowRoot;
  return e instanceof t || e instanceof ShadowRoot;
}
function Z9(e) {
  var t = e.state;
  Object.keys(t.elements).forEach(function(n) {
    var i = t.styles[n] || {}, s = t.attributes[n] || {}, u = t.elements[n];
    !el(u) || !qu(u) || (Object.assign(u.style, i), Object.keys(s).forEach(function(d) {
      var p = s[d];
      p === !1 ? u.removeAttribute(d) : u.setAttribute(d, p === !0 ? "" : p);
    }));
  });
}
function e7(e) {
  var t = e.state, n = {
    popper: {
      position: t.options.strategy,
      left: "0",
      top: "0",
      margin: "0"
    },
    arrow: {
      position: "absolute"
    },
    reference: {}
  };
  return Object.assign(t.elements.popper.style, n.popper), t.styles = n, t.elements.arrow && Object.assign(t.elements.arrow.style, n.arrow), function() {
    Object.keys(t.elements).forEach(function(i) {
      var s = t.elements[i], u = t.attributes[i] || {}, d = Object.keys(t.styles.hasOwnProperty(i) ? t.styles[i] : n[i]), p = d.reduce(function(m, v) {
        return m[v] = "", m;
      }, {});
      !el(s) || !qu(s) || (Object.assign(s.style, p), Object.keys(u).forEach(function(m) {
        s.removeAttribute(m);
      }));
    });
  };
}
const t7 = {
  name: "applyStyles",
  enabled: !0,
  phase: "write",
  fn: Z9,
  effect: e7,
  requires: ["computeStyles"]
};
function Bu(e) {
  return e.split("-")[0];
}
var sh = Math.max, N0 = Math.min, Wg = Math.round;
function Ek() {
  var e = navigator.userAgentData;
  return e != null && e.brands && Array.isArray(e.brands) ? e.brands.map(function(t) {
    return t.brand + "/" + t.version;
  }).join(" ") : navigator.userAgent;
}
function xj() {
  return !/^((?!chrome|android).)*safari/i.test(Ek());
}
function qg(e, t, n) {
  t === void 0 && (t = !1), n === void 0 && (n = !1);
  var i = e.getBoundingClientRect(), s = 1, u = 1;
  t && el(e) && (s = e.offsetWidth > 0 && Wg(i.width) / e.offsetWidth || 1, u = e.offsetHeight > 0 && Wg(i.height) / e.offsetHeight || 1);
  var d = ph(e) ? ys(e) : window, p = d.visualViewport, m = !xj() && n, v = (i.left + (m && p ? p.offsetLeft : 0)) / s, y = (i.top + (m && p ? p.offsetTop : 0)) / u, C = i.width / s, S = i.height / u;
  return {
    width: C,
    height: S,
    top: y,
    right: v + C,
    bottom: y + S,
    left: v,
    x: v,
    y
  };
}
function NP(e) {
  var t = qg(e), n = e.offsetWidth, i = e.offsetHeight;
  return Math.abs(t.width - n) <= 1 && (n = t.width), Math.abs(t.height - i) <= 1 && (i = t.height), {
    x: e.offsetLeft,
    y: e.offsetTop,
    width: n,
    height: i
  };
}
function Ej(e, t) {
  var n = t.getRootNode && t.getRootNode();
  if (e.contains(t))
    return !0;
  if (n && DP(n)) {
    var i = t;
    do {
      if (i && e.isSameNode(i))
        return !0;
      i = i.parentNode || i.host;
    } while (i);
  }
  return !1;
}
function Xc(e) {
  return ys(e).getComputedStyle(e);
}
function n7(e) {
  return ["table", "td", "th"].indexOf(qu(e)) >= 0;
}
function Tf(e) {
  return ((ph(e) ? e.ownerDocument : (
    // $FlowFixMe[prop-missing]
    e.document
  )) || window.document).documentElement;
}
function TE(e) {
  return qu(e) === "html" ? e : (
    // this is a quicker (but less type safe) way to save quite some bytes from the bundle
    // $FlowFixMe[incompatible-return]
    // $FlowFixMe[prop-missing]
    e.assignedSlot || // step into the shadow DOM of the parent of a slotted node
    e.parentNode || // DOM Element detected
    (DP(e) ? e.host : null) || // ShadowRoot detected
    // $FlowFixMe[incompatible-call]: HTMLElement is a Node
    Tf(e)
  );
}
function OF(e) {
  return !el(e) || // https://github.com/popperjs/popper-core/issues/837
  Xc(e).position === "fixed" ? null : e.offsetParent;
}
function r7(e) {
  var t = /firefox/i.test(Ek()), n = /Trident/i.test(Ek());
  if (n && el(e)) {
    var i = Xc(e);
    if (i.position === "fixed")
      return null;
  }
  var s = TE(e);
  for (DP(s) && (s = s.host); el(s) && ["html", "body"].indexOf(qu(s)) < 0; ) {
    var u = Xc(s);
    if (u.transform !== "none" || u.perspective !== "none" || u.contain === "paint" || ["transform", "perspective"].indexOf(u.willChange) !== -1 || t && u.willChange === "filter" || t && u.filter && u.filter !== "none")
      return s;
    s = s.parentNode;
  }
  return null;
}
function LC(e) {
  for (var t = ys(e), n = OF(e); n && n7(n) && Xc(n).position === "static"; )
    n = OF(n);
  return n && (qu(n) === "html" || qu(n) === "body" && Xc(n).position === "static") ? t : n || r7(e) || t;
}
function LP(e) {
  return ["top", "bottom"].indexOf(e) >= 0 ? "x" : "y";
}
function qb(e, t, n) {
  return sh(e, N0(t, n));
}
function o7(e, t, n) {
  var i = qb(e, t, n);
  return i > n ? n : i;
}
function Tj() {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0
  };
}
function Rj(e) {
  return Object.assign({}, Tj(), e);
}
function Oj(e, t) {
  return t.reduce(function(n, i) {
    return n[i] = e, n;
  }, {});
}
var i7 = function(t, n) {
  return t = typeof t == "function" ? t(Object.assign({}, n.rects, {
    placement: n.placement
  })) : t, Rj(typeof t != "number" ? t : Oj(t, NC));
};
function a7(e) {
  var t, n = e.state, i = e.name, s = e.options, u = n.elements.arrow, d = n.modifiersData.popperOffsets, p = Bu(n.placement), m = LP(p), v = [qa, il].indexOf(p) >= 0, y = v ? "height" : "width";
  if (!(!u || !d)) {
    var C = i7(s.padding, n), S = NP(u), R = m === "y" ? Wa : qa, O = m === "y" ? ol : il, E = n.rects.reference[y] + n.rects.reference[m] - d[m] - n.rects.popper[y], k = d[m] - n.rects.reference[m], F = LC(u), _ = F ? m === "y" ? F.clientHeight || 0 : F.clientWidth || 0 : 0, L = E / 2 - k / 2, M = C[R], D = _ - S[y] - C[O], H = _ / 2 - S[y] / 2 + L, K = qb(M, H, D), Q = m;
    n.modifiersData[i] = (t = {}, t[Q] = K, t.centerOffset = K - H, t);
  }
}
function s7(e) {
  var t = e.state, n = e.options, i = n.element, s = i === void 0 ? "[data-popper-arrow]" : i;
  s != null && (typeof s == "string" && (s = t.elements.popper.querySelector(s), !s) || Ej(t.elements.popper, s) && (t.elements.arrow = s));
}
const l7 = {
  name: "arrow",
  enabled: !0,
  phase: "main",
  fn: a7,
  effect: s7,
  requires: ["popperOffsets"],
  requiresIfExists: ["preventOverflow"]
};
function Kg(e) {
  return e.split("-")[1];
}
var u7 = {
  top: "auto",
  right: "auto",
  bottom: "auto",
  left: "auto"
};
function c7(e, t) {
  var n = e.x, i = e.y, s = t.devicePixelRatio || 1;
  return {
    x: Wg(n * s) / s || 0,
    y: Wg(i * s) / s || 0
  };
}
function kF(e) {
  var t, n = e.popper, i = e.popperRect, s = e.placement, u = e.variation, d = e.offsets, p = e.position, m = e.gpuAcceleration, v = e.adaptive, y = e.roundOffsets, C = e.isFixed, S = d.x, R = S === void 0 ? 0 : S, O = d.y, E = O === void 0 ? 0 : O, k = typeof y == "function" ? y({
    x: R,
    y: E
  }) : {
    x: R,
    y: E
  };
  R = k.x, E = k.y;
  var F = d.hasOwnProperty("x"), _ = d.hasOwnProperty("y"), L = qa, M = Wa, D = window;
  if (v) {
    var H = LC(n), K = "clientHeight", Q = "clientWidth";
    if (H === ys(n) && (H = Tf(n), Xc(H).position !== "static" && p === "absolute" && (K = "scrollHeight", Q = "scrollWidth")), H = H, s === Wa || (s === qa || s === il) && u === aC) {
      M = ol;
      var z = C && H === D && D.visualViewport ? D.visualViewport.height : (
        // $FlowFixMe[prop-missing]
        H[K]
      );
      E -= z - i.height, E *= m ? 1 : -1;
    }
    if (s === qa || (s === Wa || s === ol) && u === aC) {
      L = il;
      var I = C && H === D && D.visualViewport ? D.visualViewport.width : (
        // $FlowFixMe[prop-missing]
        H[Q]
      );
      R -= I - i.width, R *= m ? 1 : -1;
    }
  }
  var G = Object.assign({
    position: p
  }, v && u7), W = y === !0 ? c7({
    x: R,
    y: E
  }, ys(n)) : {
    x: R,
    y: E
  };
  if (R = W.x, E = W.y, m) {
    var B;
    return Object.assign({}, G, (B = {}, B[M] = _ ? "0" : "", B[L] = F ? "0" : "", B.transform = (D.devicePixelRatio || 1) <= 1 ? "translate(" + R + "px, " + E + "px)" : "translate3d(" + R + "px, " + E + "px, 0)", B));
  }
  return Object.assign({}, G, (t = {}, t[M] = _ ? E + "px" : "", t[L] = F ? R + "px" : "", t.transform = "", t));
}
function d7(e) {
  var t = e.state, n = e.options, i = n.gpuAcceleration, s = i === void 0 ? !0 : i, u = n.adaptive, d = u === void 0 ? !0 : u, p = n.roundOffsets, m = p === void 0 ? !0 : p, v = {
    placement: Bu(t.placement),
    variation: Kg(t.placement),
    popper: t.elements.popper,
    popperRect: t.rects.popper,
    gpuAcceleration: s,
    isFixed: t.options.strategy === "fixed"
  };
  t.modifiersData.popperOffsets != null && (t.styles.popper = Object.assign({}, t.styles.popper, kF(Object.assign({}, v, {
    offsets: t.modifiersData.popperOffsets,
    position: t.options.strategy,
    adaptive: d,
    roundOffsets: m
  })))), t.modifiersData.arrow != null && (t.styles.arrow = Object.assign({}, t.styles.arrow, kF(Object.assign({}, v, {
    offsets: t.modifiersData.arrow,
    position: "absolute",
    adaptive: !1,
    roundOffsets: m
  })))), t.attributes.popper = Object.assign({}, t.attributes.popper, {
    "data-popper-placement": t.placement
  });
}
const f7 = {
  name: "computeStyles",
  enabled: !0,
  phase: "beforeWrite",
  fn: d7,
  data: {}
};
var Jx = {
  passive: !0
};
function p7(e) {
  var t = e.state, n = e.instance, i = e.options, s = i.scroll, u = s === void 0 ? !0 : s, d = i.resize, p = d === void 0 ? !0 : d, m = ys(t.elements.popper), v = [].concat(t.scrollParents.reference, t.scrollParents.popper);
  return u && v.forEach(function(y) {
    y.addEventListener("scroll", n.update, Jx);
  }), p && m.addEventListener("resize", n.update, Jx), function() {
    u && v.forEach(function(y) {
      y.removeEventListener("scroll", n.update, Jx);
    }), p && m.removeEventListener("resize", n.update, Jx);
  };
}
const h7 = {
  name: "eventListeners",
  enabled: !0,
  phase: "write",
  fn: function() {
  },
  effect: p7,
  data: {}
};
var m7 = {
  left: "right",
  right: "left",
  bottom: "top",
  top: "bottom"
};
function p0(e) {
  return e.replace(/left|right|bottom|top/g, function(t) {
    return m7[t];
  });
}
var g7 = {
  start: "end",
  end: "start"
};
function PF(e) {
  return e.replace(/start|end/g, function(t) {
    return g7[t];
  });
}
function FP(e) {
  var t = ys(e), n = t.pageXOffset, i = t.pageYOffset;
  return {
    scrollLeft: n,
    scrollTop: i
  };
}
function _P(e) {
  return qg(Tf(e)).left + FP(e).scrollLeft;
}
function v7(e, t) {
  var n = ys(e), i = Tf(e), s = n.visualViewport, u = i.clientWidth, d = i.clientHeight, p = 0, m = 0;
  if (s) {
    u = s.width, d = s.height;
    var v = xj();
    (v || !v && t === "fixed") && (p = s.offsetLeft, m = s.offsetTop);
  }
  return {
    width: u,
    height: d,
    x: p + _P(e),
    y: m
  };
}
function y7(e) {
  var t, n = Tf(e), i = FP(e), s = (t = e.ownerDocument) == null ? void 0 : t.body, u = sh(n.scrollWidth, n.clientWidth, s ? s.scrollWidth : 0, s ? s.clientWidth : 0), d = sh(n.scrollHeight, n.clientHeight, s ? s.scrollHeight : 0, s ? s.clientHeight : 0), p = -i.scrollLeft + _P(e), m = -i.scrollTop;
  return Xc(s || n).direction === "rtl" && (p += sh(n.clientWidth, s ? s.clientWidth : 0) - u), {
    width: u,
    height: d,
    x: p,
    y: m
  };
}
function AP(e) {
  var t = Xc(e), n = t.overflow, i = t.overflowX, s = t.overflowY;
  return /auto|scroll|overlay|hidden/.test(n + s + i);
}
function kj(e) {
  return ["html", "body", "#document"].indexOf(qu(e)) >= 0 ? e.ownerDocument.body : el(e) && AP(e) ? e : kj(TE(e));
}
function Kb(e, t) {
  var n;
  t === void 0 && (t = []);
  var i = kj(e), s = i === ((n = e.ownerDocument) == null ? void 0 : n.body), u = ys(i), d = s ? [u].concat(u.visualViewport || [], AP(i) ? i : []) : i, p = t.concat(d);
  return s ? p : (
    // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here
    p.concat(Kb(TE(d)))
  );
}
function Tk(e) {
  return Object.assign({}, e, {
    left: e.x,
    top: e.y,
    right: e.x + e.width,
    bottom: e.y + e.height
  });
}
function b7(e, t) {
  var n = qg(e, !1, t === "fixed");
  return n.top = n.top + e.clientTop, n.left = n.left + e.clientLeft, n.bottom = n.top + e.clientHeight, n.right = n.left + e.clientWidth, n.width = e.clientWidth, n.height = e.clientHeight, n.x = n.left, n.y = n.top, n;
}
function MF(e, t, n) {
  return t === Sj ? Tk(v7(e, n)) : ph(t) ? b7(t, n) : Tk(y7(Tf(e)));
}
function C7(e) {
  var t = Kb(TE(e)), n = ["absolute", "fixed"].indexOf(Xc(e).position) >= 0, i = n && el(e) ? LC(e) : e;
  return ph(i) ? t.filter(function(s) {
    return ph(s) && Ej(s, i) && qu(s) !== "body";
  }) : [];
}
function S7(e, t, n, i) {
  var s = t === "clippingParents" ? C7(e) : [].concat(t), u = [].concat(s, [n]), d = u[0], p = u.reduce(function(m, v) {
    var y = MF(e, v, i);
    return m.top = sh(y.top, m.top), m.right = N0(y.right, m.right), m.bottom = N0(y.bottom, m.bottom), m.left = sh(y.left, m.left), m;
  }, MF(e, d, i));
  return p.width = p.right - p.left, p.height = p.bottom - p.top, p.x = p.left, p.y = p.top, p;
}
function Pj(e) {
  var t = e.reference, n = e.element, i = e.placement, s = i ? Bu(i) : null, u = i ? Kg(i) : null, d = t.x + t.width / 2 - n.width / 2, p = t.y + t.height / 2 - n.height / 2, m;
  switch (s) {
    case Wa:
      m = {
        x: d,
        y: t.y - n.height
      };
      break;
    case ol:
      m = {
        x: d,
        y: t.y + t.height
      };
      break;
    case il:
      m = {
        x: t.x + t.width,
        y: p
      };
      break;
    case qa:
      m = {
        x: t.x - n.width,
        y: p
      };
      break;
    default:
      m = {
        x: t.x,
        y: t.y
      };
  }
  var v = s ? LP(s) : null;
  if (v != null) {
    var y = v === "y" ? "height" : "width";
    switch (u) {
      case Gg:
        m[v] = m[v] - (t[y] / 2 - n[y] / 2);
        break;
      case aC:
        m[v] = m[v] + (t[y] / 2 - n[y] / 2);
        break;
    }
  }
  return m;
}
function sC(e, t) {
  t === void 0 && (t = {});
  var n = t, i = n.placement, s = i === void 0 ? e.placement : i, u = n.strategy, d = u === void 0 ? e.strategy : u, p = n.boundary, m = p === void 0 ? H9 : p, v = n.rootBoundary, y = v === void 0 ? Sj : v, C = n.elementContext, S = C === void 0 ? Rb : C, R = n.altBoundary, O = R === void 0 ? !1 : R, E = n.padding, k = E === void 0 ? 0 : E, F = Rj(typeof k != "number" ? k : Oj(k, NC)), _ = S === Rb ? V9 : Rb, L = e.rects.popper, M = e.elements[O ? _ : S], D = S7(ph(M) ? M : M.contextElement || Tf(e.elements.popper), m, y, d), H = qg(e.elements.reference), K = Pj({
    reference: H,
    element: L,
    placement: s
  }), Q = Tk(Object.assign({}, L, K)), z = S === Rb ? Q : H, I = {
    top: D.top - z.top + F.top,
    bottom: z.bottom - D.bottom + F.bottom,
    left: D.left - z.left + F.left,
    right: z.right - D.right + F.right
  }, G = e.modifiersData.offset;
  if (S === Rb && G) {
    var W = G[s];
    Object.keys(I).forEach(function(B) {
      var ee = [il, ol].indexOf(B) >= 0 ? 1 : -1, U = [Wa, ol].indexOf(B) >= 0 ? "y" : "x";
      I[B] += W[U] * ee;
    });
  }
  return I;
}
function w7(e, t) {
  t === void 0 && (t = {});
  var n = t, i = n.placement, s = n.boundary, u = n.rootBoundary, d = n.padding, p = n.flipVariations, m = n.allowedAutoPlacements, v = m === void 0 ? wj : m, y = Kg(i), C = y ? p ? RF : RF.filter(function(O) {
    return Kg(O) === y;
  }) : NC, S = C.filter(function(O) {
    return v.indexOf(O) >= 0;
  });
  S.length === 0 && (S = C);
  var R = S.reduce(function(O, E) {
    return O[E] = sC(e, {
      placement: E,
      boundary: s,
      rootBoundary: u,
      padding: d
    })[Bu(E)], O;
  }, {});
  return Object.keys(R).sort(function(O, E) {
    return R[O] - R[E];
  });
}
function x7(e) {
  if (Bu(e) === IP)
    return [];
  var t = p0(e);
  return [PF(e), t, PF(t)];
}
function E7(e) {
  var t = e.state, n = e.options, i = e.name;
  if (!t.modifiersData[i]._skip) {
    for (var s = n.mainAxis, u = s === void 0 ? !0 : s, d = n.altAxis, p = d === void 0 ? !0 : d, m = n.fallbackPlacements, v = n.padding, y = n.boundary, C = n.rootBoundary, S = n.altBoundary, R = n.flipVariations, O = R === void 0 ? !0 : R, E = n.allowedAutoPlacements, k = t.options.placement, F = Bu(k), _ = F === k, L = m || (_ || !O ? [p0(k)] : x7(k)), M = [k].concat(L).reduce(function(ce, me) {
      return ce.concat(Bu(me) === IP ? w7(t, {
        placement: me,
        boundary: y,
        rootBoundary: C,
        padding: v,
        flipVariations: O,
        allowedAutoPlacements: E
      }) : me);
    }, []), D = t.rects.reference, H = t.rects.popper, K = /* @__PURE__ */ new Map(), Q = !0, z = M[0], I = 0; I < M.length; I++) {
      var G = M[I], W = Bu(G), B = Kg(G) === Gg, ee = [Wa, ol].indexOf(W) >= 0, U = ee ? "width" : "height", q = sC(t, {
        placement: G,
        boundary: y,
        rootBoundary: C,
        altBoundary: S,
        padding: v
      }), Y = ee ? B ? il : qa : B ? ol : Wa;
      D[U] > H[U] && (Y = p0(Y));
      var ne = p0(Y), re = [];
      if (u && re.push(q[W] <= 0), p && re.push(q[Y] <= 0, q[ne] <= 0), re.every(function(ce) {
        return ce;
      })) {
        z = G, Q = !1;
        break;
      }
      K.set(G, re);
    }
    if (Q)
      for (var X = O ? 3 : 1, j = function(me) {
        var ge = M.find(function(de) {
          var pe = K.get(de);
          if (pe)
            return pe.slice(0, me).every(function(be) {
              return be;
            });
        });
        if (ge)
          return z = ge, "break";
      }, ie = X; ie > 0; ie--) {
        var fe = j(ie);
        if (fe === "break") break;
      }
    t.placement !== z && (t.modifiersData[i]._skip = !0, t.placement = z, t.reset = !0);
  }
}
const T7 = {
  name: "flip",
  enabled: !0,
  phase: "main",
  fn: E7,
  requiresIfExists: ["offset"],
  data: {
    _skip: !1
  }
};
function IF(e, t, n) {
  return n === void 0 && (n = {
    x: 0,
    y: 0
  }), {
    top: e.top - t.height - n.y,
    right: e.right - t.width + n.x,
    bottom: e.bottom - t.height + n.y,
    left: e.left - t.width - n.x
  };
}
function DF(e) {
  return [Wa, il, ol, qa].some(function(t) {
    return e[t] >= 0;
  });
}
function R7(e) {
  var t = e.state, n = e.name, i = t.rects.reference, s = t.rects.popper, u = t.modifiersData.preventOverflow, d = sC(t, {
    elementContext: "reference"
  }), p = sC(t, {
    altBoundary: !0
  }), m = IF(d, i), v = IF(p, s, u), y = DF(m), C = DF(v);
  t.modifiersData[n] = {
    referenceClippingOffsets: m,
    popperEscapeOffsets: v,
    isReferenceHidden: y,
    hasPopperEscaped: C
  }, t.attributes.popper = Object.assign({}, t.attributes.popper, {
    "data-popper-reference-hidden": y,
    "data-popper-escaped": C
  });
}
const O7 = {
  name: "hide",
  enabled: !0,
  phase: "main",
  requiresIfExists: ["preventOverflow"],
  fn: R7
};
function k7(e, t, n) {
  var i = Bu(e), s = [qa, Wa].indexOf(i) >= 0 ? -1 : 1, u = typeof n == "function" ? n(Object.assign({}, t, {
    placement: e
  })) : n, d = u[0], p = u[1];
  return d = d || 0, p = (p || 0) * s, [qa, il].indexOf(i) >= 0 ? {
    x: p,
    y: d
  } : {
    x: d,
    y: p
  };
}
function P7(e) {
  var t = e.state, n = e.options, i = e.name, s = n.offset, u = s === void 0 ? [0, 0] : s, d = wj.reduce(function(y, C) {
    return y[C] = k7(C, t.rects, u), y;
  }, {}), p = d[t.placement], m = p.x, v = p.y;
  t.modifiersData.popperOffsets != null && (t.modifiersData.popperOffsets.x += m, t.modifiersData.popperOffsets.y += v), t.modifiersData[i] = d;
}
const M7 = {
  name: "offset",
  enabled: !0,
  phase: "main",
  requires: ["popperOffsets"],
  fn: P7
};
function I7(e) {
  var t = e.state, n = e.name;
  t.modifiersData[n] = Pj({
    reference: t.rects.reference,
    element: t.rects.popper,
    placement: t.placement
  });
}
const D7 = {
  name: "popperOffsets",
  enabled: !0,
  phase: "read",
  fn: I7,
  data: {}
};
function N7(e) {
  return e === "x" ? "y" : "x";
}
function L7(e) {
  var t = e.state, n = e.options, i = e.name, s = n.mainAxis, u = s === void 0 ? !0 : s, d = n.altAxis, p = d === void 0 ? !1 : d, m = n.boundary, v = n.rootBoundary, y = n.altBoundary, C = n.padding, S = n.tether, R = S === void 0 ? !0 : S, O = n.tetherOffset, E = O === void 0 ? 0 : O, k = sC(t, {
    boundary: m,
    rootBoundary: v,
    padding: C,
    altBoundary: y
  }), F = Bu(t.placement), _ = Kg(t.placement), L = !_, M = LP(F), D = N7(M), H = t.modifiersData.popperOffsets, K = t.rects.reference, Q = t.rects.popper, z = typeof E == "function" ? E(Object.assign({}, t.rects, {
    placement: t.placement
  })) : E, I = typeof z == "number" ? {
    mainAxis: z,
    altAxis: z
  } : Object.assign({
    mainAxis: 0,
    altAxis: 0
  }, z), G = t.modifiersData.offset ? t.modifiersData.offset[t.placement] : null, W = {
    x: 0,
    y: 0
  };
  if (H) {
    if (u) {
      var B, ee = M === "y" ? Wa : qa, U = M === "y" ? ol : il, q = M === "y" ? "height" : "width", Y = H[M], ne = Y + k[ee], re = Y - k[U], X = R ? -Q[q] / 2 : 0, j = _ === Gg ? K[q] : Q[q], ie = _ === Gg ? -Q[q] : -K[q], fe = t.elements.arrow, ce = R && fe ? NP(fe) : {
        width: 0,
        height: 0
      }, me = t.modifiersData["arrow#persistent"] ? t.modifiersData["arrow#persistent"].padding : Tj(), ge = me[ee], de = me[U], pe = qb(0, K[q], ce[q]), be = L ? K[q] / 2 - X - pe - ge - I.mainAxis : j - pe - ge - I.mainAxis, Ce = L ? -K[q] / 2 + X + pe + de + I.mainAxis : ie + pe + de + I.mainAxis, Re = t.elements.arrow && LC(t.elements.arrow), ue = Re ? M === "y" ? Re.clientTop || 0 : Re.clientLeft || 0 : 0, we = (B = G == null ? void 0 : G[M]) != null ? B : 0, _e = Y + be - we - ue, He = Y + Ce - we, et = qb(R ? N0(ne, _e) : ne, Y, R ? sh(re, He) : re);
      H[M] = et, W[M] = et - Y;
    }
    if (p) {
      var Ne, rt = M === "x" ? Wa : qa, it = M === "x" ? ol : il, wt = H[D], gt = D === "y" ? "height" : "width", ot = wt + k[rt], jt = wt - k[it], ct = [Wa, qa].indexOf(F) !== -1, Tt = (Ne = G == null ? void 0 : G[D]) != null ? Ne : 0, Rt = ct ? ot : wt - K[gt] - Q[gt] - Tt + I.altAxis, Lt = ct ? wt + K[gt] + Q[gt] - Tt - I.altAxis : jt, vt = R && ct ? o7(Rt, wt, Lt) : qb(R ? Rt : ot, wt, R ? Lt : jt);
      H[D] = vt, W[D] = vt - wt;
    }
    t.modifiersData[i] = W;
  }
}
const F7 = {
  name: "preventOverflow",
  enabled: !0,
  phase: "main",
  fn: L7,
  requiresIfExists: ["offset"]
};
function _7(e) {
  return {
    scrollLeft: e.scrollLeft,
    scrollTop: e.scrollTop
  };
}
function A7(e) {
  return e === ys(e) || !el(e) ? FP(e) : _7(e);
}
function $7(e) {
  var t = e.getBoundingClientRect(), n = Wg(t.width) / e.offsetWidth || 1, i = Wg(t.height) / e.offsetHeight || 1;
  return n !== 1 || i !== 1;
}
function j7(e, t, n) {
  n === void 0 && (n = !1);
  var i = el(t), s = el(t) && $7(t), u = Tf(t), d = qg(e, s, n), p = {
    scrollLeft: 0,
    scrollTop: 0
  }, m = {
    x: 0,
    y: 0
  };
  return (i || !i && !n) && ((qu(t) !== "body" || // https://github.com/popperjs/popper-core/issues/1078
  AP(u)) && (p = A7(t)), el(t) ? (m = qg(t, !0), m.x += t.clientLeft, m.y += t.clientTop) : u && (m.x = _P(u))), {
    x: d.left + p.scrollLeft - m.x,
    y: d.top + p.scrollTop - m.y,
    width: d.width,
    height: d.height
  };
}
function z7(e) {
  var t = /* @__PURE__ */ new Map(), n = /* @__PURE__ */ new Set(), i = [];
  e.forEach(function(u) {
    t.set(u.name, u);
  });
  function s(u) {
    n.add(u.name);
    var d = [].concat(u.requires || [], u.requiresIfExists || []);
    d.forEach(function(p) {
      if (!n.has(p)) {
        var m = t.get(p);
        m && s(m);
      }
    }), i.push(u);
  }
  return e.forEach(function(u) {
    n.has(u.name) || s(u);
  }), i;
}
function H7(e) {
  var t = z7(e);
  return J9.reduce(function(n, i) {
    return n.concat(t.filter(function(s) {
      return s.phase === i;
    }));
  }, []);
}
function V7(e) {
  var t;
  return function() {
    return t || (t = new Promise(function(n) {
      Promise.resolve().then(function() {
        t = void 0, n(e());
      });
    })), t;
  };
}
function B7(e) {
  var t = e.reduce(function(n, i) {
    var s = n[i.name];
    return n[i.name] = s ? Object.assign({}, s, i, {
      options: Object.assign({}, s.options, i.options),
      data: Object.assign({}, s.data, i.data)
    }) : i, n;
  }, {});
  return Object.keys(t).map(function(n) {
    return t[n];
  });
}
var NF = {
  placement: "bottom",
  modifiers: [],
  strategy: "absolute"
};
function LF() {
  for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
    t[n] = arguments[n];
  return !t.some(function(i) {
    return !(i && typeof i.getBoundingClientRect == "function");
  });
}
function U7(e) {
  e === void 0 && (e = {});
  var t = e, n = t.defaultModifiers, i = n === void 0 ? [] : n, s = t.defaultOptions, u = s === void 0 ? NF : s;
  return function(p, m, v) {
    v === void 0 && (v = u);
    var y = {
      placement: "bottom",
      orderedModifiers: [],
      options: Object.assign({}, NF, u),
      modifiersData: {},
      elements: {
        reference: p,
        popper: m
      },
      attributes: {},
      styles: {}
    }, C = [], S = !1, R = {
      state: y,
      setOptions: function(F) {
        var _ = typeof F == "function" ? F(y.options) : F;
        E(), y.options = Object.assign({}, u, y.options, _), y.scrollParents = {
          reference: ph(p) ? Kb(p) : p.contextElement ? Kb(p.contextElement) : [],
          popper: Kb(m)
        };
        var L = H7(B7([].concat(i, y.options.modifiers)));
        return y.orderedModifiers = L.filter(function(M) {
          return M.enabled;
        }), O(), R.update();
      },
      // Sync update – it will always be executed, even if not necessary. This
      // is useful for low frequency updates where sync behavior simplifies the
      // logic.
      // For high frequency updates (e.g. `resize` and `scroll` events), always
      // prefer the async Popper#update method
      forceUpdate: function() {
        if (!S) {
          var F = y.elements, _ = F.reference, L = F.popper;
          if (LF(_, L)) {
            y.rects = {
              reference: j7(_, LC(L), y.options.strategy === "fixed"),
              popper: NP(L)
            }, y.reset = !1, y.placement = y.options.placement, y.orderedModifiers.forEach(function(I) {
              return y.modifiersData[I.name] = Object.assign({}, I.data);
            });
            for (var M = 0; M < y.orderedModifiers.length; M++) {
              if (y.reset === !0) {
                y.reset = !1, M = -1;
                continue;
              }
              var D = y.orderedModifiers[M], H = D.fn, K = D.options, Q = K === void 0 ? {} : K, z = D.name;
              typeof H == "function" && (y = H({
                state: y,
                options: Q,
                name: z,
                instance: R
              }) || y);
            }
          }
        }
      },
      // Async and optimistically optimized update – it will not be executed if
      // not necessary (debounced to run at most once-per-tick)
      update: V7(function() {
        return new Promise(function(k) {
          R.forceUpdate(), k(y);
        });
      }),
      destroy: function() {
        E(), S = !0;
      }
    };
    if (!LF(p, m))
      return R;
    R.setOptions(v).then(function(k) {
      !S && v.onFirstUpdate && v.onFirstUpdate(k);
    });
    function O() {
      y.orderedModifiers.forEach(function(k) {
        var F = k.name, _ = k.options, L = _ === void 0 ? {} : _, M = k.effect;
        if (typeof M == "function") {
          var D = M({
            state: y,
            name: F,
            instance: R,
            options: L
          }), H = function() {
          };
          C.push(D || H);
        }
      });
    }
    function E() {
      C.forEach(function(k) {
        return k();
      }), C = [];
    }
    return R;
  };
}
var G7 = [h7, D7, f7, t7, M7, T7, F7, l7, O7], W7 = /* @__PURE__ */ U7({
  defaultModifiers: G7
});
function q7(e) {
  return typeof e == "function" ? e() : e;
}
const lC = /* @__PURE__ */ w.forwardRef(function(t, n) {
  const {
    children: i,
    container: s,
    disablePortal: u = !1
  } = t, [d, p] = w.useState(null), m = Vr(/* @__PURE__ */ w.isValidElement(i) ? yh(i) : null, n);
  if (_r(() => {
    u || p(q7(s) || document.body);
  }, [s, u]), _r(() => {
    if (d && !u)
      return mk(n, d), () => {
        mk(n, null);
      };
  }, [n, d, u]), u) {
    if (/* @__PURE__ */ w.isValidElement(i)) {
      const v = {
        ref: m
      };
      return /* @__PURE__ */ w.cloneElement(i, v);
    }
    return i;
  }
  return d && /* @__PURE__ */ oE.createPortal(i, d);
});
process.env.NODE_ENV !== "production" && (lC.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The children to render into the `container`.
   */
  children: a.node,
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: a.oneOfType([Wl, a.func]),
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: a.bool
});
process.env.NODE_ENV !== "production" && (lC.propTypes = DC(lC.propTypes));
function K7(e) {
  return mn("MuiPopper", e);
}
bn("MuiPopper", ["root"]);
function Y7(e, t) {
  if (t === "ltr")
    return e;
  switch (e) {
    case "bottom-end":
      return "bottom-start";
    case "bottom-start":
      return "bottom-end";
    case "top-end":
      return "top-start";
    case "top-start":
      return "top-end";
    default:
      return e;
  }
}
function L0(e) {
  return typeof e == "function" ? e() : e;
}
function RE(e) {
  return e.nodeType !== void 0;
}
function X7(e) {
  return !RE(e);
}
const Q7 = (e) => {
  const {
    classes: t
  } = e;
  return yt({
    root: ["root"]
  }, K7, t);
}, J7 = {}, Z7 = /* @__PURE__ */ w.forwardRef(function(t, n) {
  const {
    anchorEl: i,
    children: s,
    direction: u,
    disablePortal: d,
    modifiers: p,
    open: m,
    placement: v,
    popperOptions: y,
    popperRef: C,
    slotProps: S = {},
    slots: R = {},
    TransitionProps: O,
    // @ts-ignore internal logic
    ownerState: E,
    // prevent from spreading to DOM, it can come from the parent component e.g. Select.
    ...k
  } = t, F = w.useRef(null), _ = Vr(F, n), L = w.useRef(null), M = Vr(L, C), D = w.useRef(M);
  _r(() => {
    D.current = M;
  }, [M]), w.useImperativeHandle(C, () => L.current, []);
  const H = Y7(v, u), [K, Q] = w.useState(H), [z, I] = w.useState(L0(i));
  w.useEffect(() => {
    L.current && L.current.forceUpdate();
  }), w.useEffect(() => {
    i && I(L0(i));
  }, [i]), _r(() => {
    if (!z || !m)
      return;
    const U = (ne) => {
      Q(ne.placement);
    };
    if (process.env.NODE_ENV !== "production" && z && RE(z) && z.nodeType === 1) {
      const ne = z.getBoundingClientRect();
      process.env.NODE_ENV !== "test" && ne.top === 0 && ne.left === 0 && ne.right === 0 && ne.bottom === 0 && console.warn(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
    }
    let q = [{
      name: "preventOverflow",
      options: {
        altBoundary: d
      }
    }, {
      name: "flip",
      options: {
        altBoundary: d
      }
    }, {
      name: "onUpdate",
      enabled: !0,
      phase: "afterWrite",
      fn: ({
        state: ne
      }) => {
        U(ne);
      }
    }];
    p != null && (q = q.concat(p)), y && y.modifiers != null && (q = q.concat(y.modifiers));
    const Y = W7(z, F.current, {
      placement: H,
      ...y,
      modifiers: q
    });
    return D.current(Y), () => {
      Y.destroy(), D.current(null);
    };
  }, [z, d, p, m, y, H]);
  const G = {
    placement: K
  };
  O !== null && (G.TransitionProps = O);
  const W = Q7(t), B = R.root ?? "div", ee = Ug({
    elementType: B,
    externalSlotProps: S.root,
    externalForwardedProps: k,
    additionalProps: {
      role: "tooltip",
      ref: _
    },
    ownerState: t,
    className: W.root
  });
  return /* @__PURE__ */ A.jsx(B, {
    ...ee,
    children: typeof s == "function" ? s(G) : s
  });
}), Mj = /* @__PURE__ */ w.forwardRef(function(t, n) {
  const {
    anchorEl: i,
    children: s,
    container: u,
    direction: d = "ltr",
    disablePortal: p = !1,
    keepMounted: m = !1,
    modifiers: v,
    open: y,
    placement: C = "bottom",
    popperOptions: S = J7,
    popperRef: R,
    style: O,
    transition: E = !1,
    slotProps: k = {},
    slots: F = {},
    ..._
  } = t, [L, M] = w.useState(!0), D = () => {
    M(!1);
  }, H = () => {
    M(!0);
  };
  if (!m && !y && (!E || L))
    return null;
  let K;
  if (u)
    K = u;
  else if (i) {
    const I = L0(i);
    K = I && RE(I) ? ao(I).body : ao(null).body;
  }
  const Q = !y && m && (!E || L) ? "none" : void 0, z = E ? {
    in: y,
    onEnter: D,
    onExited: H
  } : void 0;
  return /* @__PURE__ */ A.jsx(lC, {
    disablePortal: p,
    container: K,
    children: /* @__PURE__ */ A.jsx(Z7, {
      anchorEl: i,
      direction: d,
      disablePortal: p,
      modifiers: v,
      ref: n,
      open: E ? !L : y,
      placement: C,
      popperOptions: S,
      popperRef: R,
      slotProps: k,
      slots: F,
      ..._,
      style: {
        // Prevents scroll issue, waiting for Popper.js to add this style once initiated.
        position: "fixed",
        // Fix Popper.js display issue
        top: 0,
        left: 0,
        display: Q,
        ...O
      },
      TransitionProps: z,
      children: s
    })
  });
});
process.env.NODE_ENV !== "production" && (Mj.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * An HTML element, [virtualElement](https://popper.js.org/docs/v2/virtual-elements/),
   * or a function that returns either.
   * It's used to set the position of the popper.
   * The return value will passed as the reference object of the Popper instance.
   */
  anchorEl: Gl(a.oneOfType([Wl, a.object, a.func]), (e) => {
    if (e.open) {
      const t = L0(e.anchorEl);
      if (t && RE(t) && t.nodeType === 1) {
        const n = t.getBoundingClientRect();
        if (process.env.NODE_ENV !== "test" && n.top === 0 && n.left === 0 && n.right === 0 && n.bottom === 0)
          return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
      } else if (!t || typeof t.getBoundingClientRect != "function" || X7(t) && t.contextElement != null && t.contextElement.nodeType !== 1)
        return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", "It should be an HTML element instance or a virtualElement ", "(https://popper.js.org/docs/v2/virtual-elements/)."].join(`
`));
    }
    return null;
  }),
  /**
   * Popper render function or node.
   */
  children: a.oneOfType([a.node, a.func]),
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: a.oneOfType([Wl, a.func]),
  /**
   * Direction of the text.
   * @default 'ltr'
   */
  direction: a.oneOf(["ltr", "rtl"]),
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: a.bool,
  /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Popper.
   * @default false
   */
  keepMounted: a.bool,
  /**
   * Popper.js is based on a "plugin-like" architecture,
   * most of its features are fully encapsulated "modifiers".
   *
   * A modifier is a function that is called each time Popper.js needs to
   * compute the position of the popper.
   * For this reason, modifiers should be very performant to avoid bottlenecks.
   * To learn how to create a modifier, [read the modifiers documentation](https://popper.js.org/docs/v2/modifiers/).
   */
  modifiers: a.arrayOf(a.shape({
    data: a.object,
    effect: a.func,
    enabled: a.bool,
    fn: a.func,
    name: a.any,
    options: a.object,
    phase: a.oneOf(["afterMain", "afterRead", "afterWrite", "beforeMain", "beforeRead", "beforeWrite", "main", "read", "write"]),
    requires: a.arrayOf(a.string),
    requiresIfExists: a.arrayOf(a.string)
  })),
  /**
   * If `true`, the component is shown.
   */
  open: a.bool.isRequired,
  /**
   * Popper placement.
   * @default 'bottom'
   */
  placement: a.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  /**
   * Options provided to the [`Popper.js`](https://popper.js.org/docs/v2/constructors/#options) instance.
   * @default {}
   */
  popperOptions: a.shape({
    modifiers: a.array,
    onFirstUpdate: a.func,
    placement: a.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
    strategy: a.oneOf(["absolute", "fixed"])
  }),
  /**
   * A ref that points to the used popper instance.
   */
  popperRef: Ea,
  /**
   * The props used for each slot inside the Popper.
   * @default {}
   */
  slotProps: a.shape({
    root: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside the Popper.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: a.shape({
    root: a.elementType
  }),
  /**
   * Help supporting a react-transition-group/Transition component.
   * @default false
   */
  transition: a.bool
});
const eK = Be(Mj, {
  name: "MuiPopper",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({}), Rf = /* @__PURE__ */ w.forwardRef(function(t, n) {
  const i = zi(), s = xn({
    props: t,
    name: "MuiPopper"
  }), {
    anchorEl: u,
    component: d,
    components: p,
    componentsProps: m,
    container: v,
    disablePortal: y,
    keepMounted: C,
    modifiers: S,
    open: R,
    placement: O,
    popperOptions: E,
    popperRef: k,
    transition: F,
    slots: _,
    slotProps: L,
    ...M
  } = s, D = (_ == null ? void 0 : _.root) ?? (p == null ? void 0 : p.Root), H = {
    anchorEl: u,
    container: v,
    disablePortal: y,
    keepMounted: C,
    modifiers: S,
    open: R,
    placement: O,
    popperOptions: E,
    popperRef: k,
    transition: F,
    ...M
  };
  return /* @__PURE__ */ A.jsx(eK, {
    as: d,
    direction: i ? "rtl" : "ltr",
    slots: {
      root: D
    },
    slotProps: L ?? m,
    ...H,
    ref: n
  });
});
process.env.NODE_ENV !== "production" && (Rf.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * An HTML element, [virtualElement](https://popper.js.org/docs/v2/virtual-elements/),
   * or a function that returns either.
   * It's used to set the position of the popper.
   * The return value will passed as the reference object of the Popper instance.
   */
  anchorEl: a.oneOfType([Wl, a.object, a.func]),
  /**
   * Popper render function or node.
   */
  children: a.oneOfType([a.node, a.func]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * The components used for each slot inside the Popper.
   * Either a string to use a HTML element or a component.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in v7. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/).
   * @default {}
   */
  components: a.shape({
    Root: a.elementType
  }),
  /**
   * The props used for each slot inside the Popper.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/).
   * @default {}
   */
  componentsProps: a.shape({
    root: a.oneOfType([a.func, a.object])
  }),
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: a.oneOfType([Wl, a.func]),
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: a.bool,
  /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Popper.
   * @default false
   */
  keepMounted: a.bool,
  /**
   * Popper.js is based on a "plugin-like" architecture,
   * most of its features are fully encapsulated "modifiers".
   *
   * A modifier is a function that is called each time Popper.js needs to
   * compute the position of the popper.
   * For this reason, modifiers should be very performant to avoid bottlenecks.
   * To learn how to create a modifier, [read the modifiers documentation](https://popper.js.org/docs/v2/modifiers/).
   */
  modifiers: a.arrayOf(a.shape({
    data: a.object,
    effect: a.func,
    enabled: a.bool,
    fn: a.func,
    name: a.any,
    options: a.object,
    phase: a.oneOf(["afterMain", "afterRead", "afterWrite", "beforeMain", "beforeRead", "beforeWrite", "main", "read", "write"]),
    requires: a.arrayOf(a.string),
    requiresIfExists: a.arrayOf(a.string)
  })),
  /**
   * If `true`, the component is shown.
   */
  open: a.bool.isRequired,
  /**
   * Popper placement.
   * @default 'bottom'
   */
  placement: a.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  /**
   * Options provided to the [`Popper.js`](https://popper.js.org/docs/v2/constructors/#options) instance.
   * @default {}
   */
  popperOptions: a.shape({
    modifiers: a.array,
    onFirstUpdate: a.func,
    placement: a.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
    strategy: a.oneOf(["absolute", "fixed"])
  }),
  /**
   * A ref that points to the used popper instance.
   */
  popperRef: Ea,
  /**
   * The props used for each slot inside the Popper.
   * @default {}
   */
  slotProps: a.shape({
    root: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside the Popper.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: a.shape({
    root: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * Help supporting a react-transition-group/Transition component.
   * @default false
   */
  transition: a.bool
});
function tK(e) {
  return mn("MuiListSubheader", e);
}
bn("MuiListSubheader", ["root", "colorPrimary", "colorInherit", "gutters", "inset", "sticky"]);
const nK = (e) => {
  const {
    classes: t,
    color: n,
    disableGutters: i,
    inset: s,
    disableSticky: u
  } = e, d = {
    root: ["root", n !== "default" && `color${Ue(n)}`, !i && "gutters", s && "inset", !u && "sticky"]
  };
  return yt(d, tK, t);
}, rK = Be("li", {
  name: "MuiListSubheader",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.color !== "default" && t[`color${Ue(n.color)}`], !n.disableGutters && t.gutters, n.inset && t.inset, !n.disableSticky && t.sticky];
  }
})(rn(({
  theme: e
}) => ({
  boxSizing: "border-box",
  lineHeight: "48px",
  listStyle: "none",
  color: (e.vars || e).palette.text.secondary,
  fontFamily: e.typography.fontFamily,
  fontWeight: e.typography.fontWeightMedium,
  fontSize: e.typography.pxToRem(14),
  variants: [{
    props: {
      color: "primary"
    },
    style: {
      color: (e.vars || e).palette.primary.main
    }
  }, {
    props: {
      color: "inherit"
    },
    style: {
      color: "inherit"
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.disableGutters,
    style: {
      paddingLeft: 16,
      paddingRight: 16
    }
  }, {
    props: ({
      ownerState: t
    }) => t.inset,
    style: {
      paddingLeft: 72
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.disableSticky,
    style: {
      position: "sticky",
      top: 0,
      zIndex: 1,
      backgroundColor: (e.vars || e).palette.background.paper
    }
  }]
}))), F0 = /* @__PURE__ */ w.forwardRef(function(t, n) {
  const i = xn({
    props: t,
    name: "MuiListSubheader"
  }), {
    className: s,
    color: u = "default",
    component: d = "li",
    disableGutters: p = !1,
    disableSticky: m = !1,
    inset: v = !1,
    ...y
  } = i, C = {
    ...i,
    color: u,
    component: d,
    disableGutters: p,
    disableSticky: m,
    inset: v
  }, S = nK(C);
  return /* @__PURE__ */ A.jsx(rK, {
    as: d,
    className: nt(S.root, s),
    ref: n,
    ownerState: C,
    ...y
  });
});
F0 && (F0.muiSkipListHighlight = !0);
process.env.NODE_ENV !== "production" && (F0.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component. It supports those theme colors that make sense for this component.
   * @default 'default'
   */
  color: a.oneOf(["default", "inherit", "primary"]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * If `true`, the List Subheader will not have gutters.
   * @default false
   */
  disableGutters: a.bool,
  /**
   * If `true`, the List Subheader will not stick to the top during scroll.
   * @default false
   */
  disableSticky: a.bool,
  /**
   * If `true`, the List Subheader is indented.
   * @default false
   */
  inset: a.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
const oK = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z"
}), "Cancel");
function iK(e) {
  return mn("MuiChip", e);
}
const Jn = bn("MuiChip", ["root", "sizeSmall", "sizeMedium", "colorDefault", "colorError", "colorInfo", "colorPrimary", "colorSecondary", "colorSuccess", "colorWarning", "disabled", "clickable", "clickableColorPrimary", "clickableColorSecondary", "deletable", "deletableColorPrimary", "deletableColorSecondary", "outlined", "filled", "outlinedPrimary", "outlinedSecondary", "filledPrimary", "filledSecondary", "avatar", "avatarSmall", "avatarMedium", "avatarColorPrimary", "avatarColorSecondary", "icon", "iconSmall", "iconMedium", "iconColorPrimary", "iconColorSecondary", "label", "labelSmall", "labelMedium", "deleteIcon", "deleteIconSmall", "deleteIconMedium", "deleteIconColorPrimary", "deleteIconColorSecondary", "deleteIconOutlinedColorPrimary", "deleteIconOutlinedColorSecondary", "deleteIconFilledColorPrimary", "deleteIconFilledColorSecondary", "focusVisible"]), aK = (e) => {
  const {
    classes: t,
    disabled: n,
    size: i,
    color: s,
    iconColor: u,
    onDelete: d,
    clickable: p,
    variant: m
  } = e, v = {
    root: ["root", m, n && "disabled", `size${Ue(i)}`, `color${Ue(s)}`, p && "clickable", p && `clickableColor${Ue(s)}`, d && "deletable", d && `deletableColor${Ue(s)}`, `${m}${Ue(s)}`],
    label: ["label", `label${Ue(i)}`],
    avatar: ["avatar", `avatar${Ue(i)}`, `avatarColor${Ue(s)}`],
    icon: ["icon", `icon${Ue(i)}`, `iconColor${Ue(u)}`],
    deleteIcon: ["deleteIcon", `deleteIcon${Ue(i)}`, `deleteIconColor${Ue(s)}`, `deleteIcon${Ue(m)}Color${Ue(s)}`]
  };
  return yt(v, iK, t);
}, sK = Be("div", {
  name: "MuiChip",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e, {
      color: i,
      iconColor: s,
      clickable: u,
      onDelete: d,
      size: p,
      variant: m
    } = n;
    return [{
      [`& .${Jn.avatar}`]: t.avatar
    }, {
      [`& .${Jn.avatar}`]: t[`avatar${Ue(p)}`]
    }, {
      [`& .${Jn.avatar}`]: t[`avatarColor${Ue(i)}`]
    }, {
      [`& .${Jn.icon}`]: t.icon
    }, {
      [`& .${Jn.icon}`]: t[`icon${Ue(p)}`]
    }, {
      [`& .${Jn.icon}`]: t[`iconColor${Ue(s)}`]
    }, {
      [`& .${Jn.deleteIcon}`]: t.deleteIcon
    }, {
      [`& .${Jn.deleteIcon}`]: t[`deleteIcon${Ue(p)}`]
    }, {
      [`& .${Jn.deleteIcon}`]: t[`deleteIconColor${Ue(i)}`]
    }, {
      [`& .${Jn.deleteIcon}`]: t[`deleteIcon${Ue(m)}Color${Ue(i)}`]
    }, t.root, t[`size${Ue(p)}`], t[`color${Ue(i)}`], u && t.clickable, u && i !== "default" && t[`clickableColor${Ue(i)})`], d && t.deletable, d && i !== "default" && t[`deletableColor${Ue(i)}`], t[m], t[`${m}${Ue(i)}`]];
  }
})(rn(({
  theme: e
}) => {
  const t = e.palette.mode === "light" ? e.palette.grey[700] : e.palette.grey[300];
  return {
    maxWidth: "100%",
    fontFamily: e.typography.fontFamily,
    fontSize: e.typography.pxToRem(13),
    display: "inline-flex",
    alignItems: "center",
    justifyContent: "center",
    height: 32,
    color: (e.vars || e).palette.text.primary,
    backgroundColor: (e.vars || e).palette.action.selected,
    borderRadius: 32 / 2,
    whiteSpace: "nowrap",
    transition: e.transitions.create(["background-color", "box-shadow"]),
    // reset cursor explicitly in case ButtonBase is used
    cursor: "unset",
    // We disable the focus ring for mouse, touch and keyboard users.
    outline: 0,
    textDecoration: "none",
    border: 0,
    // Remove `button` border
    padding: 0,
    // Remove `button` padding
    verticalAlign: "middle",
    boxSizing: "border-box",
    [`&.${Jn.disabled}`]: {
      opacity: (e.vars || e).palette.action.disabledOpacity,
      pointerEvents: "none"
    },
    [`& .${Jn.avatar}`]: {
      marginLeft: 5,
      marginRight: -6,
      width: 24,
      height: 24,
      color: e.vars ? e.vars.palette.Chip.defaultAvatarColor : t,
      fontSize: e.typography.pxToRem(12)
    },
    [`& .${Jn.avatarColorPrimary}`]: {
      color: (e.vars || e).palette.primary.contrastText,
      backgroundColor: (e.vars || e).palette.primary.dark
    },
    [`& .${Jn.avatarColorSecondary}`]: {
      color: (e.vars || e).palette.secondary.contrastText,
      backgroundColor: (e.vars || e).palette.secondary.dark
    },
    [`& .${Jn.avatarSmall}`]: {
      marginLeft: 4,
      marginRight: -4,
      width: 18,
      height: 18,
      fontSize: e.typography.pxToRem(10)
    },
    [`& .${Jn.icon}`]: {
      marginLeft: 5,
      marginRight: -6
    },
    [`& .${Jn.deleteIcon}`]: {
      WebkitTapHighlightColor: "transparent",
      color: e.vars ? `rgba(${e.vars.palette.text.primaryChannel} / 0.26)` : $n(e.palette.text.primary, 0.26),
      fontSize: 22,
      cursor: "pointer",
      margin: "0 5px 0 -6px",
      "&:hover": {
        color: e.vars ? `rgba(${e.vars.palette.text.primaryChannel} / 0.4)` : $n(e.palette.text.primary, 0.4)
      }
    },
    variants: [{
      props: {
        size: "small"
      },
      style: {
        height: 24,
        [`& .${Jn.icon}`]: {
          fontSize: 18,
          marginLeft: 4,
          marginRight: -4
        },
        [`& .${Jn.deleteIcon}`]: {
          fontSize: 16,
          marginRight: 4,
          marginLeft: -4
        }
      }
    }, ...Object.entries(e.palette).filter(to(["contrastText"])).map(([n]) => ({
      props: {
        color: n
      },
      style: {
        backgroundColor: (e.vars || e).palette[n].main,
        color: (e.vars || e).palette[n].contrastText,
        [`& .${Jn.deleteIcon}`]: {
          color: e.vars ? `rgba(${e.vars.palette[n].contrastTextChannel} / 0.7)` : $n(e.palette[n].contrastText, 0.7),
          "&:hover, &:active": {
            color: (e.vars || e).palette[n].contrastText
          }
        }
      }
    })), {
      props: (n) => n.iconColor === n.color,
      style: {
        [`& .${Jn.icon}`]: {
          color: e.vars ? e.vars.palette.Chip.defaultIconColor : t
        }
      }
    }, {
      props: (n) => n.iconColor === n.color && n.color !== "default",
      style: {
        [`& .${Jn.icon}`]: {
          color: "inherit"
        }
      }
    }, {
      props: {
        onDelete: !0
      },
      style: {
        [`&.${Jn.focusVisible}`]: {
          backgroundColor: e.vars ? `rgba(${e.vars.palette.action.selectedChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.focusOpacity}))` : $n(e.palette.action.selected, e.palette.action.selectedOpacity + e.palette.action.focusOpacity)
        }
      }
    }, ...Object.entries(e.palette).filter(to(["dark"])).map(([n]) => ({
      props: {
        color: n,
        onDelete: !0
      },
      style: {
        [`&.${Jn.focusVisible}`]: {
          background: (e.vars || e).palette[n].dark
        }
      }
    })), {
      props: {
        clickable: !0
      },
      style: {
        userSelect: "none",
        WebkitTapHighlightColor: "transparent",
        cursor: "pointer",
        "&:hover": {
          backgroundColor: e.vars ? `rgba(${e.vars.palette.action.selectedChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.hoverOpacity}))` : $n(e.palette.action.selected, e.palette.action.selectedOpacity + e.palette.action.hoverOpacity)
        },
        [`&.${Jn.focusVisible}`]: {
          backgroundColor: e.vars ? `rgba(${e.vars.palette.action.selectedChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.focusOpacity}))` : $n(e.palette.action.selected, e.palette.action.selectedOpacity + e.palette.action.focusOpacity)
        },
        "&:active": {
          boxShadow: (e.vars || e).shadows[1]
        }
      }
    }, ...Object.entries(e.palette).filter(to(["dark"])).map(([n]) => ({
      props: {
        color: n,
        clickable: !0
      },
      style: {
        [`&:hover, &.${Jn.focusVisible}`]: {
          backgroundColor: (e.vars || e).palette[n].dark
        }
      }
    })), {
      props: {
        variant: "outlined"
      },
      style: {
        backgroundColor: "transparent",
        border: e.vars ? `1px solid ${e.vars.palette.Chip.defaultBorder}` : `1px solid ${e.palette.mode === "light" ? e.palette.grey[400] : e.palette.grey[700]}`,
        [`&.${Jn.clickable}:hover`]: {
          backgroundColor: (e.vars || e).palette.action.hover
        },
        [`&.${Jn.focusVisible}`]: {
          backgroundColor: (e.vars || e).palette.action.focus
        },
        [`& .${Jn.avatar}`]: {
          marginLeft: 4
        },
        [`& .${Jn.avatarSmall}`]: {
          marginLeft: 2
        },
        [`& .${Jn.icon}`]: {
          marginLeft: 4
        },
        [`& .${Jn.iconSmall}`]: {
          marginLeft: 2
        },
        [`& .${Jn.deleteIcon}`]: {
          marginRight: 5
        },
        [`& .${Jn.deleteIconSmall}`]: {
          marginRight: 3
        }
      }
    }, ...Object.entries(e.palette).filter(to()).map(([n]) => ({
      props: {
        variant: "outlined",
        color: n
      },
      style: {
        color: (e.vars || e).palette[n].main,
        border: `1px solid ${e.vars ? `rgba(${e.vars.palette[n].mainChannel} / 0.7)` : $n(e.palette[n].main, 0.7)}`,
        [`&.${Jn.clickable}:hover`]: {
          backgroundColor: e.vars ? `rgba(${e.vars.palette[n].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : $n(e.palette[n].main, e.palette.action.hoverOpacity)
        },
        [`&.${Jn.focusVisible}`]: {
          backgroundColor: e.vars ? `rgba(${e.vars.palette[n].mainChannel} / ${e.vars.palette.action.focusOpacity})` : $n(e.palette[n].main, e.palette.action.focusOpacity)
        },
        [`& .${Jn.deleteIcon}`]: {
          color: e.vars ? `rgba(${e.vars.palette[n].mainChannel} / 0.7)` : $n(e.palette[n].main, 0.7),
          "&:hover, &:active": {
            color: (e.vars || e).palette[n].main
          }
        }
      }
    }))]
  };
})), lK = Be("span", {
  name: "MuiChip",
  slot: "Label",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e, {
      size: i
    } = n;
    return [t.label, t[`label${Ue(i)}`]];
  }
})({
  overflow: "hidden",
  textOverflow: "ellipsis",
  paddingLeft: 12,
  paddingRight: 12,
  whiteSpace: "nowrap",
  variants: [{
    props: {
      variant: "outlined"
    },
    style: {
      paddingLeft: 11,
      paddingRight: 11
    }
  }, {
    props: {
      size: "small"
    },
    style: {
      paddingLeft: 8,
      paddingRight: 8
    }
  }, {
    props: {
      size: "small",
      variant: "outlined"
    },
    style: {
      paddingLeft: 7,
      paddingRight: 7
    }
  }]
});
function FF(e) {
  return e.key === "Backspace" || e.key === "Delete";
}
const $P = /* @__PURE__ */ w.forwardRef(function(t, n) {
  const i = xn({
    props: t,
    name: "MuiChip"
  }), {
    avatar: s,
    className: u,
    clickable: d,
    color: p = "default",
    component: m,
    deleteIcon: v,
    disabled: y = !1,
    icon: C,
    label: S,
    onClick: R,
    onDelete: O,
    onKeyDown: E,
    onKeyUp: k,
    size: F = "medium",
    variant: _ = "filled",
    tabIndex: L,
    skipFocusWhenDisabled: M = !1,
    // TODO v6: Rename to `focusableWhenDisabled`.
    ...D
  } = i, H = w.useRef(null), K = Vr(H, n), Q = (re) => {
    re.stopPropagation(), O && O(re);
  }, z = (re) => {
    re.currentTarget === re.target && FF(re) && re.preventDefault(), E && E(re);
  }, I = (re) => {
    re.currentTarget === re.target && O && FF(re) && O(re), k && k(re);
  }, G = d !== !1 && R ? !0 : d, W = G || O ? Yc : m || "div", B = {
    ...i,
    component: W,
    disabled: y,
    size: F,
    color: p,
    iconColor: /* @__PURE__ */ w.isValidElement(C) && C.props.color || p,
    onDelete: !!O,
    clickable: G,
    variant: _
  }, ee = aK(B), U = W === Yc ? {
    component: m || "div",
    focusVisibleClassName: ee.focusVisible,
    ...O && {
      disableRipple: !0
    }
  } : {};
  let q = null;
  O && (q = v && /* @__PURE__ */ w.isValidElement(v) ? /* @__PURE__ */ w.cloneElement(v, {
    className: nt(v.props.className, ee.deleteIcon),
    onClick: Q
  }) : /* @__PURE__ */ A.jsx(oK, {
    className: nt(ee.deleteIcon),
    onClick: Q
  }));
  let Y = null;
  s && /* @__PURE__ */ w.isValidElement(s) && (Y = /* @__PURE__ */ w.cloneElement(s, {
    className: nt(ee.avatar, s.props.className)
  }));
  let ne = null;
  return C && /* @__PURE__ */ w.isValidElement(C) && (ne = /* @__PURE__ */ w.cloneElement(C, {
    className: nt(ee.icon, C.props.className)
  })), process.env.NODE_ENV !== "production" && Y && ne && console.error("MUI: The Chip component can not handle the avatar and the icon prop at the same time. Pick one."), /* @__PURE__ */ A.jsxs(sK, {
    as: W,
    className: nt(ee.root, u),
    disabled: G && y ? !0 : void 0,
    onClick: R,
    onKeyDown: z,
    onKeyUp: I,
    ref: K,
    tabIndex: M && y ? -1 : L,
    ownerState: B,
    ...U,
    ...D,
    children: [Y || ne, /* @__PURE__ */ A.jsx(lK, {
      className: nt(ee.label),
      ownerState: B,
      children: S
    }), q]
  });
});
process.env.NODE_ENV !== "production" && ($P.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The Avatar element to display.
   */
  avatar: a.element,
  /**
   * This prop isn't supported.
   * Use the `component` prop if you need to change the children structure.
   */
  children: W$,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * If `true`, the chip will appear clickable, and will raise when pressed,
   * even if the onClick prop is not defined.
   * If `false`, the chip will not appear clickable, even if onClick prop is defined.
   * This can be used, for example,
   * along with the component prop to indicate an anchor Chip is clickable.
   * Note: this controls the UI and does not affect the onClick event.
   */
  clickable: a.bool,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'default'
   */
  color: a.oneOfType([a.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), a.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * Override the default delete icon element. Shown only if `onDelete` is set.
   */
  deleteIcon: a.element,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: a.bool,
  /**
   * Icon element.
   */
  icon: a.element,
  /**
   * The content of the component.
   */
  label: a.node,
  /**
   * @ignore
   */
  onClick: a.func,
  /**
   * Callback fired when the delete icon is clicked.
   * If set, the delete icon will be shown.
   */
  onDelete: a.func,
  /**
   * @ignore
   */
  onKeyDown: a.func,
  /**
   * @ignore
   */
  onKeyUp: a.func,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: a.oneOfType([a.oneOf(["medium", "small"]), a.string]),
  /**
   * If `true`, allows the disabled chip to escape focus.
   * If `false`, allows the disabled chip to receive focus.
   * @default false
   */
  skipFocusWhenDisabled: a.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * @ignore
   */
  tabIndex: a.number,
  /**
   * The variant to use.
   * @default 'filled'
   */
  variant: a.oneOfType([a.oneOf(["filled", "outlined"]), a.string])
});
function Zx(e) {
  return parseInt(e, 10) || 0;
}
const uK = {
  shadow: {
    // Visibility needed to hide the extra text area on iPads
    visibility: "hidden",
    // Remove from the content flow
    position: "absolute",
    // Ignore the scrollbar width
    overflow: "hidden",
    height: 0,
    top: 0,
    left: 0,
    // Create a new layer, increase the isolation of the computed values
    transform: "translateZ(0)"
  }
};
function cK(e) {
  for (const t in e)
    return !1;
  return !0;
}
function _F(e) {
  return cK(e) || e.outerHeightStyle === 0 && !e.overflowing;
}
const Ij = /* @__PURE__ */ w.forwardRef(function(t, n) {
  const {
    onChange: i,
    maxRows: s,
    minRows: u = 1,
    style: d,
    value: p,
    ...m
  } = t, {
    current: v
  } = w.useRef(p != null), y = w.useRef(null), C = Vr(n, y), S = w.useRef(null), R = w.useRef(null), O = w.useCallback(() => {
    const L = y.current, M = R.current;
    if (!L || !M)
      return;
    const H = rl(L).getComputedStyle(L);
    if (H.width === "0px")
      return {
        outerHeightStyle: 0,
        overflowing: !1
      };
    M.style.width = H.width, M.value = L.value || t.placeholder || "x", M.value.slice(-1) === `
` && (M.value += " ");
    const K = H.boxSizing, Q = Zx(H.paddingBottom) + Zx(H.paddingTop), z = Zx(H.borderBottomWidth) + Zx(H.borderTopWidth), I = M.scrollHeight;
    M.value = "x";
    const G = M.scrollHeight;
    let W = I;
    u && (W = Math.max(Number(u) * G, W)), s && (W = Math.min(Number(s) * G, W)), W = Math.max(W, G);
    const B = W + (K === "border-box" ? Q + z : 0), ee = Math.abs(W - I) <= 1;
    return {
      outerHeightStyle: B,
      overflowing: ee
    };
  }, [s, u, t.placeholder]), E = Nn(() => {
    const L = y.current, M = O();
    if (!L || !M || _F(M))
      return !1;
    const D = M.outerHeightStyle;
    return S.current != null && S.current !== D;
  }), k = w.useCallback(() => {
    const L = y.current, M = O();
    if (!L || !M || _F(M))
      return;
    const D = M.outerHeightStyle;
    S.current !== D && (S.current = D, L.style.height = `${D}px`), L.style.overflow = M.overflowing ? "hidden" : "";
  }, [O]), F = w.useRef(-1);
  _r(() => {
    const L = SE(k), M = y == null ? void 0 : y.current;
    if (!M)
      return;
    const D = rl(M);
    D.addEventListener("resize", L);
    let H;
    return typeof ResizeObserver < "u" && (H = new ResizeObserver(() => {
      E() && (H.unobserve(M), cancelAnimationFrame(F.current), k(), F.current = requestAnimationFrame(() => {
        H.observe(M);
      }));
    }), H.observe(M)), () => {
      L.clear(), cancelAnimationFrame(F.current), D.removeEventListener("resize", L), H && H.disconnect();
    };
  }, [O, k, E]), _r(() => {
    k();
  });
  const _ = (L) => {
    v || k(), i && i(L);
  };
  return /* @__PURE__ */ A.jsxs(w.Fragment, {
    children: [/* @__PURE__ */ A.jsx("textarea", {
      value: p,
      onChange: _,
      ref: C,
      rows: u,
      style: d,
      ...m
    }), /* @__PURE__ */ A.jsx("textarea", {
      "aria-hidden": !0,
      className: t.className,
      readOnly: !0,
      ref: R,
      tabIndex: -1,
      style: {
        ...uK.shadow,
        ...d,
        paddingTop: 0,
        paddingBottom: 0
      }
    })]
  });
});
process.env.NODE_ENV !== "production" && (Ij.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  className: a.string,
  /**
   * Maximum number of rows to display.
   */
  maxRows: a.oneOfType([a.number, a.string]),
  /**
   * Minimum number of rows to display.
   * @default 1
   */
  minRows: a.oneOfType([a.number, a.string]),
  /**
   * @ignore
   */
  onChange: a.func,
  /**
   * @ignore
   */
  placeholder: a.string,
  /**
   * @ignore
   */
  style: a.object,
  /**
   * @ignore
   */
  value: a.oneOfType([a.arrayOf(a.string), a.number, a.string])
});
function Rk(e) {
  return typeof e == "string";
}
function bh({
  props: e,
  states: t,
  muiFormControl: n
}) {
  return t.reduce((i, s) => (i[s] = e[s], n && typeof e[s] > "u" && (i[s] = n[s]), i), {});
}
const FC = /* @__PURE__ */ w.createContext(void 0);
process.env.NODE_ENV !== "production" && (FC.displayName = "FormControlContext");
function Qc() {
  return w.useContext(FC);
}
function AF(e) {
  return e != null && !(Array.isArray(e) && e.length === 0);
}
function _0(e, t = !1) {
  return e && (AF(e.value) && e.value !== "" || t && AF(e.defaultValue) && e.defaultValue !== "");
}
function dK(e) {
  return e.startAdornment;
}
function fK(e) {
  return mn("MuiInputBase", e);
}
const bi = bn("MuiInputBase", ["root", "formControl", "focused", "disabled", "adornedStart", "adornedEnd", "error", "sizeSmall", "multiline", "colorSecondary", "fullWidth", "hiddenLabel", "readOnly", "input", "inputSizeSmall", "inputMultiline", "inputTypeSearch", "inputAdornedStart", "inputAdornedEnd", "inputHiddenLabel"]);
var $F;
const OE = (e, t) => {
  const {
    ownerState: n
  } = e;
  return [t.root, n.formControl && t.formControl, n.startAdornment && t.adornedStart, n.endAdornment && t.adornedEnd, n.error && t.error, n.size === "small" && t.sizeSmall, n.multiline && t.multiline, n.color && t[`color${Ue(n.color)}`], n.fullWidth && t.fullWidth, n.hiddenLabel && t.hiddenLabel];
}, kE = (e, t) => {
  const {
    ownerState: n
  } = e;
  return [t.input, n.size === "small" && t.inputSizeSmall, n.multiline && t.inputMultiline, n.type === "search" && t.inputTypeSearch, n.startAdornment && t.inputAdornedStart, n.endAdornment && t.inputAdornedEnd, n.hiddenLabel && t.inputHiddenLabel];
}, pK = (e) => {
  const {
    classes: t,
    color: n,
    disabled: i,
    error: s,
    endAdornment: u,
    focused: d,
    formControl: p,
    fullWidth: m,
    hiddenLabel: v,
    multiline: y,
    readOnly: C,
    size: S,
    startAdornment: R,
    type: O
  } = e, E = {
    root: ["root", `color${Ue(n)}`, i && "disabled", s && "error", m && "fullWidth", d && "focused", p && "formControl", S && S !== "medium" && `size${Ue(S)}`, y && "multiline", R && "adornedStart", u && "adornedEnd", v && "hiddenLabel", C && "readOnly"],
    input: ["input", i && "disabled", O === "search" && "inputTypeSearch", y && "inputMultiline", S === "small" && "inputSizeSmall", v && "inputHiddenLabel", R && "inputAdornedStart", u && "inputAdornedEnd", C && "readOnly"]
  };
  return yt(E, fK, t);
}, PE = Be("div", {
  name: "MuiInputBase",
  slot: "Root",
  overridesResolver: OE
})(rn(({
  theme: e
}) => ({
  ...e.typography.body1,
  color: (e.vars || e).palette.text.primary,
  lineHeight: "1.4375em",
  // 23px
  boxSizing: "border-box",
  // Prevent padding issue with fullWidth.
  position: "relative",
  cursor: "text",
  display: "inline-flex",
  alignItems: "center",
  [`&.${bi.disabled}`]: {
    color: (e.vars || e).palette.text.disabled,
    cursor: "default"
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.multiline,
    style: {
      padding: "4px 0 5px"
    }
  }, {
    props: ({
      ownerState: t,
      size: n
    }) => t.multiline && n === "small",
    style: {
      paddingTop: 1
    }
  }, {
    props: ({
      ownerState: t
    }) => t.fullWidth,
    style: {
      width: "100%"
    }
  }]
}))), ME = Be("input", {
  name: "MuiInputBase",
  slot: "Input",
  overridesResolver: kE
})(rn(({
  theme: e
}) => {
  const t = e.palette.mode === "light", n = {
    color: "currentColor",
    ...e.vars ? {
      opacity: e.vars.opacity.inputPlaceholder
    } : {
      opacity: t ? 0.42 : 0.5
    },
    transition: e.transitions.create("opacity", {
      duration: e.transitions.duration.shorter
    })
  }, i = {
    opacity: "0 !important"
  }, s = e.vars ? {
    opacity: e.vars.opacity.inputPlaceholder
  } : {
    opacity: t ? 0.42 : 0.5
  };
  return {
    font: "inherit",
    letterSpacing: "inherit",
    color: "currentColor",
    padding: "4px 0 5px",
    border: 0,
    boxSizing: "content-box",
    background: "none",
    height: "1.4375em",
    // Reset 23pxthe native input line-height
    margin: 0,
    // Reset for Safari
    WebkitTapHighlightColor: "transparent",
    display: "block",
    // Make the flex item shrink with Firefox
    minWidth: 0,
    width: "100%",
    "&::-webkit-input-placeholder": n,
    "&::-moz-placeholder": n,
    // Firefox 19+
    "&::-ms-input-placeholder": n,
    // Edge
    "&:focus": {
      outline: 0
    },
    // Reset Firefox invalid required input style
    "&:invalid": {
      boxShadow: "none"
    },
    "&::-webkit-search-decoration": {
      // Remove the padding when type=search.
      WebkitAppearance: "none"
    },
    // Show and hide the placeholder logic
    [`label[data-shrink=false] + .${bi.formControl} &`]: {
      "&::-webkit-input-placeholder": i,
      "&::-moz-placeholder": i,
      // Firefox 19+
      "&::-ms-input-placeholder": i,
      // Edge
      "&:focus::-webkit-input-placeholder": s,
      "&:focus::-moz-placeholder": s,
      // Firefox 19+
      "&:focus::-ms-input-placeholder": s
      // Edge
    },
    [`&.${bi.disabled}`]: {
      opacity: 1,
      // Reset iOS opacity
      WebkitTextFillColor: (e.vars || e).palette.text.disabled
      // Fix opacity Safari bug
    },
    variants: [{
      props: ({
        ownerState: u
      }) => !u.disableInjectingGlobalStyles,
      style: {
        animationName: "mui-auto-fill-cancel",
        animationDuration: "10ms",
        "&:-webkit-autofill": {
          animationDuration: "5000s",
          animationName: "mui-auto-fill"
        }
      }
    }, {
      props: {
        size: "small"
      },
      style: {
        paddingTop: 1
      }
    }, {
      props: ({
        ownerState: u
      }) => u.multiline,
      style: {
        height: "auto",
        resize: "none",
        padding: 0,
        paddingTop: 0
      }
    }, {
      props: {
        type: "search"
      },
      style: {
        MozAppearance: "textfield"
        // Improve type search style.
      }
    }]
  };
})), jF = OP({
  "@keyframes mui-auto-fill": {
    from: {
      display: "block"
    }
  },
  "@keyframes mui-auto-fill-cancel": {
    from: {
      display: "block"
    }
  }
}), Ch = /* @__PURE__ */ w.forwardRef(function(t, n) {
  const i = xn({
    props: t,
    name: "MuiInputBase"
  }), {
    "aria-describedby": s,
    autoComplete: u,
    autoFocus: d,
    className: p,
    color: m,
    components: v = {},
    componentsProps: y = {},
    defaultValue: C,
    disabled: S,
    disableInjectingGlobalStyles: R,
    endAdornment: O,
    error: E,
    fullWidth: k = !1,
    id: F,
    inputComponent: _ = "input",
    inputProps: L = {},
    inputRef: M,
    margin: D,
    maxRows: H,
    minRows: K,
    multiline: Q = !1,
    name: z,
    onBlur: I,
    onChange: G,
    onClick: W,
    onFocus: B,
    onKeyDown: ee,
    onKeyUp: U,
    placeholder: q,
    readOnly: Y,
    renderSuffix: ne,
    rows: re,
    size: X,
    slotProps: j = {},
    slots: ie = {},
    startAdornment: fe,
    type: ce = "text",
    value: me,
    ...ge
  } = i, de = L.value != null ? L.value : me, {
    current: pe
  } = w.useRef(de != null), be = w.useRef(), Ce = w.useCallback((Me) => {
    process.env.NODE_ENV !== "production" && Me && Me.nodeName !== "INPUT" && !Me.focus && console.error(["MUI: You have provided a `inputComponent` to the input component", "that does not correctly handle the `ref` prop.", "Make sure the `ref` prop is called with a HTMLInputElement."].join(`
`));
  }, []), Re = Vr(be, M, L.ref, Ce), [ue, we] = w.useState(!1), _e = Qc();
  process.env.NODE_ENV !== "production" && w.useEffect(() => {
    if (_e)
      return _e.registerEffect();
  }, [_e]);
  const He = bh({
    props: i,
    muiFormControl: _e,
    states: ["color", "disabled", "error", "hiddenLabel", "size", "required", "filled"]
  });
  He.focused = _e ? _e.focused : ue, w.useEffect(() => {
    !_e && S && ue && (we(!1), I && I());
  }, [_e, S, ue, I]);
  const et = _e && _e.onFilled, Ne = _e && _e.onEmpty, rt = w.useCallback((Me) => {
    _0(Me) ? et && et() : Ne && Ne();
  }, [et, Ne]);
  _r(() => {
    pe && rt({
      value: de
    });
  }, [de, rt, pe]);
  const it = (Me) => {
    B && B(Me), L.onFocus && L.onFocus(Me), _e && _e.onFocus ? _e.onFocus(Me) : we(!0);
  }, wt = (Me) => {
    I && I(Me), L.onBlur && L.onBlur(Me), _e && _e.onBlur ? _e.onBlur(Me) : we(!1);
  }, gt = (Me, ...ht) => {
    if (!pe) {
      const xt = Me.target || be.current;
      if (xt == null)
        throw new Error(process.env.NODE_ENV !== "production" ? "MUI: Expected valid input target. Did you use a custom `inputComponent` and forget to forward refs? See https://mui.com/r/input-component-ref-interface for more info." : Gu(1));
      rt({
        value: xt.value
      });
    }
    L.onChange && L.onChange(Me, ...ht), G && G(Me, ...ht);
  };
  w.useEffect(() => {
    rt(be.current);
  }, []);
  const ot = (Me) => {
    be.current && Me.currentTarget === Me.target && be.current.focus(), W && W(Me);
  };
  let jt = _, ct = L;
  Q && jt === "input" && (re ? (process.env.NODE_ENV !== "production" && (K || H) && console.warn("MUI: You can not use the `minRows` or `maxRows` props when the input `rows` prop is set."), ct = {
    type: void 0,
    minRows: re,
    maxRows: re,
    ...ct
  }) : ct = {
    type: void 0,
    maxRows: H,
    minRows: K,
    ...ct
  }, jt = Ij);
  const Tt = (Me) => {
    rt(Me.animationName === "mui-auto-fill-cancel" ? be.current : {
      value: "x"
    });
  };
  w.useEffect(() => {
    _e && _e.setAdornedStart(!!fe);
  }, [_e, fe]);
  const Rt = {
    ...i,
    color: He.color || "primary",
    disabled: He.disabled,
    endAdornment: O,
    error: He.error,
    focused: He.focused,
    formControl: _e,
    fullWidth: k,
    hiddenLabel: He.hiddenLabel,
    multiline: Q,
    size: He.size,
    startAdornment: fe,
    type: ce
  }, Lt = pK(Rt), vt = ie.root || v.Root || PE, Qe = j.root || y.root || {}, Oe = ie.input || v.Input || ME;
  return ct = {
    ...ct,
    ...j.input ?? y.input
  }, /* @__PURE__ */ A.jsxs(w.Fragment, {
    children: [!R && typeof jF == "function" && // For Emotion/Styled-components, InputGlobalStyles will be a function
    // For Pigment CSS, this has no effect because the InputGlobalStyles will be null.
    ($F || ($F = /* @__PURE__ */ A.jsx(jF, {}))), /* @__PURE__ */ A.jsxs(vt, {
      ...Qe,
      ref: n,
      onClick: ot,
      ...ge,
      ...!Rk(vt) && {
        ownerState: {
          ...Rt,
          ...Qe.ownerState
        }
      },
      className: nt(Lt.root, Qe.className, p, Y && "MuiInputBase-readOnly"),
      children: [fe, /* @__PURE__ */ A.jsx(FC.Provider, {
        value: null,
        children: /* @__PURE__ */ A.jsx(Oe, {
          "aria-invalid": He.error,
          "aria-describedby": s,
          autoComplete: u,
          autoFocus: d,
          defaultValue: C,
          disabled: He.disabled,
          id: F,
          onAnimationStart: Tt,
          name: z,
          placeholder: q,
          readOnly: Y,
          required: He.required,
          rows: re,
          value: de,
          onKeyDown: ee,
          onKeyUp: U,
          type: ce,
          ...ct,
          ...!Rk(Oe) && {
            as: jt,
            ownerState: {
              ...Rt,
              ...ct.ownerState
            }
          },
          ref: Re,
          className: nt(Lt.input, ct.className, Y && "MuiInputBase-readOnly"),
          onBlur: wt,
          onChange: gt,
          onFocus: it
        })
      }), O, ne ? ne({
        ...He,
        startAdornment: fe
      }) : null]
    })]
  });
});
process.env.NODE_ENV !== "production" && (Ch.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  "aria-describedby": a.string,
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: a.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: a.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: a.oneOfType([a.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), a.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: a.shape({
    Input: a.elementType,
    Root: a.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: a.shape({
    input: a.object,
    root: a.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: a.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: a.bool,
  /**
   * If `true`, GlobalStyles for the auto-fill keyframes will not be injected/removed on mount/unmount. Make sure to inject them at the top of your application.
   * This option is intended to help with boosting the initial rendering performance if you are loading a big amount of Input components at once.
   * @default false
   */
  disableInjectingGlobalStyles: a.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: a.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: a.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: a.bool,
  /**
   * The id of the `input` element.
   */
  id: a.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: yP,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: a.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Ea,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: a.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: a.oneOfType([a.number, a.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: a.oneOfType([a.number, a.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: a.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: a.string,
  /**
   * Callback fired when the `input` is blurred.
   *
   * Notice that the first argument (event) might be undefined.
   */
  onBlur: a.func,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: a.func,
  /**
   * @ignore
   */
  onClick: a.func,
  /**
   * @ignore
   */
  onFocus: a.func,
  /**
   * Callback fired when the `input` doesn't satisfy its constraints.
   */
  onInvalid: a.func,
  /**
   * @ignore
   */
  onKeyDown: a.func,
  /**
   * @ignore
   */
  onKeyUp: a.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: a.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: a.bool,
  /**
   * @ignore
   */
  renderSuffix: a.func,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: a.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: a.oneOfType([a.number, a.string]),
  /**
   * The size of the component.
   */
  size: a.oneOfType([a.oneOf(["medium", "small"]), a.string]),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: a.shape({
    input: a.object,
    root: a.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: a.shape({
    input: a.elementType,
    root: a.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: a.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: a.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: a.any
});
function hK(e) {
  return mn("MuiInput", e);
}
const of = {
  ...bi,
  ...bn("MuiInput", ["root", "underline", "input"])
};
function mK(e) {
  return mn("MuiOutlinedInput", e);
}
const Ws = {
  ...bi,
  ...bn("MuiOutlinedInput", ["root", "notchedOutline", "input"])
};
function gK(e) {
  return mn("MuiFilledInput", e);
}
const cs = {
  ...bi,
  ...bn("MuiFilledInput", ["root", "underline", "input", "adornedStart", "adornedEnd", "sizeSmall", "multiline", "hiddenLabel"])
}, Dj = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M7 10l5 5 5-5z"
}), "ArrowDropDown");
function vK(e) {
  return mn("MuiAutocomplete", e);
}
const Vn = bn("MuiAutocomplete", ["root", "expanded", "fullWidth", "focused", "focusVisible", "tag", "tagSizeSmall", "tagSizeMedium", "hasPopupIcon", "hasClearIcon", "inputRoot", "input", "inputFocused", "endAdornment", "clearIndicator", "popupIndicator", "popupIndicatorOpen", "popper", "popperDisablePortal", "paper", "listbox", "loading", "noOptions", "option", "groupLabel", "groupUl"]);
var zF, HF;
const yK = (e) => {
  const {
    classes: t,
    disablePortal: n,
    expanded: i,
    focused: s,
    fullWidth: u,
    hasClearIcon: d,
    hasPopupIcon: p,
    inputFocused: m,
    popupOpen: v,
    size: y
  } = e, C = {
    root: ["root", i && "expanded", s && "focused", u && "fullWidth", d && "hasClearIcon", p && "hasPopupIcon"],
    inputRoot: ["inputRoot"],
    input: ["input", m && "inputFocused"],
    tag: ["tag", `tagSize${Ue(y)}`],
    endAdornment: ["endAdornment"],
    clearIndicator: ["clearIndicator"],
    popupIndicator: ["popupIndicator", v && "popupIndicatorOpen"],
    popper: ["popper", n && "popperDisablePortal"],
    paper: ["paper"],
    listbox: ["listbox"],
    loading: ["loading"],
    noOptions: ["noOptions"],
    option: ["option"],
    groupLabel: ["groupLabel"],
    groupUl: ["groupUl"]
  };
  return yt(C, vK, t);
}, bK = Be("div", {
  name: "MuiAutocomplete",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e, {
      fullWidth: i,
      hasClearIcon: s,
      hasPopupIcon: u,
      inputFocused: d,
      size: p
    } = n;
    return [{
      [`& .${Vn.tag}`]: t.tag
    }, {
      [`& .${Vn.tag}`]: t[`tagSize${Ue(p)}`]
    }, {
      [`& .${Vn.inputRoot}`]: t.inputRoot
    }, {
      [`& .${Vn.input}`]: t.input
    }, {
      [`& .${Vn.input}`]: d && t.inputFocused
    }, t.root, i && t.fullWidth, u && t.hasPopupIcon, s && t.hasClearIcon];
  }
})({
  [`&.${Vn.focused} .${Vn.clearIndicator}`]: {
    visibility: "visible"
  },
  /* Avoid double tap issue on iOS */
  "@media (pointer: fine)": {
    [`&:hover .${Vn.clearIndicator}`]: {
      visibility: "visible"
    }
  },
  [`& .${Vn.tag}`]: {
    margin: 3,
    maxWidth: "calc(100% - 6px)"
  },
  [`& .${Vn.inputRoot}`]: {
    [`.${Vn.hasPopupIcon}&, .${Vn.hasClearIcon}&`]: {
      paddingRight: 30
    },
    [`.${Vn.hasPopupIcon}.${Vn.hasClearIcon}&`]: {
      paddingRight: 56
    },
    [`& .${Vn.input}`]: {
      width: 0,
      minWidth: 30
    }
  },
  [`& .${of.root}`]: {
    paddingBottom: 1,
    "& .MuiInput-input": {
      padding: "4px 4px 4px 0px"
    }
  },
  [`& .${of.root}.${bi.sizeSmall}`]: {
    [`& .${of.input}`]: {
      padding: "2px 4px 3px 0"
    }
  },
  [`& .${Ws.root}`]: {
    padding: 9,
    [`.${Vn.hasPopupIcon}&, .${Vn.hasClearIcon}&`]: {
      paddingRight: 39
    },
    [`.${Vn.hasPopupIcon}.${Vn.hasClearIcon}&`]: {
      paddingRight: 65
    },
    [`& .${Vn.input}`]: {
      padding: "7.5px 4px 7.5px 5px"
    },
    [`& .${Vn.endAdornment}`]: {
      right: 9
    }
  },
  [`& .${Ws.root}.${bi.sizeSmall}`]: {
    // Don't specify paddingRight, as it overrides the default value set when there is only
    // one of the popup or clear icon as the specificity is equal so the latter one wins
    paddingTop: 6,
    paddingBottom: 6,
    paddingLeft: 6,
    [`& .${Vn.input}`]: {
      padding: "2.5px 4px 2.5px 8px"
    }
  },
  [`& .${cs.root}`]: {
    paddingTop: 19,
    paddingLeft: 8,
    [`.${Vn.hasPopupIcon}&, .${Vn.hasClearIcon}&`]: {
      paddingRight: 39
    },
    [`.${Vn.hasPopupIcon}.${Vn.hasClearIcon}&`]: {
      paddingRight: 65
    },
    [`& .${cs.input}`]: {
      padding: "7px 4px"
    },
    [`& .${Vn.endAdornment}`]: {
      right: 9
    }
  },
  [`& .${cs.root}.${bi.sizeSmall}`]: {
    paddingBottom: 1,
    [`& .${cs.input}`]: {
      padding: "2.5px 4px"
    }
  },
  [`& .${bi.hiddenLabel}`]: {
    paddingTop: 8
  },
  [`& .${cs.root}.${bi.hiddenLabel}`]: {
    paddingTop: 0,
    paddingBottom: 0,
    [`& .${Vn.input}`]: {
      paddingTop: 16,
      paddingBottom: 17
    }
  },
  [`& .${cs.root}.${bi.hiddenLabel}.${bi.sizeSmall}`]: {
    [`& .${Vn.input}`]: {
      paddingTop: 8,
      paddingBottom: 9
    }
  },
  [`& .${Vn.input}`]: {
    flexGrow: 1,
    textOverflow: "ellipsis",
    opacity: 0
  },
  variants: [{
    props: {
      fullWidth: !0
    },
    style: {
      width: "100%"
    }
  }, {
    props: {
      size: "small"
    },
    style: {
      [`& .${Vn.tag}`]: {
        margin: 2,
        maxWidth: "calc(100% - 4px)"
      }
    }
  }, {
    props: {
      inputFocused: !0
    },
    style: {
      [`& .${Vn.input}`]: {
        opacity: 1
      }
    }
  }, {
    props: {
      multiple: !0
    },
    style: {
      [`& .${Vn.inputRoot}`]: {
        flexWrap: "wrap"
      }
    }
  }]
}), CK = Be("div", {
  name: "MuiAutocomplete",
  slot: "EndAdornment",
  overridesResolver: (e, t) => t.endAdornment
})({
  // We use a position absolute to support wrapping tags.
  position: "absolute",
  right: 0,
  top: "50%",
  transform: "translate(0, -50%)"
}), SK = Be(Wc, {
  name: "MuiAutocomplete",
  slot: "ClearIndicator",
  overridesResolver: (e, t) => t.clearIndicator
})({
  marginRight: -2,
  padding: 4,
  visibility: "hidden"
}), wK = Be(Wc, {
  name: "MuiAutocomplete",
  slot: "PopupIndicator",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.popupIndicator, n.popupOpen && t.popupIndicatorOpen];
  }
})({
  padding: 2,
  marginRight: -2,
  variants: [{
    props: {
      popupOpen: !0
    },
    style: {
      transform: "rotate(180deg)"
    }
  }]
}), xK = Be(Rf, {
  name: "MuiAutocomplete",
  slot: "Popper",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [{
      [`& .${Vn.option}`]: t.option
    }, t.popper, n.disablePortal && t.popperDisablePortal];
  }
})(rn(({
  theme: e
}) => ({
  zIndex: (e.vars || e).zIndex.modal,
  variants: [{
    props: {
      disablePortal: !0
    },
    style: {
      position: "absolute"
    }
  }]
}))), EK = Be(bs, {
  name: "MuiAutocomplete",
  slot: "Paper",
  overridesResolver: (e, t) => t.paper
})(rn(({
  theme: e
}) => ({
  ...e.typography.body1,
  overflow: "auto"
}))), TK = Be("div", {
  name: "MuiAutocomplete",
  slot: "Loading",
  overridesResolver: (e, t) => t.loading
})(rn(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  padding: "14px 16px"
}))), RK = Be("div", {
  name: "MuiAutocomplete",
  slot: "NoOptions",
  overridesResolver: (e, t) => t.noOptions
})(rn(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  padding: "14px 16px"
}))), OK = Be("ul", {
  name: "MuiAutocomplete",
  slot: "Listbox",
  overridesResolver: (e, t) => t.listbox
})(rn(({
  theme: e
}) => ({
  listStyle: "none",
  margin: 0,
  padding: "8px 0",
  maxHeight: "40vh",
  overflow: "auto",
  position: "relative",
  [`& .${Vn.option}`]: {
    minHeight: 48,
    display: "flex",
    overflow: "hidden",
    justifyContent: "flex-start",
    alignItems: "center",
    cursor: "pointer",
    paddingTop: 6,
    boxSizing: "border-box",
    outline: "0",
    WebkitTapHighlightColor: "transparent",
    paddingBottom: 6,
    paddingLeft: 16,
    paddingRight: 16,
    [e.breakpoints.up("sm")]: {
      minHeight: "auto"
    },
    [`&.${Vn.focused}`]: {
      backgroundColor: (e.vars || e).palette.action.hover,
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: "transparent"
      }
    },
    '&[aria-disabled="true"]': {
      opacity: (e.vars || e).palette.action.disabledOpacity,
      pointerEvents: "none"
    },
    [`&.${Vn.focusVisible}`]: {
      backgroundColor: (e.vars || e).palette.action.focus
    },
    '&[aria-selected="true"]': {
      backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / ${e.vars.palette.action.selectedOpacity})` : $n(e.palette.primary.main, e.palette.action.selectedOpacity),
      [`&.${Vn.focused}`]: {
        backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.hoverOpacity}))` : $n(e.palette.primary.main, e.palette.action.selectedOpacity + e.palette.action.hoverOpacity),
        // Reset on touch devices, it doesn't add specificity
        "@media (hover: none)": {
          backgroundColor: (e.vars || e).palette.action.selected
        }
      },
      [`&.${Vn.focusVisible}`]: {
        backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.focusOpacity}))` : $n(e.palette.primary.main, e.palette.action.selectedOpacity + e.palette.action.focusOpacity)
      }
    }
  }
}))), kK = Be(F0, {
  name: "MuiAutocomplete",
  slot: "GroupLabel",
  overridesResolver: (e, t) => t.groupLabel
})(rn(({
  theme: e
}) => ({
  backgroundColor: (e.vars || e).palette.background.paper,
  top: -8
}))), PK = Be("ul", {
  name: "MuiAutocomplete",
  slot: "GroupUl",
  overridesResolver: (e, t) => t.groupUl
})({
  padding: 0,
  [`& .${Vn.option}`]: {
    paddingLeft: 24
  }
}), jP = /* @__PURE__ */ w.forwardRef(function(t, n) {
  const i = xn({
    props: t,
    name: "MuiAutocomplete"
  }), {
    autoComplete: s = !1,
    autoHighlight: u = !1,
    autoSelect: d = !1,
    blurOnSelect: p = !1,
    ChipProps: m,
    className: v,
    clearIcon: y = zF || (zF = /* @__PURE__ */ A.jsx(yj, {
      fontSize: "small"
    })),
    clearOnBlur: C = !i.freeSolo,
    clearOnEscape: S = !1,
    clearText: R = "Clear",
    closeText: O = "Close",
    componentsProps: E,
    defaultValue: k = i.multiple ? [] : null,
    disableClearable: F = !1,
    disableCloseOnSelect: _ = !1,
    disabled: L = !1,
    disabledItemsFocusable: M = !1,
    disableListWrap: D = !1,
    disablePortal: H = !1,
    filterOptions: K,
    filterSelectedOptions: Q = !1,
    forcePopupIcon: z = "auto",
    freeSolo: I = !1,
    fullWidth: G = !1,
    getLimitTagsText: W = (_n) => `+${_n}`,
    getOptionDisabled: B,
    getOptionKey: ee,
    getOptionLabel: U,
    isOptionEqualToValue: q,
    groupBy: Y,
    handleHomeEndKeys: ne = !i.freeSolo,
    id: re,
    includeInputInList: X = !1,
    inputValue: j,
    limitTags: ie = -1,
    ListboxComponent: fe,
    ListboxProps: ce,
    loading: me = !1,
    loadingText: ge = "Loading…",
    multiple: de = !1,
    noOptionsText: pe = "No options",
    onChange: be,
    onClose: Ce,
    onHighlightChange: Re,
    onInputChange: ue,
    onOpen: we,
    open: _e,
    openOnFocus: He = !1,
    openText: et = "Open",
    options: Ne,
    PaperComponent: rt,
    PopperComponent: it,
    popupIcon: wt = HF || (HF = /* @__PURE__ */ A.jsx(Dj, {})),
    readOnly: gt = !1,
    renderGroup: ot,
    renderInput: jt,
    renderOption: ct,
    renderTags: Tt,
    selectOnFocus: Rt = !i.freeSolo,
    size: Lt = "medium",
    slots: vt = {},
    slotProps: Qe = {},
    value: Oe,
    ...Me
  } = i, {
    getRootProps: ht,
    getInputProps: xt,
    getInputLabelProps: zt,
    getPopupIndicatorProps: bt,
    getClearProps: Ge,
    getTagProps: Et,
    getListboxProps: At,
    getOptionProps: pn,
    value: fn,
    dirty: mr,
    expanded: qn,
    id: Nr,
    popupOpen: gr,
    focused: Po,
    focusedTag: Mo,
    anchorEl: Ut,
    setAnchorEl: fr,
    inputValue: Ct,
    groupedOptions: St
  } = z9({
    ...i,
    componentName: "Autocomplete"
  }), en = !F && !L && mr && !gt, on = (!I || z === !0) && z !== !1, {
    onMouseDown: zn
  } = xt(), {
    ref: Ar,
    ...ro
  } = At(), ve = U || ((_n) => _n.label ?? _n), We = {
    ...i,
    disablePortal: H,
    expanded: qn,
    focused: Po,
    fullWidth: G,
    getOptionLabel: ve,
    hasClearIcon: en,
    hasPopupIcon: on,
    inputFocused: Mo === -1,
    popupOpen: gr,
    size: Lt
  }, pt = yK(We), Ot = {
    slots: {
      paper: rt,
      popper: it,
      ...vt
    },
    slotProps: {
      chip: m,
      listbox: ce,
      ...E,
      ...Qe
    }
  }, [gn, Le] = yn("listbox", {
    elementType: OK,
    externalForwardedProps: Ot,
    ownerState: We,
    className: pt.listbox,
    additionalProps: ro,
    ref: Ar
  }), [ke, Ze] = yn("paper", {
    elementType: bs,
    externalForwardedProps: Ot,
    ownerState: We,
    className: pt.paper
  }), [Gt, Bt] = yn("popper", {
    elementType: Rf,
    externalForwardedProps: Ot,
    ownerState: We,
    className: pt.popper,
    additionalProps: {
      disablePortal: H,
      style: {
        width: Ut ? Ut.clientWidth : null
      },
      role: "presentation",
      anchorEl: Ut,
      open: gr
    }
  });
  let Qt;
  if (de && fn.length > 0) {
    const _n = (Io) => ({
      className: pt.tag,
      disabled: L,
      ...Et(Io)
    });
    Tt ? Qt = Tt(fn, _n, We) : Qt = fn.map((Io, Si) => {
      const {
        key: Hi,
        ...fi
      } = _n({
        index: Si
      });
      return /* @__PURE__ */ A.jsx($P, {
        label: ve(Io),
        size: Lt,
        ...fi,
        ...Ot.slotProps.chip
      }, Hi);
    });
  }
  if (ie > -1 && Array.isArray(Qt)) {
    const _n = Qt.length - ie;
    !Po && _n > 0 && (Qt = Qt.splice(0, ie), Qt.push(/* @__PURE__ */ A.jsx("span", {
      className: pt.tag,
      children: W(_n)
    }, Qt.length)));
  }
  const Lr = ot || ((_n) => /* @__PURE__ */ A.jsxs("li", {
    children: [/* @__PURE__ */ A.jsx(kK, {
      className: pt.groupLabel,
      ownerState: We,
      component: "div",
      children: _n.group
    }), /* @__PURE__ */ A.jsx(PK, {
      className: pt.groupUl,
      ownerState: We,
      children: _n.children
    })]
  }, _n.key)), En = ct || ((_n, Io) => {
    const {
      key: Si,
      ...Hi
    } = _n;
    return /* @__PURE__ */ A.jsx("li", {
      ...Hi,
      children: ve(Io)
    }, Si);
  }), Rn = (_n, Io) => {
    const Si = pn({
      option: _n,
      index: Io
    });
    return En({
      ...Si,
      className: pt.option
    }, _n, {
      selected: Si["aria-selected"],
      index: Io,
      inputValue: Ct
    }, We);
  }, di = Ot.slotProps.clearIndicator, Ta = Ot.slotProps.popupIndicator;
  return /* @__PURE__ */ A.jsxs(w.Fragment, {
    children: [/* @__PURE__ */ A.jsx(bK, {
      ref: n,
      className: nt(pt.root, v),
      ownerState: We,
      ...ht(Me),
      children: jt({
        id: Nr,
        disabled: L,
        fullWidth: !0,
        size: Lt === "small" ? "small" : void 0,
        InputLabelProps: zt(),
        InputProps: {
          ref: fr,
          className: pt.inputRoot,
          startAdornment: Qt,
          onMouseDown: (_n) => {
            _n.target === _n.currentTarget && zn(_n);
          },
          ...(en || on) && {
            endAdornment: /* @__PURE__ */ A.jsxs(CK, {
              className: pt.endAdornment,
              ownerState: We,
              children: [en ? /* @__PURE__ */ A.jsx(SK, {
                ...Ge(),
                "aria-label": R,
                title: R,
                ownerState: We,
                ...di,
                className: nt(pt.clearIndicator, di == null ? void 0 : di.className),
                children: y
              }) : null, on ? /* @__PURE__ */ A.jsx(wK, {
                ...bt(),
                disabled: L,
                "aria-label": gr ? O : et,
                title: gr ? O : et,
                ownerState: We,
                ...Ta,
                className: nt(pt.popupIndicator, Ta == null ? void 0 : Ta.className),
                children: wt
              }) : null]
            })
          }
        },
        inputProps: {
          className: pt.input,
          disabled: L,
          readOnly: gt,
          ...xt()
        }
      })
    }), Ut ? /* @__PURE__ */ A.jsx(xK, {
      as: Gt,
      ...Bt,
      children: /* @__PURE__ */ A.jsxs(EK, {
        as: ke,
        ...Ze,
        children: [me && St.length === 0 ? /* @__PURE__ */ A.jsx(TK, {
          className: pt.loading,
          ownerState: We,
          children: ge
        }) : null, St.length === 0 && !I && !me ? /* @__PURE__ */ A.jsx(RK, {
          className: pt.noOptions,
          ownerState: We,
          role: "presentation",
          onMouseDown: (_n) => {
            _n.preventDefault();
          },
          children: pe
        }) : null, St.length > 0 ? /* @__PURE__ */ A.jsx(gn, {
          as: fe,
          ...Le,
          children: St.map((_n, Io) => Y ? Lr({
            key: _n.key,
            group: _n.group,
            children: _n.options.map((Si, Hi) => Rn(Si, _n.index + Hi))
          }) : Rn(_n, Io))
        }) : null]
      })
    }) : null]
  });
});
process.env.NODE_ENV !== "production" && (jP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the portion of the selected suggestion that the user hasn't typed,
   * known as the completion string, appears inline after the input cursor in the textbox.
   * The inline completion string is visually highlighted and has a selected state.
   * @default false
   */
  autoComplete: a.bool,
  /**
   * If `true`, the first option is automatically highlighted.
   * @default false
   */
  autoHighlight: a.bool,
  /**
   * If `true`, the selected option becomes the value of the input
   * when the Autocomplete loses focus unless the user chooses
   * a different option or changes the character string in the input.
   *
   * When using the `freeSolo` mode, the typed value will be the input value
   * if the Autocomplete loses focus without highlighting an option.
   * @default false
   */
  autoSelect: a.bool,
  /**
   * Control if the input should be blurred when an option is selected:
   *
   * - `false` the input is not blurred.
   * - `true` the input is always blurred.
   * - `touch` the input is blurred after a touch event.
   * - `mouse` the input is blurred after a mouse event.
   * @default false
   */
  blurOnSelect: a.oneOfType([a.oneOf(["mouse", "touch"]), a.bool]),
  /**
   * Props applied to the [`Chip`](https://mui.com/material-ui/api/chip/) element.
   * @deprecated Use `slotProps.chip` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  ChipProps: a.object,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The icon to display in place of the default clear icon.
   * @default <ClearIcon fontSize="small" />
   */
  clearIcon: a.node,
  /**
   * If `true`, the input's text is cleared on blur if no value is selected.
   *
   * Set it to `true` if you want to help the user enter a new value.
   * Set it to `false` if you want to help the user resume their search.
   * @default !props.freeSolo
   */
  clearOnBlur: a.bool,
  /**
   * If `true`, clear all values when the user presses escape and the popup is closed.
   * @default false
   */
  clearOnEscape: a.bool,
  /**
   * Override the default text for the *clear* icon button.
   *
   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).
   * @default 'Clear'
   */
  clearText: a.string,
  /**
   * Override the default text for the *close popup* icon button.
   *
   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).
   * @default 'Close'
   */
  closeText: a.string,
  /**
   * The props used for each slot inside.
   * @deprecated Use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  componentsProps: a.shape({
    clearIndicator: a.object,
    paper: a.object,
    popper: a.object,
    popupIndicator: a.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   * @default props.multiple ? [] : null
   */
  defaultValue: Gl(a.any, (e) => e.multiple && e.defaultValue !== void 0 && !Array.isArray(e.defaultValue) ? new Error(["MUI: The Autocomplete expects the `defaultValue` prop to be an array when `multiple={true}` or undefined.", `However, ${e.defaultValue} was provided.`].join(`
`)) : null),
  /**
   * If `true`, the input can't be cleared.
   * @default false
   */
  disableClearable: a.bool,
  /**
   * If `true`, the popup won't close when a value is selected.
   * @default false
   */
  disableCloseOnSelect: a.bool,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: a.bool,
  /**
   * If `true`, will allow focus on disabled items.
   * @default false
   */
  disabledItemsFocusable: a.bool,
  /**
   * If `true`, the list box in the popup will not wrap focus.
   * @default false
   */
  disableListWrap: a.bool,
  /**
   * If `true`, the `Popper` content will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: a.bool,
  /**
   * A function that determines the filtered options to be rendered on search.
   *
   * @default createFilterOptions()
   * @param {Value[]} options The options to render.
   * @param {object} state The state of the component.
   * @returns {Value[]}
   */
  filterOptions: a.func,
  /**
   * If `true`, hide the selected options from the list box.
   * @default false
   */
  filterSelectedOptions: a.bool,
  /**
   * Force the visibility display of the popup icon.
   * @default 'auto'
   */
  forcePopupIcon: a.oneOfType([a.oneOf(["auto"]), a.bool]),
  /**
   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.
   * @default false
   */
  freeSolo: a.bool,
  /**
   * If `true`, the input will take up the full width of its container.
   * @default false
   */
  fullWidth: a.bool,
  /**
   * The label to display when the tags are truncated (`limitTags`).
   *
   * @param {number} more The number of truncated tags.
   * @returns {ReactNode}
   * @default (more) => `+${more}`
   */
  getLimitTagsText: a.func,
  /**
   * Used to determine the disabled state for a given option.
   *
   * @param {Value} option The option to test.
   * @returns {boolean}
   */
  getOptionDisabled: a.func,
  /**
   * Used to determine the key for a given option.
   * This can be useful when the labels of options are not unique (since labels are used as keys by default).
   *
   * @param {Value} option The option to get the key for.
   * @returns {string | number}
   */
  getOptionKey: a.func,
  /**
   * Used to determine the string value for a given option.
   * It's used to fill the input (and the list box options if `renderOption` is not provided).
   *
   * If used in free solo mode, it must accept both the type of the options and a string.
   *
   * @param {Value} option
   * @returns {string}
   * @default (option) => option.label ?? option
   */
  getOptionLabel: a.func,
  /**
   * If provided, the options will be grouped under the returned string.
   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.
   *
   * @param {Value} option The Autocomplete option.
   * @returns {string}
   */
  groupBy: a.func,
  /**
   * If `true`, the component handles the "Home" and "End" keys when the popup is open.
   * It should move focus to the first option and last option, respectively.
   * @default !props.freeSolo
   */
  handleHomeEndKeys: a.bool,
  /**
   * This prop is used to help implement the accessibility logic.
   * If you don't provide an id it will fall back to a randomly generated one.
   */
  id: a.string,
  /**
   * If `true`, the highlight can move to the input.
   * @default false
   */
  includeInputInList: a.bool,
  /**
   * The input value.
   */
  inputValue: a.string,
  /**
   * Used to determine if the option represents the given value.
   * Uses strict equality by default.
   * ⚠️ Both arguments need to be handled, an option can only match with one value.
   *
   * @param {Value} option The option to test.
   * @param {Value} value The value to test against.
   * @returns {boolean}
   */
  isOptionEqualToValue: a.func,
  /**
   * The maximum number of tags that will be visible when not focused.
   * Set `-1` to disable the limit.
   * @default -1
   */
  limitTags: Dg,
  /**
   * The component used to render the listbox.
   * @default 'ul'
   * @deprecated Use `slotProps.listbox.component` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  ListboxComponent: a.elementType,
  /**
   * Props applied to the Listbox element.
   * @deprecated Use `slotProps.listbox` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  ListboxProps: a.object,
  /**
   * If `true`, the component is in a loading state.
   * This shows the `loadingText` in place of suggestions (only if there are no suggestions to show, for example `options` are empty).
   * @default false
   */
  loading: a.bool,
  /**
   * Text to display when in a loading state.
   *
   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).
   * @default 'Loading…'
   */
  loadingText: a.node,
  /**
   * If `true`, `value` must be an array and the menu will support multiple selections.
   * @default false
   */
  multiple: a.bool,
  /**
   * Text to display when there are no options.
   *
   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).
   * @default 'No options'
   */
  noOptionsText: a.node,
  /**
   * Callback fired when the value changes.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   * @param {Value|Value[]} value The new value of the component.
   * @param {string} reason One of "createOption", "selectOption", "removeOption", "blur" or "clear".
   * @param {string} [details]
   */
  onChange: a.func,
  /**
   * Callback fired when the popup requests to be closed.
   * Use in controlled mode (see open).
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   * @param {string} reason Can be: `"toggleInput"`, `"escape"`, `"selectOption"`, `"removeOption"`, `"blur"`.
   */
  onClose: a.func,
  /**
   * Callback fired when the highlight option changes.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   * @param {Value} option The highlighted option.
   * @param {string} reason Can be: `"keyboard"`, `"mouse"`, `"touch"`.
   */
  onHighlightChange: a.func,
  /**
   * Callback fired when the input value changes.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   * @param {string} value The new value of the text input.
   * @param {string} reason Can be: `"input"` (user input), `"reset"` (programmatic change), `"clear"`, `"blur"`, `"selectOption"`, `"removeOption"`
   */
  onInputChange: a.func,
  /**
   * @ignore
   */
  onKeyDown: a.func,
  /**
   * Callback fired when the popup requests to be opened.
   * Use in controlled mode (see open).
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   */
  onOpen: a.func,
  /**
   * If `true`, the component is shown.
   */
  open: a.bool,
  /**
   * If `true`, the popup will open on input focus.
   * @default false
   */
  openOnFocus: a.bool,
  /**
   * Override the default text for the *open popup* icon button.
   *
   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).
   * @default 'Open'
   */
  openText: a.string,
  /**
   * A list of options that will be shown in the Autocomplete.
   */
  options: a.array.isRequired,
  /**
   * The component used to render the body of the popup.
   * @default Paper
   * @deprecated Use `slots.paper` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  PaperComponent: a.elementType,
  /**
   * The component used to position the popup.
   * @default Popper
   * @deprecated Use `slots.popper` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  PopperComponent: a.elementType,
  /**
   * The icon to display in place of the default popup icon.
   * @default <ArrowDropDownIcon />
   */
  popupIcon: a.node,
  /**
   * If `true`, the component becomes readonly. It is also supported for multiple tags where the tag cannot be deleted.
   * @default false
   */
  readOnly: a.bool,
  /**
   * Render the group.
   *
   * @param {AutocompleteRenderGroupParams} params The group to render.
   * @returns {ReactNode}
   */
  renderGroup: a.func,
  /**
   * Render the input.
   *
   * @param {object} params
   * @returns {ReactNode}
   */
  renderInput: a.func.isRequired,
  /**
   * Render the option, use `getOptionLabel` by default.
   *
   * @param {object} props The props to apply on the li element.
   * @param {Value} option The option to render.
   * @param {object} state The state of each option.
   * @param {object} ownerState The state of the Autocomplete component.
   * @returns {ReactNode}
   */
  renderOption: a.func,
  /**
   * Render the selected value.
   *
   * @param {Value[]} value The `value` provided to the component.
   * @param {function} getTagProps A tag props getter.
   * @param {object} ownerState The state of the Autocomplete component.
   * @returns {ReactNode}
   */
  renderTags: a.func,
  /**
   * If `true`, the input's text is selected on focus.
   * It helps the user clear the selected value.
   * @default !props.freeSolo
   */
  selectOnFocus: a.bool,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: a.oneOfType([a.oneOf(["small", "medium"]), a.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    chip: a.oneOfType([a.func, a.object]),
    clearIndicator: a.oneOfType([a.func, a.object]),
    listbox: a.oneOfType([a.func, a.object]),
    paper: a.oneOfType([a.func, a.object]),
    popper: a.oneOfType([a.func, a.object]),
    popupIndicator: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    listbox: a.elementType,
    paper: a.elementType,
    popper: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The value of the autocomplete.
   *
   * The value must have reference equality with the option in order to be selected.
   * You can customize the equality behavior with the `isOptionEqualToValue` prop.
   */
  value: Gl(a.any, (e) => e.multiple && e.value !== void 0 && !Array.isArray(e.value) ? new Error(["MUI: The Autocomplete expects the `value` prop to be an array when `multiple={true}` or undefined.", `However, ${e.value} was provided.`].join(`
`)) : null)
});
const MK = {
  entering: {
    opacity: 1
  },
  entered: {
    opacity: 1
  }
}, Nj = /* @__PURE__ */ w.forwardRef(function(t, n) {
  const i = rv(), s = {
    enter: i.transitions.duration.enteringScreen,
    exit: i.transitions.duration.leavingScreen
  }, {
    addEndListener: u,
    appear: d = !0,
    children: p,
    easing: m,
    in: v,
    onEnter: y,
    onEntered: C,
    onEntering: S,
    onExit: R,
    onExited: O,
    onExiting: E,
    style: k,
    timeout: F = s,
    // eslint-disable-next-line react/prop-types
    TransitionComponent: _ = Qu,
    ...L
  } = t, M = w.useRef(null), D = Vr(M, yh(p), n), H = (ee) => (U) => {
    if (ee) {
      const q = M.current;
      U === void 0 ? ee(q) : ee(q, U);
    }
  }, K = H(S), Q = H((ee, U) => {
    mj(ee);
    const q = I0({
      style: k,
      timeout: F,
      easing: m
    }, {
      mode: "enter"
    });
    ee.style.webkitTransition = i.transitions.create("opacity", q), ee.style.transition = i.transitions.create("opacity", q), y && y(ee, U);
  }), z = H(C), I = H(E), G = H((ee) => {
    const U = I0({
      style: k,
      timeout: F,
      easing: m
    }, {
      mode: "exit"
    });
    ee.style.webkitTransition = i.transitions.create("opacity", U), ee.style.transition = i.transitions.create("opacity", U), R && R(ee);
  }), W = H(O), B = (ee) => {
    u && u(M.current, ee);
  };
  return /* @__PURE__ */ A.jsx(_, {
    appear: d,
    in: v,
    nodeRef: M,
    onEnter: Q,
    onEntered: z,
    onEntering: K,
    onExit: G,
    onExited: W,
    onExiting: I,
    addEndListener: B,
    timeout: F,
    ...L,
    children: (ee, {
      ownerState: U,
      ...q
    }) => /* @__PURE__ */ w.cloneElement(p, {
      style: {
        opacity: 0,
        visibility: ee === "exited" && !v ? "hidden" : void 0,
        ...MK[ee],
        ...k,
        ...p.props.style
      },
      ref: D,
      ...q
    })
  });
});
process.env.NODE_ENV !== "production" && (Nj.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: a.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: a.bool,
  /**
   * A single child content element.
   */
  children: vh.isRequired,
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   */
  easing: a.oneOfType([a.shape({
    enter: a.string,
    exit: a.string
  }), a.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: a.bool,
  /**
   * @ignore
   */
  onEnter: a.func,
  /**
   * @ignore
   */
  onEntered: a.func,
  /**
   * @ignore
   */
  onEntering: a.func,
  /**
   * @ignore
   */
  onExit: a.func,
  /**
   * @ignore
   */
  onExited: a.func,
  /**
   * @ignore
   */
  onExiting: a.func,
  /**
   * @ignore
   */
  style: a.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  timeout: a.oneOfType([a.number, a.shape({
    appear: a.number,
    enter: a.number,
    exit: a.number
  })])
});
function IK(e) {
  return mn("MuiBackdrop", e);
}
bn("MuiBackdrop", ["root", "invisible"]);
const DK = (e) => {
  const {
    classes: t,
    invisible: n
  } = e;
  return yt({
    root: ["root", n && "invisible"]
  }, IK, t);
}, NK = Be("div", {
  name: "MuiBackdrop",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.invisible && t.invisible];
  }
})({
  position: "fixed",
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  right: 0,
  bottom: 0,
  top: 0,
  left: 0,
  backgroundColor: "rgba(0, 0, 0, 0.5)",
  WebkitTapHighlightColor: "transparent",
  variants: [{
    props: {
      invisible: !0
    },
    style: {
      backgroundColor: "transparent"
    }
  }]
}), Lj = /* @__PURE__ */ w.forwardRef(function(t, n) {
  const i = xn({
    props: t,
    name: "MuiBackdrop"
  }), {
    children: s,
    className: u,
    component: d = "div",
    invisible: p = !1,
    open: m,
    components: v = {},
    componentsProps: y = {},
    slotProps: C = {},
    slots: S = {},
    TransitionComponent: R,
    transitionDuration: O,
    ...E
  } = i, k = {
    ...i,
    component: d,
    invisible: p
  }, F = DK(k), _ = {
    transition: R,
    root: v.Root,
    ...S
  }, L = {
    ...y,
    ...C
  }, M = {
    slots: _,
    slotProps: L
  }, [D, H] = yn("root", {
    elementType: NK,
    externalForwardedProps: M,
    className: nt(F.root, u),
    ownerState: k
  }), [K, Q] = yn("transition", {
    elementType: Nj,
    externalForwardedProps: M,
    ownerState: k
  });
  return /* @__PURE__ */ A.jsx(K, {
    in: m,
    timeout: O,
    ...E,
    ...Q,
    children: /* @__PURE__ */ A.jsx(D, {
      "aria-hidden": !0,
      ...H,
      classes: F,
      ref: n,
      children: s
    })
  });
});
process.env.NODE_ENV !== "production" && (Lj.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * The components used for each slot inside.
   *
   * @deprecated Use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: a.shape({
    Root: a.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated Use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: a.shape({
    root: a.object
  }),
  /**
   * If `true`, the backdrop is invisible.
   * It can be used when rendering a popover or a custom select component.
   * @default false
   */
  invisible: a.bool,
  /**
   * If `true`, the component is shown.
   */
  open: a.bool.isRequired,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    root: a.oneOfType([a.func, a.object]),
    transition: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    root: a.elementType,
    transition: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The component used for the transition.
   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Fade
   * @deprecated Use `slots.transition` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  TransitionComponent: a.elementType,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   */
  transitionDuration: a.oneOfType([a.number, a.shape({
    appear: a.number,
    enter: a.number,
    exit: a.number
  })])
});
function LK(e) {
  const {
    badgeContent: t,
    invisible: n = !1,
    max: i = 99,
    showZero: s = !1
  } = e, u = CP({
    badgeContent: t,
    max: i
  });
  let d = n;
  n === !1 && t === 0 && !s && (d = !0);
  const {
    badgeContent: p,
    max: m = i
  } = d ? u : e, v = p && Number(p) > m ? `${m}+` : p;
  return {
    badgeContent: p,
    invisible: d,
    max: m,
    displayValue: v
  };
}
function FK(e) {
  return mn("MuiBadge", e);
}
const Zd = bn("MuiBadge", [
  "root",
  "badge",
  "dot",
  "standard",
  "anchorOriginTopRight",
  "anchorOriginBottomRight",
  "anchorOriginTopLeft",
  "anchorOriginBottomLeft",
  "invisible",
  "colorError",
  "colorInfo",
  "colorPrimary",
  "colorSecondary",
  "colorSuccess",
  "colorWarning",
  "overlapRectangular",
  "overlapCircular",
  // TODO: v6 remove the overlap value from these class keys
  "anchorOriginTopLeftCircular",
  "anchorOriginTopLeftRectangular",
  "anchorOriginTopRightCircular",
  "anchorOriginTopRightRectangular",
  "anchorOriginBottomLeftCircular",
  "anchorOriginBottomLeftRectangular",
  "anchorOriginBottomRightCircular",
  "anchorOriginBottomRightRectangular"
]), kO = 10, PO = 4, _K = (e) => {
  const {
    color: t,
    anchorOrigin: n,
    invisible: i,
    overlap: s,
    variant: u,
    classes: d = {}
  } = e, p = {
    root: ["root"],
    badge: ["badge", u, i && "invisible", `anchorOrigin${Ue(n.vertical)}${Ue(n.horizontal)}`, `anchorOrigin${Ue(n.vertical)}${Ue(n.horizontal)}${Ue(s)}`, `overlap${Ue(s)}`, t !== "default" && `color${Ue(t)}`]
  };
  return yt(p, FK, d);
}, AK = Be("span", {
  name: "MuiBadge",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({
  position: "relative",
  display: "inline-flex",
  // For correct alignment with the text.
  verticalAlign: "middle",
  flexShrink: 0
}), $K = Be("span", {
  name: "MuiBadge",
  slot: "Badge",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.badge, t[n.variant], t[`anchorOrigin${Ue(n.anchorOrigin.vertical)}${Ue(n.anchorOrigin.horizontal)}${Ue(n.overlap)}`], n.color !== "default" && t[`color${Ue(n.color)}`], n.invisible && t.invisible];
  }
})(rn(({
  theme: e
}) => ({
  display: "flex",
  flexDirection: "row",
  flexWrap: "wrap",
  justifyContent: "center",
  alignContent: "center",
  alignItems: "center",
  position: "absolute",
  boxSizing: "border-box",
  fontFamily: e.typography.fontFamily,
  fontWeight: e.typography.fontWeightMedium,
  fontSize: e.typography.pxToRem(12),
  minWidth: kO * 2,
  lineHeight: 1,
  padding: "0 6px",
  height: kO * 2,
  borderRadius: kO,
  zIndex: 1,
  // Render the badge on top of potential ripples.
  transition: e.transitions.create("transform", {
    easing: e.transitions.easing.easeInOut,
    duration: e.transitions.duration.enteringScreen
  }),
  variants: [...Object.entries(e.palette).filter(to(["contrastText"])).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      backgroundColor: (e.vars || e).palette[t].main,
      color: (e.vars || e).palette[t].contrastText
    }
  })), {
    props: {
      variant: "dot"
    },
    style: {
      borderRadius: PO,
      height: PO * 2,
      minWidth: PO * 2,
      padding: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "top" && t.anchorOrigin.horizontal === "right" && t.overlap === "rectangular",
    style: {
      top: 0,
      right: 0,
      transform: "scale(1) translate(50%, -50%)",
      transformOrigin: "100% 0%",
      [`&.${Zd.invisible}`]: {
        transform: "scale(0) translate(50%, -50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "bottom" && t.anchorOrigin.horizontal === "right" && t.overlap === "rectangular",
    style: {
      bottom: 0,
      right: 0,
      transform: "scale(1) translate(50%, 50%)",
      transformOrigin: "100% 100%",
      [`&.${Zd.invisible}`]: {
        transform: "scale(0) translate(50%, 50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "top" && t.anchorOrigin.horizontal === "left" && t.overlap === "rectangular",
    style: {
      top: 0,
      left: 0,
      transform: "scale(1) translate(-50%, -50%)",
      transformOrigin: "0% 0%",
      [`&.${Zd.invisible}`]: {
        transform: "scale(0) translate(-50%, -50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "bottom" && t.anchorOrigin.horizontal === "left" && t.overlap === "rectangular",
    style: {
      bottom: 0,
      left: 0,
      transform: "scale(1) translate(-50%, 50%)",
      transformOrigin: "0% 100%",
      [`&.${Zd.invisible}`]: {
        transform: "scale(0) translate(-50%, 50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "top" && t.anchorOrigin.horizontal === "right" && t.overlap === "circular",
    style: {
      top: "14%",
      right: "14%",
      transform: "scale(1) translate(50%, -50%)",
      transformOrigin: "100% 0%",
      [`&.${Zd.invisible}`]: {
        transform: "scale(0) translate(50%, -50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "bottom" && t.anchorOrigin.horizontal === "right" && t.overlap === "circular",
    style: {
      bottom: "14%",
      right: "14%",
      transform: "scale(1) translate(50%, 50%)",
      transformOrigin: "100% 100%",
      [`&.${Zd.invisible}`]: {
        transform: "scale(0) translate(50%, 50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "top" && t.anchorOrigin.horizontal === "left" && t.overlap === "circular",
    style: {
      top: "14%",
      left: "14%",
      transform: "scale(1) translate(-50%, -50%)",
      transformOrigin: "0% 0%",
      [`&.${Zd.invisible}`]: {
        transform: "scale(0) translate(-50%, -50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "bottom" && t.anchorOrigin.horizontal === "left" && t.overlap === "circular",
    style: {
      bottom: "14%",
      left: "14%",
      transform: "scale(1) translate(-50%, 50%)",
      transformOrigin: "0% 100%",
      [`&.${Zd.invisible}`]: {
        transform: "scale(0) translate(-50%, 50%)"
      }
    }
  }, {
    props: {
      invisible: !0
    },
    style: {
      transition: e.transitions.create("transform", {
        easing: e.transitions.easing.easeInOut,
        duration: e.transitions.duration.leavingScreen
      })
    }
  }]
})));
function VF(e) {
  return {
    vertical: (e == null ? void 0 : e.vertical) ?? "top",
    horizontal: (e == null ? void 0 : e.horizontal) ?? "right"
  };
}
const Fj = /* @__PURE__ */ w.forwardRef(function(t, n) {
  const i = xn({
    props: t,
    name: "MuiBadge"
  }), {
    anchorOrigin: s,
    className: u,
    classes: d,
    component: p,
    components: m = {},
    componentsProps: v = {},
    children: y,
    overlap: C = "rectangular",
    color: S = "default",
    invisible: R = !1,
    max: O = 99,
    badgeContent: E,
    slots: k,
    slotProps: F,
    showZero: _ = !1,
    variant: L = "standard",
    ...M
  } = i, {
    badgeContent: D,
    invisible: H,
    max: K,
    displayValue: Q
  } = LK({
    max: O,
    invisible: R,
    badgeContent: E,
    showZero: _
  }), z = CP({
    anchorOrigin: VF(s),
    color: S,
    overlap: C,
    variant: L,
    badgeContent: E
  }), I = H || D == null && L !== "dot", {
    color: G = S,
    overlap: W = C,
    anchorOrigin: B,
    variant: ee = L
  } = I ? z : i, U = VF(B), q = ee !== "dot" ? Q : void 0, Y = {
    ...i,
    badgeContent: D,
    invisible: I,
    max: K,
    displayValue: q,
    showZero: _,
    anchorOrigin: U,
    color: G,
    overlap: W,
    variant: ee
  }, ne = _K(Y), re = {
    slots: {
      root: (k == null ? void 0 : k.root) ?? m.Root,
      badge: (k == null ? void 0 : k.badge) ?? m.Badge
    },
    slotProps: {
      root: (F == null ? void 0 : F.root) ?? v.root,
      badge: (F == null ? void 0 : F.badge) ?? v.badge
    }
  }, [X, j] = yn("root", {
    elementType: AK,
    externalForwardedProps: {
      ...re,
      ...M
    },
    ownerState: Y,
    className: nt(ne.root, u),
    ref: n,
    additionalProps: {
      as: p
    }
  }), [ie, fe] = yn("badge", {
    elementType: $K,
    externalForwardedProps: re,
    ownerState: Y,
    className: ne.badge
  });
  return /* @__PURE__ */ A.jsxs(X, {
    ...j,
    children: [y, /* @__PURE__ */ A.jsx(ie, {
      ...fe,
      children: q
    })]
  });
});
process.env.NODE_ENV !== "production" && (Fj.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The anchor of the badge.
   * @default {
   *   vertical: 'top',
   *   horizontal: 'right',
   * }
   */
  anchorOrigin: a.shape({
    horizontal: a.oneOf(["left", "right"]),
    vertical: a.oneOf(["bottom", "top"])
  }),
  /**
   * The content rendered within the badge.
   */
  badgeContent: a.node,
  /**
   * The badge will be added relative to this node.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'default'
   */
  color: a.oneOfType([a.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), a.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: a.shape({
    Badge: a.elementType,
    Root: a.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: a.shape({
    badge: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object])
  }),
  /**
   * If `true`, the badge is invisible.
   * @default false
   */
  invisible: a.bool,
  /**
   * Max count to show.
   * @default 99
   */
  max: a.number,
  /**
   * Wrapped shape the badge should overlap.
   * @default 'rectangular'
   */
  overlap: a.oneOf(["circular", "rectangular"]),
  /**
   * Controls whether the badge is hidden when `badgeContent` is zero.
   * @default false
   */
  showZero: a.bool,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    badge: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    badge: a.elementType,
    root: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The variant to use.
   * @default 'standard'
   */
  variant: a.oneOfType([a.oneOf(["dot", "standard"]), a.string])
});
const jK = bn("MuiBox", ["root"]), zK = xE(), df = Q6({
  themeId: Hu,
  defaultTheme: zK,
  defaultClassName: jK.root,
  generateClassName: F$.generate
});
process.env.NODE_ENV !== "production" && (df.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  children: a.node,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
function HK(e) {
  return mn("MuiButton", e);
}
const Up = bn("MuiButton", ["root", "text", "textInherit", "textPrimary", "textSecondary", "textSuccess", "textError", "textInfo", "textWarning", "outlined", "outlinedInherit", "outlinedPrimary", "outlinedSecondary", "outlinedSuccess", "outlinedError", "outlinedInfo", "outlinedWarning", "contained", "containedInherit", "containedPrimary", "containedSecondary", "containedSuccess", "containedError", "containedInfo", "containedWarning", "disableElevation", "focusVisible", "disabled", "colorInherit", "colorPrimary", "colorSecondary", "colorSuccess", "colorError", "colorInfo", "colorWarning", "textSizeSmall", "textSizeMedium", "textSizeLarge", "outlinedSizeSmall", "outlinedSizeMedium", "outlinedSizeLarge", "containedSizeSmall", "containedSizeMedium", "containedSizeLarge", "sizeMedium", "sizeSmall", "sizeLarge", "fullWidth", "startIcon", "endIcon", "icon", "iconSizeSmall", "iconSizeMedium", "iconSizeLarge", "loading", "loadingWrapper", "loadingIconPlaceholder", "loadingIndicator", "loadingPositionCenter", "loadingPositionStart", "loadingPositionEnd"]), _j = /* @__PURE__ */ w.createContext({});
process.env.NODE_ENV !== "production" && (_j.displayName = "ButtonGroupContext");
const Aj = /* @__PURE__ */ w.createContext(void 0);
process.env.NODE_ENV !== "production" && (Aj.displayName = "ButtonGroupButtonContext");
const VK = (e) => {
  const {
    color: t,
    disableElevation: n,
    fullWidth: i,
    size: s,
    variant: u,
    loading: d,
    loadingPosition: p,
    classes: m
  } = e, v = {
    root: ["root", d && "loading", u, `${u}${Ue(t)}`, `size${Ue(s)}`, `${u}Size${Ue(s)}`, `color${Ue(t)}`, n && "disableElevation", i && "fullWidth", d && `loadingPosition${Ue(p)}`],
    startIcon: ["icon", "startIcon", `iconSize${Ue(s)}`],
    endIcon: ["icon", "endIcon", `iconSize${Ue(s)}`],
    loadingIndicator: ["loadingIndicator"],
    loadingWrapper: ["loadingWrapper"]
  }, y = yt(v, HK, m);
  return {
    ...m,
    // forward the focused, disabled, etc. classes to the ButtonBase
    ...y
  };
}, $j = [{
  props: {
    size: "small"
  },
  style: {
    "& > *:nth-of-type(1)": {
      fontSize: 18
    }
  }
}, {
  props: {
    size: "medium"
  },
  style: {
    "& > *:nth-of-type(1)": {
      fontSize: 20
    }
  }
}, {
  props: {
    size: "large"
  },
  style: {
    "& > *:nth-of-type(1)": {
      fontSize: 22
    }
  }
}], BK = Be(Yc, {
  shouldForwardProp: (e) => Ya(e) || e === "classes",
  name: "MuiButton",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[n.variant], t[`${n.variant}${Ue(n.color)}`], t[`size${Ue(n.size)}`], t[`${n.variant}Size${Ue(n.size)}`], n.color === "inherit" && t.colorInherit, n.disableElevation && t.disableElevation, n.fullWidth && t.fullWidth, n.loading && t.loading];
  }
})(rn(({
  theme: e
}) => {
  const t = e.palette.mode === "light" ? e.palette.grey[300] : e.palette.grey[800], n = e.palette.mode === "light" ? e.palette.grey.A100 : e.palette.grey[700];
  return {
    ...e.typography.button,
    minWidth: 64,
    padding: "6px 16px",
    border: 0,
    borderRadius: (e.vars || e).shape.borderRadius,
    transition: e.transitions.create(["background-color", "box-shadow", "border-color", "color"], {
      duration: e.transitions.duration.short
    }),
    "&:hover": {
      textDecoration: "none"
    },
    [`&.${Up.disabled}`]: {
      color: (e.vars || e).palette.action.disabled
    },
    variants: [{
      props: {
        variant: "contained"
      },
      style: {
        color: "var(--variant-containedColor)",
        backgroundColor: "var(--variant-containedBg)",
        boxShadow: (e.vars || e).shadows[2],
        "&:hover": {
          boxShadow: (e.vars || e).shadows[4],
          // Reset on touch devices, it doesn't add specificity
          "@media (hover: none)": {
            boxShadow: (e.vars || e).shadows[2]
          }
        },
        "&:active": {
          boxShadow: (e.vars || e).shadows[8]
        },
        [`&.${Up.focusVisible}`]: {
          boxShadow: (e.vars || e).shadows[6]
        },
        [`&.${Up.disabled}`]: {
          color: (e.vars || e).palette.action.disabled,
          boxShadow: (e.vars || e).shadows[0],
          backgroundColor: (e.vars || e).palette.action.disabledBackground
        }
      }
    }, {
      props: {
        variant: "outlined"
      },
      style: {
        padding: "5px 15px",
        border: "1px solid currentColor",
        borderColor: "var(--variant-outlinedBorder, currentColor)",
        backgroundColor: "var(--variant-outlinedBg)",
        color: "var(--variant-outlinedColor)",
        [`&.${Up.disabled}`]: {
          border: `1px solid ${(e.vars || e).palette.action.disabledBackground}`
        }
      }
    }, {
      props: {
        variant: "text"
      },
      style: {
        padding: "6px 8px",
        color: "var(--variant-textColor)",
        backgroundColor: "var(--variant-textBg)"
      }
    }, ...Object.entries(e.palette).filter(to()).map(([i]) => ({
      props: {
        color: i
      },
      style: {
        "--variant-textColor": (e.vars || e).palette[i].main,
        "--variant-outlinedColor": (e.vars || e).palette[i].main,
        "--variant-outlinedBorder": e.vars ? `rgba(${e.vars.palette[i].mainChannel} / 0.5)` : $n(e.palette[i].main, 0.5),
        "--variant-containedColor": (e.vars || e).palette[i].contrastText,
        "--variant-containedBg": (e.vars || e).palette[i].main,
        "@media (hover: hover)": {
          "&:hover": {
            "--variant-containedBg": (e.vars || e).palette[i].dark,
            "--variant-textBg": e.vars ? `rgba(${e.vars.palette[i].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : $n(e.palette[i].main, e.palette.action.hoverOpacity),
            "--variant-outlinedBorder": (e.vars || e).palette[i].main,
            "--variant-outlinedBg": e.vars ? `rgba(${e.vars.palette[i].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : $n(e.palette[i].main, e.palette.action.hoverOpacity)
          }
        }
      }
    })), {
      props: {
        color: "inherit"
      },
      style: {
        color: "inherit",
        borderColor: "currentColor",
        "--variant-containedBg": e.vars ? e.vars.palette.Button.inheritContainedBg : t,
        "@media (hover: hover)": {
          "&:hover": {
            "--variant-containedBg": e.vars ? e.vars.palette.Button.inheritContainedHoverBg : n,
            "--variant-textBg": e.vars ? `rgba(${e.vars.palette.text.primaryChannel} / ${e.vars.palette.action.hoverOpacity})` : $n(e.palette.text.primary, e.palette.action.hoverOpacity),
            "--variant-outlinedBg": e.vars ? `rgba(${e.vars.palette.text.primaryChannel} / ${e.vars.palette.action.hoverOpacity})` : $n(e.palette.text.primary, e.palette.action.hoverOpacity)
          }
        }
      }
    }, {
      props: {
        size: "small",
        variant: "text"
      },
      style: {
        padding: "4px 5px",
        fontSize: e.typography.pxToRem(13)
      }
    }, {
      props: {
        size: "large",
        variant: "text"
      },
      style: {
        padding: "8px 11px",
        fontSize: e.typography.pxToRem(15)
      }
    }, {
      props: {
        size: "small",
        variant: "outlined"
      },
      style: {
        padding: "3px 9px",
        fontSize: e.typography.pxToRem(13)
      }
    }, {
      props: {
        size: "large",
        variant: "outlined"
      },
      style: {
        padding: "7px 21px",
        fontSize: e.typography.pxToRem(15)
      }
    }, {
      props: {
        size: "small",
        variant: "contained"
      },
      style: {
        padding: "4px 10px",
        fontSize: e.typography.pxToRem(13)
      }
    }, {
      props: {
        size: "large",
        variant: "contained"
      },
      style: {
        padding: "8px 22px",
        fontSize: e.typography.pxToRem(15)
      }
    }, {
      props: {
        disableElevation: !0
      },
      style: {
        boxShadow: "none",
        "&:hover": {
          boxShadow: "none"
        },
        [`&.${Up.focusVisible}`]: {
          boxShadow: "none"
        },
        "&:active": {
          boxShadow: "none"
        },
        [`&.${Up.disabled}`]: {
          boxShadow: "none"
        }
      }
    }, {
      props: {
        fullWidth: !0
      },
      style: {
        width: "100%"
      }
    }, {
      props: {
        loadingPosition: "center"
      },
      style: {
        transition: e.transitions.create(["background-color", "box-shadow", "border-color"], {
          duration: e.transitions.duration.short
        }),
        [`&.${Up.loading}`]: {
          color: "transparent"
        }
      }
    }]
  };
})), UK = Be("span", {
  name: "MuiButton",
  slot: "StartIcon",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.startIcon, n.loading && t.startIconLoadingStart, t[`iconSize${Ue(n.size)}`]];
  }
})(({
  theme: e
}) => ({
  display: "inherit",
  marginRight: 8,
  marginLeft: -4,
  variants: [{
    props: {
      size: "small"
    },
    style: {
      marginLeft: -2
    }
  }, {
    props: {
      loadingPosition: "start",
      loading: !0
    },
    style: {
      transition: e.transitions.create(["opacity"], {
        duration: e.transitions.duration.short
      }),
      opacity: 0
    }
  }, {
    props: {
      loadingPosition: "start",
      loading: !0,
      fullWidth: !0
    },
    style: {
      marginRight: -8
    }
  }, ...$j]
})), GK = Be("span", {
  name: "MuiButton",
  slot: "EndIcon",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.endIcon, n.loading && t.endIconLoadingEnd, t[`iconSize${Ue(n.size)}`]];
  }
})(({
  theme: e
}) => ({
  display: "inherit",
  marginRight: -4,
  marginLeft: 8,
  variants: [{
    props: {
      size: "small"
    },
    style: {
      marginRight: -2
    }
  }, {
    props: {
      loadingPosition: "end",
      loading: !0
    },
    style: {
      transition: e.transitions.create(["opacity"], {
        duration: e.transitions.duration.short
      }),
      opacity: 0
    }
  }, {
    props: {
      loadingPosition: "end",
      loading: !0,
      fullWidth: !0
    },
    style: {
      marginLeft: -8
    }
  }, ...$j]
})), WK = Be("span", {
  name: "MuiButton",
  slot: "LoadingIndicator",
  overridesResolver: (e, t) => t.loadingIndicator
})(({
  theme: e
}) => ({
  display: "none",
  position: "absolute",
  visibility: "visible",
  variants: [{
    props: {
      loading: !0
    },
    style: {
      display: "flex"
    }
  }, {
    props: {
      loadingPosition: "start"
    },
    style: {
      left: 14
    }
  }, {
    props: {
      loadingPosition: "start",
      size: "small"
    },
    style: {
      left: 10
    }
  }, {
    props: {
      variant: "text",
      loadingPosition: "start"
    },
    style: {
      left: 6
    }
  }, {
    props: {
      loadingPosition: "center"
    },
    style: {
      left: "50%",
      transform: "translate(-50%)",
      color: (e.vars || e).palette.action.disabled
    }
  }, {
    props: {
      loadingPosition: "end"
    },
    style: {
      right: 14
    }
  }, {
    props: {
      loadingPosition: "end",
      size: "small"
    },
    style: {
      right: 10
    }
  }, {
    props: {
      variant: "text",
      loadingPosition: "end"
    },
    style: {
      right: 6
    }
  }, {
    props: {
      loadingPosition: "start",
      fullWidth: !0
    },
    style: {
      position: "relative",
      left: -10
    }
  }, {
    props: {
      loadingPosition: "end",
      fullWidth: !0
    },
    style: {
      position: "relative",
      right: -10
    }
  }]
})), BF = Be("span", {
  name: "MuiButton",
  slot: "LoadingIconPlaceholder",
  overridesResolver: (e, t) => t.loadingIconPlaceholder
})({
  display: "inline-block",
  width: "1em",
  height: "1em"
}), Qs = /* @__PURE__ */ w.forwardRef(function(t, n) {
  const i = w.useContext(_j), s = w.useContext(Aj), u = Bg(i, t), d = xn({
    props: u,
    name: "MuiButton"
  }), {
    children: p,
    color: m = "primary",
    component: v = "button",
    className: y,
    disabled: C = !1,
    disableElevation: S = !1,
    disableFocusRipple: R = !1,
    endIcon: O,
    focusVisibleClassName: E,
    fullWidth: k = !1,
    id: F,
    loading: _ = null,
    loadingIndicator: L,
    loadingPosition: M = "center",
    size: D = "medium",
    startIcon: H,
    type: K,
    variant: Q = "text",
    ...z
  } = d, I = Sr(F), G = L ?? /* @__PURE__ */ A.jsx(EE, {
    "aria-labelledby": I,
    color: "inherit",
    size: 16
  }), W = {
    ...d,
    color: m,
    component: v,
    disabled: C,
    disableElevation: S,
    disableFocusRipple: R,
    fullWidth: k,
    loading: _,
    loadingIndicator: G,
    loadingPosition: M,
    size: D,
    type: K,
    variant: Q
  }, B = VK(W), ee = (H || _ && M === "start") && /* @__PURE__ */ A.jsx(UK, {
    className: B.startIcon,
    ownerState: W,
    children: H || /* @__PURE__ */ A.jsx(BF, {
      className: B.loadingIconPlaceholder,
      ownerState: W
    })
  }), U = (O || _ && M === "end") && /* @__PURE__ */ A.jsx(GK, {
    className: B.endIcon,
    ownerState: W,
    children: O || /* @__PURE__ */ A.jsx(BF, {
      className: B.loadingIconPlaceholder,
      ownerState: W
    })
  }), q = s || "", Y = typeof _ == "boolean" ? (
    // use plain HTML span to minimize the runtime overhead
    /* @__PURE__ */ A.jsx("span", {
      className: B.loadingWrapper,
      style: {
        display: "contents"
      },
      children: _ && /* @__PURE__ */ A.jsx(WK, {
        className: B.loadingIndicator,
        ownerState: W,
        children: G
      })
    })
  ) : null;
  return /* @__PURE__ */ A.jsxs(BK, {
    ownerState: W,
    className: nt(i.className, B.root, y, q),
    component: v,
    disabled: C || _,
    focusRipple: !R,
    focusVisibleClassName: nt(B.focusVisible, E),
    ref: n,
    type: K,
    id: _ ? I : F,
    ...z,
    classes: B,
    children: [ee, M !== "end" && Y, p, M === "end" && Y, U]
  });
});
process.env.NODE_ENV !== "production" && (Qs.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: a.oneOfType([a.oneOf(["inherit", "primary", "secondary", "success", "error", "info", "warning"]), a.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: a.bool,
  /**
   * If `true`, no elevation is used.
   * @default false
   */
  disableElevation: a.bool,
  /**
   * If `true`, the  keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: a.bool,
  /**
   * If `true`, the ripple effect is disabled.
   *
   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
   * @default false
   */
  disableRipple: a.bool,
  /**
   * Element placed after the children.
   */
  endIcon: a.node,
  /**
   * @ignore
   */
  focusVisibleClassName: a.string,
  /**
   * If `true`, the button will take up the full width of its container.
   * @default false
   */
  fullWidth: a.bool,
  /**
   * The URL to link to when the button is clicked.
   * If defined, an `a` element will be used as the root node.
   */
  href: a.string,
  /**
   * @ignore
   */
  id: a.string,
  /**
   * If `true`, the loading indicator is visible and the button is disabled.
   * If `true | false`, the loading wrapper is always rendered before the children to prevent [Google Translation Crash](https://github.com/mui/material-ui/issues/27853).
   * @default null
   */
  loading: a.bool,
  /**
   * Element placed before the children if the button is in loading state.
   * The node should contain an element with `role="progressbar"` with an accessible name.
   * By default, it renders a `CircularProgress` that is labeled by the button itself.
   * @default <CircularProgress color="inherit" size={16} />
   */
  loadingIndicator: a.node,
  /**
   * The loading indicator can be positioned on the start, end, or the center of the button.
   * @default 'center'
   */
  loadingPosition: a.oneOf(["center", "end", "start"]),
  /**
   * The size of the component.
   * `small` is equivalent to the dense button styling.
   * @default 'medium'
   */
  size: a.oneOfType([a.oneOf(["small", "medium", "large"]), a.string]),
  /**
   * Element placed before the children.
   */
  startIcon: a.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * @ignore
   */
  type: a.oneOfType([a.oneOf(["button", "reset", "submit"]), a.string]),
  /**
   * The variant to use.
   * @default 'text'
   */
  variant: a.oneOfType([a.oneOf(["contained", "outlined", "text"]), a.string])
});
function qK(e) {
  return mn("PrivateSwitchBase", e);
}
bn("PrivateSwitchBase", ["root", "checked", "disabled", "input", "edgeStart", "edgeEnd"]);
const KK = (e) => {
  const {
    classes: t,
    checked: n,
    disabled: i,
    edge: s
  } = e, u = {
    root: ["root", n && "checked", i && "disabled", s && `edge${Ue(s)}`],
    input: ["input"]
  };
  return yt(u, qK, t);
}, YK = Be(Yc, {
  name: "MuiSwitchBase"
})({
  padding: 9,
  borderRadius: "50%",
  variants: [{
    props: {
      edge: "start",
      size: "small"
    },
    style: {
      marginLeft: -3
    }
  }, {
    props: ({
      edge: e,
      ownerState: t
    }) => e === "start" && t.size !== "small",
    style: {
      marginLeft: -12
    }
  }, {
    props: {
      edge: "end",
      size: "small"
    },
    style: {
      marginRight: -3
    }
  }, {
    props: ({
      edge: e,
      ownerState: t
    }) => e === "end" && t.size !== "small",
    style: {
      marginRight: -12
    }
  }]
}), XK = Be("input", {
  name: "MuiSwitchBase",
  shouldForwardProp: Ya
})({
  cursor: "inherit",
  position: "absolute",
  opacity: 0,
  width: "100%",
  height: "100%",
  top: 0,
  left: 0,
  margin: 0,
  padding: 0,
  zIndex: 1
}), jj = /* @__PURE__ */ w.forwardRef(function(t, n) {
  const {
    autoFocus: i,
    checked: s,
    checkedIcon: u,
    defaultChecked: d,
    disabled: p,
    disableFocusRipple: m = !1,
    edge: v = !1,
    icon: y,
    id: C,
    inputProps: S,
    inputRef: R,
    name: O,
    onBlur: E,
    onChange: k,
    onFocus: F,
    readOnly: _,
    required: L = !1,
    tabIndex: M,
    type: D,
    value: H,
    slots: K = {},
    slotProps: Q = {},
    ...z
  } = t, [I, G] = ah({
    controlled: s,
    default: !!d,
    name: "SwitchBase",
    state: "checked"
  }), W = Qc(), B = (me) => {
    F && F(me), W && W.onFocus && W.onFocus(me);
  }, ee = (me) => {
    E && E(me), W && W.onBlur && W.onBlur(me);
  }, U = (me) => {
    if (me.nativeEvent.defaultPrevented)
      return;
    const ge = me.target.checked;
    G(ge), k && k(me, ge);
  };
  let q = p;
  W && typeof q > "u" && (q = W.disabled);
  const Y = D === "checkbox" || D === "radio", ne = {
    ...t,
    checked: I,
    disabled: q,
    disableFocusRipple: m,
    edge: v
  }, re = KK(ne), X = {
    slots: K,
    slotProps: {
      input: S,
      ...Q
    }
  }, [j, ie] = yn("root", {
    ref: n,
    elementType: YK,
    className: re.root,
    shouldForwardComponentProp: !0,
    externalForwardedProps: {
      ...X,
      component: "span",
      ...z
    },
    getSlotProps: (me) => ({
      ...me,
      onFocus: (ge) => {
        var de;
        (de = me.onFocus) == null || de.call(me, ge), B(ge);
      },
      onBlur: (ge) => {
        var de;
        (de = me.onBlur) == null || de.call(me, ge), ee(ge);
      }
    }),
    ownerState: ne,
    additionalProps: {
      centerRipple: !0,
      focusRipple: !m,
      disabled: q,
      role: void 0,
      tabIndex: null
    }
  }), [fe, ce] = yn("input", {
    ref: R,
    elementType: XK,
    className: re.input,
    externalForwardedProps: X,
    getSlotProps: (me) => ({
      onChange: (ge) => {
        var de;
        (de = me.onChange) == null || de.call(me, ge), U(ge);
      }
    }),
    ownerState: ne,
    additionalProps: {
      autoFocus: i,
      checked: s,
      defaultChecked: d,
      disabled: q,
      id: Y ? C : void 0,
      name: O,
      readOnly: _,
      required: L,
      tabIndex: M,
      type: D,
      ...D === "checkbox" && H === void 0 ? {} : {
        value: H
      }
    }
  });
  return /* @__PURE__ */ A.jsxs(j, {
    ...ie,
    children: [/* @__PURE__ */ A.jsx(fe, {
      ...ce
    }), I ? u : y]
  });
});
process.env.NODE_ENV !== "production" && (jj.propTypes = {
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: a.bool,
  /**
   * If `true`, the component is checked.
   */
  checked: a.bool,
  /**
   * The icon to display when the component is checked.
   */
  checkedIcon: a.node.isRequired,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * @ignore
   */
  defaultChecked: a.bool,
  /**
   * If `true`, the component is disabled.
   */
  disabled: a.bool,
  /**
   * If `true`, the  keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: a.bool,
  /**
   * If given, uses a negative margin to counteract the padding on one
   * side (this is often helpful for aligning the left or right
   * side of the icon with content above or below, without ruining the border
   * size and shape).
   * @default false
   */
  edge: a.oneOf(["end", "start", !1]),
  /**
   * The icon to display when the component is unchecked.
   */
  icon: a.node.isRequired,
  /**
   * The id of the `input` element.
   */
  id: a.string,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   */
  inputProps: a.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Ea,
  /*
   * @ignore
   */
  name: a.string,
  /**
   * @ignore
   */
  onBlur: a.func,
  /**
   * Callback fired when the state is changed.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: a.func,
  /**
   * @ignore
   */
  onFocus: a.func,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: a.bool,
  /**
   * If `true`, the `input` element is required.
   */
  required: a.bool,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    input: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    input: a.elementType,
    root: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.object,
  /**
   * @ignore
   */
  tabIndex: a.oneOfType([a.number, a.string]),
  /**
   * The input component prop `type`.
   */
  type: a.string.isRequired,
  /**
   * The value of the component.
   */
  value: a.any
});
const QK = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
}), "CheckBoxOutlineBlank"), JK = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
}), "CheckBox"), ZK = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z"
}), "IndeterminateCheckBox");
function eY(e) {
  return mn("MuiCheckbox", e);
}
const MO = bn("MuiCheckbox", ["root", "checked", "disabled", "indeterminate", "colorPrimary", "colorSecondary", "sizeSmall", "sizeMedium"]), tY = (e) => {
  const {
    classes: t,
    indeterminate: n,
    color: i,
    size: s
  } = e, u = {
    root: ["root", n && "indeterminate", `color${Ue(i)}`, `size${Ue(s)}`]
  }, d = yt(u, eY, t);
  return {
    ...t,
    // forward the disabled and checked classes to the SwitchBase
    ...d
  };
}, nY = Be(jj, {
  shouldForwardProp: (e) => Ya(e) || e === "classes",
  name: "MuiCheckbox",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.indeterminate && t.indeterminate, t[`size${Ue(n.size)}`], n.color !== "default" && t[`color${Ue(n.color)}`]];
  }
})(rn(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  variants: [{
    props: {
      color: "default",
      disableRipple: !1
    },
    style: {
      "&:hover": {
        backgroundColor: e.vars ? `rgba(${e.vars.palette.action.activeChannel} / ${e.vars.palette.action.hoverOpacity})` : $n(e.palette.action.active, e.palette.action.hoverOpacity)
      }
    }
  }, ...Object.entries(e.palette).filter(to()).map(([t]) => ({
    props: {
      color: t,
      disableRipple: !1
    },
    style: {
      "&:hover": {
        backgroundColor: e.vars ? `rgba(${e.vars.palette[t].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : $n(e.palette[t].main, e.palette.action.hoverOpacity)
      }
    }
  })), ...Object.entries(e.palette).filter(to()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      [`&.${MO.checked}, &.${MO.indeterminate}`]: {
        color: (e.vars || e).palette[t].main
      },
      [`&.${MO.disabled}`]: {
        color: (e.vars || e).palette.action.disabled
      }
    }
  })), {
    // Should be last to override other colors
    props: {
      disableRipple: !1
    },
    style: {
      // Reset on touch devices, it doesn't add specificity
      "&:hover": {
        "@media (hover: none)": {
          backgroundColor: "transparent"
        }
      }
    }
  }]
}))), rY = /* @__PURE__ */ A.jsx(JK, {}), oY = /* @__PURE__ */ A.jsx(QK, {}), iY = /* @__PURE__ */ A.jsx(ZK, {}), zj = /* @__PURE__ */ w.forwardRef(function(t, n) {
  const i = xn({
    props: t,
    name: "MuiCheckbox"
  }), {
    checkedIcon: s = rY,
    color: u = "primary",
    icon: d = oY,
    indeterminate: p = !1,
    indeterminateIcon: m = iY,
    inputProps: v,
    size: y = "medium",
    disableRipple: C = !1,
    className: S,
    slots: R = {},
    slotProps: O = {},
    ...E
  } = i, k = p ? m : d, F = p ? m : s, _ = {
    ...i,
    disableRipple: C,
    color: u,
    indeterminate: p,
    size: y
  }, L = tY(_), M = O.input ?? v, [D, H] = yn("root", {
    ref: n,
    elementType: nY,
    className: nt(L.root, S),
    shouldForwardComponentProp: !0,
    externalForwardedProps: {
      slots: R,
      slotProps: O,
      ...E
    },
    ownerState: _,
    additionalProps: {
      type: "checkbox",
      icon: /* @__PURE__ */ w.cloneElement(k, {
        fontSize: k.props.fontSize ?? y
      }),
      checkedIcon: /* @__PURE__ */ w.cloneElement(F, {
        fontSize: F.props.fontSize ?? y
      }),
      disableRipple: C,
      slots: R,
      slotProps: {
        input: pj(typeof M == "function" ? M(_) : M, {
          "data-indeterminate": p
        })
      }
    }
  });
  return /* @__PURE__ */ A.jsx(D, {
    ...H,
    classes: L
  });
});
process.env.NODE_ENV !== "production" && (zj.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the component is checked.
   */
  checked: a.bool,
  /**
   * The icon to display when the component is checked.
   * @default <CheckBoxIcon />
   */
  checkedIcon: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: a.oneOfType([a.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), a.string]),
  /**
   * The default checked state. Use when the component is not controlled.
   */
  defaultChecked: a.bool,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: a.bool,
  /**
   * If `true`, the ripple effect is disabled.
   * @default false
   */
  disableRipple: a.bool,
  /**
   * The icon to display when the component is unchecked.
   * @default <CheckBoxOutlineBlankIcon />
   */
  icon: a.node,
  /**
   * The id of the `input` element.
   */
  id: a.string,
  /**
   * If `true`, the component appears indeterminate.
   * This does not set the native input element to indeterminate due
   * to inconsistent behavior across browsers.
   * However, we set a `data-indeterminate` attribute on the `input`.
   * @default false
   */
  indeterminate: a.bool,
  /**
   * The icon to display when the component is indeterminate.
   * @default <IndeterminateCheckBoxIcon />
   */
  indeterminateIcon: a.node,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @deprecated Use `slotProps.input` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  inputProps: a.object,
  /**
   * Callback fired when the state is changed.
   *
   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: a.func,
  /**
   * If `true`, the `input` element is required.
   * @default false
   */
  required: a.bool,
  /**
   * The size of the component.
   * `small` is equivalent to the dense checkbox styling.
   * @default 'medium'
   */
  size: a.oneOfType([a.oneOf(["medium", "small"]), a.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    input: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    input: a.elementType,
    root: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The value of the component. The DOM API casts this to a string.
   * The browser uses "on" as the default value.
   */
  value: a.any
});
function UF(e) {
  return e.substring(2).toLowerCase();
}
function aY(e, t) {
  return t.documentElement.clientWidth < e.clientX || t.documentElement.clientHeight < e.clientY;
}
function uC(e) {
  const {
    children: t,
    disableReactTree: n = !1,
    mouseEvent: i = "onClick",
    onClickAway: s,
    touchEvent: u = "onTouchEnd"
  } = e, d = w.useRef(!1), p = w.useRef(null), m = w.useRef(!1), v = w.useRef(!1);
  w.useEffect(() => (setTimeout(() => {
    m.current = !0;
  }, 0), () => {
    m.current = !1;
  }), []);
  const y = Vr(yh(t), p), C = Nn((O) => {
    const E = v.current;
    v.current = !1;
    const k = ao(p.current);
    if (!m.current || !p.current || "clientX" in O && aY(O, k))
      return;
    if (d.current) {
      d.current = !1;
      return;
    }
    let F;
    O.composedPath ? F = O.composedPath().includes(p.current) : F = !k.documentElement.contains(
      // @ts-expect-error returns `false` as intended when not dispatched from a Node
      O.target
    ) || p.current.contains(
      // @ts-expect-error returns `false` as intended when not dispatched from a Node
      O.target
    ), !F && (n || !E) && s(O);
  }), S = (O) => (E) => {
    v.current = !0;
    const k = t.props[O];
    k && k(E);
  }, R = {
    ref: y
  };
  return u !== !1 && (R[u] = S(u)), w.useEffect(() => {
    if (u !== !1) {
      const O = UF(u), E = ao(p.current), k = () => {
        d.current = !0;
      };
      return E.addEventListener(O, C), E.addEventListener("touchmove", k), () => {
        E.removeEventListener(O, C), E.removeEventListener("touchmove", k);
      };
    }
  }, [C, u]), i !== !1 && (R[i] = S(i)), w.useEffect(() => {
    if (i !== !1) {
      const O = UF(i), E = ao(p.current);
      return E.addEventListener(O, C), () => {
        E.removeEventListener(O, C);
      };
    }
  }, [C, i]), /* @__PURE__ */ w.cloneElement(t, R);
}
process.env.NODE_ENV !== "production" && (uC.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The wrapped element.
   */
  children: vh.isRequired,
  /**
   * If `true`, the React tree is ignored and only the DOM tree is considered.
   * This prop changes how portaled elements are handled.
   * @default false
   */
  disableReactTree: a.bool,
  /**
   * The mouse event to listen to. You can disable the listener by providing `false`.
   * @default 'onClick'
   */
  mouseEvent: a.oneOf(["onClick", "onMouseDown", "onMouseUp", "onPointerDown", "onPointerUp", !1]),
  /**
   * Callback fired when a "click away" event is detected.
   */
  onClickAway: a.func.isRequired,
  /**
   * The touch event to listen to. You can disable the listener by providing `false`.
   * @default 'onTouchEnd'
   */
  touchEvent: a.oneOf(["onTouchEnd", "onTouchStart", !1])
});
process.env.NODE_ENV !== "production" && (uC.propTypes = DC(uC.propTypes));
const Hj = Uq({
  createStyledComponent: Be("div", {
    name: "MuiContainer",
    slot: "Root",
    overridesResolver: (e, t) => {
      const {
        ownerState: n
      } = e;
      return [t.root, t[`maxWidth${Ue(String(n.maxWidth))}`], n.fixed && t.fixed, n.disableGutters && t.disableGutters];
    }
  }),
  useThemeProps: (e) => xn({
    props: e,
    name: "MuiContainer"
  })
});
process.env.NODE_ENV !== "production" && (Hj.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * If `true`, the left and right padding is removed.
   * @default false
   */
  disableGutters: a.bool,
  /**
   * Set the max-width to match the min-width of the current breakpoint.
   * This is useful if you'd prefer to design for a fixed set of sizes
   * instead of trying to accommodate a fully fluid viewport.
   * It's fluid by default.
   * @default false
   */
  fixed: a.bool,
  /**
   * Determine the max-width of the container.
   * The container width grows with the size of the screen.
   * Set to `false` to disable `maxWidth`.
   * @default 'lg'
   */
  maxWidth: a.oneOfType([a.oneOf(["xs", "sm", "md", "lg", "xl", !1]), a.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
const Ok = typeof OP({}) == "function", sY = (e, t) => ({
  WebkitFontSmoothing: "antialiased",
  // Antialiasing.
  MozOsxFontSmoothing: "grayscale",
  // Antialiasing.
  // Change from `box-sizing: content-box` so that `width`
  // is not affected by `padding` or `border`.
  boxSizing: "border-box",
  // Fix font resize problem in iOS
  WebkitTextSizeAdjust: "100%",
  // When used under CssVarsProvider, colorScheme should not be applied dynamically because it will generate the stylesheet twice for server-rendered applications.
  ...t && !e.vars && {
    colorScheme: e.palette.mode
  }
}), lY = (e) => ({
  color: (e.vars || e).palette.text.primary,
  ...e.typography.body1,
  backgroundColor: (e.vars || e).palette.background.default,
  "@media print": {
    // Save printer ink.
    backgroundColor: (e.vars || e).palette.common.white
  }
}), Vj = (e, t = !1) => {
  var u, d;
  const n = {};
  t && e.colorSchemes && typeof e.getColorSchemeSelector == "function" && Object.entries(e.colorSchemes).forEach(([p, m]) => {
    var y, C;
    const v = e.getColorSchemeSelector(p);
    v.startsWith("@") ? n[v] = {
      ":root": {
        colorScheme: (y = m.palette) == null ? void 0 : y.mode
      }
    } : n[v.replace(/\s*&/, "")] = {
      colorScheme: (C = m.palette) == null ? void 0 : C.mode
    };
  });
  let i = {
    html: sY(e, t),
    "*, *::before, *::after": {
      boxSizing: "inherit"
    },
    "strong, b": {
      fontWeight: e.typography.fontWeightBold
    },
    body: {
      margin: 0,
      // Remove the margin in all browsers.
      ...lY(e),
      // Add support for document.body.requestFullScreen().
      // Other elements, if background transparent, are not supported.
      "&::backdrop": {
        backgroundColor: (e.vars || e).palette.background.default
      }
    },
    ...n
  };
  const s = (d = (u = e.components) == null ? void 0 : u.MuiCssBaseline) == null ? void 0 : d.styleOverrides;
  return s && (i = [i, s]), i;
}, h0 = "mui-ecs", uY = (e) => {
  const t = Vj(e, !1), n = Array.isArray(t) ? t[0] : t;
  return !e.vars && n && (n.html[`:root:has(${h0})`] = {
    colorScheme: e.palette.mode
  }), e.colorSchemes && Object.entries(e.colorSchemes).forEach(([i, s]) => {
    var d, p;
    const u = e.getColorSchemeSelector(i);
    u.startsWith("@") ? n[u] = {
      [`:root:not(:has(.${h0}))`]: {
        colorScheme: (d = s.palette) == null ? void 0 : d.mode
      }
    } : n[u.replace(/\s*&/, "")] = {
      [`&:not(:has(.${h0}))`]: {
        colorScheme: (p = s.palette) == null ? void 0 : p.mode
      }
    };
  }), t;
}, cY = OP(Ok ? ({
  theme: e,
  enableColorScheme: t
}) => Vj(e, t) : ({
  theme: e
}) => uY(e));
function Bj(e) {
  const t = xn({
    props: e,
    name: "MuiCssBaseline"
  }), {
    children: n,
    enableColorScheme: i = !1
  } = t;
  return /* @__PURE__ */ A.jsxs(w.Fragment, {
    children: [Ok && /* @__PURE__ */ A.jsx(cY, {
      enableColorScheme: i
    }), !Ok && !i && /* @__PURE__ */ A.jsx("span", {
      className: h0,
      style: {
        display: "none"
      }
    }), n]
  });
}
process.env.NODE_ENV !== "production" && (Bj.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * You can wrap a node.
   */
  children: a.node,
  /**
   * Enable `color-scheme` CSS property to use `theme.palette.mode`.
   * For more details, check out https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme
   * For browser support, check out https://caniuse.com/?search=color-scheme
   * @default false
   */
  enableColorScheme: a.bool
});
function dY(e) {
  const t = ao(e);
  return t.body === e ? rl(e).innerWidth > t.documentElement.clientWidth : e.scrollHeight > e.clientHeight;
}
function Yb(e, t) {
  t ? e.setAttribute("aria-hidden", "true") : e.removeAttribute("aria-hidden");
}
function GF(e) {
  return parseInt(rl(e).getComputedStyle(e).paddingRight, 10) || 0;
}
function fY(e) {
  const n = ["TEMPLATE", "SCRIPT", "STYLE", "LINK", "MAP", "META", "NOSCRIPT", "PICTURE", "COL", "COLGROUP", "PARAM", "SLOT", "SOURCE", "TRACK"].includes(e.tagName), i = e.tagName === "INPUT" && e.getAttribute("type") === "hidden";
  return n || i;
}
function WF(e, t, n, i, s) {
  const u = [t, n, ...i];
  [].forEach.call(e.children, (d) => {
    const p = !u.includes(d), m = !fY(d);
    p && m && Yb(d, s);
  });
}
function IO(e, t) {
  let n = -1;
  return e.some((i, s) => t(i) ? (n = s, !0) : !1), n;
}
function pY(e, t) {
  const n = [], i = e.container;
  if (!t.disableScrollLock) {
    if (dY(i)) {
      const d = q$(rl(i));
      n.push({
        value: i.style.paddingRight,
        property: "padding-right",
        el: i
      }), i.style.paddingRight = `${GF(i) + d}px`;
      const p = ao(i).querySelectorAll(".mui-fixed");
      [].forEach.call(p, (m) => {
        n.push({
          value: m.style.paddingRight,
          property: "padding-right",
          el: m
        }), m.style.paddingRight = `${GF(m) + d}px`;
      });
    }
    let u;
    if (i.parentNode instanceof DocumentFragment)
      u = ao(i).body;
    else {
      const d = i.parentElement, p = rl(i);
      u = (d == null ? void 0 : d.nodeName) === "HTML" && p.getComputedStyle(d).overflowY === "scroll" ? d : i;
    }
    n.push({
      value: u.style.overflow,
      property: "overflow",
      el: u
    }, {
      value: u.style.overflowX,
      property: "overflow-x",
      el: u
    }, {
      value: u.style.overflowY,
      property: "overflow-y",
      el: u
    }), u.style.overflow = "hidden";
  }
  return () => {
    n.forEach(({
      value: u,
      el: d,
      property: p
    }) => {
      u ? d.style.setProperty(p, u) : d.style.removeProperty(p);
    });
  };
}
function hY(e) {
  const t = [];
  return [].forEach.call(e.children, (n) => {
    n.getAttribute("aria-hidden") === "true" && t.push(n);
  }), t;
}
class mY {
  constructor() {
    this.modals = [], this.containers = [];
  }
  add(t, n) {
    let i = this.modals.indexOf(t);
    if (i !== -1)
      return i;
    i = this.modals.length, this.modals.push(t), t.modalRef && Yb(t.modalRef, !1);
    const s = hY(n);
    WF(n, t.mount, t.modalRef, s, !0);
    const u = IO(this.containers, (d) => d.container === n);
    return u !== -1 ? (this.containers[u].modals.push(t), i) : (this.containers.push({
      modals: [t],
      container: n,
      restore: null,
      hiddenSiblings: s
    }), i);
  }
  mount(t, n) {
    const i = IO(this.containers, (u) => u.modals.includes(t)), s = this.containers[i];
    s.restore || (s.restore = pY(s, n));
  }
  remove(t, n = !0) {
    const i = this.modals.indexOf(t);
    if (i === -1)
      return i;
    const s = IO(this.containers, (d) => d.modals.includes(t)), u = this.containers[s];
    if (u.modals.splice(u.modals.indexOf(t), 1), this.modals.splice(i, 1), u.modals.length === 0)
      u.restore && u.restore(), t.modalRef && Yb(t.modalRef, n), WF(u.container, t.mount, t.modalRef, u.hiddenSiblings, !1), this.containers.splice(s, 1);
    else {
      const d = u.modals[u.modals.length - 1];
      d.modalRef && Yb(d.modalRef, !1);
    }
    return i;
  }
  isTopModal(t) {
    return this.modals.length > 0 && this.modals[this.modals.length - 1] === t;
  }
}
const gY = ["input", "select", "textarea", "a[href]", "button", "[tabindex]", "audio[controls]", "video[controls]", '[contenteditable]:not([contenteditable="false"])'].join(",");
function vY(e) {
  const t = parseInt(e.getAttribute("tabindex") || "", 10);
  return Number.isNaN(t) ? e.contentEditable === "true" || (e.nodeName === "AUDIO" || e.nodeName === "VIDEO" || e.nodeName === "DETAILS") && e.getAttribute("tabindex") === null ? 0 : e.tabIndex : t;
}
function yY(e) {
  if (e.tagName !== "INPUT" || e.type !== "radio" || !e.name)
    return !1;
  const t = (i) => e.ownerDocument.querySelector(`input[type="radio"]${i}`);
  let n = t(`[name="${e.name}"]:checked`);
  return n || (n = t(`[name="${e.name}"]`)), n !== e;
}
function bY(e) {
  return !(e.disabled || e.tagName === "INPUT" && e.type === "hidden" || yY(e));
}
function CY(e) {
  const t = [], n = [];
  return Array.from(e.querySelectorAll(gY)).forEach((i, s) => {
    const u = vY(i);
    u === -1 || !bY(i) || (u === 0 ? t.push(i) : n.push({
      documentOrder: s,
      tabIndex: u,
      node: i
    }));
  }), n.sort((i, s) => i.tabIndex === s.tabIndex ? i.documentOrder - s.documentOrder : i.tabIndex - s.tabIndex).map((i) => i.node).concat(t);
}
function SY() {
  return !0;
}
function cC(e) {
  const {
    children: t,
    disableAutoFocus: n = !1,
    disableEnforceFocus: i = !1,
    disableRestoreFocus: s = !1,
    getTabbable: u = CY,
    isEnabled: d = SY,
    open: p
  } = e, m = w.useRef(!1), v = w.useRef(null), y = w.useRef(null), C = w.useRef(null), S = w.useRef(null), R = w.useRef(!1), O = w.useRef(null), E = Vr(yh(t), O), k = w.useRef(null);
  w.useEffect(() => {
    !p || !O.current || (R.current = !n);
  }, [n, p]), w.useEffect(() => {
    if (!p || !O.current)
      return;
    const L = ao(O.current);
    return O.current.contains(L.activeElement) || (O.current.hasAttribute("tabIndex") || (process.env.NODE_ENV !== "production" && console.error(["MUI: The modal content node does not accept focus.", 'For the benefit of assistive technologies, the tabIndex of the node is being set to "-1".'].join(`
`)), O.current.setAttribute("tabIndex", "-1")), R.current && O.current.focus()), () => {
      s || (C.current && C.current.focus && (m.current = !0, C.current.focus()), C.current = null);
    };
  }, [p]), w.useEffect(() => {
    if (!p || !O.current)
      return;
    const L = ao(O.current), M = (K) => {
      k.current = K, !(i || !d() || K.key !== "Tab") && L.activeElement === O.current && K.shiftKey && (m.current = !0, y.current && y.current.focus());
    }, D = () => {
      var z, I;
      const K = O.current;
      if (K === null)
        return;
      if (!L.hasFocus() || !d() || m.current) {
        m.current = !1;
        return;
      }
      if (K.contains(L.activeElement) || i && L.activeElement !== v.current && L.activeElement !== y.current)
        return;
      if (L.activeElement !== S.current)
        S.current = null;
      else if (S.current !== null)
        return;
      if (!R.current)
        return;
      let Q = [];
      if ((L.activeElement === v.current || L.activeElement === y.current) && (Q = u(O.current)), Q.length > 0) {
        const G = !!((z = k.current) != null && z.shiftKey && ((I = k.current) == null ? void 0 : I.key) === "Tab"), W = Q[0], B = Q[Q.length - 1];
        typeof W != "string" && typeof B != "string" && (G ? B.focus() : W.focus());
      } else
        K.focus();
    };
    L.addEventListener("focusin", D), L.addEventListener("keydown", M, !0);
    const H = setInterval(() => {
      L.activeElement && L.activeElement.tagName === "BODY" && D();
    }, 50);
    return () => {
      clearInterval(H), L.removeEventListener("focusin", D), L.removeEventListener("keydown", M, !0);
    };
  }, [n, i, s, d, p, u]);
  const F = (L) => {
    C.current === null && (C.current = L.relatedTarget), R.current = !0, S.current = L.target;
    const M = t.props.onFocus;
    M && M(L);
  }, _ = (L) => {
    C.current === null && (C.current = L.relatedTarget), R.current = !0;
  };
  return /* @__PURE__ */ A.jsxs(w.Fragment, {
    children: [/* @__PURE__ */ A.jsx("div", {
      tabIndex: p ? 0 : -1,
      onFocus: _,
      ref: v,
      "data-testid": "sentinelStart"
    }), /* @__PURE__ */ w.cloneElement(t, {
      ref: E,
      onFocus: F
    }), /* @__PURE__ */ A.jsx("div", {
      tabIndex: p ? 0 : -1,
      onFocus: _,
      ref: y,
      "data-testid": "sentinelEnd"
    })]
  });
}
process.env.NODE_ENV !== "production" && (cC.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A single child content element.
   */
  children: vh,
  /**
   * If `true`, the focus trap will not automatically shift focus to itself when it opens, and
   * replace it to the last focused element when it closes.
   * This also works correctly with any focus trap children that have the `disableAutoFocus` prop.
   *
   * Generally this should never be set to `true` as it makes the focus trap less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableAutoFocus: a.bool,
  /**
   * If `true`, the focus trap will not prevent focus from leaving the focus trap while open.
   *
   * Generally this should never be set to `true` as it makes the focus trap less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableEnforceFocus: a.bool,
  /**
   * If `true`, the focus trap will not restore focus to previously focused element once
   * focus trap is hidden or unmounted.
   * @default false
   */
  disableRestoreFocus: a.bool,
  /**
   * Returns an array of ordered tabbable nodes (i.e. in tab order) within the root.
   * For instance, you can provide the "tabbable" npm dependency.
   * @param {HTMLElement} root
   */
  getTabbable: a.func,
  /**
   * This prop extends the `open` prop.
   * It allows to toggle the open state without having to wait for a rerender when changing the `open` prop.
   * This prop should be memoized.
   * It can be used to support multiple focus trap mounted at the same time.
   * @default function defaultIsEnabled(): boolean {
   *   return true;
   * }
   */
  isEnabled: a.func,
  /**
   * If `true`, focus is locked.
   */
  open: a.bool.isRequired
});
process.env.NODE_ENV !== "production" && (cC.propTypes = DC(cC.propTypes));
function wY(e) {
  return typeof e == "function" ? e() : e;
}
function xY(e) {
  return e ? e.props.hasOwnProperty("in") : !1;
}
const qF = () => {
}, e0 = new mY();
function EY(e) {
  const {
    container: t,
    disableEscapeKeyDown: n = !1,
    disableScrollLock: i = !1,
    closeAfterTransition: s = !1,
    onTransitionEnter: u,
    onTransitionExited: d,
    children: p,
    onClose: m,
    open: v,
    rootRef: y
  } = e, C = w.useRef({}), S = w.useRef(null), R = w.useRef(null), O = Vr(R, y), [E, k] = w.useState(!v), F = xY(p);
  let _ = !0;
  (e["aria-hidden"] === "false" || e["aria-hidden"] === !1) && (_ = !1);
  const L = () => ao(S.current), M = () => (C.current.modalRef = R.current, C.current.mount = S.current, C.current), D = () => {
    e0.mount(M(), {
      disableScrollLock: i
    }), R.current && (R.current.scrollTop = 0);
  }, H = Nn(() => {
    const U = wY(t) || L().body;
    e0.add(M(), U), R.current && D();
  }), K = () => e0.isTopModal(M()), Q = Nn((U) => {
    S.current = U, U && (v && K() ? D() : R.current && Yb(R.current, _));
  }), z = w.useCallback(() => {
    e0.remove(M(), _);
  }, [_]);
  w.useEffect(() => () => {
    z();
  }, [z]), w.useEffect(() => {
    v ? H() : (!F || !s) && z();
  }, [v, z, F, s, H]);
  const I = (U) => (q) => {
    var Y;
    (Y = U.onKeyDown) == null || Y.call(U, q), !(q.key !== "Escape" || q.which === 229 || // Wait until IME is settled.
    !K()) && (n || (q.stopPropagation(), m && m(q, "escapeKeyDown")));
  }, G = (U) => (q) => {
    var Y;
    (Y = U.onClick) == null || Y.call(U, q), q.target === q.currentTarget && m && m(q, "backdropClick");
  };
  return {
    getRootProps: (U = {}) => {
      const q = Q$(e);
      delete q.onTransitionEnter, delete q.onTransitionExited;
      const Y = {
        ...q,
        ...U
      };
      return {
        /*
         * Marking an element with the role presentation indicates to assistive technology
         * that this element should be ignored; it exists to support the web application and
         * is not meant for humans to interact with directly.
         * https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/no-static-element-interactions.md
         */
        role: "presentation",
        ...Y,
        onKeyDown: I(Y),
        ref: O
      };
    },
    getBackdropProps: (U = {}) => {
      const q = U;
      return {
        "aria-hidden": !0,
        ...q,
        onClick: G(q),
        open: v
      };
    },
    getTransitionProps: () => {
      const U = () => {
        k(!1), u && u();
      }, q = () => {
        k(!0), d && d(), s && z();
      };
      return {
        onEnter: eF(U, (p == null ? void 0 : p.props.onEnter) ?? qF),
        onExited: eF(q, (p == null ? void 0 : p.props.onExited) ?? qF)
      };
    },
    rootRef: O,
    portalRef: Q,
    isTopModal: K,
    exited: E,
    hasTransition: F
  };
}
function TY(e) {
  return mn("MuiModal", e);
}
bn("MuiModal", ["root", "hidden", "backdrop"]);
const RY = (e) => {
  const {
    open: t,
    exited: n,
    classes: i
  } = e;
  return yt({
    root: ["root", !t && n && "hidden"],
    backdrop: ["backdrop"]
  }, TY, i);
}, OY = Be("div", {
  name: "MuiModal",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, !n.open && n.exited && t.hidden];
  }
})(rn(({
  theme: e
}) => ({
  position: "fixed",
  zIndex: (e.vars || e).zIndex.modal,
  right: 0,
  bottom: 0,
  top: 0,
  left: 0,
  variants: [{
    props: ({
      ownerState: t
    }) => !t.open && t.exited,
    style: {
      visibility: "hidden"
    }
  }]
}))), kY = Be(Lj, {
  name: "MuiModal",
  slot: "Backdrop",
  overridesResolver: (e, t) => t.backdrop
})({
  zIndex: -1
}), Uj = /* @__PURE__ */ w.forwardRef(function(t, n) {
  const i = xn({
    name: "MuiModal",
    props: t
  }), {
    BackdropComponent: s = kY,
    BackdropProps: u,
    classes: d,
    className: p,
    closeAfterTransition: m = !1,
    children: v,
    container: y,
    component: C,
    components: S = {},
    componentsProps: R = {},
    disableAutoFocus: O = !1,
    disableEnforceFocus: E = !1,
    disableEscapeKeyDown: k = !1,
    disablePortal: F = !1,
    disableRestoreFocus: _ = !1,
    disableScrollLock: L = !1,
    hideBackdrop: M = !1,
    keepMounted: D = !1,
    onBackdropClick: H,
    onClose: K,
    onTransitionEnter: Q,
    onTransitionExited: z,
    open: I,
    slotProps: G = {},
    slots: W = {},
    // eslint-disable-next-line react/prop-types
    theme: B,
    ...ee
  } = i, U = {
    ...i,
    closeAfterTransition: m,
    disableAutoFocus: O,
    disableEnforceFocus: E,
    disableEscapeKeyDown: k,
    disablePortal: F,
    disableRestoreFocus: _,
    disableScrollLock: L,
    hideBackdrop: M,
    keepMounted: D
  }, {
    getRootProps: q,
    getBackdropProps: Y,
    getTransitionProps: ne,
    portalRef: re,
    isTopModal: X,
    exited: j,
    hasTransition: ie
  } = EY({
    ...U,
    rootRef: n
  }), fe = {
    ...U,
    exited: j
  }, ce = RY(fe), me = {};
  if (v.props.tabIndex === void 0 && (me.tabIndex = "-1"), ie) {
    const {
      onEnter: Re,
      onExited: ue
    } = ne();
    me.onEnter = Re, me.onExited = ue;
  }
  const ge = {
    slots: {
      root: S.Root,
      backdrop: S.Backdrop,
      ...W
    },
    slotProps: {
      ...R,
      ...G
    }
  }, [de, pe] = yn("root", {
    ref: n,
    elementType: OY,
    externalForwardedProps: {
      ...ge,
      ...ee,
      component: C
    },
    getSlotProps: q,
    ownerState: fe,
    className: nt(p, ce == null ? void 0 : ce.root, !fe.open && fe.exited && (ce == null ? void 0 : ce.hidden))
  }), [be, Ce] = yn("backdrop", {
    ref: u == null ? void 0 : u.ref,
    elementType: s,
    externalForwardedProps: ge,
    shouldForwardComponentProp: !0,
    additionalProps: u,
    getSlotProps: (Re) => Y({
      ...Re,
      onClick: (ue) => {
        H && H(ue), Re != null && Re.onClick && Re.onClick(ue);
      }
    }),
    className: nt(u == null ? void 0 : u.className, ce == null ? void 0 : ce.backdrop),
    ownerState: fe
  });
  return !D && !I && (!ie || j) ? null : /* @__PURE__ */ A.jsx(lC, {
    ref: re,
    container: y,
    disablePortal: F,
    children: /* @__PURE__ */ A.jsxs(de, {
      ...pe,
      children: [!M && s ? /* @__PURE__ */ A.jsx(be, {
        ...Ce
      }) : null, /* @__PURE__ */ A.jsx(cC, {
        disableEnforceFocus: E,
        disableAutoFocus: O,
        disableRestoreFocus: _,
        isEnabled: X,
        open: I,
        children: /* @__PURE__ */ w.cloneElement(v, me)
      })]
    })
  });
});
process.env.NODE_ENV !== "production" && (Uj.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A backdrop component. This prop enables custom backdrop rendering.
   * @deprecated Use `slots.backdrop` instead. While this prop currently works, it will be removed in the next major version.
   * Use the `slots.backdrop` prop to make your application ready for the next version of Material UI.
   * @default styled(Backdrop, {
   *   name: 'MuiModal',
   *   slot: 'Backdrop',
   *   overridesResolver: (props, styles) => {
   *     return styles.backdrop;
   *   },
   * })({
   *   zIndex: -1,
   * })
   */
  BackdropComponent: a.elementType,
  /**
   * Props applied to the [`Backdrop`](https://mui.com/material-ui/api/backdrop/) element.
   * @deprecated Use `slotProps.backdrop` instead.
   */
  BackdropProps: a.object,
  /**
   * A single child content element.
   */
  children: vh.isRequired,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * When set to true the Modal waits until a nested Transition is completed before closing.
   * @default false
   */
  closeAfterTransition: a.bool,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * The components used for each slot inside.
   *
   * @deprecated Use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: a.shape({
    Backdrop: a.elementType,
    Root: a.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated Use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: a.shape({
    backdrop: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object])
  }),
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: a.oneOfType([Wl, a.func]),
  /**
   * If `true`, the modal will not automatically shift focus to itself when it opens, and
   * replace it to the last focused element when it closes.
   * This also works correctly with any modal children that have the `disableAutoFocus` prop.
   *
   * Generally this should never be set to `true` as it makes the modal less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableAutoFocus: a.bool,
  /**
   * If `true`, the modal will not prevent focus from leaving the modal while open.
   *
   * Generally this should never be set to `true` as it makes the modal less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableEnforceFocus: a.bool,
  /**
   * If `true`, hitting escape will not fire the `onClose` callback.
   * @default false
   */
  disableEscapeKeyDown: a.bool,
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: a.bool,
  /**
   * If `true`, the modal will not restore focus to previously focused element once
   * modal is hidden or unmounted.
   * @default false
   */
  disableRestoreFocus: a.bool,
  /**
   * Disable the scroll lock behavior.
   * @default false
   */
  disableScrollLock: a.bool,
  /**
   * If `true`, the backdrop is not rendered.
   * @default false
   */
  hideBackdrop: a.bool,
  /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Modal.
   * @default false
   */
  keepMounted: a.bool,
  /**
   * Callback fired when the backdrop is clicked.
   * @deprecated Use the `onClose` prop with the `reason` argument to handle the `backdropClick` events.
   */
  onBackdropClick: a.func,
  /**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`.
   */
  onClose: a.func,
  /**
   * A function called when a transition enters.
   */
  onTransitionEnter: a.func,
  /**
   * A function called when a transition has exited.
   */
  onTransitionExited: a.func,
  /**
   * If `true`, the component is shown.
   */
  open: a.bool.isRequired,
  /**
   * The props used for each slot inside the Modal.
   * @default {}
   */
  slotProps: a.shape({
    backdrop: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside the Modal.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: a.shape({
    backdrop: a.elementType,
    root: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
function PY(e) {
  return mn("MuiDivider", e);
}
const KF = bn("MuiDivider", ["root", "absolute", "fullWidth", "inset", "middle", "flexItem", "light", "vertical", "withChildren", "withChildrenVertical", "textAlignRight", "textAlignLeft", "wrapper", "wrapperVertical"]), MY = (e) => {
  const {
    absolute: t,
    children: n,
    classes: i,
    flexItem: s,
    light: u,
    orientation: d,
    textAlign: p,
    variant: m
  } = e;
  return yt({
    root: ["root", t && "absolute", m, u && "light", d === "vertical" && "vertical", s && "flexItem", n && "withChildren", n && d === "vertical" && "withChildrenVertical", p === "right" && d !== "vertical" && "textAlignRight", p === "left" && d !== "vertical" && "textAlignLeft"],
    wrapper: ["wrapper", d === "vertical" && "wrapperVertical"]
  }, PY, i);
}, IY = Be("div", {
  name: "MuiDivider",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.absolute && t.absolute, t[n.variant], n.light && t.light, n.orientation === "vertical" && t.vertical, n.flexItem && t.flexItem, n.children && t.withChildren, n.children && n.orientation === "vertical" && t.withChildrenVertical, n.textAlign === "right" && n.orientation !== "vertical" && t.textAlignRight, n.textAlign === "left" && n.orientation !== "vertical" && t.textAlignLeft];
  }
})(rn(({
  theme: e
}) => ({
  margin: 0,
  // Reset browser default style.
  flexShrink: 0,
  borderWidth: 0,
  borderStyle: "solid",
  borderColor: (e.vars || e).palette.divider,
  borderBottomWidth: "thin",
  variants: [{
    props: {
      absolute: !0
    },
    style: {
      position: "absolute",
      bottom: 0,
      left: 0,
      width: "100%"
    }
  }, {
    props: {
      light: !0
    },
    style: {
      borderColor: e.vars ? `rgba(${e.vars.palette.dividerChannel} / 0.08)` : $n(e.palette.divider, 0.08)
    }
  }, {
    props: {
      variant: "inset"
    },
    style: {
      marginLeft: 72
    }
  }, {
    props: {
      variant: "middle",
      orientation: "horizontal"
    },
    style: {
      marginLeft: e.spacing(2),
      marginRight: e.spacing(2)
    }
  }, {
    props: {
      variant: "middle",
      orientation: "vertical"
    },
    style: {
      marginTop: e.spacing(1),
      marginBottom: e.spacing(1)
    }
  }, {
    props: {
      orientation: "vertical"
    },
    style: {
      height: "100%",
      borderBottomWidth: 0,
      borderRightWidth: "thin"
    }
  }, {
    props: {
      flexItem: !0
    },
    style: {
      alignSelf: "stretch",
      height: "auto"
    }
  }, {
    props: ({
      ownerState: t
    }) => !!t.children,
    style: {
      display: "flex",
      textAlign: "center",
      border: 0,
      borderTopStyle: "solid",
      borderLeftStyle: "solid",
      "&::before, &::after": {
        content: '""',
        alignSelf: "center"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.children && t.orientation !== "vertical",
    style: {
      "&::before, &::after": {
        width: "100%",
        borderTop: `thin solid ${(e.vars || e).palette.divider}`,
        borderTopStyle: "inherit"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.orientation === "vertical" && t.children,
    style: {
      flexDirection: "column",
      "&::before, &::after": {
        height: "100%",
        borderLeft: `thin solid ${(e.vars || e).palette.divider}`,
        borderLeftStyle: "inherit"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.textAlign === "right" && t.orientation !== "vertical",
    style: {
      "&::before": {
        width: "90%"
      },
      "&::after": {
        width: "10%"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.textAlign === "left" && t.orientation !== "vertical",
    style: {
      "&::before": {
        width: "10%"
      },
      "&::after": {
        width: "90%"
      }
    }
  }]
}))), DY = Be("span", {
  name: "MuiDivider",
  slot: "Wrapper",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.wrapper, n.orientation === "vertical" && t.wrapperVertical];
  }
})(rn(({
  theme: e
}) => ({
  display: "inline-block",
  paddingLeft: `calc(${e.spacing(1)} * 1.2)`,
  paddingRight: `calc(${e.spacing(1)} * 1.2)`,
  whiteSpace: "nowrap",
  variants: [{
    props: {
      orientation: "vertical"
    },
    style: {
      paddingTop: `calc(${e.spacing(1)} * 1.2)`,
      paddingBottom: `calc(${e.spacing(1)} * 1.2)`
    }
  }]
}))), A0 = /* @__PURE__ */ w.forwardRef(function(t, n) {
  const i = xn({
    props: t,
    name: "MuiDivider"
  }), {
    absolute: s = !1,
    children: u,
    className: d,
    orientation: p = "horizontal",
    component: m = u || p === "vertical" ? "div" : "hr",
    flexItem: v = !1,
    light: y = !1,
    role: C = m !== "hr" ? "separator" : void 0,
    textAlign: S = "center",
    variant: R = "fullWidth",
    ...O
  } = i, E = {
    ...i,
    absolute: s,
    component: m,
    flexItem: v,
    light: y,
    orientation: p,
    role: C,
    textAlign: S,
    variant: R
  }, k = MY(E);
  return /* @__PURE__ */ A.jsx(IY, {
    as: m,
    className: nt(k.root, d),
    role: C,
    ref: n,
    ownerState: E,
    "aria-orientation": C === "separator" && (m !== "hr" || p === "vertical") ? p : void 0,
    ...O,
    children: u ? /* @__PURE__ */ A.jsx(DY, {
      className: k.wrapper,
      ownerState: E,
      children: u
    }) : null
  });
});
A0 && (A0.muiSkipListHighlight = !0);
process.env.NODE_ENV !== "production" && (A0.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Absolutely position the element.
   * @default false
   */
  absolute: a.bool,
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * If `true`, a vertical divider will have the correct height when used in flex container.
   * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)
   * @default false
   */
  flexItem: a.bool,
  /**
   * If `true`, the divider will have a lighter color.
   * @default false
   * @deprecated Use <Divider sx={{ opacity: 0.6 }} /> (or any opacity or color) instead. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  light: a.bool,
  /**
   * The component orientation.
   * @default 'horizontal'
   */
  orientation: a.oneOf(["horizontal", "vertical"]),
  /**
   * @ignore
   */
  role: a.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The text alignment.
   * @default 'center'
   */
  textAlign: a.oneOf(["center", "left", "right"]),
  /**
   * The variant to use.
   * @default 'fullWidth'
   */
  variant: a.oneOfType([a.oneOf(["fullWidth", "inset", "middle"]), a.string])
});
const NY = (e) => {
  const {
    classes: t,
    disableUnderline: n,
    startAdornment: i,
    endAdornment: s,
    size: u,
    hiddenLabel: d,
    multiline: p
  } = e, m = {
    root: ["root", !n && "underline", i && "adornedStart", s && "adornedEnd", u === "small" && `size${Ue(u)}`, d && "hiddenLabel", p && "multiline"],
    input: ["input"]
  }, v = yt(m, gK, t);
  return {
    ...t,
    // forward classes to the InputBase
    ...v
  };
}, LY = Be(PE, {
  shouldForwardProp: (e) => Ya(e) || e === "classes",
  name: "MuiFilledInput",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [...OE(e, t), !n.disableUnderline && t.underline];
  }
})(rn(({
  theme: e
}) => {
  const t = e.palette.mode === "light", n = t ? "rgba(0, 0, 0, 0.42)" : "rgba(255, 255, 255, 0.7)", i = t ? "rgba(0, 0, 0, 0.06)" : "rgba(255, 255, 255, 0.09)", s = t ? "rgba(0, 0, 0, 0.09)" : "rgba(255, 255, 255, 0.13)", u = t ? "rgba(0, 0, 0, 0.12)" : "rgba(255, 255, 255, 0.12)";
  return {
    position: "relative",
    backgroundColor: e.vars ? e.vars.palette.FilledInput.bg : i,
    borderTopLeftRadius: (e.vars || e).shape.borderRadius,
    borderTopRightRadius: (e.vars || e).shape.borderRadius,
    transition: e.transitions.create("background-color", {
      duration: e.transitions.duration.shorter,
      easing: e.transitions.easing.easeOut
    }),
    "&:hover": {
      backgroundColor: e.vars ? e.vars.palette.FilledInput.hoverBg : s,
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: e.vars ? e.vars.palette.FilledInput.bg : i
      }
    },
    [`&.${cs.focused}`]: {
      backgroundColor: e.vars ? e.vars.palette.FilledInput.bg : i
    },
    [`&.${cs.disabled}`]: {
      backgroundColor: e.vars ? e.vars.palette.FilledInput.disabledBg : u
    },
    variants: [{
      props: ({
        ownerState: d
      }) => !d.disableUnderline,
      style: {
        "&::after": {
          left: 0,
          bottom: 0,
          content: '""',
          position: "absolute",
          right: 0,
          transform: "scaleX(0)",
          transition: e.transitions.create("transform", {
            duration: e.transitions.duration.shorter,
            easing: e.transitions.easing.easeOut
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&.${cs.focused}:after`]: {
          // translateX(0) is a workaround for Safari transform scale bug
          // See https://github.com/mui/material-ui/issues/31766
          transform: "scaleX(1) translateX(0)"
        },
        [`&.${cs.error}`]: {
          "&::before, &::after": {
            borderBottomColor: (e.vars || e).palette.error.main
          }
        },
        "&::before": {
          borderBottom: `1px solid ${e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / ${e.vars.opacity.inputUnderline})` : n}`,
          left: 0,
          bottom: 0,
          content: '"\\00a0"',
          position: "absolute",
          right: 0,
          transition: e.transitions.create("border-bottom-color", {
            duration: e.transitions.duration.shorter
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&:hover:not(.${cs.disabled}, .${cs.error}):before`]: {
          borderBottom: `1px solid ${(e.vars || e).palette.text.primary}`
        },
        [`&.${cs.disabled}:before`]: {
          borderBottomStyle: "dotted"
        }
      }
    }, ...Object.entries(e.palette).filter(to()).map(([d]) => {
      var p;
      return {
        props: {
          disableUnderline: !1,
          color: d
        },
        style: {
          "&::after": {
            borderBottom: `2px solid ${(p = (e.vars || e).palette[d]) == null ? void 0 : p.main}`
          }
        }
      };
    }), {
      props: ({
        ownerState: d
      }) => d.startAdornment,
      style: {
        paddingLeft: 12
      }
    }, {
      props: ({
        ownerState: d
      }) => d.endAdornment,
      style: {
        paddingRight: 12
      }
    }, {
      props: ({
        ownerState: d
      }) => d.multiline,
      style: {
        padding: "25px 12px 8px"
      }
    }, {
      props: ({
        ownerState: d,
        size: p
      }) => d.multiline && p === "small",
      style: {
        paddingTop: 21,
        paddingBottom: 4
      }
    }, {
      props: ({
        ownerState: d
      }) => d.multiline && d.hiddenLabel,
      style: {
        paddingTop: 16,
        paddingBottom: 17
      }
    }, {
      props: ({
        ownerState: d
      }) => d.multiline && d.hiddenLabel && d.size === "small",
      style: {
        paddingTop: 8,
        paddingBottom: 9
      }
    }]
  };
})), FY = Be(ME, {
  name: "MuiFilledInput",
  slot: "Input",
  overridesResolver: kE
})(rn(({
  theme: e
}) => ({
  paddingTop: 25,
  paddingRight: 12,
  paddingBottom: 8,
  paddingLeft: 12,
  ...!e.vars && {
    "&:-webkit-autofill": {
      WebkitBoxShadow: e.palette.mode === "light" ? null : "0 0 0 100px #266798 inset",
      WebkitTextFillColor: e.palette.mode === "light" ? null : "#fff",
      caretColor: e.palette.mode === "light" ? null : "#fff",
      borderTopLeftRadius: "inherit",
      borderTopRightRadius: "inherit"
    }
  },
  ...e.vars && {
    "&:-webkit-autofill": {
      borderTopLeftRadius: "inherit",
      borderTopRightRadius: "inherit"
    },
    [e.getColorSchemeSelector("dark")]: {
      "&:-webkit-autofill": {
        WebkitBoxShadow: "0 0 0 100px #266798 inset",
        WebkitTextFillColor: "#fff",
        caretColor: "#fff"
      }
    }
  },
  variants: [{
    props: {
      size: "small"
    },
    style: {
      paddingTop: 21,
      paddingBottom: 4
    }
  }, {
    props: ({
      ownerState: t
    }) => t.hiddenLabel,
    style: {
      paddingTop: 16,
      paddingBottom: 17
    }
  }, {
    props: ({
      ownerState: t
    }) => t.startAdornment,
    style: {
      paddingLeft: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.endAdornment,
    style: {
      paddingRight: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.hiddenLabel && t.size === "small",
    style: {
      paddingTop: 8,
      paddingBottom: 9
    }
  }, {
    props: ({
      ownerState: t
    }) => t.multiline,
    style: {
      paddingTop: 0,
      paddingBottom: 0,
      paddingLeft: 0,
      paddingRight: 0
    }
  }]
}))), IE = /* @__PURE__ */ w.forwardRef(function(t, n) {
  const i = xn({
    props: t,
    name: "MuiFilledInput"
  }), {
    disableUnderline: s = !1,
    components: u = {},
    componentsProps: d,
    fullWidth: p = !1,
    hiddenLabel: m,
    // declare here to prevent spreading to DOM
    inputComponent: v = "input",
    multiline: y = !1,
    slotProps: C,
    slots: S = {},
    type: R = "text",
    ...O
  } = i, E = {
    ...i,
    disableUnderline: s,
    fullWidth: p,
    inputComponent: v,
    multiline: y,
    type: R
  }, k = NY(i), F = {
    root: {
      ownerState: E
    },
    input: {
      ownerState: E
    }
  }, _ = C ?? d ? Ci(F, C ?? d) : F, L = S.root ?? u.Root ?? LY, M = S.input ?? u.Input ?? FY;
  return /* @__PURE__ */ A.jsx(Ch, {
    slots: {
      root: L,
      input: M
    },
    slotProps: _,
    fullWidth: p,
    inputComponent: v,
    multiline: y,
    ref: n,
    type: R,
    ...O,
    classes: k
  });
});
process.env.NODE_ENV !== "production" && (IE.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: a.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: a.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: a.oneOfType([a.oneOf(["primary", "secondary"]), a.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: a.shape({
    Input: a.elementType,
    Root: a.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: a.shape({
    input: a.object,
    root: a.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: a.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: a.bool,
  /**
   * If `true`, the input will not have an underline.
   * @default false
   */
  disableUnderline: a.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: a.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: a.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: a.bool,
  /**
   * If `true`, the label is hidden.
   * This is used to increase density for a `FilledInput`.
   * Be sure to add `aria-label` to the `input` element.
   * @default false
   */
  hiddenLabel: a.bool,
  /**
   * The id of the `input` element.
   */
  id: a.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: a.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: a.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Ea,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: a.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: a.oneOfType([a.number, a.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: a.oneOfType([a.number, a.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: a.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: a.string,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: a.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: a.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: a.bool,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: a.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: a.oneOfType([a.number, a.string]),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: a.shape({
    input: a.object,
    root: a.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: a.shape({
    input: a.elementType,
    root: a.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: a.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: a.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: a.any
});
IE.muiName = "Input";
function _Y(e) {
  return mn("MuiFormControl", e);
}
bn("MuiFormControl", ["root", "marginNone", "marginNormal", "marginDense", "fullWidth", "disabled"]);
const AY = (e) => {
  const {
    classes: t,
    margin: n,
    fullWidth: i
  } = e, s = {
    root: ["root", n !== "none" && `margin${Ue(n)}`, i && "fullWidth"]
  };
  return yt(s, _Y, t);
}, $Y = Be("div", {
  name: "MuiFormControl",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[`margin${Ue(n.margin)}`], n.fullWidth && t.fullWidth];
  }
})({
  display: "inline-flex",
  flexDirection: "column",
  position: "relative",
  // Reset fieldset default style.
  minWidth: 0,
  padding: 0,
  margin: 0,
  border: 0,
  verticalAlign: "top",
  // Fix alignment issue on Safari.
  variants: [{
    props: {
      margin: "normal"
    },
    style: {
      marginTop: 16,
      marginBottom: 8
    }
  }, {
    props: {
      margin: "dense"
    },
    style: {
      marginTop: 8,
      marginBottom: 4
    }
  }, {
    props: {
      fullWidth: !0
    },
    style: {
      width: "100%"
    }
  }]
}), zP = /* @__PURE__ */ w.forwardRef(function(t, n) {
  const i = xn({
    props: t,
    name: "MuiFormControl"
  }), {
    children: s,
    className: u,
    color: d = "primary",
    component: p = "div",
    disabled: m = !1,
    error: v = !1,
    focused: y,
    fullWidth: C = !1,
    hiddenLabel: S = !1,
    margin: R = "none",
    required: O = !1,
    size: E = "medium",
    variant: k = "outlined",
    ...F
  } = i, _ = {
    ...i,
    color: d,
    component: p,
    disabled: m,
    error: v,
    fullWidth: C,
    hiddenLabel: S,
    margin: R,
    required: O,
    size: E,
    variant: k
  }, L = AY(_), [M, D] = w.useState(() => {
    let q = !1;
    return s && w.Children.forEach(s, (Y) => {
      if (!EO(Y, ["Input", "Select"]))
        return;
      const ne = EO(Y, ["Select"]) ? Y.props.input : Y;
      ne && dK(ne.props) && (q = !0);
    }), q;
  }), [H, K] = w.useState(() => {
    let q = !1;
    return s && w.Children.forEach(s, (Y) => {
      EO(Y, ["Input", "Select"]) && (_0(Y.props, !0) || _0(Y.props.inputProps, !0)) && (q = !0);
    }), q;
  }), [Q, z] = w.useState(!1);
  m && Q && z(!1);
  const I = y !== void 0 && !m ? y : Q;
  let G;
  const W = w.useRef(!1);
  process.env.NODE_ENV !== "production" && (G = () => (W.current && console.error(["MUI: There are multiple `InputBase` components inside a FormControl.", "This creates visual inconsistencies, only use one `InputBase`."].join(`
`)), W.current = !0, () => {
    W.current = !1;
  }));
  const B = w.useCallback(() => {
    K(!0);
  }, []), ee = w.useCallback(() => {
    K(!1);
  }, []), U = w.useMemo(() => ({
    adornedStart: M,
    setAdornedStart: D,
    color: d,
    disabled: m,
    error: v,
    filled: H,
    focused: I,
    fullWidth: C,
    hiddenLabel: S,
    size: E,
    onBlur: () => {
      z(!1);
    },
    onFocus: () => {
      z(!0);
    },
    onEmpty: ee,
    onFilled: B,
    registerEffect: G,
    required: O,
    variant: k
  }), [M, d, m, v, H, I, C, S, G, ee, B, O, E, k]);
  return /* @__PURE__ */ A.jsx(FC.Provider, {
    value: U,
    children: /* @__PURE__ */ A.jsx($Y, {
      as: p,
      ownerState: _,
      className: nt(L.root, u),
      ref: n,
      ...F,
      children: s
    })
  });
});
process.env.NODE_ENV !== "production" && (zP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: a.oneOfType([a.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), a.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * If `true`, the label, input and helper text should be displayed in a disabled state.
   * @default false
   */
  disabled: a.bool,
  /**
   * If `true`, the label is displayed in an error state.
   * @default false
   */
  error: a.bool,
  /**
   * If `true`, the component is displayed in focused state.
   */
  focused: a.bool,
  /**
   * If `true`, the component will take up the full width of its container.
   * @default false
   */
  fullWidth: a.bool,
  /**
   * If `true`, the label is hidden.
   * This is used to increase density for a `FilledInput`.
   * Be sure to add `aria-label` to the `input` element.
   * @default false
   */
  hiddenLabel: a.bool,
  /**
   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.
   * @default 'none'
   */
  margin: a.oneOf(["dense", "none", "normal"]),
  /**
   * If `true`, the label will indicate that the `input` is required.
   * @default false
   */
  required: a.bool,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: a.oneOfType([a.oneOf(["medium", "small"]), a.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: a.oneOf(["filled", "outlined", "standard"])
});
function jY(e) {
  return mn("MuiFormControlLabel", e);
}
const Hb = bn("MuiFormControlLabel", ["root", "labelPlacementStart", "labelPlacementTop", "labelPlacementBottom", "disabled", "label", "error", "required", "asterisk"]), zY = (e) => {
  const {
    classes: t,
    disabled: n,
    labelPlacement: i,
    error: s,
    required: u
  } = e, d = {
    root: ["root", n && "disabled", `labelPlacement${Ue(i)}`, s && "error", u && "required"],
    label: ["label", n && "disabled"],
    asterisk: ["asterisk", s && "error"]
  };
  return yt(d, jY, t);
}, HY = Be("label", {
  name: "MuiFormControlLabel",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [{
      [`& .${Hb.label}`]: t.label
    }, t.root, t[`labelPlacement${Ue(n.labelPlacement)}`]];
  }
})(rn(({
  theme: e
}) => ({
  display: "inline-flex",
  alignItems: "center",
  cursor: "pointer",
  // For correct alignment with the text.
  verticalAlign: "middle",
  WebkitTapHighlightColor: "transparent",
  marginLeft: -11,
  marginRight: 16,
  // used for row presentation of radio/checkbox
  [`&.${Hb.disabled}`]: {
    cursor: "default"
  },
  [`& .${Hb.label}`]: {
    [`&.${Hb.disabled}`]: {
      color: (e.vars || e).palette.text.disabled
    }
  },
  variants: [{
    props: {
      labelPlacement: "start"
    },
    style: {
      flexDirection: "row-reverse",
      marginRight: -11
    }
  }, {
    props: {
      labelPlacement: "top"
    },
    style: {
      flexDirection: "column-reverse"
    }
  }, {
    props: {
      labelPlacement: "bottom"
    },
    style: {
      flexDirection: "column"
    }
  }, {
    props: ({
      labelPlacement: t
    }) => t === "start" || t === "top" || t === "bottom",
    style: {
      marginLeft: 16
      // used for row presentation of radio/checkbox
    }
  }]
}))), VY = Be("span", {
  name: "MuiFormControlLabel",
  slot: "Asterisk",
  overridesResolver: (e, t) => t.asterisk
})(rn(({
  theme: e
}) => ({
  [`&.${Hb.error}`]: {
    color: (e.vars || e).palette.error.main
  }
}))), kk = /* @__PURE__ */ w.forwardRef(function(t, n) {
  const i = xn({
    props: t,
    name: "MuiFormControlLabel"
  }), {
    checked: s,
    className: u,
    componentsProps: d = {},
    control: p,
    disabled: m,
    disableTypography: v,
    inputRef: y,
    label: C,
    labelPlacement: S = "end",
    name: R,
    onChange: O,
    required: E,
    slots: k = {},
    slotProps: F = {},
    value: _,
    ...L
  } = i, M = Qc(), D = m ?? p.props.disabled ?? (M == null ? void 0 : M.disabled), H = E ?? p.props.required, K = {
    disabled: D,
    required: H
  };
  ["checked", "name", "onChange", "value", "inputRef"].forEach((U) => {
    typeof p.props[U] > "u" && typeof i[U] < "u" && (K[U] = i[U]);
  });
  const Q = bh({
    props: i,
    muiFormControl: M,
    states: ["error"]
  }), z = {
    ...i,
    disabled: D,
    labelPlacement: S,
    required: H,
    error: Q.error
  }, I = zY(z), G = {
    slots: k,
    slotProps: {
      ...d,
      ...F
    }
  }, [W, B] = yn("typography", {
    elementType: li,
    externalForwardedProps: G,
    ownerState: z
  });
  let ee = C;
  return ee != null && ee.type !== li && !v && (ee = /* @__PURE__ */ A.jsx(W, {
    component: "span",
    ...B,
    className: nt(I.label, B == null ? void 0 : B.className),
    children: ee
  })), /* @__PURE__ */ A.jsxs(HY, {
    className: nt(I.root, u),
    ownerState: z,
    ref: n,
    ...L,
    children: [/* @__PURE__ */ w.cloneElement(p, K), H ? /* @__PURE__ */ A.jsxs("div", {
      children: [ee, /* @__PURE__ */ A.jsxs(VY, {
        ownerState: z,
        "aria-hidden": !0,
        className: I.asterisk,
        children: [" ", "*"]
      })]
    }) : ee]
  });
});
process.env.NODE_ENV !== "production" && (kk.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the component appears selected.
   */
  checked: a.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The props used for each slot inside.
   * @default {}
   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  componentsProps: a.shape({
    typography: a.object
  }),
  /**
   * A control element. For instance, it can be a `Radio`, a `Switch` or a `Checkbox`.
   */
  control: a.element.isRequired,
  /**
   * If `true`, the control is disabled.
   */
  disabled: a.bool,
  /**
   * If `true`, the label is rendered as it is passed without an additional typography node.
   */
  disableTypography: a.bool,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Ea,
  /**
   * A text or an element to be used in an enclosing label element.
   */
  label: a.node,
  /**
   * The position of the label.
   * @default 'end'
   */
  labelPlacement: a.oneOf(["bottom", "end", "start", "top"]),
  /**
   * @ignore
   */
  name: a.string,
  /**
   * Callback fired when the state is changed.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: a.func,
  /**
   * If `true`, the label will indicate that the `input` is required.
   */
  required: a.bool,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    typography: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    typography: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The value of the component.
   */
  value: a.any
});
function BY(e) {
  return mn("MuiFormHelperText", e);
}
const YF = bn("MuiFormHelperText", ["root", "error", "disabled", "sizeSmall", "sizeMedium", "contained", "focused", "filled", "required"]);
var XF;
const UY = (e) => {
  const {
    classes: t,
    contained: n,
    size: i,
    disabled: s,
    error: u,
    filled: d,
    focused: p,
    required: m
  } = e, v = {
    root: ["root", s && "disabled", u && "error", i && `size${Ue(i)}`, n && "contained", p && "focused", d && "filled", m && "required"]
  };
  return yt(v, BY, t);
}, GY = Be("p", {
  name: "MuiFormHelperText",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.size && t[`size${Ue(n.size)}`], n.contained && t.contained, n.filled && t.filled];
  }
})(rn(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  ...e.typography.caption,
  textAlign: "left",
  marginTop: 3,
  marginRight: 0,
  marginBottom: 0,
  marginLeft: 0,
  [`&.${YF.disabled}`]: {
    color: (e.vars || e).palette.text.disabled
  },
  [`&.${YF.error}`]: {
    color: (e.vars || e).palette.error.main
  },
  variants: [{
    props: {
      size: "small"
    },
    style: {
      marginTop: 4
    }
  }, {
    props: ({
      ownerState: t
    }) => t.contained,
    style: {
      marginLeft: 14,
      marginRight: 14
    }
  }]
}))), Gj = /* @__PURE__ */ w.forwardRef(function(t, n) {
  const i = xn({
    props: t,
    name: "MuiFormHelperText"
  }), {
    children: s,
    className: u,
    component: d = "p",
    disabled: p,
    error: m,
    filled: v,
    focused: y,
    margin: C,
    required: S,
    variant: R,
    ...O
  } = i, E = Qc(), k = bh({
    props: i,
    muiFormControl: E,
    states: ["variant", "size", "disabled", "error", "filled", "focused", "required"]
  }), F = {
    ...i,
    component: d,
    contained: k.variant === "filled" || k.variant === "outlined",
    variant: k.variant,
    size: k.size,
    disabled: k.disabled,
    error: k.error,
    filled: k.filled,
    focused: k.focused,
    required: k.required
  };
  delete F.ownerState;
  const _ = UY(F);
  return /* @__PURE__ */ A.jsx(GY, {
    as: d,
    className: nt(_.root, u),
    ref: n,
    ...O,
    ownerState: F,
    children: s === " " ? (
      // notranslate needed while Google Translate will not fix zero-width space issue
      XF || (XF = /* @__PURE__ */ A.jsx("span", {
        className: "notranslate",
        "aria-hidden": !0,
        children: "​"
      }))
    ) : s
  });
});
process.env.NODE_ENV !== "production" && (Gj.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   *
   * If `' '` is provided, the component reserves one line height for displaying a future message.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * If `true`, the helper text should be displayed in a disabled state.
   */
  disabled: a.bool,
  /**
   * If `true`, helper text should be displayed in an error state.
   */
  error: a.bool,
  /**
   * If `true`, the helper text should use filled classes key.
   */
  filled: a.bool,
  /**
   * If `true`, the helper text should use focused classes key.
   */
  focused: a.bool,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   */
  margin: a.oneOf(["dense"]),
  /**
   * If `true`, the helper text should use required classes key.
   */
  required: a.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The variant to use.
   */
  variant: a.oneOfType([a.oneOf(["filled", "outlined", "standard"]), a.string])
});
function WY(e) {
  return mn("MuiFormLabel", e);
}
const Xb = bn("MuiFormLabel", ["root", "colorSecondary", "focused", "disabled", "error", "filled", "required", "asterisk"]), qY = (e) => {
  const {
    classes: t,
    color: n,
    focused: i,
    disabled: s,
    error: u,
    filled: d,
    required: p
  } = e, m = {
    root: ["root", `color${Ue(n)}`, s && "disabled", u && "error", d && "filled", i && "focused", p && "required"],
    asterisk: ["asterisk", u && "error"]
  };
  return yt(m, WY, t);
}, KY = Be("label", {
  name: "MuiFormLabel",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.color === "secondary" && t.colorSecondary, n.filled && t.filled];
  }
})(rn(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  ...e.typography.body1,
  lineHeight: "1.4375em",
  padding: 0,
  position: "relative",
  variants: [...Object.entries(e.palette).filter(to()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      [`&.${Xb.focused}`]: {
        color: (e.vars || e).palette[t].main
      }
    }
  })), {
    props: {},
    style: {
      [`&.${Xb.disabled}`]: {
        color: (e.vars || e).palette.text.disabled
      },
      [`&.${Xb.error}`]: {
        color: (e.vars || e).palette.error.main
      }
    }
  }]
}))), YY = Be("span", {
  name: "MuiFormLabel",
  slot: "Asterisk",
  overridesResolver: (e, t) => t.asterisk
})(rn(({
  theme: e
}) => ({
  [`&.${Xb.error}`]: {
    color: (e.vars || e).palette.error.main
  }
}))), Wj = /* @__PURE__ */ w.forwardRef(function(t, n) {
  const i = xn({
    props: t,
    name: "MuiFormLabel"
  }), {
    children: s,
    className: u,
    color: d,
    component: p = "label",
    disabled: m,
    error: v,
    filled: y,
    focused: C,
    required: S,
    ...R
  } = i, O = Qc(), E = bh({
    props: i,
    muiFormControl: O,
    states: ["color", "required", "focused", "disabled", "error", "filled"]
  }), k = {
    ...i,
    color: E.color || "primary",
    component: p,
    disabled: E.disabled,
    error: E.error,
    filled: E.filled,
    focused: E.focused,
    required: E.required
  }, F = qY(k);
  return /* @__PURE__ */ A.jsxs(KY, {
    as: p,
    ownerState: k,
    className: nt(F.root, u),
    ref: n,
    ...R,
    children: [s, E.required && /* @__PURE__ */ A.jsxs(YY, {
      ownerState: k,
      "aria-hidden": !0,
      className: F.asterisk,
      children: [" ", "*"]
    })]
  });
});
process.env.NODE_ENV !== "production" && (Wj.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   */
  color: a.oneOfType([a.oneOf(["error", "info", "primary", "secondary", "success", "warning"]), a.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * If `true`, the label should be displayed in a disabled state.
   */
  disabled: a.bool,
  /**
   * If `true`, the label is displayed in an error state.
   */
  error: a.bool,
  /**
   * If `true`, the label should use filled classes key.
   */
  filled: a.bool,
  /**
   * If `true`, the input of this label is focused (used by `FormGroup` components).
   */
  focused: a.bool,
  /**
   * If `true`, the label will indicate that the `input` is required.
   */
  required: a.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
function Pk(e) {
  return `scale(${e}, ${e ** 2})`;
}
const XY = {
  entering: {
    opacity: 1,
    transform: Pk(1)
  },
  entered: {
    opacity: 1,
    transform: "none"
  }
}, DO = typeof navigator < "u" && /^((?!chrome|android).)*(safari|mobile)/i.test(navigator.userAgent) && /(os |version\/)15(.|_)4/i.test(navigator.userAgent), Yg = /* @__PURE__ */ w.forwardRef(function(t, n) {
  const {
    addEndListener: i,
    appear: s = !0,
    children: u,
    easing: d,
    in: p,
    onEnter: m,
    onEntered: v,
    onEntering: y,
    onExit: C,
    onExited: S,
    onExiting: R,
    style: O,
    timeout: E = "auto",
    // eslint-disable-next-line react/prop-types
    TransitionComponent: k = Qu,
    ...F
  } = t, _ = ps(), L = w.useRef(), M = rv(), D = w.useRef(null), H = Vr(D, yh(u), n), K = (U) => (q) => {
    if (U) {
      const Y = D.current;
      q === void 0 ? U(Y) : U(Y, q);
    }
  }, Q = K(y), z = K((U, q) => {
    mj(U);
    const {
      duration: Y,
      delay: ne,
      easing: re
    } = I0({
      style: O,
      timeout: E,
      easing: d
    }, {
      mode: "enter"
    });
    let X;
    E === "auto" ? (X = M.transitions.getAutoHeightDuration(U.clientHeight), L.current = X) : X = Y, U.style.transition = [M.transitions.create("opacity", {
      duration: X,
      delay: ne
    }), M.transitions.create("transform", {
      duration: DO ? X : X * 0.666,
      delay: ne,
      easing: re
    })].join(","), m && m(U, q);
  }), I = K(v), G = K(R), W = K((U) => {
    const {
      duration: q,
      delay: Y,
      easing: ne
    } = I0({
      style: O,
      timeout: E,
      easing: d
    }, {
      mode: "exit"
    });
    let re;
    E === "auto" ? (re = M.transitions.getAutoHeightDuration(U.clientHeight), L.current = re) : re = q, U.style.transition = [M.transitions.create("opacity", {
      duration: re,
      delay: Y
    }), M.transitions.create("transform", {
      duration: DO ? re : re * 0.666,
      delay: DO ? Y : Y || re * 0.333,
      easing: ne
    })].join(","), U.style.opacity = 0, U.style.transform = Pk(0.75), C && C(U);
  }), B = K(S), ee = (U) => {
    E === "auto" && _.start(L.current || 0, U), i && i(D.current, U);
  };
  return /* @__PURE__ */ A.jsx(k, {
    appear: s,
    in: p,
    nodeRef: D,
    onEnter: z,
    onEntered: I,
    onEntering: Q,
    onExit: W,
    onExited: B,
    onExiting: G,
    addEndListener: ee,
    timeout: E === "auto" ? null : E,
    ...F,
    children: (U, {
      ownerState: q,
      ...Y
    }) => /* @__PURE__ */ w.cloneElement(u, {
      style: {
        opacity: 0,
        transform: Pk(0.75),
        visibility: U === "exited" && !p ? "hidden" : void 0,
        ...XY[U],
        ...O,
        ...u.props.style
      },
      ref: H,
      ...Y
    })
  });
});
process.env.NODE_ENV !== "production" && (Yg.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: a.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: a.bool,
  /**
   * A single child content element.
   */
  children: vh.isRequired,
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   */
  easing: a.oneOfType([a.shape({
    enter: a.string,
    exit: a.string
  }), a.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: a.bool,
  /**
   * @ignore
   */
  onEnter: a.func,
  /**
   * @ignore
   */
  onEntered: a.func,
  /**
   * @ignore
   */
  onEntering: a.func,
  /**
   * @ignore
   */
  onExit: a.func,
  /**
   * @ignore
   */
  onExited: a.func,
  /**
   * @ignore
   */
  onExiting: a.func,
  /**
   * @ignore
   */
  style: a.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   *
   * Set to 'auto' to automatically calculate transition time based on height.
   * @default 'auto'
   */
  timeout: a.oneOfType([a.oneOf(["auto"]), a.number, a.shape({
    appear: a.number,
    enter: a.number,
    exit: a.number
  })])
});
Yg && (Yg.muiSupportAuto = !0);
const QY = (e) => {
  const {
    classes: t,
    disableUnderline: n
  } = e, s = yt({
    root: ["root", !n && "underline"],
    input: ["input"]
  }, hK, t);
  return {
    ...t,
    // forward classes to the InputBase
    ...s
  };
}, JY = Be(PE, {
  shouldForwardProp: (e) => Ya(e) || e === "classes",
  name: "MuiInput",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [...OE(e, t), !n.disableUnderline && t.underline];
  }
})(rn(({
  theme: e
}) => {
  let n = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.42)" : "rgba(255, 255, 255, 0.7)";
  return e.vars && (n = `rgba(${e.vars.palette.common.onBackgroundChannel} / ${e.vars.opacity.inputUnderline})`), {
    position: "relative",
    variants: [{
      props: ({
        ownerState: i
      }) => i.formControl,
      style: {
        "label + &": {
          marginTop: 16
        }
      }
    }, {
      props: ({
        ownerState: i
      }) => !i.disableUnderline,
      style: {
        "&::after": {
          left: 0,
          bottom: 0,
          content: '""',
          position: "absolute",
          right: 0,
          transform: "scaleX(0)",
          transition: e.transitions.create("transform", {
            duration: e.transitions.duration.shorter,
            easing: e.transitions.easing.easeOut
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&.${of.focused}:after`]: {
          // translateX(0) is a workaround for Safari transform scale bug
          // See https://github.com/mui/material-ui/issues/31766
          transform: "scaleX(1) translateX(0)"
        },
        [`&.${of.error}`]: {
          "&::before, &::after": {
            borderBottomColor: (e.vars || e).palette.error.main
          }
        },
        "&::before": {
          borderBottom: `1px solid ${n}`,
          left: 0,
          bottom: 0,
          content: '"\\00a0"',
          position: "absolute",
          right: 0,
          transition: e.transitions.create("border-bottom-color", {
            duration: e.transitions.duration.shorter
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&:hover:not(.${of.disabled}, .${of.error}):before`]: {
          borderBottom: `2px solid ${(e.vars || e).palette.text.primary}`,
          // Reset on touch devices, it doesn't add specificity
          "@media (hover: none)": {
            borderBottom: `1px solid ${n}`
          }
        },
        [`&.${of.disabled}:before`]: {
          borderBottomStyle: "dotted"
        }
      }
    }, ...Object.entries(e.palette).filter(to()).map(([i]) => ({
      props: {
        color: i,
        disableUnderline: !1
      },
      style: {
        "&::after": {
          borderBottom: `2px solid ${(e.vars || e).palette[i].main}`
        }
      }
    }))]
  };
})), ZY = Be(ME, {
  name: "MuiInput",
  slot: "Input",
  overridesResolver: kE
})({}), DE = /* @__PURE__ */ w.forwardRef(function(t, n) {
  const i = xn({
    props: t,
    name: "MuiInput"
  }), {
    disableUnderline: s = !1,
    components: u = {},
    componentsProps: d,
    fullWidth: p = !1,
    inputComponent: m = "input",
    multiline: v = !1,
    slotProps: y,
    slots: C = {},
    type: S = "text",
    ...R
  } = i, O = QY(i), k = {
    root: {
      ownerState: {
        disableUnderline: s
      }
    }
  }, F = y ?? d ? Ci(y ?? d, k) : k, _ = C.root ?? u.Root ?? JY, L = C.input ?? u.Input ?? ZY;
  return /* @__PURE__ */ A.jsx(Ch, {
    slots: {
      root: _,
      input: L
    },
    slotProps: F,
    fullWidth: p,
    inputComponent: m,
    multiline: v,
    ref: n,
    type: S,
    ...R,
    classes: O
  });
});
process.env.NODE_ENV !== "production" && (DE.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: a.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: a.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: a.oneOfType([a.oneOf(["primary", "secondary"]), a.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: a.shape({
    Input: a.elementType,
    Root: a.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: a.shape({
    input: a.object,
    root: a.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: a.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: a.bool,
  /**
   * If `true`, the `input` will not have an underline.
   * @default false
   */
  disableUnderline: a.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: a.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: a.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: a.bool,
  /**
   * The id of the `input` element.
   */
  id: a.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: a.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: a.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Ea,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: a.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: a.oneOfType([a.number, a.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: a.oneOfType([a.number, a.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: a.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: a.string,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: a.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: a.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: a.bool,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: a.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: a.oneOfType([a.number, a.string]),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: a.shape({
    input: a.object,
    root: a.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: a.shape({
    input: a.elementType,
    root: a.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: a.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: a.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: a.any
});
DE.muiName = "Input";
function eX(e) {
  return mn("MuiInputAdornment", e);
}
const QF = bn("MuiInputAdornment", ["root", "filled", "standard", "outlined", "positionStart", "positionEnd", "disablePointerEvents", "hiddenLabel", "sizeSmall"]);
var JF;
const tX = (e, t) => {
  const {
    ownerState: n
  } = e;
  return [t.root, t[`position${Ue(n.position)}`], n.disablePointerEvents === !0 && t.disablePointerEvents, t[n.variant]];
}, nX = (e) => {
  const {
    classes: t,
    disablePointerEvents: n,
    hiddenLabel: i,
    position: s,
    size: u,
    variant: d
  } = e, p = {
    root: ["root", n && "disablePointerEvents", s && `position${Ue(s)}`, d, i && "hiddenLabel", u && `size${Ue(u)}`]
  };
  return yt(p, eX, t);
}, rX = Be("div", {
  name: "MuiInputAdornment",
  slot: "Root",
  overridesResolver: tX
})(rn(({
  theme: e
}) => ({
  display: "flex",
  maxHeight: "2em",
  alignItems: "center",
  whiteSpace: "nowrap",
  color: (e.vars || e).palette.action.active,
  variants: [{
    props: {
      variant: "filled"
    },
    style: {
      [`&.${QF.positionStart}&:not(.${QF.hiddenLabel})`]: {
        marginTop: 16
      }
    }
  }, {
    props: {
      position: "start"
    },
    style: {
      marginRight: 8
    }
  }, {
    props: {
      position: "end"
    },
    style: {
      marginLeft: 8
    }
  }, {
    props: {
      disablePointerEvents: !0
    },
    style: {
      pointerEvents: "none"
    }
  }]
}))), qj = /* @__PURE__ */ w.forwardRef(function(t, n) {
  const i = xn({
    props: t,
    name: "MuiInputAdornment"
  }), {
    children: s,
    className: u,
    component: d = "div",
    disablePointerEvents: p = !1,
    disableTypography: m = !1,
    position: v,
    variant: y,
    ...C
  } = i, S = Qc() || {};
  let R = y;
  y && S.variant && process.env.NODE_ENV !== "production" && y === S.variant && console.error("MUI: The `InputAdornment` variant infers the variant prop you do not have to provide one."), S && !R && (R = S.variant);
  const O = {
    ...i,
    hiddenLabel: S.hiddenLabel,
    size: S.size,
    disablePointerEvents: p,
    position: v,
    variant: R
  }, E = nX(O);
  return /* @__PURE__ */ A.jsx(FC.Provider, {
    value: null,
    children: /* @__PURE__ */ A.jsx(rX, {
      as: d,
      ownerState: O,
      className: nt(E.root, u),
      ref: n,
      ...C,
      children: typeof s == "string" && !m ? /* @__PURE__ */ A.jsx(li, {
        color: "textSecondary",
        children: s
      }) : /* @__PURE__ */ A.jsxs(w.Fragment, {
        children: [v === "start" ? (
          /* notranslate needed while Google Translate will not fix zero-width space issue */
          JF || (JF = /* @__PURE__ */ A.jsx("span", {
            className: "notranslate",
            "aria-hidden": !0,
            children: "​"
          }))
        ) : null, s]
      })
    })
  });
});
process.env.NODE_ENV !== "production" && (qj.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component, normally an `IconButton` or string.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * Disable pointer events on the root.
   * This allows for the content of the adornment to focus the `input` on click.
   * @default false
   */
  disablePointerEvents: a.bool,
  /**
   * If children is a string then disable wrapping in a Typography component.
   * @default false
   */
  disableTypography: a.bool,
  /**
   * The position this adornment should appear relative to the `Input`.
   */
  position: a.oneOf(["end", "start"]).isRequired,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The variant to use.
   * Note: If you are using the `TextField` component or the `FormControl` component
   * you do not have to set this manually.
   */
  variant: a.oneOf(["filled", "outlined", "standard"])
});
function oX(e) {
  return mn("MuiInputLabel", e);
}
bn("MuiInputLabel", ["root", "focused", "disabled", "error", "required", "asterisk", "formControl", "sizeSmall", "shrink", "animated", "standard", "filled", "outlined"]);
const iX = (e) => {
  const {
    classes: t,
    formControl: n,
    size: i,
    shrink: s,
    disableAnimation: u,
    variant: d,
    required: p
  } = e, m = {
    root: ["root", n && "formControl", !u && "animated", s && "shrink", i && i !== "normal" && `size${Ue(i)}`, d],
    asterisk: [p && "asterisk"]
  }, v = yt(m, oX, t);
  return {
    ...t,
    // forward the focused, disabled, etc. classes to the FormLabel
    ...v
  };
}, aX = Be(Wj, {
  shouldForwardProp: (e) => Ya(e) || e === "classes",
  name: "MuiInputLabel",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [{
      [`& .${Xb.asterisk}`]: t.asterisk
    }, t.root, n.formControl && t.formControl, n.size === "small" && t.sizeSmall, n.shrink && t.shrink, !n.disableAnimation && t.animated, n.focused && t.focused, t[n.variant]];
  }
})(rn(({
  theme: e
}) => ({
  display: "block",
  transformOrigin: "top left",
  whiteSpace: "nowrap",
  overflow: "hidden",
  textOverflow: "ellipsis",
  maxWidth: "100%",
  variants: [{
    props: ({
      ownerState: t
    }) => t.formControl,
    style: {
      position: "absolute",
      left: 0,
      top: 0,
      // slight alteration to spec spacing to match visual spec result
      transform: "translate(0, 20px) scale(1)"
    }
  }, {
    props: {
      size: "small"
    },
    style: {
      // Compensation for the `Input.inputSizeSmall` style.
      transform: "translate(0, 17px) scale(1)"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.shrink,
    style: {
      transform: "translate(0, -1.5px) scale(0.75)",
      transformOrigin: "top left",
      maxWidth: "133%"
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.disableAnimation,
    style: {
      transition: e.transitions.create(["color", "transform", "max-width"], {
        duration: e.transitions.duration.shorter,
        easing: e.transitions.easing.easeOut
      })
    }
  }, {
    props: {
      variant: "filled"
    },
    style: {
      // Chrome's autofill feature gives the input field a yellow background.
      // Since the input field is behind the label in the HTML tree,
      // the input field is drawn last and hides the label with an opaque background color.
      // zIndex: 1 will raise the label above opaque background-colors of input.
      zIndex: 1,
      pointerEvents: "none",
      transform: "translate(12px, 16px) scale(1)",
      maxWidth: "calc(100% - 24px)"
    }
  }, {
    props: {
      variant: "filled",
      size: "small"
    },
    style: {
      transform: "translate(12px, 13px) scale(1)"
    }
  }, {
    props: ({
      variant: t,
      ownerState: n
    }) => t === "filled" && n.shrink,
    style: {
      userSelect: "none",
      pointerEvents: "auto",
      transform: "translate(12px, 7px) scale(0.75)",
      maxWidth: "calc(133% - 24px)"
    }
  }, {
    props: ({
      variant: t,
      ownerState: n,
      size: i
    }) => t === "filled" && n.shrink && i === "small",
    style: {
      transform: "translate(12px, 4px) scale(0.75)"
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      // see comment above on filled.zIndex
      zIndex: 1,
      pointerEvents: "none",
      transform: "translate(14px, 16px) scale(1)",
      maxWidth: "calc(100% - 24px)"
    }
  }, {
    props: {
      variant: "outlined",
      size: "small"
    },
    style: {
      transform: "translate(14px, 9px) scale(1)"
    }
  }, {
    props: ({
      variant: t,
      ownerState: n
    }) => t === "outlined" && n.shrink,
    style: {
      userSelect: "none",
      pointerEvents: "auto",
      // Theoretically, we should have (8+5)*2/0.75 = 34px
      // but it feels a better when it bleeds a bit on the left, so 32px.
      maxWidth: "calc(133% - 32px)",
      transform: "translate(14px, -9px) scale(0.75)"
    }
  }]
}))), HP = /* @__PURE__ */ w.forwardRef(function(t, n) {
  const i = xn({
    name: "MuiInputLabel",
    props: t
  }), {
    disableAnimation: s = !1,
    margin: u,
    shrink: d,
    variant: p,
    className: m,
    ...v
  } = i, y = Qc();
  let C = d;
  typeof C > "u" && y && (C = y.filled || y.focused || y.adornedStart);
  const S = bh({
    props: i,
    muiFormControl: y,
    states: ["size", "variant", "required", "focused"]
  }), R = {
    ...i,
    disableAnimation: s,
    formControl: y,
    shrink: C,
    size: S.size,
    variant: S.variant,
    required: S.required,
    focused: S.focused
  }, O = iX(R);
  return /* @__PURE__ */ A.jsx(aX, {
    "data-shrink": C,
    ref: n,
    className: nt(O.root, m),
    ...v,
    ownerState: R,
    classes: O
  });
});
process.env.NODE_ENV !== "production" && (HP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   */
  color: a.oneOfType([a.oneOf(["error", "info", "primary", "secondary", "success", "warning"]), a.string]),
  /**
   * If `true`, the transition animation is disabled.
   * @default false
   */
  disableAnimation: a.bool,
  /**
   * If `true`, the component is disabled.
   */
  disabled: a.bool,
  /**
   * If `true`, the label is displayed in an error state.
   */
  error: a.bool,
  /**
   * If `true`, the `input` of this label is focused.
   */
  focused: a.bool,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   */
  margin: a.oneOf(["dense"]),
  /**
   * if `true`, the label will indicate that the `input` is required.
   */
  required: a.bool,
  /**
   * If `true`, the label is shrunk.
   */
  shrink: a.bool,
  /**
   * The size of the component.
   * @default 'normal'
   */
  size: a.oneOfType([a.oneOf(["normal", "small"]), a.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The variant to use.
   */
  variant: a.oneOf(["filled", "outlined", "standard"])
});
function sX(e) {
  return mn("MuiLinearProgress", e);
}
bn("MuiLinearProgress", ["root", "colorPrimary", "colorSecondary", "determinate", "indeterminate", "buffer", "query", "dashed", "dashedColorPrimary", "dashedColorSecondary", "bar", "bar1", "bar2", "barColorPrimary", "barColorSecondary", "bar1Indeterminate", "bar1Determinate", "bar1Buffer", "bar2Indeterminate", "bar2Buffer"]);
const Mk = 4, Ik = Xu`
  0% {
    left: -35%;
    right: 100%;
  }

  60% {
    left: 100%;
    right: -90%;
  }

  100% {
    left: 100%;
    right: -90%;
  }
`, lX = typeof Ik != "string" ? xf`
        animation: ${Ik} 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite;
      ` : null, Dk = Xu`
  0% {
    left: -200%;
    right: 100%;
  }

  60% {
    left: 107%;
    right: -8%;
  }

  100% {
    left: 107%;
    right: -8%;
  }
`, uX = typeof Dk != "string" ? xf`
        animation: ${Dk} 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite;
      ` : null, Nk = Xu`
  0% {
    opacity: 1;
    background-position: 0 -23px;
  }

  60% {
    opacity: 0;
    background-position: 0 -23px;
  }

  100% {
    opacity: 1;
    background-position: -200px -23px;
  }
`, cX = typeof Nk != "string" ? xf`
        animation: ${Nk} 3s infinite linear;
      ` : null, dX = (e) => {
  const {
    classes: t,
    variant: n,
    color: i
  } = e, s = {
    root: ["root", `color${Ue(i)}`, n],
    dashed: ["dashed", `dashedColor${Ue(i)}`],
    bar1: ["bar", "bar1", `barColor${Ue(i)}`, (n === "indeterminate" || n === "query") && "bar1Indeterminate", n === "determinate" && "bar1Determinate", n === "buffer" && "bar1Buffer"],
    bar2: ["bar", "bar2", n !== "buffer" && `barColor${Ue(i)}`, n === "buffer" && `color${Ue(i)}`, (n === "indeterminate" || n === "query") && "bar2Indeterminate", n === "buffer" && "bar2Buffer"]
  };
  return yt(s, sX, t);
}, VP = (e, t) => e.vars ? e.vars.palette.LinearProgress[`${t}Bg`] : e.palette.mode === "light" ? Cf(e.palette[t].main, 0.62) : bf(e.palette[t].main, 0.5), fX = Be("span", {
  name: "MuiLinearProgress",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[`color${Ue(n.color)}`], t[n.variant]];
  }
})(rn(({
  theme: e
}) => ({
  position: "relative",
  overflow: "hidden",
  display: "block",
  height: 4,
  // Fix Safari's bug during composition of different paint.
  zIndex: 0,
  "@media print": {
    colorAdjust: "exact"
  },
  variants: [...Object.entries(e.palette).filter(to()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      backgroundColor: VP(e, t)
    }
  })), {
    props: ({
      ownerState: t
    }) => t.color === "inherit" && t.variant !== "buffer",
    style: {
      "&::before": {
        content: '""',
        position: "absolute",
        left: 0,
        top: 0,
        right: 0,
        bottom: 0,
        backgroundColor: "currentColor",
        opacity: 0.3
      }
    }
  }, {
    props: {
      variant: "buffer"
    },
    style: {
      backgroundColor: "transparent"
    }
  }, {
    props: {
      variant: "query"
    },
    style: {
      transform: "rotate(180deg)"
    }
  }]
}))), pX = Be("span", {
  name: "MuiLinearProgress",
  slot: "Dashed",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.dashed, t[`dashedColor${Ue(n.color)}`]];
  }
})(rn(({
  theme: e
}) => ({
  position: "absolute",
  marginTop: 0,
  height: "100%",
  width: "100%",
  backgroundSize: "10px 10px",
  backgroundPosition: "0 -23px",
  variants: [{
    props: {
      color: "inherit"
    },
    style: {
      opacity: 0.3,
      backgroundImage: "radial-gradient(currentColor 0%, currentColor 16%, transparent 42%)"
    }
  }, ...Object.entries(e.palette).filter(to()).map(([t]) => {
    const n = VP(e, t);
    return {
      props: {
        color: t
      },
      style: {
        backgroundImage: `radial-gradient(${n} 0%, ${n} 16%, transparent 42%)`
      }
    };
  })]
})), cX || {
  // At runtime for Pigment CSS, `bufferAnimation` will be null and the generated keyframe will be used.
  animation: `${Nk} 3s infinite linear`
}), hX = Be("span", {
  name: "MuiLinearProgress",
  slot: "Bar1",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.bar, t.bar1, t[`barColor${Ue(n.color)}`], (n.variant === "indeterminate" || n.variant === "query") && t.bar1Indeterminate, n.variant === "determinate" && t.bar1Determinate, n.variant === "buffer" && t.bar1Buffer];
  }
})(rn(({
  theme: e
}) => ({
  width: "100%",
  position: "absolute",
  left: 0,
  bottom: 0,
  top: 0,
  transition: "transform 0.2s linear",
  transformOrigin: "left",
  variants: [{
    props: {
      color: "inherit"
    },
    style: {
      backgroundColor: "currentColor"
    }
  }, ...Object.entries(e.palette).filter(to()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      backgroundColor: (e.vars || e).palette[t].main
    }
  })), {
    props: {
      variant: "determinate"
    },
    style: {
      transition: `transform .${Mk}s linear`
    }
  }, {
    props: {
      variant: "buffer"
    },
    style: {
      zIndex: 1,
      transition: `transform .${Mk}s linear`
    }
  }, {
    props: ({
      ownerState: t
    }) => t.variant === "indeterminate" || t.variant === "query",
    style: {
      width: "auto"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.variant === "indeterminate" || t.variant === "query",
    style: lX || {
      animation: `${Ik} 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite`
    }
  }]
}))), mX = Be("span", {
  name: "MuiLinearProgress",
  slot: "Bar2",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.bar, t.bar2, t[`barColor${Ue(n.color)}`], (n.variant === "indeterminate" || n.variant === "query") && t.bar2Indeterminate, n.variant === "buffer" && t.bar2Buffer];
  }
})(rn(({
  theme: e
}) => ({
  width: "100%",
  position: "absolute",
  left: 0,
  bottom: 0,
  top: 0,
  transition: "transform 0.2s linear",
  transformOrigin: "left",
  variants: [...Object.entries(e.palette).filter(to()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      "--LinearProgressBar2-barColor": (e.vars || e).palette[t].main
    }
  })), {
    props: ({
      ownerState: t
    }) => t.variant !== "buffer" && t.color !== "inherit",
    style: {
      backgroundColor: "var(--LinearProgressBar2-barColor, currentColor)"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.variant !== "buffer" && t.color === "inherit",
    style: {
      backgroundColor: "currentColor"
    }
  }, {
    props: {
      color: "inherit"
    },
    style: {
      opacity: 0.3
    }
  }, ...Object.entries(e.palette).filter(to()).map(([t]) => ({
    props: {
      color: t,
      variant: "buffer"
    },
    style: {
      backgroundColor: VP(e, t),
      transition: `transform .${Mk}s linear`
    }
  })), {
    props: ({
      ownerState: t
    }) => t.variant === "indeterminate" || t.variant === "query",
    style: {
      width: "auto"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.variant === "indeterminate" || t.variant === "query",
    style: uX || {
      animation: `${Dk} 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite`
    }
  }]
}))), Kj = /* @__PURE__ */ w.forwardRef(function(t, n) {
  const i = xn({
    props: t,
    name: "MuiLinearProgress"
  }), {
    className: s,
    color: u = "primary",
    value: d,
    valueBuffer: p,
    variant: m = "indeterminate",
    ...v
  } = i, y = {
    ...i,
    color: u,
    variant: m
  }, C = dX(y), S = zi(), R = {}, O = {
    bar1: {},
    bar2: {}
  };
  if (m === "determinate" || m === "buffer")
    if (d !== void 0) {
      R["aria-valuenow"] = Math.round(d), R["aria-valuemin"] = 0, R["aria-valuemax"] = 100;
      let E = d - 100;
      S && (E = -E), O.bar1.transform = `translateX(${E}%)`;
    } else process.env.NODE_ENV !== "production" && console.error("MUI: You need to provide a value prop when using the determinate or buffer variant of LinearProgress .");
  if (m === "buffer")
    if (p !== void 0) {
      let E = (p || 0) - 100;
      S && (E = -E), O.bar2.transform = `translateX(${E}%)`;
    } else process.env.NODE_ENV !== "production" && console.error("MUI: You need to provide a valueBuffer prop when using the buffer variant of LinearProgress.");
  return /* @__PURE__ */ A.jsxs(fX, {
    className: nt(C.root, s),
    ownerState: y,
    role: "progressbar",
    ...R,
    ref: n,
    ...v,
    children: [m === "buffer" ? /* @__PURE__ */ A.jsx(pX, {
      className: C.dashed,
      ownerState: y
    }) : null, /* @__PURE__ */ A.jsx(hX, {
      className: C.bar1,
      ownerState: y,
      style: O.bar1
    }), m === "determinate" ? null : /* @__PURE__ */ A.jsx(mX, {
      className: C.bar2,
      ownerState: y,
      style: O.bar2
    })]
  });
});
process.env.NODE_ENV !== "production" && (Kj.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: a.oneOfType([a.oneOf(["inherit", "primary", "secondary"]), a.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The value of the progress indicator for the determinate and buffer variants.
   * Value between 0 and 100.
   */
  value: a.number,
  /**
   * The value for the buffer variant.
   * Value between 0 and 100.
   */
  valueBuffer: a.number,
  /**
   * The variant to use.
   * Use indeterminate or query when there is no progress value.
   * @default 'indeterminate'
   */
  variant: a.oneOf(["buffer", "determinate", "indeterminate", "query"])
});
const Xg = /* @__PURE__ */ w.createContext({});
process.env.NODE_ENV !== "production" && (Xg.displayName = "ListContext");
function gX(e) {
  return mn("MuiList", e);
}
bn("MuiList", ["root", "padding", "dense", "subheader"]);
const vX = (e) => {
  const {
    classes: t,
    disablePadding: n,
    dense: i,
    subheader: s
  } = e;
  return yt({
    root: ["root", !n && "padding", i && "dense", s && "subheader"]
  }, gX, t);
}, yX = Be("ul", {
  name: "MuiList",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, !n.disablePadding && t.padding, n.dense && t.dense, n.subheader && t.subheader];
  }
})({
  listStyle: "none",
  margin: 0,
  padding: 0,
  position: "relative",
  variants: [{
    props: ({
      ownerState: e
    }) => !e.disablePadding,
    style: {
      paddingTop: 8,
      paddingBottom: 8
    }
  }, {
    props: ({
      ownerState: e
    }) => e.subheader,
    style: {
      paddingTop: 0
    }
  }]
}), Yj = /* @__PURE__ */ w.forwardRef(function(t, n) {
  const i = xn({
    props: t,
    name: "MuiList"
  }), {
    children: s,
    className: u,
    component: d = "ul",
    dense: p = !1,
    disablePadding: m = !1,
    subheader: v,
    ...y
  } = i, C = w.useMemo(() => ({
    dense: p
  }), [p]), S = {
    ...i,
    component: d,
    dense: p,
    disablePadding: m
  }, R = vX(S);
  return /* @__PURE__ */ A.jsx(Xg.Provider, {
    value: C,
    children: /* @__PURE__ */ A.jsxs(yX, {
      as: d,
      className: nt(R.root, u),
      ref: n,
      ownerState: S,
      ...y,
      children: [v, s]
    })
  });
});
process.env.NODE_ENV !== "production" && (Yj.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * If `true`, compact vertical padding designed for keyboard and mouse input is used for
   * the list and list items.
   * The prop is available to descendant components as the `dense` context.
   * @default false
   */
  dense: a.bool,
  /**
   * If `true`, vertical padding is removed from the list.
   * @default false
   */
  disablePadding: a.bool,
  /**
   * The content of the subheader, normally `ListSubheader`.
   */
  subheader: a.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
function bX(e) {
  return mn("MuiListItemIcon", e);
}
const ZF = bn("MuiListItemIcon", ["root", "alignItemsFlexStart"]), CX = (e) => {
  const {
    alignItems: t,
    classes: n
  } = e;
  return yt({
    root: ["root", t === "flex-start" && "alignItemsFlexStart"]
  }, bX, n);
}, SX = Be("div", {
  name: "MuiListItemIcon",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.alignItems === "flex-start" && t.alignItemsFlexStart];
  }
})(rn(({
  theme: e
}) => ({
  minWidth: 56,
  color: (e.vars || e).palette.action.active,
  flexShrink: 0,
  display: "inline-flex",
  variants: [{
    props: {
      alignItems: "flex-start"
    },
    style: {
      marginTop: 8
    }
  }]
}))), lh = /* @__PURE__ */ w.forwardRef(function(t, n) {
  const i = xn({
    props: t,
    name: "MuiListItemIcon"
  }), {
    className: s,
    ...u
  } = i, d = w.useContext(Xg), p = {
    ...i,
    alignItems: d.alignItems
  }, m = CX(p);
  return /* @__PURE__ */ A.jsx(SX, {
    className: nt(m.root, s),
    ownerState: p,
    ref: n,
    ...u
  });
});
process.env.NODE_ENV !== "production" && (lh.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component, normally `Icon`, `SvgIcon`,
   * or a `@mui/icons-material` SVG icon element.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
function wX(e) {
  return mn("MuiListItemText", e);
}
const Tg = bn("MuiListItemText", ["root", "multiline", "dense", "inset", "primary", "secondary"]), xX = (e) => {
  const {
    classes: t,
    inset: n,
    primary: i,
    secondary: s,
    dense: u
  } = e;
  return yt({
    root: ["root", n && "inset", u && "dense", i && s && "multiline"],
    primary: ["primary"],
    secondary: ["secondary"]
  }, wX, t);
}, EX = Be("div", {
  name: "MuiListItemText",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [{
      [`& .${Tg.primary}`]: t.primary
    }, {
      [`& .${Tg.secondary}`]: t.secondary
    }, t.root, n.inset && t.inset, n.primary && n.secondary && t.multiline, n.dense && t.dense];
  }
})({
  flex: "1 1 auto",
  minWidth: 0,
  marginTop: 4,
  marginBottom: 4,
  [`.${CF.root}:where(& .${Tg.primary})`]: {
    display: "block"
  },
  [`.${CF.root}:where(& .${Tg.secondary})`]: {
    display: "block"
  },
  variants: [{
    props: ({
      ownerState: e
    }) => e.primary && e.secondary,
    style: {
      marginTop: 6,
      marginBottom: 6
    }
  }, {
    props: ({
      ownerState: e
    }) => e.inset,
    style: {
      paddingLeft: 56
    }
  }]
}), uh = /* @__PURE__ */ w.forwardRef(function(t, n) {
  const i = xn({
    props: t,
    name: "MuiListItemText"
  }), {
    children: s,
    className: u,
    disableTypography: d = !1,
    inset: p = !1,
    primary: m,
    primaryTypographyProps: v,
    secondary: y,
    secondaryTypographyProps: C,
    slots: S = {},
    slotProps: R = {},
    ...O
  } = i, {
    dense: E
  } = w.useContext(Xg);
  let k = m ?? s, F = y;
  const _ = {
    ...i,
    disableTypography: d,
    inset: p,
    primary: !!k,
    secondary: !!F,
    dense: E
  }, L = xX(_), M = {
    slots: S,
    slotProps: {
      primary: v,
      secondary: C,
      ...R
    }
  }, [D, H] = yn("root", {
    className: nt(L.root, u),
    elementType: EX,
    externalForwardedProps: {
      ...M,
      ...O
    },
    ownerState: _,
    ref: n
  }), [K, Q] = yn("primary", {
    className: L.primary,
    elementType: li,
    externalForwardedProps: M,
    ownerState: _
  }), [z, I] = yn("secondary", {
    className: L.secondary,
    elementType: li,
    externalForwardedProps: M,
    ownerState: _
  });
  return k != null && k.type !== li && !d && (k = /* @__PURE__ */ A.jsx(K, {
    variant: E ? "body2" : "body1",
    component: Q != null && Q.variant ? void 0 : "span",
    ...Q,
    children: k
  })), F != null && F.type !== li && !d && (F = /* @__PURE__ */ A.jsx(z, {
    variant: "body2",
    color: "textSecondary",
    ...I,
    children: F
  })), /* @__PURE__ */ A.jsxs(D, {
    ...H,
    children: [k, F]
  });
});
process.env.NODE_ENV !== "production" && (uh.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Alias for the `primary` prop.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * If `true`, the children won't be wrapped by a Typography component.
   * This can be useful to render an alternative Typography variant by wrapping
   * the `children` (or `primary`) text, and optional `secondary` text
   * with the Typography component.
   * @default false
   */
  disableTypography: a.bool,
  /**
   * If `true`, the children are indented.
   * This should be used if there is no left avatar or left icon.
   * @default false
   */
  inset: a.bool,
  /**
   * The main content element.
   */
  primary: a.node,
  /**
   * These props will be forwarded to the primary typography component
   * (as long as disableTypography is not `true`).
   * @deprecated Use `slotProps.primary` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  primaryTypographyProps: a.object,
  /**
   * The secondary content element.
   */
  secondary: a.node,
  /**
   * These props will be forwarded to the secondary typography component
   * (as long as disableTypography is not `true`).
   * @deprecated Use `slotProps.secondary` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  secondaryTypographyProps: a.object,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    primary: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object]),
    secondary: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    primary: a.elementType,
    root: a.elementType,
    secondary: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
function NO(e, t, n) {
  return e === t ? e.firstChild : t && t.nextElementSibling ? t.nextElementSibling : n ? null : e.firstChild;
}
function e_(e, t, n) {
  return e === t ? n ? e.firstChild : e.lastChild : t && t.previousElementSibling ? t.previousElementSibling : n ? null : e.lastChild;
}
function Xj(e, t) {
  if (t === void 0)
    return !0;
  let n = e.innerText;
  return n === void 0 && (n = e.textContent), n = n.trim().toLowerCase(), n.length === 0 ? !1 : t.repeating ? n[0] === t.keys[0] : n.startsWith(t.keys.join(""));
}
function Ob(e, t, n, i, s, u) {
  let d = !1, p = s(e, t, t ? n : !1);
  for (; p; ) {
    if (p === e.firstChild) {
      if (d)
        return !1;
      d = !0;
    }
    const m = i ? !1 : p.disabled || p.getAttribute("aria-disabled") === "true";
    if (!p.hasAttribute("tabindex") || !Xj(p, u) || m)
      p = s(e, p, n);
    else
      return p.focus(), !0;
  }
  return !1;
}
const _C = /* @__PURE__ */ w.forwardRef(function(t, n) {
  const {
    // private
    // eslint-disable-next-line react/prop-types
    actions: i,
    autoFocus: s = !1,
    autoFocusItem: u = !1,
    children: d,
    className: p,
    disabledItemsFocusable: m = !1,
    disableListWrap: v = !1,
    onKeyDown: y,
    variant: C = "selectedMenu",
    ...S
  } = t, R = w.useRef(null), O = w.useRef({
    keys: [],
    repeating: !0,
    previousKeyMatched: !0,
    lastTime: null
  });
  _r(() => {
    s && R.current.focus();
  }, [s]), w.useImperativeHandle(i, () => ({
    adjustStyleForScrollbar: (L, {
      direction: M
    }) => {
      const D = !R.current.style.width;
      if (L.clientHeight < R.current.clientHeight && D) {
        const H = `${q$(rl(L))}px`;
        R.current.style[M === "rtl" ? "paddingLeft" : "paddingRight"] = H, R.current.style.width = `calc(100% + ${H})`;
      }
      return R.current;
    }
  }), []);
  const E = (L) => {
    const M = R.current, D = L.key;
    if (L.ctrlKey || L.metaKey || L.altKey) {
      y && y(L);
      return;
    }
    const K = ao(M).activeElement;
    if (D === "ArrowDown")
      L.preventDefault(), Ob(M, K, v, m, NO);
    else if (D === "ArrowUp")
      L.preventDefault(), Ob(M, K, v, m, e_);
    else if (D === "Home")
      L.preventDefault(), Ob(M, null, v, m, NO);
    else if (D === "End")
      L.preventDefault(), Ob(M, null, v, m, e_);
    else if (D.length === 1) {
      const Q = O.current, z = D.toLowerCase(), I = performance.now();
      Q.keys.length > 0 && (I - Q.lastTime > 500 ? (Q.keys = [], Q.repeating = !0, Q.previousKeyMatched = !0) : Q.repeating && z !== Q.keys[0] && (Q.repeating = !1)), Q.lastTime = I, Q.keys.push(z);
      const G = K && !Q.repeating && Xj(K, Q);
      Q.previousKeyMatched && (G || Ob(M, K, !1, m, NO, Q)) ? L.preventDefault() : Q.previousKeyMatched = !1;
    }
    y && y(L);
  }, k = Vr(R, n);
  let F = -1;
  w.Children.forEach(d, (L, M) => {
    if (!/* @__PURE__ */ w.isValidElement(L)) {
      F === M && (F += 1, F >= d.length && (F = -1));
      return;
    }
    process.env.NODE_ENV !== "production" && vf.isFragment(L) && console.error(["MUI: The Menu component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`)), L.props.disabled || (C === "selectedMenu" && L.props.selected || F === -1) && (F = M), F === M && (L.props.disabled || L.props.muiSkipListHighlight || L.type.muiSkipListHighlight) && (F += 1, F >= d.length && (F = -1));
  });
  const _ = w.Children.map(d, (L, M) => {
    if (M === F) {
      const D = {};
      return u && (D.autoFocus = !0), L.props.tabIndex === void 0 && C === "selectedMenu" && (D.tabIndex = 0), /* @__PURE__ */ w.cloneElement(L, D);
    }
    return L;
  });
  return /* @__PURE__ */ A.jsx(Yj, {
    role: "menu",
    ref: k,
    className: p,
    onKeyDown: E,
    tabIndex: s ? 0 : -1,
    ...S,
    children: _
  });
});
process.env.NODE_ENV !== "production" && (_C.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, will focus the `[role="menu"]` container and move into tab order.
   * @default false
   */
  autoFocus: a.bool,
  /**
   * If `true`, will focus the first menuitem if `variant="menu"` or selected item
   * if `variant="selectedMenu"`.
   * @default false
   */
  autoFocusItem: a.bool,
  /**
   * MenuList contents, normally `MenuItem`s.
   */
  children: a.node,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * If `true`, will allow focus on disabled items.
   * @default false
   */
  disabledItemsFocusable: a.bool,
  /**
   * If `true`, the menu items will not wrap focus.
   * @default false
   */
  disableListWrap: a.bool,
  /**
   * @ignore
   */
  onKeyDown: a.func,
  /**
   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus
   * and the vertical alignment relative to the anchor element.
   * @default 'selectedMenu'
   */
  variant: a.oneOf(["menu", "selectedMenu"])
});
function TX(e) {
  return mn("MuiPopover", e);
}
bn("MuiPopover", ["root", "paper"]);
function t_(e, t) {
  let n = 0;
  return typeof t == "number" ? n = t : t === "center" ? n = e.height / 2 : t === "bottom" && (n = e.height), n;
}
function n_(e, t) {
  let n = 0;
  return typeof t == "number" ? n = t : t === "center" ? n = e.width / 2 : t === "right" && (n = e.width), n;
}
function r_(e) {
  return [e.horizontal, e.vertical].map((t) => typeof t == "number" ? `${t}px` : t).join(" ");
}
function Vb(e) {
  return typeof e == "function" ? e() : e;
}
const RX = (e) => {
  const {
    classes: t
  } = e;
  return yt({
    root: ["root"],
    paper: ["paper"]
  }, TX, t);
}, OX = Be(Uj, {
  name: "MuiPopover",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({}), Qj = Be(bs, {
  name: "MuiPopover",
  slot: "Paper",
  overridesResolver: (e, t) => t.paper
})({
  position: "absolute",
  overflowY: "auto",
  overflowX: "hidden",
  // So we see the popover when it's empty.
  // It's most likely on issue on userland.
  minWidth: 16,
  minHeight: 16,
  maxWidth: "calc(100% - 32px)",
  maxHeight: "calc(100% - 32px)",
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0
}), Jj = /* @__PURE__ */ w.forwardRef(function(t, n) {
  const i = xn({
    props: t,
    name: "MuiPopover"
  }), {
    action: s,
    anchorEl: u,
    anchorOrigin: d = {
      vertical: "top",
      horizontal: "left"
    },
    anchorPosition: p,
    anchorReference: m = "anchorEl",
    children: v,
    className: y,
    container: C,
    elevation: S = 8,
    marginThreshold: R = 16,
    open: O,
    PaperProps: E = {},
    // TODO: remove in v7
    slots: k = {},
    slotProps: F = {},
    transformOrigin: _ = {
      vertical: "top",
      horizontal: "left"
    },
    TransitionComponent: L,
    // TODO: remove in v7
    transitionDuration: M = "auto",
    TransitionProps: D = {},
    // TODO: remove in v7
    disableScrollLock: H = !1,
    ...K
  } = i, Q = w.useRef(), z = {
    ...i,
    anchorOrigin: d,
    anchorReference: m,
    elevation: S,
    marginThreshold: R,
    transformOrigin: _,
    TransitionComponent: L,
    transitionDuration: M,
    TransitionProps: D
  }, I = RX(z), G = w.useCallback(() => {
    if (m === "anchorPosition")
      return process.env.NODE_ENV !== "production" && (p || console.error('MUI: You need to provide a `anchorPosition` prop when using <Popover anchorReference="anchorPosition" />.')), p;
    const Ce = Vb(u), Re = Ce && Ce.nodeType === 1 ? Ce : ao(Q.current).body, ue = Re.getBoundingClientRect();
    if (process.env.NODE_ENV !== "production") {
      const we = Re.getBoundingClientRect();
      process.env.NODE_ENV !== "test" && we.top === 0 && we.left === 0 && we.right === 0 && we.bottom === 0 && console.warn(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
    }
    return {
      top: ue.top + t_(ue, d.vertical),
      left: ue.left + n_(ue, d.horizontal)
    };
  }, [u, d.horizontal, d.vertical, p, m]), W = w.useCallback((Ce) => ({
    vertical: t_(Ce, _.vertical),
    horizontal: n_(Ce, _.horizontal)
  }), [_.horizontal, _.vertical]), B = w.useCallback((Ce) => {
    const Re = {
      width: Ce.offsetWidth,
      height: Ce.offsetHeight
    }, ue = W(Re);
    if (m === "none")
      return {
        top: null,
        left: null,
        transformOrigin: r_(ue)
      };
    const we = G();
    let _e = we.top - ue.vertical, He = we.left - ue.horizontal;
    const et = _e + Re.height, Ne = He + Re.width, rt = rl(Vb(u)), it = rt.innerHeight - R, wt = rt.innerWidth - R;
    if (R !== null && _e < R) {
      const gt = _e - R;
      _e -= gt, ue.vertical += gt;
    } else if (R !== null && et > it) {
      const gt = et - it;
      _e -= gt, ue.vertical += gt;
    }
    if (process.env.NODE_ENV !== "production" && Re.height > it && Re.height && it && console.error(["MUI: The popover component is too tall.", `Some part of it can not be seen on the screen (${Re.height - it}px).`, "Please consider adding a `max-height` to improve the user-experience."].join(`
`)), R !== null && He < R) {
      const gt = He - R;
      He -= gt, ue.horizontal += gt;
    } else if (Ne > wt) {
      const gt = Ne - wt;
      He -= gt, ue.horizontal += gt;
    }
    return {
      top: `${Math.round(_e)}px`,
      left: `${Math.round(He)}px`,
      transformOrigin: r_(ue)
    };
  }, [u, m, G, W, R]), [ee, U] = w.useState(O), q = w.useCallback(() => {
    const Ce = Q.current;
    if (!Ce)
      return;
    const Re = B(Ce);
    Re.top !== null && Ce.style.setProperty("top", Re.top), Re.left !== null && (Ce.style.left = Re.left), Ce.style.transformOrigin = Re.transformOrigin, U(!0);
  }, [B]);
  w.useEffect(() => (H && window.addEventListener("scroll", q), () => window.removeEventListener("scroll", q)), [u, H, q]);
  const Y = () => {
    q();
  }, ne = () => {
    U(!1);
  };
  w.useEffect(() => {
    O && q();
  }), w.useImperativeHandle(s, () => O ? {
    updatePosition: () => {
      q();
    }
  } : null, [O, q]), w.useEffect(() => {
    if (!O)
      return;
    const Ce = SE(() => {
      q();
    }), Re = rl(Vb(u));
    return Re.addEventListener("resize", Ce), () => {
      Ce.clear(), Re.removeEventListener("resize", Ce);
    };
  }, [u, O, q]);
  let re = M;
  const X = {
    slots: {
      transition: L,
      ...k
    },
    slotProps: {
      transition: D,
      paper: E,
      ...F
    }
  }, [j, ie] = yn("transition", {
    elementType: Yg,
    externalForwardedProps: X,
    ownerState: z,
    getSlotProps: (Ce) => ({
      ...Ce,
      onEntering: (Re, ue) => {
        var we;
        (we = Ce.onEntering) == null || we.call(Ce, Re, ue), Y();
      },
      onExited: (Re) => {
        var ue;
        (ue = Ce.onExited) == null || ue.call(Ce, Re), ne();
      }
    }),
    additionalProps: {
      appear: !0,
      in: O
    }
  });
  M === "auto" && !j.muiSupportAuto && (re = void 0);
  const fe = C || (u ? ao(Vb(u)).body : void 0), [ce, {
    slots: me,
    slotProps: ge,
    ...de
  }] = yn("root", {
    ref: n,
    elementType: OX,
    externalForwardedProps: {
      ...X,
      ...K
    },
    shouldForwardComponentProp: !0,
    additionalProps: {
      slots: {
        backdrop: k.backdrop
      },
      slotProps: {
        backdrop: pj(typeof F.backdrop == "function" ? F.backdrop(z) : F.backdrop, {
          invisible: !0
        })
      },
      container: fe,
      open: O
    },
    ownerState: z,
    className: nt(I.root, y)
  }), [pe, be] = yn("paper", {
    ref: Q,
    className: I.paper,
    elementType: Qj,
    externalForwardedProps: X,
    shouldForwardComponentProp: !0,
    additionalProps: {
      elevation: S,
      style: ee ? void 0 : {
        opacity: 0
      }
    },
    ownerState: z
  });
  return /* @__PURE__ */ A.jsx(ce, {
    ...de,
    ...!Rk(ce) && {
      slots: me,
      slotProps: ge,
      disableScrollLock: H
    },
    children: /* @__PURE__ */ A.jsx(j, {
      ...ie,
      timeout: re,
      children: /* @__PURE__ */ A.jsx(pe, {
        ...be,
        children: v
      })
    })
  });
});
process.env.NODE_ENV !== "production" && (Jj.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A ref for imperative actions.
   * It currently only supports updatePosition() action.
   */
  action: Ea,
  /**
   * An HTML element, [PopoverVirtualElement](https://mui.com/material-ui/react-popover/#virtual-element),
   * or a function that returns either.
   * It's used to set the position of the popover.
   */
  anchorEl: Gl(a.oneOfType([Wl, a.func]), (e) => {
    if (e.open && (!e.anchorReference || e.anchorReference === "anchorEl")) {
      const t = Vb(e.anchorEl);
      if (t && t.nodeType === 1) {
        const n = t.getBoundingClientRect();
        if (process.env.NODE_ENV !== "test" && n.top === 0 && n.left === 0 && n.right === 0 && n.bottom === 0)
          return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
      } else
        return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", `It should be an Element or PopoverVirtualElement instance but it's \`${t}\` instead.`].join(`
`));
    }
    return null;
  }),
  /**
   * This is the point on the anchor where the popover's
   * `anchorEl` will attach to. This is not used when the
   * anchorReference is 'anchorPosition'.
   *
   * Options:
   * vertical: [top, center, bottom];
   * horizontal: [left, center, right].
   * @default {
   *   vertical: 'top',
   *   horizontal: 'left',
   * }
   */
  anchorOrigin: a.shape({
    horizontal: a.oneOfType([a.oneOf(["center", "left", "right"]), a.number]).isRequired,
    vertical: a.oneOfType([a.oneOf(["bottom", "center", "top"]), a.number]).isRequired
  }),
  /**
   * This is the position that may be used to set the position of the popover.
   * The coordinates are relative to the application's client area.
   */
  anchorPosition: a.shape({
    left: a.number.isRequired,
    top: a.number.isRequired
  }),
  /**
   * This determines which anchor prop to refer to when setting
   * the position of the popover.
   * @default 'anchorEl'
   */
  anchorReference: a.oneOf(["anchorEl", "anchorPosition", "none"]),
  /**
   * A backdrop component. This prop enables custom backdrop rendering.
   * @deprecated Use `slots.backdrop` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default styled(Backdrop, {
   *   name: 'MuiModal',
   *   slot: 'Backdrop',
   *   overridesResolver: (props, styles) => {
   *     return styles.backdrop;
   *   },
   * })({
   *   zIndex: -1,
   * })
   */
  BackdropComponent: a.elementType,
  /**
   * Props applied to the [`Backdrop`](/material-ui/api/backdrop/) element.
   * @deprecated Use `slotProps.backdrop` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  BackdropProps: a.object,
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * An HTML element, component instance, or function that returns either.
   * The `container` will passed to the Modal component.
   *
   * By default, it uses the body of the anchorEl's top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: a.oneOfType([Wl, a.func]),
  /**
   * Disable the scroll lock behavior.
   * @default false
   */
  disableScrollLock: a.bool,
  /**
   * The elevation of the popover.
   * @default 8
   */
  elevation: Dg,
  /**
   * Specifies how close to the edge of the window the popover can appear.
   * If null, the popover will not be constrained by the window.
   * @default 16
   */
  marginThreshold: a.number,
  /**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   */
  onClose: a.func,
  /**
   * If `true`, the component is shown.
   */
  open: a.bool.isRequired,
  /**
   * Props applied to the [`Paper`](https://mui.com/material-ui/api/paper/) element.
   *
   * This prop is an alias for `slotProps.paper` and will be overriden by it if both are used.
   * @deprecated Use `slotProps.paper` instead.
   *
   * @default {}
   */
  PaperProps: a.shape({
    component: yP
  }),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    backdrop: a.oneOfType([a.func, a.object]),
    paper: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object]),
    transition: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    backdrop: a.elementType,
    paper: a.elementType,
    root: a.elementType,
    transition: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * This is the point on the popover which
   * will attach to the anchor's origin.
   *
   * Options:
   * vertical: [top, center, bottom, x(px)];
   * horizontal: [left, center, right, x(px)].
   * @default {
   *   vertical: 'top',
   *   horizontal: 'left',
   * }
   */
  transformOrigin: a.shape({
    horizontal: a.oneOfType([a.oneOf(["center", "left", "right"]), a.number]).isRequired,
    vertical: a.oneOfType([a.oneOf(["bottom", "center", "top"]), a.number]).isRequired
  }),
  /**
   * The component used for the transition.
   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @deprecated use the `slots.transition` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default Grow
   */
  TransitionComponent: a.elementType,
  /**
   * Set to 'auto' to automatically calculate transition time based on height.
   * @default 'auto'
   */
  transitionDuration: a.oneOfType([a.oneOf(["auto"]), a.number, a.shape({
    appear: a.number,
    enter: a.number,
    exit: a.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @deprecated use the `slotProps.transition` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  TransitionProps: a.object
});
function kX(e) {
  return mn("MuiMenu", e);
}
bn("MuiMenu", ["root", "paper", "list"]);
const PX = {
  vertical: "top",
  horizontal: "right"
}, MX = {
  vertical: "top",
  horizontal: "left"
}, IX = (e) => {
  const {
    classes: t
  } = e;
  return yt({
    root: ["root"],
    paper: ["paper"],
    list: ["list"]
  }, kX, t);
}, DX = Be(Jj, {
  shouldForwardProp: (e) => Ya(e) || e === "classes",
  name: "MuiMenu",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({}), NX = Be(Qj, {
  name: "MuiMenu",
  slot: "Paper",
  overridesResolver: (e, t) => t.paper
})({
  // specZ: The maximum height of a simple menu should be one or more rows less than the view
  // height. This ensures a tappable area outside of the simple menu with which to dismiss
  // the menu.
  maxHeight: "calc(100% - 96px)",
  // Add iOS momentum scrolling for iOS < 13.0
  WebkitOverflowScrolling: "touch"
}), LX = Be(_C, {
  name: "MuiMenu",
  slot: "List",
  overridesResolver: (e, t) => t.list
})({
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0
}), Zj = /* @__PURE__ */ w.forwardRef(function(t, n) {
  const i = xn({
    props: t,
    name: "MuiMenu"
  }), {
    autoFocus: s = !0,
    children: u,
    className: d,
    disableAutoFocusItem: p = !1,
    MenuListProps: m = {},
    onClose: v,
    open: y,
    PaperProps: C = {},
    PopoverClasses: S,
    transitionDuration: R = "auto",
    TransitionProps: {
      onEntering: O,
      ...E
    } = {},
    variant: k = "selectedMenu",
    slots: F = {},
    slotProps: _ = {},
    ...L
  } = i, M = zi(), D = {
    ...i,
    autoFocus: s,
    disableAutoFocusItem: p,
    MenuListProps: m,
    onEntering: O,
    PaperProps: C,
    transitionDuration: R,
    TransitionProps: E,
    variant: k
  }, H = IX(D), K = s && !p && y, Q = w.useRef(null), z = (re, X) => {
    Q.current && Q.current.adjustStyleForScrollbar(re, {
      direction: M ? "rtl" : "ltr"
    }), O && O(re, X);
  }, I = (re) => {
    re.key === "Tab" && (re.preventDefault(), v && v(re, "tabKeyDown"));
  };
  let G = -1;
  w.Children.map(u, (re, X) => {
    /* @__PURE__ */ w.isValidElement(re) && (process.env.NODE_ENV !== "production" && vf.isFragment(re) && console.error(["MUI: The Menu component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`)), re.props.disabled || (k === "selectedMenu" && re.props.selected || G === -1) && (G = X));
  });
  const W = {
    slots: F,
    slotProps: {
      list: m,
      transition: E,
      paper: C,
      ..._
    }
  }, B = Ug({
    elementType: F.root,
    externalSlotProps: _.root,
    ownerState: D,
    className: [H.root, d]
  }), [ee, U] = yn("paper", {
    className: H.paper,
    elementType: NX,
    externalForwardedProps: W,
    shouldForwardComponentProp: !0,
    ownerState: D
  }), [q, Y] = yn("list", {
    className: nt(H.list, m.className),
    elementType: LX,
    shouldForwardComponentProp: !0,
    externalForwardedProps: W,
    getSlotProps: (re) => ({
      ...re,
      onKeyDown: (X) => {
        var j;
        I(X), (j = re.onKeyDown) == null || j.call(re, X);
      }
    }),
    ownerState: D
  }), ne = typeof W.slotProps.transition == "function" ? W.slotProps.transition(D) : W.slotProps.transition;
  return /* @__PURE__ */ A.jsx(DX, {
    onClose: v,
    anchorOrigin: {
      vertical: "bottom",
      horizontal: M ? "right" : "left"
    },
    transformOrigin: M ? PX : MX,
    slots: {
      root: F.root,
      paper: ee,
      backdrop: F.backdrop,
      ...F.transition && {
        // TODO: pass `slots.transition` directly once `TransitionComponent` is removed from Popover
        transition: F.transition
      }
    },
    slotProps: {
      root: B,
      paper: U,
      backdrop: typeof _.backdrop == "function" ? _.backdrop(D) : _.backdrop,
      transition: {
        ...ne,
        onEntering: (...re) => {
          var X;
          z(...re), (X = ne == null ? void 0 : ne.onEntering) == null || X.call(ne, ...re);
        }
      }
    },
    open: y,
    ref: n,
    transitionDuration: R,
    ownerState: D,
    ...L,
    classes: S,
    children: /* @__PURE__ */ A.jsx(q, {
      actions: Q,
      autoFocus: s && (G === -1 || p),
      autoFocusItem: K,
      variant: k,
      ...Y,
      children: u
    })
  });
});
process.env.NODE_ENV !== "production" && (Zj.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * An HTML element, or a function that returns one.
   * It's used to set the position of the menu.
   */
  anchorEl: a.oneOfType([Wl, a.func]),
  /**
   * If `true` (Default) will focus the `[role="menu"]` if no focusable child is found. Disabled
   * children are not focusable. If you set this prop to `false` focus will be placed
   * on the parent modal container. This has severe accessibility implications
   * and should only be considered if you manage focus otherwise.
   * @default true
   */
  autoFocus: a.bool,
  /**
   * Menu contents, normally `MenuItem`s.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * When opening the menu will not focus the active item but the `[role="menu"]`
   * unless `autoFocus` is also set to `false`. Not using the default means not
   * following WAI-ARIA authoring practices. Please be considerate about possible
   * accessibility implications.
   * @default false
   */
  disableAutoFocusItem: a.bool,
  /**
   * Props applied to the [`MenuList`](https://mui.com/material-ui/api/menu-list/) element.
   * @deprecated use the `slotProps.list` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  MenuListProps: a.object,
  /**
   * Callback fired when the component requests to be closed.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`, `"tabKeyDown"`.
   */
  onClose: a.func,
  /**
   * If `true`, the component is shown.
   */
  open: a.bool.isRequired,
  /**
   * @ignore
   */
  PaperProps: a.object,
  /**
   * `classes` prop applied to the [`Popover`](https://mui.com/material-ui/api/popover/) element.
   */
  PopoverClasses: a.object,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    backdrop: a.oneOfType([a.func, a.object]),
    list: a.oneOfType([a.func, a.object]),
    paper: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object]),
    transition: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    backdrop: a.elementType,
    list: a.elementType,
    paper: a.elementType,
    root: a.elementType,
    transition: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The length of the transition in `ms`, or 'auto'
   * @default 'auto'
   */
  transitionDuration: a.oneOfType([a.oneOf(["auto"]), a.number, a.shape({
    appear: a.number,
    enter: a.number,
    exit: a.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @deprecated use the `slotProps.transition` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  TransitionProps: a.object,
  /**
   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus.
   * @default 'selectedMenu'
   */
  variant: a.oneOf(["menu", "selectedMenu"])
});
function FX(e) {
  return mn("MuiMenuItem", e);
}
const kb = bn("MuiMenuItem", ["root", "focusVisible", "dense", "disabled", "divider", "gutters", "selected"]), _X = (e, t) => {
  const {
    ownerState: n
  } = e;
  return [t.root, n.dense && t.dense, n.divider && t.divider, !n.disableGutters && t.gutters];
}, AX = (e) => {
  const {
    disabled: t,
    dense: n,
    divider: i,
    disableGutters: s,
    selected: u,
    classes: d
  } = e, m = yt({
    root: ["root", n && "dense", t && "disabled", !s && "gutters", i && "divider", u && "selected"]
  }, FX, d);
  return {
    ...d,
    ...m
  };
}, $X = Be(Yc, {
  shouldForwardProp: (e) => Ya(e) || e === "classes",
  name: "MuiMenuItem",
  slot: "Root",
  overridesResolver: _X
})(rn(({
  theme: e
}) => ({
  ...e.typography.body1,
  display: "flex",
  justifyContent: "flex-start",
  alignItems: "center",
  position: "relative",
  textDecoration: "none",
  minHeight: 48,
  paddingTop: 6,
  paddingBottom: 6,
  boxSizing: "border-box",
  whiteSpace: "nowrap",
  "&:hover": {
    textDecoration: "none",
    backgroundColor: (e.vars || e).palette.action.hover,
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: "transparent"
    }
  },
  [`&.${kb.selected}`]: {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / ${e.vars.palette.action.selectedOpacity})` : $n(e.palette.primary.main, e.palette.action.selectedOpacity),
    [`&.${kb.focusVisible}`]: {
      backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.focusOpacity}))` : $n(e.palette.primary.main, e.palette.action.selectedOpacity + e.palette.action.focusOpacity)
    }
  },
  [`&.${kb.selected}:hover`]: {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.hoverOpacity}))` : $n(e.palette.primary.main, e.palette.action.selectedOpacity + e.palette.action.hoverOpacity),
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / ${e.vars.palette.action.selectedOpacity})` : $n(e.palette.primary.main, e.palette.action.selectedOpacity)
    }
  },
  [`&.${kb.focusVisible}`]: {
    backgroundColor: (e.vars || e).palette.action.focus
  },
  [`&.${kb.disabled}`]: {
    opacity: (e.vars || e).palette.action.disabledOpacity
  },
  [`& + .${KF.root}`]: {
    marginTop: e.spacing(1),
    marginBottom: e.spacing(1)
  },
  [`& + .${KF.inset}`]: {
    marginLeft: 52
  },
  [`& .${Tg.root}`]: {
    marginTop: 0,
    marginBottom: 0
  },
  [`& .${Tg.inset}`]: {
    paddingLeft: 36
  },
  [`& .${ZF.root}`]: {
    minWidth: 36
  },
  variants: [{
    props: ({
      ownerState: t
    }) => !t.disableGutters,
    style: {
      paddingLeft: 16,
      paddingRight: 16
    }
  }, {
    props: ({
      ownerState: t
    }) => t.divider,
    style: {
      borderBottom: `1px solid ${(e.vars || e).palette.divider}`,
      backgroundClip: "padding-box"
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.dense,
    style: {
      [e.breakpoints.up("sm")]: {
        minHeight: "auto"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.dense,
    style: {
      minHeight: 32,
      // https://m2.material.io/components/menus#specs > Dense
      paddingTop: 4,
      paddingBottom: 4,
      ...e.typography.body2,
      [`& .${ZF.root} svg`]: {
        fontSize: "1.25rem"
      }
    }
  }]
}))), ms = /* @__PURE__ */ w.forwardRef(function(t, n) {
  const i = xn({
    props: t,
    name: "MuiMenuItem"
  }), {
    autoFocus: s = !1,
    component: u = "li",
    dense: d = !1,
    divider: p = !1,
    disableGutters: m = !1,
    focusVisibleClassName: v,
    role: y = "menuitem",
    tabIndex: C,
    className: S,
    ...R
  } = i, O = w.useContext(Xg), E = w.useMemo(() => ({
    dense: d || O.dense || !1,
    disableGutters: m
  }), [O.dense, d, m]), k = w.useRef(null);
  _r(() => {
    s && (k.current ? k.current.focus() : process.env.NODE_ENV !== "production" && console.error("MUI: Unable to set focus to a MenuItem whose component has not been rendered."));
  }, [s]);
  const F = {
    ...i,
    dense: E.dense,
    divider: p,
    disableGutters: m
  }, _ = AX(i), L = Vr(k, n);
  let M;
  return i.disabled || (M = C !== void 0 ? C : -1), /* @__PURE__ */ A.jsx(Xg.Provider, {
    value: E,
    children: /* @__PURE__ */ A.jsx($X, {
      ref: L,
      role: y,
      tabIndex: M,
      component: u,
      focusVisibleClassName: nt(_.focusVisible, v),
      className: nt(_.root, S),
      ...R,
      ownerState: F,
      classes: _
    })
  });
});
process.env.NODE_ENV !== "production" && (ms.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the list item is focused during the first mount.
   * Focus will also be triggered if the value changes from false to true.
   * @default false
   */
  autoFocus: a.bool,
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * If `true`, compact vertical padding designed for keyboard and mouse input is used.
   * The prop defaults to the value inherited from the parent Menu component.
   * @default false
   */
  dense: a.bool,
  /**
   * @ignore
   */
  disabled: a.bool,
  /**
   * If `true`, the left and right padding is removed.
   * @default false
   */
  disableGutters: a.bool,
  /**
   * If `true`, a 1px light border is added to the bottom of the menu item.
   * @default false
   */
  divider: a.bool,
  /**
   * This prop can help identify which element has keyboard focus.
   * The class name will be applied when the element gains the focus through keyboard interaction.
   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).
   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).
   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components
   * if needed.
   */
  focusVisibleClassName: a.string,
  /**
   * @ignore
   */
  role: a.string,
  /**
   * If `true`, the component is selected.
   * @default false
   */
  selected: a.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * @default 0
   */
  tabIndex: a.number
});
function jX(e) {
  return mn("MuiNativeSelect", e);
}
const BP = bn("MuiNativeSelect", ["root", "select", "multiple", "filled", "outlined", "standard", "disabled", "icon", "iconOpen", "iconFilled", "iconOutlined", "iconStandard", "nativeInput", "error"]), zX = (e) => {
  const {
    classes: t,
    variant: n,
    disabled: i,
    multiple: s,
    open: u,
    error: d
  } = e, p = {
    select: ["select", n, i && "disabled", s && "multiple", d && "error"],
    icon: ["icon", `icon${Ue(n)}`, u && "iconOpen", i && "disabled"]
  };
  return yt(p, jX, t);
}, e2 = Be("select", {
  name: "MuiNativeSelect"
})(({
  theme: e
}) => ({
  // Reset
  MozAppearance: "none",
  // Reset
  WebkitAppearance: "none",
  // When interacting quickly, the text can end up selected.
  // Native select can't be selected either.
  userSelect: "none",
  // Reset
  borderRadius: 0,
  cursor: "pointer",
  "&:focus": {
    // Reset Chrome style
    borderRadius: 0
  },
  [`&.${BP.disabled}`]: {
    cursor: "default"
  },
  "&[multiple]": {
    height: "auto"
  },
  "&:not([multiple]) option, &:not([multiple]) optgroup": {
    backgroundColor: (e.vars || e).palette.background.paper
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.variant !== "filled" && t.variant !== "outlined",
    style: {
      // Bump specificity to allow extending custom inputs
      "&&&": {
        paddingRight: 24,
        minWidth: 16
        // So it doesn't collapse.
      }
    }
  }, {
    props: {
      variant: "filled"
    },
    style: {
      "&&&": {
        paddingRight: 32
      }
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      borderRadius: (e.vars || e).shape.borderRadius,
      "&:focus": {
        borderRadius: (e.vars || e).shape.borderRadius
        // Reset the reset for Chrome style
      },
      "&&&": {
        paddingRight: 32
      }
    }
  }]
})), HX = Be(e2, {
  name: "MuiNativeSelect",
  slot: "Select",
  shouldForwardProp: Ya,
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.select, t[n.variant], n.error && t.error, {
      [`&.${BP.multiple}`]: t.multiple
    }];
  }
})({}), t2 = Be("svg", {
  name: "MuiNativeSelect"
})(({
  theme: e
}) => ({
  // We use a position absolute over a flexbox in order to forward the pointer events
  // to the input and to support wrapping tags..
  position: "absolute",
  right: 0,
  // Center vertically, height is 1em
  top: "calc(50% - .5em)",
  // Don't block pointer events on the select under the icon.
  pointerEvents: "none",
  color: (e.vars || e).palette.action.active,
  [`&.${BP.disabled}`]: {
    color: (e.vars || e).palette.action.disabled
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.open,
    style: {
      transform: "rotate(180deg)"
    }
  }, {
    props: {
      variant: "filled"
    },
    style: {
      right: 7
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      right: 7
    }
  }]
})), VX = Be(t2, {
  name: "MuiNativeSelect",
  slot: "Icon",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.icon, n.variant && t[`icon${Ue(n.variant)}`], n.open && t.iconOpen];
  }
})({}), n2 = /* @__PURE__ */ w.forwardRef(function(t, n) {
  const {
    className: i,
    disabled: s,
    error: u,
    IconComponent: d,
    inputRef: p,
    variant: m = "standard",
    ...v
  } = t, y = {
    ...t,
    disabled: s,
    variant: m,
    error: u
  }, C = zX(y);
  return /* @__PURE__ */ A.jsxs(w.Fragment, {
    children: [/* @__PURE__ */ A.jsx(HX, {
      ownerState: y,
      className: nt(C.select, i),
      disabled: s,
      ref: p || n,
      ...v
    }), t.multiple ? null : /* @__PURE__ */ A.jsx(VX, {
      as: d,
      ownerState: y,
      className: C.icon
    })]
  });
});
process.env.NODE_ENV !== "production" && (n2.propTypes = {
  /**
   * The option elements to populate the select with.
   * Can be some `<option>` elements.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * The CSS class name of the select element.
   */
  className: a.string,
  /**
   * If `true`, the select is disabled.
   */
  disabled: a.bool,
  /**
   * If `true`, the `select input` will indicate an error.
   */
  error: a.bool,
  /**
   * The icon that displays the arrow.
   */
  IconComponent: a.elementType.isRequired,
  /**
   * Use that prop to pass a ref to the native select element.
   * @deprecated
   */
  inputRef: Ea,
  /**
   * @ignore
   */
  multiple: a.bool,
  /**
   * Name attribute of the `select` or hidden `input` element.
   */
  name: a.string,
  /**
   * Callback fired when a menu item is selected.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: a.func,
  /**
   * The input value.
   */
  value: a.any,
  /**
   * The variant to use.
   */
  variant: a.oneOf(["standard", "outlined", "filled"])
});
var o_;
const BX = Be("fieldset", {
  name: "MuiNotchedOutlined",
  shouldForwardProp: Ya
})({
  textAlign: "left",
  position: "absolute",
  bottom: 0,
  right: 0,
  top: -5,
  left: 0,
  margin: 0,
  padding: "0 8px",
  pointerEvents: "none",
  borderRadius: "inherit",
  borderStyle: "solid",
  borderWidth: 1,
  overflow: "hidden",
  minWidth: "0%"
}), UX = Be("legend", {
  name: "MuiNotchedOutlined",
  shouldForwardProp: Ya
})(rn(({
  theme: e
}) => ({
  float: "unset",
  // Fix conflict with bootstrap
  width: "auto",
  // Fix conflict with bootstrap
  overflow: "hidden",
  // Fix Horizontal scroll when label too long
  variants: [{
    props: ({
      ownerState: t
    }) => !t.withLabel,
    style: {
      padding: 0,
      lineHeight: "11px",
      // sync with `height` in `legend` styles
      transition: e.transitions.create("width", {
        duration: 150,
        easing: e.transitions.easing.easeOut
      })
    }
  }, {
    props: ({
      ownerState: t
    }) => t.withLabel,
    style: {
      display: "block",
      // Fix conflict with normalize.css and sanitize.css
      padding: 0,
      height: 11,
      // sync with `lineHeight` in `legend` styles
      fontSize: "0.75em",
      visibility: "hidden",
      maxWidth: 0.01,
      transition: e.transitions.create("max-width", {
        duration: 50,
        easing: e.transitions.easing.easeOut
      }),
      whiteSpace: "nowrap",
      "& > span": {
        paddingLeft: 5,
        paddingRight: 5,
        display: "inline-block",
        opacity: 0,
        visibility: "visible"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.withLabel && t.notched,
    style: {
      maxWidth: "100%",
      transition: e.transitions.create("max-width", {
        duration: 100,
        easing: e.transitions.easing.easeOut,
        delay: 50
      })
    }
  }]
})));
function r2(e) {
  const {
    children: t,
    classes: n,
    className: i,
    label: s,
    notched: u,
    ...d
  } = e, p = s != null && s !== "", m = {
    ...e,
    notched: u,
    withLabel: p
  };
  return /* @__PURE__ */ A.jsx(BX, {
    "aria-hidden": !0,
    className: i,
    ownerState: m,
    ...d,
    children: /* @__PURE__ */ A.jsx(UX, {
      ownerState: m,
      children: p ? /* @__PURE__ */ A.jsx("span", {
        children: s
      }) : (
        // notranslate needed while Google Translate will not fix zero-width space issue
        o_ || (o_ = /* @__PURE__ */ A.jsx("span", {
          className: "notranslate",
          "aria-hidden": !0,
          children: "​"
        }))
      )
    })
  });
}
process.env.NODE_ENV !== "production" && (r2.propTypes = {
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The label.
   */
  label: a.node,
  /**
   * If `true`, the outline is notched to accommodate the label.
   */
  notched: a.bool.isRequired,
  /**
   * @ignore
   */
  style: a.object
});
const GX = (e) => {
  const {
    classes: t
  } = e, i = yt({
    root: ["root"],
    notchedOutline: ["notchedOutline"],
    input: ["input"]
  }, mK, t);
  return {
    ...t,
    // forward classes to the InputBase
    ...i
  };
}, WX = Be(PE, {
  shouldForwardProp: (e) => Ya(e) || e === "classes",
  name: "MuiOutlinedInput",
  slot: "Root",
  overridesResolver: OE
})(rn(({
  theme: e
}) => {
  const t = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)";
  return {
    position: "relative",
    borderRadius: (e.vars || e).shape.borderRadius,
    [`&:hover .${Ws.notchedOutline}`]: {
      borderColor: (e.vars || e).palette.text.primary
    },
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      [`&:hover .${Ws.notchedOutline}`]: {
        borderColor: e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)` : t
      }
    },
    [`&.${Ws.focused} .${Ws.notchedOutline}`]: {
      borderWidth: 2
    },
    variants: [...Object.entries(e.palette).filter(to()).map(([n]) => ({
      props: {
        color: n
      },
      style: {
        [`&.${Ws.focused} .${Ws.notchedOutline}`]: {
          borderColor: (e.vars || e).palette[n].main
        }
      }
    })), {
      props: {},
      // to overide the above style
      style: {
        [`&.${Ws.error} .${Ws.notchedOutline}`]: {
          borderColor: (e.vars || e).palette.error.main
        },
        [`&.${Ws.disabled} .${Ws.notchedOutline}`]: {
          borderColor: (e.vars || e).palette.action.disabled
        }
      }
    }, {
      props: ({
        ownerState: n
      }) => n.startAdornment,
      style: {
        paddingLeft: 14
      }
    }, {
      props: ({
        ownerState: n
      }) => n.endAdornment,
      style: {
        paddingRight: 14
      }
    }, {
      props: ({
        ownerState: n
      }) => n.multiline,
      style: {
        padding: "16.5px 14px"
      }
    }, {
      props: ({
        ownerState: n,
        size: i
      }) => n.multiline && i === "small",
      style: {
        padding: "8.5px 14px"
      }
    }]
  };
})), qX = Be(r2, {
  name: "MuiOutlinedInput",
  slot: "NotchedOutline",
  overridesResolver: (e, t) => t.notchedOutline
})(rn(({
  theme: e
}) => {
  const t = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)";
  return {
    borderColor: e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)` : t
  };
})), KX = Be(ME, {
  name: "MuiOutlinedInput",
  slot: "Input",
  overridesResolver: kE
})(rn(({
  theme: e
}) => ({
  padding: "16.5px 14px",
  ...!e.vars && {
    "&:-webkit-autofill": {
      WebkitBoxShadow: e.palette.mode === "light" ? null : "0 0 0 100px #266798 inset",
      WebkitTextFillColor: e.palette.mode === "light" ? null : "#fff",
      caretColor: e.palette.mode === "light" ? null : "#fff",
      borderRadius: "inherit"
    }
  },
  ...e.vars && {
    "&:-webkit-autofill": {
      borderRadius: "inherit"
    },
    [e.getColorSchemeSelector("dark")]: {
      "&:-webkit-autofill": {
        WebkitBoxShadow: "0 0 0 100px #266798 inset",
        WebkitTextFillColor: "#fff",
        caretColor: "#fff"
      }
    }
  },
  variants: [{
    props: {
      size: "small"
    },
    style: {
      padding: "8.5px 14px"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.multiline,
    style: {
      padding: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.startAdornment,
    style: {
      paddingLeft: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.endAdornment,
    style: {
      paddingRight: 0
    }
  }]
}))), NE = /* @__PURE__ */ w.forwardRef(function(t, n) {
  const i = xn({
    props: t,
    name: "MuiOutlinedInput"
  }), {
    components: s = {},
    fullWidth: u = !1,
    inputComponent: d = "input",
    label: p,
    multiline: m = !1,
    notched: v,
    slots: y = {},
    slotProps: C = {},
    type: S = "text",
    ...R
  } = i, O = GX(i), E = Qc(), k = bh({
    props: i,
    muiFormControl: E,
    states: ["color", "disabled", "error", "focused", "hiddenLabel", "size", "required"]
  }), F = {
    ...i,
    color: k.color || "primary",
    disabled: k.disabled,
    error: k.error,
    focused: k.focused,
    formControl: E,
    fullWidth: u,
    hiddenLabel: k.hiddenLabel,
    multiline: m,
    size: k.size,
    type: S
  }, _ = y.root ?? s.Root ?? WX, L = y.input ?? s.Input ?? KX, [M, D] = yn("notchedOutline", {
    elementType: qX,
    className: O.notchedOutline,
    shouldForwardComponentProp: !0,
    ownerState: F,
    externalForwardedProps: {
      slots: y,
      slotProps: C
    },
    additionalProps: {
      label: p != null && p !== "" && k.required ? /* @__PURE__ */ A.jsxs(w.Fragment, {
        children: [p, " ", "*"]
      }) : p
    }
  });
  return /* @__PURE__ */ A.jsx(Ch, {
    slots: {
      root: _,
      input: L
    },
    slotProps: C,
    renderSuffix: (H) => /* @__PURE__ */ A.jsx(M, {
      ...D,
      notched: typeof v < "u" ? v : !!(H.startAdornment || H.filled || H.focused)
    }),
    fullWidth: u,
    inputComponent: d,
    multiline: m,
    ref: n,
    type: S,
    ...R,
    classes: {
      ...O,
      notchedOutline: null
    }
  });
});
process.env.NODE_ENV !== "production" && (NE.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: a.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: a.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: a.oneOfType([a.oneOf(["primary", "secondary"]), a.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: a.shape({
    Input: a.elementType,
    Root: a.elementType
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: a.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: a.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: a.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: a.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: a.bool,
  /**
   * The id of the `input` element.
   */
  id: a.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: a.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: a.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Ea,
  /**
   * The label of the `input`. It is only used for layout. The actual labelling
   * is handled by `InputLabel`.
   */
  label: a.node,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: a.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: a.oneOfType([a.number, a.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: a.oneOfType([a.number, a.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: a.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: a.string,
  /**
   * If `true`, the outline is notched to accommodate the label.
   */
  notched: a.bool,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: a.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: a.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: a.bool,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: a.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: a.oneOfType([a.number, a.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    input: a.object,
    notchedOutline: a.oneOfType([a.func, a.object]),
    root: a.object
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    input: a.elementType,
    notchedOutline: a.elementType,
    root: a.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: a.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: a.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: a.any
});
NE.muiName = "Input";
const YX = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z"
}), "FirstPage"), XX = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z"
}), "LastPage");
function o2(e) {
  return mn("MuiSelect", e);
}
const Pb = bn("MuiSelect", ["root", "select", "multiple", "filled", "outlined", "standard", "disabled", "focused", "icon", "iconOpen", "iconFilled", "iconOutlined", "iconStandard", "nativeInput", "error"]);
var i_;
const QX = Be(e2, {
  name: "MuiSelect",
  slot: "Select",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [
      // Win specificity over the input base
      {
        [`&.${Pb.select}`]: t.select
      },
      {
        [`&.${Pb.select}`]: t[n.variant]
      },
      {
        [`&.${Pb.error}`]: t.error
      },
      {
        [`&.${Pb.multiple}`]: t.multiple
      }
    ];
  }
})({
  // Win specificity over the input base
  [`&.${Pb.select}`]: {
    height: "auto",
    // Resets for multiple select with chips
    minHeight: "1.4375em",
    // Required for select\text-field height consistency
    textOverflow: "ellipsis",
    whiteSpace: "nowrap",
    overflow: "hidden"
  }
}), JX = Be(t2, {
  name: "MuiSelect",
  slot: "Icon",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.icon, n.variant && t[`icon${Ue(n.variant)}`], n.open && t.iconOpen];
  }
})({}), ZX = Be("input", {
  shouldForwardProp: (e) => dj(e) && e !== "classes",
  name: "MuiSelect",
  slot: "NativeInput",
  overridesResolver: (e, t) => t.nativeInput
})({
  bottom: 0,
  left: 0,
  position: "absolute",
  opacity: 0,
  pointerEvents: "none",
  width: "100%",
  boxSizing: "border-box"
});
function a_(e, t) {
  return typeof t == "object" && t !== null ? e === t : String(e) === String(t);
}
function eQ(e) {
  return e == null || typeof e == "string" && !e.trim();
}
const tQ = (e) => {
  const {
    classes: t,
    variant: n,
    disabled: i,
    multiple: s,
    open: u,
    error: d
  } = e, p = {
    select: ["select", n, i && "disabled", s && "multiple", d && "error"],
    icon: ["icon", `icon${Ue(n)}`, u && "iconOpen", i && "disabled"],
    nativeInput: ["nativeInput"]
  };
  return yt(p, o2, t);
}, i2 = /* @__PURE__ */ w.forwardRef(function(t, n) {
  var bt;
  const {
    "aria-describedby": i,
    "aria-label": s,
    autoFocus: u,
    autoWidth: d,
    children: p,
    className: m,
    defaultOpen: v,
    defaultValue: y,
    disabled: C,
    displayEmpty: S,
    error: R = !1,
    IconComponent: O,
    inputRef: E,
    labelId: k,
    MenuProps: F = {},
    multiple: _,
    name: L,
    onBlur: M,
    onChange: D,
    onClose: H,
    onFocus: K,
    onOpen: Q,
    open: z,
    readOnly: I,
    renderValue: G,
    required: W,
    SelectDisplayProps: B = {},
    tabIndex: ee,
    // catching `type` from Input which makes no sense for SelectInput
    type: U,
    value: q,
    variant: Y = "standard",
    ...ne
  } = t, [re, X] = ah({
    controlled: q,
    default: y,
    name: "Select"
  }), [j, ie] = ah({
    controlled: z,
    default: v,
    name: "Select"
  }), fe = w.useRef(null), ce = w.useRef(null), [me, ge] = w.useState(null), {
    current: de
  } = w.useRef(z != null), [pe, be] = w.useState(), Ce = Vr(n, E), Re = w.useCallback((Ge) => {
    ce.current = Ge, Ge && ge(Ge);
  }, []), ue = me == null ? void 0 : me.parentNode;
  w.useImperativeHandle(Ce, () => ({
    focus: () => {
      ce.current.focus();
    },
    node: fe.current,
    value: re
  }), [re]), w.useEffect(() => {
    v && j && me && !de && (be(d ? null : ue.clientWidth), ce.current.focus());
  }, [me, d]), w.useEffect(() => {
    u && ce.current.focus();
  }, [u]), w.useEffect(() => {
    if (!k)
      return;
    const Ge = ao(ce.current).getElementById(k);
    if (Ge) {
      const Et = () => {
        getSelection().isCollapsed && ce.current.focus();
      };
      return Ge.addEventListener("click", Et), () => {
        Ge.removeEventListener("click", Et);
      };
    }
  }, [k]);
  const we = (Ge, Et) => {
    Ge ? Q && Q(Et) : H && H(Et), de || (be(d ? null : ue.clientWidth), ie(Ge));
  }, _e = (Ge) => {
    Ge.button === 0 && (Ge.preventDefault(), ce.current.focus(), we(!0, Ge));
  }, He = (Ge) => {
    we(!1, Ge);
  }, et = w.Children.toArray(p), Ne = (Ge) => {
    const Et = et.find((At) => At.props.value === Ge.target.value);
    Et !== void 0 && (X(Et.props.value), D && D(Ge, Et));
  }, rt = (Ge) => (Et) => {
    let At;
    if (Et.currentTarget.hasAttribute("tabindex")) {
      if (_) {
        At = Array.isArray(re) ? re.slice() : [];
        const pn = re.indexOf(Ge.props.value);
        pn === -1 ? At.push(Ge.props.value) : At.splice(pn, 1);
      } else
        At = Ge.props.value;
      if (Ge.props.onClick && Ge.props.onClick(Et), re !== At && (X(At), D)) {
        const pn = Et.nativeEvent || Et, fn = new pn.constructor(pn.type, pn);
        Object.defineProperty(fn, "target", {
          writable: !0,
          value: {
            value: At,
            name: L
          }
        }), D(fn, Ge);
      }
      _ || we(!1, Et);
    }
  }, it = (Ge) => {
    I || [
      " ",
      "ArrowUp",
      "ArrowDown",
      // The native select doesn't respond to enter on macOS, but it's recommended by
      // https://www.w3.org/WAI/ARIA/apg/patterns/combobox/examples/combobox-select-only/
      "Enter"
    ].includes(Ge.key) && (Ge.preventDefault(), we(!0, Ge));
  }, wt = me !== null && j, gt = (Ge) => {
    !wt && M && (Object.defineProperty(Ge, "target", {
      writable: !0,
      value: {
        value: re,
        name: L
      }
    }), M(Ge));
  };
  delete ne["aria-invalid"];
  let ot, jt;
  const ct = [];
  let Tt = !1, Rt = !1;
  (_0({
    value: re
  }) || S) && (G ? ot = G(re) : Tt = !0);
  const Lt = et.map((Ge) => {
    if (!/* @__PURE__ */ w.isValidElement(Ge))
      return null;
    process.env.NODE_ENV !== "production" && vf.isFragment(Ge) && console.error(["MUI: The Select component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`));
    let Et;
    if (_) {
      if (!Array.isArray(re))
        throw new Error(process.env.NODE_ENV !== "production" ? "MUI: The `value` prop must be an array when using the `Select` component with `multiple`." : Gu(2));
      Et = re.some((At) => a_(At, Ge.props.value)), Et && Tt && ct.push(Ge.props.children);
    } else
      Et = a_(re, Ge.props.value), Et && Tt && (jt = Ge.props.children);
    return Et && (Rt = !0), /* @__PURE__ */ w.cloneElement(Ge, {
      "aria-selected": Et ? "true" : "false",
      onClick: rt(Ge),
      onKeyUp: (At) => {
        At.key === " " && At.preventDefault(), Ge.props.onKeyUp && Ge.props.onKeyUp(At);
      },
      role: "option",
      selected: Et,
      value: void 0,
      // The value is most likely not a valid HTML attribute.
      "data-value": Ge.props.value
      // Instead, we provide it as a data attribute.
    });
  });
  process.env.NODE_ENV !== "production" && w.useEffect(() => {
    if (!Rt && !_ && re !== "") {
      const Ge = et.map((Et) => Et.props.value);
      console.warn([`MUI: You have provided an out-of-range value \`${re}\` for the select ${L ? `(name="${L}") ` : ""}component.`, "Consider providing a value that matches one of the available options or ''.", `The available values are ${Ge.filter((Et) => Et != null).map((Et) => `\`${Et}\``).join(", ") || '""'}.`].join(`
`));
    }
  }, [Rt, et, _, L, re]), Tt && (_ ? ct.length === 0 ? ot = null : ot = ct.reduce((Ge, Et, At) => (Ge.push(Et), At < ct.length - 1 && Ge.push(", "), Ge), []) : ot = jt);
  let vt = pe;
  !d && de && me && (vt = ue.clientWidth);
  let Qe;
  typeof ee < "u" ? Qe = ee : Qe = C ? null : 0;
  const Oe = B.id || (L ? `mui-component-select-${L}` : void 0), Me = {
    ...t,
    variant: Y,
    value: re,
    open: wt,
    error: R
  }, ht = tQ(Me), xt = {
    ...F.PaperProps,
    ...(bt = F.slotProps) == null ? void 0 : bt.paper
  }, zt = Sr();
  return /* @__PURE__ */ A.jsxs(w.Fragment, {
    children: [/* @__PURE__ */ A.jsx(QX, {
      as: "div",
      ref: Re,
      tabIndex: Qe,
      role: "combobox",
      "aria-controls": wt ? zt : void 0,
      "aria-disabled": C ? "true" : void 0,
      "aria-expanded": wt ? "true" : "false",
      "aria-haspopup": "listbox",
      "aria-label": s,
      "aria-labelledby": [k, Oe].filter(Boolean).join(" ") || void 0,
      "aria-describedby": i,
      "aria-required": W ? "true" : void 0,
      "aria-invalid": R ? "true" : void 0,
      onKeyDown: it,
      onMouseDown: C || I ? null : _e,
      onBlur: gt,
      onFocus: K,
      ...B,
      ownerState: Me,
      className: nt(B.className, ht.select, m),
      id: Oe,
      children: eQ(ot) ? (
        // notranslate needed while Google Translate will not fix zero-width space issue
        i_ || (i_ = /* @__PURE__ */ A.jsx("span", {
          className: "notranslate",
          "aria-hidden": !0,
          children: "​"
        }))
      ) : ot
    }), /* @__PURE__ */ A.jsx(ZX, {
      "aria-invalid": R,
      value: Array.isArray(re) ? re.join(",") : re,
      name: L,
      ref: fe,
      "aria-hidden": !0,
      onChange: Ne,
      tabIndex: -1,
      disabled: C,
      className: ht.nativeInput,
      autoFocus: u,
      required: W,
      ...ne,
      ownerState: Me
    }), /* @__PURE__ */ A.jsx(JX, {
      as: O,
      className: ht.icon,
      ownerState: Me
    }), /* @__PURE__ */ A.jsx(Zj, {
      id: `menu-${L || ""}`,
      anchorEl: ue,
      open: wt,
      onClose: He,
      anchorOrigin: {
        vertical: "bottom",
        horizontal: "center"
      },
      transformOrigin: {
        vertical: "top",
        horizontal: "center"
      },
      ...F,
      slotProps: {
        ...F.slotProps,
        list: {
          "aria-labelledby": k,
          role: "listbox",
          "aria-multiselectable": _ ? "true" : void 0,
          disableListWrap: !0,
          id: zt,
          ...F.MenuListProps
        },
        paper: {
          ...xt,
          style: {
            minWidth: vt,
            ...xt != null ? xt.style : null
          }
        }
      },
      children: Lt
    })]
  });
});
process.env.NODE_ENV !== "production" && (i2.propTypes = {
  /**
   * @ignore
   */
  "aria-describedby": a.string,
  /**
   * @ignore
   */
  "aria-label": a.string,
  /**
   * @ignore
   */
  autoFocus: a.bool,
  /**
   * If `true`, the width of the popover will automatically be set according to the items inside the
   * menu, otherwise it will be at least the width of the select input.
   */
  autoWidth: a.bool,
  /**
   * The option elements to populate the select with.
   * Can be some `<MenuItem>` elements.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * The CSS class name of the select element.
   */
  className: a.string,
  /**
   * If `true`, the component is toggled on mount. Use when the component open state is not controlled.
   * You can only use it when the `native` prop is `false` (default).
   */
  defaultOpen: a.bool,
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: a.any,
  /**
   * If `true`, the select is disabled.
   */
  disabled: a.bool,
  /**
   * If `true`, the selected item is displayed even if its value is empty.
   */
  displayEmpty: a.bool,
  /**
   * If `true`, the `select input` will indicate an error.
   */
  error: a.bool,
  /**
   * The icon that displays the arrow.
   */
  IconComponent: a.elementType.isRequired,
  /**
   * Imperative handle implementing `{ value: T, node: HTMLElement, focus(): void }`
   * Equivalent to `ref`
   */
  inputRef: Ea,
  /**
   * The ID of an element that acts as an additional label. The Select will
   * be labelled by the additional label and the selected value.
   */
  labelId: a.string,
  /**
   * Props applied to the [`Menu`](/material-ui/api/menu/) element.
   */
  MenuProps: a.object,
  /**
   * If `true`, `value` must be an array and the menu will support multiple selections.
   */
  multiple: a.bool,
  /**
   * Name attribute of the `select` or hidden `input` element.
   */
  name: a.string,
  /**
   * @ignore
   */
  onBlur: a.func,
  /**
   * Callback fired when a menu item is selected.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (any).
   * @param {object} [child] The react element that was selected.
   */
  onChange: a.func,
  /**
   * Callback fired when the component requests to be closed.
   * Use in controlled mode (see open).
   *
   * @param {object} event The event source of the callback.
   */
  onClose: a.func,
  /**
   * @ignore
   */
  onFocus: a.func,
  /**
   * Callback fired when the component requests to be opened.
   * Use in controlled mode (see open).
   *
   * @param {object} event The event source of the callback.
   */
  onOpen: a.func,
  /**
   * If `true`, the component is shown.
   */
  open: a.bool,
  /**
   * @ignore
   */
  readOnly: a.bool,
  /**
   * Render the selected value.
   *
   * @param {any} value The `value` provided to the component.
   * @returns {ReactNode}
   */
  renderValue: a.func,
  /**
   * If `true`, the component is required.
   */
  required: a.bool,
  /**
   * Props applied to the clickable div element.
   */
  SelectDisplayProps: a.object,
  /**
   * @ignore
   */
  tabIndex: a.oneOfType([a.number, a.string]),
  /**
   * @ignore
   */
  type: a.any,
  /**
   * The input value.
   */
  value: a.any,
  /**
   * The variant to use.
   */
  variant: a.oneOf(["standard", "outlined", "filled"])
});
const nQ = (e) => {
  const {
    classes: t
  } = e, i = yt({
    root: ["root"]
  }, o2, t);
  return {
    ...t,
    ...i
  };
}, UP = {
  name: "MuiSelect",
  overridesResolver: (e, t) => t.root,
  shouldForwardProp: (e) => Ya(e) && e !== "variant",
  slot: "Root"
}, rQ = Be(DE, UP)(""), oQ = Be(NE, UP)(""), iQ = Be(IE, UP)(""), ov = /* @__PURE__ */ w.forwardRef(function(t, n) {
  const i = xn({
    name: "MuiSelect",
    props: t
  }), {
    autoWidth: s = !1,
    children: u,
    classes: d = {},
    className: p,
    defaultOpen: m = !1,
    displayEmpty: v = !1,
    IconComponent: y = Dj,
    id: C,
    input: S,
    inputProps: R,
    label: O,
    labelId: E,
    MenuProps: k,
    multiple: F = !1,
    native: _ = !1,
    onClose: L,
    onOpen: M,
    open: D,
    renderValue: H,
    SelectDisplayProps: K,
    variant: Q = "outlined",
    ...z
  } = i, I = _ ? n2 : i2, G = Qc(), W = bh({
    props: i,
    muiFormControl: G,
    states: ["variant", "error"]
  }), B = W.variant || Q, ee = {
    ...i,
    variant: B,
    classes: d
  }, U = nQ(ee), {
    root: q,
    ...Y
  } = U, ne = S || {
    standard: /* @__PURE__ */ A.jsx(rQ, {
      ownerState: ee
    }),
    outlined: /* @__PURE__ */ A.jsx(oQ, {
      label: O,
      ownerState: ee
    }),
    filled: /* @__PURE__ */ A.jsx(iQ, {
      ownerState: ee
    })
  }[B], re = Vr(n, yh(ne));
  return /* @__PURE__ */ A.jsx(w.Fragment, {
    children: /* @__PURE__ */ w.cloneElement(ne, {
      // Most of the logic is implemented in `SelectInput`.
      // The `Select` component is a simple API wrapper to expose something better to play with.
      inputComponent: I,
      inputProps: {
        children: u,
        error: W.error,
        IconComponent: y,
        variant: B,
        type: void 0,
        // We render a select. We can ignore the type provided by the `Input`.
        multiple: F,
        ..._ ? {
          id: C
        } : {
          autoWidth: s,
          defaultOpen: m,
          displayEmpty: v,
          labelId: E,
          MenuProps: k,
          onClose: L,
          onOpen: M,
          open: D,
          renderValue: H,
          SelectDisplayProps: {
            id: C,
            ...K
          }
        },
        ...R,
        classes: R ? Ci(Y, R.classes) : Y,
        ...S ? S.props.inputProps : {}
      },
      ...(F && _ || v) && B === "outlined" ? {
        notched: !0
      } : {},
      ref: re,
      className: nt(ne.props.className, p, U.root),
      // If a custom input is provided via 'input' prop, do not allow 'variant' to be propagated to it's root element. See https://github.com/mui/material-ui/issues/33894.
      ...!S && {
        variant: B
      },
      ...z
    })
  });
});
process.env.NODE_ENV !== "production" && (ov.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the width of the popover will automatically be set according to the items inside the
   * menu, otherwise it will be at least the width of the select input.
   * @default false
   */
  autoWidth: a.bool,
  /**
   * The option elements to populate the select with.
   * Can be some `MenuItem` when `native` is false and `option` when `native` is true.
   *
   * ⚠️The `MenuItem` elements **must** be direct descendants when `native` is false.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   * @default {}
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * If `true`, the component is initially open. Use when the component open state is not controlled (i.e. the `open` prop is not defined).
   * You can only use it when the `native` prop is `false` (default).
   * @default false
   */
  defaultOpen: a.bool,
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: a.any,
  /**
   * If `true`, a value is displayed even if no items are selected.
   *
   * In order to display a meaningful value, a function can be passed to the `renderValue` prop which
   * returns the value to be displayed when no items are selected.
   *
   * ⚠️ When using this prop, make sure the label doesn't overlap with the empty displayed value.
   * The label should either be hidden or forced to a shrunk state.
   * @default false
   */
  displayEmpty: a.bool,
  /**
   * The icon that displays the arrow.
   * @default ArrowDropDownIcon
   */
  IconComponent: a.elementType,
  /**
   * The `id` of the wrapper element or the `select` element when `native`.
   */
  id: a.string,
  /**
   * An `Input` element; does not have to be a material-ui specific `Input`.
   */
  input: a.element,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * When `native` is `true`, the attributes are applied on the `select` element.
   */
  inputProps: a.object,
  /**
   * See [OutlinedInput#label](https://mui.com/material-ui/api/outlined-input/#props)
   */
  label: a.node,
  /**
   * The ID of an element that acts as an additional label. The Select will
   * be labelled by the additional label and the selected value.
   */
  labelId: a.string,
  /**
   * Props applied to the [`Menu`](https://mui.com/material-ui/api/menu/) element.
   */
  MenuProps: a.object,
  /**
   * If `true`, `value` must be an array and the menu will support multiple selections.
   * @default false
   */
  multiple: a.bool,
  /**
   * If `true`, the component uses a native `select` element.
   * @default false
   */
  native: a.bool,
  /**
   * Callback fired when a menu item is selected.
   *
   * @param {SelectChangeEvent<Value>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (any).
   * **Warning**: This is a generic event, not a change event, unless the change event is caused by browser autofill.
   * @param {object} [child] The react element that was selected when `native` is `false` (default).
   */
  onChange: a.func,
  /**
   * Callback fired when the component requests to be closed.
   * Use it in either controlled (see the `open` prop), or uncontrolled mode (to detect when the Select collapses).
   *
   * @param {object} event The event source of the callback.
   */
  onClose: a.func,
  /**
   * Callback fired when the component requests to be opened.
   * Use it in either controlled (see the `open` prop), or uncontrolled mode (to detect when the Select expands).
   *
   * @param {object} event The event source of the callback.
   */
  onOpen: a.func,
  /**
   * If `true`, the component is shown.
   * You can only use it when the `native` prop is `false` (default).
   */
  open: a.bool,
  /**
   * Render the selected value.
   * You can only use it when the `native` prop is `false` (default).
   *
   * @param {any} value The `value` provided to the component.
   * @returns {ReactNode}
   */
  renderValue: a.func,
  /**
   * Props applied to the clickable div element.
   */
  SelectDisplayProps: a.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The `input` value. Providing an empty string will select no options.
   * Set to an empty string `''` if you don't want any of the available options to be selected.
   *
   * If the value is an object it must have reference equality with the option in order to be selected.
   * If the value is not an object, the string representation must match with the string representation of the option in order to be selected.
   */
  value: a.oneOfType([a.oneOf([""]), a.any]),
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: a.oneOf(["filled", "outlined", "standard"])
});
ov.muiName = "Select";
function aQ(e) {
  return mn("MuiSkeleton", e);
}
bn("MuiSkeleton", ["root", "text", "rectangular", "rounded", "circular", "pulse", "wave", "withChildren", "fitContent", "heightAuto"]);
const sQ = (e) => {
  const {
    classes: t,
    variant: n,
    animation: i,
    hasChildren: s,
    width: u,
    height: d
  } = e;
  return yt({
    root: ["root", n, i, s && "withChildren", s && !u && "fitContent", s && !d && "heightAuto"]
  }, aQ, t);
}, Lk = Xu`
  0% {
    opacity: 1;
  }

  50% {
    opacity: 0.4;
  }

  100% {
    opacity: 1;
  }
`, Fk = Xu`
  0% {
    transform: translateX(-100%);
  }

  50% {
    /* +0.5s of delay between each loop */
    transform: translateX(100%);
  }

  100% {
    transform: translateX(100%);
  }
`, lQ = typeof Lk != "string" ? xf`
        animation: ${Lk} 2s ease-in-out 0.5s infinite;
      ` : null, uQ = typeof Fk != "string" ? xf`
        &::after {
          animation: ${Fk} 2s linear 0.5s infinite;
        }
      ` : null, cQ = Be("span", {
  name: "MuiSkeleton",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[n.variant], n.animation !== !1 && t[n.animation], n.hasChildren && t.withChildren, n.hasChildren && !n.width && t.fitContent, n.hasChildren && !n.height && t.heightAuto];
  }
})(rn(({
  theme: e
}) => {
  const t = O8(e.shape.borderRadius) || "px", n = k8(e.shape.borderRadius);
  return {
    display: "block",
    // Create a "on paper" color with sufficient contrast retaining the color
    backgroundColor: e.vars ? e.vars.palette.Skeleton.bg : $n(e.palette.text.primary, e.palette.mode === "light" ? 0.11 : 0.13),
    height: "1.2em",
    variants: [{
      props: {
        variant: "text"
      },
      style: {
        marginTop: 0,
        marginBottom: 0,
        height: "auto",
        transformOrigin: "0 55%",
        transform: "scale(1, 0.60)",
        borderRadius: `${n}${t}/${Math.round(n / 0.6 * 10) / 10}${t}`,
        "&:empty:before": {
          content: '"\\00a0"'
        }
      }
    }, {
      props: {
        variant: "circular"
      },
      style: {
        borderRadius: "50%"
      }
    }, {
      props: {
        variant: "rounded"
      },
      style: {
        borderRadius: (e.vars || e).shape.borderRadius
      }
    }, {
      props: ({
        ownerState: i
      }) => i.hasChildren,
      style: {
        "& > *": {
          visibility: "hidden"
        }
      }
    }, {
      props: ({
        ownerState: i
      }) => i.hasChildren && !i.width,
      style: {
        maxWidth: "fit-content"
      }
    }, {
      props: ({
        ownerState: i
      }) => i.hasChildren && !i.height,
      style: {
        height: "auto"
      }
    }, {
      props: {
        animation: "pulse"
      },
      style: lQ || {
        animation: `${Lk} 2s ease-in-out 0.5s infinite`
      }
    }, {
      props: {
        animation: "wave"
      },
      style: {
        position: "relative",
        overflow: "hidden",
        /* Fix bug in Safari https://bugs.webkit.org/show_bug.cgi?id=68196 */
        WebkitMaskImage: "-webkit-radial-gradient(white, black)",
        "&::after": {
          background: `linear-gradient(
                90deg,
                transparent,
                ${(e.vars || e).palette.action.hover},
                transparent
              )`,
          content: '""',
          position: "absolute",
          transform: "translateX(-100%)",
          bottom: 0,
          left: 0,
          right: 0,
          top: 0
        }
      }
    }, {
      props: {
        animation: "wave"
      },
      style: uQ || {
        "&::after": {
          animation: `${Fk} 2s linear 0.5s infinite`
        }
      }
    }]
  };
})), a2 = /* @__PURE__ */ w.forwardRef(function(t, n) {
  const i = xn({
    props: t,
    name: "MuiSkeleton"
  }), {
    animation: s = "pulse",
    className: u,
    component: d = "span",
    height: p,
    style: m,
    variant: v = "text",
    width: y,
    ...C
  } = i, S = {
    ...i,
    animation: s,
    component: d,
    variant: v,
    hasChildren: !!C.children
  }, R = sQ(S);
  return /* @__PURE__ */ A.jsx(cQ, {
    as: d,
    ref: n,
    className: nt(R.root, u),
    ownerState: S,
    ...C,
    style: {
      width: y,
      height: p,
      ...m
    }
  });
});
process.env.NODE_ENV !== "production" && (a2.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The animation.
   * If `false` the animation effect is disabled.
   * @default 'pulse'
   */
  animation: a.oneOf(["pulse", "wave", !1]),
  /**
   * Optional children to infer width and height from.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * Height of the skeleton.
   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.
   */
  height: a.oneOfType([a.number, a.string]),
  /**
   * @ignore
   */
  style: a.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The type of content that will be rendered.
   * @default 'text'
   */
  variant: a.oneOfType([a.oneOf(["circular", "rectangular", "rounded", "text"]), a.string]),
  /**
   * Width of the skeleton.
   * Useful when the skeleton is inside an inline element with no width of its own.
   */
  width: a.oneOfType([a.number, a.string])
});
function dQ(e) {
  return mn("MuiTooltip", e);
}
const ko = bn("MuiTooltip", ["popper", "popperInteractive", "popperArrow", "popperClose", "tooltip", "tooltipArrow", "touch", "tooltipPlacementLeft", "tooltipPlacementRight", "tooltipPlacementTop", "tooltipPlacementBottom", "arrow"]);
function fQ(e) {
  return Math.round(e * 1e5) / 1e5;
}
const pQ = (e) => {
  const {
    classes: t,
    disableInteractive: n,
    arrow: i,
    touch: s,
    placement: u
  } = e, d = {
    popper: ["popper", !n && "popperInteractive", i && "popperArrow"],
    tooltip: ["tooltip", i && "tooltipArrow", s && "touch", `tooltipPlacement${Ue(u.split("-")[0])}`],
    arrow: ["arrow"]
  };
  return yt(d, dQ, t);
}, hQ = Be(Rf, {
  name: "MuiTooltip",
  slot: "Popper",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.popper, !n.disableInteractive && t.popperInteractive, n.arrow && t.popperArrow, !n.open && t.popperClose];
  }
})(rn(({
  theme: e
}) => ({
  zIndex: (e.vars || e).zIndex.tooltip,
  pointerEvents: "none",
  variants: [{
    props: ({
      ownerState: t
    }) => !t.disableInteractive,
    style: {
      pointerEvents: "auto"
    }
  }, {
    props: ({
      open: t
    }) => !t,
    style: {
      pointerEvents: "none"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.arrow,
    style: {
      [`&[data-popper-placement*="bottom"] .${ko.arrow}`]: {
        top: 0,
        marginTop: "-0.71em",
        "&::before": {
          transformOrigin: "0 100%"
        }
      },
      [`&[data-popper-placement*="top"] .${ko.arrow}`]: {
        bottom: 0,
        marginBottom: "-0.71em",
        "&::before": {
          transformOrigin: "100% 0"
        }
      },
      [`&[data-popper-placement*="right"] .${ko.arrow}`]: {
        height: "1em",
        width: "0.71em",
        "&::before": {
          transformOrigin: "100% 100%"
        }
      },
      [`&[data-popper-placement*="left"] .${ko.arrow}`]: {
        height: "1em",
        width: "0.71em",
        "&::before": {
          transformOrigin: "0 0"
        }
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.arrow && !t.isRtl,
    style: {
      [`&[data-popper-placement*="right"] .${ko.arrow}`]: {
        left: 0,
        marginLeft: "-0.71em"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.arrow && !!t.isRtl,
    style: {
      [`&[data-popper-placement*="right"] .${ko.arrow}`]: {
        right: 0,
        marginRight: "-0.71em"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.arrow && !t.isRtl,
    style: {
      [`&[data-popper-placement*="left"] .${ko.arrow}`]: {
        right: 0,
        marginRight: "-0.71em"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.arrow && !!t.isRtl,
    style: {
      [`&[data-popper-placement*="left"] .${ko.arrow}`]: {
        left: 0,
        marginLeft: "-0.71em"
      }
    }
  }]
}))), mQ = Be("div", {
  name: "MuiTooltip",
  slot: "Tooltip",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.tooltip, n.touch && t.touch, n.arrow && t.tooltipArrow, t[`tooltipPlacement${Ue(n.placement.split("-")[0])}`]];
  }
})(rn(({
  theme: e
}) => ({
  backgroundColor: e.vars ? e.vars.palette.Tooltip.bg : $n(e.palette.grey[700], 0.92),
  borderRadius: (e.vars || e).shape.borderRadius,
  color: (e.vars || e).palette.common.white,
  fontFamily: e.typography.fontFamily,
  padding: "4px 8px",
  fontSize: e.typography.pxToRem(11),
  maxWidth: 300,
  margin: 2,
  wordWrap: "break-word",
  fontWeight: e.typography.fontWeightMedium,
  [`.${ko.popper}[data-popper-placement*="left"] &`]: {
    transformOrigin: "right center"
  },
  [`.${ko.popper}[data-popper-placement*="right"] &`]: {
    transformOrigin: "left center"
  },
  [`.${ko.popper}[data-popper-placement*="top"] &`]: {
    transformOrigin: "center bottom",
    marginBottom: "14px"
  },
  [`.${ko.popper}[data-popper-placement*="bottom"] &`]: {
    transformOrigin: "center top",
    marginTop: "14px"
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.arrow,
    style: {
      position: "relative",
      margin: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.touch,
    style: {
      padding: "8px 16px",
      fontSize: e.typography.pxToRem(14),
      lineHeight: `${fQ(16 / 14)}em`,
      fontWeight: e.typography.fontWeightRegular
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.isRtl,
    style: {
      [`.${ko.popper}[data-popper-placement*="left"] &`]: {
        marginRight: "14px"
      },
      [`.${ko.popper}[data-popper-placement*="right"] &`]: {
        marginLeft: "14px"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.isRtl && t.touch,
    style: {
      [`.${ko.popper}[data-popper-placement*="left"] &`]: {
        marginRight: "24px"
      },
      [`.${ko.popper}[data-popper-placement*="right"] &`]: {
        marginLeft: "24px"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => !!t.isRtl,
    style: {
      [`.${ko.popper}[data-popper-placement*="left"] &`]: {
        marginLeft: "14px"
      },
      [`.${ko.popper}[data-popper-placement*="right"] &`]: {
        marginRight: "14px"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => !!t.isRtl && t.touch,
    style: {
      [`.${ko.popper}[data-popper-placement*="left"] &`]: {
        marginLeft: "24px"
      },
      [`.${ko.popper}[data-popper-placement*="right"] &`]: {
        marginRight: "24px"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.touch,
    style: {
      [`.${ko.popper}[data-popper-placement*="top"] &`]: {
        marginBottom: "24px"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.touch,
    style: {
      [`.${ko.popper}[data-popper-placement*="bottom"] &`]: {
        marginTop: "24px"
      }
    }
  }]
}))), gQ = Be("span", {
  name: "MuiTooltip",
  slot: "Arrow",
  overridesResolver: (e, t) => t.arrow
})(rn(({
  theme: e
}) => ({
  overflow: "hidden",
  position: "absolute",
  width: "1em",
  height: "0.71em",
  boxSizing: "border-box",
  color: e.vars ? e.vars.palette.Tooltip.bg : $n(e.palette.grey[700], 0.9),
  "&::before": {
    content: '""',
    margin: "auto",
    display: "block",
    width: "100%",
    height: "100%",
    backgroundColor: "currentColor",
    transform: "rotate(45deg)"
  }
})));
let t0 = !1;
const s_ = new wE();
let Mb = {
  x: 0,
  y: 0
};
function n0(e, t) {
  return (n, ...i) => {
    t && t(n, ...i), e(n, ...i);
  };
}
const s2 = /* @__PURE__ */ w.forwardRef(function(t, n) {
  const i = xn({
    props: t,
    name: "MuiTooltip"
  }), {
    arrow: s = !1,
    children: u,
    classes: d,
    components: p = {},
    componentsProps: m = {},
    describeChild: v = !1,
    disableFocusListener: y = !1,
    disableHoverListener: C = !1,
    disableInteractive: S = !1,
    disableTouchListener: R = !1,
    enterDelay: O = 100,
    enterNextDelay: E = 0,
    enterTouchDelay: k = 700,
    followCursor: F = !1,
    id: _,
    leaveDelay: L = 0,
    leaveTouchDelay: M = 1500,
    onClose: D,
    onOpen: H,
    open: K,
    placement: Q = "bottom",
    PopperComponent: z,
    PopperProps: I = {},
    slotProps: G = {},
    slots: W = {},
    title: B,
    TransitionComponent: ee,
    TransitionProps: U,
    ...q
  } = i, Y = /* @__PURE__ */ w.isValidElement(u) ? u : /* @__PURE__ */ A.jsx("span", {
    children: u
  }), ne = rv(), re = zi(), [X, j] = w.useState(), [ie, fe] = w.useState(null), ce = w.useRef(!1), me = S || F, ge = ps(), de = ps(), pe = ps(), be = ps(), [Ce, Re] = ah({
    controlled: K,
    default: !1,
    name: "Tooltip",
    state: "open"
  });
  let ue = Ce;
  if (process.env.NODE_ENV !== "production") {
    const {
      current: Ut
    } = w.useRef(K !== void 0);
    w.useEffect(() => {
      X && X.disabled && !Ut && B !== "" && X.tagName.toLowerCase() === "button" && console.warn(["MUI: You are providing a disabled `button` child to the Tooltip component.", "A disabled element does not fire events.", "Tooltip needs to listen to the child element's events to display the title.", "", "Add a simple wrapper element, such as a `span`."].join(`
`));
    }, [B, X, Ut]);
  }
  const we = Sr(_), _e = w.useRef(), He = Nn(() => {
    _e.current !== void 0 && (document.body.style.WebkitUserSelect = _e.current, _e.current = void 0), be.clear();
  });
  w.useEffect(() => He, [He]);
  const et = (Ut) => {
    s_.clear(), t0 = !0, Re(!0), H && !ue && H(Ut);
  }, Ne = Nn(
    /**
     * @param {React.SyntheticEvent | Event} event
     */
    (Ut) => {
      s_.start(800 + L, () => {
        t0 = !1;
      }), Re(!1), D && ue && D(Ut), ge.start(ne.transitions.duration.shortest, () => {
        ce.current = !1;
      });
    }
  ), rt = (Ut) => {
    ce.current && Ut.type !== "touchstart" || (X && X.removeAttribute("title"), de.clear(), pe.clear(), O || t0 && E ? de.start(t0 ? E : O, () => {
      et(Ut);
    }) : et(Ut));
  }, it = (Ut) => {
    de.clear(), pe.start(L, () => {
      Ne(Ut);
    });
  }, [, wt] = w.useState(!1), gt = (Ut) => {
    O0(Ut.target) || (wt(!1), it(Ut));
  }, ot = (Ut) => {
    X || j(Ut.currentTarget), O0(Ut.target) && (wt(!0), rt(Ut));
  }, jt = (Ut) => {
    ce.current = !0;
    const fr = Y.props;
    fr.onTouchStart && fr.onTouchStart(Ut);
  }, ct = (Ut) => {
    jt(Ut), pe.clear(), ge.clear(), He(), _e.current = document.body.style.WebkitUserSelect, document.body.style.WebkitUserSelect = "none", be.start(k, () => {
      document.body.style.WebkitUserSelect = _e.current, rt(Ut);
    });
  }, Tt = (Ut) => {
    Y.props.onTouchEnd && Y.props.onTouchEnd(Ut), He(), pe.start(M, () => {
      Ne(Ut);
    });
  };
  w.useEffect(() => {
    if (!ue)
      return;
    function Ut(fr) {
      fr.key === "Escape" && Ne(fr);
    }
    return document.addEventListener("keydown", Ut), () => {
      document.removeEventListener("keydown", Ut);
    };
  }, [Ne, ue]);
  const Rt = Vr(yh(Y), j, n);
  !B && B !== 0 && (ue = !1);
  const Lt = w.useRef(), vt = (Ut) => {
    const fr = Y.props;
    fr.onMouseMove && fr.onMouseMove(Ut), Mb = {
      x: Ut.clientX,
      y: Ut.clientY
    }, Lt.current && Lt.current.update();
  }, Qe = {}, Oe = typeof B == "string";
  v ? (Qe.title = !ue && Oe && !C ? B : null, Qe["aria-describedby"] = ue ? we : null) : (Qe["aria-label"] = Oe ? B : null, Qe["aria-labelledby"] = ue && !Oe ? we : null);
  const Me = {
    ...Qe,
    ...q,
    ...Y.props,
    className: nt(q.className, Y.props.className),
    onTouchStart: jt,
    ref: Rt,
    ...F ? {
      onMouseMove: vt
    } : {}
  };
  process.env.NODE_ENV !== "production" && (Me["data-mui-internal-clone-element"] = !0, w.useEffect(() => {
    X && !X.getAttribute("data-mui-internal-clone-element") && console.error(["MUI: The `children` component of the Tooltip is not forwarding its props correctly.", "Please make sure that props are spread on the same element that the ref is applied to."].join(`
`));
  }, [X]));
  const ht = {};
  R || (Me.onTouchStart = ct, Me.onTouchEnd = Tt), C || (Me.onMouseOver = n0(rt, Me.onMouseOver), Me.onMouseLeave = n0(it, Me.onMouseLeave), me || (ht.onMouseOver = rt, ht.onMouseLeave = it)), y || (Me.onFocus = n0(ot, Me.onFocus), Me.onBlur = n0(gt, Me.onBlur), me || (ht.onFocus = ot, ht.onBlur = gt)), process.env.NODE_ENV !== "production" && Y.props.title && console.error(["MUI: You have provided a `title` prop to the child of <Tooltip />.", `Remove this title prop \`${Y.props.title}\` or the Tooltip component.`].join(`
`));
  const xt = {
    ...i,
    isRtl: re,
    arrow: s,
    disableInteractive: me,
    placement: Q,
    PopperComponentProp: z,
    touch: ce.current
  }, zt = typeof G.popper == "function" ? G.popper(xt) : G.popper, bt = w.useMemo(() => {
    var fr, Ct;
    let Ut = [{
      name: "arrow",
      enabled: !!ie,
      options: {
        element: ie,
        padding: 4
      }
    }];
    return (fr = I.popperOptions) != null && fr.modifiers && (Ut = Ut.concat(I.popperOptions.modifiers)), (Ct = zt == null ? void 0 : zt.popperOptions) != null && Ct.modifiers && (Ut = Ut.concat(zt.popperOptions.modifiers)), {
      ...I.popperOptions,
      ...zt == null ? void 0 : zt.popperOptions,
      modifiers: Ut
    };
  }, [ie, I.popperOptions, zt == null ? void 0 : zt.popperOptions]), Ge = pQ(xt), Et = typeof G.transition == "function" ? G.transition(xt) : G.transition, At = {
    slots: {
      popper: p.Popper,
      transition: p.Transition ?? ee,
      tooltip: p.Tooltip,
      arrow: p.Arrow,
      ...W
    },
    slotProps: {
      arrow: G.arrow ?? m.arrow,
      popper: {
        ...I,
        ...zt ?? m.popper
      },
      // resolvedPopperProps can be spread because it's already an object
      tooltip: G.tooltip ?? m.tooltip,
      transition: {
        ...U,
        ...Et ?? m.transition
      }
    }
  }, [pn, fn] = yn("popper", {
    elementType: hQ,
    externalForwardedProps: At,
    ownerState: xt,
    className: nt(Ge.popper, I == null ? void 0 : I.className)
  }), [mr, qn] = yn("transition", {
    elementType: Yg,
    externalForwardedProps: At,
    ownerState: xt
  }), [Nr, gr] = yn("tooltip", {
    elementType: mQ,
    className: Ge.tooltip,
    externalForwardedProps: At,
    ownerState: xt
  }), [Po, Mo] = yn("arrow", {
    elementType: gQ,
    className: Ge.arrow,
    externalForwardedProps: At,
    ownerState: xt,
    ref: fe
  });
  return /* @__PURE__ */ A.jsxs(w.Fragment, {
    children: [/* @__PURE__ */ w.cloneElement(Y, Me), /* @__PURE__ */ A.jsx(pn, {
      as: z ?? Rf,
      placement: Q,
      anchorEl: F ? {
        getBoundingClientRect: () => ({
          top: Mb.y,
          left: Mb.x,
          right: Mb.x,
          bottom: Mb.y,
          width: 0,
          height: 0
        })
      } : X,
      popperRef: Lt,
      open: X ? ue : !1,
      id: we,
      transition: !0,
      ...ht,
      ...fn,
      popperOptions: bt,
      children: ({
        TransitionProps: Ut
      }) => /* @__PURE__ */ A.jsx(mr, {
        timeout: ne.transitions.duration.shorter,
        ...Ut,
        ...qn,
        children: /* @__PURE__ */ A.jsxs(Nr, {
          ...gr,
          children: [B, s ? /* @__PURE__ */ A.jsx(Po, {
            ...Mo
          }) : null]
        })
      })
    })]
  });
});
process.env.NODE_ENV !== "production" && (s2.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, adds an arrow to the tooltip.
   * @default false
   */
  arrow: a.bool,
  /**
   * Tooltip reference element.
   */
  children: vh.isRequired,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: a.shape({
    Arrow: a.elementType,
    Popper: a.elementType,
    Tooltip: a.elementType,
    Transition: a.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: a.shape({
    arrow: a.object,
    popper: a.object,
    tooltip: a.object,
    transition: a.object
  }),
  /**
   * Set to `true` if the `title` acts as an accessible description.
   * By default the `title` acts as an accessible label for the child.
   * @default false
   */
  describeChild: a.bool,
  /**
   * Do not respond to focus-visible events.
   * @default false
   */
  disableFocusListener: a.bool,
  /**
   * Do not respond to hover events.
   * @default false
   */
  disableHoverListener: a.bool,
  /**
   * Makes a tooltip not interactive, i.e. it will close when the user
   * hovers over the tooltip before the `leaveDelay` is expired.
   * @default false
   */
  disableInteractive: a.bool,
  /**
   * Do not respond to long press touch events.
   * @default false
   */
  disableTouchListener: a.bool,
  /**
   * The number of milliseconds to wait before showing the tooltip.
   * This prop won't impact the enter touch delay (`enterTouchDelay`).
   * @default 100
   */
  enterDelay: a.number,
  /**
   * The number of milliseconds to wait before showing the tooltip when one was already recently opened.
   * @default 0
   */
  enterNextDelay: a.number,
  /**
   * The number of milliseconds a user must touch the element before showing the tooltip.
   * @default 700
   */
  enterTouchDelay: a.number,
  /**
   * If `true`, the tooltip follow the cursor over the wrapped element.
   * @default false
   */
  followCursor: a.bool,
  /**
   * This prop is used to help implement the accessibility logic.
   * If you don't provide this prop. It falls back to a randomly generated id.
   */
  id: a.string,
  /**
   * The number of milliseconds to wait before hiding the tooltip.
   * This prop won't impact the leave touch delay (`leaveTouchDelay`).
   * @default 0
   */
  leaveDelay: a.number,
  /**
   * The number of milliseconds after the user stops touching an element before hiding the tooltip.
   * @default 1500
   */
  leaveTouchDelay: a.number,
  /**
   * Callback fired when the component requests to be closed.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   */
  onClose: a.func,
  /**
   * Callback fired when the component requests to be open.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   */
  onOpen: a.func,
  /**
   * If `true`, the component is shown.
   */
  open: a.bool,
  /**
   * Tooltip placement.
   * @default 'bottom'
   */
  placement: a.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  /**
   * The component used for the popper.
   * @deprecated use the `slots.popper` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  PopperComponent: a.elementType,
  /**
   * Props applied to the [`Popper`](https://mui.com/material-ui/api/popper/) element.
   * @deprecated use the `slotProps.popper` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  PopperProps: a.object,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    arrow: a.oneOfType([a.func, a.object]),
    popper: a.oneOfType([a.func, a.object]),
    tooltip: a.oneOfType([a.func, a.object]),
    transition: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    arrow: a.elementType,
    popper: a.elementType,
    tooltip: a.elementType,
    transition: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * Tooltip title. Zero-length titles string, undefined, null and false are never displayed.
   */
  title: a.node,
  /**
   * The component used for the transition.
   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @deprecated use the `slots.transition` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  TransitionComponent: a.elementType,
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @deprecated use the `slotProps.transition` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  TransitionProps: a.object
});
const l2 = Qq({
  createStyledComponent: Be("div", {
    name: "MuiStack",
    slot: "Root",
    overridesResolver: (e, t) => t.root
  }),
  useThemeProps: (e) => xn({
    props: e,
    name: "MuiStack"
  })
});
process.env.NODE_ENV !== "production" && (l2.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * Defines the `flex-direction` style property.
   * It is applied for all screen sizes.
   * @default 'column'
   */
  direction: a.oneOfType([a.oneOf(["column-reverse", "column", "row-reverse", "row"]), a.arrayOf(a.oneOf(["column-reverse", "column", "row-reverse", "row"])), a.object]),
  /**
   * Add an element between each child.
   */
  divider: a.node,
  /**
   * Defines the space between immediate children.
   * @default 0
   */
  spacing: a.oneOfType([a.arrayOf(a.oneOfType([a.number, a.string])), a.number, a.object, a.string]),
  /**
   * The system prop, which allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * If `true`, the CSS flexbox `gap` is used instead of applying `margin` to children.
   *
   * While CSS `gap` removes the [known limitations](https://mui.com/joy-ui/react-stack/#limitations),
   * it is not fully supported in some browsers. We recommend checking https://caniuse.com/?search=flex%20gap before using this flag.
   *
   * To enable this flag globally, follow the [theme's default props](https://mui.com/material-ui/customization/theme-components/#default-props) configuration.
   * @default false
   */
  useFlexGap: a.bool
});
function vQ(e) {
  return mn("MuiTab", e);
}
const Gs = bn("MuiTab", ["root", "labelIcon", "textColorInherit", "textColorPrimary", "textColorSecondary", "selected", "disabled", "fullWidth", "wrapped", "iconWrapper", "icon"]), yQ = (e) => {
  const {
    classes: t,
    textColor: n,
    fullWidth: i,
    wrapped: s,
    icon: u,
    label: d,
    selected: p,
    disabled: m
  } = e, v = {
    root: ["root", u && d && "labelIcon", `textColor${Ue(n)}`, i && "fullWidth", s && "wrapped", p && "selected", m && "disabled"],
    icon: ["iconWrapper", "icon"]
  };
  return yt(v, vQ, t);
}, bQ = Be(Yc, {
  name: "MuiTab",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.label && n.icon && t.labelIcon, t[`textColor${Ue(n.textColor)}`], n.fullWidth && t.fullWidth, n.wrapped && t.wrapped, {
      [`& .${Gs.iconWrapper}`]: t.iconWrapper
    }, {
      [`& .${Gs.icon}`]: t.icon
    }];
  }
})(rn(({
  theme: e
}) => ({
  ...e.typography.button,
  maxWidth: 360,
  minWidth: 90,
  position: "relative",
  minHeight: 48,
  flexShrink: 0,
  padding: "12px 16px",
  overflow: "hidden",
  whiteSpace: "normal",
  textAlign: "center",
  lineHeight: 1.25,
  variants: [{
    props: ({
      ownerState: t
    }) => t.label && (t.iconPosition === "top" || t.iconPosition === "bottom"),
    style: {
      flexDirection: "column"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.label && t.iconPosition !== "top" && t.iconPosition !== "bottom",
    style: {
      flexDirection: "row"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.icon && t.label,
    style: {
      minHeight: 72,
      paddingTop: 9,
      paddingBottom: 9
    }
  }, {
    props: ({
      ownerState: t,
      iconPosition: n
    }) => t.icon && t.label && n === "top",
    style: {
      [`& > .${Gs.icon}`]: {
        marginBottom: 6
      }
    }
  }, {
    props: ({
      ownerState: t,
      iconPosition: n
    }) => t.icon && t.label && n === "bottom",
    style: {
      [`& > .${Gs.icon}`]: {
        marginTop: 6
      }
    }
  }, {
    props: ({
      ownerState: t,
      iconPosition: n
    }) => t.icon && t.label && n === "start",
    style: {
      [`& > .${Gs.icon}`]: {
        marginRight: e.spacing(1)
      }
    }
  }, {
    props: ({
      ownerState: t,
      iconPosition: n
    }) => t.icon && t.label && n === "end",
    style: {
      [`& > .${Gs.icon}`]: {
        marginLeft: e.spacing(1)
      }
    }
  }, {
    props: {
      textColor: "inherit"
    },
    style: {
      color: "inherit",
      opacity: 0.6,
      // same opacity as theme.palette.text.secondary
      [`&.${Gs.selected}`]: {
        opacity: 1
      },
      [`&.${Gs.disabled}`]: {
        opacity: (e.vars || e).palette.action.disabledOpacity
      }
    }
  }, {
    props: {
      textColor: "primary"
    },
    style: {
      color: (e.vars || e).palette.text.secondary,
      [`&.${Gs.selected}`]: {
        color: (e.vars || e).palette.primary.main
      },
      [`&.${Gs.disabled}`]: {
        color: (e.vars || e).palette.text.disabled
      }
    }
  }, {
    props: {
      textColor: "secondary"
    },
    style: {
      color: (e.vars || e).palette.text.secondary,
      [`&.${Gs.selected}`]: {
        color: (e.vars || e).palette.secondary.main
      },
      [`&.${Gs.disabled}`]: {
        color: (e.vars || e).palette.text.disabled
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.fullWidth,
    style: {
      flexShrink: 1,
      flexGrow: 1,
      flexBasis: 0,
      maxWidth: "none"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.wrapped,
    style: {
      fontSize: e.typography.pxToRem(12)
    }
  }]
}))), m0 = /* @__PURE__ */ w.forwardRef(function(t, n) {
  const i = xn({
    props: t,
    name: "MuiTab"
  }), {
    className: s,
    disabled: u = !1,
    disableFocusRipple: d = !1,
    // eslint-disable-next-line react/prop-types
    fullWidth: p,
    icon: m,
    iconPosition: v = "top",
    // eslint-disable-next-line react/prop-types
    indicator: y,
    label: C,
    onChange: S,
    onClick: R,
    onFocus: O,
    // eslint-disable-next-line react/prop-types
    selected: E,
    // eslint-disable-next-line react/prop-types
    selectionFollowsFocus: k,
    // eslint-disable-next-line react/prop-types
    textColor: F = "inherit",
    value: _,
    wrapped: L = !1,
    ...M
  } = i, D = {
    ...i,
    disabled: u,
    disableFocusRipple: d,
    selected: E,
    icon: !!m,
    iconPosition: v,
    label: !!C,
    fullWidth: p,
    textColor: F,
    wrapped: L
  }, H = yQ(D), K = m && C && /* @__PURE__ */ w.isValidElement(m) ? /* @__PURE__ */ w.cloneElement(m, {
    className: nt(H.icon, m.props.className)
  }) : m, Q = (I) => {
    !E && S && S(I, _), R && R(I);
  }, z = (I) => {
    k && !E && S && S(I, _), O && O(I);
  };
  return /* @__PURE__ */ A.jsxs(bQ, {
    focusRipple: !d,
    className: nt(H.root, s),
    ref: n,
    role: "tab",
    "aria-selected": E,
    disabled: u,
    onClick: Q,
    onFocus: z,
    ownerState: D,
    tabIndex: E ? 0 : -1,
    ...M,
    children: [v === "top" || v === "start" ? /* @__PURE__ */ A.jsxs(w.Fragment, {
      children: [K, C]
    }) : /* @__PURE__ */ A.jsxs(w.Fragment, {
      children: [C, K]
    }), y]
  });
});
process.env.NODE_ENV !== "production" && (m0.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop isn't supported.
   * Use the `component` prop if you need to change the children structure.
   */
  children: W$,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: a.bool,
  /**
   * If `true`, the  keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: a.bool,
  /**
   * If `true`, the ripple effect is disabled.
   *
   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
   * @default false
   */
  disableRipple: a.bool,
  /**
   * The icon to display.
   */
  icon: a.oneOfType([a.element, a.string]),
  /**
   * The position of the icon relative to the label.
   * @default 'top'
   */
  iconPosition: a.oneOf(["bottom", "end", "start", "top"]),
  /**
   * The label element.
   */
  label: a.node,
  /**
   * @ignore
   */
  onChange: a.func,
  /**
   * @ignore
   */
  onClick: a.func,
  /**
   * @ignore
   */
  onFocus: a.func,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * You can provide your own value. Otherwise, we fallback to the child position index.
   */
  value: a.any,
  /**
   * Tab labels appear in a single row.
   * They can use a second line if needed.
   * @default false
   */
  wrapped: a.bool
});
const u2 = /* @__PURE__ */ w.createContext();
process.env.NODE_ENV !== "production" && (u2.displayName = "TableContext");
const c2 = /* @__PURE__ */ w.createContext();
process.env.NODE_ENV !== "production" && (c2.displayName = "Tablelvl2Context");
function CQ(e) {
  return mn("MuiTableCell", e);
}
const SQ = bn("MuiTableCell", ["root", "head", "body", "footer", "sizeSmall", "sizeMedium", "paddingCheckbox", "paddingNone", "alignLeft", "alignCenter", "alignRight", "alignJustify", "stickyHeader"]), wQ = (e) => {
  const {
    classes: t,
    variant: n,
    align: i,
    padding: s,
    size: u,
    stickyHeader: d
  } = e, p = {
    root: ["root", n, d && "stickyHeader", i !== "inherit" && `align${Ue(i)}`, s !== "normal" && `padding${Ue(s)}`, `size${Ue(u)}`]
  };
  return yt(p, CQ, t);
}, xQ = Be("td", {
  name: "MuiTableCell",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[n.variant], t[`size${Ue(n.size)}`], n.padding !== "normal" && t[`padding${Ue(n.padding)}`], n.align !== "inherit" && t[`align${Ue(n.align)}`], n.stickyHeader && t.stickyHeader];
  }
})(rn(({
  theme: e
}) => ({
  ...e.typography.body2,
  display: "table-cell",
  verticalAlign: "inherit",
  // Workaround for a rendering bug with spanned columns in Chrome 62.0.
  // Removes the alpha (sets it to 1), and lightens or darkens the theme color.
  borderBottom: e.vars ? `1px solid ${e.vars.palette.TableCell.border}` : `1px solid
    ${e.palette.mode === "light" ? Cf($n(e.palette.divider, 1), 0.88) : bf($n(e.palette.divider, 1), 0.68)}`,
  textAlign: "left",
  padding: 16,
  variants: [{
    props: {
      variant: "head"
    },
    style: {
      color: (e.vars || e).palette.text.primary,
      lineHeight: e.typography.pxToRem(24),
      fontWeight: e.typography.fontWeightMedium
    }
  }, {
    props: {
      variant: "body"
    },
    style: {
      color: (e.vars || e).palette.text.primary
    }
  }, {
    props: {
      variant: "footer"
    },
    style: {
      color: (e.vars || e).palette.text.secondary,
      lineHeight: e.typography.pxToRem(21),
      fontSize: e.typography.pxToRem(12)
    }
  }, {
    props: {
      size: "small"
    },
    style: {
      padding: "6px 16px",
      [`&.${SQ.paddingCheckbox}`]: {
        width: 24,
        // prevent the checkbox column from growing
        padding: "0 12px 0 16px",
        "& > *": {
          padding: 0
        }
      }
    }
  }, {
    props: {
      padding: "checkbox"
    },
    style: {
      width: 48,
      // prevent the checkbox column from growing
      padding: "0 0 0 4px"
    }
  }, {
    props: {
      padding: "none"
    },
    style: {
      padding: 0
    }
  }, {
    props: {
      align: "left"
    },
    style: {
      textAlign: "left"
    }
  }, {
    props: {
      align: "center"
    },
    style: {
      textAlign: "center"
    }
  }, {
    props: {
      align: "right"
    },
    style: {
      textAlign: "right",
      flexDirection: "row-reverse"
    }
  }, {
    props: {
      align: "justify"
    },
    style: {
      textAlign: "justify"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.stickyHeader,
    style: {
      position: "sticky",
      top: 0,
      zIndex: 2,
      backgroundColor: (e.vars || e).palette.background.default
    }
  }]
}))), $0 = /* @__PURE__ */ w.forwardRef(function(t, n) {
  const i = xn({
    props: t,
    name: "MuiTableCell"
  }), {
    align: s = "inherit",
    className: u,
    component: d,
    padding: p,
    scope: m,
    size: v,
    sortDirection: y,
    variant: C,
    ...S
  } = i, R = w.useContext(u2), O = w.useContext(c2), E = O && O.variant === "head";
  let k;
  d ? k = d : k = E ? "th" : "td";
  let F = m;
  k === "td" ? F = void 0 : !F && E && (F = "col");
  const _ = C || O && O.variant, L = {
    ...i,
    align: s,
    component: k,
    padding: p || (R && R.padding ? R.padding : "normal"),
    size: v || (R && R.size ? R.size : "medium"),
    sortDirection: y,
    stickyHeader: _ === "head" && R && R.stickyHeader,
    variant: _
  }, M = wQ(L);
  let D = null;
  return y && (D = y === "asc" ? "ascending" : "descending"), /* @__PURE__ */ A.jsx(xQ, {
    as: k,
    ref: n,
    className: nt(M.root, u),
    "aria-sort": D,
    scope: F,
    ownerState: L,
    ...S
  });
});
process.env.NODE_ENV !== "production" && ($0.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Set the text-align on the table cell content.
   *
   * Monetary or generally number fields **should be right aligned** as that allows
   * you to add them up quickly in your head without having to worry about decimals.
   * @default 'inherit'
   */
  align: a.oneOf(["center", "inherit", "justify", "left", "right"]),
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * Sets the padding applied to the cell.
   * The prop defaults to the value (`'default'`) inherited from the parent Table component.
   */
  padding: a.oneOf(["checkbox", "none", "normal"]),
  /**
   * Set scope attribute.
   */
  scope: a.string,
  /**
   * Specify the size of the cell.
   * The prop defaults to the value (`'medium'`) inherited from the parent Table component.
   */
  size: a.oneOfType([a.oneOf(["medium", "small"]), a.string]),
  /**
   * Set aria-sort direction.
   */
  sortDirection: a.oneOf(["asc", "desc", !1]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * Specify the cell type.
   * The prop defaults to the value inherited from the parent TableHead, TableBody, or TableFooter components.
   */
  variant: a.oneOfType([a.oneOf(["body", "footer", "head"]), a.string])
});
function EQ(e) {
  return mn("MuiToolbar", e);
}
bn("MuiToolbar", ["root", "gutters", "regular", "dense"]);
const TQ = (e) => {
  const {
    classes: t,
    disableGutters: n,
    variant: i
  } = e;
  return yt({
    root: ["root", !n && "gutters", i]
  }, EQ, t);
}, RQ = Be("div", {
  name: "MuiToolbar",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, !n.disableGutters && t.gutters, t[n.variant]];
  }
})(rn(({
  theme: e
}) => ({
  position: "relative",
  display: "flex",
  alignItems: "center",
  variants: [{
    props: ({
      ownerState: t
    }) => !t.disableGutters,
    style: {
      paddingLeft: e.spacing(2),
      paddingRight: e.spacing(2),
      [e.breakpoints.up("sm")]: {
        paddingLeft: e.spacing(3),
        paddingRight: e.spacing(3)
      }
    }
  }, {
    props: {
      variant: "dense"
    },
    style: {
      minHeight: 48
    }
  }, {
    props: {
      variant: "regular"
    },
    style: e.mixins.toolbar
  }]
}))), GP = /* @__PURE__ */ w.forwardRef(function(t, n) {
  const i = xn({
    props: t,
    name: "MuiToolbar"
  }), {
    className: s,
    component: u = "div",
    disableGutters: d = !1,
    variant: p = "regular",
    ...m
  } = i, v = {
    ...i,
    component: u,
    disableGutters: d,
    variant: p
  }, y = TQ(v);
  return /* @__PURE__ */ A.jsx(RQ, {
    as: u,
    className: nt(y.root, s),
    ref: n,
    ownerState: v,
    ...m
  });
});
process.env.NODE_ENV !== "production" && (GP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The Toolbar children, usually a mixture of `IconButton`, `Button` and `Typography`.
   * The Toolbar is a flex container, allowing flex item properties to be used to lay out the children.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * If `true`, disables gutter padding.
   * @default false
   */
  disableGutters: a.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The variant to use.
   * @default 'regular'
   */
  variant: a.oneOfType([a.oneOf(["dense", "regular"]), a.string])
});
const d2 = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z"
}), "KeyboardArrowLeft"), f2 = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"
}), "KeyboardArrowRight"), p2 = /* @__PURE__ */ w.forwardRef(function(t, n) {
  const {
    backIconButtonProps: i,
    count: s,
    disabled: u = !1,
    getItemAriaLabel: d,
    nextIconButtonProps: p,
    onPageChange: m,
    page: v,
    rowsPerPage: y,
    showFirstButton: C,
    showLastButton: S,
    slots: R = {},
    slotProps: O = {},
    ...E
  } = t, k = zi(), F = (j) => {
    m(j, 0);
  }, _ = (j) => {
    m(j, v - 1);
  }, L = (j) => {
    m(j, v + 1);
  }, M = (j) => {
    m(j, Math.max(0, Math.ceil(s / y) - 1));
  }, D = R.firstButton ?? Wc, H = R.lastButton ?? Wc, K = R.nextButton ?? Wc, Q = R.previousButton ?? Wc, z = R.firstButtonIcon ?? YX, I = R.lastButtonIcon ?? XX, G = R.nextButtonIcon ?? f2, W = R.previousButtonIcon ?? d2, B = k ? H : D, ee = k ? K : Q, U = k ? Q : K, q = k ? D : H, Y = k ? O.lastButton : O.firstButton, ne = k ? O.nextButton : O.previousButton, re = k ? O.previousButton : O.nextButton, X = k ? O.firstButton : O.lastButton;
  return /* @__PURE__ */ A.jsxs("div", {
    ref: n,
    ...E,
    children: [C && /* @__PURE__ */ A.jsx(B, {
      onClick: F,
      disabled: u || v === 0,
      "aria-label": d("first", v),
      title: d("first", v),
      ...Y,
      children: k ? /* @__PURE__ */ A.jsx(I, {
        ...O.lastButtonIcon
      }) : /* @__PURE__ */ A.jsx(z, {
        ...O.firstButtonIcon
      })
    }), /* @__PURE__ */ A.jsx(ee, {
      onClick: _,
      disabled: u || v === 0,
      color: "inherit",
      "aria-label": d("previous", v),
      title: d("previous", v),
      ...ne ?? i,
      children: k ? /* @__PURE__ */ A.jsx(G, {
        ...O.nextButtonIcon
      }) : /* @__PURE__ */ A.jsx(W, {
        ...O.previousButtonIcon
      })
    }), /* @__PURE__ */ A.jsx(U, {
      onClick: L,
      disabled: u || (s !== -1 ? v >= Math.ceil(s / y) - 1 : !1),
      color: "inherit",
      "aria-label": d("next", v),
      title: d("next", v),
      ...re ?? p,
      children: k ? /* @__PURE__ */ A.jsx(W, {
        ...O.previousButtonIcon
      }) : /* @__PURE__ */ A.jsx(G, {
        ...O.nextButtonIcon
      })
    }), S && /* @__PURE__ */ A.jsx(q, {
      onClick: M,
      disabled: u || v >= Math.ceil(s / y) - 1,
      "aria-label": d("last", v),
      title: d("last", v),
      ...X,
      children: k ? /* @__PURE__ */ A.jsx(z, {
        ...O.firstButtonIcon
      }) : /* @__PURE__ */ A.jsx(I, {
        ...O.lastButtonIcon
      })
    })]
  });
});
process.env.NODE_ENV !== "production" && (p2.propTypes = {
  /**
   * Props applied to the back arrow [`IconButton`](/material-ui/api/icon-button/) element.
   */
  backIconButtonProps: a.object,
  /**
   * The total number of rows.
   */
  count: a.number.isRequired,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: a.bool,
  /**
   * Accepts a function which returns a string value that provides a user-friendly name for the current page.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   *
   * @param {string} type The link or button type to format ('page' | 'first' | 'last' | 'next' | 'previous'). Defaults to 'page'.
   * @param {number} page The page number to format.
   * @returns {string}
   */
  getItemAriaLabel: a.func.isRequired,
  /**
   * Props applied to the next arrow [`IconButton`](/material-ui/api/icon-button/) element.
   */
  nextIconButtonProps: a.object,
  /**
   * Callback fired when the page is changed.
   *
   * @param {object} event The event source of the callback.
   * @param {number} page The page selected.
   */
  onPageChange: a.func.isRequired,
  /**
   * The zero-based index of the current page.
   */
  page: a.number.isRequired,
  /**
   * The number of rows per page.
   */
  rowsPerPage: a.number.isRequired,
  /**
   * If `true`, show the first-page button.
   */
  showFirstButton: a.bool.isRequired,
  /**
   * If `true`, show the last-page button.
   */
  showLastButton: a.bool.isRequired,
  /**
   * The props used for each slot inside the TablePaginationActions.
   * @default {}
   */
  slotProps: a.shape({
    firstButton: a.object,
    firstButtonIcon: a.object,
    lastButton: a.object,
    lastButtonIcon: a.object,
    nextButton: a.object,
    nextButtonIcon: a.object,
    previousButton: a.object,
    previousButtonIcon: a.object
  }),
  /**
   * The components used for each slot inside the TablePaginationActions.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: a.shape({
    firstButton: a.elementType,
    firstButtonIcon: a.elementType,
    lastButton: a.elementType,
    lastButtonIcon: a.elementType,
    nextButton: a.elementType,
    nextButtonIcon: a.elementType,
    previousButton: a.elementType,
    previousButtonIcon: a.elementType
  })
});
function OQ(e) {
  return mn("MuiTablePagination", e);
}
const ch = bn("MuiTablePagination", ["root", "toolbar", "spacer", "selectLabel", "selectRoot", "select", "selectIcon", "input", "menuItem", "displayedRows", "actions"]);
var l_;
const kQ = Be($0, {
  name: "MuiTablePagination",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})(rn(({
  theme: e
}) => ({
  overflow: "auto",
  color: (e.vars || e).palette.text.primary,
  fontSize: e.typography.pxToRem(14),
  // Increase the specificity to override TableCell.
  "&:last-child": {
    padding: 0
  }
}))), PQ = Be(GP, {
  name: "MuiTablePagination",
  slot: "Toolbar",
  overridesResolver: (e, t) => ({
    [`& .${ch.actions}`]: t.actions,
    ...t.toolbar
  })
})(rn(({
  theme: e
}) => ({
  minHeight: 52,
  paddingRight: 2,
  [`${e.breakpoints.up("xs")} and (orientation: landscape)`]: {
    minHeight: 52
  },
  [e.breakpoints.up("sm")]: {
    minHeight: 52,
    paddingRight: 2
  },
  [`& .${ch.actions}`]: {
    flexShrink: 0,
    marginLeft: 20
  }
}))), MQ = Be("div", {
  name: "MuiTablePagination",
  slot: "Spacer",
  overridesResolver: (e, t) => t.spacer
})({
  flex: "1 1 100%"
}), IQ = Be("p", {
  name: "MuiTablePagination",
  slot: "SelectLabel",
  overridesResolver: (e, t) => t.selectLabel
})(rn(({
  theme: e
}) => ({
  ...e.typography.body2,
  flexShrink: 0
}))), DQ = Be(ov, {
  name: "MuiTablePagination",
  slot: "Select",
  overridesResolver: (e, t) => ({
    [`& .${ch.selectIcon}`]: t.selectIcon,
    [`& .${ch.select}`]: t.select,
    ...t.input,
    ...t.selectRoot
  })
})({
  color: "inherit",
  fontSize: "inherit",
  flexShrink: 0,
  marginRight: 32,
  marginLeft: 8,
  [`& .${ch.select}`]: {
    paddingLeft: 8,
    paddingRight: 24,
    textAlign: "right",
    textAlignLast: "right"
    // Align <select> on Chrome.
  }
}), NQ = Be(ms, {
  name: "MuiTablePagination",
  slot: "MenuItem",
  overridesResolver: (e, t) => t.menuItem
})({}), LQ = Be("p", {
  name: "MuiTablePagination",
  slot: "DisplayedRows",
  overridesResolver: (e, t) => t.displayedRows
})(rn(({
  theme: e
}) => ({
  ...e.typography.body2,
  flexShrink: 0
})));
function FQ({
  from: e,
  to: t,
  count: n
}) {
  return `${e}–${t} of ${n !== -1 ? n : `more than ${t}`}`;
}
function _Q(e) {
  return `Go to ${e} page`;
}
const AQ = (e) => {
  const {
    classes: t
  } = e;
  return yt({
    root: ["root"],
    toolbar: ["toolbar"],
    spacer: ["spacer"],
    selectLabel: ["selectLabel"],
    select: ["select"],
    input: ["input"],
    selectIcon: ["selectIcon"],
    menuItem: ["menuItem"],
    displayedRows: ["displayedRows"],
    actions: ["actions"]
  }, OQ, t);
}, h2 = /* @__PURE__ */ w.forwardRef(function(t, n) {
  const i = xn({
    props: t,
    name: "MuiTablePagination"
  }), {
    ActionsComponent: s = p2,
    backIconButtonProps: u,
    colSpan: d,
    component: p = $0,
    count: m,
    disabled: v = !1,
    getItemAriaLabel: y = _Q,
    labelDisplayedRows: C = FQ,
    labelRowsPerPage: S = "Rows per page:",
    nextIconButtonProps: R,
    onPageChange: O,
    onRowsPerPageChange: E,
    page: k,
    rowsPerPage: F,
    rowsPerPageOptions: _ = [10, 25, 50, 100],
    SelectProps: L = {},
    showFirstButton: M = !1,
    showLastButton: D = !1,
    slotProps: H = {},
    slots: K = {},
    ...Q
  } = i, z = i, I = AQ(z), G = (H == null ? void 0 : H.select) ?? L, W = G.native ? "option" : NQ;
  let B;
  (p === $0 || p === "td") && (B = d || 1e3);
  const ee = Sr(G.id), U = Sr(G.labelId), q = () => m === -1 ? (k + 1) * F : F === -1 ? m : Math.min(m, (k + 1) * F), Y = {
    slots: K,
    slotProps: H
  }, [ne, re] = yn("root", {
    ref: n,
    className: I.root,
    elementType: kQ,
    externalForwardedProps: {
      ...Y,
      component: p,
      ...Q
    },
    ownerState: z,
    additionalProps: {
      colSpan: B
    }
  }), [X, j] = yn("toolbar", {
    className: I.toolbar,
    elementType: PQ,
    externalForwardedProps: Y,
    ownerState: z
  }), [ie, fe] = yn("spacer", {
    className: I.spacer,
    elementType: MQ,
    externalForwardedProps: Y,
    ownerState: z
  }), [ce, me] = yn("selectLabel", {
    className: I.selectLabel,
    elementType: IQ,
    externalForwardedProps: Y,
    ownerState: z,
    additionalProps: {
      id: U
    }
  }), [ge, de] = yn("select", {
    className: I.select,
    elementType: DQ,
    externalForwardedProps: Y,
    ownerState: z
  }), [pe, be] = yn("menuItem", {
    className: I.menuItem,
    elementType: W,
    externalForwardedProps: Y,
    ownerState: z
  }), [Ce, Re] = yn("displayedRows", {
    className: I.displayedRows,
    elementType: LQ,
    externalForwardedProps: Y,
    ownerState: z
  });
  return /* @__PURE__ */ A.jsx(ne, {
    ...re,
    children: /* @__PURE__ */ A.jsxs(X, {
      ...j,
      children: [/* @__PURE__ */ A.jsx(ie, {
        ...fe
      }), _.length > 1 && /* @__PURE__ */ A.jsx(ce, {
        ...me,
        children: S
      }), _.length > 1 && /* @__PURE__ */ A.jsx(ge, {
        variant: "standard",
        ...!G.variant && {
          input: l_ || (l_ = /* @__PURE__ */ A.jsx(Ch, {}))
        },
        value: F,
        onChange: E,
        id: ee,
        labelId: U,
        ...G,
        classes: {
          ...G.classes,
          // TODO v5 remove `classes.input`
          root: nt(I.input, I.selectRoot, (G.classes || {}).root),
          select: nt(I.select, (G.classes || {}).select),
          // TODO v5 remove `selectIcon`
          icon: nt(I.selectIcon, (G.classes || {}).icon)
        },
        disabled: v,
        ...de,
        children: _.map((ue) => /* @__PURE__ */ w.createElement(pe, {
          ...be,
          key: ue.label ? ue.label : ue,
          value: ue.value ? ue.value : ue
        }, ue.label ? ue.label : ue))
      }), /* @__PURE__ */ A.jsx(Ce, {
        ...Re,
        children: C({
          from: m === 0 ? 0 : k * F + 1,
          to: q(),
          count: m === -1 ? -1 : m,
          page: k
        })
      }), /* @__PURE__ */ A.jsx(s, {
        className: I.actions,
        backIconButtonProps: u,
        count: m,
        nextIconButtonProps: R,
        onPageChange: O,
        page: k,
        rowsPerPage: F,
        showFirstButton: M,
        showLastButton: D,
        slotProps: H.actions,
        slots: K.actions,
        getItemAriaLabel: y,
        disabled: v
      })]
    })
  });
});
process.env.NODE_ENV !== "production" && (h2.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The component used for displaying the actions.
   * Either a string to use a HTML element or a component.
   * @default TablePaginationActions
   */
  ActionsComponent: a.elementType,
  /**
   * Props applied to the back arrow [`IconButton`](https://mui.com/material-ui/api/icon-button/) component.
   *
   * This prop is an alias for `slotProps.actions.previousButton` and will be overriden by it if both are used.
   * @deprecated Use `slotProps.actions.previousButton` instead.
   */
  backIconButtonProps: a.object,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  colSpan: a.number,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * The total number of rows.
   *
   * To enable server side pagination for an unknown number of items, provide -1.
   */
  count: Dg.isRequired,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: a.bool,
  /**
   * Accepts a function which returns a string value that provides a user-friendly name for the current page.
   * This is important for screen reader users.
   *
   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).
   * @param {string} type The link or button type to format ('first' | 'last' | 'next' | 'previous').
   * @returns {string}
   * @default function defaultGetAriaLabel(type) {
   *   return `Go to ${type} page`;
   * }
   */
  getItemAriaLabel: a.func,
  /**
   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`
   * object.
   *
   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).
   * @default function defaultLabelDisplayedRows({ from, to, count }) {
   *   return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;
   * }
   */
  labelDisplayedRows: a.func,
  /**
   * Customize the rows per page label.
   *
   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).
   * @default 'Rows per page:'
   */
  labelRowsPerPage: a.node,
  /**
   * Props applied to the next arrow [`IconButton`](https://mui.com/material-ui/api/icon-button/) element.
   *
   * This prop is an alias for `slotProps.actions.nextButton` and will be overriden by it if both are used.
   * @deprecated Use `slotProps.actions.nextButton` instead.
   */
  nextIconButtonProps: a.object,
  /**
   * Callback fired when the page is changed.
   *
   * @param {React.MouseEvent<HTMLButtonElement> | null} event The event source of the callback.
   * @param {number} page The page selected.
   */
  onPageChange: a.func.isRequired,
  /**
   * Callback fired when the number of rows per page is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   */
  onRowsPerPageChange: a.func,
  /**
   * The zero-based index of the current page.
   */
  page: Gl(Dg.isRequired, (e) => {
    const {
      count: t,
      page: n,
      rowsPerPage: i
    } = e;
    if (t === -1)
      return null;
    const s = Math.max(0, Math.ceil(t / i) - 1);
    return n < 0 || n > s ? new Error(`MUI: The page prop of a TablePagination is out of range (0 to ${s}, but page is ${n}).`) : null;
  }),
  /**
   * The number of rows per page.
   *
   * Set -1 to display all the rows.
   */
  rowsPerPage: Dg.isRequired,
  /**
   * Customizes the options of the rows per page select field. If less than two options are
   * available, no select field will be displayed.
   * Use -1 for the value with a custom label to show all the rows.
   * @default [10, 25, 50, 100]
   */
  rowsPerPageOptions: a.arrayOf(a.oneOfType([a.number, a.shape({
    label: a.string.isRequired,
    value: a.number.isRequired
  })]).isRequired),
  /**
   * Props applied to the rows per page [`Select`](https://mui.com/material-ui/api/select/) element.
   *
   * This prop is an alias for `slotProps.select` and will be overriden by it if both are used.
   * @deprecated Use `slotProps.select` instead.
   *
   * @default {}
   */
  SelectProps: a.object,
  /**
   * If `true`, show the first-page button.
   * @default false
   */
  showFirstButton: a.bool,
  /**
   * If `true`, show the last-page button.
   * @default false
   */
  showLastButton: a.bool,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    actions: a.shape({
      firstButton: a.object,
      firstButtonIcon: a.object,
      lastButton: a.object,
      lastButtonIcon: a.object,
      nextButton: a.object,
      nextButtonIcon: a.object,
      previousButton: a.object,
      previousButtonIcon: a.object
    }),
    displayedRows: a.oneOfType([a.func, a.object]),
    menuItem: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object]),
    select: a.object,
    selectLabel: a.oneOfType([a.func, a.object]),
    spacer: a.oneOfType([a.func, a.object]),
    toolbar: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    actions: a.shape({
      firstButton: a.elementType,
      firstButtonIcon: a.elementType,
      lastButton: a.elementType,
      lastButtonIcon: a.elementType,
      nextButton: a.elementType,
      nextButtonIcon: a.elementType,
      previousButton: a.elementType,
      previousButtonIcon: a.elementType
    }),
    displayedRows: a.elementType,
    menuItem: a.elementType,
    root: a.elementType,
    select: a.elementType,
    selectLabel: a.elementType,
    spacer: a.elementType,
    toolbar: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
function $Q(e) {
  return (1 + Math.sin(Math.PI * e - Math.PI / 2)) / 2;
}
function jQ(e, t, n, i = {}, s = () => {
}) {
  const {
    ease: u = $Q,
    duration: d = 300
    // standard
  } = i;
  let p = null;
  const m = t[e];
  let v = !1;
  const y = () => {
    v = !0;
  }, C = (S) => {
    if (v) {
      s(new Error("Animation cancelled"));
      return;
    }
    p === null && (p = S);
    const R = Math.min(1, (S - p) / d);
    if (t[e] = u(R) * (n - m) + m, R >= 1) {
      requestAnimationFrame(() => {
        s(null);
      });
      return;
    }
    requestAnimationFrame(C);
  };
  return m === n ? (s(new Error("Element already at target position")), y) : (requestAnimationFrame(C), y);
}
const zQ = {
  width: 99,
  height: 99,
  position: "absolute",
  top: -9999,
  overflow: "scroll"
};
function m2(e) {
  const {
    onChange: t,
    ...n
  } = e, i = w.useRef(), s = w.useRef(null), u = () => {
    i.current = s.current.offsetHeight - s.current.clientHeight;
  };
  return _r(() => {
    const d = SE(() => {
      const m = i.current;
      u(), m !== i.current && t(i.current);
    }), p = rl(s.current);
    return p.addEventListener("resize", d), () => {
      d.clear(), p.removeEventListener("resize", d);
    };
  }, [t]), w.useEffect(() => {
    u(), t(i.current);
  }, [t]), /* @__PURE__ */ A.jsx("div", {
    style: zQ,
    ...n,
    ref: s
  });
}
process.env.NODE_ENV !== "production" && (m2.propTypes = {
  onChange: a.func.isRequired
});
function HQ(e) {
  return mn("MuiTabScrollButton", e);
}
const VQ = bn("MuiTabScrollButton", ["root", "vertical", "horizontal", "disabled"]), BQ = (e) => {
  const {
    classes: t,
    orientation: n,
    disabled: i
  } = e;
  return yt({
    root: ["root", n, i && "disabled"]
  }, HQ, t);
}, UQ = Be(Yc, {
  name: "MuiTabScrollButton",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.orientation && t[n.orientation]];
  }
})({
  width: 40,
  flexShrink: 0,
  opacity: 0.8,
  [`&.${VQ.disabled}`]: {
    opacity: 0
  },
  variants: [{
    props: {
      orientation: "vertical"
    },
    style: {
      width: "100%",
      height: 40,
      "& svg": {
        transform: "var(--TabScrollButton-svgRotate)"
      }
    }
  }]
}), g2 = /* @__PURE__ */ w.forwardRef(function(t, n) {
  const i = xn({
    props: t,
    name: "MuiTabScrollButton"
  }), {
    className: s,
    slots: u = {},
    slotProps: d = {},
    direction: p,
    orientation: m,
    disabled: v,
    ...y
  } = i, C = zi(), S = {
    isRtl: C,
    ...i
  }, R = BQ(S), O = u.StartScrollButtonIcon ?? d2, E = u.EndScrollButtonIcon ?? f2, k = Ug({
    elementType: O,
    externalSlotProps: d.startScrollButtonIcon,
    additionalProps: {
      fontSize: "small"
    },
    ownerState: S
  }), F = Ug({
    elementType: E,
    externalSlotProps: d.endScrollButtonIcon,
    additionalProps: {
      fontSize: "small"
    },
    ownerState: S
  });
  return /* @__PURE__ */ A.jsx(UQ, {
    component: "div",
    className: nt(R.root, s),
    ref: n,
    role: null,
    ownerState: S,
    tabIndex: null,
    ...y,
    style: {
      ...y.style,
      ...m === "vertical" && {
        "--TabScrollButton-svgRotate": `rotate(${C ? -90 : 90}deg)`
      }
    },
    children: p === "left" ? /* @__PURE__ */ A.jsx(O, {
      ...k
    }) : /* @__PURE__ */ A.jsx(E, {
      ...F
    })
  });
});
process.env.NODE_ENV !== "production" && (g2.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The direction the button should indicate.
   */
  direction: a.oneOf(["left", "right"]).isRequired,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: a.bool,
  /**
   * The component orientation (layout flow direction).
   */
  orientation: a.oneOf(["horizontal", "vertical"]).isRequired,
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   * @default {}
   */
  slotProps: a.shape({
    endScrollButtonIcon: a.oneOfType([a.func, a.object]),
    startScrollButtonIcon: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    EndScrollButtonIcon: a.elementType,
    StartScrollButtonIcon: a.elementType
  }),
  /**
   * @ignore
   */
  style: a.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
function GQ(e) {
  return mn("MuiTabs", e);
}
const LO = bn("MuiTabs", ["root", "vertical", "list", "flexContainer", "flexContainerVertical", "centered", "scroller", "fixed", "scrollableX", "scrollableY", "hideScrollbar", "scrollButtons", "scrollButtonsHideMobile", "indicator"]), u_ = (e, t) => e === t ? e.firstChild : t && t.nextElementSibling ? t.nextElementSibling : e.firstChild, c_ = (e, t) => e === t ? e.lastChild : t && t.previousElementSibling ? t.previousElementSibling : e.lastChild, r0 = (e, t, n) => {
  let i = !1, s = n(e, t);
  for (; s; ) {
    if (s === e.firstChild) {
      if (i)
        return;
      i = !0;
    }
    const u = s.disabled || s.getAttribute("aria-disabled") === "true";
    if (!s.hasAttribute("tabindex") || u)
      s = n(e, s);
    else {
      s.focus();
      return;
    }
  }
}, WQ = (e) => {
  const {
    vertical: t,
    fixed: n,
    hideScrollbar: i,
    scrollableX: s,
    scrollableY: u,
    centered: d,
    scrollButtonsHideMobile: p,
    classes: m
  } = e;
  return yt({
    root: ["root", t && "vertical"],
    scroller: ["scroller", n && "fixed", i && "hideScrollbar", s && "scrollableX", u && "scrollableY"],
    list: ["list", "flexContainer", t && "flexContainerVertical", t && "vertical", d && "centered"],
    indicator: ["indicator"],
    scrollButtons: ["scrollButtons", p && "scrollButtonsHideMobile"],
    scrollableX: [s && "scrollableX"],
    hideScrollbar: [i && "hideScrollbar"]
  }, GQ, m);
}, qQ = Be("div", {
  name: "MuiTabs",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [{
      [`& .${LO.scrollButtons}`]: t.scrollButtons
    }, {
      [`& .${LO.scrollButtons}`]: n.scrollButtonsHideMobile && t.scrollButtonsHideMobile
    }, t.root, n.vertical && t.vertical];
  }
})(rn(({
  theme: e
}) => ({
  overflow: "hidden",
  minHeight: 48,
  // Add iOS momentum scrolling for iOS < 13.0
  WebkitOverflowScrolling: "touch",
  display: "flex",
  variants: [{
    props: ({
      ownerState: t
    }) => t.vertical,
    style: {
      flexDirection: "column"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.scrollButtonsHideMobile,
    style: {
      [`& .${LO.scrollButtons}`]: {
        [e.breakpoints.down("sm")]: {
          display: "none"
        }
      }
    }
  }]
}))), KQ = Be("div", {
  name: "MuiTabs",
  slot: "Scroller",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.scroller, n.fixed && t.fixed, n.hideScrollbar && t.hideScrollbar, n.scrollableX && t.scrollableX, n.scrollableY && t.scrollableY];
  }
})({
  position: "relative",
  display: "inline-block",
  flex: "1 1 auto",
  whiteSpace: "nowrap",
  variants: [{
    props: ({
      ownerState: e
    }) => e.fixed,
    style: {
      overflowX: "hidden",
      width: "100%"
    }
  }, {
    props: ({
      ownerState: e
    }) => e.hideScrollbar,
    style: {
      // Hide dimensionless scrollbar on macOS
      scrollbarWidth: "none",
      // Firefox
      "&::-webkit-scrollbar": {
        display: "none"
        // Safari + Chrome
      }
    }
  }, {
    props: ({
      ownerState: e
    }) => e.scrollableX,
    style: {
      overflowX: "auto",
      overflowY: "hidden"
    }
  }, {
    props: ({
      ownerState: e
    }) => e.scrollableY,
    style: {
      overflowY: "auto",
      overflowX: "hidden"
    }
  }]
}), YQ = Be("div", {
  name: "MuiTabs",
  slot: "List",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.list, t.flexContainer, n.vertical && t.flexContainerVertical, n.centered && t.centered];
  }
})({
  display: "flex",
  variants: [{
    props: ({
      ownerState: e
    }) => e.vertical,
    style: {
      flexDirection: "column"
    }
  }, {
    props: ({
      ownerState: e
    }) => e.centered,
    style: {
      justifyContent: "center"
    }
  }]
}), XQ = Be("span", {
  name: "MuiTabs",
  slot: "Indicator",
  overridesResolver: (e, t) => t.indicator
})(rn(({
  theme: e
}) => ({
  position: "absolute",
  height: 2,
  bottom: 0,
  width: "100%",
  transition: e.transitions.create(),
  variants: [{
    props: {
      indicatorColor: "primary"
    },
    style: {
      backgroundColor: (e.vars || e).palette.primary.main
    }
  }, {
    props: {
      indicatorColor: "secondary"
    },
    style: {
      backgroundColor: (e.vars || e).palette.secondary.main
    }
  }, {
    props: ({
      ownerState: t
    }) => t.vertical,
    style: {
      height: "100%",
      width: 2,
      right: 0
    }
  }]
}))), QQ = Be(m2)({
  overflowX: "auto",
  overflowY: "hidden",
  // Hide dimensionless scrollbar on macOS
  scrollbarWidth: "none",
  // Firefox
  "&::-webkit-scrollbar": {
    display: "none"
    // Safari + Chrome
  }
}), d_ = {};
let f_ = !1;
const v2 = /* @__PURE__ */ w.forwardRef(function(t, n) {
  const i = xn({
    props: t,
    name: "MuiTabs"
  }), s = rv(), u = zi(), {
    "aria-label": d,
    "aria-labelledby": p,
    action: m,
    centered: v = !1,
    children: y,
    className: C,
    component: S = "div",
    allowScrollButtonsMobile: R = !1,
    indicatorColor: O = "primary",
    onChange: E,
    orientation: k = "horizontal",
    ScrollButtonComponent: F,
    // TODO: remove in v7 (deprecated in v6)
    scrollButtons: _ = "auto",
    selectionFollowsFocus: L,
    slots: M = {},
    slotProps: D = {},
    TabIndicatorProps: H = {},
    // TODO: remove in v7 (deprecated in v6)
    TabScrollButtonProps: K = {},
    // TODO: remove in v7 (deprecated in v6)
    textColor: Q = "primary",
    value: z,
    variant: I = "standard",
    visibleScrollbar: G = !1,
    ...W
  } = i, B = I === "scrollable", ee = k === "vertical", U = ee ? "scrollTop" : "scrollLeft", q = ee ? "top" : "left", Y = ee ? "bottom" : "right", ne = ee ? "clientHeight" : "clientWidth", re = ee ? "height" : "width", X = {
    ...i,
    component: S,
    allowScrollButtonsMobile: R,
    indicatorColor: O,
    orientation: k,
    vertical: ee,
    scrollButtons: _,
    textColor: Q,
    variant: I,
    visibleScrollbar: G,
    fixed: !B,
    hideScrollbar: B && !G,
    scrollableX: B && !ee,
    scrollableY: B && ee,
    centered: v && !B,
    scrollButtonsHideMobile: !R
  }, j = WQ(X), ie = Ug({
    elementType: M.StartScrollButtonIcon,
    externalSlotProps: D.startScrollButtonIcon,
    ownerState: X
  }), fe = Ug({
    elementType: M.EndScrollButtonIcon,
    externalSlotProps: D.endScrollButtonIcon,
    ownerState: X
  });
  process.env.NODE_ENV !== "production" && v && B && console.error('MUI: You can not use the `centered={true}` and `variant="scrollable"` properties at the same time on a `Tabs` component.');
  const [ce, me] = w.useState(!1), [ge, de] = w.useState(d_), [pe, be] = w.useState(!1), [Ce, Re] = w.useState(!1), [ue, we] = w.useState(!1), [_e, He] = w.useState({
    overflow: "hidden",
    scrollbarWidth: 0
  }), et = /* @__PURE__ */ new Map(), Ne = w.useRef(null), rt = w.useRef(null), it = {
    slots: M,
    slotProps: {
      indicator: H,
      scrollButton: K,
      ...D
    }
  }, wt = () => {
    const Ct = Ne.current;
    let St;
    if (Ct) {
      const on = Ct.getBoundingClientRect();
      St = {
        clientWidth: Ct.clientWidth,
        scrollLeft: Ct.scrollLeft,
        scrollTop: Ct.scrollTop,
        scrollWidth: Ct.scrollWidth,
        top: on.top,
        bottom: on.bottom,
        left: on.left,
        right: on.right
      };
    }
    let en;
    if (Ct && z !== !1) {
      const on = rt.current.children;
      if (on.length > 0) {
        const zn = on[et.get(z)];
        process.env.NODE_ENV !== "production" && (zn || console.error(["MUI: The `value` provided to the Tabs component is invalid.", `None of the Tabs' children match with "${z}".`, et.keys ? `You can provide one of the following values: ${Array.from(et.keys()).join(", ")}.` : null].join(`
`))), en = zn ? zn.getBoundingClientRect() : null, process.env.NODE_ENV !== "production" && process.env.NODE_ENV !== "test" && !f_ && en && en.width === 0 && en.height === 0 && // if the whole Tabs component is hidden, don't warn
        St.clientWidth !== 0 && (St = null, console.error(["MUI: The `value` provided to the Tabs component is invalid.", `The Tab with this \`value\` ("${z}") is not part of the document layout.`, "Make sure the tab item is present in the document or that it's not `display: none`."].join(`
`)), f_ = !0);
      }
    }
    return {
      tabsMeta: St,
      tabMeta: en
    };
  }, gt = Nn(() => {
    const {
      tabsMeta: Ct,
      tabMeta: St
    } = wt();
    let en = 0, on;
    ee ? (on = "top", St && Ct && (en = St.top - Ct.top + Ct.scrollTop)) : (on = u ? "right" : "left", St && Ct && (en = (u ? -1 : 1) * (St[on] - Ct[on] + Ct.scrollLeft)));
    const zn = {
      [on]: en,
      // May be wrong until the font is loaded.
      [re]: St ? St[re] : 0
    };
    if (typeof ge[on] != "number" || typeof ge[re] != "number")
      de(zn);
    else {
      const Ar = Math.abs(ge[on] - zn[on]), ro = Math.abs(ge[re] - zn[re]);
      (Ar >= 1 || ro >= 1) && de(zn);
    }
  }), ot = (Ct, {
    animation: St = !0
  } = {}) => {
    St ? jQ(U, Ne.current, Ct, {
      duration: s.transitions.duration.standard
    }) : Ne.current[U] = Ct;
  }, jt = (Ct) => {
    let St = Ne.current[U];
    ee ? St += Ct : St += Ct * (u ? -1 : 1), ot(St);
  }, ct = () => {
    const Ct = Ne.current[ne];
    let St = 0;
    const en = Array.from(rt.current.children);
    for (let on = 0; on < en.length; on += 1) {
      const zn = en[on];
      if (St + zn[ne] > Ct) {
        on === 0 && (St = Ct);
        break;
      }
      St += zn[ne];
    }
    return St;
  }, Tt = () => {
    jt(-1 * ct());
  }, Rt = () => {
    jt(ct());
  }, [Lt, {
    onChange: vt,
    ...Qe
  }] = yn("scrollbar", {
    className: nt(j.scrollableX, j.hideScrollbar),
    elementType: QQ,
    shouldForwardComponentProp: !0,
    externalForwardedProps: it,
    ownerState: X
  }), Oe = w.useCallback((Ct) => {
    vt == null || vt(Ct), He({
      overflow: null,
      scrollbarWidth: Ct
    });
  }, [vt]), [Me, ht] = yn("scrollButtons", {
    className: nt(j.scrollButtons, K.className),
    elementType: g2,
    externalForwardedProps: it,
    ownerState: X,
    additionalProps: {
      orientation: k,
      slots: {
        StartScrollButtonIcon: M.startScrollButtonIcon || M.StartScrollButtonIcon,
        EndScrollButtonIcon: M.endScrollButtonIcon || M.EndScrollButtonIcon
      },
      slotProps: {
        startScrollButtonIcon: ie,
        endScrollButtonIcon: fe
      }
    }
  }), xt = () => {
    const Ct = {};
    Ct.scrollbarSizeListener = B ? /* @__PURE__ */ A.jsx(Lt, {
      ...Qe,
      onChange: Oe
    }) : null;
    const en = B && (_ === "auto" && (pe || Ce) || _ === !0);
    return Ct.scrollButtonStart = en ? /* @__PURE__ */ A.jsx(Me, {
      direction: u ? "right" : "left",
      onClick: Tt,
      disabled: !pe,
      ...ht
    }) : null, Ct.scrollButtonEnd = en ? /* @__PURE__ */ A.jsx(Me, {
      direction: u ? "left" : "right",
      onClick: Rt,
      disabled: !Ce,
      ...ht
    }) : null, Ct;
  }, zt = Nn((Ct) => {
    const {
      tabsMeta: St,
      tabMeta: en
    } = wt();
    if (!(!en || !St)) {
      if (en[q] < St[q]) {
        const on = St[U] + (en[q] - St[q]);
        ot(on, {
          animation: Ct
        });
      } else if (en[Y] > St[Y]) {
        const on = St[U] + (en[Y] - St[Y]);
        ot(on, {
          animation: Ct
        });
      }
    }
  }), bt = Nn(() => {
    B && _ !== !1 && we(!ue);
  });
  w.useEffect(() => {
    const Ct = SE(() => {
      Ne.current && gt();
    });
    let St;
    const en = (Ar) => {
      Ar.forEach((ro) => {
        ro.removedNodes.forEach((mo) => {
          St == null || St.unobserve(mo);
        }), ro.addedNodes.forEach((mo) => {
          St == null || St.observe(mo);
        });
      }), Ct(), bt();
    }, on = rl(Ne.current);
    on.addEventListener("resize", Ct);
    let zn;
    return typeof ResizeObserver < "u" && (St = new ResizeObserver(Ct), Array.from(rt.current.children).forEach((Ar) => {
      St.observe(Ar);
    })), typeof MutationObserver < "u" && (zn = new MutationObserver(en), zn.observe(rt.current, {
      childList: !0
    })), () => {
      Ct.clear(), on.removeEventListener("resize", Ct), zn == null || zn.disconnect(), St == null || St.disconnect();
    };
  }, [gt, bt]), w.useEffect(() => {
    const Ct = Array.from(rt.current.children), St = Ct.length;
    if (typeof IntersectionObserver < "u" && St > 0 && B && _ !== !1) {
      const en = Ct[0], on = Ct[St - 1], zn = {
        root: Ne.current,
        threshold: 0.99
      }, Ar = (We) => {
        be(!We[0].isIntersecting);
      }, ro = new IntersectionObserver(Ar, zn);
      ro.observe(en);
      const mo = (We) => {
        Re(!We[0].isIntersecting);
      }, ve = new IntersectionObserver(mo, zn);
      return ve.observe(on), () => {
        ro.disconnect(), ve.disconnect();
      };
    }
  }, [B, _, ue, y == null ? void 0 : y.length]), w.useEffect(() => {
    me(!0);
  }, []), w.useEffect(() => {
    gt();
  }), w.useEffect(() => {
    zt(d_ !== ge);
  }, [zt, ge]), w.useImperativeHandle(m, () => ({
    updateIndicator: gt,
    updateScrollButtons: bt
  }), [gt, bt]);
  const [Ge, Et] = yn("indicator", {
    className: nt(j.indicator, H.className),
    elementType: XQ,
    externalForwardedProps: it,
    ownerState: X,
    additionalProps: {
      style: ge
    }
  }), At = /* @__PURE__ */ A.jsx(Ge, {
    ...Et
  });
  let pn = 0;
  const fn = w.Children.map(y, (Ct) => {
    if (!/* @__PURE__ */ w.isValidElement(Ct))
      return null;
    process.env.NODE_ENV !== "production" && vf.isFragment(Ct) && console.error(["MUI: The Tabs component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`));
    const St = Ct.props.value === void 0 ? pn : Ct.props.value;
    et.set(St, pn);
    const en = St === z;
    return pn += 1, /* @__PURE__ */ w.cloneElement(Ct, {
      fullWidth: I === "fullWidth",
      indicator: en && !ce && At,
      selected: en,
      selectionFollowsFocus: L,
      onChange: E,
      textColor: Q,
      value: St,
      ...pn === 1 && z === !1 && !Ct.props.tabIndex ? {
        tabIndex: 0
      } : {}
    });
  }), mr = (Ct) => {
    if (Ct.altKey || Ct.shiftKey || Ct.ctrlKey || Ct.metaKey)
      return;
    const St = rt.current, en = ao(St).activeElement;
    if (en.getAttribute("role") !== "tab")
      return;
    let zn = k === "horizontal" ? "ArrowLeft" : "ArrowUp", Ar = k === "horizontal" ? "ArrowRight" : "ArrowDown";
    switch (k === "horizontal" && u && (zn = "ArrowRight", Ar = "ArrowLeft"), Ct.key) {
      case zn:
        Ct.preventDefault(), r0(St, en, c_);
        break;
      case Ar:
        Ct.preventDefault(), r0(St, en, u_);
        break;
      case "Home":
        Ct.preventDefault(), r0(St, null, u_);
        break;
      case "End":
        Ct.preventDefault(), r0(St, null, c_);
        break;
    }
  }, qn = xt(), [Nr, gr] = yn("root", {
    ref: n,
    className: nt(j.root, C),
    elementType: qQ,
    externalForwardedProps: {
      ...it,
      ...W,
      component: S
    },
    ownerState: X
  }), [Po, Mo] = yn("scroller", {
    ref: Ne,
    className: j.scroller,
    elementType: KQ,
    externalForwardedProps: it,
    ownerState: X,
    additionalProps: {
      style: {
        overflow: _e.overflow,
        [ee ? `margin${u ? "Left" : "Right"}` : "marginBottom"]: G ? void 0 : -_e.scrollbarWidth
      }
    }
  }), [Ut, fr] = yn("list", {
    ref: rt,
    className: nt(j.list, j.flexContainer),
    elementType: YQ,
    externalForwardedProps: it,
    ownerState: X,
    getSlotProps: (Ct) => ({
      ...Ct,
      onKeyDown: (St) => {
        var en;
        mr(St), (en = Ct.onKeyDown) == null || en.call(Ct, St);
      }
    })
  });
  return /* @__PURE__ */ A.jsxs(Nr, {
    ...gr,
    children: [qn.scrollButtonStart, qn.scrollbarSizeListener, /* @__PURE__ */ A.jsxs(Po, {
      ...Mo,
      children: [/* @__PURE__ */ A.jsx(Ut, {
        "aria-label": d,
        "aria-labelledby": p,
        "aria-orientation": k === "vertical" ? "vertical" : null,
        role: "tablist",
        ...fr,
        children: fn
      }), ce && At]
    }), qn.scrollButtonEnd]
  });
});
process.env.NODE_ENV !== "production" && (v2.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Callback fired when the component mounts.
   * This is useful when you want to trigger an action programmatically.
   * It supports two actions: `updateIndicator()` and `updateScrollButtons()`
   *
   * @param {object} actions This object contains all possible actions
   * that can be triggered programmatically.
   */
  action: Ea,
  /**
   * If `true`, the scroll buttons aren't forced hidden on mobile.
   * By default the scroll buttons are hidden on mobile and takes precedence over `scrollButtons`.
   * @default false
   */
  allowScrollButtonsMobile: a.bool,
  /**
   * The label for the Tabs as a string.
   */
  "aria-label": a.string,
  /**
   * An id or list of ids separated by a space that label the Tabs.
   */
  "aria-labelledby": a.string,
  /**
   * If `true`, the tabs are centered.
   * This prop is intended for large views.
   * @default false
   */
  centered: a.bool,
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * Determines the color of the indicator.
   * @default 'primary'
   */
  indicatorColor: a.oneOfType([a.oneOf(["primary", "secondary"]), a.string]),
  /**
   * Callback fired when the value changes.
   *
   * @param {React.SyntheticEvent} event The event source of the callback. **Warning**: This is a generic event not a change event.
   * @param {any} value We default to the index of the child (number)
   */
  onChange: a.func,
  /**
   * The component orientation (layout flow direction).
   * @default 'horizontal'
   */
  orientation: a.oneOf(["horizontal", "vertical"]),
  /**
   * The component used to render the scroll buttons.
   * @deprecated use the `slots.scrollButtons` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default TabScrollButton
   */
  ScrollButtonComponent: a.elementType,
  /**
   * Determine behavior of scroll buttons when tabs are set to scroll:
   *
   * - `auto` will only present them when not all the items are visible.
   * - `true` will always present them.
   * - `false` will never present them.
   *
   * By default the scroll buttons are hidden on mobile.
   * This behavior can be disabled with `allowScrollButtonsMobile`.
   * @default 'auto'
   */
  scrollButtons: a.oneOf(["auto", !1, !0]),
  /**
   * If `true` the selected tab changes on focus. Otherwise it only
   * changes on activation.
   */
  selectionFollowsFocus: a.bool,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    endScrollButtonIcon: a.oneOfType([a.func, a.object]),
    indicator: a.oneOfType([a.func, a.object]),
    list: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object]),
    scrollbar: a.oneOfType([a.func, a.object]),
    scrollButtons: a.oneOfType([a.func, a.object]),
    scroller: a.oneOfType([a.func, a.object]),
    startScrollButtonIcon: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    endScrollButtonIcon: a.elementType,
    EndScrollButtonIcon: a.elementType,
    indicator: a.elementType,
    list: a.elementType,
    root: a.elementType,
    scrollbar: a.elementType,
    scrollButtons: a.elementType,
    scroller: a.elementType,
    startScrollButtonIcon: a.elementType,
    StartScrollButtonIcon: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * Props applied to the tab indicator element.
   * @deprecated use the `slotProps.indicator` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default  {}
   */
  TabIndicatorProps: a.object,
  /**
   * Props applied to the [`TabScrollButton`](https://mui.com/material-ui/api/tab-scroll-button/) element.
   * @deprecated use the `slotProps.scrollButtons` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  TabScrollButtonProps: a.object,
  /**
   * Determines the color of the `Tab`.
   * @default 'primary'
   */
  textColor: a.oneOf(["inherit", "primary", "secondary"]),
  /**
   * The value of the currently selected `Tab`.
   * If you don't want any selected `Tab`, you can set this prop to `false`.
   */
  value: a.any,
  /**
   * Determines additional display behavior of the tabs:
   *
   *  - `scrollable` will invoke scrolling properties and allow for horizontally
   *  scrolling (or swiping) of the tab bar.
   *  - `fullWidth` will make the tabs grow to use all the available space,
   *  which should be used for small views, like on mobile.
   *  - `standard` will render the default state.
   * @default 'standard'
   */
  variant: a.oneOf(["fullWidth", "scrollable", "standard"]),
  /**
   * If `true`, the scrollbar is visible. It can be useful when displaying
   * a long vertical list of tabs.
   * @default false
   */
  visibleScrollbar: a.bool
});
function JQ(e) {
  return mn("MuiTextField", e);
}
bn("MuiTextField", ["root"]);
const ZQ = {
  standard: DE,
  filled: IE,
  outlined: NE
}, eJ = (e) => {
  const {
    classes: t
  } = e;
  return yt({
    root: ["root"]
  }, JQ, t);
}, tJ = Be(zP, {
  name: "MuiTextField",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({}), Jp = /* @__PURE__ */ w.forwardRef(function(t, n) {
  const i = xn({
    props: t,
    name: "MuiTextField"
  }), {
    autoComplete: s,
    autoFocus: u = !1,
    children: d,
    className: p,
    color: m = "primary",
    defaultValue: v,
    disabled: y = !1,
    error: C = !1,
    FormHelperTextProps: S,
    fullWidth: R = !1,
    helperText: O,
    id: E,
    InputLabelProps: k,
    inputProps: F,
    InputProps: _,
    inputRef: L,
    label: M,
    maxRows: D,
    minRows: H,
    multiline: K = !1,
    name: Q,
    onBlur: z,
    onChange: I,
    onFocus: G,
    placeholder: W,
    required: B = !1,
    rows: ee,
    select: U = !1,
    SelectProps: q,
    slots: Y = {},
    slotProps: ne = {},
    type: re,
    value: X,
    variant: j = "outlined",
    ...ie
  } = i, fe = {
    ...i,
    autoFocus: u,
    color: m,
    disabled: y,
    error: C,
    fullWidth: R,
    multiline: K,
    required: B,
    select: U,
    variant: j
  }, ce = eJ(fe);
  process.env.NODE_ENV !== "production" && U && !d && console.error("MUI: `children` must be passed when using the `TextField` component with `select`.");
  const me = Sr(E), ge = O && me ? `${me}-helper-text` : void 0, de = M && me ? `${me}-label` : void 0, pe = ZQ[j], be = {
    slots: Y,
    slotProps: {
      input: _,
      inputLabel: k,
      htmlInput: F,
      formHelperText: S,
      select: q,
      ...ne
    }
  }, Ce = {}, Re = be.slotProps.inputLabel;
  j === "outlined" && (Re && typeof Re.shrink < "u" && (Ce.notched = Re.shrink), Ce.label = M), U && ((!q || !q.native) && (Ce.id = void 0), Ce["aria-describedby"] = void 0);
  const [ue, we] = yn("root", {
    elementType: tJ,
    shouldForwardComponentProp: !0,
    externalForwardedProps: {
      ...be,
      ...ie
    },
    ownerState: fe,
    className: nt(ce.root, p),
    ref: n,
    additionalProps: {
      disabled: y,
      error: C,
      fullWidth: R,
      required: B,
      color: m,
      variant: j
    }
  }), [_e, He] = yn("input", {
    elementType: pe,
    externalForwardedProps: be,
    additionalProps: Ce,
    ownerState: fe
  }), [et, Ne] = yn("inputLabel", {
    elementType: HP,
    externalForwardedProps: be,
    ownerState: fe
  }), [rt, it] = yn("htmlInput", {
    elementType: "input",
    externalForwardedProps: be,
    ownerState: fe
  }), [wt, gt] = yn("formHelperText", {
    elementType: Gj,
    externalForwardedProps: be,
    ownerState: fe
  }), [ot, jt] = yn("select", {
    elementType: ov,
    externalForwardedProps: be,
    ownerState: fe
  }), ct = /* @__PURE__ */ A.jsx(_e, {
    "aria-describedby": ge,
    autoComplete: s,
    autoFocus: u,
    defaultValue: v,
    fullWidth: R,
    multiline: K,
    name: Q,
    rows: ee,
    maxRows: D,
    minRows: H,
    type: re,
    value: X,
    id: me,
    inputRef: L,
    onBlur: z,
    onChange: I,
    onFocus: G,
    placeholder: W,
    inputProps: it,
    slots: {
      input: Y.htmlInput ? rt : void 0
    },
    ...He
  });
  return /* @__PURE__ */ A.jsxs(ue, {
    ...we,
    children: [M != null && M !== "" && /* @__PURE__ */ A.jsx(et, {
      htmlFor: me,
      id: de,
      ...Ne,
      children: M
    }), U ? /* @__PURE__ */ A.jsx(ot, {
      "aria-describedby": ge,
      id: me,
      labelId: de,
      value: X,
      input: ct,
      ...jt,
      children: d
    }) : ct, O && /* @__PURE__ */ A.jsx(wt, {
      id: ge,
      ...gt,
      children: O
    })]
  });
});
process.env.NODE_ENV !== "production" && (Jp.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: a.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   * @default false
   */
  autoFocus: a.bool,
  /**
   * @ignore
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: a.oneOfType([a.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), a.string]),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: a.any,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: a.bool,
  /**
   * If `true`, the label is displayed in an error state.
   * @default false
   */
  error: a.bool,
  /**
   * Props applied to the [`FormHelperText`](https://mui.com/material-ui/api/form-helper-text/) element.
   * @deprecated Use `slotProps.formHelperText` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  FormHelperTextProps: a.object,
  /**
   * If `true`, the input will take up the full width of its container.
   * @default false
   */
  fullWidth: a.bool,
  /**
   * The helper text content.
   */
  helperText: a.node,
  /**
   * The id of the `input` element.
   * Use this prop to make `label` and `helperText` accessible for screen readers.
   */
  id: a.string,
  /**
   * Props applied to the [`InputLabel`](https://mui.com/material-ui/api/input-label/) element.
   * Pointer events like `onClick` are enabled if and only if `shrink` is `true`.
   * @deprecated Use `slotProps.inputLabel` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  InputLabelProps: a.object,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @deprecated Use `slotProps.htmlInput` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  inputProps: a.object,
  /**
   * Props applied to the Input element.
   * It will be a [`FilledInput`](https://mui.com/material-ui/api/filled-input/),
   * [`OutlinedInput`](https://mui.com/material-ui/api/outlined-input/) or [`Input`](https://mui.com/material-ui/api/input/)
   * component depending on the `variant` prop value.
   * @deprecated Use `slotProps.input` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  InputProps: a.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Ea,
  /**
   * The label content.
   */
  label: a.node,
  /**
   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.
   * @default 'none'
   */
  margin: a.oneOf(["dense", "none", "normal"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: a.oneOfType([a.number, a.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: a.oneOfType([a.number, a.string]),
  /**
   * If `true`, a `textarea` element is rendered instead of an input.
   * @default false
   */
  multiline: a.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: a.string,
  /**
   * @ignore
   */
  onBlur: a.func,
  /**
   * Callback fired when the value is changed.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: a.func,
  /**
   * @ignore
   */
  onFocus: a.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: a.string,
  /**
   * If `true`, the label is displayed as required and the `input` element is required.
   * @default false
   */
  required: a.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: a.oneOfType([a.number, a.string]),
  /**
   * Render a [`Select`](https://mui.com/material-ui/api/select/) element while passing the Input element to `Select` as `input` parameter.
   * If this option is set you must pass the options of the select as children.
   * @default false
   */
  select: a.bool,
  /**
   * Props applied to the [`Select`](https://mui.com/material-ui/api/select/) element.
   * @deprecated Use `slotProps.select` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  SelectProps: a.object,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: a.oneOfType([a.oneOf(["medium", "small"]), a.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    formHelperText: a.oneOfType([a.func, a.object]),
    htmlInput: a.oneOfType([a.func, a.object]),
    input: a.oneOfType([a.func, a.object]),
    inputLabel: a.oneOfType([a.func, a.object]),
    select: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    formHelperText: a.elementType,
    htmlInput: a.elementType,
    input: a.elementType,
    inputLabel: a.elementType,
    root: a.elementType,
    select: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   */
  type: a.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: a.any,
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: a.oneOf(["filled", "outlined", "standard"])
});
/**
 * @remix-run/router v1.23.0
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
function dC() {
  return dC = Object.assign ? Object.assign.bind() : function(e) {
    for (var t = 1; t < arguments.length; t++) {
      var n = arguments[t];
      for (var i in n)
        Object.prototype.hasOwnProperty.call(n, i) && (e[i] = n[i]);
    }
    return e;
  }, dC.apply(this, arguments);
}
var ff;
(function(e) {
  e.Pop = "POP", e.Push = "PUSH", e.Replace = "REPLACE";
})(ff || (ff = {}));
const p_ = "popstate";
function nJ(e) {
  e === void 0 && (e = {});
  function t(i, s) {
    let {
      pathname: u,
      search: d,
      hash: p
    } = i.location;
    return _k(
      "",
      {
        pathname: u,
        search: d,
        hash: p
      },
      // state defaults to `null` because `window.history.state` does
      s.state && s.state.usr || null,
      s.state && s.state.key || "default"
    );
  }
  function n(i, s) {
    return typeof s == "string" ? s : fC(s);
  }
  return oJ(t, n, null, e);
}
function Bn(e, t) {
  if (e === !1 || e === null || typeof e > "u")
    throw new Error(t);
}
function Ku(e, t) {
  if (!e) {
    typeof console < "u" && console.warn(t);
    try {
      throw new Error(t);
    } catch {
    }
  }
}
function rJ() {
  return Math.random().toString(36).substr(2, 8);
}
function h_(e, t) {
  return {
    usr: e.state,
    key: e.key,
    idx: t
  };
}
function _k(e, t, n, i) {
  return n === void 0 && (n = null), dC({
    pathname: typeof e == "string" ? e : e.pathname,
    search: "",
    hash: ""
  }, typeof t == "string" ? iv(t) : t, {
    state: n,
    // TODO: This could be cleaned up.  push/replace should probably just take
    // full Locations now and avoid the need to run through this flow at all
    // But that's a pretty big refactor to the current test suite so going to
    // keep as is for the time being and just let any incoming keys take precedence
    key: t && t.key || i || rJ()
  });
}
function fC(e) {
  let {
    pathname: t = "/",
    search: n = "",
    hash: i = ""
  } = e;
  return n && n !== "?" && (t += n.charAt(0) === "?" ? n : "?" + n), i && i !== "#" && (t += i.charAt(0) === "#" ? i : "#" + i), t;
}
function iv(e) {
  let t = {};
  if (e) {
    let n = e.indexOf("#");
    n >= 0 && (t.hash = e.substr(n), e = e.substr(0, n));
    let i = e.indexOf("?");
    i >= 0 && (t.search = e.substr(i), e = e.substr(0, i)), e && (t.pathname = e);
  }
  return t;
}
function oJ(e, t, n, i) {
  i === void 0 && (i = {});
  let {
    window: s = document.defaultView,
    v5Compat: u = !1
  } = i, d = s.history, p = ff.Pop, m = null, v = y();
  v == null && (v = 0, d.replaceState(dC({}, d.state, {
    idx: v
  }), ""));
  function y() {
    return (d.state || {
      idx: null
    }).idx;
  }
  function C() {
    p = ff.Pop;
    let k = y(), F = k == null ? null : k - v;
    v = k, m && m({
      action: p,
      location: E.location,
      delta: F
    });
  }
  function S(k, F) {
    p = ff.Push;
    let _ = _k(E.location, k, F);
    v = y() + 1;
    let L = h_(_, v), M = E.createHref(_);
    try {
      d.pushState(L, "", M);
    } catch (D) {
      if (D instanceof DOMException && D.name === "DataCloneError")
        throw D;
      s.location.assign(M);
    }
    u && m && m({
      action: p,
      location: E.location,
      delta: 1
    });
  }
  function R(k, F) {
    p = ff.Replace;
    let _ = _k(E.location, k, F);
    v = y();
    let L = h_(_, v), M = E.createHref(_);
    d.replaceState(L, "", M), u && m && m({
      action: p,
      location: E.location,
      delta: 0
    });
  }
  function O(k) {
    let F = s.location.origin !== "null" ? s.location.origin : s.location.href, _ = typeof k == "string" ? k : fC(k);
    return _ = _.replace(/ $/, "%20"), Bn(F, "No window.location.(origin|href) available to create URL for href: " + _), new URL(_, F);
  }
  let E = {
    get action() {
      return p;
    },
    get location() {
      return e(s, d);
    },
    listen(k) {
      if (m)
        throw new Error("A history only accepts one active listener");
      return s.addEventListener(p_, C), m = k, () => {
        s.removeEventListener(p_, C), m = null;
      };
    },
    createHref(k) {
      return t(s, k);
    },
    createURL: O,
    encodeLocation(k) {
      let F = O(k);
      return {
        pathname: F.pathname,
        search: F.search,
        hash: F.hash
      };
    },
    push: S,
    replace: R,
    go(k) {
      return d.go(k);
    }
  };
  return E;
}
var m_;
(function(e) {
  e.data = "data", e.deferred = "deferred", e.redirect = "redirect", e.error = "error";
})(m_ || (m_ = {}));
function iJ(e, t, n) {
  return n === void 0 && (n = "/"), aJ(e, t, n);
}
function aJ(e, t, n, i) {
  let s = typeof t == "string" ? iv(t) : t, u = Sf(s.pathname || "/", n);
  if (u == null)
    return null;
  let d = y2(e);
  sJ(d);
  let p = null;
  for (let m = 0; p == null && m < d.length; ++m) {
    let v = yJ(u);
    p = gJ(d[m], v);
  }
  return p;
}
function y2(e, t, n, i) {
  t === void 0 && (t = []), n === void 0 && (n = []), i === void 0 && (i = "");
  let s = (u, d, p) => {
    let m = {
      relativePath: p === void 0 ? u.path || "" : p,
      caseSensitive: u.caseSensitive === !0,
      childrenIndex: d,
      route: u
    };
    m.relativePath.startsWith("/") && (Bn(m.relativePath.startsWith(i), 'Absolute route path "' + m.relativePath + '" nested under path ' + ('"' + i + '" is not valid. An absolute child route path ') + "must start with the combined path of all its parent routes."), m.relativePath = m.relativePath.slice(i.length));
    let v = qc([i, m.relativePath]), y = n.concat(m);
    u.children && u.children.length > 0 && (Bn(
      // Our types know better, but runtime JS may not!
      // @ts-expect-error
      u.index !== !0,
      "Index routes must not have child routes. Please remove " + ('all child routes from route path "' + v + '".')
    ), y2(u.children, t, y, v)), !(u.path == null && !u.index) && t.push({
      path: v,
      score: hJ(v, u.index),
      routesMeta: y
    });
  };
  return e.forEach((u, d) => {
    var p;
    if (u.path === "" || !((p = u.path) != null && p.includes("?")))
      s(u, d);
    else
      for (let m of b2(u.path))
        s(u, d, m);
  }), t;
}
function b2(e) {
  let t = e.split("/");
  if (t.length === 0) return [];
  let [n, ...i] = t, s = n.endsWith("?"), u = n.replace(/\?$/, "");
  if (i.length === 0)
    return s ? [u, ""] : [u];
  let d = b2(i.join("/")), p = [];
  return p.push(...d.map((m) => m === "" ? u : [u, m].join("/"))), s && p.push(...d), p.map((m) => e.startsWith("/") && m === "" ? "/" : m);
}
function sJ(e) {
  e.sort((t, n) => t.score !== n.score ? n.score - t.score : mJ(t.routesMeta.map((i) => i.childrenIndex), n.routesMeta.map((i) => i.childrenIndex)));
}
const lJ = /^:[\w-]+$/, uJ = 3, cJ = 2, dJ = 1, fJ = 10, pJ = -2, g_ = (e) => e === "*";
function hJ(e, t) {
  let n = e.split("/"), i = n.length;
  return n.some(g_) && (i += pJ), t && (i += cJ), n.filter((s) => !g_(s)).reduce((s, u) => s + (lJ.test(u) ? uJ : u === "" ? dJ : fJ), i);
}
function mJ(e, t) {
  return e.length === t.length && e.slice(0, -1).every((i, s) => i === t[s]) ? (
    // If two routes are siblings, we should try to match the earlier sibling
    // first. This allows people to have fine-grained control over the matching
    // behavior by simply putting routes with identical paths in the order they
    // want them tried.
    e[e.length - 1] - t[t.length - 1]
  ) : (
    // Otherwise, it doesn't really make sense to rank non-siblings by index,
    // so they sort equally.
    0
  );
}
function gJ(e, t, n) {
  let {
    routesMeta: i
  } = e, s = {}, u = "/", d = [];
  for (let p = 0; p < i.length; ++p) {
    let m = i[p], v = p === i.length - 1, y = u === "/" ? t : t.slice(u.length) || "/", C = Ak({
      path: m.relativePath,
      caseSensitive: m.caseSensitive,
      end: v
    }, y), S = m.route;
    if (!C)
      return null;
    Object.assign(s, C.params), d.push({
      // TODO: Can this as be avoided?
      params: s,
      pathname: qc([u, C.pathname]),
      pathnameBase: wJ(qc([u, C.pathnameBase])),
      route: S
    }), C.pathnameBase !== "/" && (u = qc([u, C.pathnameBase]));
  }
  return d;
}
function Ak(e, t) {
  typeof e == "string" && (e = {
    path: e,
    caseSensitive: !1,
    end: !0
  });
  let [n, i] = vJ(e.path, e.caseSensitive, e.end), s = t.match(n);
  if (!s) return null;
  let u = s[0], d = u.replace(/(.)\/+$/, "$1"), p = s.slice(1);
  return {
    params: i.reduce((v, y, C) => {
      let {
        paramName: S,
        isOptional: R
      } = y;
      if (S === "*") {
        let E = p[C] || "";
        d = u.slice(0, u.length - E.length).replace(/(.)\/+$/, "$1");
      }
      const O = p[C];
      return R && !O ? v[S] = void 0 : v[S] = (O || "").replace(/%2F/g, "/"), v;
    }, {}),
    pathname: u,
    pathnameBase: d,
    pattern: e
  };
}
function vJ(e, t, n) {
  t === void 0 && (t = !1), n === void 0 && (n = !0), Ku(e === "*" || !e.endsWith("*") || e.endsWith("/*"), 'Route path "' + e + '" will be treated as if it were ' + ('"' + e.replace(/\*$/, "/*") + '" because the `*` character must ') + "always follow a `/` in the pattern. To get rid of this warning, " + ('please change the route path to "' + e.replace(/\*$/, "/*") + '".'));
  let i = [], s = "^" + e.replace(/\/*\*?$/, "").replace(/^\/*/, "/").replace(/[\\.*+^${}|()[\]]/g, "\\$&").replace(/\/:([\w-]+)(\?)?/g, (d, p, m) => (i.push({
    paramName: p,
    isOptional: m != null
  }), m ? "/?([^\\/]+)?" : "/([^\\/]+)"));
  return e.endsWith("*") ? (i.push({
    paramName: "*"
  }), s += e === "*" || e === "/*" ? "(.*)$" : "(?:\\/(.+)|\\/*)$") : n ? s += "\\/*$" : e !== "" && e !== "/" && (s += "(?:(?=\\/|$))"), [new RegExp(s, t ? void 0 : "i"), i];
}
function yJ(e) {
  try {
    return e.split("/").map((t) => decodeURIComponent(t).replace(/\//g, "%2F")).join("/");
  } catch (t) {
    return Ku(!1, 'The URL path "' + e + '" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent ' + ("encoding (" + t + ").")), e;
  }
}
function Sf(e, t) {
  if (t === "/") return e;
  if (!e.toLowerCase().startsWith(t.toLowerCase()))
    return null;
  let n = t.endsWith("/") ? t.length - 1 : t.length, i = e.charAt(n);
  return i && i !== "/" ? null : e.slice(n) || "/";
}
function bJ(e, t) {
  t === void 0 && (t = "/");
  let {
    pathname: n,
    search: i = "",
    hash: s = ""
  } = typeof e == "string" ? iv(e) : e;
  return {
    pathname: n ? n.startsWith("/") ? n : CJ(n, t) : t,
    search: xJ(i),
    hash: EJ(s)
  };
}
function CJ(e, t) {
  let n = t.replace(/\/+$/, "").split("/");
  return e.split("/").forEach((s) => {
    s === ".." ? n.length > 1 && n.pop() : s !== "." && n.push(s);
  }), n.length > 1 ? n.join("/") : "/";
}
function FO(e, t, n, i) {
  return "Cannot include a '" + e + "' character in a manually specified " + ("`to." + t + "` field [" + JSON.stringify(i) + "].  Please separate it out to the ") + ("`to." + n + "` field. Alternatively you may provide the full path as ") + 'a string in <Link to="..."> and the router will parse it for you.';
}
function SJ(e) {
  return e.filter((t, n) => n === 0 || t.route.path && t.route.path.length > 0);
}
function C2(e, t) {
  let n = SJ(e);
  return t ? n.map((i, s) => s === n.length - 1 ? i.pathname : i.pathnameBase) : n.map((i) => i.pathnameBase);
}
function S2(e, t, n, i) {
  i === void 0 && (i = !1);
  let s;
  typeof e == "string" ? s = iv(e) : (s = dC({}, e), Bn(!s.pathname || !s.pathname.includes("?"), FO("?", "pathname", "search", s)), Bn(!s.pathname || !s.pathname.includes("#"), FO("#", "pathname", "hash", s)), Bn(!s.search || !s.search.includes("#"), FO("#", "search", "hash", s)));
  let u = e === "" || s.pathname === "", d = u ? "/" : s.pathname, p;
  if (d == null)
    p = n;
  else {
    let C = t.length - 1;
    if (!i && d.startsWith("..")) {
      let S = d.split("/");
      for (; S[0] === ".."; )
        S.shift(), C -= 1;
      s.pathname = S.join("/");
    }
    p = C >= 0 ? t[C] : "/";
  }
  let m = bJ(s, p), v = d && d !== "/" && d.endsWith("/"), y = (u || d === ".") && n.endsWith("/");
  return !m.pathname.endsWith("/") && (v || y) && (m.pathname += "/"), m;
}
const qc = (e) => e.join("/").replace(/\/\/+/g, "/"), wJ = (e) => e.replace(/\/+$/, "").replace(/^\/*/, "/"), xJ = (e) => !e || e === "?" ? "" : e.startsWith("?") ? e : "?" + e, EJ = (e) => !e || e === "#" ? "" : e.startsWith("#") ? e : "#" + e;
function TJ(e) {
  return e != null && typeof e.status == "number" && typeof e.statusText == "string" && typeof e.internal == "boolean" && "data" in e;
}
const w2 = ["post", "put", "patch", "delete"];
new Set(w2);
const RJ = ["get", ...w2];
new Set(RJ);
/**
 * React Router v6.30.1
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
function pC() {
  return pC = Object.assign ? Object.assign.bind() : function(e) {
    for (var t = 1; t < arguments.length; t++) {
      var n = arguments[t];
      for (var i in n)
        Object.prototype.hasOwnProperty.call(n, i) && (e[i] = n[i]);
    }
    return e;
  }, pC.apply(this, arguments);
}
const AC = /* @__PURE__ */ w.createContext(null);
process.env.NODE_ENV !== "production" && (AC.displayName = "DataRouter");
const WP = /* @__PURE__ */ w.createContext(null);
process.env.NODE_ENV !== "production" && (WP.displayName = "DataRouterState");
const OJ = /* @__PURE__ */ w.createContext(null);
process.env.NODE_ENV !== "production" && (OJ.displayName = "Await");
const ql = /* @__PURE__ */ w.createContext(null);
process.env.NODE_ENV !== "production" && (ql.displayName = "Navigation");
const $C = /* @__PURE__ */ w.createContext(null);
process.env.NODE_ENV !== "production" && ($C.displayName = "Location");
const Jc = /* @__PURE__ */ w.createContext({
  outlet: null,
  matches: [],
  isDataRoute: !1
});
process.env.NODE_ENV !== "production" && (Jc.displayName = "Route");
const qP = /* @__PURE__ */ w.createContext(null);
process.env.NODE_ENV !== "production" && (qP.displayName = "RouteError");
function kJ(e, t) {
  let {
    relative: n
  } = t === void 0 ? {} : t;
  jC() || (process.env.NODE_ENV !== "production" ? Bn(
    !1,
    // TODO: This error is probably because they somehow have 2 versions of the
    // router loaded. We can help them understand how to avoid that.
    "useHref() may be used only in the context of a <Router> component."
  ) : Bn(!1));
  let {
    basename: i,
    navigator: s
  } = w.useContext(ql), {
    hash: u,
    pathname: d,
    search: p
  } = zC(e, {
    relative: n
  }), m = d;
  return i !== "/" && (m = d === "/" ? i : qc([i, d])), s.createHref({
    pathname: m,
    search: p,
    hash: u
  });
}
function jC() {
  return w.useContext($C) != null;
}
function av() {
  return jC() || (process.env.NODE_ENV !== "production" ? Bn(
    !1,
    // TODO: This error is probably because they somehow have 2 versions of the
    // router loaded. We can help them understand how to avoid that.
    "useLocation() may be used only in the context of a <Router> component."
  ) : Bn(!1)), w.useContext($C).location;
}
const x2 = "You should call navigate() in a React.useEffect(), not when your component is first rendered.";
function E2(e) {
  w.useContext(ql).static || w.useLayoutEffect(e);
}
function T2() {
  let {
    isDataRoute: e
  } = w.useContext(Jc);
  return e ? VJ() : PJ();
}
function PJ() {
  jC() || (process.env.NODE_ENV !== "production" ? Bn(
    !1,
    // TODO: This error is probably because they somehow have 2 versions of the
    // router loaded. We can help them understand how to avoid that.
    "useNavigate() may be used only in the context of a <Router> component."
  ) : Bn(!1));
  let e = w.useContext(AC), {
    basename: t,
    future: n,
    navigator: i
  } = w.useContext(ql), {
    matches: s
  } = w.useContext(Jc), {
    pathname: u
  } = av(), d = JSON.stringify(C2(s, n.v7_relativeSplatPath)), p = w.useRef(!1);
  return E2(() => {
    p.current = !0;
  }), w.useCallback(function(v, y) {
    if (y === void 0 && (y = {}), process.env.NODE_ENV !== "production" && Ku(p.current, x2), !p.current) return;
    if (typeof v == "number") {
      i.go(v);
      return;
    }
    let C = S2(v, JSON.parse(d), u, y.relative === "path");
    e == null && t !== "/" && (C.pathname = C.pathname === "/" ? t : qc([t, C.pathname])), (y.replace ? i.replace : i.push)(C, y.state, y);
  }, [t, i, d, u, e]);
}
function zC(e, t) {
  let {
    relative: n
  } = t === void 0 ? {} : t, {
    future: i
  } = w.useContext(ql), {
    matches: s
  } = w.useContext(Jc), {
    pathname: u
  } = av(), d = JSON.stringify(C2(s, i.v7_relativeSplatPath));
  return w.useMemo(() => S2(e, JSON.parse(d), u, n === "path"), [e, d, u, n]);
}
function MJ(e, t) {
  return IJ(e, t);
}
function IJ(e, t, n, i) {
  jC() || (process.env.NODE_ENV !== "production" ? Bn(
    !1,
    // TODO: This error is probably because they somehow have 2 versions of the
    // router loaded. We can help them understand how to avoid that.
    "useRoutes() may be used only in the context of a <Router> component."
  ) : Bn(!1));
  let {
    navigator: s
  } = w.useContext(ql), {
    matches: u
  } = w.useContext(Jc), d = u[u.length - 1], p = d ? d.params : {}, m = d ? d.pathname : "/", v = d ? d.pathnameBase : "/", y = d && d.route;
  if (process.env.NODE_ENV !== "production") {
    let _ = y && y.path || "";
    O2(m, !y || _.endsWith("*"), "You rendered descendant <Routes> (or called `useRoutes()`) at " + ('"' + m + '" (under <Route path="' + _ + '">) but the ') + `parent route path has no trailing "*". This means if you navigate deeper, the parent won't match anymore and therefore the child routes will never render.

` + ('Please change the parent <Route path="' + _ + '"> to <Route ') + ('path="' + (_ === "/" ? "*" : _ + "/*") + '">.'));
  }
  let C = av(), S;
  if (t) {
    var R;
    let _ = typeof t == "string" ? iv(t) : t;
    v === "/" || (R = _.pathname) != null && R.startsWith(v) || (process.env.NODE_ENV !== "production" ? Bn(!1, "When overriding the location using `<Routes location>` or `useRoutes(routes, location)`, the location pathname must begin with the portion of the URL pathname that was " + ('matched by all parent routes. The current pathname base is "' + v + '" ') + ('but pathname "' + _.pathname + '" was given in the `location` prop.')) : Bn(!1)), S = _;
  } else
    S = C;
  let O = S.pathname || "/", E = O;
  if (v !== "/") {
    let _ = v.replace(/^\//, "").split("/");
    E = "/" + O.replace(/^\//, "").split("/").slice(_.length).join("/");
  }
  let k = iJ(e, {
    pathname: E
  });
  process.env.NODE_ENV !== "production" && (process.env.NODE_ENV !== "production" && Ku(y || k != null, 'No routes matched location "' + S.pathname + S.search + S.hash + '" '), process.env.NODE_ENV !== "production" && Ku(k == null || k[k.length - 1].route.element !== void 0 || k[k.length - 1].route.Component !== void 0 || k[k.length - 1].route.lazy !== void 0, 'Matched leaf route at location "' + S.pathname + S.search + S.hash + '" does not have an element or Component. This means it will render an <Outlet /> with a null value by default resulting in an "empty" page.'));
  let F = _J(k && k.map((_) => Object.assign({}, _, {
    params: Object.assign({}, p, _.params),
    pathname: qc([
      v,
      // Re-encode pathnames that were decoded inside matchRoutes
      s.encodeLocation ? s.encodeLocation(_.pathname).pathname : _.pathname
    ]),
    pathnameBase: _.pathnameBase === "/" ? v : qc([
      v,
      // Re-encode pathnames that were decoded inside matchRoutes
      s.encodeLocation ? s.encodeLocation(_.pathnameBase).pathname : _.pathnameBase
    ])
  })), u, n, i);
  return t && F ? /* @__PURE__ */ w.createElement($C.Provider, {
    value: {
      location: pC({
        pathname: "/",
        search: "",
        hash: "",
        state: null,
        key: "default"
      }, S),
      navigationType: ff.Pop
    }
  }, F) : F;
}
function DJ() {
  let e = HJ(), t = TJ(e) ? e.status + " " + e.statusText : e instanceof Error ? e.message : JSON.stringify(e), n = e instanceof Error ? e.stack : null, i = "rgba(200,200,200, 0.5)", s = {
    padding: "0.5rem",
    backgroundColor: i
  }, u = {
    padding: "2px 4px",
    backgroundColor: i
  }, d = null;
  return process.env.NODE_ENV !== "production" && (console.error("Error handled by React Router default ErrorBoundary:", e), d = /* @__PURE__ */ w.createElement(w.Fragment, null, /* @__PURE__ */ w.createElement("p", null, "💿 Hey developer 👋"), /* @__PURE__ */ w.createElement("p", null, "You can provide a way better UX than this when your app throws errors by providing your own ", /* @__PURE__ */ w.createElement("code", {
    style: u
  }, "ErrorBoundary"), " or", " ", /* @__PURE__ */ w.createElement("code", {
    style: u
  }, "errorElement"), " prop on your route."))), /* @__PURE__ */ w.createElement(w.Fragment, null, /* @__PURE__ */ w.createElement("h2", null, "Unexpected Application Error!"), /* @__PURE__ */ w.createElement("h3", {
    style: {
      fontStyle: "italic"
    }
  }, t), n ? /* @__PURE__ */ w.createElement("pre", {
    style: s
  }, n) : null, d);
}
const NJ = /* @__PURE__ */ w.createElement(DJ, null);
class LJ extends w.Component {
  constructor(t) {
    super(t), this.state = {
      location: t.location,
      revalidation: t.revalidation,
      error: t.error
    };
  }
  static getDerivedStateFromError(t) {
    return {
      error: t
    };
  }
  static getDerivedStateFromProps(t, n) {
    return n.location !== t.location || n.revalidation !== "idle" && t.revalidation === "idle" ? {
      error: t.error,
      location: t.location,
      revalidation: t.revalidation
    } : {
      error: t.error !== void 0 ? t.error : n.error,
      location: n.location,
      revalidation: t.revalidation || n.revalidation
    };
  }
  componentDidCatch(t, n) {
    console.error("React Router caught the following error during render", t, n);
  }
  render() {
    return this.state.error !== void 0 ? /* @__PURE__ */ w.createElement(Jc.Provider, {
      value: this.props.routeContext
    }, /* @__PURE__ */ w.createElement(qP.Provider, {
      value: this.state.error,
      children: this.props.component
    })) : this.props.children;
  }
}
function FJ(e) {
  let {
    routeContext: t,
    match: n,
    children: i
  } = e, s = w.useContext(AC);
  return s && s.static && s.staticContext && (n.route.errorElement || n.route.ErrorBoundary) && (s.staticContext._deepestRenderedBoundaryId = n.route.id), /* @__PURE__ */ w.createElement(Jc.Provider, {
    value: t
  }, i);
}
function _J(e, t, n, i) {
  var s;
  if (t === void 0 && (t = []), n === void 0 && (n = null), i === void 0 && (i = null), e == null) {
    var u;
    if (!n)
      return null;
    if (n.errors)
      e = n.matches;
    else if ((u = i) != null && u.v7_partialHydration && t.length === 0 && !n.initialized && n.matches.length > 0)
      e = n.matches;
    else
      return null;
  }
  let d = e, p = (s = n) == null ? void 0 : s.errors;
  if (p != null) {
    let y = d.findIndex((C) => C.route.id && (p == null ? void 0 : p[C.route.id]) !== void 0);
    y >= 0 || (process.env.NODE_ENV !== "production" ? Bn(!1, "Could not find a matching route for errors on route IDs: " + Object.keys(p).join(",")) : Bn(!1)), d = d.slice(0, Math.min(d.length, y + 1));
  }
  let m = !1, v = -1;
  if (n && i && i.v7_partialHydration)
    for (let y = 0; y < d.length; y++) {
      let C = d[y];
      if ((C.route.HydrateFallback || C.route.hydrateFallbackElement) && (v = y), C.route.id) {
        let {
          loaderData: S,
          errors: R
        } = n, O = C.route.loader && S[C.route.id] === void 0 && (!R || R[C.route.id] === void 0);
        if (C.route.lazy || O) {
          m = !0, v >= 0 ? d = d.slice(0, v + 1) : d = [d[0]];
          break;
        }
      }
    }
  return d.reduceRight((y, C, S) => {
    let R, O = !1, E = null, k = null;
    n && (R = p && C.route.id ? p[C.route.id] : void 0, E = C.route.errorElement || NJ, m && (v < 0 && S === 0 ? (O2("route-fallback", !1, "No `HydrateFallback` element provided to render during initial hydration"), O = !0, k = null) : v === S && (O = !0, k = C.route.hydrateFallbackElement || null)));
    let F = t.concat(d.slice(0, S + 1)), _ = () => {
      let L;
      return R ? L = E : O ? L = k : C.route.Component ? L = /* @__PURE__ */ w.createElement(C.route.Component, null) : C.route.element ? L = C.route.element : L = y, /* @__PURE__ */ w.createElement(FJ, {
        match: C,
        routeContext: {
          outlet: y,
          matches: F,
          isDataRoute: n != null
        },
        children: L
      });
    };
    return n && (C.route.ErrorBoundary || C.route.errorElement || S === 0) ? /* @__PURE__ */ w.createElement(LJ, {
      location: n.location,
      revalidation: n.revalidation,
      component: E,
      error: R,
      children: _(),
      routeContext: {
        outlet: null,
        matches: F,
        isDataRoute: !0
      }
    }) : _();
  }, null);
}
var R2 = /* @__PURE__ */ function(e) {
  return e.UseBlocker = "useBlocker", e.UseRevalidator = "useRevalidator", e.UseNavigateStable = "useNavigate", e;
}(R2 || {}), hC = /* @__PURE__ */ function(e) {
  return e.UseBlocker = "useBlocker", e.UseLoaderData = "useLoaderData", e.UseActionData = "useActionData", e.UseRouteError = "useRouteError", e.UseNavigation = "useNavigation", e.UseRouteLoaderData = "useRouteLoaderData", e.UseMatches = "useMatches", e.UseRevalidator = "useRevalidator", e.UseNavigateStable = "useNavigate", e.UseRouteId = "useRouteId", e;
}(hC || {});
function KP(e) {
  return e + " must be used within a data router.  See https://reactrouter.com/v6/routers/picking-a-router.";
}
function AJ(e) {
  let t = w.useContext(AC);
  return t || (process.env.NODE_ENV !== "production" ? Bn(!1, KP(e)) : Bn(!1)), t;
}
function $J(e) {
  let t = w.useContext(WP);
  return t || (process.env.NODE_ENV !== "production" ? Bn(!1, KP(e)) : Bn(!1)), t;
}
function jJ(e) {
  let t = w.useContext(Jc);
  return t || (process.env.NODE_ENV !== "production" ? Bn(!1, KP(e)) : Bn(!1)), t;
}
function YP(e) {
  let t = jJ(e), n = t.matches[t.matches.length - 1];
  return n.route.id || (process.env.NODE_ENV !== "production" ? Bn(!1, e + ' can only be used on routes that contain a unique "id"') : Bn(!1)), n.route.id;
}
function zJ() {
  return YP(hC.UseRouteId);
}
function HJ() {
  var e;
  let t = w.useContext(qP), n = $J(hC.UseRouteError), i = YP(hC.UseRouteError);
  return t !== void 0 ? t : (e = n.errors) == null ? void 0 : e[i];
}
function VJ() {
  let {
    router: e
  } = AJ(R2.UseNavigateStable), t = YP(hC.UseNavigateStable), n = w.useRef(!1);
  return E2(() => {
    n.current = !0;
  }), w.useCallback(function(s, u) {
    u === void 0 && (u = {}), process.env.NODE_ENV !== "production" && Ku(n.current, x2), n.current && (typeof s == "number" ? e.navigate(s) : e.navigate(s, pC({
      fromRouteId: t
    }, u)));
  }, [e, t]);
}
const v_ = {};
function O2(e, t, n) {
  !t && !v_[e] && (v_[e] = !0, process.env.NODE_ENV !== "production" && Ku(!1, n));
}
const y_ = {};
function BJ(e, t) {
  process.env.NODE_ENV !== "production" && !y_[t] && (y_[t] = !0, console.warn(t));
}
const b_ = (e, t, n) => BJ(e, "⚠️ React Router Future Flag Warning: " + t + ". " + ("You can use the `" + e + "` future flag to opt-in early. ") + ("For more information, see " + n + "."));
function UJ(e, t) {
  (e == null ? void 0 : e.v7_startTransition) === void 0 && b_("v7_startTransition", "React Router will begin wrapping state updates in `React.startTransition` in v7", "https://reactrouter.com/v6/upgrading/future#v7_starttransition"), (e == null ? void 0 : e.v7_relativeSplatPath) === void 0 && b_("v7_relativeSplatPath", "Relative route resolution within Splat routes is changing in v7", "https://reactrouter.com/v6/upgrading/future#v7_relativesplatpath");
}
function wg(e) {
  process.env.NODE_ENV !== "production" ? Bn(!1, "A <Route> is only ever to be used as the child of <Routes> element, never rendered directly. Please wrap your <Route> in a <Routes>.") : Bn(!1);
}
function GJ(e) {
  let {
    basename: t = "/",
    children: n = null,
    location: i,
    navigationType: s = ff.Pop,
    navigator: u,
    static: d = !1,
    future: p
  } = e;
  jC() && (process.env.NODE_ENV !== "production" ? Bn(!1, "You cannot render a <Router> inside another <Router>. You should never have more than one in your app.") : Bn(!1));
  let m = t.replace(/^\/*/, "/"), v = w.useMemo(() => ({
    basename: m,
    navigator: u,
    static: d,
    future: pC({
      v7_relativeSplatPath: !1
    }, p)
  }), [m, p, u, d]);
  typeof i == "string" && (i = iv(i));
  let {
    pathname: y = "/",
    search: C = "",
    hash: S = "",
    state: R = null,
    key: O = "default"
  } = i, E = w.useMemo(() => {
    let k = Sf(y, m);
    return k == null ? null : {
      location: {
        pathname: k,
        search: C,
        hash: S,
        state: R,
        key: O
      },
      navigationType: s
    };
  }, [m, y, C, S, R, O, s]);
  return process.env.NODE_ENV !== "production" && Ku(E != null, '<Router basename="' + m + '"> is not able to match the URL ' + ('"' + y + C + S + '" because it does not start with the ') + "basename, so the <Router> won't render anything."), E == null ? null : /* @__PURE__ */ w.createElement(ql.Provider, {
    value: v
  }, /* @__PURE__ */ w.createElement($C.Provider, {
    children: n,
    value: E
  }));
}
function WJ(e) {
  let {
    children: t,
    location: n
  } = e;
  return MJ($k(t), n);
}
new Promise(() => {
});
function $k(e, t) {
  t === void 0 && (t = []);
  let n = [];
  return w.Children.forEach(e, (i, s) => {
    if (!/* @__PURE__ */ w.isValidElement(i))
      return;
    let u = [...t, s];
    if (i.type === w.Fragment) {
      n.push.apply(n, $k(i.props.children, u));
      return;
    }
    i.type !== wg && (process.env.NODE_ENV !== "production" ? Bn(!1, "[" + (typeof i.type == "string" ? i.type : i.type.name) + "] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>") : Bn(!1)), !i.props.index || !i.props.children || (process.env.NODE_ENV !== "production" ? Bn(!1, "An index route cannot have child routes.") : Bn(!1));
    let d = {
      id: i.props.id || u.join("-"),
      caseSensitive: i.props.caseSensitive,
      element: i.props.element,
      Component: i.props.Component,
      index: i.props.index,
      path: i.props.path,
      loader: i.props.loader,
      action: i.props.action,
      errorElement: i.props.errorElement,
      ErrorBoundary: i.props.ErrorBoundary,
      hasErrorBoundary: i.props.ErrorBoundary != null || i.props.errorElement != null,
      shouldRevalidate: i.props.shouldRevalidate,
      handle: i.props.handle,
      lazy: i.props.lazy
    };
    i.props.children && (d.children = $k(i.props.children, u)), n.push(d);
  }), n;
}
/**
 * React Router DOM v6.30.1
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
function Qg() {
  return Qg = Object.assign ? Object.assign.bind() : function(e) {
    for (var t = 1; t < arguments.length; t++) {
      var n = arguments[t];
      for (var i in n)
        Object.prototype.hasOwnProperty.call(n, i) && (e[i] = n[i]);
    }
    return e;
  }, Qg.apply(this, arguments);
}
function XP(e, t) {
  if (e == null) return {};
  var n = {}, i = Object.keys(e), s, u;
  for (u = 0; u < i.length; u++)
    s = i[u], !(t.indexOf(s) >= 0) && (n[s] = e[s]);
  return n;
}
const g0 = "get", v0 = "application/x-www-form-urlencoded";
function LE(e) {
  return e != null && typeof e.tagName == "string";
}
function qJ(e) {
  return LE(e) && e.tagName.toLowerCase() === "button";
}
function KJ(e) {
  return LE(e) && e.tagName.toLowerCase() === "form";
}
function YJ(e) {
  return LE(e) && e.tagName.toLowerCase() === "input";
}
function XJ(e) {
  return !!(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey);
}
function QJ(e, t) {
  return e.button === 0 && // Ignore everything but left clicks
  (!t || t === "_self") && // Let browser handle "target=_blank" etc.
  !XJ(e);
}
let o0 = null;
function JJ() {
  if (o0 === null)
    try {
      new FormData(
        document.createElement("form"),
        // @ts-expect-error if FormData supports the submitter parameter, this will throw
        0
      ), o0 = !1;
    } catch {
      o0 = !0;
    }
  return o0;
}
const ZJ = /* @__PURE__ */ new Set(["application/x-www-form-urlencoded", "multipart/form-data", "text/plain"]);
function _O(e) {
  return e != null && !ZJ.has(e) ? (process.env.NODE_ENV !== "production" && Ku(!1, '"' + e + '" is not a valid `encType` for `<Form>`/`<fetcher.Form>` ' + ('and will default to "' + v0 + '"')), null) : e;
}
function eZ(e, t) {
  let n, i, s, u, d;
  if (KJ(e)) {
    let p = e.getAttribute("action");
    i = p ? Sf(p, t) : null, n = e.getAttribute("method") || g0, s = _O(e.getAttribute("enctype")) || v0, u = new FormData(e);
  } else if (qJ(e) || YJ(e) && (e.type === "submit" || e.type === "image")) {
    let p = e.form;
    if (p == null)
      throw new Error('Cannot submit a <button> or <input type="submit"> without a <form>');
    let m = e.getAttribute("formaction") || p.getAttribute("action");
    if (i = m ? Sf(m, t) : null, n = e.getAttribute("formmethod") || p.getAttribute("method") || g0, s = _O(e.getAttribute("formenctype")) || _O(p.getAttribute("enctype")) || v0, u = new FormData(p, e), !JJ()) {
      let {
        name: v,
        type: y,
        value: C
      } = e;
      if (y === "image") {
        let S = v ? v + "." : "";
        u.append(S + "x", "0"), u.append(S + "y", "0");
      } else v && u.append(v, C);
    }
  } else {
    if (LE(e))
      throw new Error('Cannot submit element that is not <form>, <button>, or <input type="submit|image">');
    n = g0, i = null, s = v0, d = e;
  }
  return u && s === "text/plain" && (d = u, u = void 0), {
    action: i,
    method: n.toLowerCase(),
    encType: s,
    formData: u,
    body: d
  };
}
const tZ = ["onClick", "relative", "reloadDocument", "replace", "state", "target", "to", "preventScrollReset", "viewTransition"], nZ = ["aria-current", "caseSensitive", "className", "end", "style", "to", "viewTransition", "children"], rZ = ["fetcherKey", "navigate", "reloadDocument", "replace", "state", "method", "action", "onSubmit", "relative", "preventScrollReset", "viewTransition"], oZ = "6";
try {
  window.__reactRouterVersion = oZ;
} catch {
}
const k2 = /* @__PURE__ */ w.createContext({
  isTransitioning: !1
});
process.env.NODE_ENV !== "production" && (k2.displayName = "ViewTransition");
const iZ = /* @__PURE__ */ w.createContext(/* @__PURE__ */ new Map());
process.env.NODE_ENV !== "production" && (iZ.displayName = "Fetchers");
const aZ = "startTransition", C_ = w0[aZ];
function sZ(e) {
  let {
    basename: t,
    children: n,
    future: i,
    window: s
  } = e, u = w.useRef();
  u.current == null && (u.current = nJ({
    window: s,
    v5Compat: !0
  }));
  let d = u.current, [p, m] = w.useState({
    action: d.action,
    location: d.location
  }), {
    v7_startTransition: v
  } = i || {}, y = w.useCallback((C) => {
    v && C_ ? C_(() => m(C)) : m(C);
  }, [m, v]);
  return w.useLayoutEffect(() => d.listen(y), [d, y]), w.useEffect(() => UJ(i), [i]), /* @__PURE__ */ w.createElement(GJ, {
    basename: t,
    children: n,
    location: p.location,
    navigationType: p.action,
    navigator: d,
    future: i
  });
}
process.env.NODE_ENV;
const lZ = typeof window < "u" && typeof window.document < "u" && typeof window.document.createElement < "u", uZ = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i, Kp = /* @__PURE__ */ w.forwardRef(function(t, n) {
  let {
    onClick: i,
    relative: s,
    reloadDocument: u,
    replace: d,
    state: p,
    target: m,
    to: v,
    preventScrollReset: y,
    viewTransition: C
  } = t, S = XP(t, tZ), {
    basename: R
  } = w.useContext(ql), O, E = !1;
  if (typeof v == "string" && uZ.test(v) && (O = v, lZ))
    try {
      let L = new URL(window.location.href), M = v.startsWith("//") ? new URL(L.protocol + v) : new URL(v), D = Sf(M.pathname, R);
      M.origin === L.origin && D != null ? v = D + M.search + M.hash : E = !0;
    } catch {
      process.env.NODE_ENV !== "production" && Ku(!1, '<Link to="' + v + '"> contains an invalid URL which will probably break when clicked - please update to a valid URL path.');
    }
  let k = kJ(v, {
    relative: s
  }), F = pZ(v, {
    replace: d,
    state: p,
    target: m,
    preventScrollReset: y,
    relative: s,
    viewTransition: C
  });
  function _(L) {
    i && i(L), L.defaultPrevented || F(L);
  }
  return (
    // eslint-disable-next-line jsx-a11y/anchor-has-content
    /* @__PURE__ */ w.createElement("a", Qg({}, S, {
      href: O || k,
      onClick: E || u ? i : _,
      ref: n,
      target: m
    }))
  );
});
process.env.NODE_ENV !== "production" && (Kp.displayName = "Link");
const cZ = /* @__PURE__ */ w.forwardRef(function(t, n) {
  let {
    "aria-current": i = "page",
    caseSensitive: s = !1,
    className: u = "",
    end: d = !1,
    style: p,
    to: m,
    viewTransition: v,
    children: y
  } = t, C = XP(t, nZ), S = zC(m, {
    relative: C.relative
  }), R = av(), O = w.useContext(WP), {
    navigator: E,
    basename: k
  } = w.useContext(ql), F = O != null && // Conditional usage is OK here because the usage of a data router is static
  // eslint-disable-next-line react-hooks/rules-of-hooks
  bZ(S) && v === !0, _ = E.encodeLocation ? E.encodeLocation(S).pathname : S.pathname, L = R.pathname, M = O && O.navigation && O.navigation.location ? O.navigation.location.pathname : null;
  s || (L = L.toLowerCase(), M = M ? M.toLowerCase() : null, _ = _.toLowerCase()), M && k && (M = Sf(M, k) || M);
  const D = _ !== "/" && _.endsWith("/") ? _.length - 1 : _.length;
  let H = L === _ || !d && L.startsWith(_) && L.charAt(D) === "/", K = M != null && (M === _ || !d && M.startsWith(_) && M.charAt(_.length) === "/"), Q = {
    isActive: H,
    isPending: K,
    isTransitioning: F
  }, z = H ? i : void 0, I;
  typeof u == "function" ? I = u(Q) : I = [u, H ? "active" : null, K ? "pending" : null, F ? "transitioning" : null].filter(Boolean).join(" ");
  let G = typeof p == "function" ? p(Q) : p;
  return /* @__PURE__ */ w.createElement(Kp, Qg({}, C, {
    "aria-current": z,
    className: I,
    ref: n,
    style: G,
    to: m,
    viewTransition: v
  }), typeof y == "function" ? y(Q) : y);
});
process.env.NODE_ENV !== "production" && (cZ.displayName = "NavLink");
const dZ = /* @__PURE__ */ w.forwardRef((e, t) => {
  let {
    fetcherKey: n,
    navigate: i,
    reloadDocument: s,
    replace: u,
    state: d,
    method: p = g0,
    action: m,
    onSubmit: v,
    relative: y,
    preventScrollReset: C,
    viewTransition: S
  } = e, R = XP(e, rZ), O = vZ(), E = yZ(m, {
    relative: y
  }), k = p.toLowerCase() === "get" ? "get" : "post", F = (_) => {
    if (v && v(_), _.defaultPrevented) return;
    _.preventDefault();
    let L = _.nativeEvent.submitter, M = (L == null ? void 0 : L.getAttribute("formmethod")) || p;
    O(L || _.currentTarget, {
      fetcherKey: n,
      method: M,
      navigate: i,
      replace: u,
      state: d,
      relative: y,
      preventScrollReset: C,
      viewTransition: S
    });
  };
  return /* @__PURE__ */ w.createElement("form", Qg({
    ref: t,
    method: k,
    action: E,
    onSubmit: s ? v : F
  }, R));
});
process.env.NODE_ENV !== "production" && (dZ.displayName = "Form");
process.env.NODE_ENV;
var j0;
(function(e) {
  e.UseScrollRestoration = "useScrollRestoration", e.UseSubmit = "useSubmit", e.UseSubmitFetcher = "useSubmitFetcher", e.UseFetcher = "useFetcher", e.useViewTransitionState = "useViewTransitionState";
})(j0 || (j0 = {}));
var S_;
(function(e) {
  e.UseFetcher = "useFetcher", e.UseFetchers = "useFetchers", e.UseScrollRestoration = "useScrollRestoration";
})(S_ || (S_ = {}));
function fZ(e) {
  return e + " must be used within a data router.  See https://reactrouter.com/v6/routers/picking-a-router.";
}
function P2(e) {
  let t = w.useContext(AC);
  return t || (process.env.NODE_ENV !== "production" ? Bn(!1, fZ(e)) : Bn(!1)), t;
}
function pZ(e, t) {
  let {
    target: n,
    replace: i,
    state: s,
    preventScrollReset: u,
    relative: d,
    viewTransition: p
  } = t === void 0 ? {} : t, m = T2(), v = av(), y = zC(e, {
    relative: d
  });
  return w.useCallback((C) => {
    if (QJ(C, n)) {
      C.preventDefault();
      let S = i !== void 0 ? i : fC(v) === fC(y);
      m(e, {
        replace: S,
        state: s,
        preventScrollReset: u,
        relative: d,
        viewTransition: p
      });
    }
  }, [v, m, y, i, s, n, e, u, d, p]);
}
function hZ() {
  if (typeof document > "u")
    throw new Error("You are calling submit during the server render. Try calling submit within a `useEffect` or callback instead.");
}
let mZ = 0, gZ = () => "__" + String(++mZ) + "__";
function vZ() {
  let {
    router: e
  } = P2(j0.UseSubmit), {
    basename: t
  } = w.useContext(ql), n = zJ();
  return w.useCallback(function(i, s) {
    s === void 0 && (s = {}), hZ();
    let {
      action: u,
      method: d,
      encType: p,
      formData: m,
      body: v
    } = eZ(i, t);
    if (s.navigate === !1) {
      let y = s.fetcherKey || gZ();
      e.fetch(y, n, s.action || u, {
        preventScrollReset: s.preventScrollReset,
        formData: m,
        body: v,
        formMethod: s.method || d,
        formEncType: s.encType || p,
        flushSync: s.flushSync
      });
    } else
      e.navigate(s.action || u, {
        preventScrollReset: s.preventScrollReset,
        formData: m,
        body: v,
        formMethod: s.method || d,
        formEncType: s.encType || p,
        replace: s.replace,
        state: s.state,
        fromRouteId: n,
        flushSync: s.flushSync,
        viewTransition: s.viewTransition
      });
  }, [e, t, n]);
}
function yZ(e, t) {
  let {
    relative: n
  } = t === void 0 ? {} : t, {
    basename: i
  } = w.useContext(ql), s = w.useContext(Jc);
  s || (process.env.NODE_ENV !== "production" ? Bn(!1, "useFormAction must be used inside a RouteContext") : Bn(!1));
  let [u] = s.matches.slice(-1), d = Qg({}, zC(e || ".", {
    relative: n
  })), p = av();
  if (e == null) {
    d.search = p.search;
    let m = new URLSearchParams(d.search), v = m.getAll("index");
    if (v.some((C) => C === "")) {
      m.delete("index"), v.filter((S) => S).forEach((S) => m.append("index", S));
      let C = m.toString();
      d.search = C ? "?" + C : "";
    }
  }
  return (!e || e === ".") && u.route.index && (d.search = d.search ? d.search.replace(/^\?/, "?index&") : "?index"), i !== "/" && (d.pathname = d.pathname === "/" ? i : qc([i, d.pathname])), fC(d);
}
function bZ(e, t) {
  t === void 0 && (t = {});
  let n = w.useContext(k2);
  n == null && (process.env.NODE_ENV !== "production" ? Bn(!1, "`useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  Did you accidentally import `RouterProvider` from `react-router`?") : Bn(!1));
  let {
    basename: i
  } = P2(j0.useViewTransitionState), s = zC(e, {
    relative: t.relative
  });
  if (!n.isTransitioning)
    return !1;
  let u = Sf(n.currentLocation.pathname, i) || n.currentLocation.pathname, d = Sf(n.nextLocation.pathname, i) || n.nextLocation.pathname;
  return Ak(s.pathname, d) != null || Ak(s.pathname, u) != null;
}
const Pn = (e) => typeof e == "string", Ib = () => {
  let e, t;
  const n = new Promise((i, s) => {
    e = i, t = s;
  });
  return n.resolve = e, n.reject = t, n;
}, w_ = (e) => e == null ? "" : "" + e, CZ = (e, t, n) => {
  e.forEach((i) => {
    t[i] && (n[i] = t[i]);
  });
}, SZ = /###/g, x_ = (e) => e && e.indexOf("###") > -1 ? e.replace(SZ, ".") : e, E_ = (e) => !e || Pn(e), Qb = (e, t, n) => {
  const i = Pn(t) ? t.split(".") : t;
  let s = 0;
  for (; s < i.length - 1; ) {
    if (E_(e)) return {};
    const u = x_(i[s]);
    !e[u] && n && (e[u] = new n()), Object.prototype.hasOwnProperty.call(e, u) ? e = e[u] : e = {}, ++s;
  }
  return E_(e) ? {} : {
    obj: e,
    k: x_(i[s])
  };
}, T_ = (e, t, n) => {
  const {
    obj: i,
    k: s
  } = Qb(e, t, Object);
  if (i !== void 0 || t.length === 1) {
    i[s] = n;
    return;
  }
  let u = t[t.length - 1], d = t.slice(0, t.length - 1), p = Qb(e, d, Object);
  for (; p.obj === void 0 && d.length; )
    u = `${d[d.length - 1]}.${u}`, d = d.slice(0, d.length - 1), p = Qb(e, d, Object), p && p.obj && typeof p.obj[`${p.k}.${u}`] < "u" && (p.obj = void 0);
  p.obj[`${p.k}.${u}`] = n;
}, wZ = (e, t, n, i) => {
  const {
    obj: s,
    k: u
  } = Qb(e, t, Object);
  s[u] = s[u] || [], s[u].push(n);
}, z0 = (e, t) => {
  const {
    obj: n,
    k: i
  } = Qb(e, t);
  if (n)
    return n[i];
}, xZ = (e, t, n) => {
  const i = z0(e, n);
  return i !== void 0 ? i : z0(t, n);
}, M2 = (e, t, n) => {
  for (const i in t)
    i !== "__proto__" && i !== "constructor" && (i in e ? Pn(e[i]) || e[i] instanceof String || Pn(t[i]) || t[i] instanceof String ? n && (e[i] = t[i]) : M2(e[i], t[i], n) : e[i] = t[i]);
  return e;
}, pg = (e) => e.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");
var EZ = {
  "&": "&amp;",
  "<": "&lt;",
  ">": "&gt;",
  '"': "&quot;",
  "'": "&#39;",
  "/": "&#x2F;"
};
const TZ = (e) => Pn(e) ? e.replace(/[&<>"'\/]/g, (t) => EZ[t]) : e;
class RZ {
  constructor(t) {
    this.capacity = t, this.regExpMap = /* @__PURE__ */ new Map(), this.regExpQueue = [];
  }
  getRegExp(t) {
    const n = this.regExpMap.get(t);
    if (n !== void 0)
      return n;
    const i = new RegExp(t);
    return this.regExpQueue.length === this.capacity && this.regExpMap.delete(this.regExpQueue.shift()), this.regExpMap.set(t, i), this.regExpQueue.push(t), i;
  }
}
const OZ = [" ", ",", "?", "!", ";"], kZ = new RZ(20), PZ = (e, t, n) => {
  t = t || "", n = n || "";
  const i = OZ.filter((d) => t.indexOf(d) < 0 && n.indexOf(d) < 0);
  if (i.length === 0) return !0;
  const s = kZ.getRegExp(`(${i.map((d) => d === "?" ? "\\?" : d).join("|")})`);
  let u = !s.test(e);
  if (!u) {
    const d = e.indexOf(n);
    d > 0 && !s.test(e.substring(0, d)) && (u = !0);
  }
  return u;
}, jk = function(e, t) {
  let n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : ".";
  if (!e) return;
  if (e[t]) return e[t];
  const i = t.split(n);
  let s = e;
  for (let u = 0; u < i.length; ) {
    if (!s || typeof s != "object")
      return;
    let d, p = "";
    for (let m = u; m < i.length; ++m)
      if (m !== u && (p += n), p += i[m], d = s[p], d !== void 0) {
        if (["string", "number", "boolean"].indexOf(typeof d) > -1 && m < i.length - 1)
          continue;
        u += m - u + 1;
        break;
      }
    s = d;
  }
  return s;
}, H0 = (e) => e && e.replace("_", "-"), MZ = {
  type: "logger",
  log(e) {
    this.output("log", e);
  },
  warn(e) {
    this.output("warn", e);
  },
  error(e) {
    this.output("error", e);
  },
  output(e, t) {
    console && console[e] && console[e].apply(console, t);
  }
};
class V0 {
  constructor(t) {
    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    this.init(t, n);
  }
  init(t) {
    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    this.prefix = n.prefix || "i18next:", this.logger = t || MZ, this.options = n, this.debug = n.debug;
  }
  log() {
    for (var t = arguments.length, n = new Array(t), i = 0; i < t; i++)
      n[i] = arguments[i];
    return this.forward(n, "log", "", !0);
  }
  warn() {
    for (var t = arguments.length, n = new Array(t), i = 0; i < t; i++)
      n[i] = arguments[i];
    return this.forward(n, "warn", "", !0);
  }
  error() {
    for (var t = arguments.length, n = new Array(t), i = 0; i < t; i++)
      n[i] = arguments[i];
    return this.forward(n, "error", "");
  }
  deprecate() {
    for (var t = arguments.length, n = new Array(t), i = 0; i < t; i++)
      n[i] = arguments[i];
    return this.forward(n, "warn", "WARNING DEPRECATED: ", !0);
  }
  forward(t, n, i, s) {
    return s && !this.debug ? null : (Pn(t[0]) && (t[0] = `${i}${this.prefix} ${t[0]}`), this.logger[n](t));
  }
  create(t) {
    return new V0(this.logger, {
      prefix: `${this.prefix}:${t}:`,
      ...this.options
    });
  }
  clone(t) {
    return t = t || this.options, t.prefix = t.prefix || this.prefix, new V0(this.logger, t);
  }
}
var zu = new V0();
class FE {
  constructor() {
    this.observers = {};
  }
  on(t, n) {
    return t.split(" ").forEach((i) => {
      this.observers[i] || (this.observers[i] = /* @__PURE__ */ new Map());
      const s = this.observers[i].get(n) || 0;
      this.observers[i].set(n, s + 1);
    }), this;
  }
  off(t, n) {
    if (this.observers[t]) {
      if (!n) {
        delete this.observers[t];
        return;
      }
      this.observers[t].delete(n);
    }
  }
  emit(t) {
    for (var n = arguments.length, i = new Array(n > 1 ? n - 1 : 0), s = 1; s < n; s++)
      i[s - 1] = arguments[s];
    this.observers[t] && Array.from(this.observers[t].entries()).forEach((d) => {
      let [p, m] = d;
      for (let v = 0; v < m; v++)
        p(...i);
    }), this.observers["*"] && Array.from(this.observers["*"].entries()).forEach((d) => {
      let [p, m] = d;
      for (let v = 0; v < m; v++)
        p.apply(p, [t, ...i]);
    });
  }
}
class R_ extends FE {
  constructor(t) {
    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {
      ns: ["translation"],
      defaultNS: "translation"
    };
    super(), this.data = t || {}, this.options = n, this.options.keySeparator === void 0 && (this.options.keySeparator = "."), this.options.ignoreJSONStructure === void 0 && (this.options.ignoreJSONStructure = !0);
  }
  addNamespaces(t) {
    this.options.ns.indexOf(t) < 0 && this.options.ns.push(t);
  }
  removeNamespaces(t) {
    const n = this.options.ns.indexOf(t);
    n > -1 && this.options.ns.splice(n, 1);
  }
  getResource(t, n, i) {
    let s = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
    const u = s.keySeparator !== void 0 ? s.keySeparator : this.options.keySeparator, d = s.ignoreJSONStructure !== void 0 ? s.ignoreJSONStructure : this.options.ignoreJSONStructure;
    let p;
    t.indexOf(".") > -1 ? p = t.split(".") : (p = [t, n], i && (Array.isArray(i) ? p.push(...i) : Pn(i) && u ? p.push(...i.split(u)) : p.push(i)));
    const m = z0(this.data, p);
    return !m && !n && !i && t.indexOf(".") > -1 && (t = p[0], n = p[1], i = p.slice(2).join(".")), m || !d || !Pn(i) ? m : jk(this.data && this.data[t] && this.data[t][n], i, u);
  }
  addResource(t, n, i, s) {
    let u = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : {
      silent: !1
    };
    const d = u.keySeparator !== void 0 ? u.keySeparator : this.options.keySeparator;
    let p = [t, n];
    i && (p = p.concat(d ? i.split(d) : i)), t.indexOf(".") > -1 && (p = t.split("."), s = n, n = p[1]), this.addNamespaces(n), T_(this.data, p, s), u.silent || this.emit("added", t, n, i, s);
  }
  addResources(t, n, i) {
    let s = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {
      silent: !1
    };
    for (const u in i)
      (Pn(i[u]) || Array.isArray(i[u])) && this.addResource(t, n, u, i[u], {
        silent: !0
      });
    s.silent || this.emit("added", t, n, i);
  }
  addResourceBundle(t, n, i, s, u) {
    let d = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {
      silent: !1,
      skipCopy: !1
    }, p = [t, n];
    t.indexOf(".") > -1 && (p = t.split("."), s = i, i = n, n = p[1]), this.addNamespaces(n);
    let m = z0(this.data, p) || {};
    d.skipCopy || (i = JSON.parse(JSON.stringify(i))), s ? M2(m, i, u) : m = {
      ...m,
      ...i
    }, T_(this.data, p, m), d.silent || this.emit("added", t, n, i);
  }
  removeResourceBundle(t, n) {
    this.hasResourceBundle(t, n) && delete this.data[t][n], this.removeNamespaces(n), this.emit("removed", t, n);
  }
  hasResourceBundle(t, n) {
    return this.getResource(t, n) !== void 0;
  }
  getResourceBundle(t, n) {
    return n || (n = this.options.defaultNS), this.options.compatibilityAPI === "v1" ? {
      ...this.getResource(t, n)
    } : this.getResource(t, n);
  }
  getDataByLanguage(t) {
    return this.data[t];
  }
  hasLanguageSomeTranslations(t) {
    const n = this.getDataByLanguage(t);
    return !!(n && Object.keys(n) || []).find((s) => n[s] && Object.keys(n[s]).length > 0);
  }
  toJSON() {
    return this.data;
  }
}
var I2 = {
  processors: {},
  addPostProcessor(e) {
    this.processors[e.name] = e;
  },
  handle(e, t, n, i, s) {
    return e.forEach((u) => {
      this.processors[u] && (t = this.processors[u].process(t, n, i, s));
    }), t;
  }
};
const O_ = {};
class B0 extends FE {
  constructor(t) {
    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    super(), CZ(["resourceStore", "languageUtils", "pluralResolver", "interpolator", "backendConnector", "i18nFormat", "utils"], t, this), this.options = n, this.options.keySeparator === void 0 && (this.options.keySeparator = "."), this.logger = zu.create("translator");
  }
  changeLanguage(t) {
    t && (this.language = t);
  }
  exists(t) {
    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {
      interpolation: {}
    };
    if (t == null)
      return !1;
    const i = this.resolve(t, n);
    return i && i.res !== void 0;
  }
  extractFromKey(t, n) {
    let i = n.nsSeparator !== void 0 ? n.nsSeparator : this.options.nsSeparator;
    i === void 0 && (i = ":");
    const s = n.keySeparator !== void 0 ? n.keySeparator : this.options.keySeparator;
    let u = n.ns || this.options.defaultNS || [];
    const d = i && t.indexOf(i) > -1, p = !this.options.userDefinedKeySeparator && !n.keySeparator && !this.options.userDefinedNsSeparator && !n.nsSeparator && !PZ(t, i, s);
    if (d && !p) {
      const m = t.match(this.interpolator.nestingRegexp);
      if (m && m.length > 0)
        return {
          key: t,
          namespaces: Pn(u) ? [u] : u
        };
      const v = t.split(i);
      (i !== s || i === s && this.options.ns.indexOf(v[0]) > -1) && (u = v.shift()), t = v.join(s);
    }
    return {
      key: t,
      namespaces: Pn(u) ? [u] : u
    };
  }
  translate(t, n, i) {
    if (typeof n != "object" && this.options.overloadTranslationOptionHandler && (n = this.options.overloadTranslationOptionHandler(arguments)), typeof n == "object" && (n = {
      ...n
    }), n || (n = {}), t == null) return "";
    Array.isArray(t) || (t = [String(t)]);
    const s = n.returnDetails !== void 0 ? n.returnDetails : this.options.returnDetails, u = n.keySeparator !== void 0 ? n.keySeparator : this.options.keySeparator, {
      key: d,
      namespaces: p
    } = this.extractFromKey(t[t.length - 1], n), m = p[p.length - 1], v = n.lng || this.language, y = n.appendNamespaceToCIMode || this.options.appendNamespaceToCIMode;
    if (v && v.toLowerCase() === "cimode") {
      if (y) {
        const M = n.nsSeparator || this.options.nsSeparator;
        return s ? {
          res: `${m}${M}${d}`,
          usedKey: d,
          exactUsedKey: d,
          usedLng: v,
          usedNS: m,
          usedParams: this.getUsedParamsDetails(n)
        } : `${m}${M}${d}`;
      }
      return s ? {
        res: d,
        usedKey: d,
        exactUsedKey: d,
        usedLng: v,
        usedNS: m,
        usedParams: this.getUsedParamsDetails(n)
      } : d;
    }
    const C = this.resolve(t, n);
    let S = C && C.res;
    const R = C && C.usedKey || d, O = C && C.exactUsedKey || d, E = Object.prototype.toString.apply(S), k = ["[object Number]", "[object Function]", "[object RegExp]"], F = n.joinArrays !== void 0 ? n.joinArrays : this.options.joinArrays, _ = !this.i18nFormat || this.i18nFormat.handleAsObject, L = !Pn(S) && typeof S != "boolean" && typeof S != "number";
    if (_ && S && L && k.indexOf(E) < 0 && !(Pn(F) && Array.isArray(S))) {
      if (!n.returnObjects && !this.options.returnObjects) {
        this.options.returnedObjectHandler || this.logger.warn("accessing an object - but returnObjects options is not enabled!");
        const M = this.options.returnedObjectHandler ? this.options.returnedObjectHandler(R, S, {
          ...n,
          ns: p
        }) : `key '${d} (${this.language})' returned an object instead of string.`;
        return s ? (C.res = M, C.usedParams = this.getUsedParamsDetails(n), C) : M;
      }
      if (u) {
        const M = Array.isArray(S), D = M ? [] : {}, H = M ? O : R;
        for (const K in S)
          if (Object.prototype.hasOwnProperty.call(S, K)) {
            const Q = `${H}${u}${K}`;
            D[K] = this.translate(Q, {
              ...n,
              joinArrays: !1,
              ns: p
            }), D[K] === Q && (D[K] = S[K]);
          }
        S = D;
      }
    } else if (_ && Pn(F) && Array.isArray(S))
      S = S.join(F), S && (S = this.extendTranslation(S, t, n, i));
    else {
      let M = !1, D = !1;
      const H = n.count !== void 0 && !Pn(n.count), K = B0.hasDefaultValue(n), Q = H ? this.pluralResolver.getSuffix(v, n.count, n) : "", z = n.ordinal && H ? this.pluralResolver.getSuffix(v, n.count, {
        ordinal: !1
      }) : "", I = H && !n.ordinal && n.count === 0 && this.pluralResolver.shouldUseIntlApi(), G = I && n[`defaultValue${this.options.pluralSeparator}zero`] || n[`defaultValue${Q}`] || n[`defaultValue${z}`] || n.defaultValue;
      !this.isValidLookup(S) && K && (M = !0, S = G), this.isValidLookup(S) || (D = !0, S = d);
      const B = (n.missingKeyNoValueFallbackToKey || this.options.missingKeyNoValueFallbackToKey) && D ? void 0 : S, ee = K && G !== S && this.options.updateMissing;
      if (D || M || ee) {
        if (this.logger.log(ee ? "updateKey" : "missingKey", v, m, d, ee ? G : S), u) {
          const ne = this.resolve(d, {
            ...n,
            keySeparator: !1
          });
          ne && ne.res && this.logger.warn("Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.");
        }
        let U = [];
        const q = this.languageUtils.getFallbackCodes(this.options.fallbackLng, n.lng || this.language);
        if (this.options.saveMissingTo === "fallback" && q && q[0])
          for (let ne = 0; ne < q.length; ne++)
            U.push(q[ne]);
        else this.options.saveMissingTo === "all" ? U = this.languageUtils.toResolveHierarchy(n.lng || this.language) : U.push(n.lng || this.language);
        const Y = (ne, re, X) => {
          const j = K && X !== S ? X : B;
          this.options.missingKeyHandler ? this.options.missingKeyHandler(ne, m, re, j, ee, n) : this.backendConnector && this.backendConnector.saveMissing && this.backendConnector.saveMissing(ne, m, re, j, ee, n), this.emit("missingKey", ne, m, re, S);
        };
        this.options.saveMissing && (this.options.saveMissingPlurals && H ? U.forEach((ne) => {
          const re = this.pluralResolver.getSuffixes(ne, n);
          I && n[`defaultValue${this.options.pluralSeparator}zero`] && re.indexOf(`${this.options.pluralSeparator}zero`) < 0 && re.push(`${this.options.pluralSeparator}zero`), re.forEach((X) => {
            Y([ne], d + X, n[`defaultValue${X}`] || G);
          });
        }) : Y(U, d, G));
      }
      S = this.extendTranslation(S, t, n, C, i), D && S === d && this.options.appendNamespaceToMissingKey && (S = `${m}:${d}`), (D || M) && this.options.parseMissingKeyHandler && (this.options.compatibilityAPI !== "v1" ? S = this.options.parseMissingKeyHandler(this.options.appendNamespaceToMissingKey ? `${m}:${d}` : d, M ? S : void 0) : S = this.options.parseMissingKeyHandler(S));
    }
    return s ? (C.res = S, C.usedParams = this.getUsedParamsDetails(n), C) : S;
  }
  extendTranslation(t, n, i, s, u) {
    var d = this;
    if (this.i18nFormat && this.i18nFormat.parse)
      t = this.i18nFormat.parse(t, {
        ...this.options.interpolation.defaultVariables,
        ...i
      }, i.lng || this.language || s.usedLng, s.usedNS, s.usedKey, {
        resolved: s
      });
    else if (!i.skipInterpolation) {
      i.interpolation && this.interpolator.init({
        ...i,
        interpolation: {
          ...this.options.interpolation,
          ...i.interpolation
        }
      });
      const v = Pn(t) && (i && i.interpolation && i.interpolation.skipOnVariables !== void 0 ? i.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables);
      let y;
      if (v) {
        const S = t.match(this.interpolator.nestingRegexp);
        y = S && S.length;
      }
      let C = i.replace && !Pn(i.replace) ? i.replace : i;
      if (this.options.interpolation.defaultVariables && (C = {
        ...this.options.interpolation.defaultVariables,
        ...C
      }), t = this.interpolator.interpolate(t, C, i.lng || this.language || s.usedLng, i), v) {
        const S = t.match(this.interpolator.nestingRegexp), R = S && S.length;
        y < R && (i.nest = !1);
      }
      !i.lng && this.options.compatibilityAPI !== "v1" && s && s.res && (i.lng = this.language || s.usedLng), i.nest !== !1 && (t = this.interpolator.nest(t, function() {
        for (var S = arguments.length, R = new Array(S), O = 0; O < S; O++)
          R[O] = arguments[O];
        return u && u[0] === R[0] && !i.context ? (d.logger.warn(`It seems you are nesting recursively key: ${R[0]} in key: ${n[0]}`), null) : d.translate(...R, n);
      }, i)), i.interpolation && this.interpolator.reset();
    }
    const p = i.postProcess || this.options.postProcess, m = Pn(p) ? [p] : p;
    return t != null && m && m.length && i.applyPostProcessor !== !1 && (t = I2.handle(m, t, n, this.options && this.options.postProcessPassResolved ? {
      i18nResolved: {
        ...s,
        usedParams: this.getUsedParamsDetails(i)
      },
      ...i
    } : i, this)), t;
  }
  resolve(t) {
    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, i, s, u, d, p;
    return Pn(t) && (t = [t]), t.forEach((m) => {
      if (this.isValidLookup(i)) return;
      const v = this.extractFromKey(m, n), y = v.key;
      s = y;
      let C = v.namespaces;
      this.options.fallbackNS && (C = C.concat(this.options.fallbackNS));
      const S = n.count !== void 0 && !Pn(n.count), R = S && !n.ordinal && n.count === 0 && this.pluralResolver.shouldUseIntlApi(), O = n.context !== void 0 && (Pn(n.context) || typeof n.context == "number") && n.context !== "", E = n.lngs ? n.lngs : this.languageUtils.toResolveHierarchy(n.lng || this.language, n.fallbackLng);
      C.forEach((k) => {
        this.isValidLookup(i) || (p = k, !O_[`${E[0]}-${k}`] && this.utils && this.utils.hasLoadedNamespace && !this.utils.hasLoadedNamespace(p) && (O_[`${E[0]}-${k}`] = !0, this.logger.warn(`key "${s}" for languages "${E.join(", ")}" won't get resolved as namespace "${p}" was not yet loaded`, "This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!")), E.forEach((F) => {
          if (this.isValidLookup(i)) return;
          d = F;
          const _ = [y];
          if (this.i18nFormat && this.i18nFormat.addLookupKeys)
            this.i18nFormat.addLookupKeys(_, y, F, k, n);
          else {
            let M;
            S && (M = this.pluralResolver.getSuffix(F, n.count, n));
            const D = `${this.options.pluralSeparator}zero`, H = `${this.options.pluralSeparator}ordinal${this.options.pluralSeparator}`;
            if (S && (_.push(y + M), n.ordinal && M.indexOf(H) === 0 && _.push(y + M.replace(H, this.options.pluralSeparator)), R && _.push(y + D)), O) {
              const K = `${y}${this.options.contextSeparator}${n.context}`;
              _.push(K), S && (_.push(K + M), n.ordinal && M.indexOf(H) === 0 && _.push(K + M.replace(H, this.options.pluralSeparator)), R && _.push(K + D));
            }
          }
          let L;
          for (; L = _.pop(); )
            this.isValidLookup(i) || (u = L, i = this.getResource(F, k, L, n));
        }));
      });
    }), {
      res: i,
      usedKey: s,
      exactUsedKey: u,
      usedLng: d,
      usedNS: p
    };
  }
  isValidLookup(t) {
    return t !== void 0 && !(!this.options.returnNull && t === null) && !(!this.options.returnEmptyString && t === "");
  }
  getResource(t, n, i) {
    let s = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
    return this.i18nFormat && this.i18nFormat.getResource ? this.i18nFormat.getResource(t, n, i, s) : this.resourceStore.getResource(t, n, i, s);
  }
  getUsedParamsDetails() {
    let t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    const n = ["defaultValue", "ordinal", "context", "replace", "lng", "lngs", "fallbackLng", "ns", "keySeparator", "nsSeparator", "returnObjects", "returnDetails", "joinArrays", "postProcess", "interpolation"], i = t.replace && !Pn(t.replace);
    let s = i ? t.replace : t;
    if (i && typeof t.count < "u" && (s.count = t.count), this.options.interpolation.defaultVariables && (s = {
      ...this.options.interpolation.defaultVariables,
      ...s
    }), !i) {
      s = {
        ...s
      };
      for (const u of n)
        delete s[u];
    }
    return s;
  }
  static hasDefaultValue(t) {
    const n = "defaultValue";
    for (const i in t)
      if (Object.prototype.hasOwnProperty.call(t, i) && n === i.substring(0, n.length) && t[i] !== void 0)
        return !0;
    return !1;
  }
}
const AO = (e) => e.charAt(0).toUpperCase() + e.slice(1);
class k_ {
  constructor(t) {
    this.options = t, this.supportedLngs = this.options.supportedLngs || !1, this.logger = zu.create("languageUtils");
  }
  getScriptPartFromCode(t) {
    if (t = H0(t), !t || t.indexOf("-") < 0) return null;
    const n = t.split("-");
    return n.length === 2 || (n.pop(), n[n.length - 1].toLowerCase() === "x") ? null : this.formatLanguageCode(n.join("-"));
  }
  getLanguagePartFromCode(t) {
    if (t = H0(t), !t || t.indexOf("-") < 0) return t;
    const n = t.split("-");
    return this.formatLanguageCode(n[0]);
  }
  formatLanguageCode(t) {
    if (Pn(t) && t.indexOf("-") > -1) {
      if (typeof Intl < "u" && typeof Intl.getCanonicalLocales < "u")
        try {
          let s = Intl.getCanonicalLocales(t)[0];
          if (s && this.options.lowerCaseLng && (s = s.toLowerCase()), s) return s;
        } catch {
        }
      const n = ["hans", "hant", "latn", "cyrl", "cans", "mong", "arab"];
      let i = t.split("-");
      return this.options.lowerCaseLng ? i = i.map((s) => s.toLowerCase()) : i.length === 2 ? (i[0] = i[0].toLowerCase(), i[1] = i[1].toUpperCase(), n.indexOf(i[1].toLowerCase()) > -1 && (i[1] = AO(i[1].toLowerCase()))) : i.length === 3 && (i[0] = i[0].toLowerCase(), i[1].length === 2 && (i[1] = i[1].toUpperCase()), i[0] !== "sgn" && i[2].length === 2 && (i[2] = i[2].toUpperCase()), n.indexOf(i[1].toLowerCase()) > -1 && (i[1] = AO(i[1].toLowerCase())), n.indexOf(i[2].toLowerCase()) > -1 && (i[2] = AO(i[2].toLowerCase()))), i.join("-");
    }
    return this.options.cleanCode || this.options.lowerCaseLng ? t.toLowerCase() : t;
  }
  isSupportedCode(t) {
    return (this.options.load === "languageOnly" || this.options.nonExplicitSupportedLngs) && (t = this.getLanguagePartFromCode(t)), !this.supportedLngs || !this.supportedLngs.length || this.supportedLngs.indexOf(t) > -1;
  }
  getBestMatchFromCodes(t) {
    if (!t) return null;
    let n;
    return t.forEach((i) => {
      if (n) return;
      const s = this.formatLanguageCode(i);
      (!this.options.supportedLngs || this.isSupportedCode(s)) && (n = s);
    }), !n && this.options.supportedLngs && t.forEach((i) => {
      if (n) return;
      const s = this.getLanguagePartFromCode(i);
      if (this.isSupportedCode(s)) return n = s;
      n = this.options.supportedLngs.find((u) => {
        if (u === s) return u;
        if (!(u.indexOf("-") < 0 && s.indexOf("-") < 0) && (u.indexOf("-") > 0 && s.indexOf("-") < 0 && u.substring(0, u.indexOf("-")) === s || u.indexOf(s) === 0 && s.length > 1))
          return u;
      });
    }), n || (n = this.getFallbackCodes(this.options.fallbackLng)[0]), n;
  }
  getFallbackCodes(t, n) {
    if (!t) return [];
    if (typeof t == "function" && (t = t(n)), Pn(t) && (t = [t]), Array.isArray(t)) return t;
    if (!n) return t.default || [];
    let i = t[n];
    return i || (i = t[this.getScriptPartFromCode(n)]), i || (i = t[this.formatLanguageCode(n)]), i || (i = t[this.getLanguagePartFromCode(n)]), i || (i = t.default), i || [];
  }
  toResolveHierarchy(t, n) {
    const i = this.getFallbackCodes(n || this.options.fallbackLng || [], t), s = [], u = (d) => {
      d && (this.isSupportedCode(d) ? s.push(d) : this.logger.warn(`rejecting language code not found in supportedLngs: ${d}`));
    };
    return Pn(t) && (t.indexOf("-") > -1 || t.indexOf("_") > -1) ? (this.options.load !== "languageOnly" && u(this.formatLanguageCode(t)), this.options.load !== "languageOnly" && this.options.load !== "currentOnly" && u(this.getScriptPartFromCode(t)), this.options.load !== "currentOnly" && u(this.getLanguagePartFromCode(t))) : Pn(t) && u(this.formatLanguageCode(t)), i.forEach((d) => {
      s.indexOf(d) < 0 && u(this.formatLanguageCode(d));
    }), s;
  }
}
let IZ = [{
  lngs: ["ach", "ak", "am", "arn", "br", "fil", "gun", "ln", "mfe", "mg", "mi", "oc", "pt", "pt-BR", "tg", "tl", "ti", "tr", "uz", "wa"],
  nr: [1, 2],
  fc: 1
}, {
  lngs: ["af", "an", "ast", "az", "bg", "bn", "ca", "da", "de", "dev", "el", "en", "eo", "es", "et", "eu", "fi", "fo", "fur", "fy", "gl", "gu", "ha", "hi", "hu", "hy", "ia", "it", "kk", "kn", "ku", "lb", "mai", "ml", "mn", "mr", "nah", "nap", "nb", "ne", "nl", "nn", "no", "nso", "pa", "pap", "pms", "ps", "pt-PT", "rm", "sco", "se", "si", "so", "son", "sq", "sv", "sw", "ta", "te", "tk", "ur", "yo"],
  nr: [1, 2],
  fc: 2
}, {
  lngs: ["ay", "bo", "cgg", "fa", "ht", "id", "ja", "jbo", "ka", "km", "ko", "ky", "lo", "ms", "sah", "su", "th", "tt", "ug", "vi", "wo", "zh"],
  nr: [1],
  fc: 3
}, {
  lngs: ["be", "bs", "cnr", "dz", "hr", "ru", "sr", "uk"],
  nr: [1, 2, 5],
  fc: 4
}, {
  lngs: ["ar"],
  nr: [0, 1, 2, 3, 11, 100],
  fc: 5
}, {
  lngs: ["cs", "sk"],
  nr: [1, 2, 5],
  fc: 6
}, {
  lngs: ["csb", "pl"],
  nr: [1, 2, 5],
  fc: 7
}, {
  lngs: ["cy"],
  nr: [1, 2, 3, 8],
  fc: 8
}, {
  lngs: ["fr"],
  nr: [1, 2],
  fc: 9
}, {
  lngs: ["ga"],
  nr: [1, 2, 3, 7, 11],
  fc: 10
}, {
  lngs: ["gd"],
  nr: [1, 2, 3, 20],
  fc: 11
}, {
  lngs: ["is"],
  nr: [1, 2],
  fc: 12
}, {
  lngs: ["jv"],
  nr: [0, 1],
  fc: 13
}, {
  lngs: ["kw"],
  nr: [1, 2, 3, 4],
  fc: 14
}, {
  lngs: ["lt"],
  nr: [1, 2, 10],
  fc: 15
}, {
  lngs: ["lv"],
  nr: [1, 2, 0],
  fc: 16
}, {
  lngs: ["mk"],
  nr: [1, 2],
  fc: 17
}, {
  lngs: ["mnk"],
  nr: [0, 1, 2],
  fc: 18
}, {
  lngs: ["mt"],
  nr: [1, 2, 11, 20],
  fc: 19
}, {
  lngs: ["or"],
  nr: [2, 1],
  fc: 2
}, {
  lngs: ["ro"],
  nr: [1, 2, 20],
  fc: 20
}, {
  lngs: ["sl"],
  nr: [5, 1, 2, 3],
  fc: 21
}, {
  lngs: ["he", "iw"],
  nr: [1, 2, 20, 21],
  fc: 22
}], DZ = {
  1: (e) => +(e > 1),
  2: (e) => +(e != 1),
  3: (e) => 0,
  4: (e) => e % 10 == 1 && e % 100 != 11 ? 0 : e % 10 >= 2 && e % 10 <= 4 && (e % 100 < 10 || e % 100 >= 20) ? 1 : 2,
  5: (e) => e == 0 ? 0 : e == 1 ? 1 : e == 2 ? 2 : e % 100 >= 3 && e % 100 <= 10 ? 3 : e % 100 >= 11 ? 4 : 5,
  6: (e) => e == 1 ? 0 : e >= 2 && e <= 4 ? 1 : 2,
  7: (e) => e == 1 ? 0 : e % 10 >= 2 && e % 10 <= 4 && (e % 100 < 10 || e % 100 >= 20) ? 1 : 2,
  8: (e) => e == 1 ? 0 : e == 2 ? 1 : e != 8 && e != 11 ? 2 : 3,
  9: (e) => +(e >= 2),
  10: (e) => e == 1 ? 0 : e == 2 ? 1 : e < 7 ? 2 : e < 11 ? 3 : 4,
  11: (e) => e == 1 || e == 11 ? 0 : e == 2 || e == 12 ? 1 : e > 2 && e < 20 ? 2 : 3,
  12: (e) => +(e % 10 != 1 || e % 100 == 11),
  13: (e) => +(e !== 0),
  14: (e) => e == 1 ? 0 : e == 2 ? 1 : e == 3 ? 2 : 3,
  15: (e) => e % 10 == 1 && e % 100 != 11 ? 0 : e % 10 >= 2 && (e % 100 < 10 || e % 100 >= 20) ? 1 : 2,
  16: (e) => e % 10 == 1 && e % 100 != 11 ? 0 : e !== 0 ? 1 : 2,
  17: (e) => e == 1 || e % 10 == 1 && e % 100 != 11 ? 0 : 1,
  18: (e) => e == 0 ? 0 : e == 1 ? 1 : 2,
  19: (e) => e == 1 ? 0 : e == 0 || e % 100 > 1 && e % 100 < 11 ? 1 : e % 100 > 10 && e % 100 < 20 ? 2 : 3,
  20: (e) => e == 1 ? 0 : e == 0 || e % 100 > 0 && e % 100 < 20 ? 1 : 2,
  21: (e) => e % 100 == 1 ? 1 : e % 100 == 2 ? 2 : e % 100 == 3 || e % 100 == 4 ? 3 : 0,
  22: (e) => e == 1 ? 0 : e == 2 ? 1 : (e < 0 || e > 10) && e % 10 == 0 ? 2 : 3
};
const NZ = ["v1", "v2", "v3"], LZ = ["v4"], P_ = {
  zero: 0,
  one: 1,
  two: 2,
  few: 3,
  many: 4,
  other: 5
}, FZ = () => {
  const e = {};
  return IZ.forEach((t) => {
    t.lngs.forEach((n) => {
      e[n] = {
        numbers: t.nr,
        plurals: DZ[t.fc]
      };
    });
  }), e;
};
class _Z {
  constructor(t) {
    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    this.languageUtils = t, this.options = n, this.logger = zu.create("pluralResolver"), (!this.options.compatibilityJSON || LZ.includes(this.options.compatibilityJSON)) && (typeof Intl > "u" || !Intl.PluralRules) && (this.options.compatibilityJSON = "v3", this.logger.error("Your environment seems not to be Intl API compatible, use an Intl.PluralRules polyfill. Will fallback to the compatibilityJSON v3 format handling.")), this.rules = FZ(), this.pluralRulesCache = {};
  }
  addRule(t, n) {
    this.rules[t] = n;
  }
  clearCache() {
    this.pluralRulesCache = {};
  }
  getRule(t) {
    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    if (this.shouldUseIntlApi()) {
      const i = H0(t === "dev" ? "en" : t), s = n.ordinal ? "ordinal" : "cardinal", u = JSON.stringify({
        cleanedCode: i,
        type: s
      });
      if (u in this.pluralRulesCache)
        return this.pluralRulesCache[u];
      let d;
      try {
        d = new Intl.PluralRules(i, {
          type: s
        });
      } catch {
        if (!t.match(/-|_/)) return;
        const m = this.languageUtils.getLanguagePartFromCode(t);
        d = this.getRule(m, n);
      }
      return this.pluralRulesCache[u] = d, d;
    }
    return this.rules[t] || this.rules[this.languageUtils.getLanguagePartFromCode(t)];
  }
  needsPlural(t) {
    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    const i = this.getRule(t, n);
    return this.shouldUseIntlApi() ? i && i.resolvedOptions().pluralCategories.length > 1 : i && i.numbers.length > 1;
  }
  getPluralFormsOfKey(t, n) {
    let i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
    return this.getSuffixes(t, i).map((s) => `${n}${s}`);
  }
  getSuffixes(t) {
    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    const i = this.getRule(t, n);
    return i ? this.shouldUseIntlApi() ? i.resolvedOptions().pluralCategories.sort((s, u) => P_[s] - P_[u]).map((s) => `${this.options.prepend}${n.ordinal ? `ordinal${this.options.prepend}` : ""}${s}`) : i.numbers.map((s) => this.getSuffix(t, s, n)) : [];
  }
  getSuffix(t, n) {
    let i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
    const s = this.getRule(t, i);
    return s ? this.shouldUseIntlApi() ? `${this.options.prepend}${i.ordinal ? `ordinal${this.options.prepend}` : ""}${s.select(n)}` : this.getSuffixRetroCompatible(s, n) : (this.logger.warn(`no plural rule found for: ${t}`), "");
  }
  getSuffixRetroCompatible(t, n) {
    const i = t.noAbs ? t.plurals(n) : t.plurals(Math.abs(n));
    let s = t.numbers[i];
    this.options.simplifyPluralSuffix && t.numbers.length === 2 && t.numbers[0] === 1 && (s === 2 ? s = "plural" : s === 1 && (s = ""));
    const u = () => this.options.prepend && s.toString() ? this.options.prepend + s.toString() : s.toString();
    return this.options.compatibilityJSON === "v1" ? s === 1 ? "" : typeof s == "number" ? `_plural_${s.toString()}` : u() : this.options.compatibilityJSON === "v2" || this.options.simplifyPluralSuffix && t.numbers.length === 2 && t.numbers[0] === 1 ? u() : this.options.prepend && i.toString() ? this.options.prepend + i.toString() : i.toString();
  }
  shouldUseIntlApi() {
    return !NZ.includes(this.options.compatibilityJSON);
  }
}
const M_ = function(e, t, n) {
  let i = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : ".", s = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : !0, u = xZ(e, t, n);
  return !u && s && Pn(n) && (u = jk(e, n, i), u === void 0 && (u = jk(t, n, i))), u;
}, $O = (e) => e.replace(/\$/g, "$$$$");
class AZ {
  constructor() {
    let t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    this.logger = zu.create("interpolator"), this.options = t, this.format = t.interpolation && t.interpolation.format || ((n) => n), this.init(t);
  }
  init() {
    let t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    t.interpolation || (t.interpolation = {
      escapeValue: !0
    });
    const {
      escape: n,
      escapeValue: i,
      useRawValueToEscape: s,
      prefix: u,
      prefixEscaped: d,
      suffix: p,
      suffixEscaped: m,
      formatSeparator: v,
      unescapeSuffix: y,
      unescapePrefix: C,
      nestingPrefix: S,
      nestingPrefixEscaped: R,
      nestingSuffix: O,
      nestingSuffixEscaped: E,
      nestingOptionsSeparator: k,
      maxReplaces: F,
      alwaysFormat: _
    } = t.interpolation;
    this.escape = n !== void 0 ? n : TZ, this.escapeValue = i !== void 0 ? i : !0, this.useRawValueToEscape = s !== void 0 ? s : !1, this.prefix = u ? pg(u) : d || "{{", this.suffix = p ? pg(p) : m || "}}", this.formatSeparator = v || ",", this.unescapePrefix = y ? "" : C || "-", this.unescapeSuffix = this.unescapePrefix ? "" : y || "", this.nestingPrefix = S ? pg(S) : R || pg("$t("), this.nestingSuffix = O ? pg(O) : E || pg(")"), this.nestingOptionsSeparator = k || ",", this.maxReplaces = F || 1e3, this.alwaysFormat = _ !== void 0 ? _ : !1, this.resetRegExp();
  }
  reset() {
    this.options && this.init(this.options);
  }
  resetRegExp() {
    const t = (n, i) => n && n.source === i ? (n.lastIndex = 0, n) : new RegExp(i, "g");
    this.regexp = t(this.regexp, `${this.prefix}(.+?)${this.suffix}`), this.regexpUnescape = t(this.regexpUnescape, `${this.prefix}${this.unescapePrefix}(.+?)${this.unescapeSuffix}${this.suffix}`), this.nestingRegexp = t(this.nestingRegexp, `${this.nestingPrefix}(.+?)${this.nestingSuffix}`);
  }
  interpolate(t, n, i, s) {
    let u, d, p;
    const m = this.options && this.options.interpolation && this.options.interpolation.defaultVariables || {}, v = (R) => {
      if (R.indexOf(this.formatSeparator) < 0) {
        const F = M_(n, m, R, this.options.keySeparator, this.options.ignoreJSONStructure);
        return this.alwaysFormat ? this.format(F, void 0, i, {
          ...s,
          ...n,
          interpolationkey: R
        }) : F;
      }
      const O = R.split(this.formatSeparator), E = O.shift().trim(), k = O.join(this.formatSeparator).trim();
      return this.format(M_(n, m, E, this.options.keySeparator, this.options.ignoreJSONStructure), k, i, {
        ...s,
        ...n,
        interpolationkey: E
      });
    };
    this.resetRegExp();
    const y = s && s.missingInterpolationHandler || this.options.missingInterpolationHandler, C = s && s.interpolation && s.interpolation.skipOnVariables !== void 0 ? s.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables;
    return [{
      regex: this.regexpUnescape,
      safeValue: (R) => $O(R)
    }, {
      regex: this.regexp,
      safeValue: (R) => this.escapeValue ? $O(this.escape(R)) : $O(R)
    }].forEach((R) => {
      for (p = 0; u = R.regex.exec(t); ) {
        const O = u[1].trim();
        if (d = v(O), d === void 0)
          if (typeof y == "function") {
            const k = y(t, u, s);
            d = Pn(k) ? k : "";
          } else if (s && Object.prototype.hasOwnProperty.call(s, O))
            d = "";
          else if (C) {
            d = u[0];
            continue;
          } else
            this.logger.warn(`missed to pass in variable ${O} for interpolating ${t}`), d = "";
        else !Pn(d) && !this.useRawValueToEscape && (d = w_(d));
        const E = R.safeValue(d);
        if (t = t.replace(u[0], E), C ? (R.regex.lastIndex += d.length, R.regex.lastIndex -= u[0].length) : R.regex.lastIndex = 0, p++, p >= this.maxReplaces)
          break;
      }
    }), t;
  }
  nest(t, n) {
    let i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, s, u, d;
    const p = (m, v) => {
      const y = this.nestingOptionsSeparator;
      if (m.indexOf(y) < 0) return m;
      const C = m.split(new RegExp(`${y}[ ]*{`));
      let S = `{${C[1]}`;
      m = C[0], S = this.interpolate(S, d);
      const R = S.match(/'/g), O = S.match(/"/g);
      (R && R.length % 2 === 0 && !O || O.length % 2 !== 0) && (S = S.replace(/'/g, '"'));
      try {
        d = JSON.parse(S), v && (d = {
          ...v,
          ...d
        });
      } catch (E) {
        return this.logger.warn(`failed parsing options string in nesting for key ${m}`, E), `${m}${y}${S}`;
      }
      return d.defaultValue && d.defaultValue.indexOf(this.prefix) > -1 && delete d.defaultValue, m;
    };
    for (; s = this.nestingRegexp.exec(t); ) {
      let m = [];
      d = {
        ...i
      }, d = d.replace && !Pn(d.replace) ? d.replace : d, d.applyPostProcessor = !1, delete d.defaultValue;
      let v = !1;
      if (s[0].indexOf(this.formatSeparator) !== -1 && !/{.*}/.test(s[1])) {
        const y = s[1].split(this.formatSeparator).map((C) => C.trim());
        s[1] = y.shift(), m = y, v = !0;
      }
      if (u = n(p.call(this, s[1].trim(), d), d), u && s[0] === t && !Pn(u)) return u;
      Pn(u) || (u = w_(u)), u || (this.logger.warn(`missed to resolve ${s[1]} for nesting ${t}`), u = ""), v && (u = m.reduce((y, C) => this.format(y, C, i.lng, {
        ...i,
        interpolationkey: s[1].trim()
      }), u.trim())), t = t.replace(s[0], u), this.regexp.lastIndex = 0;
    }
    return t;
  }
}
const $Z = (e) => {
  let t = e.toLowerCase().trim();
  const n = {};
  if (e.indexOf("(") > -1) {
    const i = e.split("(");
    t = i[0].toLowerCase().trim();
    const s = i[1].substring(0, i[1].length - 1);
    t === "currency" && s.indexOf(":") < 0 ? n.currency || (n.currency = s.trim()) : t === "relativetime" && s.indexOf(":") < 0 ? n.range || (n.range = s.trim()) : s.split(";").forEach((d) => {
      if (d) {
        const [p, ...m] = d.split(":"), v = m.join(":").trim().replace(/^'+|'+$/g, ""), y = p.trim();
        n[y] || (n[y] = v), v === "false" && (n[y] = !1), v === "true" && (n[y] = !0), isNaN(v) || (n[y] = parseInt(v, 10));
      }
    });
  }
  return {
    formatName: t,
    formatOptions: n
  };
}, hg = (e) => {
  const t = {};
  return (n, i, s) => {
    let u = s;
    s && s.interpolationkey && s.formatParams && s.formatParams[s.interpolationkey] && s[s.interpolationkey] && (u = {
      ...u,
      [s.interpolationkey]: void 0
    });
    const d = i + JSON.stringify(u);
    let p = t[d];
    return p || (p = e(H0(i), s), t[d] = p), p(n);
  };
};
class jZ {
  constructor() {
    let t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    this.logger = zu.create("formatter"), this.options = t, this.formats = {
      number: hg((n, i) => {
        const s = new Intl.NumberFormat(n, {
          ...i
        });
        return (u) => s.format(u);
      }),
      currency: hg((n, i) => {
        const s = new Intl.NumberFormat(n, {
          ...i,
          style: "currency"
        });
        return (u) => s.format(u);
      }),
      datetime: hg((n, i) => {
        const s = new Intl.DateTimeFormat(n, {
          ...i
        });
        return (u) => s.format(u);
      }),
      relativetime: hg((n, i) => {
        const s = new Intl.RelativeTimeFormat(n, {
          ...i
        });
        return (u) => s.format(u, i.range || "day");
      }),
      list: hg((n, i) => {
        const s = new Intl.ListFormat(n, {
          ...i
        });
        return (u) => s.format(u);
      })
    }, this.init(t);
  }
  init(t) {
    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {
      interpolation: {}
    };
    this.formatSeparator = n.interpolation.formatSeparator || ",";
  }
  add(t, n) {
    this.formats[t.toLowerCase().trim()] = n;
  }
  addCached(t, n) {
    this.formats[t.toLowerCase().trim()] = hg(n);
  }
  format(t, n, i) {
    let s = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
    const u = n.split(this.formatSeparator);
    if (u.length > 1 && u[0].indexOf("(") > 1 && u[0].indexOf(")") < 0 && u.find((p) => p.indexOf(")") > -1)) {
      const p = u.findIndex((m) => m.indexOf(")") > -1);
      u[0] = [u[0], ...u.splice(1, p)].join(this.formatSeparator);
    }
    return u.reduce((p, m) => {
      const {
        formatName: v,
        formatOptions: y
      } = $Z(m);
      if (this.formats[v]) {
        let C = p;
        try {
          const S = s && s.formatParams && s.formatParams[s.interpolationkey] || {}, R = S.locale || S.lng || s.locale || s.lng || i;
          C = this.formats[v](p, R, {
            ...y,
            ...s,
            ...S
          });
        } catch (S) {
          this.logger.warn(S);
        }
        return C;
      } else
        this.logger.warn(`there was no format function for ${v}`);
      return p;
    }, t);
  }
}
const zZ = (e, t) => {
  e.pending[t] !== void 0 && (delete e.pending[t], e.pendingCount--);
};
class HZ extends FE {
  constructor(t, n, i) {
    let s = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
    super(), this.backend = t, this.store = n, this.services = i, this.languageUtils = i.languageUtils, this.options = s, this.logger = zu.create("backendConnector"), this.waitingReads = [], this.maxParallelReads = s.maxParallelReads || 10, this.readingCalls = 0, this.maxRetries = s.maxRetries >= 0 ? s.maxRetries : 5, this.retryTimeout = s.retryTimeout >= 1 ? s.retryTimeout : 350, this.state = {}, this.queue = [], this.backend && this.backend.init && this.backend.init(i, s.backend, s);
  }
  queueLoad(t, n, i, s) {
    const u = {}, d = {}, p = {}, m = {};
    return t.forEach((v) => {
      let y = !0;
      n.forEach((C) => {
        const S = `${v}|${C}`;
        !i.reload && this.store.hasResourceBundle(v, C) ? this.state[S] = 2 : this.state[S] < 0 || (this.state[S] === 1 ? d[S] === void 0 && (d[S] = !0) : (this.state[S] = 1, y = !1, d[S] === void 0 && (d[S] = !0), u[S] === void 0 && (u[S] = !0), m[C] === void 0 && (m[C] = !0)));
      }), y || (p[v] = !0);
    }), (Object.keys(u).length || Object.keys(d).length) && this.queue.push({
      pending: d,
      pendingCount: Object.keys(d).length,
      loaded: {},
      errors: [],
      callback: s
    }), {
      toLoad: Object.keys(u),
      pending: Object.keys(d),
      toLoadLanguages: Object.keys(p),
      toLoadNamespaces: Object.keys(m)
    };
  }
  loaded(t, n, i) {
    const s = t.split("|"), u = s[0], d = s[1];
    n && this.emit("failedLoading", u, d, n), !n && i && this.store.addResourceBundle(u, d, i, void 0, void 0, {
      skipCopy: !0
    }), this.state[t] = n ? -1 : 2, n && i && (this.state[t] = 0);
    const p = {};
    this.queue.forEach((m) => {
      wZ(m.loaded, [u], d), zZ(m, t), n && m.errors.push(n), m.pendingCount === 0 && !m.done && (Object.keys(m.loaded).forEach((v) => {
        p[v] || (p[v] = {});
        const y = m.loaded[v];
        y.length && y.forEach((C) => {
          p[v][C] === void 0 && (p[v][C] = !0);
        });
      }), m.done = !0, m.errors.length ? m.callback(m.errors) : m.callback());
    }), this.emit("loaded", p), this.queue = this.queue.filter((m) => !m.done);
  }
  read(t, n, i) {
    let s = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 0, u = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : this.retryTimeout, d = arguments.length > 5 ? arguments[5] : void 0;
    if (!t.length) return d(null, {});
    if (this.readingCalls >= this.maxParallelReads) {
      this.waitingReads.push({
        lng: t,
        ns: n,
        fcName: i,
        tried: s,
        wait: u,
        callback: d
      });
      return;
    }
    this.readingCalls++;
    const p = (v, y) => {
      if (this.readingCalls--, this.waitingReads.length > 0) {
        const C = this.waitingReads.shift();
        this.read(C.lng, C.ns, C.fcName, C.tried, C.wait, C.callback);
      }
      if (v && y && s < this.maxRetries) {
        setTimeout(() => {
          this.read.call(this, t, n, i, s + 1, u * 2, d);
        }, u);
        return;
      }
      d(v, y);
    }, m = this.backend[i].bind(this.backend);
    if (m.length === 2) {
      try {
        const v = m(t, n);
        v && typeof v.then == "function" ? v.then((y) => p(null, y)).catch(p) : p(null, v);
      } catch (v) {
        p(v);
      }
      return;
    }
    return m(t, n, p);
  }
  prepareLoading(t, n) {
    let i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, s = arguments.length > 3 ? arguments[3] : void 0;
    if (!this.backend)
      return this.logger.warn("No backend was added via i18next.use. Will not load resources."), s && s();
    Pn(t) && (t = this.languageUtils.toResolveHierarchy(t)), Pn(n) && (n = [n]);
    const u = this.queueLoad(t, n, i, s);
    if (!u.toLoad.length)
      return u.pending.length || s(), null;
    u.toLoad.forEach((d) => {
      this.loadOne(d);
    });
  }
  load(t, n, i) {
    this.prepareLoading(t, n, {}, i);
  }
  reload(t, n, i) {
    this.prepareLoading(t, n, {
      reload: !0
    }, i);
  }
  loadOne(t) {
    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "";
    const i = t.split("|"), s = i[0], u = i[1];
    this.read(s, u, "read", void 0, void 0, (d, p) => {
      d && this.logger.warn(`${n}loading namespace ${u} for language ${s} failed`, d), !d && p && this.logger.log(`${n}loaded namespace ${u} for language ${s}`, p), this.loaded(t, d, p);
    });
  }
  saveMissing(t, n, i, s, u) {
    let d = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {}, p = arguments.length > 6 && arguments[6] !== void 0 ? arguments[6] : () => {
    };
    if (this.services.utils && this.services.utils.hasLoadedNamespace && !this.services.utils.hasLoadedNamespace(n)) {
      this.logger.warn(`did not save key "${i}" as the namespace "${n}" was not yet loaded`, "This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!");
      return;
    }
    if (!(i == null || i === "")) {
      if (this.backend && this.backend.create) {
        const m = {
          ...d,
          isUpdate: u
        }, v = this.backend.create.bind(this.backend);
        if (v.length < 6)
          try {
            let y;
            v.length === 5 ? y = v(t, n, i, s, m) : y = v(t, n, i, s), y && typeof y.then == "function" ? y.then((C) => p(null, C)).catch(p) : p(null, y);
          } catch (y) {
            p(y);
          }
        else
          v(t, n, i, s, p, m);
      }
      !t || !t[0] || this.store.addResource(t[0], n, i, s);
    }
  }
}
const I_ = () => ({
  debug: !1,
  initImmediate: !0,
  ns: ["translation"],
  defaultNS: ["translation"],
  fallbackLng: ["dev"],
  fallbackNS: !1,
  supportedLngs: !1,
  nonExplicitSupportedLngs: !1,
  load: "all",
  preload: !1,
  simplifyPluralSuffix: !0,
  keySeparator: ".",
  nsSeparator: ":",
  pluralSeparator: "_",
  contextSeparator: "_",
  partialBundledLanguages: !1,
  saveMissing: !1,
  updateMissing: !1,
  saveMissingTo: "fallback",
  saveMissingPlurals: !0,
  missingKeyHandler: !1,
  missingInterpolationHandler: !1,
  postProcess: !1,
  postProcessPassResolved: !1,
  returnNull: !1,
  returnEmptyString: !0,
  returnObjects: !1,
  joinArrays: !1,
  returnedObjectHandler: !1,
  parseMissingKeyHandler: !1,
  appendNamespaceToMissingKey: !1,
  appendNamespaceToCIMode: !1,
  overloadTranslationOptionHandler: (e) => {
    let t = {};
    if (typeof e[1] == "object" && (t = e[1]), Pn(e[1]) && (t.defaultValue = e[1]), Pn(e[2]) && (t.tDescription = e[2]), typeof e[2] == "object" || typeof e[3] == "object") {
      const n = e[3] || e[2];
      Object.keys(n).forEach((i) => {
        t[i] = n[i];
      });
    }
    return t;
  },
  interpolation: {
    escapeValue: !0,
    format: (e) => e,
    prefix: "{{",
    suffix: "}}",
    formatSeparator: ",",
    unescapePrefix: "-",
    nestingPrefix: "$t(",
    nestingSuffix: ")",
    nestingOptionsSeparator: ",",
    maxReplaces: 1e3,
    skipOnVariables: !0
  }
}), D_ = (e) => (Pn(e.ns) && (e.ns = [e.ns]), Pn(e.fallbackLng) && (e.fallbackLng = [e.fallbackLng]), Pn(e.fallbackNS) && (e.fallbackNS = [e.fallbackNS]), e.supportedLngs && e.supportedLngs.indexOf("cimode") < 0 && (e.supportedLngs = e.supportedLngs.concat(["cimode"])), e), i0 = () => {
}, VZ = (e) => {
  Object.getOwnPropertyNames(Object.getPrototypeOf(e)).forEach((n) => {
    typeof e[n] == "function" && (e[n] = e[n].bind(e));
  });
};
class mC extends FE {
  constructor() {
    let t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, n = arguments.length > 1 ? arguments[1] : void 0;
    if (super(), this.options = D_(t), this.services = {}, this.logger = zu, this.modules = {
      external: []
    }, VZ(this), n && !this.isInitialized && !t.isClone) {
      if (!this.options.initImmediate)
        return this.init(t, n), this;
      setTimeout(() => {
        this.init(t, n);
      }, 0);
    }
  }
  init() {
    var t = this;
    let n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, i = arguments.length > 1 ? arguments[1] : void 0;
    this.isInitializing = !0, typeof n == "function" && (i = n, n = {}), !n.defaultNS && n.defaultNS !== !1 && n.ns && (Pn(n.ns) ? n.defaultNS = n.ns : n.ns.indexOf("translation") < 0 && (n.defaultNS = n.ns[0]));
    const s = I_();
    this.options = {
      ...s,
      ...this.options,
      ...D_(n)
    }, this.options.compatibilityAPI !== "v1" && (this.options.interpolation = {
      ...s.interpolation,
      ...this.options.interpolation
    }), n.keySeparator !== void 0 && (this.options.userDefinedKeySeparator = n.keySeparator), n.nsSeparator !== void 0 && (this.options.userDefinedNsSeparator = n.nsSeparator);
    const u = (y) => y ? typeof y == "function" ? new y() : y : null;
    if (!this.options.isClone) {
      this.modules.logger ? zu.init(u(this.modules.logger), this.options) : zu.init(null, this.options);
      let y;
      this.modules.formatter ? y = this.modules.formatter : typeof Intl < "u" && (y = jZ);
      const C = new k_(this.options);
      this.store = new R_(this.options.resources, this.options);
      const S = this.services;
      S.logger = zu, S.resourceStore = this.store, S.languageUtils = C, S.pluralResolver = new _Z(C, {
        prepend: this.options.pluralSeparator,
        compatibilityJSON: this.options.compatibilityJSON,
        simplifyPluralSuffix: this.options.simplifyPluralSuffix
      }), y && (!this.options.interpolation.format || this.options.interpolation.format === s.interpolation.format) && (S.formatter = u(y), S.formatter.init(S, this.options), this.options.interpolation.format = S.formatter.format.bind(S.formatter)), S.interpolator = new AZ(this.options), S.utils = {
        hasLoadedNamespace: this.hasLoadedNamespace.bind(this)
      }, S.backendConnector = new HZ(u(this.modules.backend), S.resourceStore, S, this.options), S.backendConnector.on("*", function(R) {
        for (var O = arguments.length, E = new Array(O > 1 ? O - 1 : 0), k = 1; k < O; k++)
          E[k - 1] = arguments[k];
        t.emit(R, ...E);
      }), this.modules.languageDetector && (S.languageDetector = u(this.modules.languageDetector), S.languageDetector.init && S.languageDetector.init(S, this.options.detection, this.options)), this.modules.i18nFormat && (S.i18nFormat = u(this.modules.i18nFormat), S.i18nFormat.init && S.i18nFormat.init(this)), this.translator = new B0(this.services, this.options), this.translator.on("*", function(R) {
        for (var O = arguments.length, E = new Array(O > 1 ? O - 1 : 0), k = 1; k < O; k++)
          E[k - 1] = arguments[k];
        t.emit(R, ...E);
      }), this.modules.external.forEach((R) => {
        R.init && R.init(this);
      });
    }
    if (this.format = this.options.interpolation.format, i || (i = i0), this.options.fallbackLng && !this.services.languageDetector && !this.options.lng) {
      const y = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);
      y.length > 0 && y[0] !== "dev" && (this.options.lng = y[0]);
    }
    !this.services.languageDetector && !this.options.lng && this.logger.warn("init: no languageDetector is used and no lng is defined"), ["getResource", "hasResourceBundle", "getResourceBundle", "getDataByLanguage"].forEach((y) => {
      this[y] = function() {
        return t.store[y](...arguments);
      };
    }), ["addResource", "addResources", "addResourceBundle", "removeResourceBundle"].forEach((y) => {
      this[y] = function() {
        return t.store[y](...arguments), t;
      };
    });
    const m = Ib(), v = () => {
      const y = (C, S) => {
        this.isInitializing = !1, this.isInitialized && !this.initializedStoreOnce && this.logger.warn("init: i18next is already initialized. You should call init just once!"), this.isInitialized = !0, this.options.isClone || this.logger.log("initialized", this.options), this.emit("initialized", this.options), m.resolve(S), i(C, S);
      };
      if (this.languages && this.options.compatibilityAPI !== "v1" && !this.isInitialized) return y(null, this.t.bind(this));
      this.changeLanguage(this.options.lng, y);
    };
    return this.options.resources || !this.options.initImmediate ? v() : setTimeout(v, 0), m;
  }
  loadResources(t) {
    let i = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : i0;
    const s = Pn(t) ? t : this.language;
    if (typeof t == "function" && (i = t), !this.options.resources || this.options.partialBundledLanguages) {
      if (s && s.toLowerCase() === "cimode" && (!this.options.preload || this.options.preload.length === 0)) return i();
      const u = [], d = (p) => {
        if (!p || p === "cimode") return;
        this.services.languageUtils.toResolveHierarchy(p).forEach((v) => {
          v !== "cimode" && u.indexOf(v) < 0 && u.push(v);
        });
      };
      s ? d(s) : this.services.languageUtils.getFallbackCodes(this.options.fallbackLng).forEach((m) => d(m)), this.options.preload && this.options.preload.forEach((p) => d(p)), this.services.backendConnector.load(u, this.options.ns, (p) => {
        !p && !this.resolvedLanguage && this.language && this.setResolvedLanguage(this.language), i(p);
      });
    } else
      i(null);
  }
  reloadResources(t, n, i) {
    const s = Ib();
    return typeof t == "function" && (i = t, t = void 0), typeof n == "function" && (i = n, n = void 0), t || (t = this.languages), n || (n = this.options.ns), i || (i = i0), this.services.backendConnector.reload(t, n, (u) => {
      s.resolve(), i(u);
    }), s;
  }
  use(t) {
    if (!t) throw new Error("You are passing an undefined module! Please check the object you are passing to i18next.use()");
    if (!t.type) throw new Error("You are passing a wrong module! Please check the object you are passing to i18next.use()");
    return t.type === "backend" && (this.modules.backend = t), (t.type === "logger" || t.log && t.warn && t.error) && (this.modules.logger = t), t.type === "languageDetector" && (this.modules.languageDetector = t), t.type === "i18nFormat" && (this.modules.i18nFormat = t), t.type === "postProcessor" && I2.addPostProcessor(t), t.type === "formatter" && (this.modules.formatter = t), t.type === "3rdParty" && this.modules.external.push(t), this;
  }
  setResolvedLanguage(t) {
    if (!(!t || !this.languages) && !(["cimode", "dev"].indexOf(t) > -1))
      for (let n = 0; n < this.languages.length; n++) {
        const i = this.languages[n];
        if (!(["cimode", "dev"].indexOf(i) > -1) && this.store.hasLanguageSomeTranslations(i)) {
          this.resolvedLanguage = i;
          break;
        }
      }
  }
  changeLanguage(t, n) {
    var i = this;
    this.isLanguageChangingTo = t;
    const s = Ib();
    this.emit("languageChanging", t);
    const u = (m) => {
      this.language = m, this.languages = this.services.languageUtils.toResolveHierarchy(m), this.resolvedLanguage = void 0, this.setResolvedLanguage(m);
    }, d = (m, v) => {
      v ? (u(v), this.translator.changeLanguage(v), this.isLanguageChangingTo = void 0, this.emit("languageChanged", v), this.logger.log("languageChanged", v)) : this.isLanguageChangingTo = void 0, s.resolve(function() {
        return i.t(...arguments);
      }), n && n(m, function() {
        return i.t(...arguments);
      });
    }, p = (m) => {
      !t && !m && this.services.languageDetector && (m = []);
      const v = Pn(m) ? m : this.services.languageUtils.getBestMatchFromCodes(m);
      v && (this.language || u(v), this.translator.language || this.translator.changeLanguage(v), this.services.languageDetector && this.services.languageDetector.cacheUserLanguage && this.services.languageDetector.cacheUserLanguage(v)), this.loadResources(v, (y) => {
        d(y, v);
      });
    };
    return !t && this.services.languageDetector && !this.services.languageDetector.async ? p(this.services.languageDetector.detect()) : !t && this.services.languageDetector && this.services.languageDetector.async ? this.services.languageDetector.detect.length === 0 ? this.services.languageDetector.detect().then(p) : this.services.languageDetector.detect(p) : p(t), s;
  }
  getFixedT(t, n, i) {
    var s = this;
    const u = function(d, p) {
      let m;
      if (typeof p != "object") {
        for (var v = arguments.length, y = new Array(v > 2 ? v - 2 : 0), C = 2; C < v; C++)
          y[C - 2] = arguments[C];
        m = s.options.overloadTranslationOptionHandler([d, p].concat(y));
      } else
        m = {
          ...p
        };
      m.lng = m.lng || u.lng, m.lngs = m.lngs || u.lngs, m.ns = m.ns || u.ns, m.keyPrefix !== "" && (m.keyPrefix = m.keyPrefix || i || u.keyPrefix);
      const S = s.options.keySeparator || ".";
      let R;
      return m.keyPrefix && Array.isArray(d) ? R = d.map((O) => `${m.keyPrefix}${S}${O}`) : R = m.keyPrefix ? `${m.keyPrefix}${S}${d}` : d, s.t(R, m);
    };
    return Pn(t) ? u.lng = t : u.lngs = t, u.ns = n, u.keyPrefix = i, u;
  }
  t() {
    return this.translator && this.translator.translate(...arguments);
  }
  exists() {
    return this.translator && this.translator.exists(...arguments);
  }
  setDefaultNamespace(t) {
    this.options.defaultNS = t;
  }
  hasLoadedNamespace(t) {
    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    if (!this.isInitialized)
      return this.logger.warn("hasLoadedNamespace: i18next was not initialized", this.languages), !1;
    if (!this.languages || !this.languages.length)
      return this.logger.warn("hasLoadedNamespace: i18n.languages were undefined or empty", this.languages), !1;
    const i = n.lng || this.resolvedLanguage || this.languages[0], s = this.options ? this.options.fallbackLng : !1, u = this.languages[this.languages.length - 1];
    if (i.toLowerCase() === "cimode") return !0;
    const d = (p, m) => {
      const v = this.services.backendConnector.state[`${p}|${m}`];
      return v === -1 || v === 0 || v === 2;
    };
    if (n.precheck) {
      const p = n.precheck(this, d);
      if (p !== void 0) return p;
    }
    return !!(this.hasResourceBundle(i, t) || !this.services.backendConnector.backend || this.options.resources && !this.options.partialBundledLanguages || d(i, t) && (!s || d(u, t)));
  }
  loadNamespaces(t, n) {
    const i = Ib();
    return this.options.ns ? (Pn(t) && (t = [t]), t.forEach((s) => {
      this.options.ns.indexOf(s) < 0 && this.options.ns.push(s);
    }), this.loadResources((s) => {
      i.resolve(), n && n(s);
    }), i) : (n && n(), Promise.resolve());
  }
  loadLanguages(t, n) {
    const i = Ib();
    Pn(t) && (t = [t]);
    const s = this.options.preload || [], u = t.filter((d) => s.indexOf(d) < 0 && this.services.languageUtils.isSupportedCode(d));
    return u.length ? (this.options.preload = s.concat(u), this.loadResources((d) => {
      i.resolve(), n && n(d);
    }), i) : (n && n(), Promise.resolve());
  }
  dir(t) {
    if (t || (t = this.resolvedLanguage || (this.languages && this.languages.length > 0 ? this.languages[0] : this.language)), !t) return "rtl";
    const n = ["ar", "shu", "sqr", "ssh", "xaa", "yhd", "yud", "aao", "abh", "abv", "acm", "acq", "acw", "acx", "acy", "adf", "ads", "aeb", "aec", "afb", "ajp", "apc", "apd", "arb", "arq", "ars", "ary", "arz", "auz", "avl", "ayh", "ayl", "ayn", "ayp", "bbz", "pga", "he", "iw", "ps", "pbt", "pbu", "pst", "prp", "prd", "ug", "ur", "ydd", "yds", "yih", "ji", "yi", "hbo", "men", "xmn", "fa", "jpr", "peo", "pes", "prs", "dv", "sam", "ckb"], i = this.services && this.services.languageUtils || new k_(I_());
    return n.indexOf(i.getLanguagePartFromCode(t)) > -1 || t.toLowerCase().indexOf("-arab") > 1 ? "rtl" : "ltr";
  }
  static createInstance() {
    let t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, n = arguments.length > 1 ? arguments[1] : void 0;
    return new mC(t, n);
  }
  cloneInstance() {
    let t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : i0;
    const i = t.forkResourceStore;
    i && delete t.forkResourceStore;
    const s = {
      ...this.options,
      ...t,
      isClone: !0
    }, u = new mC(s);
    return (t.debug !== void 0 || t.prefix !== void 0) && (u.logger = u.logger.clone(t)), ["store", "services", "language"].forEach((p) => {
      u[p] = this[p];
    }), u.services = {
      ...this.services
    }, u.services.utils = {
      hasLoadedNamespace: u.hasLoadedNamespace.bind(u)
    }, i && (u.store = new R_(this.store.data, s), u.services.resourceStore = u.store), u.translator = new B0(u.services, s), u.translator.on("*", function(p) {
      for (var m = arguments.length, v = new Array(m > 1 ? m - 1 : 0), y = 1; y < m; y++)
        v[y - 1] = arguments[y];
      u.emit(p, ...v);
    }), u.init(s, n), u.translator.options = s, u.translator.backendConnector.services.utils = {
      hasLoadedNamespace: u.hasLoadedNamespace.bind(u)
    }, u;
  }
  toJSON() {
    return {
      options: this.options,
      store: this.store,
      language: this.language,
      languages: this.languages,
      resolvedLanguage: this.resolvedLanguage
    };
  }
}
const sa = mC.createInstance();
sa.createInstance = mC.createInstance;
sa.createInstance;
sa.dir;
sa.init;
sa.loadResources;
sa.reloadResources;
sa.use;
sa.changeLanguage;
sa.getFixedT;
sa.t;
sa.exists;
sa.setDefaultNamespace;
sa.hasLoadedNamespace;
sa.loadNamespaces;
sa.loadLanguages;
function BZ() {
  if (console && console.warn) {
    for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
      t[n] = arguments[n];
    dh(t[0]) && (t[0] = `react-i18next:: ${t[0]}`), console.warn(...t);
  }
}
const N_ = {};
function zk() {
  for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
    t[n] = arguments[n];
  dh(t[0]) && N_[t[0]] || (dh(t[0]) && (N_[t[0]] = /* @__PURE__ */ new Date()), BZ(...t));
}
const D2 = (e, t) => () => {
  if (e.isInitialized)
    t();
  else {
    const n = () => {
      setTimeout(() => {
        e.off("initialized", n);
      }, 0), t();
    };
    e.on("initialized", n);
  }
}, L_ = (e, t, n) => {
  e.loadNamespaces(t, D2(e, n));
}, F_ = (e, t, n, i) => {
  dh(n) && (n = [n]), n.forEach((s) => {
    e.options.ns.indexOf(s) < 0 && e.options.ns.push(s);
  }), e.loadLanguages(t, D2(e, i));
}, UZ = function(e, t) {
  let n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
  const i = t.languages[0], s = t.options ? t.options.fallbackLng : !1, u = t.languages[t.languages.length - 1];
  if (i.toLowerCase() === "cimode") return !0;
  const d = (p, m) => {
    const v = t.services.backendConnector.state[`${p}|${m}`];
    return v === -1 || v === 2;
  };
  return n.bindI18n && n.bindI18n.indexOf("languageChanging") > -1 && t.services.backendConnector.backend && t.isLanguageChangingTo && !d(t.isLanguageChangingTo, e) ? !1 : !!(t.hasResourceBundle(i, e) || !t.services.backendConnector.backend || t.options.resources && !t.options.partialBundledLanguages || d(i, e) && (!s || d(u, e)));
}, GZ = function(e, t) {
  let n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
  return !t.languages || !t.languages.length ? (zk("i18n.languages were undefined or empty", t.languages), !0) : t.options.ignoreJSONStructure !== void 0 ? t.hasLoadedNamespace(e, {
    lng: n.lng,
    precheck: (s, u) => {
      if (n.bindI18n && n.bindI18n.indexOf("languageChanging") > -1 && s.services.backendConnector.backend && s.isLanguageChangingTo && !u(s.isLanguageChangingTo, e)) return !1;
    }
  }) : UZ(e, t, n);
}, dh = (e) => typeof e == "string", WZ = (e) => typeof e == "object" && e !== null, qZ = /&(?:amp|#38|lt|#60|gt|#62|apos|#39|quot|#34|nbsp|#160|copy|#169|reg|#174|hellip|#8230|#x2F|#47);/g, KZ = {
  "&amp;": "&",
  "&#38;": "&",
  "&lt;": "<",
  "&#60;": "<",
  "&gt;": ">",
  "&#62;": ">",
  "&apos;": "'",
  "&#39;": "'",
  "&quot;": '"',
  "&#34;": '"',
  "&nbsp;": " ",
  "&#160;": " ",
  "&copy;": "©",
  "&#169;": "©",
  "&reg;": "®",
  "&#174;": "®",
  "&hellip;": "…",
  "&#8230;": "…",
  "&#x2F;": "/",
  "&#47;": "/"
}, YZ = (e) => KZ[e], XZ = (e) => e.replace(qZ, YZ);
let Hk = {
  bindI18n: "languageChanged",
  bindI18nStore: "",
  transEmptyNodeValue: "",
  transSupportBasicHtmlNodes: !0,
  transWrapTextNodes: "",
  transKeepBasicHtmlNodesFor: ["br", "strong", "i", "p"],
  useSuspense: !0,
  unescape: XZ
};
const QZ = function() {
  let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  Hk = {
    ...Hk,
    ...e
  };
}, JZ = () => Hk;
let N2;
const ZZ = (e) => {
  N2 = e;
}, eee = () => N2, tee = {
  type: "3rdParty",
  init(e) {
    QZ(e.options.react), ZZ(e);
  }
}, L2 = w.createContext();
class nee {
  constructor() {
    Mu(this, "getUsedNamespaces", () => Object.keys(this.usedNamespaces));
    this.usedNamespaces = {};
  }
  addUsedNamespaces(t) {
    t.forEach((n) => {
      this.usedNamespaces[n] || (this.usedNamespaces[n] = !0);
    });
  }
}
const ree = (e, t) => {
  const n = w.useRef();
  return w.useEffect(() => {
    n.current = e;
  }, [e, t]), n.current;
}, F2 = (e, t, n, i) => e.getFixedT(t, n, i), oee = (e, t, n, i) => w.useCallback(F2(e, t, n, i), [e, t, n, i]), HC = function(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  const {
    i18n: n
  } = t, {
    i18n: i,
    defaultNS: s
  } = w.useContext(L2) || {}, u = n || i || eee();
  if (u && !u.reportNamespaces && (u.reportNamespaces = new nee()), !u) {
    zk("You will need to pass in an i18next instance by using initReactI18next");
    const M = (H, K) => dh(K) ? K : WZ(K) && dh(K.defaultValue) ? K.defaultValue : Array.isArray(H) ? H[H.length - 1] : H, D = [M, {}, !1];
    return D.t = M, D.i18n = {}, D.ready = !1, D;
  }
  u.options.react && u.options.react.wait !== void 0 && zk("It seems you are still using the old wait option, you may migrate to the new useSuspense behaviour.");
  const d = {
    ...JZ(),
    ...u.options.react,
    ...t
  }, {
    useSuspense: p,
    keyPrefix: m
  } = d;
  let v = s || u.options && u.options.defaultNS;
  v = dh(v) ? [v] : v || ["translation"], u.reportNamespaces.addUsedNamespaces && u.reportNamespaces.addUsedNamespaces(v);
  const y = (u.isInitialized || u.initializedStoreOnce) && v.every((M) => GZ(M, u, d)), C = oee(u, t.lng || null, d.nsMode === "fallback" ? v : v[0], m), S = () => C, R = () => F2(u, t.lng || null, d.nsMode === "fallback" ? v : v[0], m), [O, E] = w.useState(S);
  let k = v.join();
  t.lng && (k = `${t.lng}${k}`);
  const F = ree(k), _ = w.useRef(!0);
  w.useEffect(() => {
    const {
      bindI18n: M,
      bindI18nStore: D
    } = d;
    _.current = !0, !y && !p && (t.lng ? F_(u, t.lng, v, () => {
      _.current && E(R);
    }) : L_(u, v, () => {
      _.current && E(R);
    })), y && F && F !== k && _.current && E(R);
    const H = () => {
      _.current && E(R);
    };
    return M && u && u.on(M, H), D && u && u.store.on(D, H), () => {
      _.current = !1, M && u && M.split(" ").forEach((K) => u.off(K, H)), D && u && D.split(" ").forEach((K) => u.store.off(K, H));
    };
  }, [u, k]), w.useEffect(() => {
    _.current && y && E(S);
  }, [u, m, y]);
  const L = [O, u, y];
  if (L.t = O, L.i18n = u, L.ready = y, y || !y && !p) return L;
  throw new Promise((M) => {
    t.lng ? F_(u, t.lng, v, () => M()) : L_(u, v, () => M());
  });
};
function iee(e) {
  let {
    i18n: t,
    defaultNS: n,
    children: i
  } = e;
  const s = w.useMemo(() => ({
    i18n: t,
    defaultNS: n
  }), [t, n]);
  return w.createElement(L2.Provider, {
    value: s
  }, i);
}
const {
  slice: aee,
  forEach: see
} = [];
function lee(e) {
  return see.call(aee.call(arguments, 1), (t) => {
    if (t)
      for (const n in t)
        e[n] === void 0 && (e[n] = t[n]);
  }), e;
}
function uee(e) {
  return typeof e != "string" ? !1 : [/<\s*script.*?>/i, /<\s*\/\s*script\s*>/i, /<\s*img.*?on\w+\s*=/i, /<\s*\w+\s*on\w+\s*=.*?>/i, /javascript\s*:/i, /vbscript\s*:/i, /expression\s*\(/i, /eval\s*\(/i, /alert\s*\(/i, /document\.cookie/i, /document\.write\s*\(/i, /window\.location/i, /innerHTML/i].some((n) => n.test(e));
}
const __ = /^[\u0009\u0020-\u007e\u0080-\u00ff]+$/, cee = function(e, t) {
  const i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {
    path: "/"
  }, s = encodeURIComponent(t);
  let u = `${e}=${s}`;
  if (i.maxAge > 0) {
    const d = i.maxAge - 0;
    if (Number.isNaN(d)) throw new Error("maxAge should be a Number");
    u += `; Max-Age=${Math.floor(d)}`;
  }
  if (i.domain) {
    if (!__.test(i.domain))
      throw new TypeError("option domain is invalid");
    u += `; Domain=${i.domain}`;
  }
  if (i.path) {
    if (!__.test(i.path))
      throw new TypeError("option path is invalid");
    u += `; Path=${i.path}`;
  }
  if (i.expires) {
    if (typeof i.expires.toUTCString != "function")
      throw new TypeError("option expires is invalid");
    u += `; Expires=${i.expires.toUTCString()}`;
  }
  if (i.httpOnly && (u += "; HttpOnly"), i.secure && (u += "; Secure"), i.sameSite)
    switch (typeof i.sameSite == "string" ? i.sameSite.toLowerCase() : i.sameSite) {
      case !0:
        u += "; SameSite=Strict";
        break;
      case "lax":
        u += "; SameSite=Lax";
        break;
      case "strict":
        u += "; SameSite=Strict";
        break;
      case "none":
        u += "; SameSite=None";
        break;
      default:
        throw new TypeError("option sameSite is invalid");
    }
  return i.partitioned && (u += "; Partitioned"), u;
}, A_ = {
  create(e, t, n, i) {
    let s = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : {
      path: "/",
      sameSite: "strict"
    };
    n && (s.expires = /* @__PURE__ */ new Date(), s.expires.setTime(s.expires.getTime() + n * 60 * 1e3)), i && (s.domain = i), document.cookie = cee(e, t, s);
  },
  read(e) {
    const t = `${e}=`, n = document.cookie.split(";");
    for (let i = 0; i < n.length; i++) {
      let s = n[i];
      for (; s.charAt(0) === " "; ) s = s.substring(1, s.length);
      if (s.indexOf(t) === 0) return s.substring(t.length, s.length);
    }
    return null;
  },
  remove(e, t) {
    this.create(e, "", -1, t);
  }
};
var dee = {
  name: "cookie",
  // Deconstruct the options object and extract the lookupCookie property
  lookup(e) {
    let {
      lookupCookie: t
    } = e;
    if (t && typeof document < "u")
      return A_.read(t) || void 0;
  },
  // Deconstruct the options object and extract the lookupCookie, cookieMinutes, cookieDomain, and cookieOptions properties
  cacheUserLanguage(e, t) {
    let {
      lookupCookie: n,
      cookieMinutes: i,
      cookieDomain: s,
      cookieOptions: u
    } = t;
    n && typeof document < "u" && A_.create(n, e, i, s, u);
  }
}, fee = {
  name: "querystring",
  // Deconstruct the options object and extract the lookupQuerystring property
  lookup(e) {
    var i;
    let {
      lookupQuerystring: t
    } = e, n;
    if (typeof window < "u") {
      let {
        search: s
      } = window.location;
      !window.location.search && ((i = window.location.hash) == null ? void 0 : i.indexOf("?")) > -1 && (s = window.location.hash.substring(window.location.hash.indexOf("?")));
      const d = s.substring(1).split("&");
      for (let p = 0; p < d.length; p++) {
        const m = d[p].indexOf("=");
        m > 0 && d[p].substring(0, m) === t && (n = d[p].substring(m + 1));
      }
    }
    return n;
  }
}, pee = {
  name: "hash",
  // Deconstruct the options object and extract the lookupHash property and the lookupFromHashIndex property
  lookup(e) {
    var s;
    let {
      lookupHash: t,
      lookupFromHashIndex: n
    } = e, i;
    if (typeof window < "u") {
      const {
        hash: u
      } = window.location;
      if (u && u.length > 2) {
        const d = u.substring(1);
        if (t) {
          const p = d.split("&");
          for (let m = 0; m < p.length; m++) {
            const v = p[m].indexOf("=");
            v > 0 && p[m].substring(0, v) === t && (i = p[m].substring(v + 1));
          }
        }
        if (i) return i;
        if (!i && n > -1) {
          const p = u.match(/\/([a-zA-Z-]*)/g);
          return Array.isArray(p) ? (s = p[typeof n == "number" ? n : 0]) == null ? void 0 : s.replace("/", "") : void 0;
        }
      }
    }
    return i;
  }
};
let mg = null;
const $_ = () => {
  if (mg !== null) return mg;
  try {
    if (mg = typeof window < "u" && window.localStorage !== null, !mg)
      return !1;
    const e = "i18next.translate.boo";
    window.localStorage.setItem(e, "foo"), window.localStorage.removeItem(e);
  } catch {
    mg = !1;
  }
  return mg;
};
var hee = {
  name: "localStorage",
  // Deconstruct the options object and extract the lookupLocalStorage property
  lookup(e) {
    let {
      lookupLocalStorage: t
    } = e;
    if (t && $_())
      return window.localStorage.getItem(t) || void 0;
  },
  // Deconstruct the options object and extract the lookupLocalStorage property
  cacheUserLanguage(e, t) {
    let {
      lookupLocalStorage: n
    } = t;
    n && $_() && window.localStorage.setItem(n, e);
  }
};
let gg = null;
const j_ = () => {
  if (gg !== null) return gg;
  try {
    if (gg = typeof window < "u" && window.sessionStorage !== null, !gg)
      return !1;
    const e = "i18next.translate.boo";
    window.sessionStorage.setItem(e, "foo"), window.sessionStorage.removeItem(e);
  } catch {
    gg = !1;
  }
  return gg;
};
var mee = {
  name: "sessionStorage",
  lookup(e) {
    let {
      lookupSessionStorage: t
    } = e;
    if (t && j_())
      return window.sessionStorage.getItem(t) || void 0;
  },
  cacheUserLanguage(e, t) {
    let {
      lookupSessionStorage: n
    } = t;
    n && j_() && window.sessionStorage.setItem(n, e);
  }
}, gee = {
  name: "navigator",
  lookup(e) {
    const t = [];
    if (typeof navigator < "u") {
      const {
        languages: n,
        userLanguage: i,
        language: s
      } = navigator;
      if (n)
        for (let u = 0; u < n.length; u++)
          t.push(n[u]);
      i && t.push(i), s && t.push(s);
    }
    return t.length > 0 ? t : void 0;
  }
}, vee = {
  name: "htmlTag",
  // Deconstruct the options object and extract the htmlTag property
  lookup(e) {
    let {
      htmlTag: t
    } = e, n;
    const i = t || (typeof document < "u" ? document.documentElement : null);
    return i && typeof i.getAttribute == "function" && (n = i.getAttribute("lang")), n;
  }
}, yee = {
  name: "path",
  // Deconstruct the options object and extract the lookupFromPathIndex property
  lookup(e) {
    var s;
    let {
      lookupFromPathIndex: t
    } = e;
    if (typeof window > "u") return;
    const n = window.location.pathname.match(/\/([a-zA-Z-]*)/g);
    return Array.isArray(n) ? (s = n[typeof t == "number" ? t : 0]) == null ? void 0 : s.replace("/", "") : void 0;
  }
}, bee = {
  name: "subdomain",
  lookup(e) {
    var s, u;
    let {
      lookupFromSubdomainIndex: t
    } = e;
    const n = typeof t == "number" ? t + 1 : 1, i = typeof window < "u" && ((u = (s = window.location) == null ? void 0 : s.hostname) == null ? void 0 : u.match(/^(\w{2,5})\.(([a-z0-9-]{1,63}\.[a-z]{2,6})|localhost)/i));
    if (i)
      return i[n];
  }
};
let _2 = !1;
try {
  document.cookie, _2 = !0;
} catch {
}
const A2 = ["querystring", "cookie", "localStorage", "sessionStorage", "navigator", "htmlTag"];
_2 || A2.splice(1, 1);
const Cee = () => ({
  order: A2,
  lookupQuerystring: "lng",
  lookupCookie: "i18next",
  lookupLocalStorage: "i18nextLng",
  lookupSessionStorage: "i18nextLng",
  // cache user language
  caches: ["localStorage"],
  excludeCacheFor: ["cimode"],
  // cookieMinutes: 10,
  // cookieDomain: 'myDomain'
  convertDetectedLanguage: (e) => e
});
class $2 {
  constructor(t) {
    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    this.type = "languageDetector", this.detectors = {}, this.init(t, n);
  }
  init() {
    let t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {
      languageUtils: {}
    }, n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
    this.services = t, this.options = lee(n, this.options || {}, Cee()), typeof this.options.convertDetectedLanguage == "string" && this.options.convertDetectedLanguage.indexOf("15897") > -1 && (this.options.convertDetectedLanguage = (s) => s.replace("-", "_")), this.options.lookupFromUrlIndex && (this.options.lookupFromPathIndex = this.options.lookupFromUrlIndex), this.i18nOptions = i, this.addDetector(dee), this.addDetector(fee), this.addDetector(hee), this.addDetector(mee), this.addDetector(gee), this.addDetector(vee), this.addDetector(yee), this.addDetector(bee), this.addDetector(pee);
  }
  addDetector(t) {
    return this.detectors[t.name] = t, this;
  }
  detect() {
    let t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.options.order, n = [];
    return t.forEach((i) => {
      if (this.detectors[i]) {
        let s = this.detectors[i].lookup(this.options);
        s && typeof s == "string" && (s = [s]), s && (n = n.concat(s));
      }
    }), n = n.filter((i) => i != null && !uee(i)).map((i) => this.options.convertDetectedLanguage(i)), this.services && this.services.languageUtils && this.services.languageUtils.getBestMatchFromCodes ? n : n.length > 0 ? n[0] : null;
  }
  cacheUserLanguage(t) {
    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.options.caches;
    n && (this.options.excludeCacheFor && this.options.excludeCacheFor.indexOf(t) > -1 || n.forEach((i) => {
      this.detectors[i] && this.detectors[i].cacheUserLanguage(t, this.options);
    }));
  }
}
$2.type = "languageDetector";
const See = {
  en: { translation: { upload: "Upload", overlap: "Overlap", targets: "Targets", settings: "Settings", results: "Results", language: "Language" } },
  de: { translation: { upload: "Upload", overlap: "Überlappung", targets: "Ziele", settings: "Einstellungen", results: "Ergebnisse", language: "Sprache" } }
}, wee = ({ children: e, defaultLang: t = "en" }) => {
  const n = tr.useRef(sa.createInstance()), [i, s] = tr.useState(!1);
  return tr.useEffect(() => {
    n.current.use(tee).use($2).init({
      resources: See,
      fallbackLng: t,
      detection: { order: ["querystring", "localStorage", "navigator"], caches: ["localStorage"] }
    }).then(() => s(!0));
  }, [t]), i ? /* @__PURE__ */ A.jsx(iee, { i18n: n.current, children: e }) : null;
}, xee = () => {
  var i;
  const { i18n: e } = HC(), [t, n] = tr.useState((i = e.language) != null && i.startsWith("de") ? "de" : "en");
  return tr.useEffect(() => {
    e.changeLanguage(t);
  }, [t, e]), /* @__PURE__ */ A.jsxs(ov, { size: "small", value: t, onChange: (s) => n(s.target.value), sx: { color: "white", borderColor: "white", ml: 2 }, children: [
    /* @__PURE__ */ A.jsx(ms, { value: "en", children: "EN" }),
    /* @__PURE__ */ A.jsx(ms, { value: "de", children: "DE" })
  ] });
}, Eee = ({ children: e }) => /* @__PURE__ */ A.jsxs(df, { sx: { display: "flex", flexDirection: "column", minHeight: "100vh" }, children: [
  /* @__PURE__ */ A.jsx(bj, { position: "static", children: /* @__PURE__ */ A.jsxs(GP, { children: [
    /* @__PURE__ */ A.jsx(li, { variant: "h6", sx: { flexGrow: 1 }, children: "Datafusion" }),
    /* @__PURE__ */ A.jsx(Qs, { color: "inherit", component: Kp, to: "/", children: "Upload" }),
    /* @__PURE__ */ A.jsx(Qs, { color: "inherit", component: Kp, to: "/overlap", children: "Overlap" }),
    /* @__PURE__ */ A.jsx(Qs, { color: "inherit", component: Kp, to: "/targets", children: "Targets" }),
    /* @__PURE__ */ A.jsx(Qs, { color: "inherit", component: Kp, to: "/settings", children: "Settings" }),
    /* @__PURE__ */ A.jsx(Qs, { color: "inherit", component: Kp, to: "/results", children: "Results" }),
    /* @__PURE__ */ A.jsx(xee, {})
  ] }) }),
  /* @__PURE__ */ A.jsx(Hj, { sx: { py: 3, flexGrow: 1 }, children: e })
] });
class Tee {
  constructor(t = {}) {
    Mu(this, "apiBase");
    Mu(this, "authEnabled");
    Mu(this, "jwtToken");
    const n = window.__DATAFUSION_CONFIG__ ?? {};
    this.apiBase = t.apiBase ?? n.apiBase ?? "", this.authEnabled = t.authEnabled ?? !!n.authEnabled, this.jwtToken = t.jwtToken ?? n.jwtToken;
  }
  async get(t, n = {}) {
    return this.request(t, { method: "GET", ...n });
  }
  async post(t, n, i = {}) {
    return this.request(t, { method: "POST", body: JSON.stringify(n), headers: { "Content-Type": "application/json", ...i.headers || {} }, ...i });
  }
  async postForm(t, n, i = {}) {
    return this.request(t, { method: "POST", body: n, ...i });
  }
  async request(t, n = {}) {
    const i = new Headers(n.headers);
    this.authEnabled && this.jwtToken && i.set("Authorization", `Bearer ${this.jwtToken}`);
    const s = await fetch(this.apiBase + t, { ...n, headers: i });
    if (!s.ok) {
      const d = await s.text().catch(() => "");
      throw new Error(`HTTP ${s.status}: ${d}`);
    }
    return (s.headers.get("content-type") || "").includes("application/json") ? s.json() : s.text();
  }
  // Async job endpoints
  async startAsync(t) {
    return this.post("/v1/fuse/async", t);
  }
  async getJob(t) {
    return this.get(`/v1/fuse/async/${encodeURIComponent(t)}`);
  }
}
const j2 = tr.createContext(void 0), Ree = ({ runtime: e, children: t }) => {
  const n = tr.useMemo(() => new Tee({ apiBase: e.apiBase, authEnabled: e.authEnabled, jwtToken: e.jwtToken }), [e.apiBase, e.authEnabled, e.jwtToken]), [i, s] = tr.useState(void 0), [u, d] = tr.useState(void 0), [p, m] = tr.useState({ prefer_pycaret: !0, random_state: 42, row_limit: null, overlap_features: null, targets_from_a: null, targets_from_b: null, columns_include: null, columns_exclude: null }), [v, y] = tr.useState(void 0), [C, S] = tr.useState(!1), [R, O] = tr.useState(void 0), [E, k] = tr.useState(void 0), [F, _] = tr.useState(void 0), W = {
    runtime: e,
    client: n,
    fileA: i,
    fileB: u,
    settings: p,
    result: v,
    loading: C,
    error: R,
    jobId: E,
    jobStatus: F,
    setFiles: (B, ee) => {
      s(B), d(ee);
    },
    setSettings: (B) => {
      m((ee) => ({ ...ee, ...B }));
    },
    resetResult: () => y(void 0),
    runUploadFusion: async () => {
      if (!i || !u) {
        O("Both files are required");
        return;
      }
      S(!0), O(void 0);
      try {
        const B = new FormData();
        B.append("file_a", i, i.name), B.append("file_b", u, u.name), p.overlap_features && p.overlap_features.forEach((U) => B.append("overlap_features", U)), p.targets_from_a && p.targets_from_a.forEach((U) => B.append("targets_from_a", U)), p.targets_from_b && p.targets_from_b.forEach((U) => B.append("targets_from_b", U)), typeof p.prefer_pycaret == "boolean" && B.append("prefer_pycaret", String(p.prefer_pycaret)), typeof p.random_state == "number" && B.append("random_state", String(p.random_state)), Array.isArray(p.columns_include) && p.columns_include.forEach((U) => B.append("columns_include", U)), Array.isArray(p.columns_exclude) && p.columns_exclude.forEach((U) => B.append("columns_exclude", U)), typeof p.row_limit == "number" && B.append("row_limit", String(p.row_limit));
        const ee = await n.postForm("/v1/fuse/upload", B);
        y(ee);
      } catch (B) {
        O((B == null ? void 0 : B.message) || String(B));
      } finally {
        S(!1);
      }
    },
    runAsyncJson: async (B) => {
      S(!0), O(void 0), y(void 0);
      try {
        const ee = {
          df_a: B.df_a,
          df_b: B.df_b,
          overlap_features: B.overlap_features ?? void 0,
          targets_from_a: B.targets_from_a ?? void 0,
          targets_from_b: B.targets_from_b ?? void 0,
          prefer_pycaret: B.prefer_pycaret,
          random_state: B.random_state,
          return_parts: void 0,
          row_limit: B.row_limit ?? void 0,
          columns_include: B.columns_include ?? void 0,
          columns_exclude: B.columns_exclude ?? void 0
        }, q = (await n.startAsync(ee)).job_id;
        k(q), _("pending");
      } catch (ee) {
        O((ee == null ? void 0 : ee.message) || String(ee));
      } finally {
        S(!1);
      }
    },
    pollJob: async () => {
      if (E)
        try {
          const B = await n.getJob(E), ee = B.status;
          _(ee), ee === "done" ? y(B.result) : ee === "error" && O(B.error || "Unknown error");
        } catch (B) {
          O((B == null ? void 0 : B.message) || String(B));
        }
    },
    clearJob: () => {
      k(void 0), _(void 0);
    },
    exportConfig: () => JSON.stringify({ settings: p }, null, 2),
    importConfig: (B) => {
      const ee = JSON.parse(B);
      ee && typeof ee == "object" && ee.settings && m((U) => ({ ...U, ...ee.settings }));
    }
  };
  return /* @__PURE__ */ A.jsx(j2.Provider, { value: W, children: t });
}, QP = () => {
  const e = tr.useContext(j2);
  if (!e) throw new Error("useAppState must be used within AppStateProvider");
  return e;
}, Oee = () => {
  const { t: e } = HC(), t = T2(), { setFiles: n, runUploadFusion: i, loading: s, error: u, runtime: d } = QP(), [p, m] = tr.useState(), [v, y] = tr.useState(), C = (R) => (O) => {
    var F;
    const E = (F = O.target.files) == null ? void 0 : F[0];
    if (!E) {
      R(void 0);
      return;
    }
    const k = (d.maxUploadMb ?? 20) * 1024 * 1024;
    if (E.size > k) {
      alert(`File too large. Limit ${d.maxUploadMb} MB`);
      return;
    }
    R(E);
  }, S = async () => {
    n(p, v), await i(), t("/results");
  };
  return /* @__PURE__ */ A.jsxs(bs, { sx: { p: 3 }, children: [
    /* @__PURE__ */ A.jsx(li, { variant: "h5", gutterBottom: !0, children: e("upload") }),
    /* @__PURE__ */ A.jsxs(df, { display: "flex", gap: 2, children: [
      /* @__PURE__ */ A.jsxs("div", { children: [
        /* @__PURE__ */ A.jsx(li, { variant: "subtitle2", children: "Dataset A" }),
        /* @__PURE__ */ A.jsx("input", { type: "file", accept: ".csv,.parquet", onChange: C(m) })
      ] }),
      /* @__PURE__ */ A.jsxs("div", { children: [
        /* @__PURE__ */ A.jsx(li, { variant: "subtitle2", children: "Dataset B" }),
        /* @__PURE__ */ A.jsx("input", { type: "file", accept: ".csv,.parquet", onChange: C(y) })
      ] })
    ] }),
    u && /* @__PURE__ */ A.jsx(MP, { severity: "error", sx: { mt: 2 }, children: u }),
    /* @__PURE__ */ A.jsx(df, { mt: 2, children: /* @__PURE__ */ A.jsx(Qs, { variant: "contained", onClick: S, disabled: !p || !v || s, children: s ? "Running…" : "Run Fusion" }) })
  ] });
}, kee = () => {
  const { t: e } = HC();
  return /* @__PURE__ */ A.jsxs(bs, { sx: { p: 3 }, children: [
    /* @__PURE__ */ A.jsx(li, { variant: "h5", gutterBottom: !0, children: e("overlap") }),
    /* @__PURE__ */ A.jsx(li, { variant: "body2", children: "Konfiguration der Überlappungsmerkmale folgt." })
  ] });
}, Pee = () => {
  const { t: e } = HC();
  return /* @__PURE__ */ A.jsxs(bs, { sx: { p: 3 }, children: [
    /* @__PURE__ */ A.jsx(li, { variant: "h5", gutterBottom: !0, children: e("targets") }),
    /* @__PURE__ */ A.jsx(li, { variant: "body2", children: "Auswahl der Zielvariablen folgt." })
  ] });
}, Mee = () => {
  const { t: e } = HC(), { settings: t, setSettings: n, exportConfig: i, importConfig: s, runAsyncJson: u, loading: d, error: p, jobId: m, jobStatus: v, pollJob: y, clearJob: C } = QP(), [S, R] = tr.useState(`[
  { "age_group": "18-29" }
]`), [O, E] = tr.useState(`[
  { "age_group": "18-29" }
]`);
  tr.useEffect(() => {
    let L;
    return m && v === "pending" && (L = setInterval(() => {
      y();
    }, 1500)), () => {
      L && clearInterval(L);
    };
  }, [m, v, y]);
  const k = () => {
    const L = new Blob([i()], { type: "application/json" }), M = URL.createObjectURL(L), D = document.createElement("a");
    D.href = M, D.download = "datafusion-config.json", D.click(), URL.revokeObjectURL(M);
  }, F = (L) => {
    var D;
    const M = (D = L.target.files) == null ? void 0 : D[0];
    M && M.text().then(s).catch((H) => alert((H == null ? void 0 : H.message) || String(H)));
  }, _ = async () => {
    try {
      const L = JSON.parse(S), M = JSON.parse(O);
      await u({ df_a: L, df_b: M, ...t });
    } catch (L) {
      alert((L == null ? void 0 : L.message) || String(L));
    }
  };
  return /* @__PURE__ */ A.jsxs(bs, { sx: { p: 3 }, children: [
    /* @__PURE__ */ A.jsx(li, { variant: "h5", gutterBottom: !0, children: e("settings") }),
    /* @__PURE__ */ A.jsxs(l2, { spacing: 2, children: [
      /* @__PURE__ */ A.jsxs(df, { display: "flex", gap: 2, children: [
        /* @__PURE__ */ A.jsx(Jp, { label: "random_state", type: "number", value: t.random_state ?? "", onChange: (L) => n({ random_state: Number(L.target.value) }) }),
        /* @__PURE__ */ A.jsx(Jp, { label: "row_limit", type: "number", value: t.row_limit ?? "", onChange: (L) => n({ row_limit: L.target.value === "" ? null : Number(L.target.value) }) })
      ] }),
      /* @__PURE__ */ A.jsxs(df, { display: "flex", gap: 2, children: [
        /* @__PURE__ */ A.jsx(Qs, { variant: "outlined", onClick: k, children: "Export Config" }),
        /* @__PURE__ */ A.jsxs(Qs, { variant: "outlined", component: "label", children: [
          "Import Config",
          /* @__PURE__ */ A.jsx("input", { type: "file", accept: "application/json", hidden: !0, onChange: F })
        ] })
      ] }),
      /* @__PURE__ */ A.jsx(li, { variant: "h6", children: "Async (JSON) run" }),
      /* @__PURE__ */ A.jsxs(df, { display: "flex", gap: 2, children: [
        /* @__PURE__ */ A.jsx(Jp, { label: "df_a JSON", value: S, onChange: (L) => R(L.target.value), fullWidth: !0, multiline: !0, minRows: 6 }),
        /* @__PURE__ */ A.jsx(Jp, { label: "df_b JSON", value: O, onChange: (L) => E(L.target.value), fullWidth: !0, multiline: !0, minRows: 6 })
      ] }),
      /* @__PURE__ */ A.jsxs(df, { display: "flex", gap: 2, children: [
        /* @__PURE__ */ A.jsx(Qs, { variant: "contained", onClick: _, disabled: d, children: "Start Async" }),
        m && /* @__PURE__ */ A.jsx(Qs, { variant: "outlined", onClick: C, children: "Clear Job" }),
        m && /* @__PURE__ */ A.jsxs(li, { variant: "body2", children: [
          "Job: ",
          m,
          " — Status: ",
          v
        ] })
      ] }),
      p && /* @__PURE__ */ A.jsx(MP, { severity: "error", children: p })
    ] })
  ] });
}, JP = /* @__PURE__ */ w.createContext(void 0);
process.env.NODE_ENV !== "production" && (JP.displayName = "GridApiContext");
function In() {
  const e = w.useContext(JP);
  if (e === void 0)
    throw new Error(["MUI X: Could not find the Data Grid context.", "It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.", "This can also happen if you are bundling multiple versions of the Data Grid."].join(`
`));
  return e;
}
const ZP = /* @__PURE__ */ w.createContext(void 0);
process.env.NODE_ENV !== "production" && (ZP.displayName = "GridRootPropsContext");
const Vt = () => {
  const e = w.useContext(ZP);
  if (!e)
    throw new Error("MUI X: useGridRootProps should only be used inside the DataGrid, DataGridPro or DataGridPremium component.");
  return e;
}, Iee = parseInt(w.version, 10), nr = (e) => {
  if (Iee >= 19) {
    const t = (n) => e(n, n.ref ?? null);
    return t.displayName = e.displayName ?? e.name, t;
  }
  return /* @__PURE__ */ w.forwardRef(e);
};
var Dee = (e, t, n) => {
  if (t.length === 1 && t[0] === n) {
    let i = !1;
    try {
      const s = {};
      e(s) === s && (i = !0);
    } catch {
    }
    if (i) {
      let s;
      try {
        throw new Error();
      } catch (u) {
        ({ stack: s } = u);
      }
      console.warn(
        `The result function returned its own inputs without modification. e.g
\`createSelector([state => state.todos], todos => todos)\`
This could lead to inefficient memoization and unnecessary re-renders.
Ensure transformation logic is in the result function, and extraction logic is in the input selectors.`,
        { stack: s }
      );
    }
  }
}, Nee = (e, t, n) => {
  const { memoize: i, memoizeOptions: s } = t, { inputSelectorResults: u, inputSelectorResultsCopy: d } = e, p = i(() => ({}), ...s);
  if (!(p.apply(null, u) === p.apply(null, d))) {
    let v;
    try {
      throw new Error();
    } catch (y) {
      ({ stack: v } = y);
    }
    console.warn(
      `An input selector returned a different result when passed same arguments.
This means your output selector will likely run more frequently than intended.
Avoid returning a new reference inside your input selector, e.g.
\`createSelector([state => state.todos.map(todo => todo.id)], todoIds => todoIds.length)\``,
      {
        arguments: n,
        firstInputs: u,
        secondInputs: d,
        stack: v
      }
    );
  }
}, Lee = {
  inputStabilityCheck: "once",
  identityFunctionCheck: "once"
}, U0 = /* @__PURE__ */ Symbol("NOT_FOUND");
function Fee(e, t = `expected a function, instead received ${typeof e}`) {
  if (typeof e != "function")
    throw new TypeError(t);
}
function _ee(e, t = `expected an object, instead received ${typeof e}`) {
  if (typeof e != "object")
    throw new TypeError(t);
}
function Aee(e, t = "expected all items to be functions, instead received the following types: ") {
  if (!e.every((n) => typeof n == "function")) {
    const n = e.map(
      (i) => typeof i == "function" ? `function ${i.name || "unnamed"}()` : typeof i
    ).join(", ");
    throw new TypeError(`${t}[${n}]`);
  }
}
var z_ = (e) => Array.isArray(e) ? e : [e];
function $ee(e) {
  const t = Array.isArray(e[0]) ? e[0] : e;
  return Aee(
    t,
    "createSelector expects all input-selectors to be functions, but received the following types: "
  ), t;
}
function H_(e, t) {
  const n = [], { length: i } = e;
  for (let s = 0; s < i; s++)
    n.push(e[s].apply(null, t));
  return n;
}
var jee = (e, t) => {
  const { identityFunctionCheck: n, inputStabilityCheck: i } = {
    ...Lee,
    ...t
  };
  return {
    identityFunctionCheck: {
      shouldRun: n === "always" || n === "once" && e,
      run: Dee
    },
    inputStabilityCheck: {
      shouldRun: i === "always" || i === "once" && e,
      run: Nee
    }
  };
};
function zee(e) {
  let t;
  return {
    get(n) {
      return t && e(t.key, n) ? t.value : U0;
    },
    put(n, i) {
      t = { key: n, value: i };
    },
    getEntries() {
      return t ? [t] : [];
    },
    clear() {
      t = void 0;
    }
  };
}
function Hee(e, t) {
  let n = [];
  function i(p) {
    const m = n.findIndex((v) => t(p, v.key));
    if (m > -1) {
      const v = n[m];
      return m > 0 && (n.splice(m, 1), n.unshift(v)), v.value;
    }
    return U0;
  }
  function s(p, m) {
    i(p) === U0 && (n.unshift({ key: p, value: m }), n.length > e && n.pop());
  }
  function u() {
    return n;
  }
  function d() {
    n = [];
  }
  return { get: i, put: s, getEntries: u, clear: d };
}
var Vee = (e, t) => e === t;
function Bee(e) {
  return function(n, i) {
    if (n === null || i === null || n.length !== i.length)
      return !1;
    const { length: s } = n;
    for (let u = 0; u < s; u++)
      if (!e(n[u], i[u]))
        return !1;
    return !0;
  };
}
function z2(e, t) {
  const n = typeof t == "object" ? t : { equalityCheck: t }, {
    equalityCheck: i = Vee,
    maxSize: s = 1,
    resultEqualityCheck: u
  } = n, d = Bee(i);
  let p = 0;
  const m = s <= 1 ? zee(d) : Hee(s, d);
  function v() {
    let y = m.get(arguments);
    if (y === U0) {
      if (y = e.apply(null, arguments), p++, u) {
        const S = m.getEntries().find(
          (R) => u(R.value, y)
        );
        S && (y = S.value, p !== 0 && p--);
      }
      m.put(arguments, y);
    }
    return y;
  }
  return v.clearCache = () => {
    m.clear(), v.resetResultsCount();
  }, v.resultsCount = () => p, v.resetResultsCount = () => {
    p = 0;
  }, v;
}
var Uee = class {
  constructor(e) {
    this.value = e;
  }
  deref() {
    return this.value;
  }
}, Gee = typeof WeakRef < "u" ? WeakRef : Uee, Wee = 0, V_ = 1;
function a0() {
  return {
    s: Wee,
    v: void 0,
    o: null,
    p: null
  };
}
function H2(e, t = {}) {
  let n = a0();
  const { resultEqualityCheck: i } = t;
  let s, u = 0;
  function d() {
    var C;
    let p = n;
    const { length: m } = arguments;
    for (let S = 0, R = m; S < R; S++) {
      const O = arguments[S];
      if (typeof O == "function" || typeof O == "object" && O !== null) {
        let E = p.o;
        E === null && (p.o = E = /* @__PURE__ */ new WeakMap());
        const k = E.get(O);
        k === void 0 ? (p = a0(), E.set(O, p)) : p = k;
      } else {
        let E = p.p;
        E === null && (p.p = E = /* @__PURE__ */ new Map());
        const k = E.get(O);
        k === void 0 ? (p = a0(), E.set(O, p)) : p = k;
      }
    }
    const v = p;
    let y;
    if (p.s === V_)
      y = p.v;
    else if (y = e.apply(null, arguments), u++, i) {
      const S = ((C = s == null ? void 0 : s.deref) == null ? void 0 : C.call(s)) ?? s;
      S != null && i(S, y) && (y = S, u !== 0 && u--), s = typeof y == "object" && y !== null || typeof y == "function" ? new Gee(y) : y;
    }
    return v.s = V_, v.v = y, y;
  }
  return d.clearCache = () => {
    n = a0(), d.resetResultsCount();
  }, d.resultsCount = () => u, d.resetResultsCount = () => {
    u = 0;
  }, d;
}
function V2(e, ...t) {
  const n = typeof e == "function" ? {
    memoize: e,
    memoizeOptions: t
  } : e, i = (...s) => {
    let u = 0, d = 0, p, m = {}, v = s.pop();
    typeof v == "object" && (m = v, v = s.pop()), Fee(
      v,
      `createSelector expects an output function after the inputs, but received: [${typeof v}]`
    );
    const y = {
      ...n,
      ...m
    }, {
      memoize: C,
      memoizeOptions: S = [],
      argsMemoize: R = H2,
      argsMemoizeOptions: O = [],
      devModeChecks: E = {}
    } = y, k = z_(S), F = z_(O), _ = $ee(s), L = C(function() {
      return u++, v.apply(
        null,
        arguments
      );
    }, ...k);
    let M = !0;
    const D = R(function() {
      d++;
      const K = H_(
        _,
        arguments
      );
      if (p = L.apply(null, K), process.env.NODE_ENV !== "production") {
        const { identityFunctionCheck: Q, inputStabilityCheck: z } = jee(M, E);
        if (Q.shouldRun && Q.run(
          v,
          K,
          p
        ), z.shouldRun) {
          const I = H_(
            _,
            arguments
          );
          z.run(
            { inputSelectorResults: K, inputSelectorResultsCopy: I },
            { memoize: C, memoizeOptions: k },
            arguments
          );
        }
        M && (M = !1);
      }
      return p;
    }, ...F);
    return Object.assign(D, {
      resultFunc: v,
      memoizedResultFunc: L,
      dependencies: _,
      dependencyRecomputations: () => d,
      resetDependencyRecomputations: () => {
        d = 0;
      },
      lastResult: () => p,
      recomputations: () => u,
      resetRecomputations: () => {
        u = 0;
      },
      memoize: C,
      argsMemoize: R
    });
  };
  return Object.assign(i, {
    withTypes: () => i
  }), i;
}
var B2 = /* @__PURE__ */ V2(H2), qee = Object.assign(
  (e, t = B2) => {
    _ee(
      e,
      `createStructuredSelector expects first argument to be an object where each property is a selector, instead received a ${typeof e}`
    );
    const n = Object.keys(e), i = n.map(
      (u) => e[u]
    );
    return t(
      i,
      (...u) => u.reduce((d, p, m) => (d[n[m]] = p, d), {})
    );
  },
  { withTypes: () => qee }
);
const B_ = /* @__PURE__ */ new Set();
function tl(e, t = "warning") {
  if (process.env.NODE_ENV === "production")
    return;
  const n = Array.isArray(e) ? e.join(`
`) : e;
  B_.has(n) || (B_.add(n), t === "error" ? console.error(n) : console.warn(n));
}
const Kee = Object.is;
function U2(e, t) {
  if (e === t)
    return !0;
  if (!(e instanceof Object) || !(t instanceof Object))
    return !1;
  let n = 0, i = 0;
  for (const s in e)
    if (n += 1, !Kee(e[s], t[s]) || !(s in t))
      return !1;
  for (const s in t)
    i += 1;
  return n === i;
}
var Vk = { exports: {} }, jO = {};
/**
 * @license React
 * use-sync-external-store-shim.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var U_;
function Yee() {
  if (U_) return jO;
  U_ = 1;
  var e = w;
  function t(C, S) {
    return C === S && (C !== 0 || 1 / C === 1 / S) || C !== C && S !== S;
  }
  var n = typeof Object.is == "function" ? Object.is : t, i = e.useState, s = e.useEffect, u = e.useLayoutEffect, d = e.useDebugValue;
  function p(C, S) {
    var R = S(), O = i({ inst: { value: R, getSnapshot: S } }), E = O[0].inst, k = O[1];
    return u(
      function() {
        E.value = R, E.getSnapshot = S, m(E) && k({ inst: E });
      },
      [C, R, S]
    ), s(
      function() {
        return m(E) && k({ inst: E }), C(function() {
          m(E) && k({ inst: E });
        });
      },
      [C]
    ), d(R), R;
  }
  function m(C) {
    var S = C.getSnapshot;
    C = C.value;
    try {
      var R = S();
      return !n(C, R);
    } catch {
      return !0;
    }
  }
  function v(C, S) {
    return S();
  }
  var y = typeof window > "u" || typeof window.document > "u" || typeof window.document.createElement > "u" ? v : p;
  return jO.useSyncExternalStore = e.useSyncExternalStore !== void 0 ? e.useSyncExternalStore : y, jO;
}
var zO = {};
/**
 * @license React
 * use-sync-external-store-shim.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var G_;
function Xee() {
  return G_ || (G_ = 1, process.env.NODE_ENV !== "production" && function() {
    function e(R, O) {
      return R === O && (R !== 0 || 1 / R === 1 / O) || R !== R && O !== O;
    }
    function t(R, O) {
      y || s.startTransition === void 0 || (y = !0, console.error(
        "You are using an outdated, pre-release alpha of React 18 that does not support useSyncExternalStore. The use-sync-external-store shim will not work correctly. Upgrade to a newer pre-release."
      ));
      var E = O();
      if (!C) {
        var k = O();
        u(E, k) || (console.error(
          "The result of getSnapshot should be cached to avoid an infinite loop"
        ), C = !0);
      }
      k = d({
        inst: { value: E, getSnapshot: O }
      });
      var F = k[0].inst, _ = k[1];
      return m(
        function() {
          F.value = E, F.getSnapshot = O, n(F) && _({ inst: F });
        },
        [R, E, O]
      ), p(
        function() {
          return n(F) && _({ inst: F }), R(function() {
            n(F) && _({ inst: F });
          });
        },
        [R]
      ), v(E), E;
    }
    function n(R) {
      var O = R.getSnapshot;
      R = R.value;
      try {
        var E = O();
        return !u(R, E);
      } catch {
        return !0;
      }
    }
    function i(R, O) {
      return O();
    }
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());
    var s = w, u = typeof Object.is == "function" ? Object.is : e, d = s.useState, p = s.useEffect, m = s.useLayoutEffect, v = s.useDebugValue, y = !1, C = !1, S = typeof window > "u" || typeof window.document > "u" || typeof window.document.createElement > "u" ? i : t;
    zO.useSyncExternalStore = s.useSyncExternalStore !== void 0 ? s.useSyncExternalStore : S, typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());
  }()), zO;
}
process.env.NODE_ENV === "production" ? Vk.exports = Yee() : Vk.exports = Xee();
var eM = Vk.exports;
function G2(e) {
  return e.acceptsApiRef;
}
function W_(e, t) {
  return G2(t) ? t(e) : t(e.current.state);
}
function HO(e, t, n, i) {
  return G2(t) ? t(e, n) : t(e.current.state, i);
}
const W2 = Object.is, tM = U2, Qee = (e, t) => e === t ? !0 : e.length === t.length && e.every((n, i) => n === t[i]), Jee = (e, t) => {
  let n = Object.is;
  return t instanceof Array ? n = Qee : t instanceof Object && (n = tM), n(e, t);
}, q2 = () => ({
  state: null,
  equals: null,
  selector: null,
  args: void 0
}), G0 = [], K2 = () => null, tt = (e, t, n = W2) => {
  process.env.NODE_ENV !== "production" && (e.current.state || tl(["MUI X: `useGridSelector` has been called before the initialization of the state.", "This hook can only be used inside the context of the grid."]));
  const i = sl(q2), s = i.current.selector !== null, [u, d] = w.useState(
    // We don't use an initialization function to avoid allocations
    s ? null : W_(e, t)
  );
  i.current.state = u, i.current.equals = n, i.current.selector = t;
  const p = w.useCallback(
    () => (i.current.subscription || (i.current.subscription = e.current.store.subscribe(() => {
      const v = W_(e, i.current.selector);
      i.current.equals(i.current.state, v) || (i.current.state = v, d(v));
    })), null),
    // eslint-disable-next-line react-hooks/exhaustive-deps
    G0
  ), m = w.useCallback(() => () => {
    i.current.subscription && (i.current.subscription(), i.current.subscription = void 0);
  }, G0);
  return eM.useSyncExternalStore(m, p, K2), u;
}, gC = (e, t, n = void 0, i = W2) => {
  process.env.NODE_ENV !== "production" && (e.current.state || tl(["MUI X: `useGridSelector` has been called before the initialization of the state.", "This hook can only be used inside the context of the grid."]));
  const s = sl(q2), u = s.current.selector !== null, [d, p] = w.useState(
    // We don't use an initialization function to avoid allocations
    u ? null : HO(e, t, n, e.current.instanceId)
  );
  s.current.state = d, s.current.equals = i, s.current.selector = t;
  const m = s.current.args;
  if (s.current.args = n, u && !Jee(m, n)) {
    const C = HO(e, s.current.selector, s.current.args, e.current.instanceId);
    s.current.equals(s.current.state, C) || (s.current.state = C, p(C));
  }
  const v = w.useCallback(
    () => (s.current.subscription || (s.current.subscription = e.current.store.subscribe(() => {
      const C = HO(e, s.current.selector, s.current.args, e.current.instanceId);
      s.current.equals(s.current.state, C) || (s.current.state = C, p(C));
    })), null),
    // eslint-disable-next-line react-hooks/exhaustive-deps
    G0
  ), y = w.useCallback(() => () => {
    s.current.subscription && (s.current.subscription(), s.current.subscription = void 0);
  }, G0);
  return eM.useSyncExternalStore(y, v, K2), d;
}, Zee = V2({
  memoize: z2,
  memoizeOptions: {
    maxSize: 1,
    equalityCheck: Object.is
  }
}), q_ = /* @__PURE__ */ new WeakMap();
function Hl(e) {
  return "current" in e && "instanceId" in e.current;
}
const Vl = {
  id: "default"
}, an = (e, t, n, i, s, u, ...d) => {
  if (d.length > 0)
    throw new Error("Unsupported number of selectors");
  let p;
  if (e && t && n && i && s && u)
    p = (m, v) => {
      const y = Hl(m), C = v ?? (y ? m.current.instanceId : Vl), S = y ? m.current.state : m, R = e(S, C), O = t(S, C), E = n(S, C), k = i(S, C), F = s(S, C);
      return u(R, O, E, k, F);
    };
  else if (e && t && n && i && s)
    p = (m, v) => {
      const y = Hl(m), C = v ?? (y ? m.current.instanceId : Vl), S = y ? m.current.state : m, R = e(S, C), O = t(S, C), E = n(S, C), k = i(S, C);
      return s(R, O, E, k);
    };
  else if (e && t && n && i)
    p = (m, v) => {
      const y = Hl(m), C = v ?? (y ? m.current.instanceId : Vl), S = y ? m.current.state : m, R = e(S, C), O = t(S, C), E = n(S, C);
      return i(R, O, E);
    };
  else if (e && t && n)
    p = (m, v) => {
      const y = Hl(m), C = v ?? (y ? m.current.instanceId : Vl), S = y ? m.current.state : m, R = e(S, C), O = t(S, C);
      return n(R, O);
    };
  else if (e && t)
    p = (m, v) => {
      const y = Hl(m), C = v ?? (y ? m.current.instanceId : Vl), S = y ? m.current.state : m, R = e(S, C);
      return t(R);
    };
  else
    throw new Error("Missing arguments");
  return p.acceptsApiRef = !0, p;
}, VC = (e, t, n, i, s, u, ...d) => {
  if (d.length > 0)
    throw new Error("Unsupported number of selectors");
  let p;
  if (e && t && n && i && s && u)
    p = (m, v, y) => {
      const C = Hl(m), S = y ?? (C ? m.current.instanceId : Vl), R = C ? m.current.state : m, O = e(R, v, S), E = t(R, v, S), k = n(R, v, S), F = i(R, v, S), _ = s(R, v, S);
      return u(O, E, k, F, _, v);
    };
  else if (e && t && n && i && s)
    p = (m, v, y) => {
      const C = Hl(m), S = y ?? (C ? m.current.instanceId : Vl), R = C ? m.current.state : m, O = e(R, v, S), E = t(R, v, S), k = n(R, v, S), F = i(R, v, S);
      return s(O, E, k, F, v);
    };
  else if (e && t && n && i)
    p = (m, v, y) => {
      const C = Hl(m), S = y ?? (C ? m.current.instanceId : Vl), R = C ? m.current.state : m, O = e(R, v, S), E = t(R, v, S), k = n(R, v, S);
      return i(O, E, k, v);
    };
  else if (e && t && n)
    p = (m, v, y) => {
      const C = Hl(m), S = y ?? (C ? m.current.instanceId : Vl), R = C ? m.current.state : m, O = e(R, v, S), E = t(R, v, S);
      return n(O, E, v);
    };
  else if (e && t)
    p = (m, v, y) => {
      const C = Hl(m), S = y ?? (C ? m.current.instanceId : Vl), R = C ? m.current.state : m, O = e(R, v, S);
      return t(O, v);
    };
  else
    throw new Error("Missing arguments");
  return p.acceptsApiRef = !0, p;
}, dr = (...e) => {
  const t = (n, i) => {
    const s = Hl(n), u = s ? n.current.instanceId : i ?? Vl, d = s ? n.current.state : n;
    process.env.NODE_ENV !== "production" && u.id === "default" && tl(["MUI X: A selector was called without passing the instance ID, which may impact the performance of the grid.", "To fix, call it with `apiRef`, for example `mySelector(apiRef)`, or pass the instance ID explicitly, for example `mySelector(state, apiRef.current.instanceId)`."]);
    const p = q_.get(u), m = p ?? /* @__PURE__ */ new Map(), v = m == null ? void 0 : m.get(e);
    if (m && v)
      return v(d, u);
    const y = Zee(...e);
    return p || q_.set(u, m), m.set(e, y), y(d, u);
  };
  return t.acceptsApiRef = !0, t;
}, ui = (e) => e.dimensions, _E = an(ui, (e) => e.columnsTotalWidth), nM = (e) => e.dimensions.rowHeight, ete = (e) => e.dimensions.contentSize.height, tte = (e) => e.dimensions.hasScrollX, nte = (e) => e.dimensions.hasScrollY, Y2 = (e) => e.dimensions.columnsTotalWidth < e.dimensions.viewportOuterSize.width, rte = (e) => e.dimensions.headerHeight, ote = (e) => e.dimensions.groupHeaderHeight, X2 = (e) => e.dimensions.hasScrollY ? e.dimensions.scrollbarSize : 0, ite = (e) => {
  const t = e.dimensions.hasScrollX ? e.dimensions.scrollbarSize : 0, n = e.dimensions.viewportOuterSize.height - e.dimensions.minimumSize.height > 0;
  return !(t === 0 && !n);
};
function Zc(e) {
  return /* @__PURE__ */ w.memo(e, U2);
}
const ate = {
  // Root
  noRowsLabel: "No rows",
  noResultsOverlayLabel: "No results found.",
  // Density selector toolbar button text
  toolbarDensity: "Density",
  toolbarDensityLabel: "Density",
  toolbarDensityCompact: "Compact",
  toolbarDensityStandard: "Standard",
  toolbarDensityComfortable: "Comfortable",
  // Columns selector toolbar button text
  toolbarColumns: "Columns",
  toolbarColumnsLabel: "Select columns",
  // Filters toolbar button text
  toolbarFilters: "Filters",
  toolbarFiltersLabel: "Show filters",
  toolbarFiltersTooltipHide: "Hide filters",
  toolbarFiltersTooltipShow: "Show filters",
  toolbarFiltersTooltipActive: (e) => e !== 1 ? `${e} active filters` : `${e} active filter`,
  // Quick filter toolbar field
  toolbarQuickFilterPlaceholder: "Search…",
  toolbarQuickFilterLabel: "Search",
  toolbarQuickFilterDeleteIconLabel: "Clear",
  // Export selector toolbar button text
  toolbarExport: "Export",
  toolbarExportLabel: "Export",
  toolbarExportCSV: "Download as CSV",
  toolbarExportPrint: "Print",
  toolbarExportExcel: "Download as Excel",
  // Columns management text
  columnsManagementSearchTitle: "Search",
  columnsManagementNoColumns: "No columns",
  columnsManagementShowHideAllText: "Show/Hide All",
  columnsManagementReset: "Reset",
  columnsManagementDeleteIconLabel: "Clear",
  // Filter panel text
  filterPanelAddFilter: "Add filter",
  filterPanelRemoveAll: "Remove all",
  filterPanelDeleteIconLabel: "Delete",
  filterPanelLogicOperator: "Logic operator",
  filterPanelOperator: "Operator",
  filterPanelOperatorAnd: "And",
  filterPanelOperatorOr: "Or",
  filterPanelColumns: "Columns",
  filterPanelInputLabel: "Value",
  filterPanelInputPlaceholder: "Filter value",
  // Filter operators text
  filterOperatorContains: "contains",
  filterOperatorDoesNotContain: "does not contain",
  filterOperatorEquals: "equals",
  filterOperatorDoesNotEqual: "does not equal",
  filterOperatorStartsWith: "starts with",
  filterOperatorEndsWith: "ends with",
  filterOperatorIs: "is",
  filterOperatorNot: "is not",
  filterOperatorAfter: "is after",
  filterOperatorOnOrAfter: "is on or after",
  filterOperatorBefore: "is before",
  filterOperatorOnOrBefore: "is on or before",
  filterOperatorIsEmpty: "is empty",
  filterOperatorIsNotEmpty: "is not empty",
  filterOperatorIsAnyOf: "is any of",
  "filterOperator=": "=",
  "filterOperator!=": "!=",
  "filterOperator>": ">",
  "filterOperator>=": ">=",
  "filterOperator<": "<",
  "filterOperator<=": "<=",
  // Header filter operators text
  headerFilterOperatorContains: "Contains",
  headerFilterOperatorDoesNotContain: "Does not contain",
  headerFilterOperatorEquals: "Equals",
  headerFilterOperatorDoesNotEqual: "Does not equal",
  headerFilterOperatorStartsWith: "Starts with",
  headerFilterOperatorEndsWith: "Ends with",
  headerFilterOperatorIs: "Is",
  headerFilterOperatorNot: "Is not",
  headerFilterOperatorAfter: "Is after",
  headerFilterOperatorOnOrAfter: "Is on or after",
  headerFilterOperatorBefore: "Is before",
  headerFilterOperatorOnOrBefore: "Is on or before",
  headerFilterOperatorIsEmpty: "Is empty",
  headerFilterOperatorIsNotEmpty: "Is not empty",
  headerFilterOperatorIsAnyOf: "Is any of",
  "headerFilterOperator=": "Equals",
  "headerFilterOperator!=": "Not equals",
  "headerFilterOperator>": "Greater than",
  "headerFilterOperator>=": "Greater than or equal to",
  "headerFilterOperator<": "Less than",
  "headerFilterOperator<=": "Less than or equal to",
  // Filter values text
  filterValueAny: "any",
  filterValueTrue: "true",
  filterValueFalse: "false",
  // Column menu text
  columnMenuLabel: "Menu",
  columnMenuAriaLabel: (e) => `${e} column menu`,
  columnMenuShowColumns: "Show columns",
  columnMenuManageColumns: "Manage columns",
  columnMenuFilter: "Filter",
  columnMenuHideColumn: "Hide column",
  columnMenuUnsort: "Unsort",
  columnMenuSortAsc: "Sort by ASC",
  columnMenuSortDesc: "Sort by DESC",
  // Column header text
  columnHeaderFiltersTooltipActive: (e) => e !== 1 ? `${e} active filters` : `${e} active filter`,
  columnHeaderFiltersLabel: "Show filters",
  columnHeaderSortIconLabel: "Sort",
  // Rows selected footer text
  footerRowSelected: (e) => e !== 1 ? `${e.toLocaleString()} rows selected` : `${e.toLocaleString()} row selected`,
  // Total row amount footer text
  footerTotalRows: "Total Rows:",
  // Total visible row amount footer text
  footerTotalVisibleRows: (e, t) => `${e.toLocaleString()} of ${t.toLocaleString()}`,
  // Checkbox selection text
  checkboxSelectionHeaderName: "Checkbox selection",
  checkboxSelectionSelectAllRows: "Select all rows",
  checkboxSelectionUnselectAllRows: "Unselect all rows",
  checkboxSelectionSelectRow: "Select row",
  checkboxSelectionUnselectRow: "Unselect row",
  // Boolean cell text
  booleanCellTrueLabel: "yes",
  booleanCellFalseLabel: "no",
  // Actions cell more text
  actionsCellMore: "more",
  // Column pinning text
  pinToLeft: "Pin to left",
  pinToRight: "Pin to right",
  unpin: "Unpin",
  // Tree Data
  treeDataGroupingHeaderName: "Group",
  treeDataExpand: "see children",
  treeDataCollapse: "hide children",
  // Grouping columns
  groupingColumnHeaderName: "Group",
  groupColumn: (e) => `Group by ${e}`,
  unGroupColumn: (e) => `Stop grouping by ${e}`,
  // Master/detail
  detailPanelToggle: "Detail panel toggle",
  expandDetailPanel: "Expand",
  collapseDetailPanel: "Collapse",
  // Used core components translation keys
  MuiTablePagination: {},
  // Row reordering text
  rowReorderingHeaderName: "Row reordering",
  // Aggregation
  aggregationMenuItemHeader: "Aggregation",
  aggregationFunctionLabelSum: "sum",
  aggregationFunctionLabelAvg: "avg",
  aggregationFunctionLabelMin: "min",
  aggregationFunctionLabelMax: "max",
  aggregationFunctionLabelSize: "size"
};
function Gn(e) {
  return mn("MuiDataGrid", e);
}
const ae = bn("MuiDataGrid", ["actionsCell", "aggregationColumnHeader", "aggregationColumnHeader--alignLeft", "aggregationColumnHeader--alignCenter", "aggregationColumnHeader--alignRight", "aggregationColumnHeaderLabel", "autoHeight", "autosizing", "booleanCell", "cell--editable", "cell--editing", "cell--flex", "cell--textCenter", "cell--textLeft", "cell--textRight", "cell--rangeTop", "cell--rangeBottom", "cell--rangeLeft", "cell--rangeRight", "cell--pinnedLeft", "cell--pinnedRight", "cell--selectionMode", "cell", "cellCheckbox", "cellEmpty", "cellSkeleton", "cellOffsetLeft", "checkboxInput", "columnHeader", "columnHeader--alignCenter", "columnHeader--alignLeft", "columnHeader--alignRight", "columnHeader--dragging", "columnHeader--moving", "columnHeader--numeric", "columnHeader--sortable", "columnHeader--sorted", "columnHeader--filtered", "columnHeader--pinnedLeft", "columnHeader--pinnedRight", "columnHeader--last", "columnHeader--lastUnpinned", "columnHeader--siblingFocused", "columnHeaderCheckbox", "columnHeaderDraggableContainer", "columnHeaderTitle", "columnHeaderTitleContainer", "columnHeaderTitleContainerContent", "columnHeader--filledGroup", "columnHeader--emptyGroup", "columnHeaders", "columnSeparator--resizable", "columnSeparator--resizing", "columnSeparator--sideLeft", "columnSeparator--sideRight", "columnSeparator", "columnsManagement", "columnsManagementRow", "columnsManagementHeader", "columnsManagementSearchInput", "columnsManagementFooter", "container--top", "container--bottom", "detailPanel", "detailPanels", "detailPanelToggleCell", "detailPanelToggleCell--expanded", "footerCell", "panel", "panelHeader", "panelWrapper", "panelContent", "panelFooter", "paper", "editBooleanCell", "editInputCell", "filler", "filler--borderBottom", "filler--pinnedLeft", "filler--pinnedRight", "filterForm", "filterFormDeleteIcon", "filterFormLogicOperatorInput", "filterFormColumnInput", "filterFormOperatorInput", "filterFormValueInput", "filterIcon", "footerContainer", "headerFilterRow", "iconButtonContainer", "iconSeparator", "main", "main--hasPinnedRight", "main--hasSkeletonLoadingOverlay", "menu", "menuIcon", "menuIconButton", "menuOpen", "menuList", "overlay", "overlayWrapper", "overlayWrapperInner", "root", "root--densityStandard", "root--densityComfortable", "root--densityCompact", "root--disableUserSelection", "root--noToolbar", "row", "row--editable", "row--editing", "row--firstVisible", "row--lastVisible", "row--dragging", "row--dynamicHeight", "row--detailPanelExpanded", "row--borderBottom", "rowReorderCellPlaceholder", "rowCount", "rowReorderCellContainer", "rowReorderCell", "rowReorderCell--draggable", "rowSkeleton", "scrollArea--left", "scrollArea--right", "scrollArea--up", "scrollArea--down", "scrollArea", "scrollbar", "scrollbar--vertical", "scrollbar--horizontal", "scrollbarFiller", "scrollbarFiller--header", "scrollbarFiller--borderTop", "scrollbarFiller--borderBottom", "scrollbarFiller--pinnedRight", "selectedRowCount", "sortButton", "sortIcon", "toolbarContainer", "toolbarFilterList", "virtualScroller", "virtualScroller--hasScrollX", "virtualScrollerContent", "virtualScrollerContent--overflowed", "virtualScrollerRenderZone", "pinnedColumns", "withVerticalBorder", "withBorderColor", "cell--withRightBorder", "cell--withLeftBorder", "columnHeader--withRightBorder", "columnHeader--withLeftBorder", "treeDataGroupingCell", "treeDataGroupingCellToggle", "treeDataGroupingCellLoadingContainer", "groupingCriteriaCell", "groupingCriteriaCellToggle", "groupingCriteriaCellLoadingContainer", "pinnedRows", "pinnedRows--top", "pinnedRows--bottom", "pinnedRowsRenderZone"]), K_ = 1e3;
class ste {
  constructor(t = K_) {
    this.timeouts = /* @__PURE__ */ new Map(), this.cleanupTimeout = K_, this.cleanupTimeout = t;
  }
  register(t, n, i) {
    this.timeouts || (this.timeouts = /* @__PURE__ */ new Map());
    const s = setTimeout(() => {
      typeof n == "function" && n(), this.timeouts.delete(i.cleanupToken);
    }, this.cleanupTimeout);
    this.timeouts.set(i.cleanupToken, s);
  }
  unregister(t) {
    const n = this.timeouts.get(t.cleanupToken);
    n && (this.timeouts.delete(t.cleanupToken), clearTimeout(n));
  }
  reset() {
    this.timeouts && (this.timeouts.forEach((t, n) => {
      this.unregister({
        cleanupToken: n
      });
    }), this.timeouts = void 0);
  }
}
class lte {
  constructor() {
    this.registry = new FinalizationRegistry((t) => {
      typeof t == "function" && t();
    });
  }
  register(t, n, i) {
    this.registry.register(t, n, i);
  }
  unregister(t) {
    this.registry.unregister(t);
  }
  // eslint-disable-next-line class-methods-use-this
  reset() {
  }
}
var gs = /* @__PURE__ */ function(e) {
  return e.DataGrid = "DataGrid", e.DataGridPro = "DataGridPro", e.DataGridPremium = "DataGridPremium", e;
}(gs || {});
class ute {
}
function cte(e) {
  let t = 0;
  return function(i, s, u, d) {
    e.registry === null && (e.registry = typeof FinalizationRegistry < "u" ? new lte() : new ste());
    const [p] = w.useState(new ute()), m = w.useRef(null), v = w.useRef(null);
    v.current = u;
    const y = w.useRef(null);
    if (!m.current && v.current) {
      const C = (S, R, O) => {
        var E;
        R.defaultMuiPrevented || (E = v.current) == null || E.call(v, S, R, O);
      };
      m.current = i.current.subscribeEvent(s, C, d), t += 1, y.current = {
        cleanupToken: t
      }, e.registry.register(
        p,
        // The callback below will be called once this reference stops being retained
        () => {
          var S;
          (S = m.current) == null || S.call(m), m.current = null, y.current = null;
        },
        y.current
      );
    } else !v.current && m.current && (m.current(), m.current = null, y.current && (e.registry.unregister(y.current), y.current = null));
    w.useEffect(() => {
      if (!m.current && v.current) {
        const C = (S, R, O) => {
          var E;
          R.defaultMuiPrevented || (E = v.current) == null || E.call(v, S, R, O);
        };
        m.current = i.current.subscribeEvent(s, C, d);
      }
      return y.current && e.registry && (e.registry.unregister(y.current), y.current = null), () => {
        var C;
        (C = m.current) == null || C.call(m), m.current = null;
      };
    }, [i, s, d]);
  };
}
const dte = {
  registry: null
}, Mt = cte(dte), fte = {
  isFirst: !0
};
function Cr(e, t, n) {
  Mt(e, t, n, fte);
}
const pte = 0.7, hte = 1.3, mte = {
  compact: pte,
  comfortable: hte,
  standard: 1
}, Rg = (e) => e.density, sv = an(Rg, (e) => mte[e]), gte = ["id", "value", "formattedValue", "api", "field", "row", "rowNode", "colDef", "cellMode", "isEditable", "tabIndex", "hasFocus", "isValidating", "debounceMs", "isProcessingProps", "onValueChange"], vte = (e) => {
  const {
    classes: t
  } = e;
  return yt({
    root: ["editInputCell"]
  }, Gn, t);
}, yte = Be(Ch, {
  name: "MuiDataGrid",
  slot: "EditInputCell",
  overridesResolver: (e, t) => t.editInputCell
})(({
  theme: e
}) => J({}, e.typography.body2, {
  padding: "1px 0",
  "& input": {
    padding: "0 16px",
    height: "100%"
  }
})), Q2 = nr((e, t) => {
  const n = Vt(), {
    id: i,
    value: s,
    field: u,
    colDef: d,
    hasFocus: p,
    debounceMs: m = 200,
    isProcessingProps: v,
    onValueChange: y
  } = e, C = Xt(e, gte), S = In(), R = w.useRef(null), [O, E] = w.useState(s), k = vte(n), F = w.useCallback(async (L) => {
    const M = L.target.value;
    y && await y(L, M);
    const D = S.current.getColumn(u);
    let H = M;
    D.valueParser && (H = D.valueParser(M, S.current.getRow(i), D, S)), E(H), S.current.setEditCellValue({
      id: i,
      field: u,
      value: H,
      debounceMs: m,
      unstable_skipValueParser: !0
    }, L);
  }, [S, m, u, i, y]), _ = S.current.unstable_getEditCellMeta(i, u);
  return w.useEffect(() => {
    (_ == null ? void 0 : _.changeReason) !== "debouncedSetEditCellValue" && E(s);
  }, [_, s]), _r(() => {
    p && R.current.focus();
  }, [p]), /* @__PURE__ */ A.jsx(yte, J({
    inputRef: R,
    className: k.root,
    ownerState: n,
    fullWidth: !0,
    type: d.type === "number" ? d.type : "text",
    value: O ?? "",
    onChange: F,
    endAdornment: v ? /* @__PURE__ */ A.jsx(n.slots.loadIcon, {
      fontSize: "small",
      color: "action"
    }) : void 0
  }, C, {
    ref: t
  }));
});
process.env.NODE_ENV !== "production" && (Q2.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * GridApi that let you manipulate the grid.
   */
  api: a.object.isRequired,
  /**
   * The mode of the cell.
   */
  cellMode: a.oneOf(["edit", "view"]).isRequired,
  changeReason: a.oneOf(["debouncedSetEditCellValue", "setEditCellValue"]),
  /**
   * The column of the row that the current cell belongs to.
   */
  colDef: a.object.isRequired,
  debounceMs: a.number,
  /**
   * The column field of the cell that triggered the event.
   */
  field: a.string.isRequired,
  /**
   * The cell value formatted with the column valueFormatter.
   */
  formattedValue: a.any,
  /**
   * If true, the cell is the active element.
   */
  hasFocus: a.bool.isRequired,
  /**
   * The grid row id.
   */
  id: a.oneOfType([a.number, a.string]).isRequired,
  /**
   * If true, the cell is editable.
   */
  isEditable: a.bool,
  isProcessingProps: a.bool,
  isValidating: a.bool,
  /**
   * Callback called when the value is changed by the user.
   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
   * @param {Date | null} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.
   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`
   */
  onValueChange: a.func,
  /**
   * The row model of the row that the current cell belongs to.
   */
  row: a.any.isRequired,
  /**
   * The node of the row that the current cell belongs to.
   */
  rowNode: a.object.isRequired,
  /**
   * the tabIndex value.
   */
  tabIndex: a.oneOf([-1, 0]).isRequired,
  /**
   * The cell value.
   * If the column has `valueGetter`, use `params.row` to directly access the fields.
   */
  value: a.any
});
const bte = (e) => /* @__PURE__ */ A.jsx(Q2, J({}, e)), ll = (e) => e.rows, BC = an(ll, (e) => e.totalRowCount), Cte = an(ll, (e) => e.loading), Ste = an(ll, (e) => e.totalTopLevelRowCount), Js = an(ll, (e) => e.dataRowIdToModelLookup), Y_ = an(ll, (e) => e.dataRowIdToIdLookup), Go = an(ll, (e) => e.tree), wte = an(ll, (e) => e.groupsToFetch), xte = an(ll, (e) => e.groupingName), X_ = an(ll, (e) => e.treeDepths), Sh = dr(ll, (e) => {
  const t = Object.entries(e.treeDepths);
  return t.length === 0 ? 1 : (t.filter(([, n]) => n > 0).map(([n]) => Number(n)).sort((n, i) => i - n)[0] ?? 0) + 1;
}), Bb = an(ll, (e) => e.dataRowIds), Ete = an(ll, (e) => e == null ? void 0 : e.additionalRowGroups), lv = dr(Ete, (e) => {
  var n, i;
  const t = e == null ? void 0 : e.pinnedRows;
  return {
    bottom: ((n = t == null ? void 0 : t.bottom) == null ? void 0 : n.map((s) => ({
      id: s.id,
      model: s.model ?? {}
    }))) ?? [],
    top: ((i = t == null ? void 0 : t.top) == null ? void 0 : i.map((s) => ({
      id: s.id,
      model: s.model ?? {}
    }))) ?? []
  };
}), J2 = an(lv, (e) => {
  var t, n;
  return (((t = e == null ? void 0 : e.top) == null ? void 0 : t.length) || 0) + (((n = e == null ? void 0 : e.bottom) == null ? void 0 : n.length) || 0);
}), Z2 = (e, t) => t && e.length > 1 ? (process.env.NODE_ENV !== "production" && tl(["MUI X: The `sortModel` can only contain a single item when the `disableMultipleColumnsSorting` prop is set to `true`.", "If you are using the community version of the Data Grid, this prop is always `true`."], "error"), [e[0]]) : e, Q_ = (e, t) => (n) => J({}, n, {
  sorting: J({}, n.sorting, {
    sortModel: Z2(e, t)
  })
}), Tte = (e) => e === "desc", Rte = (e, t) => {
  const n = t.current.getColumn(e.field);
  if (!n || e.sort === null)
    return null;
  let i;
  return n.getSortComparator ? i = n.getSortComparator(e.sort) : i = Tte(e.sort) ? (...u) => -1 * n.sortComparator(...u) : n.sortComparator, i ? {
    getSortCellParams: (u) => ({
      id: u,
      field: n.field,
      rowNode: Go(t)[u],
      value: t.current.getCellValue(u, n.field),
      api: t.current
    }),
    comparator: i
  } : null;
}, Ote = (e, t, n) => e.reduce((i, s, u) => {
  if (i !== 0)
    return i;
  const d = t.params[u], p = n.params[u];
  return i = s.comparator(d.value, p.value, d, p), i;
}, 0), kte = (e, t) => {
  const n = e.map((i) => Rte(i, t)).filter((i) => !!i);
  return n.length === 0 ? null : (i) => i.map((s) => ({
    node: s,
    params: n.map((u) => u.getSortCellParams(s.id))
  })).sort((s, u) => Ote(n, s, u)).map((s) => s.node.id);
}, J_ = (e, t) => {
  const n = e.indexOf(t);
  return !t || n === -1 || n + 1 === e.length ? e[0] : e[n + 1];
}, rM = (e, t) => e == null && t != null ? -1 : t == null && e != null ? 1 : e == null && t == null ? 0 : null, Pte = new Intl.Collator(), Mte = (e, t) => {
  const n = rM(e, t);
  return n !== null ? n : typeof e == "string" ? Pte.compare(e.toString(), t.toString()) : e - t;
}, ez = (e, t) => {
  const n = rM(e, t);
  return n !== null ? n : Number(e) - Number(t);
}, tz = (e, t) => {
  const n = rM(e, t);
  return n !== null ? n : e > t ? 1 : e < t ? -1 : 0;
}, Ite = ["item", "applyValue", "type", "apiRef", "focusElementRef", "tabIndex", "disabled", "isFilterActive", "clearButton", "InputProps", "variant"];
function ds(e) {
  var M;
  const {
    item: t,
    applyValue: n,
    type: i,
    apiRef: s,
    focusElementRef: u,
    tabIndex: d,
    disabled: p,
    clearButton: m,
    InputProps: v,
    variant: y = "standard"
  } = e, C = Xt(e, Ite), S = ps(), [R, O] = w.useState(VO(t.value)), [E, k] = w.useState(!1), F = Sr(), _ = Vt(), L = w.useCallback((D) => {
    const H = VO(D.target.value);
    O(H), k(!0), S.start(_.filterDebounceMs, () => {
      const K = J({}, t, {
        value: i === "number" && !Number.isNaN(Number(H)) ? Number(H) : H,
        fromInput: F
      });
      n(K), k(!1);
    });
  }, [S, _.filterDebounceMs, t, i, F, n]);
  return w.useEffect(() => {
    (t.fromInput !== F || t.value == null) && O(VO(t.value));
  }, [F, t]), /* @__PURE__ */ A.jsx(_.slots.baseTextField, J({
    id: F,
    label: s.current.getLocaleText("filterPanelInputLabel"),
    placeholder: s.current.getLocaleText("filterPanelInputPlaceholder"),
    value: R ?? "",
    onChange: L,
    variant: y,
    type: i || "text",
    InputProps: J({}, E || m ? {
      endAdornment: E ? /* @__PURE__ */ A.jsx(_.slots.loadIcon, {
        fontSize: "small",
        color: "action"
      }) : m
    } : {}, {
      disabled: p
    }, v, {
      inputProps: J({
        tabIndex: d
      }, v == null ? void 0 : v.inputProps)
    }),
    InputLabelProps: {
      shrink: !0
    },
    inputRef: u
  }, C, (M = _.slotProps) == null ? void 0 : M.baseTextField));
}
function VO(e) {
  if (!(e == null || e === ""))
    return String(e);
}
process.env.NODE_ENV !== "production" && (ds.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  apiRef: a.shape({
    current: a.object.isRequired
  }).isRequired,
  applyValue: a.func.isRequired,
  clearButton: a.node,
  focusElementRef: a.oneOfType([a.func, a.object]),
  /**
   * It is `true` if the filter either has a value or an operator with no value
   * required is selected (for example `isEmpty`)
   */
  isFilterActive: a.bool,
  item: a.shape({
    field: a.string.isRequired,
    id: a.oneOfType([a.number, a.string]),
    operator: a.string.isRequired,
    value: a.any
  }).isRequired
});
function nz(e) {
  return typeof e == "number" && !Number.isNaN(e);
}
function Dte(e) {
  return typeof e == "function";
}
function oM(e) {
  return typeof e == "object" && e !== null;
}
function Nte() {
  try {
    const e = "__some_random_key_you_are_not_going_to_use__";
    return window.localStorage.setItem(e, e), window.localStorage.removeItem(e), !0;
  } catch {
    return !1;
  }
}
function W0(e) {
  return e.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&");
}
const vs = (e, t, n) => Math.max(t, Math.min(n, e));
function Z_(e, t) {
  return Array.from({
    length: t - e
  }).map((n, i) => e + i);
}
function hf(e, t) {
  if (e === t)
    return !0;
  if (e && t && typeof e == "object" && typeof t == "object") {
    if (e.constructor !== t.constructor)
      return !1;
    if (Array.isArray(e)) {
      const s = e.length;
      if (s !== t.length)
        return !1;
      for (let u = 0; u < s; u += 1)
        if (!hf(e[u], t[u]))
          return !1;
      return !0;
    }
    if (e instanceof Map && t instanceof Map) {
      if (e.size !== t.size)
        return !1;
      const s = Array.from(e.entries());
      for (let u = 0; u < s.length; u += 1)
        if (!t.has(s[u][0]))
          return !1;
      for (let u = 0; u < s.length; u += 1) {
        const d = s[u];
        if (!hf(d[1], t.get(d[0])))
          return !1;
      }
      return !0;
    }
    if (e instanceof Set && t instanceof Set) {
      if (e.size !== t.size)
        return !1;
      const s = Array.from(e.entries());
      for (let u = 0; u < s.length; u += 1)
        if (!t.has(s[u][0]))
          return !1;
      return !0;
    }
    if (ArrayBuffer.isView(e) && ArrayBuffer.isView(t)) {
      const s = e.length;
      if (s !== t.length)
        return !1;
      for (let u = 0; u < s; u += 1)
        if (e[u] !== t[u])
          return !1;
      return !0;
    }
    if (e.constructor === RegExp)
      return e.source === t.source && e.flags === t.flags;
    if (e.valueOf !== Object.prototype.valueOf)
      return e.valueOf() === t.valueOf();
    if (e.toString !== Object.prototype.toString)
      return e.toString() === t.toString();
    const n = Object.keys(e), i = n.length;
    if (i !== Object.keys(t).length)
      return !1;
    for (let s = 0; s < i; s += 1)
      if (!Object.prototype.hasOwnProperty.call(t, n[s]))
        return !1;
    for (let s = 0; s < i; s += 1) {
      const u = n[s];
      if (!hf(e[u], t[u]))
        return !1;
    }
    return !0;
  }
  return e !== e && t !== t;
}
function Lte(e) {
  return () => {
    let t = e += 1831565813;
    return t = Math.imul(t ^ t >>> 15, t | 1), t ^= t + Math.imul(t ^ t >>> 7, t | 61), ((t ^ t >>> 14) >>> 0) / 4294967296;
  };
}
function Fte(e) {
  const t = Lte(e);
  return (n, i) => n + (i - n) * t();
}
function rz(e) {
  return typeof structuredClone == "function" ? structuredClone(e) : JSON.parse(JSON.stringify(e));
}
const Yp = (e, t) => (n) => {
  e && t(n);
}, _te = ["item", "applyValue", "type", "apiRef", "focusElementRef", "color", "error", "helperText", "size", "variant"], Ate = ["key"];
function iM(e) {
  const {
    item: t,
    applyValue: n,
    type: i,
    apiRef: s,
    focusElementRef: u,
    color: d,
    error: p,
    helperText: m,
    size: v,
    variant: y = "standard"
  } = e, C = Xt(e, _te), S = {
    color: d,
    error: p,
    helperText: m,
    size: v,
    variant: y
  }, [R, O] = w.useState(t.value || []), E = Sr(), k = Vt();
  w.useEffect(() => {
    const _ = t.value ?? [];
    O(_.map(String));
  }, [t.value]);
  const F = w.useCallback((_, L) => {
    O(L.map(String)), n(J({}, t, {
      value: [...L.map((M) => i === "number" ? Number(M) : M)]
    }));
  }, [n, t, i]);
  return /* @__PURE__ */ A.jsx(jP, J({
    multiple: !0,
    freeSolo: !0,
    options: [],
    filterOptions: (_, L) => {
      const {
        inputValue: M
      } = L;
      return M == null || M === "" ? [] : [M];
    },
    id: E,
    value: R,
    onChange: F,
    renderTags: (_, L) => _.map((M, D) => {
      const H = L({
        index: D
      }), {
        key: K
      } = H, Q = Xt(H, Ate);
      return /* @__PURE__ */ A.jsx(k.slots.baseChip, J({
        variant: "outlined",
        size: "small",
        label: M
      }, Q), K);
    }),
    renderInput: (_) => {
      var L;
      return /* @__PURE__ */ A.jsx(k.slots.baseTextField, J({}, _, {
        label: s.current.getLocaleText("filterPanelInputLabel"),
        placeholder: s.current.getLocaleText("filterPanelInputPlaceholder"),
        InputLabelProps: J({}, _.InputLabelProps, {
          shrink: !0
        }),
        inputRef: u,
        type: i || "text"
      }, S, (L = k.slotProps) == null ? void 0 : L.baseTextField));
    }
  }, C));
}
process.env.NODE_ENV !== "production" && (iM.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  apiRef: a.shape({
    current: a.object.isRequired
  }).isRequired,
  applyValue: a.func.isRequired,
  focusElementRef: a.oneOfType([a.func, a.object]),
  item: a.shape({
    field: a.string.isRequired,
    id: a.oneOfType([a.number, a.string]),
    operator: a.string.isRequired,
    value: a.any
  }).isRequired,
  type: a.oneOf(["date", "datetime-local", "number", "text"])
});
var Yu = /* @__PURE__ */ function(e) {
  return e.Cell = "cell", e.Row = "row", e;
}(Yu || {}), yr = /* @__PURE__ */ function(e) {
  return e.Edit = "edit", e.View = "view", e;
}(yr || {}), Yr = /* @__PURE__ */ function(e) {
  return e.Edit = "edit", e.View = "view", e;
}(Yr || {}), xa = /* @__PURE__ */ function(e) {
  return e.And = "and", e.Or = "or", e;
}(xa || {}), Uc = /* @__PURE__ */ function(e) {
  return e.enterKeyDown = "enterKeyDown", e.cellDoubleClick = "cellDoubleClick", e.printableKeyDown = "printableKeyDown", e.deleteKeyDown = "deleteKeyDown", e.pasteKeyDown = "pasteKeyDown", e;
}(Uc || {}), Al = /* @__PURE__ */ function(e) {
  return e.cellFocusOut = "cellFocusOut", e.escapeKeyDown = "escapeKeyDown", e.enterKeyDown = "enterKeyDown", e.tabKeyDown = "tabKeyDown", e.shiftTabKeyDown = "shiftTabKeyDown", e;
}(Al || {}), tf = /* @__PURE__ */ function(e) {
  return e.enterKeyDown = "enterKeyDown", e.cellDoubleClick = "cellDoubleClick", e.printableKeyDown = "printableKeyDown", e.deleteKeyDown = "deleteKeyDown", e;
}(tf || {}), Du = /* @__PURE__ */ function(e) {
  return e.rowFocusOut = "rowFocusOut", e.escapeKeyDown = "escapeKeyDown", e.enterKeyDown = "enterKeyDown", e.tabKeyDown = "tabKeyDown", e.shiftTabKeyDown = "shiftTabKeyDown", e;
}(Du || {});
function oz(e) {
  return e.field !== void 0;
}
const iz = {
  filteredRowsLookup: {},
  filteredChildrenCountLookup: {},
  filteredDescendantCountLookup: {}
}, vC = () => ({
  items: [],
  logicOperator: xa.And,
  quickFilterValues: [],
  quickFilterLogicOperator: xa.And
});
function az(e) {
  return {
    current: e.current.getPublicApi()
  };
}
let nf = /* @__PURE__ */ function(e) {
  return e.LEFT = "left", e.RIGHT = "right", e;
}({});
const q0 = {
  left: [],
  right: []
}, sz = (e) => e.isRtl, Uu = (e) => e.columns, Kc = an(Uu, (e) => e.orderedFields), ed = an(Uu, (e) => e.lookup), nl = dr(Kc, ed, (e, t) => e.map((n) => t[n])), Zs = an(Uu, (e) => e.columnVisibilityModel), ho = dr(nl, Zs, (e, t) => e.filter((n) => t[n.field] !== !1)), uv = dr(ho, (e) => e.map((t) => t.field)), lz = (e) => e.pinnedColumns;
dr(lz, Kc, sz, (e, t, n) => uz(e, t, n));
const cv = dr(Uu, lz, uv, sz, (e, t, n, i) => {
  const s = uz(t, n, i);
  return {
    left: s.left.map((d) => e.lookup[d]),
    right: s.right.map((d) => e.lookup[d])
  };
});
function uz(e, t, n) {
  var p, m;
  if (!Array.isArray(e.left) && !Array.isArray(e.right) || ((p = e.left) == null ? void 0 : p.length) === 0 && ((m = e.right) == null ? void 0 : m.length) === 0)
    return q0;
  const i = (v, y) => Array.isArray(v) ? v.filter((C) => y.includes(C)) : [], s = i(e.left, t), u = t.filter(
    // Filter out from the remaining columns those columns already pinned to the left
    (v) => !s.includes(v)
  ), d = i(e.right, u);
  return n ? {
    left: d,
    right: s
  } : {
    left: s,
    right: d
  };
}
const Of = dr(ho, (e) => {
  const t = [];
  let n = 0;
  for (let i = 0; i < e.length; i += 1)
    t.push(n), n += e[i].computedWidth;
  return t;
}), cz = dr(nl, (e) => e.filter((t) => t.filterable)), $te = dr(nl, (e) => e.reduce((t, n) => (n.filterable && (t[n.field] = n), t), {})), jte = dr(nl, (e) => e.some((t) => t.colSpan !== void 0));
let Db;
function zte() {
  if (Db !== void 0)
    return Db;
  try {
    Db = new Function("return true")();
  } catch {
    Db = !1;
  }
  return Db;
}
const Bk = (e, t) => {
  const n = J({}, e);
  if (n.id == null && (n.id = Math.round(Math.random() * 1e5)), n.operator == null) {
    const i = ed(t)[n.field];
    n.operator = i && i.filterOperators[0].value;
  }
  return n;
}, aM = (e, t, n) => {
  const i = e.items.length > 1;
  let s;
  i && t ? (process.env.NODE_ENV !== "production" && tl(["MUI X: The `filterModel` can only contain a single item when the `disableMultipleColumnsFiltering` prop is set to `true`.", "If you are using the community version of the Data Grid, this prop is always `true`."], "error"), s = [e.items[0]]) : s = e.items;
  const u = i && s.some((p) => p.id == null), d = s.some((p) => p.operator == null);
  return process.env.NODE_ENV !== "production" && u && tl("MUI X: The `id` field is required on `filterModel.items` when you use multiple filters.", "error"), process.env.NODE_ENV !== "production" && d && tl("MUI X: The `operator` field is required on `filterModel.items`, one or more of your filtering item has no `operator` provided.", "error"), d || u ? J({}, e, {
    items: s.map((p) => Bk(p, n))
  }) : e.items !== s ? J({}, e, {
    items: s
  }) : e;
}, eA = (e, t, n) => (i) => J({}, i, {
  filterModel: aM(e, t, n)
}), yC = (e) => typeof e == "string" ? e.normalize("NFD").replace(/[\u0300-\u036f]/g, "") : e, dz = (e, t) => {
  var y;
  if (!e.field || !e.operator)
    return null;
  const n = t.current.getColumn(e.field);
  if (!n)
    return null;
  let i;
  if (n.valueParser) {
    const C = n.valueParser;
    i = Array.isArray(e.value) ? (y = e.value) == null ? void 0 : y.map((S) => C(S, void 0, n, t)) : C(e.value, void 0, n, t);
  } else
    i = e.value;
  const {
    ignoreDiacritics: s
  } = t.current.rootProps;
  s && (i = yC(i));
  const u = J({}, e, {
    value: i
  }), d = n.filterOperators;
  if (!(d != null && d.length))
    throw new Error(`MUI X: No filter operators found for column '${n.field}'.`);
  const p = d.find((C) => C.value === u.operator);
  if (!p)
    throw new Error(`MUI X: No filter operator found for column '${n.field}' and operator value '${u.operator}'.`);
  const m = az(t), v = p.getApplyFilterFn(u, n);
  return typeof v != "function" ? null : {
    item: u,
    fn: (C) => {
      let S = t.current.getRowValue(C, n);
      return s && (S = yC(S)), v(S, C, n, m);
    }
  };
};
let tA = 1;
const Hte = (e, t, n) => {
  const {
    items: i
  } = e, s = i.map((p) => dz(p, t)).filter((p) => !!p);
  if (s.length === 0)
    return null;
  if (n || !zte())
    return (p, m) => {
      const v = {};
      for (let y = 0; y < s.length; y += 1) {
        const C = s[y];
        (!m || m(C.item.field)) && (v[C.item.id] = C.fn(p));
      }
      return v;
    };
  const u = new Function("appliers", "row", "shouldApplyFilter", `"use strict";
${s.map((p, m) => `const shouldApply${m} = !shouldApplyFilter || shouldApplyFilter(${JSON.stringify(p.item.field)});`).join(`
`)}

const result$$ = {
${s.map((p, m) => `  ${JSON.stringify(String(p.item.id))}: !shouldApply${m} ? false : appliers[${m}].fn(row),`).join(`
`)}
};

return result$$;`.replaceAll("$$", String(tA)));
  return tA += 1, (p, m) => u(s, p, m);
}, fz = (e) => e.quickFilterExcludeHiddenColumns ?? !0, Vte = (e, t) => {
  var p;
  const n = ((p = e.quickFilterValues) == null ? void 0 : p.filter(Boolean)) ?? [];
  if (n.length === 0)
    return null;
  const i = fz(e) ? uv(t) : Kc(t), s = [], {
    ignoreDiacritics: u
  } = t.current.rootProps, d = az(t);
  return i.forEach((m) => {
    const v = t.current.getColumn(m), y = v == null ? void 0 : v.getApplyQuickFilterFn;
    y && s.push({
      column: v,
      appliers: n.map((C) => {
        const S = u ? yC(C) : C;
        return {
          fn: y(S, v, d)
        };
      })
    });
  }), function(v, y) {
    const C = {};
    e: for (let S = 0; S < n.length; S += 1) {
      const R = n[S];
      for (let O = 0; O < s.length; O += 1) {
        const {
          column: E,
          appliers: k
        } = s[O], {
          field: F
        } = E;
        if (y && !y(F))
          continue;
        const _ = k[S];
        let L = t.current.getRowValue(v, E);
        if (_.fn === null)
          continue;
        if (u && (L = yC(L)), _.fn(L, v, E, d)) {
          C[R] = !0;
          continue e;
        }
      }
      C[R] = !1;
    }
    return C;
  };
}, Bte = (e, t, n) => {
  const i = Hte(e, t, n), s = Vte(e, t);
  return function(d, p, m) {
    m.passingFilterItems = (i == null ? void 0 : i(d, p)) ?? null, m.passingQuickFilterValues = (s == null ? void 0 : s(d, p)) ?? null;
  };
}, nA = (e) => e != null, Ute = (e, t, n) => (e.cleanedFilterItems || (e.cleanedFilterItems = n.filter((i) => dz(i, t) !== null)), e.cleanedFilterItems), Gte = (e, t, n, i, s) => {
  const u = Ute(s, i, n.items), d = e.filter(nA), p = t.filter(nA);
  if (d.length > 0) {
    const m = (y) => d.some((C) => C[y.id]);
    if ((n.logicOperator ?? vC().logicOperator) === xa.And) {
      if (!u.every(m))
        return !1;
    } else if (!u.some(m))
      return !1;
  }
  if (p.length > 0 && n.quickFilterValues != null) {
    const m = (y) => p.some((C) => C[y]);
    if ((n.quickFilterLogicOperator ?? vC().quickFilterLogicOperator) === xa.And) {
      if (!n.quickFilterValues.every(m))
        return !1;
    } else if (!n.quickFilterValues.some(m))
      return !1;
  }
  return !0;
}, Wte = (e) => {
  if (!e)
    return null;
  const t = new RegExp(W0(e), "i");
  return (n, i, s, u) => {
    let d = u.current.getRowFormattedValue(i, s);
    return u.current.ignoreDiacritics && (d = yC(d)), d != null ? t.test(d.toString()) : !1;
  };
}, rA = (e, t) => (n) => {
  if (!n.value)
    return null;
  const i = e ? n.value : n.value.trim(), s = new RegExp(W0(i), "i");
  return (u) => {
    if (u == null)
      return t;
    const d = s.test(String(u));
    return t ? !d : d;
  };
}, oA = (e, t) => (n) => {
  if (!n.value)
    return null;
  const i = e ? n.value : n.value.trim(), s = new Intl.Collator(void 0, {
    sensitivity: "base",
    usage: "search"
  });
  return (u) => {
    if (u == null)
      return t;
    const d = s.compare(i, u.toString()) === 0;
    return t ? !d : d;
  };
}, iA = (e) => () => (t) => {
  const n = t === "" || t == null;
  return e ? !n : n;
}, qte = (e = !1) => [{
  value: "contains",
  getApplyFilterFn: rA(e, !1),
  InputComponent: ds
}, {
  value: "doesNotContain",
  getApplyFilterFn: rA(e, !0),
  InputComponent: ds
}, {
  value: "equals",
  getApplyFilterFn: oA(e, !1),
  InputComponent: ds
}, {
  value: "doesNotEqual",
  getApplyFilterFn: oA(e, !0),
  InputComponent: ds
}, {
  value: "startsWith",
  getApplyFilterFn: (t) => {
    if (!t.value)
      return null;
    const n = e ? t.value : t.value.trim(), i = new RegExp(`^${W0(n)}.*$`, "i");
    return (s) => s != null ? i.test(s.toString()) : !1;
  },
  InputComponent: ds
}, {
  value: "endsWith",
  getApplyFilterFn: (t) => {
    if (!t.value)
      return null;
    const n = e ? t.value : t.value.trim(), i = new RegExp(`.*${W0(n)}$`, "i");
    return (s) => s != null ? i.test(s.toString()) : !1;
  },
  InputComponent: ds
}, {
  value: "isEmpty",
  getApplyFilterFn: iA(!1),
  requiresFilterValue: !1
}, {
  value: "isNotEmpty",
  getApplyFilterFn: iA(!0),
  requiresFilterValue: !1
}, {
  value: "isAnyOf",
  getApplyFilterFn: (t) => {
    if (!Array.isArray(t.value) || t.value.length === 0)
      return null;
    const n = e ? t.value : t.value.map((s) => s.trim()), i = new Intl.Collator(void 0, {
      sensitivity: "base",
      usage: "search"
    });
    return (s) => s != null ? n.some((u) => i.compare(u, s.toString() || "") === 0) : !1;
  },
  InputComponent: iM
}], Bl = {
  width: 100,
  minWidth: 50,
  maxWidth: 1 / 0,
  hideable: !0,
  sortable: !0,
  resizable: !0,
  filterable: !0,
  groupable: !0,
  pinnable: !0,
  // @ts-ignore
  aggregable: !0,
  editable: !1,
  sortComparator: Mte,
  type: "string",
  align: "left",
  filterOperators: qte(),
  renderEditCell: bte,
  getApplyQuickFilterFn: Wte
}, Kte = ["open", "target", "onClose", "children", "position", "className", "onExited"], Yte = (e) => {
  const {
    classes: t
  } = e;
  return yt({
    root: ["menu"]
  }, Gn, t);
}, Xte = Be(Rf, {
  name: "MuiDataGrid",
  slot: "Menu",
  overridesResolver: (e, t) => t.menu
})(({
  theme: e
}) => ({
  zIndex: e.zIndex.modal,
  [`& .${ae.menuList}`]: {
    outline: 0
  }
})), Qte = {
  "bottom-start": "top left",
  "bottom-end": "top right"
};
function AE(e) {
  var E;
  const {
    open: t,
    target: n,
    onClose: i,
    children: s,
    position: u,
    className: d,
    onExited: p
  } = e, m = Xt(e, Kte), v = In(), y = Vt(), C = Yte(y), S = w.useRef(null);
  _r(() => {
    var k, F;
    t ? S.current = document.activeElement instanceof HTMLElement ? document.activeElement : null : ((F = (k = S.current) == null ? void 0 : k.focus) == null || F.call(k), S.current = null);
  }, [t]), w.useEffect(() => {
    const k = t ? "menuOpen" : "menuClose";
    v.current.publishEvent(k, {
      target: n
    });
  }, [v, t, n]);
  const R = (k) => (F) => {
    k && k(), p && p(F);
  }, O = (k) => {
    k.target && (n === k.target || n != null && n.contains(k.target)) || i(k);
  };
  return /* @__PURE__ */ A.jsx(Xte, J({
    as: y.slots.basePopper,
    className: nt(C.root, d),
    ownerState: y,
    open: t,
    anchorEl: n,
    transition: !0,
    placement: u
  }, m, (E = y.slotProps) == null ? void 0 : E.basePopper, {
    children: ({
      TransitionProps: k,
      placement: F
    }) => /* @__PURE__ */ A.jsx(uC, {
      onClickAway: O,
      mouseEvent: "onMouseDown",
      children: /* @__PURE__ */ A.jsx(Yg, J({}, k, {
        style: {
          transformOrigin: Qte[F]
        },
        onExited: R(k == null ? void 0 : k.onExited),
        children: /* @__PURE__ */ A.jsx(bs, {
          children: s
        })
      }))
    })
  }));
}
process.env.NODE_ENV !== "production" && (AE.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  children: a.node,
  onClose: a.func.isRequired,
  onExited: a.func,
  /**
   * If `true`, the component is shown.
   */
  open: a.bool.isRequired,
  position: a.oneOf(["bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  target: Wl
});
const Jte = ["api", "colDef", "id", "hasFocus", "isEditable", "field", "value", "formattedValue", "row", "rowNode", "cellMode", "tabIndex", "position", "focusElementRef"], Zte = (e) => typeof e.getActions == "function";
function pz(e) {
  var q;
  const {
    colDef: t,
    id: n,
    hasFocus: i,
    tabIndex: s,
    position: u = "bottom-end",
    focusElementRef: d
  } = e, p = Xt(e, Jte), [m, v] = w.useState(-1), [y, C] = w.useState(!1), S = In(), R = w.useRef(null), O = w.useRef(null), E = w.useRef(!1), k = w.useRef({}), F = zi(), _ = Sr(), L = Sr(), M = Vt();
  if (!Zte(t))
    throw new Error("MUI X: Missing the `getActions` property in the `GridColDef`.");
  const D = t.getActions(S.current.getRowParams(n)), H = D.filter((Y) => !Y.props.showInMenu), K = D.filter((Y) => Y.props.showInMenu), Q = H.length + (K.length ? 1 : 0);
  w.useLayoutEffect(() => {
    i || Object.entries(k.current).forEach(([Y, ne]) => {
      ne == null || ne.stop({}, () => {
        delete k.current[Y];
      });
    });
  }, [i]), w.useEffect(() => {
    if (m < 0 || !R.current || m >= R.current.children.length)
      return;
    R.current.children[m].focus({
      preventScroll: !0
    });
  }, [m]), w.useEffect(() => {
    i || (v(-1), E.current = !1);
  }, [i]), w.useImperativeHandle(d, () => ({
    focus() {
      if (!E.current) {
        const Y = D.findIndex((ne) => !ne.props.disabled);
        v(Y);
      }
    }
  }), [D]), w.useEffect(() => {
    m >= Q && v(Q - 1);
  }, [m, Q]);
  const z = () => {
    C(!0), v(Q - 1), E.current = !0;
  }, I = () => {
    C(!1);
  }, G = (Y) => {
    Y.stopPropagation(), Y.preventDefault(), y ? I() : z();
  }, W = (Y) => (ne) => {
    k.current[Y] = ne;
  }, B = (Y, ne) => (re) => {
    v(Y), E.current = !0, ne && ne(re);
  }, ee = (Y) => {
    if (Q <= 1)
      return;
    const ne = (X, j) => {
      var ce;
      if (X < 0 || X > D.length)
        return X;
      const fe = (j === "left" ? -1 : 1) * (F ? -1 : 1);
      return (ce = D[X + fe]) != null && ce.props.disabled ? ne(X + fe, j) : X + fe;
    };
    let re = m;
    Y.key === "ArrowRight" ? re = ne(m, "right") : Y.key === "ArrowLeft" && (re = ne(m, "left")), !(re < 0 || re >= Q) && re !== m && (Y.preventDefault(), Y.stopPropagation(), v(re));
  }, U = (Y) => {
    Y.key === "Tab" && Y.preventDefault(), ["Tab", "Escape"].includes(Y.key) && I();
  };
  return /* @__PURE__ */ A.jsxs("div", J({
    role: "menu",
    ref: R,
    tabIndex: -1,
    className: ae.actionsCell,
    onKeyDown: ee
  }, p, {
    children: [H.map((Y, ne) => /* @__PURE__ */ w.cloneElement(Y, {
      key: ne,
      touchRippleRef: W(ne),
      onClick: B(ne, Y.props.onClick),
      tabIndex: m === ne ? s : -1
    })), K.length > 0 && L && /* @__PURE__ */ A.jsx(M.slots.baseIconButton, J({
      ref: O,
      id: L,
      "aria-label": S.current.getLocaleText("actionsCellMore"),
      "aria-haspopup": "menu",
      "aria-expanded": y,
      "aria-controls": y ? _ : void 0,
      role: "menuitem",
      size: "small",
      onClick: G,
      touchRippleRef: W(L),
      tabIndex: m === H.length ? s : -1
    }, (q = M.slotProps) == null ? void 0 : q.baseIconButton, {
      children: /* @__PURE__ */ A.jsx(M.slots.moreActionsIcon, {
        fontSize: "small"
      })
    })), K.length > 0 && /* @__PURE__ */ A.jsx(AE, {
      open: y,
      target: O.current,
      position: u,
      onClose: I,
      children: /* @__PURE__ */ A.jsx(_C, {
        id: _,
        className: ae.menuList,
        onKeyDown: U,
        "aria-labelledby": L,
        variant: "menu",
        autoFocusItem: !0,
        children: K.map((Y, ne) => /* @__PURE__ */ w.cloneElement(Y, {
          key: ne,
          closeMenu: I
        }))
      })
    })]
  }));
}
process.env.NODE_ENV !== "production" && (pz.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  api: a.object,
  /**
   * The mode of the cell.
   */
  cellMode: a.oneOf(["edit", "view"]).isRequired,
  /**
   * The column of the row that the current cell belongs to.
   */
  colDef: a.object.isRequired,
  /**
   * The column field of the cell that triggered the event.
   */
  field: a.string.isRequired,
  /**
   * A ref allowing to set imperative focus.
   * It can be passed to the element that should receive focus.
   * @ignore - do not document.
   */
  focusElementRef: a.oneOfType([a.func, a.shape({
    current: a.shape({
      focus: a.func.isRequired
    })
  })]),
  /**
   * The cell value formatted with the column valueFormatter.
   */
  formattedValue: a.any,
  /**
   * If true, the cell is the active element.
   */
  hasFocus: a.bool.isRequired,
  /**
   * The grid row id.
   */
  id: a.oneOfType([a.number, a.string]).isRequired,
  /**
   * If true, the cell is editable.
   */
  isEditable: a.bool,
  position: a.oneOf(["bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  /**
   * The row model of the row that the current cell belongs to.
   */
  row: a.any.isRequired,
  /**
   * The node of the row that the current cell belongs to.
   */
  rowNode: a.object.isRequired,
  /**
   * the tabIndex value.
   */
  tabIndex: a.oneOf([-1, 0]).isRequired,
  /**
   * The cell value.
   * If the column has `valueGetter`, use `params.row` to directly access the fields.
   */
  value: a.any
});
const ene = (e) => /* @__PURE__ */ A.jsx(pz, J({}, e)), $E = "actions", tne = J({}, Bl, {
  sortable: !1,
  filterable: !1,
  // @ts-ignore
  aggregable: !1,
  width: 100,
  display: "flex",
  align: "center",
  headerAlign: "center",
  headerName: "",
  disableColumnMenu: !0,
  disableExport: !0,
  renderCell: ene,
  getApplyQuickFilterFn: void 0
}), ji = "auto-generated-group-node-root", Jg = Symbol("mui.id_autogenerated"), nne = () => ({
  type: "group",
  id: ji,
  depth: -1,
  groupingField: null,
  groupingKey: null,
  isAutoGenerated: !0,
  children: [],
  childrenFromPath: {},
  childrenExpanded: !0,
  parent: null
});
function rne(e, t, n = "A row was provided without id in the rows prop:") {
  if (e == null)
    throw new Error(["MUI X: The Data Grid component requires all rows to have a unique `id` property.", "Alternatively, you can use the `getRowId` prop to specify a custom id for each row.", n, JSON.stringify(t)].join(`
`));
}
const jE = (e, t, n) => {
  const i = t ? t(e) : e.id;
  return rne(i, e, n), i;
}, y0 = ({
  rows: e,
  getRowId: t,
  loading: n,
  rowCount: i
}) => {
  const s = {
    type: "full",
    rows: []
  }, u = {}, d = {};
  for (let p = 0; p < e.length; p += 1) {
    const m = e[p], v = jE(m, t);
    u[v] = m, d[v] = v, s.rows.push(v);
  }
  return {
    rowsBeforePartialUpdates: e,
    loadingPropBeforePartialUpdates: n,
    rowCountPropBeforePartialUpdates: i,
    updates: s,
    dataRowIdToIdLookup: d,
    dataRowIdToModelLookup: u
  };
}, hz = ({
  tree: e,
  rowCountProp: t = 0
}) => {
  const n = e[ji];
  return Math.max(t, n.children.length + (n.footerId == null ? 0 : 1));
}, mz = ({
  apiRef: e,
  rowCountProp: t = 0,
  loadingProp: n,
  previousTree: i,
  previousTreeDepths: s,
  previousGroupsToFetch: u
}) => {
  const d = e.current.caches.rows, {
    tree: p,
    treeDepths: m,
    dataRowIds: v,
    groupingName: y,
    groupsToFetch: C = []
  } = e.current.applyStrategyProcessor("rowTreeCreation", {
    previousTree: i,
    previousTreeDepths: s,
    updates: d.updates,
    dataRowIdToIdLookup: d.dataRowIdToIdLookup,
    dataRowIdToModelLookup: d.dataRowIdToModelLookup,
    previousGroupsToFetch: u
  }), S = e.current.unstable_applyPipeProcessors("hydrateRows", {
    tree: p,
    treeDepths: m,
    dataRowIdToIdLookup: d.dataRowIdToIdLookup,
    dataRowIds: v,
    dataRowIdToModelLookup: d.dataRowIdToModelLookup
  });
  return e.current.caches.rows.updates = {
    type: "partial",
    actions: {
      insert: [],
      modify: [],
      remove: []
    },
    idToActionLookup: {}
  }, J({}, S, {
    totalRowCount: Math.max(t, S.dataRowIds.length),
    totalTopLevelRowCount: hz({
      tree: S.tree,
      rowCountProp: t
    }),
    groupingName: y,
    loading: n,
    groupsToFetch: C
  });
}, Zg = (e) => e.type === "skeletonRow" || e.type === "footer" || e.type === "group" && e.isAutoGenerated || e.type === "pinnedRow" && e.isAutoGenerated, sM = (e, t, n) => {
  const i = e[t];
  if (i.type !== "group")
    return [];
  const s = [];
  for (let u = 0; u < i.children.length; u += 1) {
    const d = i.children[u];
    (!n || !Zg(e[d])) && s.push(d);
    const p = sM(e, d, n);
    for (let m = 0; m < p.length; m += 1)
      s.push(p[m]);
  }
  return !n && i.footerId != null && s.push(i.footerId), s;
}, aA = ({
  previousCache: e,
  getRowId: t,
  updates: n,
  groupKeys: i
}) => {
  if (e.updates.type === "full")
    throw new Error("MUI X: Unable to prepare a partial update if a full update is not applied yet.");
  const s = /* @__PURE__ */ new Map();
  n.forEach((y) => {
    const C = jE(y, t, "A row was provided without id when calling updateRows():");
    s.has(C) ? s.set(C, J({}, s.get(C), y)) : s.set(C, y);
  });
  const u = {
    type: "partial",
    actions: {
      insert: [...e.updates.actions.insert ?? []],
      modify: [...e.updates.actions.modify ?? []],
      remove: [...e.updates.actions.remove ?? []]
    },
    idToActionLookup: J({}, e.updates.idToActionLookup),
    groupKeys: i
  }, d = J({}, e.dataRowIdToModelLookup), p = J({}, e.dataRowIdToIdLookup), m = {
    insert: {},
    modify: {},
    remove: {}
  };
  s.forEach((y, C) => {
    const S = u.idToActionLookup[C];
    if (y._action === "delete") {
      if (S === "remove" || !d[C])
        return;
      S != null && (m[S][C] = !0), u.actions.remove.push(C), delete d[C], delete p[C];
      return;
    }
    const R = d[C];
    if (R) {
      S === "remove" ? (m.remove[C] = !0, u.actions.modify.push(C)) : S == null && u.actions.modify.push(C), d[C] = J({}, R, y);
      return;
    }
    S === "remove" ? (m.remove[C] = !0, u.actions.insert.push(C)) : S == null && u.actions.insert.push(C), d[C] = y, p[C] = C;
  });
  const v = Object.keys(m);
  for (let y = 0; y < v.length; y += 1) {
    const C = v[y], S = m[C];
    Object.keys(S).length > 0 && (u.actions[C] = u.actions[C].filter((R) => !S[R]));
  }
  return {
    dataRowIdToModelLookup: d,
    dataRowIdToIdLookup: p,
    updates: u,
    rowsBeforePartialUpdates: e.rowsBeforePartialUpdates,
    loadingPropBeforePartialUpdates: e.loadingPropBeforePartialUpdates,
    rowCountPropBeforePartialUpdates: e.rowCountPropBeforePartialUpdates
  };
}, gz = "var(--DataGrid-overlayHeight, calc(var(--height) * 2))";
function sA(e, t, n) {
  const i = [];
  return t.forEach((s) => {
    const u = jE(s, n, "A row was provided without id when calling updateRows():"), d = e.current.getRowNode(u);
    if ((d == null ? void 0 : d.type) === "pinnedRow") {
      const p = e.current.caches.pinnedRows, m = p.idLookup[u];
      m && (p.idLookup[u] = J({}, m, s));
    } else
      i.push(s);
  }), i;
}
let lA = !1;
const vz = (e, t, n) => typeof e == "number" && e > 0 ? e : (process.env.NODE_ENV !== "production" && !lA && typeof e < "u" && e !== null && (console.warn(n), lA = !0), t), one = ["MUI X: The `rowHeight` prop should be a number greater than 0.", "The default value will be used instead."].join(`
`), ine = ["MUI X: The `getRowHeight` prop should return a number greater than 0 or 'auto'.", "The default value will be used instead."].join(`
`), ane = "__tree_data_group__", yz = "__row_group_by_columns_group__", zE = "__detail_panel_toggle__";
let jn = /* @__PURE__ */ function(e) {
  return e[e.NONE = 0] = "NONE", e[e.LEFT = 1] = "LEFT", e[e.RIGHT = 2] = "RIGHT", e[e.VIRTUAL = 3] = "VIRTUAL", e;
}({});
const sne = ["id", "value", "formattedValue", "api", "field", "row", "rowNode", "colDef", "cellMode", "isEditable", "hasFocus", "tabIndex", "hideDescendantCount"], lne = (e) => {
  const {
    classes: t
  } = e;
  return yt({
    root: ["booleanCell"]
  }, Gn, t);
};
function bz(e) {
  const {
    value: t,
    rowNode: n
  } = e, i = Xt(e, sne), s = In(), u = Vt(), d = {
    classes: u.classes
  }, p = lne(d), v = (
    // @ts-expect-error - Access tree data prop
    tt(s, Sh) > 0 && n.type === "group" && u.treeData === !1
  ), y = w.useMemo(() => t ? u.slots.booleanCellTrueIcon : u.slots.booleanCellFalseIcon, [u.slots.booleanCellFalseIcon, u.slots.booleanCellTrueIcon, t]);
  return v && t === void 0 ? null : /* @__PURE__ */ A.jsx(y, J({
    fontSize: "small",
    className: p.root,
    titleAccess: s.current.getLocaleText(t ? "booleanCellTrueLabel" : "booleanCellFalseLabel"),
    "data-value": !!t
  }, i));
}
process.env.NODE_ENV !== "production" && (bz.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * GridApi that let you manipulate the grid.
   */
  api: a.object.isRequired,
  /**
   * The mode of the cell.
   */
  cellMode: a.oneOf(["edit", "view"]).isRequired,
  /**
   * The column of the row that the current cell belongs to.
   */
  colDef: a.object.isRequired,
  /**
   * The column field of the cell that triggered the event.
   */
  field: a.string.isRequired,
  /**
   * A ref allowing to set imperative focus.
   * It can be passed to the element that should receive focus.
   * @ignore - do not document.
   */
  focusElementRef: a.oneOfType([a.func, a.shape({
    current: a.shape({
      focus: a.func.isRequired
    })
  })]),
  /**
   * The cell value formatted with the column valueFormatter.
   */
  formattedValue: a.any,
  /**
   * If true, the cell is the active element.
   */
  hasFocus: a.bool.isRequired,
  hideDescendantCount: a.bool,
  /**
   * The grid row id.
   */
  id: a.oneOfType([a.number, a.string]).isRequired,
  /**
   * If true, the cell is editable.
   */
  isEditable: a.bool,
  /**
   * The row model of the row that the current cell belongs to.
   */
  row: a.any.isRequired,
  /**
   * The node of the row that the current cell belongs to.
   */
  rowNode: a.object.isRequired,
  /**
   * the tabIndex value.
   */
  tabIndex: a.oneOf([-1, 0]).isRequired,
  /**
   * The cell value.
   * If the column has `valueGetter`, use `params.row` to directly access the fields.
   */
  value: a.any
});
const une = /* @__PURE__ */ w.memo(bz), cne = (e) => e.field !== yz && Zg(e.rowNode) ? "" : /* @__PURE__ */ A.jsx(une, J({}, e)), dne = ["id", "value", "formattedValue", "api", "field", "row", "rowNode", "colDef", "cellMode", "isEditable", "tabIndex", "className", "hasFocus", "isValidating", "isProcessingProps", "error", "onValueChange"], fne = (e) => {
  const {
    classes: t
  } = e;
  return yt({
    root: ["editBooleanCell"]
  }, Gn, t);
};
function Cz(e) {
  var F;
  const {
    id: t,
    value: n,
    field: i,
    className: s,
    hasFocus: u,
    onValueChange: d
  } = e, p = Xt(e, dne), m = In(), v = w.useRef(null), y = Sr(), [C, S] = w.useState(n), R = Vt(), O = {
    classes: R.classes
  }, E = fne(O), k = w.useCallback(async (_) => {
    const L = _.target.checked;
    d && await d(_, L), S(L), await m.current.setEditCellValue({
      id: t,
      field: i,
      value: L
    }, _);
  }, [m, i, t, d]);
  return w.useEffect(() => {
    S(n);
  }, [n]), _r(() => {
    u && v.current.focus();
  }, [u]), /* @__PURE__ */ A.jsx("label", J({
    htmlFor: y,
    className: nt(E.root, s)
  }, p, {
    children: /* @__PURE__ */ A.jsx(R.slots.baseCheckbox, J({
      id: y,
      inputRef: v,
      checked: !!C,
      onChange: k,
      size: "small"
    }, (F = R.slotProps) == null ? void 0 : F.baseCheckbox))
  }));
}
process.env.NODE_ENV !== "production" && (Cz.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * GridApi that let you manipulate the grid.
   */
  api: a.object.isRequired,
  /**
   * The mode of the cell.
   */
  cellMode: a.oneOf(["edit", "view"]).isRequired,
  changeReason: a.oneOf(["debouncedSetEditCellValue", "setEditCellValue"]),
  /**
   * The column of the row that the current cell belongs to.
   */
  colDef: a.object.isRequired,
  /**
   * The column field of the cell that triggered the event.
   */
  field: a.string.isRequired,
  /**
   * The cell value formatted with the column valueFormatter.
   */
  formattedValue: a.any,
  /**
   * If true, the cell is the active element.
   */
  hasFocus: a.bool.isRequired,
  /**
   * The grid row id.
   */
  id: a.oneOfType([a.number, a.string]).isRequired,
  /**
   * If true, the cell is editable.
   */
  isEditable: a.bool,
  isProcessingProps: a.bool,
  isValidating: a.bool,
  /**
   * Callback called when the value is changed by the user.
   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
   * @param {boolean} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.
   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`
   */
  onValueChange: a.func,
  /**
   * The row model of the row that the current cell belongs to.
   */
  row: a.any.isRequired,
  /**
   * The node of the row that the current cell belongs to.
   */
  rowNode: a.object.isRequired,
  /**
   * the tabIndex value.
   */
  tabIndex: a.oneOf([-1, 0]).isRequired,
  /**
   * The cell value.
   * If the column has `valueGetter`, use `params.row` to directly access the fields.
   */
  value: a.any
});
const pne = (e) => /* @__PURE__ */ A.jsx(Cz, J({}, e)), hne = ["item", "applyValue", "apiRef", "focusElementRef", "isFilterActive", "clearButton", "tabIndex", "label", "variant", "InputLabelProps"], b0 = (e) => {
  if (String(e).toLowerCase() === "true")
    return !0;
  if (String(e).toLowerCase() === "false")
    return !1;
}, mne = Be("div")({
  display: "flex",
  alignItems: "center",
  width: "100%",
  "& button": {
    margin: "auto 0px 5px 5px"
  }
});
function Sz(e) {
  var M, D, H;
  const {
    item: t,
    applyValue: n,
    apiRef: i,
    focusElementRef: s,
    clearButton: u,
    tabIndex: d,
    label: p,
    variant: m = "standard"
  } = e, v = Xt(e, hne), [y, C] = w.useState(b0(t.value)), S = Vt(), R = Sr(), O = Sr(), E = ((M = S.slotProps) == null ? void 0 : M.baseSelect) || {}, k = E.native ?? !1, F = ((D = S.slotProps) == null ? void 0 : D.baseSelectOption) || {}, _ = w.useCallback((K) => {
    const Q = b0(K.target.value);
    C(Q), n(J({}, t, {
      value: Q
    }));
  }, [n, t]);
  w.useEffect(() => {
    C(b0(t.value));
  }, [t.value]);
  const L = p ?? i.current.getLocaleText("filterPanelInputLabel");
  return /* @__PURE__ */ A.jsxs(mne, {
    children: [/* @__PURE__ */ A.jsxs(S.slots.baseFormControl, {
      fullWidth: !0,
      children: [/* @__PURE__ */ A.jsx(S.slots.baseInputLabel, J({}, (H = S.slotProps) == null ? void 0 : H.baseInputLabel, {
        id: R,
        shrink: !0,
        variant: m,
        children: L
      })), /* @__PURE__ */ A.jsxs(S.slots.baseSelect, J({
        labelId: R,
        id: O,
        label: L,
        value: y === void 0 ? "" : String(y),
        onChange: _,
        variant: m,
        notched: m === "outlined" ? !0 : void 0,
        native: k,
        displayEmpty: !0,
        inputProps: {
          ref: s,
          tabIndex: d
        }
      }, v, E, {
        children: [/* @__PURE__ */ A.jsx(S.slots.baseSelectOption, J({}, F, {
          native: k,
          value: "",
          children: i.current.getLocaleText("filterValueAny")
        })), /* @__PURE__ */ A.jsx(S.slots.baseSelectOption, J({}, F, {
          native: k,
          value: "true",
          children: i.current.getLocaleText("filterValueTrue")
        })), /* @__PURE__ */ A.jsx(S.slots.baseSelectOption, J({}, F, {
          native: k,
          value: "false",
          children: i.current.getLocaleText("filterValueFalse")
        }))]
      }))]
    }), u]
  });
}
process.env.NODE_ENV !== "production" && (Sz.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  apiRef: a.shape({
    current: a.object.isRequired
  }).isRequired,
  applyValue: a.func.isRequired,
  clearButton: a.node,
  focusElementRef: Ea,
  /**
   * It is `true` if the filter either has a value or an operator with no value
   * required is selected (for example `isEmpty`)
   */
  isFilterActive: a.bool,
  item: a.shape({
    field: a.string.isRequired,
    id: a.oneOfType([a.number, a.string]),
    operator: a.string.isRequired,
    value: a.any
  }).isRequired
});
const gne = () => [{
  value: "is",
  getApplyFilterFn: (e) => {
    const t = b0(e.value);
    return t === void 0 ? null : (n) => !!n === t;
  },
  InputComponent: Sz
}], vne = (e, t, n, i) => e ? i.current.getLocaleText("booleanCellTrueLabel") : i.current.getLocaleText("booleanCellFalseLabel"), yne = (e) => {
  switch (e.toLowerCase().trim()) {
    case "true":
    case "yes":
    case "1":
      return !0;
    case "false":
    case "no":
    case "0":
    case "null":
    case "undefined":
      return !1;
    default:
      return;
  }
}, wz = J({}, Bl, {
  type: "boolean",
  display: "flex",
  align: "center",
  headerAlign: "center",
  renderCell: cne,
  renderEditCell: pne,
  sortComparator: ez,
  valueFormatter: vne,
  filterOperators: gne(),
  getApplyQuickFilterFn: void 0,
  // @ts-ignore
  aggregable: !1,
  // @ts-ignore
  pastedValueParser: (e) => yne(e)
}), xz = (e) => e.sorting, dv = an(xz, (e) => e.sortedRows), lM = dr(dv, Js, Go, (e, t, n) => e.reduce((i, s) => {
  const u = t[s];
  if (u)
    i.push({
      id: s,
      model: u
    });
  else {
    const d = n[s];
    d && Zg(d) && i.push({
      id: s,
      model: {
        [Jg]: s
      }
    });
  }
  return i;
}, [])), $l = an(xz, (e) => e.sortModel), bne = dr($l, (e) => e.reduce((n, i, s) => (n[i.field] = {
  sortDirection: i.sort,
  sortIndex: e.length > 1 ? s + 1 : void 0
}, n), {}));
dr(dv, (e) => e.reduce((t, n, i) => (t[n] = i, t), /* @__PURE__ */ Object.create(null)));
const HE = (e) => e.filter, yi = an(HE, (e) => e.filterModel), Cne = an(yi, (e) => e.quickFilterValues), Sne = (e) => e.visibleRowsLookup, fv = an(HE, (e) => e.filteredRowsLookup);
an(HE, (e) => e.filteredChildrenCountLookup);
an(HE, (e) => e.filteredDescendantCountLookup);
const kf = dr(Sne, lM, Sh, yi, Cne, (e, t, n, i, s) => n < 2 && !i.items.length && !(s != null && s.length) ? t : t.filter((u) => e[u.id] !== !1)), Ng = dr(kf, (e) => e.map((t) => t.id)), Ez = dr(fv, lM, (e, t) => t.filter((n) => e[n.id] !== !1)), Tz = dr(Ez, (e) => e.map((t) => t.id));
dr(Ng, Go, (e, t) => {
  const n = {};
  let i = 0;
  return e.reduce((s, u) => {
    const d = t[u];
    return n[d.depth] || (n[d.depth] = 0), d.depth > i && (n[d.depth] = 0), i = d.depth, n[d.depth] += 1, s[u] = n[d.depth], s;
  }, {});
});
const Rz = dr(kf, Go, Sh, (e, t, n) => n < 2 ? e : e.filter((i) => {
  var s;
  return ((s = t[i.id]) == null ? void 0 : s.depth) === 0;
})), uM = an(kf, (e) => e.length), cM = an(Rz, (e) => e.length), wne = an(Ez, (e) => e.length);
an(wne, cM, (e, t) => e - t);
const Oz = dr(yi, ed, (e, t) => {
  var n;
  return (n = e.items) == null ? void 0 : n.filter((i) => {
    var d, p;
    if (!i.field)
      return !1;
    const s = t[i.field];
    if (!(s != null && s.filterOperators) || ((d = s == null ? void 0 : s.filterOperators) == null ? void 0 : d.length) === 0)
      return !1;
    const u = s.filterOperators.find((m) => m.value === i.operator);
    return u ? !u.InputComponent || i.value != null && ((p = i.value) == null ? void 0 : p.toString()) !== "" : !1;
  });
}), xne = dr(Oz, (e) => e.reduce((n, i) => (n[i.field] ? n[i.field].push(i) : n[i.field] = [i], n), {})), us = (e) => e.rowSelection, Ene = an(us, (e) => e.length), Tne = dr(us, Js, (e, t) => new Map(e.map((n) => [n, t[n]]))), mf = dr(us, (e) => e.reduce((t, n) => (t[n] = n, t), {}));
function kz(e, t) {
  var m;
  const n = Go(e), i = dv(e), s = fv(e), u = n[t];
  if (!u || u.type !== "group")
    return [];
  const d = [], p = i.findIndex((v) => v === t) + 1;
  for (let v = p; v < i.length && ((m = n[i[v]]) == null ? void 0 : m.depth) > u.depth; v += 1) {
    const y = i[v];
    s[y] !== !1 && e.current.isRowSelectable(y) && d.push(y);
  }
  return d;
}
function Rne(e, t) {
  return an(Go, dv, fv, mf, (n, i, s, u) => {
    var y;
    const d = n[e];
    if (!d || d.type !== "group")
      return {
        isIndeterminate: !1,
        isChecked: u[e] === e
      };
    if (u[e] === e)
      return {
        isIndeterminate: !1,
        isChecked: !0
      };
    let p = 0, m = 0;
    const v = i.findIndex((C) => C === e) + 1;
    for (let C = v; C < i.length && ((y = n[i[C]]) == null ? void 0 : y.depth) > d.depth; C += 1) {
      const S = i[C];
      s[S] !== !1 && (p += 1, u[S] !== void 0 && (m += 1));
    }
    return {
      isIndeterminate: m > 0 && (m < p || u[e] === void 0),
      isChecked: t ? m > 0 : u[e] === e
    };
  });
}
function dM(e) {
  return e.signature === gs.DataGrid ? e.checkboxSelection && e.disableMultipleRowSelection !== !0 : !e.disableMultipleRowSelection;
}
const One = (e, t) => {
  const n = [];
  let i = t;
  for (; i != null && i !== ji; ) {
    const s = e[i];
    if (!s)
      return n;
    n.push(i), i = s.parent;
  }
  return n;
}, kne = (e, t, n) => {
  const i = e[n];
  if (!i)
    return [];
  const s = i.parent;
  return s == null ? [] : e[s].children.filter((d) => d !== n && t[d] !== !1);
}, Nb = (e, t, n, i, s, u, d = new Set(us(e.current.state))) => {
  const p = fv(e), m = /* @__PURE__ */ new Set([]);
  if (!(!i && !s || p[n] === !1)) {
    if (i) {
      const v = t[n];
      (v == null ? void 0 : v.type) === "group" && kz(e, n).forEach((C) => {
        u(C), m.add(C);
      });
    }
    if (s) {
      const v = (C) => {
        if (!d.has(C) && !m.has(C))
          return !1;
        const S = t[C];
        return S ? S.type !== "group" ? !0 : S.children.every(v) : !1;
      }, y = (C) => {
        const S = kne(t, p, C);
        if (S.length === 0 || S.every(v)) {
          const R = t[C], O = R == null ? void 0 : R.parent;
          O != null && O !== ji && e.current.isRowSelectable(O) && (u(O), m.add(O), y(O));
        }
      };
      y(n);
    }
  }
}, uA = (e, t, n, i, s, u) => {
  const d = mf(e);
  if (!(!s && !i) && (s && One(t, n).forEach((m) => {
    d[m] === m && u(m);
  }), i)) {
    const p = t[n];
    (p == null ? void 0 : p.type) === "group" && kz(e, n).forEach((v) => {
      u(v);
    });
  }
}, Pne = ["field", "id", "formattedValue", "row", "rowNode", "colDef", "isEditable", "cellMode", "hasFocus", "tabIndex", "api"], Mne = (e) => {
  const {
    classes: t
  } = e;
  return yt({
    root: ["checkboxInput"]
  }, Gn, t);
}, Pz = nr(function(t, n) {
  var Q, z;
  const {
    field: i,
    id: s,
    rowNode: u,
    hasFocus: d,
    tabIndex: p
  } = t, m = Xt(t, Pne), v = In(), y = Vt(), C = {
    classes: y.classes
  }, S = Mne(C), R = w.useRef(null), O = w.useRef(null), E = Vr(R, n), k = (I) => {
    const G = {
      value: I.target.checked,
      id: s
    };
    v.current.publishEvent("rowSelectionCheckboxChange", G, I);
  };
  w.useLayoutEffect(() => {
    if (p === 0) {
      const I = v.current.getCellElement(s, i);
      I && (I.tabIndex = -1);
    }
  }, [v, p, s, i]), w.useEffect(() => {
    var I;
    if (d) {
      const G = (I = R.current) == null ? void 0 : I.querySelector("input");
      G == null || G.focus({
        preventScroll: !0
      });
    } else O.current && O.current.stop({});
  }, [d]);
  const F = w.useCallback((I) => {
    I.key === " " && I.stopPropagation();
  }, []), _ = v.current.isRowSelectable(s), L = Rne(s, ((Q = y.rowSelectionPropagation) == null ? void 0 : Q.parents) ?? !1), {
    isIndeterminate: M,
    isChecked: D
  } = tt(v, L, tM);
  if (u.type === "footer" || u.type === "pinnedRow")
    return null;
  const H = y.indeterminateCheckboxAction === "select" ? D && !M : D, K = v.current.getLocaleText(H ? "checkboxSelectionUnselectRow" : "checkboxSelectionSelectRow");
  return /* @__PURE__ */ A.jsx(y.slots.baseCheckbox, J({
    tabIndex: p,
    checked: H,
    onChange: k,
    className: S.root,
    inputProps: {
      "aria-label": K,
      name: "select_row"
    },
    onKeyDown: F,
    indeterminate: M,
    disabled: !_,
    touchRippleRef: O
    /* FIXME: typing error */
  }, (z = y.slotProps) == null ? void 0 : z.baseCheckbox, m, {
    ref: E
  }));
});
process.env.NODE_ENV !== "production" && (Pz.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * GridApi that let you manipulate the grid.
   */
  api: a.object.isRequired,
  /**
   * The mode of the cell.
   */
  cellMode: a.oneOf(["edit", "view"]).isRequired,
  /**
   * The column of the row that the current cell belongs to.
   */
  colDef: a.object.isRequired,
  /**
   * The column field of the cell that triggered the event.
   */
  field: a.string.isRequired,
  /**
   * A ref allowing to set imperative focus.
   * It can be passed to the element that should receive focus.
   * @ignore - do not document.
   */
  focusElementRef: a.oneOfType([a.func, a.shape({
    current: a.shape({
      focus: a.func.isRequired
    })
  })]),
  /**
   * The cell value formatted with the column valueFormatter.
   */
  formattedValue: a.any,
  /**
   * If true, the cell is the active element.
   */
  hasFocus: a.bool.isRequired,
  /**
   * The grid row id.
   */
  id: a.oneOfType([a.number, a.string]).isRequired,
  /**
   * If true, the cell is editable.
   */
  isEditable: a.bool,
  /**
   * The row model of the row that the current cell belongs to.
   */
  row: a.any.isRequired,
  /**
   * The node of the row that the current cell belongs to.
   */
  rowNode: a.object.isRequired,
  /**
   * the tabIndex value.
   */
  tabIndex: a.oneOf([-1, 0]).isRequired,
  /**
   * The cell value.
   * If the column has `valueGetter`, use `params.row` to directly access the fields.
   */
  value: a.any
});
const Ine = Pz, VE = (e) => e.focus, Sa = an(VE, (e) => e.cell), Dne = an(VE, (e) => e.columnHeader);
an(VE, (e) => e.columnHeaderFilter);
const K0 = an(VE, (e) => e.columnGroupHeader), BE = (e) => e.tabIndex, fM = an(BE, (e) => e.cell), Mz = an(BE, (e) => e.columnHeader);
an(BE, (e) => e.columnHeaderFilter);
const Nne = an(BE, (e) => e.columnGroupHeader);
function Mn(e, t, n) {
  const i = w.useRef(!0);
  _r(() => {
    i.current = !1, e.current.register(n, t);
  }, [e, n, t]), i.current && e.current.register(n, t);
}
function ci(e, t) {
  const n = w.useRef(null);
  if (n.current)
    return n.current;
  const i = e.current.getLogger(t);
  return n.current = i, i;
}
const Iz = (e, t, n, i, s) => {
  const u = ci(e, "useNativeEventListener");
  Cr(e, "rootMount", () => {
    const d = typeof t == "function" ? t() : t.current;
    if (!(!d || !n || !i))
      return u.debug(`Binding native ${n} event`), d.addEventListener(n, i, s), () => {
        u.debug(`Clearing native ${n} event`), d.removeEventListener(n, i, s);
      };
  });
}, UC = (e) => {
  const t = w.useRef(!0);
  t.current && (t.current = !1, e());
}, Lne = () => {
}, Fne = (e, t) => {
  const n = w.useRef(!1);
  _r(() => n.current || !e ? Lne : (n.current = !0, t()), [n.current || e]);
}, _ne = 100, Ane = (e) => e ? 0 : 100, Dz = (e, t, n) => t > 0 && e > 0 ? Math.ceil(e / t) : e === -1 ? n + 2 : 0, Nz = (e) => ({
  page: 0,
  pageSize: e ? 0 : 100
}), $ne = (e, t = 0) => t === 0 ? e : Math.max(Math.min(e, t - 1), 0), Lz = (e, t) => {
  if (t === gs.DataGrid && e > _ne)
    throw new Error(["MUI X: `pageSize` cannot exceed 100 in the MIT version of the DataGrid.", "You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature."].join(`
`));
}, jne = -1, GC = (e) => e.pagination, Fz = an(GC, (e) => e.enabled && e.paginationMode === "client"), aa = an(GC, (e) => e.paginationModel), Og = an(GC, (e) => e.rowCount), Ub = an(GC, (e) => e.meta), zne = an(aa, (e) => e.page), _z = an(aa, (e) => e.pageSize), Az = an(aa, Og, (e, t) => Dz(t, e.pageSize, e.page)), pM = dr(Fz, aa, Go, Sh, kf, Rz, (e, t, n, i, s, u) => {
  var O;
  if (!e)
    return null;
  const d = u.length, p = Math.min(t.pageSize * t.page, d - 1), m = t.pageSize === jne ? d - 1 : Math.min(p + t.pageSize - 1, d - 1);
  if (p === -1 || m === -1)
    return null;
  if (i < 2)
    return {
      firstRowIndex: p,
      lastRowIndex: m
    };
  const v = u[p], y = m - p + 1, C = s.findIndex((E) => E.id === v.id);
  let S = C, R = 0;
  for (; S < s.length && R <= y; ) {
    const E = s[S], k = (O = n[E.id]) == null ? void 0 : O.depth;
    k === void 0 ? S += 1 : ((R < y || k > 0) && (S += 1), k === 0 && (R += 1));
  }
  return {
    firstRowIndex: C,
    lastRowIndex: S - 1
  };
}), Hne = dr(kf, pM, (e, t) => t ? e.slice(t.firstRowIndex, t.lastRowIndex + 1) : []), $z = dr(Ng, pM, (e, t) => t ? e.slice(t.firstRowIndex, t.lastRowIndex + 1) : []), WC = dr(Fz, pM, Hne, kf, (e, t, n, i) => e ? {
  rows: n,
  range: t,
  rowToIndexMap: n.reduce((s, u, d) => (s.set(u.model, d), s), /* @__PURE__ */ new Map())
} : {
  rows: i,
  range: i.length === 0 ? null : {
    firstRowIndex: 0,
    lastRowIndex: i.length - 1
  },
  rowToIndexMap: i.reduce((s, u, d) => (s.set(u.model, d), s), /* @__PURE__ */ new Map())
}), Vne = ["field", "colDef"], Bne = (e) => {
  const {
    classes: t
  } = e;
  return yt({
    root: ["checkboxInput"]
  }, Gn, t);
}, jz = nr(function(t, n) {
  var Q;
  const i = Xt(t, Vne), [, s] = w.useState(!1), u = In(), d = Vt(), p = {
    classes: d.classes
  }, m = Bne(p), v = tt(u, Mz), y = tt(u, us), C = tt(u, Ng), S = tt(u, $z), R = w.useMemo(() => typeof d.isRowSelectable != "function" ? y : y.filter((z) => d.keepNonExistentRowsSelected ? !0 : u.current.getRow(z) ? d.isRowSelectable(u.current.getRowParams(z)) : !1), [u, d.isRowSelectable, y, d.keepNonExistentRowsSelected]), O = w.useMemo(() => (!d.pagination || !d.checkboxSelectionVisibleOnly || d.paginationMode === "server" ? C : S).reduce((I, G) => (I[G] = !0, I), {}), [d.pagination, d.paginationMode, d.checkboxSelectionVisibleOnly, S, C]), E = w.useMemo(() => R.filter((z) => O[z]).length, [R, O]), k = E > 0 && E < Object.keys(O).length, F = E > 0, _ = (z) => {
    const I = {
      value: z.target.checked
    };
    u.current.publishEvent("headerSelectionCheckboxChange", I);
  }, L = v !== null && v.field === t.field ? 0 : -1;
  w.useLayoutEffect(() => {
    const z = u.current.getColumnHeaderElement(t.field);
    L === 0 && z && (z.tabIndex = -1);
  }, [L, u, t.field]);
  const M = w.useCallback((z) => {
    z.key === " " && u.current.publishEvent("headerSelectionCheckboxChange", {
      value: !F
    });
  }, [u, F]), D = w.useCallback(() => {
    s((z) => !z);
  }, []);
  w.useEffect(() => u.current.subscribeEvent("rowSelectionChange", D), [u, D]);
  const H = d.indeterminateCheckboxAction === "select" ? F && !k : F, K = u.current.getLocaleText(H ? "checkboxSelectionUnselectAllRows" : "checkboxSelectionSelectAllRows");
  return /* @__PURE__ */ A.jsx(d.slots.baseCheckbox, J({
    indeterminate: k,
    checked: H,
    onChange: _,
    className: m.root,
    inputProps: {
      "aria-label": K,
      name: "select_all_rows"
    },
    tabIndex: L,
    onKeyDown: M,
    disabled: !dM(d)
  }, (Q = d.slotProps) == null ? void 0 : Q.baseCheckbox, i, {
    ref: n
  }));
});
process.env.NODE_ENV !== "production" && (jz.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * The column of the current header component.
   */
  colDef: a.object.isRequired,
  /**
   * The column field of the column that triggered the event
   */
  field: a.string.isRequired
});
const qC = (e, t) => Jg in t ? t[Jg] : e.props.getRowId ? e.props.getRowId(t) : t.id, qs = "__check__", pv = J({}, wz, {
  type: "custom",
  field: qs,
  width: 50,
  resizable: !1,
  sortable: !1,
  filterable: !1,
  // @ts-ignore
  aggregable: !1,
  disableColumnMenu: !0,
  disableReorder: !0,
  disableExport: !0,
  getApplyQuickFilterFn: void 0,
  display: "flex",
  valueGetter: (e, t, n, i) => {
    const s = mf(i), u = qC(i.current.state, t);
    return s[u] !== void 0;
  },
  renderHeader: (e) => /* @__PURE__ */ A.jsx(jz, J({}, e)),
  renderCell: (e) => /* @__PURE__ */ A.jsx(Ine, J({}, e))
}), Une = ["item", "applyValue", "type", "apiRef", "focusElementRef", "InputProps", "isFilterActive", "clearButton", "tabIndex", "disabled"];
function cA(e, t) {
  if (e == null)
    return "";
  const n = new Date(e);
  return Number.isNaN(n.getTime()) ? "" : t === "date" ? n.toISOString().substring(0, 10) : t === "datetime-local" ? (n.setMinutes(n.getMinutes() - n.getTimezoneOffset()), n.toISOString().substring(0, 19)) : n.toISOString().substring(0, 10);
}
function qp(e) {
  var L;
  const {
    item: t,
    applyValue: n,
    type: i,
    apiRef: s,
    focusElementRef: u,
    InputProps: d,
    clearButton: p,
    tabIndex: m,
    disabled: v
  } = e, y = Xt(e, Une), C = ps(), [S, R] = w.useState(() => cA(t.value, i)), [O, E] = w.useState(!1), k = Sr(), F = Vt(), _ = w.useCallback((M) => {
    C.clear();
    const D = M.target.value;
    R(D), E(!0), C.start(F.filterDebounceMs, () => {
      const H = new Date(D);
      n(J({}, t, {
        value: Number.isNaN(H.getTime()) ? void 0 : H
      })), E(!1);
    });
  }, [n, t, F.filterDebounceMs, C]);
  return w.useEffect(() => {
    const M = cA(t.value, i);
    R(M);
  }, [t.value, i]), /* @__PURE__ */ A.jsx(F.slots.baseTextField, J({
    fullWidth: !0,
    id: k,
    label: s.current.getLocaleText("filterPanelInputLabel"),
    placeholder: s.current.getLocaleText("filterPanelInputPlaceholder"),
    value: S,
    onChange: _,
    variant: "standard",
    type: i || "text",
    InputLabelProps: {
      shrink: !0
    },
    inputRef: u,
    InputProps: J({}, O || p ? {
      endAdornment: O ? /* @__PURE__ */ A.jsx(F.slots.loadIcon, {
        fontSize: "small",
        color: "action"
      }) : p
    } : {}, {
      disabled: v
    }, d, {
      inputProps: J({
        max: i === "datetime-local" ? "9999-12-31T23:59" : "9999-12-31",
        tabIndex: m
      }, d == null ? void 0 : d.inputProps)
    })
  }, y, (L = F.slotProps) == null ? void 0 : L.baseTextField));
}
process.env.NODE_ENV !== "production" && (qp.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  apiRef: a.shape({
    current: a.object.isRequired
  }).isRequired,
  applyValue: a.func.isRequired,
  clearButton: a.node,
  focusElementRef: a.oneOfType([a.func, a.object]),
  /**
   * It is `true` if the filter either has a value or an operator with no value
   * required is selected (for example `isEmpty`)
   */
  isFilterActive: a.bool,
  item: a.shape({
    field: a.string.isRequired,
    id: a.oneOfType([a.number, a.string]),
    operator: a.string.isRequired,
    value: a.any
  }).isRequired
});
function vg(e, t, n, i) {
  if (!e.value)
    return null;
  const s = new Date(e.value);
  n ? s.setSeconds(0, 0) : (s.setMinutes(s.getMinutes() + s.getTimezoneOffset()), s.setHours(0, 0, 0, 0));
  const u = s.getTime();
  return (d) => {
    if (!d)
      return !1;
    if (i)
      return t(d.getTime(), u);
    const p = new Date(d);
    return n ? p.setSeconds(0, 0) : p.setHours(0, 0, 0, 0), t(p.getTime(), u);
  };
}
const zz = (e) => [{
  value: "is",
  getApplyFilterFn: (t) => vg(t, (n, i) => n === i, e),
  InputComponent: qp,
  InputComponentProps: {
    type: e ? "datetime-local" : "date"
  }
}, {
  value: "not",
  getApplyFilterFn: (t) => vg(t, (n, i) => n !== i, e),
  InputComponent: qp,
  InputComponentProps: {
    type: e ? "datetime-local" : "date"
  }
}, {
  value: "after",
  getApplyFilterFn: (t) => vg(t, (n, i) => n > i, e),
  InputComponent: qp,
  InputComponentProps: {
    type: e ? "datetime-local" : "date"
  }
}, {
  value: "onOrAfter",
  getApplyFilterFn: (t) => vg(t, (n, i) => n >= i, e),
  InputComponent: qp,
  InputComponentProps: {
    type: e ? "datetime-local" : "date"
  }
}, {
  value: "before",
  getApplyFilterFn: (t) => vg(t, (n, i) => n < i, e, !e),
  InputComponent: qp,
  InputComponentProps: {
    type: e ? "datetime-local" : "date"
  }
}, {
  value: "onOrBefore",
  getApplyFilterFn: (t) => vg(t, (n, i) => n <= i, e),
  InputComponent: qp,
  InputComponentProps: {
    type: e ? "datetime-local" : "date"
  }
}, {
  value: "isEmpty",
  getApplyFilterFn: () => (t) => t == null,
  requiresFilterValue: !1
}, {
  value: "isNotEmpty",
  getApplyFilterFn: () => (t) => t != null,
  requiresFilterValue: !1
}], Gne = ["id", "value", "formattedValue", "api", "field", "row", "rowNode", "colDef", "cellMode", "isEditable", "tabIndex", "hasFocus", "inputProps", "isValidating", "isProcessingProps", "onValueChange"], Wne = Be(Ch)({
  fontSize: "inherit"
}), qne = (e) => {
  const {
    classes: t
  } = e;
  return yt({
    root: ["editInputCell"]
  }, Gn, t);
};
function Hz(e) {
  const {
    id: t,
    value: n,
    field: i,
    colDef: s,
    hasFocus: u,
    inputProps: d,
    onValueChange: p
  } = e, m = Xt(e, Gne), v = s.type === "dateTime", y = In(), C = w.useRef(null), S = w.useMemo(() => {
    let M;
    n == null ? M = null : n instanceof Date ? M = n : M = new Date((n ?? "").toString());
    let D;
    return M == null || Number.isNaN(M.getTime()) ? D = "" : D = new Date(M.getTime() - M.getTimezoneOffset() * 60 * 1e3).toISOString().substr(0, v ? 16 : 10), {
      parsed: M,
      formatted: D
    };
  }, [n, v]), [R, O] = w.useState(S), k = {
    classes: Vt().classes
  }, F = qne(k), _ = w.useCallback((M) => {
    if (M === "")
      return null;
    const [D, H] = M.split("T"), [K, Q, z] = D.split("-"), I = /* @__PURE__ */ new Date();
    if (I.setFullYear(Number(K), Number(Q) - 1, Number(z)), I.setHours(0, 0, 0, 0), H) {
      const [G, W] = H.split(":");
      I.setHours(Number(G), Number(W), 0, 0);
    }
    return I;
  }, []), L = w.useCallback(async (M) => {
    const D = M.target.value, H = _(D);
    p && await p(M, H), O({
      parsed: H,
      formatted: D
    }), y.current.setEditCellValue({
      id: t,
      field: i,
      value: H
    }, M);
  }, [y, i, t, p, _]);
  return w.useEffect(() => {
    O((M) => {
      var D, H;
      return S.parsed !== M.parsed && ((D = S.parsed) == null ? void 0 : D.getTime()) !== ((H = M.parsed) == null ? void 0 : H.getTime()) ? S : M;
    });
  }, [S]), _r(() => {
    u && C.current.focus();
  }, [u]), /* @__PURE__ */ A.jsx(Wne, J({
    inputRef: C,
    fullWidth: !0,
    className: F.root,
    type: v ? "datetime-local" : "date",
    inputProps: J({
      max: v ? "9999-12-31T23:59" : "9999-12-31"
    }, d),
    value: R.formatted,
    onChange: L
  }, m));
}
process.env.NODE_ENV !== "production" && (Hz.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * GridApi that let you manipulate the grid.
   */
  api: a.object.isRequired,
  /**
   * The mode of the cell.
   */
  cellMode: a.oneOf(["edit", "view"]).isRequired,
  changeReason: a.oneOf(["debouncedSetEditCellValue", "setEditCellValue"]),
  /**
   * The column of the row that the current cell belongs to.
   */
  colDef: a.object.isRequired,
  /**
   * The column field of the cell that triggered the event.
   */
  field: a.string.isRequired,
  /**
   * The cell value formatted with the column valueFormatter.
   */
  formattedValue: a.any,
  /**
   * If true, the cell is the active element.
   */
  hasFocus: a.bool.isRequired,
  /**
   * The grid row id.
   */
  id: a.oneOfType([a.number, a.string]).isRequired,
  /**
   * If true, the cell is editable.
   */
  isEditable: a.bool,
  isProcessingProps: a.bool,
  isValidating: a.bool,
  /**
   * Callback called when the value is changed by the user.
   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
   * @param {Date | null} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.
   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`
   */
  onValueChange: a.func,
  /**
   * The row model of the row that the current cell belongs to.
   */
  row: a.any.isRequired,
  /**
   * The node of the row that the current cell belongs to.
   */
  rowNode: a.object.isRequired,
  /**
   * the tabIndex value.
   */
  tabIndex: a.oneOf([-1, 0]).isRequired,
  /**
   * The cell value.
   * If the column has `valueGetter`, use `params.row` to directly access the fields.
   */
  value: a.any
});
const Vz = (e) => /* @__PURE__ */ A.jsx(Hz, J({}, e));
function Bz({
  value: e,
  columnType: t,
  rowId: n,
  field: i
}) {
  if (!(e instanceof Date))
    throw new Error([`MUI X: \`${t}\` column type only accepts \`Date\` objects as values.`, "Use `valueGetter` to transform the value into a `Date` object.", `Row ID: ${n}, field: "${i}".`].join(`
`));
}
const Kne = (e, t, n, i) => {
  if (!e)
    return "";
  const s = qC(i.current.state, t);
  return Bz({
    value: e,
    columnType: "date",
    rowId: s,
    field: n.field
  }), e.toLocaleDateString();
}, Yne = (e, t, n, i) => {
  if (!e)
    return "";
  const s = qC(i.current.state, t);
  return Bz({
    value: e,
    columnType: "dateTime",
    rowId: s,
    field: n.field
  }), e.toLocaleString();
}, Xne = J({}, Bl, {
  type: "date",
  sortComparator: tz,
  valueFormatter: Kne,
  filterOperators: zz(),
  renderEditCell: Vz,
  // @ts-ignore
  pastedValueParser: (e) => new Date(e)
}), Qne = J({}, Bl, {
  type: "dateTime",
  sortComparator: tz,
  valueFormatter: Yne,
  filterOperators: zz(!0),
  renderEditCell: Vz,
  // @ts-ignore
  pastedValueParser: (e) => new Date(e)
}), rf = (e) => e == null ? null : Number(e), Jne = (e) => e == null || Number.isNaN(e) || e === "" ? null : (t) => rf(t) === rf(e), Zne = () => [{
  value: "=",
  getApplyFilterFn: (e) => e.value == null || Number.isNaN(e.value) ? null : (t) => rf(t) === e.value,
  InputComponent: ds,
  InputComponentProps: {
    type: "number"
  }
}, {
  value: "!=",
  getApplyFilterFn: (e) => e.value == null || Number.isNaN(e.value) ? null : (t) => rf(t) !== e.value,
  InputComponent: ds,
  InputComponentProps: {
    type: "number"
  }
}, {
  value: ">",
  getApplyFilterFn: (e) => e.value == null || Number.isNaN(e.value) ? null : (t) => t == null ? !1 : rf(t) > e.value,
  InputComponent: ds,
  InputComponentProps: {
    type: "number"
  }
}, {
  value: ">=",
  getApplyFilterFn: (e) => e.value == null || Number.isNaN(e.value) ? null : (t) => t == null ? !1 : rf(t) >= e.value,
  InputComponent: ds,
  InputComponentProps: {
    type: "number"
  }
}, {
  value: "<",
  getApplyFilterFn: (e) => e.value == null || Number.isNaN(e.value) ? null : (t) => t == null ? !1 : rf(t) < e.value,
  InputComponent: ds,
  InputComponentProps: {
    type: "number"
  }
}, {
  value: "<=",
  getApplyFilterFn: (e) => e.value == null || Number.isNaN(e.value) ? null : (t) => t == null ? !1 : rf(t) <= e.value,
  InputComponent: ds,
  InputComponentProps: {
    type: "number"
  }
}, {
  value: "isEmpty",
  getApplyFilterFn: () => (e) => e == null,
  requiresFilterValue: !1
}, {
  value: "isNotEmpty",
  getApplyFilterFn: () => (e) => e != null,
  requiresFilterValue: !1
}, {
  value: "isAnyOf",
  getApplyFilterFn: (e) => !Array.isArray(e.value) || e.value.length === 0 ? null : (t) => t != null && e.value.includes(Number(t)),
  InputComponent: iM,
  InputComponentProps: {
    type: "number"
  }
}], ere = J({}, Bl, {
  type: "number",
  align: "right",
  headerAlign: "right",
  sortComparator: ez,
  valueParser: (e) => e === "" ? null : Number(e),
  valueFormatter: (e) => nz(e) ? e.toLocaleString() : e || "",
  filterOperators: Zne(),
  getApplyQuickFilterFn: Jne
});
function ev(e) {
  return (e == null ? void 0 : e.type) === "singleSelect";
}
function hh(e, t) {
  if (e)
    return typeof e.valueOptions == "function" ? e.valueOptions(J({
      field: e.field
    }, t)) : e.valueOptions;
}
function Y0(e, t, n) {
  if (t === void 0)
    return;
  const i = t.find((s) => {
    const u = n(s);
    return String(u) === String(e);
  });
  return n(i);
}
const tre = ["id", "value", "formattedValue", "api", "field", "row", "rowNode", "colDef", "cellMode", "isEditable", "tabIndex", "className", "hasFocus", "isValidating", "isProcessingProps", "error", "onValueChange", "initialOpen"], nre = ["MenuProps"];
function rre(e) {
  return !!e.key;
}
function Uz(e) {
  var W, B;
  const t = Vt(), {
    id: n,
    value: i,
    field: s,
    row: u,
    colDef: d,
    hasFocus: p,
    error: m,
    onValueChange: v,
    initialOpen: y = t.editMode === Yu.Cell
  } = e, C = Xt(e, tre), S = In(), R = w.useRef(null), O = w.useRef(null), [E, k] = w.useState(y), _ = (((W = t.slotProps) == null ? void 0 : W.baseSelect) || {}).native ?? !1, L = ((B = t.slotProps) == null ? void 0 : B.baseSelect) || {}, {
    MenuProps: M
  } = L, D = Xt(L, nre);
  if (_r(() => {
    var ee;
    p && ((ee = O.current) == null || ee.focus());
  }, [p]), !ev(d))
    return null;
  const H = hh(d, {
    id: n,
    row: u
  });
  if (!H)
    return null;
  const K = d.getOptionValue, Q = d.getOptionLabel, z = async (ee) => {
    if (!ev(d) || !H)
      return;
    k(!1);
    const U = ee.target, q = Y0(U.value, H, K);
    v && await v(ee, q), await S.current.setEditCellValue({
      id: n,
      field: s,
      value: q
    }, ee);
  }, I = (ee, U) => {
    if (t.editMode === Yu.Row) {
      k(!1);
      return;
    }
    if (U === "backdropClick" || ee.key === "Escape") {
      const q = S.current.getCellParams(n, s);
      S.current.publishEvent("cellEditStop", J({}, q, {
        reason: ee.key === "Escape" ? Al.escapeKeyDown : Al.cellFocusOut
      }));
    }
  }, G = (ee) => {
    rre(ee) && ee.key === "Enter" || k(!0);
  };
  return !H || !d ? null : /* @__PURE__ */ A.jsx(t.slots.baseSelect, J({
    ref: R,
    inputRef: O,
    value: i,
    onChange: z,
    open: E,
    onOpen: G,
    MenuProps: J({
      onClose: I
    }, M),
    error: m,
    native: _,
    fullWidth: !0
  }, C, D, {
    children: H.map((ee) => {
      var q;
      const U = K(ee);
      return /* @__PURE__ */ w.createElement(t.slots.baseSelectOption, J({}, ((q = t.slotProps) == null ? void 0 : q.baseSelectOption) || {}, {
        native: _,
        key: U,
        value: U
      }), Q(ee));
    })
  }));
}
process.env.NODE_ENV !== "production" && (Uz.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * GridApi that let you manipulate the grid.
   */
  api: a.object.isRequired,
  /**
   * The mode of the cell.
   */
  cellMode: a.oneOf(["edit", "view"]).isRequired,
  changeReason: a.oneOf(["debouncedSetEditCellValue", "setEditCellValue"]),
  /**
   * The column of the row that the current cell belongs to.
   */
  colDef: a.object.isRequired,
  /**
   * The column field of the cell that triggered the event.
   */
  field: a.string.isRequired,
  /**
   * The cell value formatted with the column valueFormatter.
   */
  formattedValue: a.any,
  /**
   * If true, the cell is the active element.
   */
  hasFocus: a.bool.isRequired,
  /**
   * The grid row id.
   */
  id: a.oneOfType([a.number, a.string]).isRequired,
  /**
   * If true, the select opens by default.
   */
  initialOpen: a.bool,
  /**
   * If true, the cell is editable.
   */
  isEditable: a.bool,
  isProcessingProps: a.bool,
  isValidating: a.bool,
  /**
   * Callback called when the value is changed by the user.
   * @param {SelectChangeEvent<any>} event The event source of the callback.
   * @param {any} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.
   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`
   */
  onValueChange: a.func,
  /**
   * The row model of the row that the current cell belongs to.
   */
  row: a.any.isRequired,
  /**
   * The node of the row that the current cell belongs to.
   */
  rowNode: a.object.isRequired,
  /**
   * the tabIndex value.
   */
  tabIndex: a.oneOf([-1, 0]).isRequired,
  /**
   * The cell value.
   * If the column has `valueGetter`, use `params.row` to directly access the fields.
   */
  value: a.any
});
const ore = (e) => /* @__PURE__ */ A.jsx(Uz, J({}, e)), ire = ["item", "applyValue", "type", "apiRef", "focusElementRef", "placeholder", "tabIndex", "label", "variant", "isFilterActive", "clearButton", "InputLabelProps"], are = ({
  column: e,
  OptionComponent: t,
  getOptionLabel: n,
  getOptionValue: i,
  isSelectNative: s,
  baseSelectOptionProps: u
}) => ["", ...hh(e) || []].map((p) => {
  const m = i(p);
  let v = n(p);
  return v === "" && (v = " "), /* @__PURE__ */ w.createElement(t, J({}, u, {
    native: s,
    key: m,
    value: m
  }), v);
}), sre = Be("div")({
  display: "flex",
  alignItems: "flex-end",
  width: "100%",
  "& button": {
    margin: "auto 0px 5px 5px"
  }
});
function Uk(e) {
  var K, Q, z, I, G;
  const {
    item: t,
    applyValue: n,
    type: i,
    apiRef: s,
    focusElementRef: u,
    placeholder: d,
    tabIndex: p,
    label: m,
    variant: v = "standard",
    clearButton: y
  } = e, C = Xt(e, ire), S = t.value ?? "", R = Sr(), O = Sr(), E = Vt(), k = ((Q = (K = E.slotProps) == null ? void 0 : K.baseSelect) == null ? void 0 : Q.native) ?? !1;
  let F = null;
  if (t.field) {
    const W = s.current.getColumn(t.field);
    ev(W) && (F = W);
  }
  const _ = F == null ? void 0 : F.getOptionValue, L = F == null ? void 0 : F.getOptionLabel, M = w.useMemo(() => hh(F), [F]), D = w.useCallback((W) => {
    let B = W.target.value;
    B = Y0(B, M, _), n(J({}, t, {
      value: B
    }));
  }, [M, _, n, t]);
  if (!ev(F))
    return null;
  const H = m ?? s.current.getLocaleText("filterPanelInputLabel");
  return /* @__PURE__ */ A.jsxs(sre, {
    children: [/* @__PURE__ */ A.jsxs(E.slots.baseFormControl, {
      fullWidth: !0,
      children: [/* @__PURE__ */ A.jsx(E.slots.baseInputLabel, J({}, (z = E.slotProps) == null ? void 0 : z.baseInputLabel, {
        id: O,
        htmlFor: R,
        shrink: !0,
        variant: v,
        children: H
      })), /* @__PURE__ */ A.jsx(E.slots.baseSelect, J({
        id: R,
        label: H,
        labelId: O,
        value: S,
        onChange: D,
        variant: v,
        type: i || "text",
        inputProps: {
          tabIndex: p,
          ref: u,
          placeholder: d ?? s.current.getLocaleText("filterPanelInputPlaceholder")
        },
        native: k,
        notched: v === "outlined" ? !0 : void 0
      }, C, (I = E.slotProps) == null ? void 0 : I.baseSelect, {
        children: are({
          column: F,
          OptionComponent: E.slots.baseSelectOption,
          getOptionLabel: L,
          getOptionValue: _,
          isSelectNative: k,
          baseSelectOptionProps: (G = E.slotProps) == null ? void 0 : G.baseSelectOption
        })
      }))]
    }), y]
  });
}
process.env.NODE_ENV !== "production" && (Uk.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  apiRef: a.shape({
    current: a.object.isRequired
  }).isRequired,
  applyValue: a.func.isRequired,
  clearButton: a.node,
  focusElementRef: a.oneOfType([a.func, a.object]),
  /**
   * It is `true` if the filter either has a value or an operator with no value
   * required is selected (for example `isEmpty`)
   */
  isFilterActive: a.bool,
  item: a.shape({
    field: a.string.isRequired,
    id: a.oneOfType([a.number, a.string]),
    operator: a.string.isRequired,
    value: a.any
  }).isRequired
});
const lre = ["item", "applyValue", "type", "apiRef", "focusElementRef", "color", "error", "helperText", "size", "variant"], ure = ["key"], cre = Cj();
function Gz(e) {
  const {
    item: t,
    applyValue: n,
    apiRef: i,
    focusElementRef: s,
    color: u,
    error: d,
    helperText: p,
    size: m,
    variant: v = "standard"
  } = e, y = Xt(e, lre), C = {
    color: u,
    error: d,
    helperText: p,
    size: m,
    variant: v
  }, S = Sr(), R = Vt();
  let O = null;
  if (t.field) {
    const D = i.current.getColumn(t.field);
    ev(D) && (O = D);
  }
  const E = O == null ? void 0 : O.getOptionValue, k = O == null ? void 0 : O.getOptionLabel, F = w.useCallback((D, H) => E(D) === E(H), [E]), _ = w.useMemo(() => hh(O) || [], [O]), L = w.useMemo(() => Array.isArray(t.value) ? t.value.reduce((D, H) => {
    const K = _.find((Q) => E(Q) === H);
    return K != null && D.push(K), D;
  }, []) : [], [E, t.value, _]), M = w.useCallback((D, H) => {
    n(J({}, t, {
      value: H.map(E)
    }));
  }, [n, t, E]);
  return /* @__PURE__ */ A.jsx(jP, J({
    multiple: !0,
    options: _,
    isOptionEqualToValue: F,
    filterOptions: cre,
    id: S,
    value: L,
    onChange: M,
    getOptionLabel: k,
    renderTags: (D, H) => D.map((K, Q) => {
      const z = H({
        index: Q
      }), {
        key: I
      } = z, G = Xt(z, ure);
      return /* @__PURE__ */ A.jsx(R.slots.baseChip, J({
        variant: "outlined",
        size: "small",
        label: k(K)
      }, G), I);
    }),
    renderInput: (D) => {
      var H;
      return /* @__PURE__ */ A.jsx(R.slots.baseTextField, J({}, D, {
        label: i.current.getLocaleText("filterPanelInputLabel"),
        placeholder: i.current.getLocaleText("filterPanelInputPlaceholder"),
        InputLabelProps: J({}, D.InputLabelProps, {
          shrink: !0
        }),
        inputRef: s,
        type: "singleSelect"
      }, C, (H = R.slotProps) == null ? void 0 : H.baseTextField));
    }
  }, y));
}
process.env.NODE_ENV !== "production" && (Gz.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  apiRef: a.shape({
    current: a.object.isRequired
  }).isRequired,
  applyValue: a.func.isRequired,
  focusElementRef: a.oneOfType([a.func, a.object]),
  item: a.shape({
    field: a.string.isRequired,
    id: a.oneOfType([a.number, a.string]),
    operator: a.string.isRequired,
    value: a.any
  }).isRequired,
  type: a.oneOf(["singleSelect"])
});
const yg = (e) => e == null || !oM(e) ? e : e.value, dre = () => [{
  value: "is",
  getApplyFilterFn: (e) => e.value == null || e.value === "" ? null : (t) => yg(t) === yg(e.value),
  InputComponent: Uk
}, {
  value: "not",
  getApplyFilterFn: (e) => e.value == null || e.value === "" ? null : (t) => yg(t) !== yg(e.value),
  InputComponent: Uk
}, {
  value: "isAnyOf",
  getApplyFilterFn: (e) => {
    if (!Array.isArray(e.value) || e.value.length === 0)
      return null;
    const t = e.value.map(yg);
    return (n) => t.includes(yg(n));
  },
  InputComponent: Gz
}], fre = (e) => typeof e[0] == "object", pre = (e) => oM(e) ? e.value : e, hre = (e) => oM(e) ? e.label : String(e), mre = J({}, Bl, {
  type: "singleSelect",
  getOptionLabel: hre,
  getOptionValue: pre,
  valueFormatter(e, t, n, i) {
    const s = qC(i.current.state, t);
    if (!ev(n))
      return "";
    const u = hh(n, {
      id: s,
      row: t
    });
    if (e == null)
      return "";
    if (!u)
      return e;
    if (!fre(u))
      return n.getOptionLabel(e);
    const d = u.find((p) => n.getOptionValue(p) === e);
    return d ? n.getOptionLabel(d) : "";
  },
  renderEditCell: ore,
  filterOperators: dre(),
  // @ts-ignore
  pastedValueParser: (e, t, n) => {
    const i = n, s = hh(i) || [], u = i.getOptionValue;
    if (s.find((p) => u(p) === e))
      return e;
  }
}), gre = "string", vre = () => ({
  string: Bl,
  number: ere,
  date: Xne,
  dateTime: Qne,
  boolean: wz,
  singleSelect: mre,
  [$E]: tne,
  custom: Bl
}), hM = (e) => e.headerFiltering, yre = an(
  hM,
  // No initialization in MIT, so we need to default to false to be used by `getTotalHeaderHeight`
  (e) => (e == null ? void 0 : e.enabled) ?? !1
), bre = an(hM, (e) => e.editing), Cre = an(hM, (e) => e.menuOpen), UE = (e) => e.columnGrouping, Wz = dr(UE, (e) => (e == null ? void 0 : e.unwrappedGroupingModel) ?? {}), qz = dr(UE, (e) => (e == null ? void 0 : e.lookup) ?? {}), Sre = dr(UE, (e) => (e == null ? void 0 : e.headerStructure) ?? []), KC = an(UE, (e) => (e == null ? void 0 : e.maxDepth) ?? 0), Kz = ["maxWidth", "minWidth", "width", "flex"], BO = vre();
function wre({
  initialFreeSpace: e,
  totalFlexUnits: t,
  flexColumns: n
}) {
  const i = new Set(n.map((d) => d.field)), s = {
    all: {},
    frozenFields: [],
    freeze: (d) => {
      const p = s.all[d];
      p && p.frozen !== !0 && (s.all[d].frozen = !0, s.frozenFields.push(d));
    }
  };
  function u() {
    if (s.frozenFields.length === i.size)
      return;
    const d = {
      min: {},
      max: {}
    };
    let p = e, m = t, v = 0;
    s.frozenFields.forEach((y) => {
      p -= s.all[y].computedWidth, m -= s.all[y].flex;
    });
    for (let y = 0; y < n.length; y += 1) {
      const C = n[y];
      if (s.all[C.field] && s.all[C.field].frozen === !0)
        continue;
      let R = p / m * C.flex;
      R < C.minWidth ? (v += C.minWidth - R, R = C.minWidth, d.min[C.field] = !0) : R > C.maxWidth && (v += C.maxWidth - R, R = C.maxWidth, d.max[C.field] = !0), s.all[C.field] = {
        frozen: !1,
        computedWidth: R,
        flex: C.flex
      };
    }
    v < 0 ? Object.keys(d.max).forEach((y) => {
      s.freeze(y);
    }) : v > 0 ? Object.keys(d.min).forEach((y) => {
      s.freeze(y);
    }) : n.forEach(({
      field: y
    }) => {
      s.freeze(y);
    }), u();
  }
  return u(), s.all;
}
const Gk = (e, t) => {
  const n = {};
  let i = 0, s = 0;
  const u = [];
  e.orderedFields.forEach((m) => {
    let v = e.lookup[m], y = 0, C = !1;
    e.columnVisibilityModel[m] !== !1 && (v.flex && v.flex > 0 ? (i += v.flex, C = !0) : y = vs(v.width || Bl.width, v.minWidth || Bl.minWidth, v.maxWidth || Bl.maxWidth), s += y), v.computedWidth !== y && (v = J({}, v, {
      computedWidth: y
    })), C && u.push(v), n[m] = v;
  });
  const d = t === void 0 ? 0 : t.viewportOuterSize.width - (t.hasScrollY ? t.scrollbarSize : 0), p = Math.max(d - s, 0);
  if (i > 0 && d > 0) {
    const m = wre({
      initialFreeSpace: p,
      totalFlexUnits: i,
      flexColumns: u
    });
    Object.keys(m).forEach((v) => {
      n[v].computedWidth = m[v].computedWidth;
    });
  }
  return J({}, e, {
    lookup: n
  });
}, xre = (e, t) => {
  if (!t)
    return e;
  const {
    orderedFields: n = [],
    dimensions: i = {}
  } = t, s = Object.keys(i);
  if (s.length === 0 && n.length === 0)
    return e;
  const u = {}, d = [];
  for (let y = 0; y < n.length; y += 1) {
    const C = n[y];
    e.lookup[C] && (u[C] = !0, d.push(C));
  }
  const p = d.length === 0 ? e.orderedFields : [...d, ...e.orderedFields.filter((y) => !u[y])], m = J({}, e.lookup);
  for (let y = 0; y < s.length; y += 1) {
    const C = s[y], S = J({}, m[C], {
      hasBeenResized: !0
    });
    Object.entries(i[C]).forEach(([R, O]) => {
      S[R] = O === -1 ? 1 / 0 : O;
    }), m[C] = S;
  }
  return J({}, e, {
    orderedFields: p,
    lookup: m
  });
};
function dA(e) {
  let t = BO[gre];
  return e && BO[e] && (t = BO[e]), t;
}
const xg = ({
  apiRef: e,
  columnsToUpsert: t,
  initialState: n,
  columnVisibilityModel: i = Zs(e),
  keepOnlyColumnsToUpsert: s = !1
}) => {
  var y, C;
  const u = !e.current.state.columns;
  let d;
  if (u)
    d = {
      orderedFields: [],
      lookup: {},
      columnVisibilityModel: i
    };
  else {
    const S = Uu(e.current.state);
    d = {
      orderedFields: s ? [] : [...S.orderedFields],
      lookup: J({}, S.lookup),
      // Will be cleaned later if keepOnlyColumnsToUpsert=true
      columnVisibilityModel: i
    };
  }
  let p = {};
  s && !u && (p = Object.keys(d.lookup).reduce((S, R) => J({}, S, {
    [R]: !1
  }), {})), t.forEach((S) => {
    const {
      field: R
    } = S;
    p[R] = !0;
    let O = d.lookup[R];
    O == null ? (O = J({}, dA(S.type), {
      field: R,
      hasBeenResized: !1
    }), d.orderedFields.push(R)) : s && d.orderedFields.push(R), O && O.type !== S.type && (O = J({}, dA(S.type), {
      field: R
    }));
    let E = O.hasBeenResized;
    Kz.forEach((k) => {
      S[k] !== void 0 && (E = !0, S[k] === -1 && (S[k] = 1 / 0));
    }), d.lookup[R] = Bg(O, J({}, S, {
      hasBeenResized: E
    }));
  }), s && !u && Object.keys(d.lookup).forEach((S) => {
    p[S] || delete d.lookup[S];
  });
  const m = e.current.unstable_applyPipeProcessors("hydrateColumns", d), v = xre(m, n);
  return Gk(v, ((C = (y = e.current).getRootDimensions) == null ? void 0 : C.call(y)) ?? void 0);
};
function Ere({
  firstColumnToRender: e,
  apiRef: t,
  firstRowToRender: n,
  lastRowToRender: i,
  visibleRows: s
}) {
  let u = e, d = !1;
  for (; !d; ) {
    d = !0;
    for (let p = n; p < i; p += 1)
      if (s[p]) {
        const v = s[p].id, y = t.current.unstable_getCellColSpanInfo(v, u);
        if (y && y.spannedByColSpan && y.leftVisibleCellIndex < u) {
          u = y.leftVisibleCellIndex, d = !1;
          break;
        }
      }
  }
  return u;
}
function GE(e, t) {
  if (t.unstable_listView)
    return 0;
  const n = sv(e), i = KC(e), s = yre(e), u = Math.floor(t.columnHeaderHeight * n), d = Math.floor((t.columnGroupHeaderHeight ?? t.columnHeaderHeight) * n), p = s ? Math.floor((t.headerFilterHeight ?? t.columnHeaderHeight) * n) : 0;
  return u + d * i + p;
}
const hv = (e) => e.rowsMeta, X0 = 1, Yz = 1.5, Tre = (e) => {
  const {
    scrollDirection: t,
    classes: n
  } = e, i = {
    root: ["scrollArea", `scrollArea--${t}`]
  };
  return yt(i, Gn, n);
}, Rre = Dr("div", {
  name: "MuiDataGrid",
  slot: "ScrollArea",
  overridesResolver: (e, t) => [{
    [`&.${ae["scrollArea--left"]}`]: t["scrollArea--left"]
  }, {
    [`&.${ae["scrollArea--right"]}`]: t["scrollArea--right"]
  }, {
    [`&.${ae["scrollArea--up"]}`]: t["scrollArea--up"]
  }, {
    [`&.${ae["scrollArea--down"]}`]: t["scrollArea--down"]
  }, t.scrollArea]
})(() => ({
  position: "absolute",
  zIndex: 101,
  // Horizontal scroll areas
  [`&.${ae["scrollArea--left"]}`]: {
    top: 0,
    left: 0,
    width: 20,
    bottom: 0
  },
  [`&.${ae["scrollArea--right"]}`]: {
    top: 0,
    right: 0,
    width: 20,
    bottom: 0
  },
  // Vertical scroll areas
  [`&.${ae["scrollArea--up"]}`]: {
    top: 0,
    left: 0,
    right: 0,
    height: 20
  },
  [`&.${ae["scrollArea--down"]}`]: {
    bottom: 0,
    left: 0,
    right: 0,
    height: 20
  }
})), Ore = VC(ui, (e, t) => t === "left" ? e.leftPinnedWidth : t === "right" ? e.rightPinnedWidth + (e.hasScrollX ? e.scrollbarSize : 0) : 0);
function kre(e) {
  const t = In(), [n, i] = w.useState("none");
  return Mt(t, "columnHeaderDragStart", () => i("horizontal")), Mt(t, "columnHeaderDragEnd", () => i("none")), Mt(t, "rowDragStart", () => i("vertical")), Mt(t, "rowDragEnd", () => i("none")), n === "none" ? null : n === "horizontal" ? /* @__PURE__ */ A.jsx(Pre, J({}, e)) : /* @__PURE__ */ A.jsx(Mre, J({}, e));
}
function Pre(e) {
  const {
    scrollDirection: t,
    scrollPosition: n
  } = e, i = w.useRef(null), s = In(), u = ps(), d = tt(s, sv), p = tt(s, _E), m = gC(s, Ore, t), v = () => {
    const E = ui(s.current.state);
    if (t === "left")
      return n.current.left > 0;
    if (t === "right") {
      const k = p - E.viewportInnerSize.width;
      return n.current.left < k;
    }
    return !1;
  }, y = Vt(), C = GE(s, y), S = Math.floor(y.columnHeaderHeight * d), R = J({
    height: S,
    top: C - S
  }, t === "left" ? {
    left: m
  } : {}, t === "right" ? {
    right: m
  } : {}), O = Nn((E) => {
    let k;
    if (E.preventDefault(), t === "left")
      k = E.clientX - i.current.getBoundingClientRect().right;
    else if (t === "right")
      k = Math.max(1, E.clientX - i.current.getBoundingClientRect().left);
    else
      throw new Error("MUI X: Wrong drag direction");
    k = (k - X0) * Yz + X0, u.start(0, () => {
      s.current.scroll({
        left: n.current.left + k,
        top: n.current.top
      });
    });
  });
  return /* @__PURE__ */ A.jsx(Xz, J({}, e, {
    ref: i,
    getCanScrollMore: v,
    style: R,
    handleDragOver: O
  }));
}
function Mre(e) {
  const {
    scrollDirection: t,
    scrollPosition: n
  } = e, i = w.useRef(null), s = In(), u = ps(), d = tt(s, hv), p = () => {
    const S = ui(s.current.state);
    if (t === "up")
      return n.current.top > 0;
    if (t === "down") {
      const O = (d.currentPageTotalHeight || 0) - S.viewportInnerSize.height - S.scrollbarSize;
      return n.current.top < O;
    }
    return !1;
  }, m = Vt(), v = GE(s, m), y = {
    top: t === "up" ? v : void 0,
    bottom: t === "down" ? 0 : void 0
  }, C = Nn((S) => {
    let R;
    if (S.preventDefault(), t === "up")
      R = S.clientY - i.current.getBoundingClientRect().bottom;
    else if (t === "down")
      R = Math.max(1, S.clientY - i.current.getBoundingClientRect().top);
    else
      throw new Error("MUI X: Wrong drag direction");
    R = (R - X0) * Yz + X0, u.start(0, () => {
      s.current.scroll({
        left: n.current.left,
        top: n.current.top + R
      });
    });
  });
  return /* @__PURE__ */ A.jsx(Xz, J({}, e, {
    ref: i,
    getCanScrollMore: p,
    style: y,
    handleDragOver: C
  }));
}
const Xz = nr(function(t, n) {
  const {
    scrollDirection: i,
    getCanScrollMore: s,
    style: u,
    handleDragOver: d
  } = t, p = In(), [m, v] = w.useState(s), y = Vt(), C = J({}, y, {
    scrollDirection: i
  }), S = Tre(C);
  return Mt(p, "scrollPositionChange", () => {
    v(s);
  }), m ? /* @__PURE__ */ A.jsx(Rre, {
    ref: n,
    className: S.root,
    ownerState: C,
    onDragOver: d,
    style: u
  }) : null;
}), s0 = Zc(kre);
var mM = {}, Qz = { exports: {} }, Jz = { exports: {} };
(function(e) {
  function t(n) {
    "@babel/helpers - typeof";
    return e.exports = t = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(i) {
      return typeof i;
    } : function(i) {
      return i && typeof Symbol == "function" && i.constructor === Symbol && i !== Symbol.prototype ? "symbol" : typeof i;
    }, e.exports.__esModule = !0, e.exports.default = e.exports, t(n);
  }
  e.exports = t, e.exports.__esModule = !0, e.exports.default = e.exports;
})(Jz);
var Ire = Jz.exports;
(function(e) {
  var t = Ire.default;
  function n(i, s) {
    if (typeof WeakMap == "function") var u = /* @__PURE__ */ new WeakMap(), d = /* @__PURE__ */ new WeakMap();
    return (e.exports = n = function(m, v) {
      if (!v && m && m.__esModule) return m;
      var y, C, S = {
        __proto__: null,
        default: m
      };
      if (m === null || t(m) != "object" && typeof m != "function") return S;
      if (y = v ? d : u) {
        if (y.has(m)) return y.get(m);
        y.set(m, S);
      }
      for (var R in m) R !== "default" && {}.hasOwnProperty.call(m, R) && ((C = (y = Object.defineProperty) && Object.getOwnPropertyDescriptor(m, R)) && (C.get || C.set) ? y(S, R, C) : S[R] = m[R]);
      return S;
    }, e.exports.__esModule = !0, e.exports.default = e.exports)(i, s);
  }
  e.exports = n, e.exports.__esModule = !0, e.exports.default = e.exports;
})(Qz);
var Dre = Qz.exports, Nre = Dre.default;
Object.defineProperty(mM, "__esModule", {
  value: !0
});
var Zz = mM.default = void 0, Lre = Nre(w);
Zz = mM.default = parseInt(Lre.version, 10);
const gM = /* @__PURE__ */ w.createContext(void 0);
process.env.NODE_ENV !== "production" && (gM.displayName = "GridPrivateApiContext");
function Cs() {
  const e = w.useContext(gM);
  if (e === void 0)
    throw new Error(["MUI X: Could not find the Data Grid private context.", "It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.", "This can also happen if you are bundling multiple versions of the Data Grid."].join(`
`));
  return e;
}
const gf = (e, t) => WC(e), vM = (e, t) => tt(e, WC), Fre = typeof navigator < "u" ? navigator.userAgent.toLowerCase() : "empty", _re = Fre.includes("firefox"), WE = (e) => e.virtualization;
an(WE, (e) => e.enabled);
const eH = an(WE, (e) => e.enabledForColumns), Are = an(WE, (e) => e.enabledForRows), YC = an(WE, (e) => e.renderContext), $re = dr((e) => e.virtualization.renderContext.firstColumnIndex, (e) => e.virtualization.renderContext.lastColumnIndex, (e, t) => ({
  firstColumnIndex: e,
  lastColumnIndex: t
})), Wk = {
  firstRowIndex: 0,
  lastRowIndex: 0,
  firstColumnIndex: 0,
  lastColumnIndex: 0
}, jre = (e, t) => {
  const {
    disableVirtualization: n,
    autoHeight: i
  } = t;
  return J({}, e, {
    virtualization: {
      enabled: !n,
      enabledForColumns: !n,
      enabledForRows: !n && !i,
      renderContext: Wk
    }
  });
};
function zre(e, t) {
  const n = (u) => {
    e.current.setState((d) => J({}, d, {
      virtualization: J({}, d.virtualization, {
        enabled: u,
        enabledForColumns: u,
        enabledForRows: u && !t.autoHeight
      })
    }));
  };
  Mn(e, {
    unstable_setVirtualization: n,
    unstable_setColumnVirtualization: (u) => {
      e.current.setState((d) => J({}, d, {
        virtualization: J({}, d.virtualization, {
          enabledForColumns: u
        })
      }));
    }
  }, "public"), w.useEffect(() => {
    n(!t.disableVirtualization);
  }, [t.disableVirtualization, t.autoHeight]);
}
const yM = (e) => e.rowSpanning, tH = an(yM, (e) => e.hiddenCells), Hre = an(yM, (e) => e.spannedCells), Vre = an(yM, (e) => e.hiddenCellOriginMap), tv = (e) => e.listViewColumn, Bre = B2(Sa, YC, WC, ho, Js, (e, t, n, i, s) => {
  if (!e)
    return !1;
  const u = s[e.id];
  if (!u)
    return !1;
  const d = n.rowToIndexMap.get(u), p = i.slice(t.firstColumnIndex, t.lastColumnIndex).findIndex((v) => v.field === e.field);
  return !(d !== void 0 && p !== -1 && d >= t.firstRowIndex && d <= t.lastRowIndex);
}), nH = dr(Bre, ho, WC, Js, Sa, (e, t, n, i, s) => {
  if (!e)
    return null;
  const u = i[s.id];
  if (!u)
    return null;
  const d = n.rowToIndexMap.get(u);
  if (d === void 0)
    return null;
  const p = t.findIndex((m) => m.field === s.field);
  return p === -1 ? null : J({}, s, {
    rowIndex: d,
    columnIndex: p
  });
});
function kg(e, t) {
  return Math.round(e * 10 ** t) / 10 ** t;
}
const Q0 = typeof window < "u" && /jsdom|HappyDOM/.test(window.navigator.userAgent), UO = 50;
var Ao = /* @__PURE__ */ function(e) {
  return e[e.NONE = 0] = "NONE", e[e.UP = 1] = "UP", e[e.DOWN = 2] = "DOWN", e[e.LEFT = 3] = "LEFT", e[e.RIGHT = 4] = "RIGHT", e;
}(Ao || {});
const fA = {
  top: 0,
  left: 0
}, Ure = Object.freeze(/* @__PURE__ */ new Map()), Gre = (e, t, n, i, s) => ({
  direction: Ao.NONE,
  buffer: oH(e, Ao.NONE, t, n, i, s)
}), Wre = () => {
  var ue;
  const e = Cs(), t = Vt(), {
    unstable_listView: n
  } = t, i = tt(e, () => n ? [tv(e.current.state)] : ho(e)), s = tt(e, Are) && !Q0, u = tt(e, eH) && !Q0, d = tt(e, lv), p = cv(e), m = n ? q0 : p, v = d.bottom.length > 0, [y, C] = w.useState(Ure), S = zi(), R = tt(e, mf), O = vM(e), E = e.current.mainElementRef, k = e.current.virtualScrollerRef, F = e.current.virtualScrollbarVerticalRef, _ = e.current.virtualScrollbarHorizontalRef, L = tt(e, jte), M = w.useRef(!1), D = tt(e, nM), H = tt(e, ete), K = tt(e, _E), Q = tt(e, qre), z = tt(e, X2), I = tt(e, Y2), G = w.useRef(null), W = w.useCallback((we) => {
    if (E.current = we, !we)
      return;
    const _e = we.getBoundingClientRect();
    let He = {
      width: kg(_e.width, 1),
      height: kg(_e.height, 1)
    };
    if ((!G.current || He.width !== G.current.width && He.height !== G.current.height) && (G.current = He, e.current.publishEvent("resize", He)), typeof ResizeObserver > "u")
      return;
    const et = new ResizeObserver((Ne) => {
      const rt = Ne[0];
      if (!rt)
        return;
      const it = {
        width: kg(rt.contentRect.width, 1),
        height: kg(rt.contentRect.height, 1)
      };
      it.width === He.width && it.height === He.height || (e.current.publishEvent("resize", it), He = it);
    });
    if (et.observe(we), Zz >= 19)
      return () => {
        E.current = null, et.disconnect();
      };
  }, [e, E]), B = w.useRef(((ue = t.initialState) == null ? void 0 : ue.scroll) ?? fA), ee = w.useRef(!1), U = w.useRef(fA), q = w.useRef(Wk), Y = tt(e, YC), ne = tt(e, nH), re = ps(), X = w.useRef(void 0), j = sl(() => Gre(S, t.rowBufferPx, t.columnBufferPx, D * 15, UO * 6)).current, ie = w.useCallback((we) => {
    if (gA(we, e.current.state.virtualization.renderContext))
      return;
    const _e = we.firstRowIndex !== q.current.firstRowIndex || we.lastRowIndex !== q.current.lastRowIndex;
    e.current.setState((et) => J({}, et, {
      virtualization: J({}, et.virtualization, {
        renderContext: we
      })
    })), ui(e.current.state).isReady && _e && (q.current = we, e.current.publishEvent("renderedRowsIntervalChange", we)), U.current = B.current;
  }, [e]), fe = Nn(() => {
    const we = k.current;
    if (!we)
      return;
    const _e = ui(e.current.state), He = Math.ceil(_e.minimumSize.height - _e.viewportOuterSize.height), et = Math.ceil(_e.minimumSize.width - _e.viewportInnerSize.width), Ne = {
      top: vs(we.scrollTop, 0, He),
      left: S ? vs(we.scrollLeft, -et, 0) : vs(we.scrollLeft, 0, et)
    }, rt = Ne.left - B.current.left, it = Ne.top - B.current.top, wt = rt !== 0 || it !== 0;
    B.current = Ne;
    const gt = wt ? Xre(rt, it) : Ao.NONE, ot = Math.abs(B.current.top - U.current.top), jt = Math.abs(B.current.left - U.current.left), ct = ot >= D || jt >= UO, Tt = j.direction !== gt;
    if (!(ct || Tt))
      return Y;
    if (Tt)
      switch (gt) {
        case Ao.NONE:
        case Ao.LEFT:
        case Ao.RIGHT:
          X.current = void 0;
          break;
        default:
          X.current = Y;
          break;
      }
    j.direction = gt, j.buffer = oH(S, gt, t.rowBufferPx, t.columnBufferPx, D * 15, UO * 6);
    const Lt = pA(e, t, s, u), vt = hA(Lt, B.current, j);
    return gA(vt, Y) || (oE.flushSync(() => {
      ie(vt);
    }), re.start(1e3, fe)), vt;
  }), ce = () => {
    if (!ui(e.current.state).isReady && (s || u))
      return;
    const we = pA(e, t, s, u), _e = hA(we, B.current, j);
    X.current = void 0, ie(_e);
  }, me = Nn(() => {
    if (ee.current) {
      ee.current = !1;
      return;
    }
    const we = fe();
    e.current.publishEvent("scrollPositionChange", {
      top: B.current.top,
      left: B.current.left,
      renderContext: we
    });
  }), ge = Nn((we) => {
    e.current.publishEvent("virtualScrollerWheel", {}, we);
  }), de = Nn((we) => {
    e.current.publishEvent("virtualScrollerTouchMove", {}, we);
  }), pe = (we = {}) => {
    var Lt;
    if (!we.rows && !O.range)
      return [];
    const _e = Go(e);
    let He = Y;
    we.renderContext && (He = we.renderContext, He.firstColumnIndex = Y.firstColumnIndex, He.lastColumnIndex = Y.lastColumnIndex);
    const et = !v && we.position === void 0 || v && we.position === "bottom", Ne = we.position !== void 0;
    let rt;
    switch (we.position) {
      case "top":
        rt = 0;
        break;
      case "bottom":
        rt = d.top.length + O.rows.length;
        break;
      case void 0:
        rt = d.top.length;
        break;
    }
    const it = we.rows ?? O.rows, wt = He.firstRowIndex, gt = Math.min(He.lastRowIndex, it.length), ot = we.rows ? Z_(0, we.rows.length) : Z_(wt, gt);
    let jt = -1;
    !Ne && ne && (ne.rowIndex < wt && (ot.unshift(ne.rowIndex), jt = ne.rowIndex), ne.rowIndex > gt && (ot.push(ne.rowIndex), jt = ne.rowIndex));
    const ct = [], Tt = (Lt = t.slotProps) == null ? void 0 : Lt.row, Rt = Of(e);
    return ot.forEach((vt) => {
      var Po, Mo, Ut;
      const {
        id: Qe,
        model: Oe
      } = it[vt];
      if (!_e[Qe])
        return;
      const Me = (((Po = O == null ? void 0 : O.range) == null ? void 0 : Po.firstRowIndex) || 0) + rt + vt;
      if (L) {
        const fr = m.left.length, Ct = i.length - m.right.length;
        e.current.calculateColSpan({
          rowId: Qe,
          minFirstColumn: fr,
          maxLastColumn: Ct,
          columns: i
        }), m.left.length > 0 && e.current.calculateColSpan({
          rowId: Qe,
          minFirstColumn: 0,
          maxLastColumn: m.left.length,
          columns: i
        }), m.right.length > 0 && e.current.calculateColSpan({
          rowId: Qe,
          minFirstColumn: i.length - m.right.length,
          maxLastColumn: i.length,
          columns: i
        });
      }
      const ht = e.current.rowHasAutoHeight(Qe) ? "auto" : e.current.unstable_getRowHeight(Qe);
      let xt;
      R[Qe] == null ? xt = !1 : xt = e.current.isRowSelectable(Qe);
      let zt = !1;
      we.position === void 0 && (zt = vt === 0);
      let bt = !1;
      const Ge = vt === it.length - 1;
      if (et)
        if (Ne)
          bt = Ge;
        else {
          const fr = O.rows.length - 1;
          vt === fr && (bt = !0);
        }
      let Et = He;
      X.current && vt >= X.current.firstRowIndex && vt < X.current.lastRowIndex && (Et = X.current);
      const At = vt === jt, pn = (ne == null ? void 0 : ne.rowIndex) === Me, fn = rH(Rt, Et, m.left.length), mr = Ge && we.position === "top", qn = Et.firstColumnIndex, Nr = Et.lastColumnIndex;
      if (ct.push(/* @__PURE__ */ A.jsx(t.slots.row, J({
        row: Oe,
        rowId: Qe,
        index: Me,
        selected: xt,
        offsetLeft: fn,
        columnsTotalWidth: K,
        rowHeight: ht,
        pinnedColumns: m,
        visibleColumns: i,
        firstColumnIndex: qn,
        lastColumnIndex: Nr,
        focusedColumnIndex: pn ? ne.columnIndex : void 0,
        isFirstVisible: zt,
        isLastVisible: bt,
        isNotVisible: At,
        showBottomBorder: mr,
        scrollbarWidth: z,
        gridHasFiller: I
      }, Tt), Qe)), At)
        return;
      const gr = y.get(Qe);
      gr && ct.push(gr), we.position === void 0 && Ge && ct.push((Ut = (Mo = e.current).getInfiniteLoadingTriggerElement) == null ? void 0 : Ut.call(Mo, {
        lastRowId: Qe
      }));
    }), ct;
  }, be = w.useMemo(() => ({
    overflowX: !Q || n ? "hidden" : void 0,
    overflowY: t.autoHeight ? "hidden" : void 0
  }), [Q, t.autoHeight, n]), Ce = w.useMemo(() => {
    const we = {
      width: Q ? K : "auto",
      flexBasis: H,
      flexShrink: 0
    };
    return we.flexBasis === 0 && (we.flexBasis = gz), we;
  }, [K, H, Q]), Re = w.useCallback((we) => {
    we && e.current.publishEvent("virtualScrollerContentSizeChange", {
      columnsTotalWidth: K,
      contentHeight: H
    });
  }, [e, K, H]);
  return _r(() => {
    var we, _e;
    M.current && ((_e = (we = e.current).updateRenderContext) == null || _e.call(we));
  }, [e, u, s]), _r(() => {
    n && (k.current.scrollLeft = 0);
  }, [n, k]), Fne(Y !== Wk, () => {
    var we;
    if (e.current.publishEvent("scrollPositionChange", {
      top: B.current.top,
      left: B.current.left,
      renderContext: Y
    }), M.current = !0, (we = t.initialState) != null && we.scroll && k.current) {
      const _e = k.current, {
        top: He,
        left: et
      } = t.initialState.scroll, Ne = {
        top: !(He > 0),
        left: !(et > 0)
      };
      if (!Ne.left && K && (_e.scrollLeft = et, ee.current = !0, Ne.left = !0), !Ne.top && H && (_e.scrollTop = He, ee.current = !0, Ne.top = !0), !Ne.top || !Ne.left) {
        const rt = e.current.subscribeEvent("virtualScrollerContentSizeChange", (it) => {
          !Ne.left && it.columnsTotalWidth && (_e.scrollLeft = et, ee.current = !0, Ne.left = !0), !Ne.top && it.contentHeight && (_e.scrollTop = He, ee.current = !0, Ne.top = !0), Ne.left && Ne.top && rt();
        });
        return rt;
      }
    }
  }), e.current.register("private", {
    updateRenderContext: ce
  }), Cr(e, "sortedRowsSet", ce), Cr(e, "paginationModelChange", ce), Cr(e, "columnsChange", ce), {
    renderContext: Y,
    setPanels: C,
    getRows: pe,
    getContainerProps: () => ({
      ref: W
    }),
    getScrollerProps: () => ({
      ref: k,
      onScroll: me,
      onWheel: ge,
      onTouchMove: de,
      style: be,
      role: "presentation",
      // `tabIndex` shouldn't be used along role=presentation, but it fixes a Firefox bug
      // https://github.com/mui/mui-x/pull/13891#discussion_r1683416024
      tabIndex: _re ? -1 : void 0
    }),
    getContentProps: () => ({
      style: Ce,
      role: "presentation",
      ref: Re
    }),
    getRenderZoneProps: () => ({
      role: "rowgroup"
    }),
    getScrollbarVerticalProps: () => ({
      ref: F,
      scrollPosition: B
    }),
    getScrollbarHorizontalProps: () => ({
      ref: _,
      scrollPosition: B
    }),
    getScrollAreaProps: () => ({
      scrollPosition: B
    })
  };
};
function qre(e) {
  return e.dimensions.viewportOuterSize.width > 0 && e.dimensions.columnsTotalWidth > e.dimensions.viewportOuterSize.width;
}
function pA(e, t, n, i) {
  const s = ui(e.current.state), u = gf(e), d = t.unstable_listView ? [tv(e.current.state)] : ho(e), p = Vre(e), m = e.current.state.rows.dataRowIds.at(-1), v = d.at(-1);
  return {
    enabledForRows: n,
    enabledForColumns: i,
    apiRef: e,
    autoHeight: t.autoHeight,
    rowBufferPx: t.rowBufferPx,
    columnBufferPx: t.columnBufferPx,
    leftPinnedWidth: s.leftPinnedWidth,
    columnsTotalWidth: s.columnsTotalWidth,
    viewportInnerWidth: s.viewportInnerSize.width,
    viewportInnerHeight: s.viewportInnerSize.height,
    lastRowHeight: m !== void 0 ? e.current.unstable_getRowHeight(m) : 0,
    lastColumnWidth: (v == null ? void 0 : v.computedWidth) ?? 0,
    rowsMeta: hv(e.current.state),
    columnPositions: Of(e),
    rows: u.rows,
    range: u.range,
    pinnedColumns: cv(e),
    visibleColumns: d,
    hiddenCellsOriginMap: p,
    listView: t.unstable_listView ?? !1,
    virtualizeColumnsWithAutoRowHeight: t.virtualizeColumnsWithAutoRowHeight
  };
}
function hA(e, t, n) {
  const i = {
    firstRowIndex: 0,
    lastRowIndex: e.rows.length,
    firstColumnIndex: 0,
    lastColumnIndex: e.visibleColumns.length
  }, {
    top: s,
    left: u
  } = t, d = Math.abs(u) + e.leftPinnedWidth;
  if (e.enabledForRows) {
    let m = Math.min(mA(e, s, {
      atStart: !0,
      lastPosition: e.rowsMeta.positions[e.rowsMeta.positions.length - 1] + e.lastRowHeight
    }), e.rowsMeta.positions.length - 1);
    const v = e.hiddenCellsOriginMap[m];
    if (v) {
      const C = Math.min(...Object.values(v));
      m = Math.min(m, C);
    }
    const y = e.autoHeight ? m + e.rows.length : mA(e, s + e.viewportInnerHeight);
    i.firstRowIndex = m, i.lastRowIndex = y;
  }
  if (e.listView)
    return J({}, i, {
      lastColumnIndex: 1
    });
  if (e.enabledForColumns) {
    let m = 0, v = e.columnPositions.length, y = !1;
    const [C, S] = qk({
      firstIndex: i.firstRowIndex,
      lastIndex: i.lastRowIndex,
      minFirstIndex: 0,
      maxLastIndex: e.rows.length,
      bufferBefore: n.buffer.rowBefore,
      bufferAfter: n.buffer.rowAfter,
      positions: e.rowsMeta.positions,
      lastSize: e.lastRowHeight
    });
    if (!e.virtualizeColumnsWithAutoRowHeight)
      for (let R = C; R < S && !y; R += 1) {
        const O = e.rows[R];
        y = e.apiRef.current.rowHasAutoHeight(O.id);
      }
    (!y || e.virtualizeColumnsWithAutoRowHeight) && (m = wf(d, e.columnPositions, {
      atStart: !0,
      lastPosition: e.columnsTotalWidth
    }), v = wf(d + e.viewportInnerWidth, e.columnPositions)), i.firstColumnIndex = m, i.lastColumnIndex = v;
  }
  return Kre(e, i, n);
}
function mA(e, t, n) {
  var d, p;
  const i = e.apiRef.current.getLastMeasuredRowIndex();
  let s = i === 1 / 0;
  (d = e.range) != null && d.lastRowIndex && !s && (s = i >= e.range.lastRowIndex);
  const u = vs(i - (((p = e.range) == null ? void 0 : p.firstRowIndex) || 0), 0, e.rowsMeta.positions.length);
  return s || e.rowsMeta.positions[u] >= t ? wf(t, e.rowsMeta.positions, n) : Yre(t, e.rowsMeta.positions, u, n);
}
function Kre(e, t, n) {
  const [i, s] = qk({
    firstIndex: t.firstRowIndex,
    lastIndex: t.lastRowIndex,
    minFirstIndex: 0,
    maxLastIndex: e.rows.length,
    bufferBefore: n.buffer.rowBefore,
    bufferAfter: n.buffer.rowAfter,
    positions: e.rowsMeta.positions,
    lastSize: e.lastRowHeight
  }), [u, d] = qk({
    firstIndex: t.firstColumnIndex,
    lastIndex: t.lastColumnIndex,
    minFirstIndex: e.pinnedColumns.left.length,
    maxLastIndex: e.visibleColumns.length - e.pinnedColumns.right.length,
    bufferBefore: n.buffer.columnBefore,
    bufferAfter: n.buffer.columnAfter,
    positions: e.columnPositions,
    lastSize: e.lastColumnWidth
  }), p = Ere({
    firstColumnToRender: u,
    apiRef: e.apiRef,
    firstRowToRender: i,
    lastRowToRender: s,
    visibleRows: e.rows
  });
  return {
    firstRowIndex: i,
    lastRowIndex: s,
    firstColumnIndex: p,
    lastColumnIndex: d
  };
}
function wf(e, t, n = void 0, i = 0, s = t.length) {
  if (t.length <= 0)
    return -1;
  if (i >= s)
    return i;
  const u = i + Math.floor((s - i) / 2), d = t[u];
  let p;
  if (n != null && n.atStart) {
    const m = (u === t.length - 1 ? n.lastPosition : t[u + 1]) - d;
    p = e - m < d;
  } else
    p = e <= d;
  return p ? wf(e, t, n, i, u) : wf(e, t, n, u + 1, s);
}
function Yre(e, t, n, i = void 0) {
  let s = 1;
  for (; n < t.length && Math.abs(t[n]) < e; )
    n += s, s *= 2;
  return wf(e, t, i, Math.floor(n / 2), Math.min(n, t.length));
}
function qk({
  firstIndex: e,
  lastIndex: t,
  bufferBefore: n,
  bufferAfter: i,
  minFirstIndex: s,
  maxLastIndex: u,
  positions: d,
  lastSize: p
}) {
  const m = d[e] - n, v = d[t] + i, y = wf(m, d, {
    atStart: !0,
    lastPosition: d[d.length - 1] + p
  }), C = wf(v, d);
  return [vs(y, s, u), vs(C, s, u)];
}
function gA(e, t) {
  return e === t ? !0 : e.firstRowIndex === t.firstRowIndex && e.lastRowIndex === t.lastRowIndex && e.firstColumnIndex === t.firstColumnIndex && e.lastColumnIndex === t.lastColumnIndex;
}
function rH(e, t, n) {
  const i = (e[t.firstColumnIndex] ?? 0) - (e[n] ?? 0);
  return Math.abs(i);
}
function Xre(e, t) {
  return e === 0 && t === 0 ? Ao.NONE : Math.abs(t) >= Math.abs(e) ? t > 0 ? Ao.DOWN : Ao.UP : e > 0 ? Ao.RIGHT : Ao.LEFT;
}
function oH(e, t, n, i, s, u) {
  if (e)
    switch (t) {
      case Ao.LEFT:
        t = Ao.RIGHT;
        break;
      case Ao.RIGHT:
        t = Ao.LEFT;
        break;
    }
  switch (t) {
    case Ao.NONE:
      return {
        rowAfter: n,
        rowBefore: n,
        columnAfter: i,
        columnBefore: i
      };
    case Ao.LEFT:
      return {
        rowAfter: 0,
        rowBefore: 0,
        columnAfter: 0,
        columnBefore: u
      };
    case Ao.RIGHT:
      return {
        rowAfter: 0,
        rowBefore: 0,
        columnAfter: u,
        columnBefore: 0
      };
    case Ao.UP:
      return {
        rowAfter: 0,
        rowBefore: s,
        columnAfter: 0,
        columnBefore: 0
      };
    case Ao.DOWN:
      return {
        rowAfter: s,
        rowBefore: 0,
        columnAfter: 0,
        columnBefore: 0
      };
    default:
      throw new Error("unreachable");
  }
}
const Qre = () => {
  var C, S;
  const e = In(), t = Vt(), n = tt(e, BC), i = tt(e, uM), s = tt(e, J2), u = n === 0 && s === 0, d = tt(e, Cte), p = !d && u, m = !d && n > 0 && i === 0;
  let v = null, y = null;
  return p && (v = "noRowsOverlay"), m && (v = "noResultsOverlay"), d && (v = "loadingOverlay", y = ((S = (C = t.slotProps) == null ? void 0 : C.loadingOverlay) == null ? void 0 : S[u ? "noRowsVariant" : "variant"]) || null), {
    overlayType: v,
    loadingOverlayVariant: y
  };
}, Jre = Dr("div", {
  name: "MuiDataGrid",
  slot: "OverlayWrapper",
  shouldForwardProp: (e) => e !== "overlayType" && e !== "loadingOverlayVariant",
  overridesResolver: (e, t) => t.overlayWrapper
})(({
  overlayType: e,
  loadingOverlayVariant: t
}) => (
  // Skeleton overlay should flow with the scroll container and not be sticky
  t !== "skeleton" ? {
    position: "sticky",
    // To stay in place while scrolling
    top: "var(--DataGrid-headersTotalHeight)",
    // TODO: take pinned rows into account
    left: 0,
    width: 0,
    // To stay above the content instead of shifting it down
    height: 0,
    // To stay above the content instead of shifting it down
    zIndex: e === "loadingOverlay" ? 5 : 4
    // Should be above pinned columns and detail panel
  } : {}
)), Zre = Dr("div", {
  name: "MuiDataGrid",
  slot: "OverlayWrapperInner",
  shouldForwardProp: (e) => e !== "overlayType" && e !== "loadingOverlayVariant",
  overridesResolver: (e, t) => t.overlayWrapperInner
})({}), eoe = (e) => {
  const {
    classes: t
  } = e;
  return yt({
    root: ["overlayWrapper"],
    inner: ["overlayWrapperInner"]
  }, Gn, t);
};
function iH(e) {
  const t = In(), n = Vt(), i = tt(t, ui);
  let s = Math.max(i.viewportOuterSize.height - i.topContainerHeight - i.bottomContainerHeight - (i.hasScrollX ? i.scrollbarSize : 0), 0);
  s === 0 && (s = gz);
  const u = eoe(J({}, e, {
    classes: n.classes
  }));
  return /* @__PURE__ */ A.jsx(Jre, J({
    className: nt(u.root)
  }, e, {
    children: /* @__PURE__ */ A.jsx(Zre, J({
      className: nt(u.inner),
      style: {
        height: s,
        width: i.viewportOuterSize.width
      }
    }, e))
  }));
}
process.env.NODE_ENV !== "production" && (iH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  loadingOverlayVariant: a.oneOf(["circular-progress", "linear-progress", "skeleton"]),
  overlayType: a.oneOf(["loadingOverlay", "noResultsOverlay", "noRowsOverlay"])
});
process.env.NODE_ENV !== "production" && (aH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  loadingOverlayVariant: a.oneOf(["circular-progress", "linear-progress", "skeleton"]),
  overlayType: a.oneOf(["loadingOverlay", "noResultsOverlay", "noRowsOverlay"])
});
function aH(e) {
  var u, d;
  const {
    overlayType: t
  } = e, n = Vt();
  if (!t)
    return null;
  const i = (u = n.slots) == null ? void 0 : u[t], s = (d = n.slotProps) == null ? void 0 : d[t];
  return /* @__PURE__ */ A.jsx(iH, J({}, e, {
    children: /* @__PURE__ */ A.jsx(i, J({}, s))
  }));
}
const C0 = (e) => e.columnMenu;
function toe() {
  var k;
  const e = Cs(), t = Vt(), n = tt(e, ho), i = tt(e, xne), s = tt(e, bne), u = tt(e, Mz), d = tt(e, () => fM(e) === null), p = tt(e, Nne), m = tt(e, Dne), v = tt(e, K0), y = tt(e, KC), C = tt(e, C0), S = tt(e, Zs), R = tt(e, Sre), O = !(p === null && u === null && d), E = e.current.columnHeadersContainerRef;
  return /* @__PURE__ */ A.jsx(t.slots.columnHeaders, J({
    ref: E,
    visibleColumns: n,
    filterColumnLookup: i,
    sortColumnLookup: s,
    columnHeaderTabIndexState: u,
    columnGroupHeaderTabIndexState: p,
    columnHeaderFocus: m,
    columnGroupHeaderFocus: v,
    headerGroupingMaxDepth: y,
    columnMenuState: C,
    columnVisibility: S,
    columnGroupsHeaderStructure: R,
    hasOtherElementInTabSequence: O
  }, (k = t.slotProps) == null ? void 0 : k.columnHeaders));
}
const noe = Zc(toe), bM = /* @__PURE__ */ w.createContext(void 0);
process.env.NODE_ENV !== "production" && (bM.displayName = "GridConfigurationContext");
const CM = () => {
  const e = w.useContext(bM);
  if (e === void 0)
    throw new Error(["MUI X: Could not find the Data Grid configuration context.", "It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.", "This can also happen if you are bundling multiple versions of the Data Grid."].join(`
`));
  return e;
}, roe = Dr("div")({
  position: "absolute",
  top: "var(--DataGrid-headersTotalHeight)",
  left: 0,
  width: "calc(100% - (var(--DataGrid-hasScrollY) * var(--DataGrid-scrollbarSize)))"
}), ooe = Dr("div", {
  name: "MuiDataGrid",
  slot: "Main",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.main, n.hasPinnedRight && t["main--hasPinnedRight"], n.loadingOverlayVariant === "skeleton" && t["main--hasSkeletonLoadingOverlay"]];
  }
})({
  flexGrow: 1,
  position: "relative",
  overflow: "hidden",
  display: "flex",
  flexDirection: "column"
}), ioe = nr((e, t) => {
  var d;
  const {
    ownerState: n
  } = e, i = Vt(), u = CM().hooks.useGridAriaAttributes();
  return /* @__PURE__ */ A.jsxs(ooe, J({
    ownerState: n,
    className: e.className,
    tabIndex: -1
  }, u, (d = i.slotProps) == null ? void 0 : d.main, {
    ref: t,
    children: [/* @__PURE__ */ A.jsx(roe, {
      role: "presentation",
      "data-id": "gridPanelAnchor"
    }), e.children]
  }));
}), aoe = () => yt({
  root: ["topContainer"]
}, Gn, {}), soe = Dr("div")({
  position: "sticky",
  zIndex: 40,
  top: 0
});
function loe(e) {
  const t = aoe();
  return /* @__PURE__ */ A.jsx(soe, J({}, e, {
    className: nt(t.root, ae["container--top"]),
    role: "presentation"
  }));
}
const uoe = () => yt({
  root: ["bottomContainer"]
}, Gn, {}), coe = Dr("div")({
  position: "sticky",
  zIndex: 40,
  bottom: "calc(var(--DataGrid-hasScrollX) * var(--DataGrid-scrollbarSize))"
});
function doe(e) {
  const t = uoe();
  return /* @__PURE__ */ A.jsx(coe, J({}, e, {
    className: nt(t.root, ae["container--bottom"]),
    role: "presentation"
  }));
}
const foe = (e, t) => {
  const {
    classes: n
  } = e;
  return yt({
    root: ["virtualScrollerContent", t && "virtualScrollerContent--overflowed"]
  }, Gn, n);
}, poe = Dr("div", {
  name: "MuiDataGrid",
  slot: "VirtualScrollerContent",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.virtualScrollerContent, n.overflowedContent && t["virtualScrollerContent--overflowed"]];
  }
})({}), hoe = nr(function(t, n) {
  var p;
  const i = Vt(), s = !i.autoHeight && ((p = t.style) == null ? void 0 : p.minHeight) === "auto", u = foe(i, s), d = {
    classes: i.classes,
    overflowedContent: s
  };
  return /* @__PURE__ */ A.jsx(poe, J({}, t, {
    ownerState: d,
    className: nt(u.root, t.className),
    ref: n
  }));
}), moe = Dr("div")({
  display: "flex",
  flexDirection: "row",
  width: "var(--DataGrid-rowWidth)",
  boxSizing: "border-box"
}), sH = Dr("div")({
  position: "sticky",
  height: "100%",
  boxSizing: "border-box",
  borderTop: "1px solid var(--rowBorderColor)",
  backgroundColor: "var(--DataGrid-pinnedBackground)"
}), goe = Dr(sH)({
  left: 0,
  borderRight: "1px solid var(--rowBorderColor)"
}), voe = Dr(sH)({
  right: 0,
  borderLeft: "1px solid var(--rowBorderColor)"
}), yoe = Dr("div")({
  flexGrow: 1,
  borderTop: "1px solid var(--rowBorderColor)"
});
function boe({
  rowsLength: e
}) {
  const t = In(), {
    viewportOuterSize: n,
    minimumSize: i,
    hasScrollX: s,
    hasScrollY: u,
    scrollbarSize: d,
    leftPinnedWidth: p,
    rightPinnedWidth: m
  } = tt(t, ui), v = s ? d : 0, y = n.height - i.height > 0;
  return v === 0 && !y ? null : /* @__PURE__ */ A.jsxs(moe, {
    className: ae.filler,
    role: "presentation",
    style: {
      height: v,
      "--rowBorderColor": e === 0 ? "transparent" : "var(--DataGrid-rowBorderColor)"
    },
    children: [p > 0 && /* @__PURE__ */ A.jsx(goe, {
      className: ae["filler--pinnedLeft"],
      style: {
        width: p
      }
    }), /* @__PURE__ */ A.jsx(yoe, {}), m > 0 && /* @__PURE__ */ A.jsx(voe, {
      className: ae["filler--pinnedRight"],
      style: {
        width: m + (u ? d : 0)
      }
    })]
  });
}
const Coe = Zc(boe), Soe = ["className"], woe = (e) => {
  const {
    classes: t
  } = e;
  return yt({
    root: ["virtualScrollerRenderZone"]
  }, Gn, t);
}, xoe = Dr("div", {
  name: "MuiDataGrid",
  slot: "VirtualScrollerRenderZone",
  overridesResolver: (e, t) => t.virtualScrollerRenderZone
})({
  position: "absolute",
  display: "flex",
  // Prevents margin collapsing when using `getRowSpacing`
  flexDirection: "column"
}), Eoe = nr(function(t, n) {
  const {
    className: i
  } = t, s = Xt(t, Soe), u = In(), d = Vt(), p = woe(d), m = tt(u, () => {
    const v = YC(u);
    return hv(u.current.state).positions[v.firstRowIndex] ?? 0;
  });
  return /* @__PURE__ */ A.jsx(xoe, J({
    className: nt(p.root, i),
    ownerState: d,
    style: {
      transform: `translate3d(0, ${m}px, 0)`
    }
  }, s, {
    ref: n
  }));
}), Toe = {
  includeHeaders: !0,
  includeOutliers: !1,
  outliersFactor: 1.5,
  expand: !1,
  disableColumnVirtualization: !0
}, si = (e) => e.editRows, lH = VC(si, (e, {
  rowId: t,
  editMode: n
}) => n === Yu.Row && !!e[t]), Roe = VC(si, (e, {
  rowId: t,
  field: n
}) => {
  var i;
  return ((i = e[t]) == null ? void 0 : i[n]) ?? null;
}), bC = (e) => e.preferencePanel, Ooe = VC(bC, (e, t) => !!(e.open && e.labelId === t));
var mh = /* @__PURE__ */ function(e) {
  return e.filters = "filters", e.columns = "columns", e;
}(mh || {});
const koe = (e, t) => {
  const {
    classes: n
  } = e, i = {
    root: ["scrollbar", `scrollbar--${t}`],
    content: ["scrollbarContent"]
  };
  return yt(i, Gn, n);
}, uH = Dr("div")({
  position: "absolute",
  display: "inline-block",
  zIndex: 60,
  "&:hover": {
    zIndex: 70
  },
  // In macOS Safari and Gnome Web, scrollbars are overlaid and don't affect the layout. So we consider
  // their size to be 0px throughout all the calculations, but the floating scrollbar container does need
  // to appear and have a real size. We set it to 14px because it seems like an acceptable value and we
  // don't have a method to find the required size for scrollbars on those platforms.
  "--size": "calc(max(var(--DataGrid-scrollbarSize), 14px))"
}), Poe = Dr(uH)({
  width: "var(--size)",
  height: "calc(var(--DataGrid-hasScrollY) * (100% - var(--DataGrid-topContainerHeight) - var(--DataGrid-bottomContainerHeight) - var(--DataGrid-hasScrollX) * var(--DataGrid-scrollbarSize)))",
  overflowY: "auto",
  overflowX: "hidden",
  // Disable focus-visible style, it's a scrollbar.
  outline: 0,
  "& > div": {
    width: "var(--size)"
  },
  top: "var(--DataGrid-topContainerHeight)",
  right: "0px"
}), Moe = Dr(uH)({
  width: "100%",
  height: "var(--size)",
  overflowY: "hidden",
  overflowX: "auto",
  // Disable focus-visible style, it's a scrollbar.
  outline: 0,
  "& > div": {
    height: "var(--size)"
  },
  bottom: "0px"
}), vA = nr(function(t, n) {
  const i = Cs(), s = Vt(), u = w.useRef(!1), d = w.useRef(0), p = w.useRef(null), m = w.useRef(null), v = koe(s, t.position), y = tt(i, ui), C = t.position === "vertical" ? "height" : "width", S = t.position === "vertical" ? "scrollTop" : "scrollLeft", R = t.position === "vertical" ? "top" : "left", O = t.position === "vertical" ? y.hasScrollX : y.hasScrollY, E = y.minimumSize[C] + (O ? y.scrollbarSize : 0), F = (t.position === "vertical" ? y.viewportInnerSize.height : y.viewportOuterSize.width) * (E / y.viewportOuterSize[C]), _ = Nn(() => {
    const D = p.current, H = t.scrollPosition.current;
    if (!D || H[R] === d.current)
      return;
    if (d.current = H[R], u.current) {
      u.current = !1;
      return;
    }
    u.current = !0;
    const K = H[R] / E;
    D[S] = K * F;
  }), L = Nn(() => {
    const D = i.current.virtualScrollerRef.current, H = p.current;
    if (!H)
      return;
    if (u.current) {
      u.current = !1;
      return;
    }
    u.current = !0;
    const K = H[S] / F;
    D[S] = K * E;
  });
  bP(() => {
    const D = i.current.virtualScrollerRef.current, H = p.current, K = {
      passive: !0
    };
    return D.addEventListener("scroll", _, K), H.addEventListener("scroll", L, K), () => {
      D.removeEventListener("scroll", _, K), H.removeEventListener("scroll", L, K);
    };
  }), w.useEffect(() => {
    m.current.style.setProperty(C, `${F}px`);
  }, [F, C]);
  const M = t.position === "vertical" ? Poe : Moe;
  return /* @__PURE__ */ A.jsx(M, {
    ref: Vr(n, p),
    className: v.root,
    style: t.position === "vertical" && s.unstable_listView ? {
      height: "100%",
      top: 0
    } : void 0,
    tabIndex: -1,
    "aria-hidden": "true",
    onFocus: (D) => {
      D.target.blur();
    },
    children: /* @__PURE__ */ A.jsx("div", {
      ref: m,
      className: v.content
    })
  });
}), Ioe = (e) => {
  const {
    classes: t,
    hasScrollX: n,
    hasPinnedRight: i,
    loadingOverlayVariant: s
  } = e;
  return yt({
    root: ["main", i && "main--hasPinnedRight", s === "skeleton" && "main--hasSkeletonLoadingOverlay"],
    scroller: ["virtualScroller", n && "virtualScroller--hasScrollX"]
  }, Gn, t);
}, Doe = Dr("div", {
  name: "MuiDataGrid",
  slot: "VirtualScroller",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.virtualScroller, n.hasScrollX && t["virtualScroller--hasScrollX"]];
  }
})({
  position: "relative",
  height: "100%",
  flexGrow: 1,
  overflow: "scroll",
  scrollbarWidth: "none",
  display: "flex",
  flexDirection: "column",
  "&::-webkit-scrollbar": {
    display: "none"
    /* Safari and Chrome */
  },
  "@media print": {
    overflow: "hidden"
  },
  // See https://github.com/mui/mui-x/issues/10547
  zIndex: 0
}), Noe = (e) => e.dimensions.rightPinnedWidth > 0;
function Loe(e) {
  const t = In(), n = Vt(), i = tt(t, nte), s = tt(t, tte), u = tt(t, Noe), d = tt(t, ite), p = Qre(), m = {
    classes: n.classes,
    hasScrollX: s,
    hasPinnedRight: u,
    loadingOverlayVariant: p.loadingOverlayVariant
  }, v = Ioe(m), y = Wre(), {
    getContainerProps: C,
    getScrollerProps: S,
    getContentProps: R,
    getRenderZoneProps: O,
    getScrollbarVerticalProps: E,
    getScrollbarHorizontalProps: k,
    getRows: F,
    getScrollAreaProps: _
  } = y, L = F();
  return /* @__PURE__ */ A.jsxs(ioe, J({
    className: v.root
  }, C(), {
    ownerState: m,
    children: [/* @__PURE__ */ A.jsx(s0, J({
      scrollDirection: "left"
    }, _())), /* @__PURE__ */ A.jsx(s0, J({
      scrollDirection: "right"
    }, _())), /* @__PURE__ */ A.jsx(s0, J({
      scrollDirection: "up"
    }, _())), /* @__PURE__ */ A.jsx(s0, J({
      scrollDirection: "down"
    }, _())), /* @__PURE__ */ A.jsxs(Doe, J({
      className: v.scroller
    }, S(), {
      ownerState: m,
      children: [/* @__PURE__ */ A.jsxs(loe, {
        children: [!n.unstable_listView && /* @__PURE__ */ A.jsx(noe, {}), /* @__PURE__ */ A.jsx(n.slots.pinnedRows, {
          position: "top",
          virtualScroller: y
        })]
      }), /* @__PURE__ */ A.jsx(aH, J({}, p)), /* @__PURE__ */ A.jsx(hoe, J({}, R(), {
        children: /* @__PURE__ */ A.jsxs(Eoe, J({}, O(), {
          children: [L, /* @__PURE__ */ A.jsx(n.slots.detailPanels, {
            virtualScroller: y
          })]
        }))
      })), d && /* @__PURE__ */ A.jsx(Coe, {
        rowsLength: L.length
      }), /* @__PURE__ */ A.jsx(doe, {
        children: /* @__PURE__ */ A.jsx(n.slots.pinnedRows, {
          position: "bottom",
          virtualScroller: y
        })
      })]
    })), s && !n.unstable_listView && /* @__PURE__ */ A.jsx(vA, J({
      position: "horizontal"
    }, k())), i && /* @__PURE__ */ A.jsx(vA, J({
      position: "vertical"
    }, E())), e.children]
  }));
}
function Foe() {
  var t;
  const e = Vt();
  return e.hideFooter ? null : /* @__PURE__ */ A.jsx(e.slots.footer, J(
    {},
    (t = e.slotProps) == null ? void 0 : t.footer
    /* FIXME: typing error */
  ));
}
let GO;
function _oe() {
  return GO === void 0 && document.createElement("div").focus({
    get preventScroll() {
      return GO = !0, !1;
    }
  }), GO;
}
function Aoe({
  defaultSlots: e,
  slots: t
}) {
  const n = t;
  if (!n || Object.keys(n).length === 0)
    return e;
  const i = J({}, e);
  return Object.keys(n).forEach((s) => {
    const u = s;
    n[u] !== void 0 && (i[u] = n[u]);
  }), i;
}
function $oe(e) {
  var s;
  if ((s = e.slotProps) != null && s.root)
    return e;
  const t = Object.keys(e);
  if (!t.some((u) => u.startsWith("aria-") || u.startsWith("data-")))
    return e;
  const n = {}, i = e.forwardedProps ?? {};
  for (let u = 0; u < t.length; u += 1) {
    const d = t[u];
    d.startsWith("aria-") || d.startsWith("data-") ? i[d] = e[d] : n[d] = e[d];
  }
  return n.forwardedProps = i, n;
}
function joe(e) {
  return w.useMemo(() => $oe(e), [e]);
}
const zoe = [(e) => e.autoPageSize && e.autoHeight && ["MUI X: `<DataGrid autoPageSize={true} autoHeight={true} />` are not valid props.", "You cannot use both the `autoPageSize` and `autoHeight` props at the same time because `autoHeight` scales the height of the Data Grid according to the `pageSize`.", "", "Please remove one of these two props."].join(`
`) || void 0, (e) => e.paginationMode === "client" && e.paginationMeta != null && ['MUI X: Usage of the `paginationMeta` prop with client-side pagination (`paginationMode="client"`) has no effect.', '`paginationMeta` is only meant to be used with `paginationMode="server"`.'].join(`
`) || void 0, (e) => e.signature === gs.DataGrid && e.paginationMode === "client" && nz(e.rowCount) && ['MUI X: Usage of the `rowCount` prop with client side pagination (`paginationMode="client"`) has no effect.', '`rowCount` is only meant to be used with `paginationMode="server"`.'].join(`
`) || void 0, (e) => e.paginationMode === "server" && e.rowCount == null && !e.unstable_dataSource && ["MUI X: The `rowCount` prop must be passed using `paginationMode='server'`", "For more detail, see http://mui.com/components/data-grid/pagination/#index-based-pagination"].join(`
`) || void 0];
function Hoe(e, t) {
  t.forEach((n) => {
    const i = n(e);
    i && tl(i, "error");
  });
}
const Voe = (e) => {
  const t = e.match(/^__row_group_by_columns_group_(.*)__$/);
  return t ? t[1] : null;
}, Boe = (e) => e === yz || Voe(e) !== null, cH = (e, t) => {
  if (e)
    if (t) {
      if (e === jn.LEFT)
        return "right";
      if (e === jn.RIGHT)
        return "left";
    } else {
      if (e === jn.LEFT)
        return "left";
      if (e === jn.RIGHT)
        return "right";
    }
};
function qE(e, t, n, i) {
  const s = cH(n, t);
  return !s || i === void 0 || (e[s] = i), e;
}
const Uoe = ["column", "row", "rowId", "rowNode", "align", "children", "colIndex", "width", "className", "style", "colSpan", "disableDragEvents", "isNotVisible", "pinnedOffset", "pinnedPosition", "showRightBorder", "showLeftBorder", "onClick", "onDoubleClick", "onMouseDown", "onMouseUp", "onMouseOver", "onKeyDown", "onKeyUp", "onDragEnter", "onDragOver"], Goe = ["changeReason", "unstable_updateValueOnRender"];
jn.LEFT + "", nf.LEFT, jn.RIGHT + "", nf.RIGHT, jn.NONE + "", jn.VIRTUAL + "";
const Woe = (e) => {
  const {
    align: t,
    showLeftBorder: n,
    showRightBorder: i,
    pinnedPosition: s,
    isEditable: u,
    isSelected: d,
    isSelectionMode: p,
    classes: m
  } = e, v = {
    root: ["cell", `cell--text${Ue(t)}`, d && "selected", u && "cell--editable", n && "cell--withLeftBorder", i && "cell--withRightBorder", s === jn.LEFT && "cell--pinnedLeft", s === jn.RIGHT && "cell--pinnedRight", p && !u && "cell--selectionMode"]
  };
  return yt(v, Gn, m);
};
let yA = !1;
const dH = nr(function(t, n) {
  var Me, ht, xt, zt;
  const {
    column: i,
    row: s,
    rowId: u,
    rowNode: d,
    align: p,
    colIndex: m,
    width: v,
    className: y,
    style: C,
    colSpan: S,
    disableDragEvents: R,
    isNotVisible: O,
    pinnedOffset: E,
    pinnedPosition: k,
    showRightBorder: F,
    showLeftBorder: _,
    onClick: L,
    onDoubleClick: M,
    onMouseDown: D,
    onMouseUp: H,
    onMouseOver: K,
    onKeyDown: Q,
    onKeyUp: z,
    onDragEnter: I,
    onDragOver: G
  } = t, W = Xt(t, Uoe), B = Cs(), ee = Vt(), U = zi(), q = i.field, Y = gC(B, Roe, {
    rowId: u,
    field: q
  }), re = CM().hooks.useCellAggregationResult(u, q), X = Y ? yr.Edit : yr.View, j = B.current.getCellParamsForRow(u, q, s, {
    colDef: i,
    cellMode: X,
    rowNode: d,
    tabIndex: tt(B, () => {
      const bt = fM(B);
      return bt && bt.field === q && bt.id === u ? 0 : -1;
    }),
    hasFocus: tt(B, () => {
      const bt = Sa(B);
      return (bt == null ? void 0 : bt.id) === u && bt.field === q;
    })
  });
  j.api = B.current, re && (j.value = re.value, j.formattedValue = i.valueFormatter ? i.valueFormatter(j.value, s, i, B) : j.value);
  const ie = tt(B, () => B.current.unstable_applyPipeProcessors("isCellSelected", !1, {
    id: u,
    field: q
  })), fe = tt(B, tH), ce = tt(B, Hre), {
    hasFocus: me,
    isEditable: ge = !1,
    value: de
  } = j, pe = i.type === "actions" && ((Me = i.getActions) == null ? void 0 : Me.call(i, B.current.getRowParams(u)).some((bt) => !bt.props.disabled)), be = (X === "view" || !ge) && !pe ? j.tabIndex : -1, {
    classes: Ce,
    getCellClassName: Re
  } = ee, we = [tt(B, () => B.current.unstable_applyPipeProcessors("cellClassName", [], {
    id: u,
    field: q
  }).filter(Boolean).join(" "))];
  i.cellClassName && we.push(typeof i.cellClassName == "function" ? i.cellClassName(j) : i.cellClassName), i.display === "flex" && we.push(ae["cell--flex"]), Re && we.push(Re(j));
  const _e = j.formattedValue ?? de, He = w.useRef(null), et = Vr(n, He), Ne = w.useRef(null), rt = ee.cellSelection ?? !1, it = {
    align: p,
    showLeftBorder: _,
    showRightBorder: F,
    isEditable: ge,
    classes: ee.classes,
    pinnedPosition: k,
    isSelected: ie,
    isSelectionMode: rt
  }, wt = Woe(it), gt = w.useCallback((bt) => (Ge) => {
    const Et = B.current.getCellParams(u, q || "");
    B.current.publishEvent(bt, Et, Ge), H && H(Ge);
  }, [B, q, H, u]), ot = w.useCallback((bt) => (Ge) => {
    const Et = B.current.getCellParams(u, q || "");
    B.current.publishEvent(bt, Et, Ge), D && D(Ge);
  }, [B, q, D, u]), jt = w.useCallback((bt, Ge) => (Et) => {
    if (!B.current.getRow(u))
      return;
    const At = B.current.getCellParams(u, q || "");
    B.current.publishEvent(bt, At, Et), Ge && Ge(Et);
  }, [B, q, u]), ct = ((ht = fe[u]) == null ? void 0 : ht[q]) ?? !1, Tt = ((xt = ce[u]) == null ? void 0 : xt[q]) ?? 1, Rt = w.useMemo(() => {
    if (O)
      return {
        padding: 0,
        opacity: 0,
        width: 0,
        height: 0,
        border: 0
      };
    const bt = qE(J({
      "--width": `${v}px`
    }, C), U, k, E), Ge = k === jn.LEFT, Et = k === jn.RIGHT;
    return Tt > 1 && (bt.height = `calc(var(--height) * ${Tt})`, bt.zIndex = 10, (Ge || Et) && (bt.zIndex = 40)), bt;
  }, [v, O, C, E, k, U, Tt]);
  if (w.useEffect(() => {
    if (!me || X === yr.Edit)
      return;
    const bt = ao(B.current.rootElementRef.current);
    if (He.current && !He.current.contains(bt.activeElement)) {
      const Ge = He.current.querySelector('[tabindex="0"]'), Et = Ne.current || Ge || He.current;
      if (_oe())
        Et.focus({
          preventScroll: !0
        });
      else {
        const At = B.current.getScrollPosition();
        Et.focus(), B.current.scroll(At);
      }
    }
  }, [me, X, B]), ct)
    return /* @__PURE__ */ A.jsx("div", {
      "data-colindex": m,
      role: "presentation",
      style: J({
        width: "var(--width)"
      }, Rt)
    });
  let Lt = W.onFocus;
  process.env.NODE_ENV === "test" && ((zt = ee.experimentalFeatures) != null && zt.warnIfFocusStateIsNotSynced) && (Lt = (bt) => {
    const Ge = Sa(B);
    if ((Ge == null ? void 0 : Ge.id) === u && Ge.field === q) {
      typeof W.onFocus == "function" && W.onFocus(bt);
      return;
    }
    yA || (console.warn([`MUI X: The cell with id=${u} and field=${q} received focus.`, `According to the state, the focus should be at id=${Ge == null ? void 0 : Ge.id}, field=${Ge == null ? void 0 : Ge.field}.`, "Not syncing the state may cause unwanted behaviors since the `cellFocusIn` event won't be fired.", "Call `fireEvent.mouseUp` before the `fireEvent.click` to sync the focus with the state."].join(`
`)), yA = !0);
  });
  let vt, Qe;
  if (Y === null && i.renderCell && (vt = i.renderCell(j)), Y !== null && i.renderEditCell) {
    const bt = B.current.getRowWithUpdatedValues(u, i.field), Ge = Xt(Y, Goe), Et = i.valueFormatter ? i.valueFormatter(Y.value, bt, i, B) : j.formattedValue, At = J({}, j, {
      row: bt,
      formattedValue: Et
    }, Ge);
    vt = i.renderEditCell(At), we.push(ae["cell--editing"]), we.push(Ce == null ? void 0 : Ce["cell--editing"]);
  }
  if (vt === void 0) {
    const bt = _e == null ? void 0 : _e.toString();
    vt = bt, Qe = bt;
  }
  /* @__PURE__ */ w.isValidElement(vt) && pe && (vt = /* @__PURE__ */ w.cloneElement(vt, {
    focusElementRef: Ne
  }));
  const Oe = R ? null : {
    onDragEnter: jt("cellDragEnter", I),
    onDragOver: jt("cellDragOver", G)
  };
  return /* @__PURE__ */ A.jsx("div", J({
    className: nt(wt.root, we, y),
    role: "gridcell",
    "data-field": q,
    "data-colindex": m,
    "aria-colindex": m + 1,
    "aria-colspan": S,
    "aria-rowspan": Tt,
    style: Rt,
    title: Qe,
    tabIndex: be,
    onClick: jt("cellClick", L),
    onDoubleClick: jt("cellDoubleClick", M),
    onMouseOver: jt("cellMouseOver", K),
    onMouseDown: ot("cellMouseDown"),
    onMouseUp: gt("cellMouseUp"),
    onKeyDown: jt("cellKeyDown", Q),
    onKeyUp: jt("cellKeyUp", z)
  }, Oe, W, {
    onFocus: Lt,
    ref: et,
    children: vt
  }));
});
process.env.NODE_ENV !== "production" && (dH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  align: a.oneOf(["center", "left", "right"]).isRequired,
  colIndex: a.number.isRequired,
  colSpan: a.number,
  column: a.object.isRequired,
  disableDragEvents: a.bool,
  isNotVisible: a.bool.isRequired,
  pinnedOffset: a.number,
  pinnedPosition: a.oneOf([0, 1, 2, 3]).isRequired,
  row: a.object.isRequired,
  rowId: a.oneOfType([a.number, a.string]).isRequired,
  rowNode: a.object.isRequired,
  showLeftBorder: a.bool.isRequired,
  showRightBorder: a.bool.isRequired,
  width: a.number.isRequired
});
const qoe = Zc(dH), Koe = ["field", "type", "align", "width", "height", "empty", "style", "className"], bA = "1.3em", Yoe = "1.2em", CA = [40, 80], Xoe = {
  number: [40, 60],
  string: [40, 80],
  date: [40, 60],
  dateTime: [60, 80],
  singleSelect: [40, 80]
}, Qoe = (e) => {
  const {
    align: t,
    classes: n,
    empty: i
  } = e, s = {
    root: ["cell", "cellSkeleton", `cell--text${t ? Ue(t) : "Left"}`, i && "cellEmpty"]
  };
  return yt(s, Gn, n);
}, Joe = Fte(12345);
function fH(e) {
  const {
    field: t,
    type: n,
    align: i,
    width: s,
    height: u,
    empty: d = !1,
    style: p,
    className: m
  } = e, v = Xt(e, Koe), C = {
    classes: Vt().classes,
    align: i,
    empty: d
  }, S = Qoe(C), R = w.useMemo(() => {
    if (n === "boolean" || n === "actions")
      return {
        variant: "circular",
        width: bA,
        height: bA
      };
    const [E, k] = n ? Xoe[n] ?? CA : CA;
    return {
      variant: "text",
      width: `${Math.round(Joe(E, k))}%`,
      height: Yoe
    };
  }, [n]);
  return /* @__PURE__ */ A.jsx("div", J({
    "data-field": t,
    className: nt(S.root, m),
    style: J({
      height: u,
      maxWidth: s,
      minWidth: s
    }, p)
  }, v, {
    children: !d && /* @__PURE__ */ A.jsx(a2, J({}, R))
  }));
}
process.env.NODE_ENV !== "production" && (fH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  align: a.string,
  /**
   * If `true`, the cell will not display the skeleton but still reserve the cell space.
   * @default false
   */
  empty: a.bool,
  field: a.string,
  height: a.oneOfType([a.oneOf(["auto"]), a.number]),
  type: a.oneOf(["actions", "boolean", "custom", "date", "dateTime", "number", "singleSelect", "string"]),
  width: a.oneOfType([a.number, a.string])
});
const Zoe = Zc(fH);
function eie(e) {
  return e.vars ? e.vars.palette.TableCell.border : e.palette.mode === "light" ? Cf($n(e.palette.divider, 1), 0.88) : bf($n(e.palette.divider, 1), 0.68);
}
const tie = 10, l0 = -5, bg = 1, SA = {
  width: 3,
  rx: 1.5,
  x: 10.5
}, nie = "/* emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason */", rie = (e) => e.dimensions.hasScrollX && (!e.dimensions.hasScrollY || e.dimensions.scrollbarSize === 0), oie = Be("div", {
  name: "MuiDataGrid",
  slot: "Root",
  overridesResolver: (e, t) => [
    // Root overrides
    t.root,
    {
      [`&.${ae.autoHeight}`]: t.autoHeight
    },
    {
      [`&.${ae.autosizing}`]: t.autosizing
    },
    {
      [`&.${ae["root--densityStandard"]}`]: t["root--densityStandard"]
    },
    {
      [`&.${ae["root--densityComfortable"]}`]: t["root--densityComfortable"]
    },
    {
      [`&.${ae["root--densityCompact"]}`]: t["root--densityCompact"]
    },
    {
      [`&.${ae["root--disableUserSelection"]}`]: t["root--disableUserSelection"]
    },
    {
      [`&.${ae["root--noToolbar"]}`]: t["root--noToolbar"]
    },
    {
      [`&.${ae.withVerticalBorder}`]: t.withVerticalBorder
    },
    // Child element overrides
    // - Only declare overrides here for class names that are not applied to `styled` components.
    // - For `styled` components, declare overrides in the component itself.
    {
      [`& .${ae.actionsCell}`]: t.actionsCell
    },
    {
      [`& .${ae.booleanCell}`]: t.booleanCell
    },
    {
      [`& .${ae.cell}`]: t.cell
    },
    {
      [`& .${ae["cell--editable"]}`]: t["cell--editable"]
    },
    {
      [`& .${ae["cell--editing"]}`]: t["cell--editing"]
    },
    {
      [`& .${ae["cell--flex"]}`]: t["cell--flex"]
    },
    {
      [`& .${ae["cell--pinnedLeft"]}`]: t["cell--pinnedLeft"]
    },
    {
      [`& .${ae["cell--pinnedRight"]}`]: t["cell--pinnedRight"]
    },
    {
      [`& .${ae["cell--rangeBottom"]}`]: t["cell--rangeBottom"]
    },
    {
      [`& .${ae["cell--rangeLeft"]}`]: t["cell--rangeLeft"]
    },
    {
      [`& .${ae["cell--rangeRight"]}`]: t["cell--rangeRight"]
    },
    {
      [`& .${ae["cell--rangeTop"]}`]: t["cell--rangeTop"]
    },
    {
      [`& .${ae["cell--selectionMode"]}`]: t["cell--selectionMode"]
    },
    {
      [`& .${ae["cell--textCenter"]}`]: t["cell--textCenter"]
    },
    {
      [`& .${ae["cell--textLeft"]}`]: t["cell--textLeft"]
    },
    {
      [`& .${ae["cell--textRight"]}`]: t["cell--textRight"]
    },
    {
      [`& .${ae["cell--withLeftBorder"]}`]: t["cell--withLeftBorder"]
    },
    {
      [`& .${ae["cell--withRightBorder"]}`]: t["cell--withRightBorder"]
    },
    {
      [`& .${ae.cellCheckbox}`]: t.cellCheckbox
    },
    {
      [`& .${ae.cellEmpty}`]: t.cellEmpty
    },
    {
      [`& .${ae.cellOffsetLeft}`]: t.cellOffsetLeft
    },
    {
      [`& .${ae.cellSkeleton}`]: t.cellSkeleton
    },
    {
      [`& .${ae.checkboxInput}`]: t.checkboxInput
    },
    {
      [`& .${ae.columnHeader}`]: t.columnHeader
    },
    {
      [`& .${ae["columnHeader--alignCenter"]}`]: t["columnHeader--alignCenter"]
    },
    {
      [`& .${ae["columnHeader--alignLeft"]}`]: t["columnHeader--alignLeft"]
    },
    {
      [`& .${ae["columnHeader--alignRight"]}`]: t["columnHeader--alignRight"]
    },
    {
      [`& .${ae["columnHeader--dragging"]}`]: t["columnHeader--dragging"]
    },
    {
      [`& .${ae["columnHeader--emptyGroup"]}`]: t["columnHeader--emptyGroup"]
    },
    {
      [`& .${ae["columnHeader--filledGroup"]}`]: t["columnHeader--filledGroup"]
    },
    {
      [`& .${ae["columnHeader--filtered"]}`]: t["columnHeader--filtered"]
    },
    {
      [`& .${ae["columnHeader--last"]}`]: t["columnHeader--last"]
    },
    {
      [`& .${ae["columnHeader--lastUnpinned"]}`]: t["columnHeader--lastUnpinned"]
    },
    {
      [`& .${ae["columnHeader--moving"]}`]: t["columnHeader--moving"]
    },
    {
      [`& .${ae["columnHeader--numeric"]}`]: t["columnHeader--numeric"]
    },
    {
      [`& .${ae["columnHeader--pinnedLeft"]}`]: t["columnHeader--pinnedLeft"]
    },
    {
      [`& .${ae["columnHeader--pinnedRight"]}`]: t["columnHeader--pinnedRight"]
    },
    {
      [`& .${ae["columnHeader--siblingFocused"]}`]: t["columnHeader--siblingFocused"]
    },
    {
      [`& .${ae["columnHeader--sortable"]}`]: t["columnHeader--sortable"]
    },
    {
      [`& .${ae["columnHeader--sorted"]}`]: t["columnHeader--sorted"]
    },
    {
      [`& .${ae["columnHeader--withLeftBorder"]}`]: t["columnHeader--withLeftBorder"]
    },
    {
      [`& .${ae["columnHeader--withRightBorder"]}`]: t["columnHeader--withRightBorder"]
    },
    {
      [`& .${ae.columnHeaderCheckbox}`]: t.columnHeaderCheckbox
    },
    {
      [`& .${ae.columnHeaderDraggableContainer}`]: t.columnHeaderDraggableContainer
    },
    {
      [`& .${ae.columnHeaderTitleContainer}`]: t.columnHeaderTitleContainer
    },
    {
      [`& .${ae.columnHeaderTitleContainerContent}`]: t.columnHeaderTitleContainerContent
    },
    {
      [`& .${ae.columnSeparator}`]: t.columnSeparator
    },
    {
      [`& .${ae["columnSeparator--resizable"]}`]: t["columnSeparator--resizable"]
    },
    {
      [`& .${ae["columnSeparator--resizing"]}`]: t["columnSeparator--resizing"]
    },
    {
      [`& .${ae["columnSeparator--sideLeft"]}`]: t["columnSeparator--sideLeft"]
    },
    {
      [`& .${ae["columnSeparator--sideRight"]}`]: t["columnSeparator--sideRight"]
    },
    {
      [`& .${ae["container--bottom"]}`]: t["container--bottom"]
    },
    {
      [`& .${ae["container--top"]}`]: t["container--top"]
    },
    {
      [`& .${ae.detailPanelToggleCell}`]: t.detailPanelToggleCell
    },
    {
      [`& .${ae["detailPanelToggleCell--expanded"]}`]: t["detailPanelToggleCell--expanded"]
    },
    {
      [`& .${ae.editBooleanCell}`]: t.editBooleanCell
    },
    {
      [`& .${ae.filterIcon}`]: t.filterIcon
    },
    {
      [`& .${ae["filler--borderBottom"]}`]: t["filler--borderBottom"]
    },
    {
      [`& .${ae["filler--pinnedLeft"]}`]: t["filler--pinnedLeft"]
    },
    {
      [`& .${ae["filler--pinnedRight"]}`]: t["filler--pinnedRight"]
    },
    {
      [`& .${ae.groupingCriteriaCell}`]: t.groupingCriteriaCell
    },
    {
      [`& .${ae.groupingCriteriaCellLoadingContainer}`]: t.groupingCriteriaCellLoadingContainer
    },
    {
      [`& .${ae.groupingCriteriaCellToggle}`]: t.groupingCriteriaCellToggle
    },
    {
      [`& .${ae.headerFilterRow}`]: t.headerFilterRow
    },
    {
      [`& .${ae.iconSeparator}`]: t.iconSeparator
    },
    {
      [`& .${ae.menuIcon}`]: t.menuIcon
    },
    {
      [`& .${ae.menuIconButton}`]: t.menuIconButton
    },
    {
      [`& .${ae.menuList}`]: t.menuList
    },
    {
      [`& .${ae.menuOpen}`]: t.menuOpen
    },
    {
      [`& .${ae.overlayWrapperInner}`]: t.overlayWrapperInner
    },
    {
      [`& .${ae.pinnedRows}`]: t.pinnedRows
    },
    {
      [`& .${ae["pinnedRows--bottom"]}`]: t["pinnedRows--bottom"]
    },
    {
      [`& .${ae["pinnedRows--top"]}`]: t["pinnedRows--top"]
    },
    {
      [`& .${ae.row}`]: t.row
    },
    {
      [`& .${ae["row--borderBottom"]}`]: t["row--borderBottom"]
    },
    {
      [`& .${ae["row--detailPanelExpanded"]}`]: t["row--detailPanelExpanded"]
    },
    {
      [`& .${ae["row--dragging"]}`]: t["row--dragging"]
    },
    {
      [`& .${ae["row--dynamicHeight"]}`]: t["row--dynamicHeight"]
    },
    {
      [`& .${ae["row--editable"]}`]: t["row--editable"]
    },
    {
      [`& .${ae["row--editing"]}`]: t["row--editing"]
    },
    {
      [`& .${ae["row--firstVisible"]}`]: t["row--firstVisible"]
    },
    {
      [`& .${ae["row--lastVisible"]}`]: t["row--lastVisible"]
    },
    {
      [`& .${ae.rowReorderCell}`]: t.rowReorderCell
    },
    {
      [`& .${ae["rowReorderCell--draggable"]}`]: t["rowReorderCell--draggable"]
    },
    {
      [`& .${ae.rowReorderCellContainer}`]: t.rowReorderCellContainer
    },
    {
      [`& .${ae.rowReorderCellPlaceholder}`]: t.rowReorderCellPlaceholder
    },
    {
      [`& .${ae.rowSkeleton}`]: t.rowSkeleton
    },
    {
      [`& .${ae.scrollbar}`]: t.scrollbar
    },
    {
      [`& .${ae["scrollbar--horizontal"]}`]: t["scrollbar--horizontal"]
    },
    {
      [`& .${ae["scrollbar--vertical"]}`]: t["scrollbar--vertical"]
    },
    {
      [`& .${ae.scrollbarFiller}`]: t.scrollbarFiller
    },
    {
      [`& .${ae["scrollbarFiller--borderBottom"]}`]: t["scrollbarFiller--borderBottom"]
    },
    {
      [`& .${ae["scrollbarFiller--borderTop"]}`]: t["scrollbarFiller--borderTop"]
    },
    {
      [`& .${ae["scrollbarFiller--header"]}`]: t["scrollbarFiller--header"]
    },
    {
      [`& .${ae["scrollbarFiller--pinnedRight"]}`]: t["scrollbarFiller--pinnedRight"]
    },
    {
      [`& .${ae.sortIcon}`]: t.sortIcon
    },
    {
      [`& .${ae.treeDataGroupingCell}`]: t.treeDataGroupingCell
    },
    {
      [`& .${ae.treeDataGroupingCellLoadingContainer}`]: t.treeDataGroupingCellLoadingContainer
    },
    {
      [`& .${ae.treeDataGroupingCellToggle}`]: t.treeDataGroupingCellToggle
    },
    {
      [`& .${ae.withBorderColor}`]: t.withBorderColor
    }
  ]
})(({
  theme: e
}) => {
  var Q, z;
  const t = Cs(), n = tt(t, rie), i = eie(e), s = e.shape.borderRadius, u = e.vars ? e.vars.palette.background.default : ((Q = e.mixins.MuiDataGrid) == null ? void 0 : Q.containerBackground) ?? e.palette.background.default, d = ((z = e.mixins.MuiDataGrid) == null ? void 0 : z.pinnedBackground) ?? u, p = e.vars ? `rgba(${e.vars.palette.background.defaultChannel} / ${e.vars.palette.action.disabledOpacity})` : $n(e.palette.background.default, e.palette.action.disabledOpacity), m = (e.vars || e).palette.action.hoverOpacity, v = (e.vars || e).palette.action.hover, y = (e.vars || e).palette.action.selectedOpacity, C = e.vars ? `calc(${m} + ${y})` : m + y, S = e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / ${y})` : $n(e.palette.primary.main, y), R = e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / ${C})` : $n(e.palette.primary.main, C), O = e.vars ? sie : iie, E = (I) => ({
    [`& .${ae["cell--pinnedLeft"]}, & .${ae["cell--pinnedRight"]}`]: {
      backgroundColor: I,
      "&.Mui-selected": {
        backgroundColor: O(I, S, y),
        "&:hover": {
          backgroundColor: O(I, S, C)
        }
      }
    }
  }), k = O(d, v, m), F = E(k), _ = O(d, S, y), L = E(_), M = O(d, R, C), D = E(M), H = {
    backgroundColor: S,
    "&:hover": {
      backgroundColor: R,
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: S
      }
    }
  };
  return J({
    "--unstable_DataGrid-radius": typeof s == "number" ? `${s}px` : s,
    "--unstable_DataGrid-headWeight": e.typography.fontWeightMedium,
    "--unstable_DataGrid-overlayBackground": p,
    "--DataGrid-containerBackground": u,
    "--DataGrid-pinnedBackground": d,
    "--DataGrid-rowBorderColor": i,
    "--DataGrid-cellOffsetMultiplier": 2,
    "--DataGrid-width": "0px",
    "--DataGrid-hasScrollX": "0",
    "--DataGrid-hasScrollY": "0",
    "--DataGrid-scrollbarSize": "10px",
    "--DataGrid-rowWidth": "0px",
    "--DataGrid-columnsTotalWidth": "0px",
    "--DataGrid-leftPinnedWidth": "0px",
    "--DataGrid-rightPinnedWidth": "0px",
    "--DataGrid-headerHeight": "0px",
    "--DataGrid-headersTotalHeight": "0px",
    "--DataGrid-topContainerHeight": "0px",
    "--DataGrid-bottomContainerHeight": "0px",
    flex: 1,
    boxSizing: "border-box",
    position: "relative",
    borderWidth: "1px",
    borderStyle: "solid",
    borderColor: i,
    borderRadius: "var(--unstable_DataGrid-radius)",
    color: (e.vars || e).palette.text.primary
  }, e.typography.body2, {
    outline: "none",
    height: "100%",
    display: "flex",
    minWidth: 0,
    // See https://github.com/mui/mui-x/issues/8547
    minHeight: 0,
    flexDirection: "column",
    overflow: "hidden",
    overflowAnchor: "none",
    // Keep the same scrolling position
    transform: "translate(0, 0)",
    // Create a stacking context to keep scrollbars from showing on top
    [`.${ae.main} > *:first-child${nie}`]: {
      borderTopLeftRadius: "var(--unstable_DataGrid-radius)",
      borderTopRightRadius: "var(--unstable_DataGrid-radius)"
    },
    [`&.${ae.autoHeight}`]: {
      height: "auto"
    },
    [`&.${ae.autosizing}`]: {
      [`& .${ae.columnHeaderTitleContainerContent} > *`]: {
        overflow: "visible !important"
      },
      "@media (hover: hover)": {
        [`& .${ae.menuIcon}`]: {
          width: "0 !important",
          visibility: "hidden !important"
        }
      },
      [`& .${ae.cell}`]: {
        overflow: "visible !important",
        whiteSpace: "nowrap",
        minWidth: "max-content !important",
        maxWidth: "max-content !important"
      },
      [`& .${ae.groupingCriteriaCell}`]: {
        width: "unset"
      },
      [`& .${ae.treeDataGroupingCell}`]: {
        width: "unset"
      }
    },
    [`& .${ae.columnHeader}, & .${ae.cell}`]: {
      WebkitTapHighlightColor: "transparent",
      padding: "0 10px",
      boxSizing: "border-box"
    },
    [`& .${ae.columnHeader}:focus-within, & .${ae.cell}:focus-within`]: {
      outline: `solid ${e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / 0.5)` : $n(e.palette.primary.main, 0.5)} ${bg}px`,
      outlineOffset: bg * -1
    },
    [`& .${ae.columnHeader}:focus, & .${ae.cell}:focus`]: {
      outline: `solid ${e.palette.primary.main} ${bg}px`,
      outlineOffset: bg * -1
    },
    // Hide the column separator when:
    // - the column is focused and has an outline
    // - the next column is focused and has an outline
    // - the column has a left or right border
    // - the next column is pinned right and has a left border
    [`& .${ae.columnHeader}:focus,
      & .${ae["columnHeader--withLeftBorder"]},
      & .${ae["columnHeader--withRightBorder"]},
      & .${ae["columnHeader--siblingFocused"]},
      & .${ae["virtualScroller--hasScrollX"]} .${ae["columnHeader--lastUnpinned"]},
      & .${ae["virtualScroller--hasScrollX"]} .${ae["columnHeader--last"]}
      `]: {
      [`& .${ae.columnSeparator}`]: {
        opacity: 0
      },
      // Show resizable separators at all times on touch devices
      "@media (hover: none)": {
        [`& .${ae["columnSeparator--resizable"]}`]: {
          opacity: 1
        }
      },
      [`& .${ae["columnSeparator--resizable"]}:hover`]: {
        opacity: 1
      }
    },
    [`&.${ae["root--noToolbar"]} [aria-rowindex="1"] [aria-colindex="1"]`]: {
      borderTopLeftRadius: "calc(var(--unstable_DataGrid-radius) - 1px)"
    },
    [`&.${ae["root--noToolbar"]} [aria-rowindex="1"] .${ae["columnHeader--last"]}`]: {
      borderTopRightRadius: n ? "calc(var(--unstable_DataGrid-radius) - 1px)" : void 0
    },
    [`& .${ae.columnHeaderCheckbox}, & .${ae.cellCheckbox}`]: {
      padding: 0,
      justifyContent: "center",
      alignItems: "center"
    },
    [`& .${ae.columnHeader}`]: {
      position: "relative",
      display: "flex",
      alignItems: "center"
    },
    [`& .${ae["virtualScroller--hasScrollX"]} .${ae["columnHeader--last"]}`]: {
      overflow: "hidden"
    },
    [`& .${ae["columnHeader--sorted"]} .${ae.iconButtonContainer}, & .${ae["columnHeader--filtered"]} .${ae.iconButtonContainer}`]: {
      visibility: "visible",
      width: "auto"
    },
    [`& .${ae.columnHeader}:not(.${ae["columnHeader--sorted"]}) .${ae.sortButton}`]: {
      opacity: 0,
      transition: e.transitions.create(["opacity"], {
        duration: e.transitions.duration.shorter
      })
    },
    [`& .${ae.columnHeaderTitleContainer}`]: {
      display: "flex",
      alignItems: "center",
      gap: e.spacing(0.25),
      minWidth: 0,
      flex: 1,
      whiteSpace: "nowrap",
      overflow: "hidden"
    },
    [`& .${ae.columnHeaderTitleContainerContent}`]: {
      overflow: "hidden",
      display: "flex",
      alignItems: "center"
    },
    [`& .${ae["columnHeader--filledGroup"]} .${ae.columnHeaderTitleContainer}`]: {
      borderBottomWidth: "1px",
      borderBottomStyle: "solid",
      boxSizing: "border-box"
    },
    [`& .${ae.sortIcon}, & .${ae.filterIcon}`]: {
      fontSize: "inherit"
    },
    [`& .${ae["columnHeader--sortable"]}`]: {
      cursor: "pointer"
    },
    [`& .${ae["columnHeader--alignCenter"]} .${ae.columnHeaderTitleContainer}`]: {
      justifyContent: "center"
    },
    [`& .${ae["columnHeader--alignRight"]} .${ae.columnHeaderDraggableContainer}, & .${ae["columnHeader--alignRight"]} .${ae.columnHeaderTitleContainer}`]: {
      flexDirection: "row-reverse"
    },
    [`& .${ae["columnHeader--alignCenter"]} .${ae.menuIcon}`]: {
      marginLeft: "auto"
    },
    [`& .${ae["columnHeader--alignRight"]} .${ae.menuIcon}`]: {
      marginRight: "auto",
      marginLeft: -5
    },
    [`& .${ae["columnHeader--moving"]}`]: {
      backgroundColor: (e.vars || e).palette.action.hover
    },
    [`& .${ae["columnHeader--pinnedLeft"]}, & .${ae["columnHeader--pinnedRight"]}`]: {
      position: "sticky",
      zIndex: 40,
      // Should be above the column separator
      background: "var(--DataGrid-pinnedBackground)"
    },
    [`& .${ae.columnSeparator}`]: {
      position: "absolute",
      overflow: "hidden",
      zIndex: 30,
      display: "flex",
      flexDirection: "column",
      justifyContent: "center",
      alignItems: "center",
      maxWidth: tie,
      color: i
    },
    [`& .${ae.columnHeaders}`]: {
      width: "var(--DataGrid-rowWidth)"
    },
    "@media (hover: hover)": {
      [`& .${ae.columnHeader}:hover`]: {
        [`& .${ae.menuIcon}`]: {
          width: "auto",
          visibility: "visible"
        },
        [`& .${ae.iconButtonContainer}`]: {
          visibility: "visible",
          width: "auto"
        }
      },
      [`& .${ae.columnHeader}:not(.${ae["columnHeader--sorted"]}):hover .${ae.sortButton}`]: {
        opacity: 0.5
      }
    },
    "@media (hover: none)": {
      [`& .${ae.columnHeader} .${ae.menuIcon}`]: {
        width: "auto",
        visibility: "visible"
      },
      [`& .${ae.columnHeader}:focus,
        & .${ae["columnHeader--siblingFocused"]}`]: {
        [`.${ae["columnSeparator--resizable"]}`]: {
          color: (e.vars || e).palette.primary.main
        }
      }
    },
    [`& .${ae["columnSeparator--sideLeft"]}`]: {
      left: l0
    },
    [`& .${ae["columnSeparator--sideRight"]}`]: {
      right: l0
    },
    [`& .${ae["columnHeader--withRightBorder"]} .${ae["columnSeparator--sideLeft"]}`]: {
      left: l0 - 0.5
    },
    [`& .${ae["columnHeader--withRightBorder"]} .${ae["columnSeparator--sideRight"]}`]: {
      right: l0 - 0.5
    },
    [`& .${ae["columnSeparator--resizable"]}`]: {
      cursor: "col-resize",
      touchAction: "none",
      [`&.${ae["columnSeparator--resizing"]}`]: {
        color: (e.vars || e).palette.primary.main
      },
      // Always appear as draggable on touch devices
      "@media (hover: none)": {
        [`& .${ae.iconSeparator} rect`]: SA
      },
      "@media (hover: hover)": {
        "&:hover": {
          color: (e.vars || e).palette.primary.main,
          [`& .${ae.iconSeparator} rect`]: SA
        }
      },
      "& svg": {
        pointerEvents: "none"
      }
    },
    [`& .${ae.iconSeparator}`]: {
      color: "inherit",
      transition: e.transitions.create(["color", "width"], {
        duration: e.transitions.duration.shortest
      })
    },
    [`& .${ae.menuIcon}`]: {
      width: 0,
      visibility: "hidden",
      fontSize: 20,
      marginRight: -5,
      display: "flex",
      alignItems: "center"
    },
    [`.${ae.menuOpen}`]: {
      visibility: "visible",
      width: "auto"
    },
    [`& .${ae.headerFilterRow}`]: {
      [`& .${ae.columnHeader}`]: {
        boxSizing: "border-box",
        borderBottom: "1px solid var(--DataGrid-rowBorderColor)"
      }
    },
    /* Bottom border of the top-container */
    [`& .${ae["row--borderBottom"]} .${ae.columnHeader},
      & .${ae["row--borderBottom"]} .${ae.filler},
      & .${ae["row--borderBottom"]} .${ae.scrollbarFiller}`]: {
      borderBottom: "1px solid var(--DataGrid-rowBorderColor)"
    },
    [`& .${ae["row--borderBottom"]} .${ae.cell}`]: {
      borderBottom: "1px solid var(--rowBorderColor)"
    },
    /* Row styles */
    [`.${ae.row}`]: {
      display: "flex",
      width: "var(--DataGrid-rowWidth)",
      breakInside: "avoid",
      // Avoid the row to be broken in two different print pages.
      "--rowBorderColor": "var(--DataGrid-rowBorderColor)",
      [`&.${ae["row--firstVisible"]}`]: {
        "--rowBorderColor": "transparent"
      },
      "&:hover": {
        backgroundColor: (e.vars || e).palette.action.hover,
        // Reset on touch devices, it doesn't add specificity
        "@media (hover: none)": {
          backgroundColor: "transparent"
        }
      },
      [`&.${ae.rowSkeleton}:hover`]: {
        backgroundColor: "transparent"
      },
      "&.Mui-selected": H
    },
    [`& .${ae["container--top"]}, & .${ae["container--bottom"]}`]: {
      "[role=row]": {
        background: "var(--DataGrid-containerBackground)"
      }
    },
    /* Cell styles */
    [`& .${ae.cell}`]: {
      flex: "0 0 auto",
      height: "var(--height)",
      width: "var(--width)",
      lineHeight: "calc(var(--height) - 1px)",
      // -1px for the border
      boxSizing: "border-box",
      borderTop: "1px solid var(--rowBorderColor)",
      overflow: "hidden",
      whiteSpace: "nowrap",
      textOverflow: "ellipsis",
      "&.Mui-selected": H
    },
    [`& .${ae["virtualScrollerContent--overflowed"]} .${ae["row--lastVisible"]} .${ae.cell}`]: {
      borderTopColor: "transparent"
    },
    [`& .${ae["pinnedRows--top"]} :first-of-type`]: {
      [`& .${ae.cell}, .${ae.scrollbarFiller}`]: {
        borderTop: "none"
      }
    },
    [`&.${ae["root--disableUserSelection"]}`]: {
      userSelect: "none"
    },
    [`& .${ae["row--dynamicHeight"]} > .${ae.cell}`]: {
      whiteSpace: "initial",
      lineHeight: "inherit"
    },
    [`& .${ae.cellEmpty}`]: {
      flex: 1,
      padding: 0,
      height: "unset"
    },
    [`& .${ae.cell}.${ae["cell--selectionMode"]}`]: {
      cursor: "default"
    },
    [`& .${ae.cell}.${ae["cell--editing"]}`]: {
      padding: 1,
      display: "flex",
      boxShadow: e.shadows[2],
      backgroundColor: (e.vars || e).palette.background.paper,
      "&:focus-within": {
        outline: `${bg}px solid ${(e.vars || e).palette.primary.main}`,
        outlineOffset: bg * -1
      }
    },
    [`& .${ae["row--editing"]}`]: {
      boxShadow: e.shadows[2]
    },
    [`& .${ae["row--editing"]} .${ae.cell}`]: {
      boxShadow: e.shadows[0],
      backgroundColor: (e.vars || e).palette.background.paper
    },
    [`& .${ae.editBooleanCell}`]: {
      display: "flex",
      height: "100%",
      width: "100%",
      alignItems: "center",
      justifyContent: "center"
    },
    [`& .${ae.booleanCell}[data-value="true"]`]: {
      color: (e.vars || e).palette.text.secondary
    },
    [`& .${ae.booleanCell}[data-value="false"]`]: {
      color: (e.vars || e).palette.text.disabled
    },
    [`& .${ae.actionsCell}`]: {
      display: "inline-flex",
      alignItems: "center",
      gridGap: e.spacing(1)
    },
    [`& .${ae.rowReorderCell}`]: {
      display: "inline-flex",
      flex: 1,
      alignItems: "center",
      justifyContent: "center",
      opacity: (e.vars || e).palette.action.disabledOpacity
    },
    [`& .${ae["rowReorderCell--draggable"]}`]: {
      cursor: "move",
      opacity: 1
    },
    [`& .${ae.rowReorderCellContainer}`]: {
      padding: 0,
      display: "flex",
      alignItems: "stretch"
    },
    [`.${ae.withBorderColor}`]: {
      borderColor: i
    },
    [`& .${ae["cell--withLeftBorder"]}, & .${ae["columnHeader--withLeftBorder"]}`]: {
      borderLeftColor: "var(--DataGrid-rowBorderColor)",
      borderLeftWidth: "1px",
      borderLeftStyle: "solid"
    },
    [`& .${ae["cell--withRightBorder"]}, & .${ae["columnHeader--withRightBorder"]}`]: {
      borderRightColor: "var(--DataGrid-rowBorderColor)",
      borderRightWidth: "1px",
      borderRightStyle: "solid"
    },
    [`& .${ae["cell--flex"]}`]: {
      display: "flex",
      alignItems: "center",
      lineHeight: "inherit"
    },
    [`& .${ae["cell--textLeft"]}`]: {
      textAlign: "left",
      justifyContent: "flex-start"
    },
    [`& .${ae["cell--textRight"]}`]: {
      textAlign: "right",
      justifyContent: "flex-end"
    },
    [`& .${ae["cell--textCenter"]}`]: {
      textAlign: "center",
      justifyContent: "center"
    },
    [`& .${ae["cell--pinnedLeft"]}, & .${ae["cell--pinnedRight"]}`]: {
      position: "sticky",
      zIndex: 30,
      background: "var(--DataGrid-pinnedBackground)",
      "&.Mui-selected": {
        backgroundColor: _
      }
    },
    [`& .${ae.virtualScrollerContent} .${ae.row}`]: {
      "&:hover": F,
      "&.Mui-selected": L,
      "&.Mui-selected:hover": D
    },
    [`& .${ae.cellOffsetLeft}`]: {
      flex: "0 0 auto",
      display: "inline-block"
    },
    [`& .${ae.cellSkeleton}`]: {
      flex: "0 0 auto",
      height: "100%",
      display: "inline-flex",
      alignItems: "center"
    },
    [`& .${ae.columnHeaderDraggableContainer}`]: {
      display: "flex",
      width: "100%",
      height: "100%"
    },
    [`& .${ae.rowReorderCellPlaceholder}`]: {
      display: "none"
    },
    [`& .${ae["columnHeader--dragging"]}, & .${ae["row--dragging"]}`]: {
      background: (e.vars || e).palette.background.paper,
      padding: "0 12px",
      borderRadius: "var(--unstable_DataGrid-radius)",
      opacity: (e.vars || e).palette.action.disabledOpacity
    },
    [`& .${ae["row--dragging"]}`]: {
      background: (e.vars || e).palette.background.paper,
      padding: "0 12px",
      borderRadius: "var(--unstable_DataGrid-radius)",
      opacity: (e.vars || e).palette.action.disabledOpacity,
      [`& .${ae.rowReorderCellPlaceholder}`]: {
        display: "flex"
      }
    },
    [`& .${ae.treeDataGroupingCell}`]: {
      display: "flex",
      alignItems: "center",
      width: "100%"
    },
    [`& .${ae.treeDataGroupingCellToggle}`]: {
      flex: "0 0 28px",
      alignSelf: "stretch",
      marginRight: e.spacing(2)
    },
    [`& .${ae.treeDataGroupingCellLoadingContainer}, .${ae.groupingCriteriaCellLoadingContainer}`]: {
      display: "flex",
      alignItems: "center",
      justifyContent: "center",
      height: "100%"
    },
    [`& .${ae.groupingCriteriaCell}`]: {
      display: "flex",
      alignItems: "center",
      width: "100%"
    },
    [`& .${ae.groupingCriteriaCellToggle}`]: {
      flex: "0 0 28px",
      alignSelf: "stretch",
      marginRight: e.spacing(2)
    },
    /* ScrollbarFiller styles */
    [`.${ae.scrollbarFiller}`]: {
      minWidth: "calc(var(--DataGrid-hasScrollY) * var(--DataGrid-scrollbarSize))",
      alignSelf: "stretch",
      [`&.${ae["scrollbarFiller--borderTop"]}`]: {
        borderTop: "1px solid var(--DataGrid-rowBorderColor)"
      },
      [`&.${ae["scrollbarFiller--borderBottom"]}`]: {
        borderBottom: "1px solid var(--DataGrid-rowBorderColor)"
      },
      [`&.${ae["scrollbarFiller--pinnedRight"]}`]: {
        backgroundColor: "var(--DataGrid-pinnedBackground)",
        position: "sticky",
        right: 0
      }
    },
    [`& .${ae.filler}`]: {
      flex: "1 0 auto"
    },
    [`& .${ae["filler--borderBottom"]}`]: {
      borderBottom: "1px solid var(--DataGrid-rowBorderColor)"
    },
    /* Hide grid rows, row filler, and vertical scrollbar when skeleton overlay is visible */
    [`& .${ae["main--hasSkeletonLoadingOverlay"]}`]: {
      [`& .${ae.virtualScrollerContent}`]: {
        // We use visibility hidden so that the virtual scroller content retains its height.
        // Position fixed is used to remove the virtual scroller content from the flow.
        // https://github.com/mui/mui-x/issues/14061
        position: "fixed",
        visibility: "hidden"
      },
      [`& .${ae["scrollbar--vertical"]}, & .${ae.pinnedRows}, & .${ae.virtualScroller} > .${ae.filler}`]: {
        display: "none"
      }
    }
  });
});
function iie(e, t, n, i = 1) {
  const s = (m, v) => Math.round((m ** (1 / i) * (1 - n) + v ** (1 / i) * n) ** i), u = Wu(e), d = Wu(t), p = [s(u.values[0], d.values[0]), s(u.values[1], d.values[1]), s(u.values[2], d.values[2])];
  return IC({
    type: "rgb",
    values: p
  });
}
const aie = (e) => `rgb(from ${e} r g b / 1)`;
function sie(e, t, n) {
  return `color-mix(in srgb,${e}, ${aie(t)} calc(${n} * 100%))`;
}
const lie = () => () => {
}, uie = () => !1, cie = () => !0, die = () => eM.useSyncExternalStore(lie, uie, cie);
function fie() {
  var u, d;
  const e = In(), t = tt(e, nl), n = Vt(), i = tt(e, bC), s = e.current.unstable_applyPipeProcessors("preferencePanel", null, i.openedPanelValue ?? mh.filters);
  return /* @__PURE__ */ A.jsx(n.slots.panel, J({
    as: n.slots.basePopper,
    open: t.length > 0 && i.open,
    id: i.panelId,
    "aria-labelledby": i.labelId
  }, (u = n.slotProps) == null ? void 0 : u.panel, (d = n.slotProps) == null ? void 0 : d.basePopper, {
    children: s
  }));
}
function pie() {
  var t;
  const e = Vt();
  return /* @__PURE__ */ A.jsxs(w.Fragment, {
    children: [/* @__PURE__ */ A.jsx(fie, {}), e.slots.toolbar && /* @__PURE__ */ A.jsx(e.slots.toolbar, J({}, (t = e.slotProps) == null ? void 0 : t.toolbar))]
  });
}
const hie = ["className", "children"], mie = (e, t) => {
  const {
    autoHeight: n,
    classes: i,
    showCellVerticalBorder: s
  } = e, u = {
    root: ["root", n && "autoHeight", `root--density${Ue(t)}`, e.slots.toolbar === null && "root--noToolbar", "withBorderColor", s && "withVerticalBorder"]
  };
  return yt(u, Gn, i);
}, pH = nr(function(t, n) {
  const i = Vt(), {
    className: s,
    children: u
  } = t, d = Xt(t, hie), p = Cs(), m = tt(p, Rg), v = p.current.rootElementRef, y = w.useCallback((E) => {
    E !== null && p.current.publishEvent("rootMount", E);
  }, [p]), C = Vr(v, n, y), S = i, R = mie(S, m);
  return die() ? null : /* @__PURE__ */ A.jsxs(oie, J({
    className: nt(R.root, s),
    ownerState: S
  }, d, {
    ref: C,
    children: [/* @__PURE__ */ A.jsx(pie, {}), /* @__PURE__ */ A.jsx(Loe, {
      children: u
    }), /* @__PURE__ */ A.jsx(Foe, {})]
  }));
});
process.env.NODE_ENV !== "production" && (pH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
const gie = Zc(pH), vie = ["className"], yie = (e) => {
  const {
    classes: t
  } = e;
  return yt({
    root: ["footerContainer", "withBorderColor"]
  }, Gn, t);
}, bie = Dr("div", {
  name: "MuiDataGrid",
  slot: "FooterContainer",
  overridesResolver: (e, t) => t.footerContainer
})({
  display: "flex",
  justifyContent: "space-between",
  alignItems: "center",
  minHeight: 52,
  borderTop: "1px solid"
}), hH = nr(function(t, n) {
  const {
    className: i
  } = t, s = Xt(t, vie), u = Vt(), d = yie(u);
  return /* @__PURE__ */ A.jsx(bie, J({
    className: nt(d.root, i),
    ownerState: u
  }, s, {
    ref: n
  }));
});
process.env.NODE_ENV !== "production" && (hH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
const Cie = ["className"], Sie = (e) => {
  const {
    classes: t
  } = e;
  return yt({
    root: ["overlay"]
  }, Gn, t);
}, wie = Dr("div", {
  name: "MuiDataGrid",
  slot: "Overlay",
  overridesResolver: (e, t) => t.overlay
})({
  width: "100%",
  height: "100%",
  display: "flex",
  alignSelf: "center",
  alignItems: "center",
  justifyContent: "center",
  backgroundColor: "var(--unstable_DataGrid-overlayBackground)"
}), KE = nr(function(t, n) {
  const {
    className: i
  } = t, s = Xt(t, Cie), u = Vt(), d = Sie(u);
  return /* @__PURE__ */ A.jsx(wie, J({
    className: nt(d.root, i),
    ownerState: u
  }, s, {
    ref: n
  }));
});
process.env.NODE_ENV !== "production" && (KE.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
const xie = (e) => {
  const {
    classes: t,
    open: n
  } = e;
  return yt({
    root: ["menuIcon", n && "menuOpen"],
    button: ["menuIconButton"]
  }, Gn, t);
}, Eie = /* @__PURE__ */ w.memo((e) => {
  var S, R;
  const {
    colDef: t,
    open: n,
    columnMenuId: i,
    columnMenuButtonId: s,
    iconButtonRef: u
  } = e, d = In(), p = Vt(), m = J({}, e, {
    classes: p.classes
  }), v = xie(m), y = w.useCallback((O) => {
    O.preventDefault(), O.stopPropagation(), d.current.toggleColumnMenu(t.field);
  }, [d, t.field]), C = t.headerName ?? t.field;
  return /* @__PURE__ */ A.jsx("div", {
    className: v.root,
    children: /* @__PURE__ */ A.jsx(p.slots.baseTooltip, J({
      title: d.current.getLocaleText("columnMenuLabel"),
      enterDelay: 1e3
    }, (S = p.slotProps) == null ? void 0 : S.baseTooltip, {
      children: /* @__PURE__ */ A.jsx(p.slots.baseIconButton, J({
        ref: u,
        tabIndex: -1,
        className: v.button,
        "aria-label": d.current.getLocaleText("columnMenuAriaLabel")(C),
        size: "small",
        onClick: y,
        "aria-haspopup": "menu",
        "aria-expanded": n,
        "aria-controls": n ? i : void 0,
        id: s
      }, (R = p.slotProps) == null ? void 0 : R.baseIconButton, {
        children: /* @__PURE__ */ A.jsx(p.slots.columnMenuIcon, {
          fontSize: "inherit"
        })
      }))
    }))
  });
});
function mH({
  columnMenuId: e,
  columnMenuButtonId: t,
  ContentComponent: n,
  contentComponentProps: i,
  field: s,
  open: u,
  target: d,
  onExited: p
}) {
  const m = In(), v = m.current.getColumn(s), y = Nn((C) => {
    C && (C.stopPropagation(), d != null && d.contains(C.target)) || m.current.hideColumnMenu();
  });
  return !d || !v ? null : /* @__PURE__ */ A.jsx(AE, {
    placement: `bottom-${v.align === "right" ? "start" : "end"}`,
    open: u,
    target: d,
    onClose: y,
    onExited: p,
    children: /* @__PURE__ */ A.jsx(n, J({
      colDef: v,
      hideMenu: y,
      open: u,
      id: e,
      labelledby: t
    }, i))
  });
}
process.env.NODE_ENV !== "production" && (mH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  columnMenuButtonId: a.string,
  columnMenuId: a.string,
  ContentComponent: a.elementType.isRequired,
  contentComponentProps: a.any,
  field: a.string.isRequired,
  onExited: a.func,
  open: a.bool.isRequired,
  target: Wl
});
function Tie(e) {
  return e.scrollHeight > e.clientHeight || e.scrollWidth > e.clientWidth;
}
function J0(e, t) {
  return e.closest(`.${t}`);
}
function td(e) {
  return e.replace(/["\\]/g, "\\$&");
}
function Rie(e, t) {
  return e.querySelector(`[role="columnheader"][data-field="${td(t)}"]`);
}
function gH(e) {
  return `.${ae.row}[data-id="${td(String(e))}"]`;
}
function Oie(e, t) {
  return e.querySelector(gH(t));
}
function kie(e, {
  id: t,
  field: n
}) {
  const i = gH(t), s = `.${ae.cell}[data-field="${td(n)}"]`, u = `${i} ${s}`;
  return e.querySelector(u);
}
function XC(e) {
  return (
    // The target is not an element when triggered by a Select inside the cell
    // See https://github.com/mui/material-ui/issues/10534
    e.target.nodeType === 1 && !e.currentTarget.contains(e.target)
  );
}
function Pie(e) {
  return e.getAttribute("data-field");
}
function Mie(e, t) {
  return e.querySelector(`[data-field="${td(t)}"]`);
}
function Iie(e) {
  return e.getAttribute("data-fields").slice(2, -2).split("-|-");
}
function Die(e, t) {
  return Array.from(e.querySelectorAll(`[data-fields*="|-${td(t)}-|"]`) ?? []);
}
function Nie(e, t) {
  var d;
  if (!J0(e, ae.root))
    throw new Error("MUI X: The root element is not found.");
  const i = e.getAttribute("aria-colindex");
  if (!i)
    return [];
  const s = Number(i) - 1, u = [];
  return (d = t.virtualScrollerRef) != null && d.current ? (bH(t).forEach((p) => {
    const m = p.getAttribute("data-id");
    if (!m)
      return;
    let v = s;
    const y = t.unstable_getCellColSpanInfo(m, s);
    y && y.spannedByColSpan && (v = y.leftVisibleCellIndex);
    const C = p.querySelector(`[data-colindex="${v}"]`);
    C && u.push(C);
  }), u) : [];
}
function wA(e, t) {
  return e.rootElementRef.current.querySelector(`.${ae[t]}`);
}
const vH = ({
  api: e,
  colIndex: t,
  position: n,
  filterFn: i
}) => {
  if (t === null)
    return [];
  const s = [];
  return bH(e).forEach((u) => {
    u.getAttribute("data-id") && u.querySelectorAll(`.${ae[n === "left" ? "cell--pinnedLeft" : "cell--pinnedRight"]}`).forEach((p) => {
      const m = mv(p);
      m !== null && i(m) && s.push(p);
    });
  }), s;
};
function Lie(e, t, n) {
  const i = mv(t);
  return vH({
    api: e,
    colIndex: i,
    position: n ? "right" : "left",
    filterFn: (s) => n ? s < i : s > i
  });
}
function Fie(e, t, n) {
  const i = mv(t);
  return vH({
    api: e,
    colIndex: i,
    position: n ? "left" : "right",
    filterFn: (s) => n ? s > i : s < i
  });
}
const yH = ({
  api: e,
  colIndex: t,
  position: n,
  filterFn: i
}) => {
  var u;
  if (!((u = e.columnHeadersContainerRef) != null && u.current))
    return [];
  if (t === null)
    return [];
  const s = [];
  return e.columnHeadersContainerRef.current.querySelectorAll(`.${ae[n === "left" ? "columnHeader--pinnedLeft" : "columnHeader--pinnedRight"]}`).forEach((d) => {
    const p = mv(d);
    p !== null && i(p, d) && s.push(d);
  }), s;
};
function _ie(e, t, n) {
  const i = mv(t);
  return yH({
    api: e,
    position: n ? "right" : "left",
    colIndex: i,
    filterFn: (s) => n ? s < i : s > i
  });
}
function Aie(e, t, n) {
  const i = mv(t);
  return yH({
    api: e,
    position: n ? "left" : "right",
    colIndex: i,
    filterFn: (s, u) => u.classList.contains(ae["columnHeader--last"]) ? !1 : n ? s > i : s < i
  });
}
function $ie(e, t) {
  return e.columnHeadersContainerRef.current.querySelector(`:scope > div > [data-field="${td(t)}"][role="columnheader"]`);
}
function jie(e, t) {
  const n = e.virtualScrollerRef.current;
  return Array.from(n.querySelectorAll(`:scope > div > div > div > [data-field="${td(t)}"][role="gridcell"]`));
}
function bH(e) {
  return e.virtualScrollerRef.current.querySelectorAll(
    // Use > to ignore rows from nested Data Grids (for example in detail panel)
    `:scope > div > div > .${ae.row}`
  );
}
function mv(e) {
  const t = e.getAttribute("aria-colindex");
  return t ? Number(t) - 1 : null;
}
const zie = ["className", "aria-label"], Hie = (e) => {
  const {
    classes: t
  } = e;
  return yt({
    root: ["columnHeaderTitle"]
  }, Gn, t);
}, Vie = Dr("div", {
  name: "MuiDataGrid",
  slot: "ColumnHeaderTitle",
  overridesResolver: (e, t) => t.columnHeaderTitle
})({
  textOverflow: "ellipsis",
  overflow: "hidden",
  whiteSpace: "nowrap",
  fontWeight: "var(--unstable_DataGrid-headWeight)",
  lineHeight: "normal"
}), Bie = nr(function(t, n) {
  const {
    className: i
  } = t, s = Xt(t, zie), u = Vt(), d = Hie(u);
  return /* @__PURE__ */ A.jsx(Vie, J({
    className: nt(d.root, i),
    ownerState: u
  }, s, {
    ref: n
  }));
});
function CH(e) {
  var m;
  const {
    label: t,
    description: n
  } = e, i = Vt(), s = w.useRef(null), [u, d] = w.useState(""), p = w.useCallback(() => {
    if (!n && (s != null && s.current)) {
      const v = Tie(s.current);
      d(v ? t : "");
    }
  }, [n, t]);
  return /* @__PURE__ */ A.jsx(i.slots.baseTooltip, J({
    title: n || u
  }, (m = i.slotProps) == null ? void 0 : m.baseTooltip, {
    children: /* @__PURE__ */ A.jsx(Bie, {
      onMouseOver: p,
      ref: s,
      children: t
    })
  }));
}
process.env.NODE_ENV !== "production" && (CH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  columnWidth: a.number.isRequired,
  description: a.node,
  label: a.string.isRequired
});
const Uie = ["resizable", "resizing", "height", "side"];
var SM = /* @__PURE__ */ function(e) {
  return e.Left = "left", e.Right = "right", e;
}(SM || {});
const Gie = (e) => {
  const {
    resizable: t,
    resizing: n,
    classes: i,
    side: s
  } = e, u = {
    root: ["columnSeparator", t && "columnSeparator--resizable", n && "columnSeparator--resizing", s && `columnSeparator--side${Ue(s)}`],
    icon: ["iconSeparator"]
  };
  return yt(u, Gn, i);
};
function SH(e) {
  const {
    height: t,
    side: n = SM.Right
  } = e, i = Xt(e, Uie), s = Vt(), u = J({}, e, {
    side: n,
    classes: s.classes
  }), d = Gie(u), p = w.useCallback((m) => {
    m.preventDefault(), m.stopPropagation();
  }, []);
  return (
    // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions
    /* @__PURE__ */ A.jsx("div", J({
      className: d.root,
      style: {
        minHeight: t
      }
    }, i, {
      onClick: p,
      children: /* @__PURE__ */ A.jsx(s.slots.columnResizeIcon, {
        className: d.icon
      })
    }))
  );
}
const Wie = /* @__PURE__ */ w.memo(SH);
process.env.NODE_ENV !== "production" && (SH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  height: a.number.isRequired,
  resizable: a.bool.isRequired,
  resizing: a.bool.isRequired,
  side: a.oneOf(["left", "right"])
});
const qie = ["classes", "columnMenuOpen", "colIndex", "height", "isResizing", "sortDirection", "hasFocus", "tabIndex", "separatorSide", "isDraggable", "headerComponent", "description", "elementId", "width", "columnMenuIconButton", "columnMenu", "columnTitleIconButtons", "headerClassName", "label", "resizable", "draggableContainerProps", "columnHeaderSeparatorProps", "style"], wH = nr(function(t, n) {
  const {
    classes: i,
    colIndex: s,
    height: u,
    isResizing: d,
    sortDirection: p,
    hasFocus: m,
    tabIndex: v,
    separatorSide: y,
    isDraggable: C,
    headerComponent: S,
    description: R,
    width: O,
    columnMenuIconButton: E = null,
    columnMenu: k = null,
    columnTitleIconButtons: F = null,
    headerClassName: _,
    label: L,
    resizable: M,
    draggableContainerProps: D,
    columnHeaderSeparatorProps: H,
    style: K
  } = t, Q = Xt(t, qie), z = Cs(), I = Vt(), G = w.useRef(null), W = Vr(G, n);
  let B = "none";
  return p != null && (B = p === "asc" ? "ascending" : "descending"), w.useLayoutEffect(() => {
    var U;
    const ee = z.current.state.columnMenu;
    if (m && !ee.open) {
      const Y = G.current.querySelector('[tabindex="0"]') || G.current;
      Y == null || Y.focus(), (U = z.current.columnHeadersContainerRef) != null && U.current && (z.current.columnHeadersContainerRef.current.scrollLeft = 0);
    }
  }, [z, m]), /* @__PURE__ */ A.jsxs("div", J({
    className: nt(i.root, _),
    style: J({}, K, {
      height: u,
      width: O
    }),
    role: "columnheader",
    tabIndex: v,
    "aria-colindex": s + 1,
    "aria-sort": B
  }, Q, {
    ref: W,
    children: [/* @__PURE__ */ A.jsxs("div", J({
      className: i.draggableContainer,
      draggable: C,
      role: "presentation"
    }, D, {
      children: [/* @__PURE__ */ A.jsxs("div", {
        className: i.titleContainer,
        role: "presentation",
        children: [/* @__PURE__ */ A.jsx("div", {
          className: i.titleContainerContent,
          children: S !== void 0 ? S : /* @__PURE__ */ A.jsx(CH, {
            label: L,
            description: R,
            columnWidth: O
          })
        }), F]
      }), E]
    })), /* @__PURE__ */ A.jsx(Wie, J({
      resizable: !I.disableColumnResize && !!M,
      resizing: d,
      height: u,
      side: y
    }, H)), k]
  }));
}), Kie = (e) => {
  const {
    colDef: t,
    classes: n,
    isDragging: i,
    sortDirection: s,
    showRightBorder: u,
    showLeftBorder: d,
    filterItemsCounter: p,
    pinnedPosition: m,
    isLastUnpinned: v,
    isSiblingFocused: y
  } = e, C = s != null, S = p != null && p > 0, R = t.type === "number", O = {
    root: [
      "columnHeader",
      t.headerAlign === "left" && "columnHeader--alignLeft",
      t.headerAlign === "center" && "columnHeader--alignCenter",
      t.headerAlign === "right" && "columnHeader--alignRight",
      t.sortable && "columnHeader--sortable",
      i && "columnHeader--moving",
      C && "columnHeader--sorted",
      S && "columnHeader--filtered",
      R && "columnHeader--numeric",
      "withBorderColor",
      u && "columnHeader--withRightBorder",
      d && "columnHeader--withLeftBorder",
      m === jn.LEFT && "columnHeader--pinnedLeft",
      m === jn.RIGHT && "columnHeader--pinnedRight",
      // TODO: Remove classes below and restore `:has` selectors when they are supported in jsdom
      // See https://github.com/mui/mui-x/pull/14559
      v && "columnHeader--lastUnpinned",
      y && "columnHeader--siblingFocused"
    ],
    draggableContainer: ["columnHeaderDraggableContainer"],
    titleContainer: ["columnHeaderTitleContainer"],
    titleContainerContent: ["columnHeaderTitleContainerContent"]
  };
  return yt(O, Gn, n);
};
function xH(e) {
  var pe, be, Ce;
  const {
    colDef: t,
    columnMenuOpen: n,
    colIndex: i,
    headerHeight: s,
    isResizing: u,
    isLast: d,
    sortDirection: p,
    sortIndex: m,
    filterItemsCounter: v,
    hasFocus: y,
    tabIndex: C,
    disableReorder: S,
    separatorSide: R,
    showLeftBorder: O,
    showRightBorder: E,
    pinnedPosition: k,
    pinnedOffset: F
  } = e, _ = Cs(), L = Vt(), M = zi(), D = w.useRef(null), H = Sr(), K = Sr(), Q = w.useRef(null), [z, I] = w.useState(n), G = w.useMemo(() => !L.disableColumnReorder && !S && !t.disableReorder, [L.disableColumnReorder, S, t.disableReorder]);
  let W;
  t.renderHeader && (W = t.renderHeader(_.current.getColumnHeaderParams(t.field)));
  const B = J({}, e, {
    classes: L.classes,
    showRightBorder: E,
    showLeftBorder: O
  }), ee = Kie(B), U = w.useCallback((Re) => (ue) => {
    XC(ue) || _.current.publishEvent(Re, _.current.getColumnHeaderParams(t.field), ue);
  }, [_, t.field]), q = w.useMemo(() => ({
    onClick: U("columnHeaderClick"),
    onContextMenu: U("columnHeaderContextMenu"),
    onDoubleClick: U("columnHeaderDoubleClick"),
    onMouseOver: U("columnHeaderOver"),
    // TODO remove as it's not used
    onMouseOut: U("columnHeaderOut"),
    // TODO remove as it's not used
    onMouseEnter: U("columnHeaderEnter"),
    // TODO remove as it's not used
    onMouseLeave: U("columnHeaderLeave"),
    // TODO remove as it's not used
    onKeyDown: U("columnHeaderKeyDown"),
    onFocus: U("columnHeaderFocus"),
    onBlur: U("columnHeaderBlur")
  }), [U]), Y = w.useMemo(() => G ? {
    onDragStart: U("columnHeaderDragStart"),
    onDragEnter: U("columnHeaderDragEnter"),
    onDragOver: U("columnHeaderDragOver"),
    onDragEnd: U("columnHeaderDragEnd")
  } : {}, [G, U]), ne = w.useMemo(() => ({
    onMouseDown: U("columnSeparatorMouseDown"),
    onDoubleClick: U("columnSeparatorDoubleClick")
  }), [U]);
  w.useEffect(() => {
    z || I(n);
  }, [z, n]);
  const re = w.useCallback(() => {
    I(!1);
  }, []), X = !L.disableColumnMenu && !t.disableColumnMenu && /* @__PURE__ */ A.jsx(Eie, {
    colDef: t,
    columnMenuId: H,
    columnMenuButtonId: K,
    open: z,
    iconButtonRef: Q
  }), j = /* @__PURE__ */ A.jsx(mH, {
    columnMenuId: H,
    columnMenuButtonId: K,
    field: t.field,
    open: n,
    target: Q.current,
    ContentComponent: L.slots.columnMenu,
    contentComponentProps: (pe = L.slotProps) == null ? void 0 : pe.columnMenu,
    onExited: re
  }), ie = t.sortingOrder ?? L.sortingOrder, fe = (t.sortable || p != null) && !t.hideSortIcons && !L.disableColumnSorting, ce = /* @__PURE__ */ A.jsxs(w.Fragment, {
    children: [!L.disableColumnFilter && /* @__PURE__ */ A.jsx(L.slots.columnHeaderFilterIconButton, J({
      field: t.field,
      counter: v
    }, (be = L.slotProps) == null ? void 0 : be.columnHeaderFilterIconButton)), fe && /* @__PURE__ */ A.jsx(L.slots.columnHeaderSortIcon, J({
      field: t.field,
      direction: p,
      index: m,
      sortingOrder: ie,
      disabled: !t.sortable
    }, (Ce = L.slotProps) == null ? void 0 : Ce.columnHeaderSortIcon))]
  });
  w.useLayoutEffect(() => {
    var ue;
    const Re = _.current.state.columnMenu;
    if (y && !Re.open) {
      const _e = D.current.querySelector('[tabindex="0"]') || D.current;
      _e == null || _e.focus(), (ue = _.current.columnHeadersContainerRef) != null && ue.current && (_.current.columnHeadersContainerRef.current.scrollLeft = 0);
    }
  }, [_, y]);
  const me = typeof t.headerClassName == "function" ? t.headerClassName({
    field: t.field,
    colDef: t
  }) : t.headerClassName, ge = t.headerName ?? t.field, de = w.useMemo(() => qE(J({}, e.style), M, k, F), [k, F, e.style, M]);
  return /* @__PURE__ */ A.jsx(wH, J({
    ref: D,
    classes: ee,
    columnMenuOpen: n,
    colIndex: i,
    height: s,
    isResizing: u,
    sortDirection: p,
    hasFocus: y,
    tabIndex: C,
    separatorSide: R,
    isDraggable: G,
    headerComponent: W,
    description: t.description,
    elementId: t.field,
    width: t.computedWidth,
    columnMenuIconButton: X,
    columnTitleIconButtons: ce,
    headerClassName: nt(me, d && ae["columnHeader--last"]),
    label: ge,
    resizable: !L.disableColumnResize && !!t.resizable,
    "data-field": t.field,
    columnMenu: j,
    draggableContainerProps: Y,
    columnHeaderSeparatorProps: ne,
    style: de
  }, q));
}
process.env.NODE_ENV !== "production" && (xH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  colDef: a.object.isRequired,
  colIndex: a.number.isRequired,
  columnMenuOpen: a.bool.isRequired,
  disableReorder: a.bool,
  filterItemsCounter: a.number,
  hasFocus: a.bool,
  headerHeight: a.number.isRequired,
  isDragging: a.bool.isRequired,
  isLast: a.bool.isRequired,
  isLastUnpinned: a.bool.isRequired,
  isResizing: a.bool.isRequired,
  isSiblingFocused: a.bool.isRequired,
  pinnedOffset: a.number,
  pinnedPosition: a.oneOf([0, 1, 2, 3]),
  separatorSide: a.oneOf(["left", "right"]),
  showLeftBorder: a.bool.isRequired,
  showRightBorder: a.bool.isRequired,
  sortDirection: a.oneOf(["asc", "desc"]),
  sortIndex: a.number,
  style: a.object,
  tabIndex: a.oneOf([-1, 0]).isRequired
});
const Yie = Zc(xH), Xie = ["className"], Qie = (e) => {
  const {
    classes: t
  } = e;
  return yt({
    root: ["iconButtonContainer"]
  }, Gn, t);
}, Jie = Dr("div", {
  name: "MuiDataGrid",
  slot: "IconButtonContainer",
  overridesResolver: (e, t) => t.iconButtonContainer
})(() => ({
  display: "flex",
  visibility: "hidden",
  width: 0
})), EH = nr(function(t, n) {
  const {
    className: i
  } = t, s = Xt(t, Xie), u = Vt(), d = Qie(u);
  return /* @__PURE__ */ A.jsx(Jie, J({
    className: nt(d.root, i),
    ownerState: u
  }, s, {
    ref: n
  }));
}), Zie = ["direction", "index", "sortingOrder", "disabled", "className"], eae = (e) => {
  const {
    classes: t
  } = e;
  return yt({
    root: ["sortButton"],
    icon: ["sortIcon"]
  }, Gn, t);
};
function tae(e, t, n, i) {
  let s;
  const u = {};
  return t === "asc" ? s = e.columnSortedAscendingIcon : t === "desc" ? s = e.columnSortedDescendingIcon : (s = e.columnUnsortedIcon, u.sortingOrder = i), s ? /* @__PURE__ */ A.jsx(s, J({
    fontSize: "small",
    className: n
  }, u)) : null;
}
function TH(e) {
  var R;
  const {
    direction: t,
    index: n,
    sortingOrder: i,
    disabled: s,
    className: u
  } = e, d = Xt(e, Zie), p = In(), m = Vt(), v = J({}, e, {
    classes: m.classes
  }), y = eae(v), C = tae(m.slots, t, y.icon, i);
  if (!C)
    return null;
  const S = /* @__PURE__ */ A.jsx(m.slots.baseIconButton, J({
    tabIndex: -1,
    "aria-label": p.current.getLocaleText("columnHeaderSortIconLabel"),
    title: p.current.getLocaleText("columnHeaderSortIconLabel"),
    size: "small",
    disabled: s,
    className: nt(y.root, u)
  }, (R = m.slotProps) == null ? void 0 : R.baseIconButton, d, {
    children: C
  }));
  return /* @__PURE__ */ A.jsxs(EH, {
    children: [n != null && /* @__PURE__ */ A.jsx(m.slots.baseBadge, {
      badgeContent: n,
      color: "default",
      overlap: "circular",
      children: S
    }), n == null && S]
  });
}
const nae = /* @__PURE__ */ w.memo(TH);
process.env.NODE_ENV !== "production" && (TH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  className: a.string,
  direction: a.oneOf(["asc", "desc"]),
  disabled: a.bool,
  field: a.string.isRequired,
  index: a.number,
  sortingOrder: a.arrayOf(a.oneOf(["asc", "desc"])).isRequired
});
const rae = (e) => {
  const {
    classes: t
  } = e;
  return yt({
    icon: ["filterIcon"]
  }, Gn, t);
};
function RH(e) {
  return e.counter ? /* @__PURE__ */ A.jsx(OH, J({}, e)) : null;
}
process.env.NODE_ENV !== "production" && (RH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  counter: a.number,
  field: a.string.isRequired,
  onClick: a.func
});
function OH(e) {
  var R, O;
  const {
    counter: t,
    field: n,
    onClick: i
  } = e, s = In(), u = Vt(), d = J({}, e, {
    classes: u.classes
  }), p = rae(d), m = Sr(), v = gC(s, Ooe, m), y = Sr(), C = w.useCallback((E) => {
    E.preventDefault(), E.stopPropagation();
    const {
      open: k,
      openedPanelValue: F
    } = bC(s.current.state);
    k && F === mh.filters ? s.current.hideFilterPanel() : s.current.showFilterPanel(void 0, y, m), i && i(s.current.getColumnHeaderParams(n), E);
  }, [s, n, i, y, m]);
  if (!t)
    return null;
  const S = /* @__PURE__ */ A.jsx(u.slots.baseIconButton, J({
    id: m,
    onClick: C,
    color: "default",
    "aria-label": s.current.getLocaleText("columnHeaderFiltersLabel"),
    size: "small",
    tabIndex: -1,
    "aria-haspopup": "menu",
    "aria-expanded": v,
    "aria-controls": v ? y : void 0
  }, (R = u.slotProps) == null ? void 0 : R.baseIconButton, {
    children: /* @__PURE__ */ A.jsx(u.slots.columnFilteredIcon, {
      className: p.icon,
      fontSize: "small"
    })
  }));
  return /* @__PURE__ */ A.jsx(u.slots.baseTooltip, J({
    title: s.current.getLocaleText("columnHeaderFiltersTooltipActive")(t),
    enterDelay: 1e3
  }, (O = u.slotProps) == null ? void 0 : O.baseTooltip, {
    children: /* @__PURE__ */ A.jsxs(EH, {
      children: [t > 1 && /* @__PURE__ */ A.jsx(u.slots.baseBadge, {
        badgeContent: t,
        color: "default",
        children: S
      }), t === 1 && S]
    })
  }));
}
process.env.NODE_ENV !== "production" && (OH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  counter: a.number,
  field: a.string.isRequired,
  onClick: a.func
});
const xA = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z"
}), "ArrowUpward"), EA = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z"
}), "ArrowDownward"), TA = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M8.59 16.59 13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z"
}), "KeyboardArrowRight"), RA = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z"
}), "ExpandMore"), oae = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z"
}), "FilterList"), OA = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61z"
}), "FilterAlt"), iae = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"
}), "Search");
Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"
}), "Menu");
Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
}), "CheckCircle");
const aae = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M6 5H3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm14 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm-7 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1z"
}), "ColumnIcon"), sae = Fn(/* @__PURE__ */ A.jsx("rect", {
  width: "1",
  height: "24",
  x: "11.5",
  rx: "0.5"
}), "Separator"), lae = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M4 15h16v-2H4v2zm0 4h16v-2H4v2zm0-8h16V9H4v2zm0-6v2h16V5H4z"
}), "ViewHeadline"), uae = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M21,8H3V4h18V8z M21,10H3v4h18V10z M21,16H3v4h18V16z"
}), "TableRows"), cae = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M4 18h17v-6H4v6zM4 5v6h17V5H4z"
}), "ViewStream"), dae = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
}), "TripleDotsVertical"), WO = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
}), "Close"), kA = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"
}), "Add"), fae = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M19 13H5v-2h14v2z"
}), "Remove"), pae = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z"
}), "Load"), PA = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M11 18c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2zm-2-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
}), "Drag"), hae = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M19 12v7H5v-7H3v7c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zm-6 .67l2.59-2.58L17 11.5l-5 5-5-5 1.41-1.41L11 12.67V3h2z"
}), "SaveAlt"), mae = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z"
}), "Check"), gae = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
}), "MoreVert"), vae = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z"
}), "VisibilityOff"), yae = Fn(/* @__PURE__ */ A.jsx("g", {
  children: /* @__PURE__ */ A.jsx("path", {
    d: "M14.67,5v14H9.33V5H14.67z M15.67,19H21V5h-5.33V19z M8.33,19V5H3v14H8.33z"
  })
}), "ViewColumn"), bae = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
}), "Clear");
Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z"
}), "Delete");
const Cae = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm2.46-7.12l1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4z"
}), "Delete");
function kH(e) {
  return e.key.length === 1 && !e.ctrlKey && !e.metaKey;
}
const Z0 = (e) => e.indexOf("Arrow") === 0 || e.indexOf("Page") === 0 || e === " " || e === "Home" || e === "End", Sae = (e) => !!e.key, PH = (e) => e === "Tab" || e === "Escape";
function MH(e) {
  return (e.ctrlKey || e.metaKey) && // We can't use event.code === 'KeyV' as event.code assumes a QWERTY keyboard layout,
  // for example, it would be another letter on a Dvorak physical keyboard.
  // We can't use event.key === 'v' as event.key is not stable with key modifiers and keyboard layouts,
  // for example, it would be ה on a Hebrew keyboard layout.
  // https://github.com/w3c/uievents/issues/377 could be a long-term solution
  String.fromCharCode(e.keyCode) === "V" && !e.shiftKey && !e.altKey;
}
function wae(e) {
  return (e.ctrlKey || e.metaKey) && String.fromCharCode(e.keyCode) === "C" && !e.shiftKey && !e.altKey;
}
const xae = ["hideMenu", "colDef", "id", "labelledby", "className", "children", "open"], Eae = Be(_C)(() => ({
  minWidth: 248
})), IH = nr(function(t, n) {
  const {
    hideMenu: i,
    id: s,
    labelledby: u,
    className: d,
    children: p,
    open: m
  } = t, v = Xt(t, xae), y = w.useCallback((C) => {
    C.key === "Tab" && C.preventDefault(), PH(C.key) && i(C);
  }, [i]);
  return /* @__PURE__ */ A.jsx(Eae, J({
    id: s,
    className: nt(ae.menuList, d),
    "aria-labelledby": u,
    onKeyDown: y,
    autoFocus: m
  }, v, {
    ref: n,
    children: p
  }));
});
process.env.NODE_ENV !== "production" && (IH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  colDef: a.object.isRequired,
  hideMenu: a.func.isRequired,
  id: a.string,
  labelledby: a.string,
  open: a.bool.isRequired
});
const Tae = ["displayOrder"], Rae = (e) => {
  const t = Cs(), n = Vt(), {
    defaultSlots: i,
    defaultSlotProps: s,
    slots: u = {},
    slotProps: d = {},
    hideMenu: p,
    colDef: m,
    addDividers: v = !0
  } = e, y = w.useMemo(() => J({}, i, u), [i, u]), C = w.useMemo(() => {
    if (!d || Object.keys(d).length === 0)
      return s;
    const O = J({}, d);
    return Object.entries(s).forEach(([E, k]) => {
      O[E] = J({}, k, d[E] || {});
    }), O;
  }, [s, d]), S = t.current.unstable_applyPipeProcessors("columnMenu", [], e.colDef), R = w.useMemo(() => {
    const O = Object.keys(i);
    return Object.keys(u).filter((E) => !O.includes(E));
  }, [u, i]);
  return w.useMemo(() => {
    const k = Array.from(/* @__PURE__ */ new Set([...S, ...R])).filter((F) => y[F] != null).sort((F, _) => {
      const L = C[F], M = C[_], D = Number.isFinite(L == null ? void 0 : L.displayOrder) ? L.displayOrder : 100, H = Number.isFinite(M == null ? void 0 : M.displayOrder) ? M.displayOrder : 100;
      return D - H;
    });
    return k.reduce((F, _, L) => {
      let M = {
        colDef: m,
        onClick: p
      };
      const D = C[_];
      if (D) {
        const H = Xt(D, Tae);
        M = J({}, M, H);
      }
      return v && L !== k.length - 1 ? [...F, [y[_], M], [n.slots.baseDivider, {}]] : [...F, [y[_], M]];
    }, []);
  }, [v, m, S, p, y, C, R, n.slots.baseDivider]);
};
function DH(e) {
  const {
    colDef: t,
    onClick: n
  } = e, i = In(), s = Vt(), p = ho(i).filter((v) => v.disableColumnMenu !== !0).length === 1, m = w.useCallback((v) => {
    p || (i.current.setColumnVisibility(t.field, !1), n(v));
  }, [i, t.field, n, p]);
  return s.disableColumnSelector || t.hideable === !1 ? null : /* @__PURE__ */ A.jsxs(ms, {
    onClick: m,
    disabled: p,
    children: [/* @__PURE__ */ A.jsx(lh, {
      children: /* @__PURE__ */ A.jsx(s.slots.columnMenuHideIcon, {
        fontSize: "small"
      })
    }), /* @__PURE__ */ A.jsx(uh, {
      children: i.current.getLocaleText("columnMenuHideColumn")
    })]
  });
}
process.env.NODE_ENV !== "production" && (DH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  colDef: a.object.isRequired,
  onClick: a.func.isRequired
});
function NH(e) {
  const {
    onClick: t
  } = e, n = In(), i = Vt(), s = w.useCallback((u) => {
    t(u), n.current.showPreferences(mh.columns);
  }, [n, t]);
  return i.disableColumnSelector ? null : /* @__PURE__ */ A.jsxs(ms, {
    onClick: s,
    children: [/* @__PURE__ */ A.jsx(lh, {
      children: /* @__PURE__ */ A.jsx(i.slots.columnMenuManageColumnsIcon, {
        fontSize: "small"
      })
    }), /* @__PURE__ */ A.jsx(uh, {
      children: n.current.getLocaleText("columnMenuManageColumns")
    })]
  });
}
process.env.NODE_ENV !== "production" && (NH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  colDef: a.object.isRequired,
  onClick: a.func.isRequired
});
function LH(e) {
  return /* @__PURE__ */ A.jsxs(w.Fragment, {
    children: [/* @__PURE__ */ A.jsx(DH, J({}, e)), /* @__PURE__ */ A.jsx(NH, J({}, e))]
  });
}
process.env.NODE_ENV !== "production" && (LH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  colDef: a.object.isRequired,
  onClick: a.func.isRequired
});
function FH(e) {
  const {
    colDef: t,
    onClick: n
  } = e, i = In(), s = Vt(), u = w.useCallback((d) => {
    n(d), i.current.showFilterPanel(t.field);
  }, [i, t.field, n]);
  return s.disableColumnFilter || !t.filterable ? null : /* @__PURE__ */ A.jsxs(ms, {
    onClick: u,
    children: [/* @__PURE__ */ A.jsx(lh, {
      children: /* @__PURE__ */ A.jsx(s.slots.columnMenuFilterIcon, {
        fontSize: "small"
      })
    }), /* @__PURE__ */ A.jsx(uh, {
      children: i.current.getLocaleText("columnMenuFilter")
    })]
  });
}
process.env.NODE_ENV !== "production" && (FH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  colDef: a.object.isRequired,
  onClick: a.func.isRequired
});
function _H(e) {
  const {
    colDef: t,
    onClick: n
  } = e, i = In(), s = tt(i, $l), u = Vt(), d = w.useMemo(() => {
    if (!t)
      return null;
    const y = s.find((C) => C.field === t.field);
    return y == null ? void 0 : y.sort;
  }, [t, s]), p = t.sortingOrder ?? u.sortingOrder, m = w.useCallback((y) => {
    n(y);
    const C = y.currentTarget.getAttribute("data-value") || null;
    i.current.sortColumn(t.field, C === d ? null : C);
  }, [i, t, n, d]);
  if (u.disableColumnSorting || !t || !t.sortable || !p.some((y) => !!y))
    return null;
  const v = (y) => {
    const C = i.current.getLocaleText(y);
    return typeof C == "function" ? C(t) : C;
  };
  return /* @__PURE__ */ A.jsxs(w.Fragment, {
    children: [p.includes("asc") && d !== "asc" ? /* @__PURE__ */ A.jsxs(ms, {
      onClick: m,
      "data-value": "asc",
      children: [/* @__PURE__ */ A.jsx(lh, {
        children: /* @__PURE__ */ A.jsx(u.slots.columnMenuSortAscendingIcon, {
          fontSize: "small"
        })
      }), /* @__PURE__ */ A.jsx(uh, {
        children: v("columnMenuSortAsc")
      })]
    }) : null, p.includes("desc") && d !== "desc" ? /* @__PURE__ */ A.jsxs(ms, {
      onClick: m,
      "data-value": "desc",
      children: [/* @__PURE__ */ A.jsx(lh, {
        children: /* @__PURE__ */ A.jsx(u.slots.columnMenuSortDescendingIcon, {
          fontSize: "small"
        })
      }), /* @__PURE__ */ A.jsx(uh, {
        children: v("columnMenuSortDesc")
      })]
    }) : null, p.includes(null) && d != null ? /* @__PURE__ */ A.jsxs(ms, {
      onClick: m,
      children: [/* @__PURE__ */ A.jsx(lh, {}), /* @__PURE__ */ A.jsx(uh, {
        children: i.current.getLocaleText("columnMenuUnsort")
      })]
    }) : null]
  });
}
process.env.NODE_ENV !== "production" && (_H.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  colDef: a.object.isRequired,
  onClick: a.func.isRequired
});
const Oae = ["defaultSlots", "defaultSlotProps", "slots", "slotProps"], kae = {
  columnMenuSortItem: _H,
  columnMenuFilterItem: FH,
  columnMenuColumnsItem: LH
}, Pae = {
  columnMenuSortItem: {
    displayOrder: 10
  },
  columnMenuFilterItem: {
    displayOrder: 20
  },
  columnMenuColumnsItem: {
    displayOrder: 30
  }
}, AH = nr(function(t, n) {
  const {
    defaultSlots: i,
    defaultSlotProps: s,
    slots: u,
    slotProps: d
  } = t, p = Xt(t, Oae), m = Rae(J({}, p, {
    defaultSlots: i,
    defaultSlotProps: s,
    slots: u,
    slotProps: d
  }));
  return /* @__PURE__ */ A.jsx(IH, J({}, p, {
    ref: n,
    children: m.map(([v, y], C) => /* @__PURE__ */ A.jsx(v, J({}, y), C))
  }));
});
process.env.NODE_ENV !== "production" && (AH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  colDef: a.object.isRequired,
  /**
   * Initial `slotProps` - it is internal, to be overrriden by Pro or Premium packages
   * @ignore - do not document.
   */
  defaultSlotProps: a.object.isRequired,
  /**
   * Initial `slots` - it is internal, to be overrriden by Pro or Premium packages
   * @ignore - do not document.
   */
  defaultSlots: a.object.isRequired,
  hideMenu: a.func.isRequired,
  id: a.string,
  labelledby: a.string,
  open: a.bool.isRequired,
  /**
   * Could be used to pass new props or override props specific to a column menu component
   * e.g. `displayOrder`
   */
  slotProps: a.object,
  /**
   * `slots` could be used to add new and (or) override default column menu items
   * If you register a nee component you must pass it's `displayOrder` in `slotProps`
   * or it will be placed in the end of the list
   */
  slots: a.object
});
const $H = nr(function(t, n) {
  return /* @__PURE__ */ A.jsx(AH, J({}, t, {
    ref: n,
    defaultSlots: kae,
    defaultSlotProps: Pae
  }));
});
process.env.NODE_ENV !== "production" && ($H.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  colDef: a.object.isRequired,
  hideMenu: a.func.isRequired,
  id: a.string,
  labelledby: a.string,
  open: a.bool.isRequired,
  /**
   * Could be used to pass new props or override props specific to a column menu component
   * e.g. `displayOrder`
   */
  slotProps: a.object,
  /**
   * `slots` could be used to add new and (or) override default column menu items
   * If you register a nee component you must pass it's `displayOrder` in `slotProps`
   * or it will be placed in the end of the list
   */
  slots: a.object
});
const Mae = ["className", "slotProps"], Iae = (e) => {
  const {
    classes: t
  } = e;
  return yt({
    root: ["panelWrapper"]
  }, Gn, t);
}, Dae = Be("div", {
  name: "MuiDataGrid",
  slot: "PanelWrapper",
  overridesResolver: (e, t) => t.panelWrapper
})({
  display: "flex",
  flexDirection: "column",
  flex: 1,
  "&:focus": {
    outline: 0
  }
}), Nae = () => !0, wM = nr(function(t, n) {
  const {
    className: i,
    slotProps: s = {}
  } = t, u = Xt(t, Mae), d = Vt(), p = Iae(d);
  return /* @__PURE__ */ A.jsx(cC, J({
    open: !0,
    disableEnforceFocus: !0,
    isEnabled: Nae
  }, s.TrapFocus, {
    children: /* @__PURE__ */ A.jsx(Dae, J({
      tabIndex: -1,
      className: nt(p.root, i),
      ownerState: d
    }, u, {
      ref: n
    }))
  }));
});
process.env.NODE_ENV !== "production" && (wM.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  slotProps: a.object
});
function jH(e) {
  var n;
  const t = Vt();
  return /* @__PURE__ */ A.jsx(wM, J({}, e, {
    children: /* @__PURE__ */ A.jsx(t.slots.columnsManagement, J({}, (n = t.slotProps) == null ? void 0 : n.columnsManagement))
  }));
}
process.env.NODE_ENV !== "production" && (jH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  slotProps: a.object
});
const Lae = ["children", "className", "classes"], Fae = bn("MuiDataGrid", ["panel", "paper"]), _ae = Be(Rf, {
  name: "MuiDataGrid",
  slot: "Panel",
  overridesResolver: (e, t) => t.panel
})(({
  theme: e
}) => ({
  zIndex: e.zIndex.modal
})), Aae = Be(bs, {
  name: "MuiDataGrid",
  slot: "Paper",
  overridesResolver: (e, t) => t.paper
})(({
  theme: e
}) => ({
  backgroundColor: (e.vars || e).palette.background.paper,
  minWidth: 300,
  maxHeight: 450,
  display: "flex",
  maxWidth: `calc(100vw - ${e.spacing(0.5)})`,
  overflow: "auto"
})), zH = nr((e, t) => {
  const {
    children: n,
    className: i
  } = e, s = Xt(e, Lae), u = In(), d = Vt(), p = Fae, [m, v] = w.useState(!1), y = w.useCallback(() => {
    u.current.hidePreferences();
  }, [u]), C = w.useCallback((E) => {
    E.key === "Escape" && u.current.hidePreferences();
  }, [u]), S = w.useMemo(() => [{
    name: "flip",
    enabled: !0,
    options: {
      rootBoundary: "document"
    }
  }, {
    name: "isPlaced",
    enabled: !0,
    phase: "main",
    fn: () => {
      v(!0);
    },
    effect: () => () => {
      v(!1);
    }
  }], []), [R, O] = w.useState(null);
  return w.useEffect(() => {
    var k, F;
    const E = (F = (k = u.current.rootElementRef) == null ? void 0 : k.current) == null ? void 0 : F.querySelector('[data-id="gridPanelAnchor"]');
    E && O(E);
  }, [u]), R ? /* @__PURE__ */ A.jsx(_ae, J({
    placement: "bottom-start",
    className: nt(p.panel, i),
    ownerState: d,
    anchorEl: R,
    modifiers: S
  }, s, {
    ref: t,
    children: /* @__PURE__ */ A.jsx(uC, {
      mouseEvent: "onPointerUp",
      touchEvent: !1,
      onClickAway: y,
      children: /* @__PURE__ */ A.jsx(Aae, {
        className: p.paper,
        ownerState: d,
        elevation: 8,
        onKeyDown: C,
        children: m && n
      })
    })
  })) : null;
});
process.env.NODE_ENV !== "production" && (zH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * Popper render function or node.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * If `true`, the component is shown.
   */
  open: a.bool.isRequired,
  ownerState: a.object
});
const $ae = ["className"], jae = (e) => {
  const {
    classes: t
  } = e;
  return yt({
    root: ["panelContent"]
  }, Gn, t);
}, zae = Dr("div", {
  name: "MuiDataGrid",
  slot: "PanelContent",
  overridesResolver: (e, t) => t.panelContent
})({
  display: "flex",
  flexDirection: "column",
  overflow: "auto",
  flex: "1 1",
  maxHeight: 400
});
function HH(e) {
  const {
    className: t
  } = e, n = Xt(e, $ae), i = Vt(), s = jae(i);
  return /* @__PURE__ */ A.jsx(zae, J({
    className: nt(s.root, t),
    ownerState: i
  }, n));
}
process.env.NODE_ENV !== "production" && (HH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
const Hae = ["className"], Vae = (e) => {
  const {
    classes: t
  } = e;
  return yt({
    root: ["panelFooter"]
  }, Gn, t);
}, Bae = Dr("div", {
  name: "MuiDataGrid",
  slot: "PanelFooter",
  overridesResolver: (e, t) => t.panelFooter
})(({
  theme: e
}) => ({
  padding: e.spacing(0.5),
  display: "flex",
  justifyContent: "space-between"
}));
function VH(e) {
  const {
    className: t
  } = e, n = Xt(e, Hae), i = Vt(), s = Vae(i);
  return /* @__PURE__ */ A.jsx(Bae, J({
    className: nt(s.root, t),
    ownerState: i
  }, n));
}
process.env.NODE_ENV !== "production" && (VH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
const Uae = ["item", "hasMultipleFilters", "deleteFilter", "applyFilterChanges", "showMultiFilterOperators", "disableMultiFilterOperator", "applyMultiFilterOperatorChanges", "focusElementRef", "logicOperators", "columnsSort", "filterColumns", "deleteIconProps", "logicOperatorInputProps", "operatorInputProps", "columnInputProps", "valueInputProps", "readOnly", "children"], Gae = ["InputComponentProps"], Wae = (e) => {
  const {
    classes: t
  } = e;
  return yt({
    root: ["filterForm"],
    deleteIcon: ["filterFormDeleteIcon"],
    logicOperatorInput: ["filterFormLogicOperatorInput"],
    columnInput: ["filterFormColumnInput"],
    operatorInput: ["filterFormOperatorInput"],
    valueInput: ["filterFormValueInput"]
  }, Gn, t);
}, qae = Be("div", {
  name: "MuiDataGrid",
  slot: "FilterForm",
  overridesResolver: (e, t) => t.filterForm
})(({
  theme: e
}) => ({
  display: "flex",
  padding: e.spacing(1)
})), Kae = Be("div", {
  name: "MuiDataGrid",
  slot: "FilterFormDeleteIcon",
  overridesResolver: (e, t) => t.filterFormDeleteIcon
})(({
  theme: e
}) => ({
  flexShrink: 0,
  justifyContent: "flex-end",
  marginRight: e.spacing(0.5),
  marginBottom: e.spacing(0.2)
})), Yae = Be("div", {
  name: "MuiDataGrid",
  slot: "FilterFormLogicOperatorInput",
  overridesResolver: (e, t) => t.filterFormLogicOperatorInput
})({
  minWidth: 55,
  marginRight: 5,
  justifyContent: "end"
}), Xae = Be("div", {
  name: "MuiDataGrid",
  slot: "FilterFormColumnInput",
  overridesResolver: (e, t) => t.filterFormColumnInput
})({
  width: 150
}), Qae = Be("div", {
  name: "MuiDataGrid",
  slot: "FilterFormOperatorInput",
  overridesResolver: (e, t) => t.filterFormOperatorInput
})({
  width: 150
}), Jae = Be("div", {
  name: "MuiDataGrid",
  slot: "FilterFormValueInput",
  overridesResolver: (e, t) => t.filterFormValueInput
})({
  width: 190
}), Zae = (e) => {
  switch (e) {
    case xa.And:
      return "filterPanelOperatorAnd";
    case xa.Or:
      return "filterPanelOperatorOr";
    default:
      throw new Error("MUI X: Invalid `logicOperator` property in the `GridFilterPanel`.");
  }
}, Lb = (e) => e.headerName || e.field, MA = new Intl.Collator(), Kk = nr(function(t, n) {
  var He, et, Ne, rt, it, wt, gt, ot, jt;
  const {
    item: i,
    hasMultipleFilters: s,
    deleteFilter: u,
    applyFilterChanges: d,
    showMultiFilterOperators: p,
    disableMultiFilterOperator: m,
    applyMultiFilterOperatorChanges: v,
    focusElementRef: y,
    logicOperators: C = [xa.And, xa.Or],
    columnsSort: S,
    filterColumns: R,
    deleteIconProps: O = {},
    logicOperatorInputProps: E = {},
    operatorInputProps: k = {},
    columnInputProps: F = {},
    valueInputProps: _ = {},
    readOnly: L
  } = t, M = Xt(t, Uae), D = In(), H = tt(D, ed), K = tt(D, cz), Q = tt(D, yi), z = Sr(), I = Sr(), G = Sr(), W = Sr(), B = Vt(), ee = Wae(B), U = w.useRef(null), q = w.useRef(null), Y = Q.logicOperator ?? xa.And, ne = s && C.length > 0, re = ((He = B.slotProps) == null ? void 0 : He.baseFormControl) || {}, j = (((et = B.slotProps) == null ? void 0 : et.baseSelect) || {}).native ?? !1, ie = ((Ne = B.slotProps) == null ? void 0 : Ne.baseInputLabel) || {}, fe = ((rt = B.slotProps) == null ? void 0 : rt.baseSelectOption) || {}, {
    InputComponentProps: ce
  } = _, me = Xt(_, Gae), {
    filteredColumns: ge,
    selectedField: de
  } = w.useMemo(() => {
    let ct = i.field;
    const Tt = H[i.field].filterable === !1 ? H[i.field] : null;
    if (Tt)
      return {
        filteredColumns: [Tt],
        selectedField: ct
      };
    if (R === void 0 || typeof R != "function")
      return {
        filteredColumns: K,
        selectedField: ct
      };
    const Rt = R({
      field: i.field,
      columns: K,
      currentFilters: (Q == null ? void 0 : Q.items) || []
    });
    return {
      filteredColumns: K.filter((Lt) => {
        const vt = Rt.includes(Lt.field);
        return Lt.field === i.field && !vt && (ct = void 0), vt;
      }),
      selectedField: ct
    };
  }, [R, Q == null ? void 0 : Q.items, K, i.field, H]), pe = w.useMemo(() => {
    switch (S) {
      case "asc":
        return ge.sort((ct, Tt) => MA.compare(Lb(ct), Lb(Tt)));
      case "desc":
        return ge.sort((ct, Tt) => -MA.compare(Lb(ct), Lb(Tt)));
      default:
        return ge;
    }
  }, [ge, S]), be = i.field ? D.current.getColumn(i.field) : null, Ce = w.useMemo(() => {
    var ct;
    return !i.operator || !be ? null : (ct = be.filterOperators) == null ? void 0 : ct.find((Tt) => Tt.value === i.operator);
  }, [i, be]), Re = w.useCallback((ct) => {
    const Tt = ct.target.value, Rt = D.current.getColumn(Tt);
    if (Rt.field === be.field)
      return;
    const Lt = Rt.filterOperators.find((Oe) => Oe.value === i.operator) || Rt.filterOperators[0];
    let Qe = !Lt.InputComponent || Lt.InputComponent !== (Ce == null ? void 0 : Ce.InputComponent) || Rt.type !== be.type ? void 0 : i.value;
    if (Rt.type === "singleSelect" && Qe !== void 0) {
      const Oe = Rt, Me = hh(Oe);
      Array.isArray(Qe) ? Qe = Qe.filter((ht) => (
        // Only keep values that are in the new value options
        Y0(ht, Me, Oe == null ? void 0 : Oe.getOptionValue) !== void 0
      )) : Y0(i.value, Me, Oe == null ? void 0 : Oe.getOptionValue) === void 0 && (Qe = void 0);
    }
    d(J({}, i, {
      field: Tt,
      operator: Lt.value,
      value: Qe
    }));
  }, [D, d, i, be, Ce]), ue = w.useCallback((ct) => {
    const Tt = ct.target.value, Rt = be == null ? void 0 : be.filterOperators.find((vt) => vt.value === Tt), Lt = !(Rt != null && Rt.InputComponent) || (Rt == null ? void 0 : Rt.InputComponent) !== (Ce == null ? void 0 : Ce.InputComponent);
    d(J({}, i, {
      operator: Tt,
      value: Lt ? void 0 : i.value
    }));
  }, [d, i, be, Ce]), we = w.useCallback((ct) => {
    const Tt = ct.target.value === xa.And.toString() ? xa.And : xa.Or;
    v(Tt);
  }, [v]), _e = () => {
    u(i);
  };
  return w.useImperativeHandle(y, () => ({
    focus: () => {
      var ct;
      Ce != null && Ce.InputComponent ? (ct = U == null ? void 0 : U.current) == null || ct.focus() : q.current.focus();
    }
  }), [Ce]), /* @__PURE__ */ A.jsxs(qae, J({
    className: ee.root,
    "data-id": i.id,
    ownerState: B
  }, M, {
    ref: n,
    children: [/* @__PURE__ */ A.jsx(Kae, J({
      variant: "standard",
      as: B.slots.baseFormControl
    }, re, O, {
      className: nt(ee.deleteIcon, re.className, O.className),
      ownerState: B,
      children: /* @__PURE__ */ A.jsx(B.slots.baseIconButton, J({
        "aria-label": D.current.getLocaleText("filterPanelDeleteIconLabel"),
        title: D.current.getLocaleText("filterPanelDeleteIconLabel"),
        onClick: _e,
        size: "small",
        disabled: L
      }, (it = B.slotProps) == null ? void 0 : it.baseIconButton, {
        children: /* @__PURE__ */ A.jsx(B.slots.filterPanelDeleteIcon, {
          fontSize: "small"
        })
      }))
    })), /* @__PURE__ */ A.jsx(Yae, J({
      variant: "standard",
      as: B.slots.baseFormControl
    }, re, E, {
      sx: [ne ? {
        display: "flex"
      } : {
        display: "none"
      }, p ? {
        visibility: "visible"
      } : {
        visibility: "hidden"
      }, re.sx, E.sx],
      className: nt(ee.logicOperatorInput, re.className, E.className),
      ownerState: B,
      children: /* @__PURE__ */ A.jsx(B.slots.baseSelect, J({
        inputProps: {
          "aria-label": D.current.getLocaleText("filterPanelLogicOperator")
        },
        value: Y ?? "",
        onChange: we,
        disabled: !!m || C.length === 1,
        native: j
      }, (wt = B.slotProps) == null ? void 0 : wt.baseSelect, {
        children: C.map((ct) => /* @__PURE__ */ w.createElement(B.slots.baseSelectOption, J({}, fe, {
          native: j,
          key: ct.toString(),
          value: ct.toString()
        }), D.current.getLocaleText(Zae(ct))))
      }))
    })), /* @__PURE__ */ A.jsxs(Xae, J({
      variant: "standard",
      as: B.slots.baseFormControl
    }, re, F, {
      className: nt(ee.columnInput, re.className, F.className),
      ownerState: B,
      children: [/* @__PURE__ */ A.jsx(B.slots.baseInputLabel, J({}, ie, {
        htmlFor: z,
        id: I,
        children: D.current.getLocaleText("filterPanelColumns")
      })), /* @__PURE__ */ A.jsx(B.slots.baseSelect, J({
        labelId: I,
        id: z,
        label: D.current.getLocaleText("filterPanelColumns"),
        value: de ?? "",
        onChange: Re,
        native: j,
        disabled: L
      }, (gt = B.slotProps) == null ? void 0 : gt.baseSelect, {
        children: pe.map((ct) => /* @__PURE__ */ w.createElement(B.slots.baseSelectOption, J({}, fe, {
          native: j,
          key: ct.field,
          value: ct.field
        }), Lb(ct)))
      }))]
    })), /* @__PURE__ */ A.jsxs(Qae, J({
      variant: "standard",
      as: B.slots.baseFormControl
    }, re, k, {
      className: nt(ee.operatorInput, re.className, k.className),
      ownerState: B,
      children: [/* @__PURE__ */ A.jsx(B.slots.baseInputLabel, J({}, ie, {
        htmlFor: G,
        id: W,
        children: D.current.getLocaleText("filterPanelOperator")
      })), /* @__PURE__ */ A.jsx(B.slots.baseSelect, J({
        labelId: W,
        label: D.current.getLocaleText("filterPanelOperator"),
        id: G,
        value: i.operator,
        onChange: ue,
        native: j,
        inputRef: q,
        disabled: L
      }, (ot = B.slotProps) == null ? void 0 : ot.baseSelect, {
        children: (jt = be == null ? void 0 : be.filterOperators) == null ? void 0 : jt.map((ct) => /* @__PURE__ */ w.createElement(B.slots.baseSelectOption, J({}, fe, {
          native: j,
          key: ct.value,
          value: ct.value
        }), ct.label || D.current.getLocaleText(`filterOperator${Ue(ct.value)}`)))
      }))]
    })), /* @__PURE__ */ A.jsx(Jae, J({
      variant: "standard",
      as: B.slots.baseFormControl
    }, re, me, {
      className: nt(ee.valueInput, re.className, me.className),
      ownerState: B,
      children: Ce != null && Ce.InputComponent ? /* @__PURE__ */ A.jsx(Ce.InputComponent, J({
        apiRef: D,
        item: i,
        applyValue: d,
        focusElementRef: U,
        disabled: L
      }, Ce.InputComponentProps, ce), i.field) : null
    }))]
  }));
});
process.env.NODE_ENV !== "production" && (Kk.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * Callback called when the operator, column field or value is changed.
   * @param {GridFilterItem} item The updated [[GridFilterItem]].
   */
  applyFilterChanges: a.func.isRequired,
  /**
   * Callback called when the logic operator is changed.
   * @param {GridLogicOperator} operator The new logic operator.
   */
  applyMultiFilterOperatorChanges: a.func.isRequired,
  /**
   * @ignore - do not document.
   */
  children: a.node,
  /**
   * Props passed to the column input component.
   * @default {}
   */
  columnInputProps: a.any,
  /**
   * Changes how the options in the columns selector should be ordered.
   * If not specified, the order is derived from the `columns` prop.
   */
  columnsSort: a.oneOf(["asc", "desc"]),
  /**
   * Callback called when the delete button is clicked.
   * @param {GridFilterItem} item The deleted [[GridFilterItem]].
   */
  deleteFilter: a.func.isRequired,
  /**
   * Props passed to the delete icon.
   * @default {}
   */
  deleteIconProps: a.any,
  /**
   * If `true`, disables the logic operator field but still renders it.
   */
  disableMultiFilterOperator: a.bool,
  /**
   * Allows to filter the columns displayed in the filter form.
   * @param {FilterColumnsArgs} args The columns of the grid and name of field.
   * @returns {GridColDef['field'][]} The filtered fields array.
   */
  filterColumns: a.func,
  /**
   * A ref allowing to set imperative focus.
   * It can be passed to the el
   */
  focusElementRef: a.oneOfType([a.func, a.object]),
  /**
   * If `true`, the logic operator field is rendered.
   * The field will be invisible if `showMultiFilterOperators` is also `true`.
   */
  hasMultipleFilters: a.bool.isRequired,
  /**
   * The [[GridFilterItem]] representing this form.
   */
  item: a.shape({
    field: a.string.isRequired,
    id: a.oneOfType([a.number, a.string]),
    operator: a.string.isRequired,
    value: a.any
  }).isRequired,
  /**
   * Props passed to the logic operator input component.
   * @default {}
   */
  logicOperatorInputProps: a.any,
  /**
   * Sets the available logic operators.
   * @default [GridLogicOperator.And, GridLogicOperator.Or]
   */
  logicOperators: a.arrayOf(a.oneOf(["and", "or"]).isRequired),
  /**
   * Props passed to the operator input component.
   * @default {}
   */
  operatorInputProps: a.any,
  /**
   * `true` if the filter is disabled/read only.
   * i.e. `colDef.fiterable = false` but passed in `filterModel`
   * @default false
   */
  readOnly: a.bool,
  /**
   * If `true`, the logic operator field is visible.
   */
  showMultiFilterOperators: a.bool,
  /**
   * Props passed to the value input component.
   * @default {}
   */
  valueInputProps: a.any
});
const ese = ["logicOperators", "columnsSort", "filterFormProps", "getColumnForNewFilter", "children", "disableAddFilterButton", "disableRemoveAllButton"], IA = (e) => ({
  field: e.field,
  operator: e.filterOperators[0].value,
  id: Math.round(Math.random() * 1e5)
}), BH = nr(function(t, n) {
  var W, B;
  const i = In(), s = Vt(), u = tt(i, yi), d = tt(i, cz), p = tt(i, $te), m = w.useRef(null), v = w.useRef(null), {
    logicOperators: y = [xa.And, xa.Or],
    columnsSort: C,
    filterFormProps: S,
    getColumnForNewFilter: R,
    disableAddFilterButton: O = !1,
    disableRemoveAllButton: E = !1
  } = t, k = Xt(t, ese), F = i.current.upsertFilterItem, _ = w.useCallback((ee) => {
    i.current.setFilterLogicOperator(ee);
  }, [i]), L = w.useCallback(() => {
    let ee;
    if (R && typeof R == "function") {
      const U = R({
        currentFilters: (u == null ? void 0 : u.items) || [],
        columns: d
      });
      if (U === null)
        return null;
      ee = d.find(({
        field: q
      }) => q === U);
    } else
      ee = d.find((U) => {
        var q;
        return (q = U.filterOperators) == null ? void 0 : q.length;
      });
    return ee ? IA(ee) : null;
  }, [u == null ? void 0 : u.items, d, R]), M = w.useCallback(() => {
    if (R === void 0 || typeof R != "function")
      return L();
    const ee = u.items.length ? u.items : [L()].filter(Boolean), U = R({
      currentFilters: ee,
      columns: d
    });
    if (U === null)
      return null;
    const q = d.find(({
      field: Y
    }) => Y === U);
    return q ? IA(q) : null;
  }, [u.items, d, R, L]), D = w.useMemo(() => u.items.length ? u.items : (v.current || (v.current = L()), v.current ? [v.current] : []), [u.items, L]), H = D.length > 1, {
    readOnlyFilters: K,
    validFilters: Q
  } = w.useMemo(() => D.reduce((ee, U) => (p[U.field] ? ee.validFilters.push(U) : ee.readOnlyFilters.push(U), ee), {
    readOnlyFilters: [],
    validFilters: []
  }), [D, p]), z = w.useCallback(() => {
    const ee = M();
    ee && i.current.upsertFilterItems([...D, ee]);
  }, [i, M, D]), I = w.useCallback((ee) => {
    const U = Q.length === 1;
    i.current.deleteFilterItem(ee), U && i.current.hideFilterPanel();
  }, [i, Q.length]), G = w.useCallback(() => Q.length === 1 && Q[0].value === void 0 ? (i.current.deleteFilterItem(Q[0]), i.current.hideFilterPanel()) : i.current.setFilterModel(J({}, u, {
    items: K
  }), "removeAllFilterItems"), [i, K, u, Q]);
  return w.useEffect(() => {
    y.length > 0 && u.logicOperator && !y.includes(u.logicOperator) && _(y[0]);
  }, [y, _, u.logicOperator]), w.useEffect(() => {
    Q.length > 0 && m.current.focus();
  }, [Q.length]), /* @__PURE__ */ A.jsxs(wM, J({}, k, {
    ref: n,
    children: [/* @__PURE__ */ A.jsxs(HH, {
      children: [K.map((ee, U) => /* @__PURE__ */ A.jsx(Kk, J({
        item: ee,
        applyFilterChanges: F,
        deleteFilter: I,
        hasMultipleFilters: H,
        showMultiFilterOperators: U > 0,
        disableMultiFilterOperator: U !== 1,
        applyMultiFilterOperatorChanges: _,
        focusElementRef: null,
        readOnly: !0,
        logicOperators: y,
        columnsSort: C
      }, S), ee.id == null ? U : ee.id)), Q.map((ee, U) => /* @__PURE__ */ A.jsx(Kk, J({
        item: ee,
        applyFilterChanges: F,
        deleteFilter: I,
        hasMultipleFilters: H,
        showMultiFilterOperators: K.length + U > 0,
        disableMultiFilterOperator: K.length + U !== 1,
        applyMultiFilterOperatorChanges: _,
        focusElementRef: U === Q.length - 1 ? m : null,
        logicOperators: y,
        columnsSort: C
      }, S), ee.id == null ? U + K.length : ee.id))]
    }), !s.disableMultipleColumnsFiltering && !(O && E) ? /* @__PURE__ */ A.jsxs(VH, {
      children: [O ? /* @__PURE__ */ A.jsx("span", {}) : /* @__PURE__ */ A.jsx(s.slots.baseButton, J({
        onClick: z,
        startIcon: /* @__PURE__ */ A.jsx(s.slots.filterPanelAddIcon, {})
      }, (W = s.slotProps) == null ? void 0 : W.baseButton, {
        children: i.current.getLocaleText("filterPanelAddFilter")
      })), !E && Q.length > 0 ? /* @__PURE__ */ A.jsx(s.slots.baseButton, J({
        onClick: G,
        startIcon: /* @__PURE__ */ A.jsx(s.slots.filterPanelRemoveAllIcon, {})
      }, (B = s.slotProps) == null ? void 0 : B.baseButton, {
        children: i.current.getLocaleText("filterPanelRemoveAll")
      })) : null]
    }) : null]
  }));
});
process.env.NODE_ENV !== "production" && (BH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * @ignore - do not document.
   */
  children: a.node,
  /**
   * Changes how the options in the columns selector should be ordered.
   * If not specified, the order is derived from the `columns` prop.
   */
  columnsSort: a.oneOf(["asc", "desc"]),
  /**
   * If `true`, the `Add filter` button will not be displayed.
   * @default false
   */
  disableAddFilterButton: a.bool,
  /**
   * If `true`, the `Remove all` button will be disabled
   * @default false
   */
  disableRemoveAllButton: a.bool,
  /**
   * Props passed to each filter form.
   */
  filterFormProps: a.shape({
    columnInputProps: a.any,
    columnsSort: a.oneOf(["asc", "desc"]),
    deleteIconProps: a.any,
    filterColumns: a.func,
    logicOperatorInputProps: a.any,
    operatorInputProps: a.any,
    valueInputProps: a.any
  }),
  /**
   * Function that returns the next filter item to be picked as default filter.
   * @param {GetColumnForNewFilterArgs} args Currently configured filters and columns.
   * @returns {GridColDef['field']} The field to be used for the next filter or `null` to prevent adding a filter.
   */
  getColumnForNewFilter: a.func,
  /**
   * Sets the available logic operators.
   * @default [GridLogicOperator.And, GridLogicOperator.Or]
   */
  logicOperators: a.arrayOf(a.oneOf(["and", "or"]).isRequired),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
const tse = (e, t) => {
  const n = new Set(Object.keys(e).filter((u) => e[u] === !1)), i = new Set(Object.keys(t).filter((u) => t[u] === !1));
  if (n.size !== i.size)
    return !1;
  let s = !0;
  return n.forEach((u) => {
    i.has(u) || (s = !1);
  }), s;
}, nse = (e, t) => (e.headerName || e.field).toLowerCase().indexOf(t) > -1, rse = (e) => {
  const {
    classes: t
  } = e;
  return yt({
    root: ["columnsManagement"],
    header: ["columnsManagementHeader"],
    searchInput: ["columnsManagementSearchInput"],
    footer: ["columnsManagementFooter"],
    row: ["columnsManagementRow"]
  }, Gn, t);
}, DA = new Intl.Collator();
function UH(e) {
  var U, q, Y, ne;
  const t = In(), n = w.useRef(null), i = tt(t, nl), s = sl(() => Zs(t)).current, u = tt(t, Zs), d = Vt(), [p, m] = w.useState(""), v = rse(d), {
    sort: y,
    searchPredicate: C = nse,
    autoFocusSearchField: S = !0,
    disableShowHideToggle: R = !1,
    disableResetButton: O = !1,
    toggleAllMode: E = "all",
    getTogglableColumns: k,
    searchInputProps: F
  } = e, _ = w.useMemo(() => tse(u, s), [u, s]), L = w.useMemo(() => {
    switch (y) {
      case "asc":
        return [...i].sort((re, X) => DA.compare(re.headerName || re.field, X.headerName || X.field));
      case "desc":
        return [...i].sort((re, X) => -DA.compare(re.headerName || re.field, X.headerName || X.field));
      default:
        return i;
    }
  }, [i, y]), M = (re) => {
    const {
      name: X
    } = re.target;
    t.current.setColumnVisibility(X, u[X] === !1);
  }, D = w.useMemo(() => {
    const re = k ? k(L) : null, X = re ? L.filter(({
      field: j
    }) => re.includes(j)) : L;
    return p ? X.filter((j) => C(j, p.toLowerCase())) : X;
  }, [L, p, C, k]), H = w.useCallback((re) => {
    const X = Zs(t), j = J({}, X), ie = k ? k(i) : null;
    return (E === "filteredOnly" ? D : i).forEach((fe) => {
      fe.hideable && (ie == null || ie.includes(fe.field)) && (re ? delete j[fe.field] : j[fe.field] = !1);
    }), t.current.setColumnVisibilityModel(j);
  }, [t, i, k, E, D]), K = w.useCallback((re) => {
    m(re.target.value);
  }, []), Q = w.useMemo(() => D.filter((re) => re.hideable), [D]), z = w.useMemo(() => Q.every((re) => u[re.field] == null || u[re.field] !== !1), [u, Q]), I = w.useMemo(() => Q.every((re) => u[re.field] === !1), [u, Q]), G = w.useRef(null);
  w.useEffect(() => {
    S ? n.current.focus() : G.current && typeof G.current.focus == "function" && G.current.focus();
  }, [S]);
  let W = !1;
  const B = (re) => W === !1 && re.hideable !== !1 ? (W = !0, !0) : !1, ee = w.useCallback(() => {
    m(""), n.current.focus();
  }, []);
  return /* @__PURE__ */ A.jsxs(w.Fragment, {
    children: [/* @__PURE__ */ A.jsx(ise, {
      className: v.header,
      ownerState: d,
      children: /* @__PURE__ */ A.jsx(ase, J({
        as: d.slots.baseTextField,
        ownerState: d,
        placeholder: t.current.getLocaleText("columnsManagementSearchTitle"),
        inputRef: n,
        className: v.searchInput,
        value: p,
        onChange: K,
        variant: "outlined",
        size: "small",
        type: "search",
        InputProps: {
          startAdornment: /* @__PURE__ */ A.jsx(d.slots.baseInputAdornment, {
            position: "start",
            children: /* @__PURE__ */ A.jsx(d.slots.quickFilterIcon, {})
          }),
          endAdornment: /* @__PURE__ */ A.jsx(d.slots.baseIconButton, J({
            "aria-label": t.current.getLocaleText("columnsManagementDeleteIconLabel"),
            size: "small",
            sx: [p ? {
              visibility: "visible"
            } : {
              visibility: "hidden"
            }],
            tabIndex: -1,
            onClick: ee
          }, (U = d.slotProps) == null ? void 0 : U.baseIconButton, {
            children: /* @__PURE__ */ A.jsx(d.slots.quickFilterClearIcon, {
              fontSize: "small"
            })
          }))
        },
        inputProps: {
          "aria-label": t.current.getLocaleText("columnsManagementSearchTitle")
        },
        autoComplete: "off",
        fullWidth: !0
      }, (q = d.slotProps) == null ? void 0 : q.baseTextField, F))
    }), /* @__PURE__ */ A.jsxs(ose, {
      className: v.root,
      ownerState: d,
      children: [D.map((re) => {
        var X;
        return /* @__PURE__ */ A.jsx(kk, {
          className: v.row,
          control: /* @__PURE__ */ A.jsx(d.slots.baseCheckbox, J({
            disabled: re.hideable === !1,
            checked: u[re.field] !== !1,
            onClick: M,
            name: re.field,
            sx: {
              p: 0.5
            },
            inputRef: B(re) ? G : void 0
          }, (X = d.slotProps) == null ? void 0 : X.baseCheckbox)),
          label: re.headerName || re.field
        }, re.field);
      }), D.length === 0 && /* @__PURE__ */ A.jsx(lse, {
        ownerState: d,
        children: t.current.getLocaleText("columnsManagementNoColumns")
      })]
    }), (!R || !O) && D.length > 0 ? /* @__PURE__ */ A.jsxs(sse, {
      ownerState: d,
      className: v.footer,
      children: [R ? /* @__PURE__ */ A.jsx("span", {}) : /* @__PURE__ */ A.jsx(kk, {
        control: /* @__PURE__ */ A.jsx(d.slots.baseCheckbox, J({
          disabled: Q.length === 0,
          checked: z,
          indeterminate: !z && !I,
          onClick: () => H(!z),
          name: t.current.getLocaleText("columnsManagementShowHideAllText"),
          sx: {
            p: 0.5
          }
        }, (Y = d.slotProps) == null ? void 0 : Y.baseCheckbox)),
        label: t.current.getLocaleText("columnsManagementShowHideAllText")
      }), O ? null : /* @__PURE__ */ A.jsx(d.slots.baseButton, J({
        onClick: () => t.current.setColumnVisibilityModel(s),
        disabled: _
      }, (ne = d.slotProps) == null ? void 0 : ne.baseButton, {
        children: t.current.getLocaleText("columnsManagementReset")
      }))]
    }) : null]
  });
}
process.env.NODE_ENV !== "production" && (UH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * If `true`, the column search field will be focused automatically.
   * If `false`, the first column switch input will be focused automatically.
   * This helps to avoid input keyboard panel to popup automatically on touch devices.
   * @default true
   */
  autoFocusSearchField: a.bool,
  /**
   * If `true`, the `Reset` button will not be disabled
   * @default false
   */
  disableResetButton: a.bool,
  /**
   * If `true`, the `Show/Hide all` toggle checkbox will not be displayed.
   * @default false
   */
  disableShowHideToggle: a.bool,
  /**
   * Returns the list of togglable columns.
   * If used, only those columns will be displayed in the panel
   * which are passed as the return value of the function.
   * @param {GridColDef[]} columns The `ColDef` list of all columns.
   * @returns {GridColDef['field'][]} The list of togglable columns' field names.
   */
  getTogglableColumns: a.func,
  searchInputProps: a.object,
  searchPredicate: a.func,
  sort: a.oneOf(["asc", "desc"]),
  /**
   * Changes the behavior of the `Show/Hide All` toggle when the search field is used:
   * - `all`: Will toggle all columns.
   * - `filteredOnly`: Will only toggle columns that match the search criteria.
   * @default 'all'
   */
  toggleAllMode: a.oneOf(["all", "filteredOnly"])
});
const ose = Be("div", {
  name: "MuiDataGrid",
  slot: "ColumnsManagement",
  overridesResolver: (e, t) => t.columnsManagement
})(({
  theme: e
}) => ({
  padding: e.spacing(0, 3, 1.5),
  display: "flex",
  flexDirection: "column",
  overflow: "auto",
  flex: "1 1",
  maxHeight: 400,
  alignItems: "flex-start"
})), ise = Be("div", {
  name: "MuiDataGrid",
  slot: "ColumnsManagementHeader",
  overridesResolver: (e, t) => t.columnsManagementHeader
})(({
  theme: e
}) => ({
  padding: e.spacing(1.5, 3)
})), ase = Be(Jp, {
  name: "MuiDataGrid",
  slot: "ColumnsManagementSearchInput",
  overridesResolver: (e, t) => t.columnsManagementSearchInput
})(({
  theme: e
}) => ({
  [`& .${bi.root}`]: {
    padding: e.spacing(0, 1.5, 0, 1.5)
  },
  [`& .${bi.input}::-webkit-search-decoration,
  & .${bi.input}::-webkit-search-cancel-button,
  & .${bi.input}::-webkit-search-results-button,
  & .${bi.input}::-webkit-search-results-decoration`]: {
    /* clears the 'X' icon from Chrome */
    display: "none"
  }
})), sse = Be("div", {
  name: "MuiDataGrid",
  slot: "ColumnsManagementFooter",
  overridesResolver: (e, t) => t.columnsManagementFooter
})(({
  theme: e
}) => ({
  padding: e.spacing(0.5, 1, 0.5, 3),
  display: "flex",
  justifyContent: "space-between",
  borderTop: `1px solid ${e.palette.divider}`
})), lse = Be("div")(({
  theme: e
}) => ({
  padding: e.spacing(0.5, 0),
  color: e.palette.grey[500]
})), GH = nr(function(t, n) {
  var _, L;
  const {
    children: i,
    slotProps: s = {}
  } = t, u = s.button || {}, d = s.tooltip || {}, p = In(), m = Vt(), v = Sr(), y = Sr(), [C, S] = w.useState(!1), R = w.useRef(null), O = Vr(n, R), E = (M) => {
    var D;
    S((H) => !H), (D = u.onClick) == null || D.call(u, M);
  }, k = () => S(!1), F = (M) => {
    M.key === "Tab" && M.preventDefault(), PH(M.key) && k();
  };
  return i == null ? null : /* @__PURE__ */ A.jsxs(w.Fragment, {
    children: [/* @__PURE__ */ A.jsx(m.slots.baseTooltip, J({
      title: p.current.getLocaleText("toolbarExportLabel"),
      enterDelay: 1e3
    }, (_ = m.slotProps) == null ? void 0 : _.baseTooltip, d, {
      children: /* @__PURE__ */ A.jsx(m.slots.baseButton, J({
        size: "small",
        startIcon: /* @__PURE__ */ A.jsx(m.slots.exportIcon, {}),
        "aria-expanded": C,
        "aria-label": p.current.getLocaleText("toolbarExportLabel"),
        "aria-haspopup": "menu",
        "aria-controls": C ? y : void 0,
        id: v
      }, (L = m.slotProps) == null ? void 0 : L.baseButton, u, {
        onClick: E,
        ref: O,
        children: p.current.getLocaleText("toolbarExport")
      }))
    })), /* @__PURE__ */ A.jsx(AE, {
      open: C,
      target: R.current,
      onClose: k,
      position: "bottom-start",
      children: /* @__PURE__ */ A.jsx(_C, {
        id: y,
        className: ae.menuList,
        "aria-labelledby": v,
        onKeyDown: F,
        autoFocusItem: C,
        children: w.Children.map(i, (M) => /* @__PURE__ */ w.isValidElement(M) ? /* @__PURE__ */ w.cloneElement(M, {
          hideMenu: k
        }) : M)
      })
    })]
  });
});
process.env.NODE_ENV !== "production" && (GH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.object
});
const use = ["hideMenu", "options"], cse = ["hideMenu", "options"], dse = ["csvOptions", "printOptions", "excelOptions"];
function WH(e) {
  const t = In(), {
    hideMenu: n,
    options: i
  } = e, s = Xt(e, use);
  return /* @__PURE__ */ A.jsx(ms, J({
    onClick: () => {
      t.current.exportDataAsCsv(i), n == null || n();
    }
  }, s, {
    children: t.current.getLocaleText("toolbarExportCSV")
  }));
}
process.env.NODE_ENV !== "production" && (WH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  hideMenu: a.func,
  options: a.shape({
    allColumns: a.bool,
    delimiter: a.string,
    disableToolbarButton: a.bool,
    escapeFormulas: a.bool,
    fields: a.arrayOf(a.string),
    fileName: a.string,
    getRowsToExport: a.func,
    includeColumnGroupsHeaders: a.bool,
    includeHeaders: a.bool,
    shouldAppendQuotes: a.bool,
    utf8WithBom: a.bool
  })
});
function qH(e) {
  const t = In(), {
    hideMenu: n,
    options: i
  } = e, s = Xt(e, cse);
  return /* @__PURE__ */ A.jsx(ms, J({
    onClick: () => {
      t.current.exportDataAsPrint(i), n == null || n();
    }
  }, s, {
    children: t.current.getLocaleText("toolbarExportPrint")
  }));
}
process.env.NODE_ENV !== "production" && (qH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  hideMenu: a.func,
  options: a.shape({
    allColumns: a.bool,
    bodyClassName: a.string,
    copyStyles: a.bool,
    disableToolbarButton: a.bool,
    fields: a.arrayOf(a.string),
    fileName: a.string,
    getRowsToExport: a.func,
    hideFooter: a.bool,
    hideToolbar: a.bool,
    includeCheckboxes: a.bool,
    pageStyle: a.oneOfType([a.func, a.string])
  })
});
const fse = nr(function(t, n) {
  const i = t, {
    csvOptions: s = {},
    printOptions: u = {},
    excelOptions: d
  } = i, p = Xt(i, dse), v = In().current.unstable_applyPipeProcessors("exportMenu", [], {
    excelOptions: d,
    csvOptions: s,
    printOptions: u
  }).sort((y, C) => y.componentName > C.componentName ? 1 : -1);
  return v.length === 0 ? null : /* @__PURE__ */ A.jsx(GH, J({}, p, {
    ref: n,
    children: v.map((y, C) => /* @__PURE__ */ w.cloneElement(y.component, {
      key: C
    }))
  }));
});
process.env.NODE_ENV !== "production" && (fse.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  csvOptions: a.object,
  printOptions: a.object,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.object
});
const pse = ["className", "selectedRowCount"], hse = (e) => {
  const {
    classes: t
  } = e;
  return yt({
    root: ["selectedRowCount"]
  }, Gn, t);
}, mse = Dr("div", {
  name: "MuiDataGrid",
  slot: "SelectedRowCount",
  overridesResolver: (e, t) => t.selectedRowCount
})(({
  theme: e
}) => ({
  alignItems: "center",
  display: "flex",
  margin: e.spacing(0, 2),
  visibility: "hidden",
  width: 0,
  height: 0,
  [e.breakpoints.up("sm")]: {
    visibility: "visible",
    width: "auto",
    height: "auto"
  }
})), KH = nr(function(t, n) {
  const {
    className: i,
    selectedRowCount: s
  } = t, u = Xt(t, pse), d = In(), p = Vt(), m = hse(p), v = d.current.getLocaleText("footerRowSelected")(s);
  return /* @__PURE__ */ A.jsx(mse, J({
    className: nt(m.root, i),
    ownerState: p
  }, u, {
    ref: n,
    children: v
  }));
});
process.env.NODE_ENV !== "production" && (KH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  selectedRowCount: a.number.isRequired,
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
const YH = nr(function(t, n) {
  var C, S;
  const i = In(), s = Vt(), u = tt(i, Ste), d = tt(i, Ene), p = tt(i, cM), m = !s.hideFooterSelectedRowCount && d > 0 ? /* @__PURE__ */ A.jsx(KH, {
    selectedRowCount: d
  }) : /* @__PURE__ */ A.jsx("div", {}), v = !s.hideFooterRowCount && !s.pagination ? /* @__PURE__ */ A.jsx(s.slots.footerRowCount, J({}, (C = s.slotProps) == null ? void 0 : C.footerRowCount, {
    rowCount: u,
    visibleRowCount: p
  })) : null, y = s.pagination && !s.hideFooterPagination && s.slots.pagination && /* @__PURE__ */ A.jsx(s.slots.pagination, J({}, (S = s.slotProps) == null ? void 0 : S.pagination));
  return /* @__PURE__ */ A.jsxs(hH, J({}, t, {
    ref: n,
    children: [m, v, y]
  }));
});
process.env.NODE_ENV !== "production" && (YH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
const Jb = (e, t, n, i, s, u) => {
  let d;
  switch (e) {
    case jn.LEFT:
      d = i[n];
      break;
    case jn.RIGHT:
      d = s - i[n] - t + u;
      break;
    default:
      d = void 0;
      break;
  }
  return d;
}, eE = (e, t, n, i, s) => {
  const u = t === n - 1;
  return e === jn.LEFT && u ? !0 : i ? e === jn.LEFT ? !0 : e === jn.RIGHT ? !u : !u || s : !1;
}, tE = (e, t) => e === jn.RIGHT && t === 0, Fb = {
  root: ae.scrollbarFiller,
  header: ae["scrollbarFiller--header"],
  borderTop: ae["scrollbarFiller--borderTop"],
  borderBottom: ae["scrollbarFiller--borderBottom"],
  pinnedRight: ae["scrollbarFiller--pinnedRight"]
};
function xM({
  header: e,
  borderTop: t = !0,
  borderBottom: n,
  pinnedRight: i
}) {
  return /* @__PURE__ */ A.jsx("div", {
    role: "presentation",
    className: nt(Fb.root, e && Fb.header, t && Fb.borderTop, n && Fb.borderBottom, i && Fb.pinnedRight)
  });
}
const gse = Dr("div", {
  name: "MuiDataGrid",
  slot: "SkeletonLoadingOverlay",
  overridesResolver: (e, t) => t.skeletonLoadingOverlay
})({
  minWidth: "100%",
  width: "max-content",
  // prevents overflow: clip; cutting off the x axis
  height: "100%",
  overflow: "clip"
  // y axis is hidden while the x axis is allowed to overflow
}), vse = (e) => {
  const {
    classes: t
  } = e;
  return yt({
    root: ["skeletonLoadingOverlay"]
  }, Gn, t);
}, NA = (e) => parseInt(e.getAttribute("data-colindex"), 10), yse = nr(function(t, n) {
  const i = Vt(), {
    slots: s
  } = i, u = zi(), d = vse({
    classes: i.classes
  }), p = w.useRef(null), m = Vr(p, n), v = In(), y = tt(v, ui), C = (y == null ? void 0 : y.viewportInnerSize.height) ?? 0, S = Math.ceil(C / y.rowHeight), R = tt(v, _E), O = tt(v, Of), E = w.useMemo(() => O.filter((H) => H <= R).length, [R, O]), k = tt(v, ho), F = w.useMemo(() => k.slice(0, E), [k, E]), _ = tt(v, cv), L = w.useCallback((H) => {
    if (_.left.findIndex((K) => K.field === H) !== -1)
      return jn.LEFT;
    if (_.right.findIndex((K) => K.field === H) !== -1)
      return jn.RIGHT;
  }, [_.left, _.right]), M = w.useMemo(() => {
    const H = [];
    for (let K = 0; K < S; K += 1) {
      const Q = [];
      for (let z = 0; z < F.length; z += 1) {
        const I = F[z], G = L(I.field), W = G === jn.LEFT, B = G === jn.RIGHT, ee = cH(G, u), U = ee ? _[ee].length : F.length - _.left.length - _.right.length, q = ee ? _[ee].findIndex((Ce) => Ce.field === I.field) : z - _.left.length, Y = y.hasScrollY ? y.scrollbarSize : 0, ne = qE({}, u, G, Jb(G, I.computedWidth, z, O, y.columnsTotalWidth, Y)), re = y.columnsTotalWidth < y.viewportOuterSize.width, X = eE(G, q, U, i.showCellVerticalBorder, re), j = tE(G, q), ie = z === F.length - 1, fe = B && q === 0, ce = fe && re, me = ie && !fe && re, ge = y.viewportOuterSize.width - y.columnsTotalWidth, de = Math.max(0, ge), pe = /* @__PURE__ */ A.jsx(s.skeletonCell, {
          width: de,
          empty: !0
        }, `skeleton-filler-column-${K}`), be = ie && Y !== 0;
        ce && Q.push(pe), Q.push(/* @__PURE__ */ A.jsx(s.skeletonCell, {
          field: I.field,
          type: I.type,
          align: I.align,
          width: "var(--width)",
          height: y.rowHeight,
          "data-colindex": z,
          className: nt(W && ae["cell--pinnedLeft"], B && ae["cell--pinnedRight"], X && ae["cell--withRightBorder"], j && ae["cell--withLeftBorder"]),
          style: J({
            "--width": `${I.computedWidth}px`
          }, ne)
        }, `skeleton-column-${K}-${I.field}`)), me && Q.push(pe), be && Q.push(/* @__PURE__ */ A.jsx(xM, {
          pinnedRight: _.right.length > 0
        }, `skeleton-scrollbar-filler-${K}`));
      }
      H.push(/* @__PURE__ */ A.jsx("div", {
        className: nt(ae.row, ae.rowSkeleton, K === 0 && ae["row--firstVisible"]),
        children: Q
      }, `skeleton-row-${K}`));
    }
    return H;
  }, [s, F, _, S, i.showCellVerticalBorder, y, O, L, u]);
  return Mt(v, "columnResize", (H) => {
    var q, Y, ne;
    const {
      colDef: K,
      width: Q
    } = H, z = (q = p.current) == null ? void 0 : q.querySelectorAll(`[data-field="${td(K.field)}"]`);
    if (!z)
      throw new Error("MUI X: Expected skeleton cells to be defined with `data-field` attribute.");
    const I = F.findIndex((re) => re.field === K.field), G = L(K.field), W = G === jn.LEFT, B = G === jn.RIGHT, ee = getComputedStyle(z[0]).getPropertyValue("--width"), U = parseInt(ee, 10) - Q;
    if (z && z.forEach((re) => {
      re.style.setProperty("--width", `${Q}px`);
    }), W) {
      const re = (Y = p.current) == null ? void 0 : Y.querySelectorAll(`.${ae["cell--pinnedLeft"]}`);
      re == null || re.forEach((X) => {
        NA(X) > I && (X.style.left = `${parseInt(getComputedStyle(X).left, 10) - U}px`);
      });
    }
    if (B) {
      const re = (ne = p.current) == null ? void 0 : ne.querySelectorAll(`.${ae["cell--pinnedRight"]}`);
      re == null || re.forEach((X) => {
        NA(X) < I && (X.style.right = `${parseInt(getComputedStyle(X).right, 10) + U}px`);
      });
    }
  }), /* @__PURE__ */ A.jsx(gse, J({
    className: d.root
  }, t, {
    ref: m,
    children: M
  }));
}), bse = ["variant", "noRowsVariant", "style"], Cse = {
  "circular-progress": {
    component: EE,
    style: {}
  },
  "linear-progress": {
    component: Kj,
    style: {
      display: "block"
    }
  },
  skeleton: {
    component: yse,
    style: {
      display: "block"
    }
  }
}, XH = nr(function(t, n) {
  const {
    variant: i = "circular-progress",
    noRowsVariant: s = "circular-progress",
    style: u
  } = t, d = Xt(t, bse), p = In(), m = tt(p, BC), v = Cse[m === 0 ? s : i];
  return /* @__PURE__ */ A.jsx(KE, J({
    style: J({}, v.style, u)
  }, d, {
    ref: n,
    children: /* @__PURE__ */ A.jsx(v.component, {})
  }));
});
process.env.NODE_ENV !== "production" && (XH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * The variant of the overlay when no rows are displayed.
   * @default 'circular-progress'
   */
  noRowsVariant: a.oneOf(["circular-progress", "linear-progress", "skeleton"]),
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The variant of the overlay.
   * @default 'circular-progress'
   */
  variant: a.oneOf(["circular-progress", "linear-progress", "skeleton"])
});
const QH = nr(function(t, n) {
  const s = In().current.getLocaleText("noRowsLabel");
  return /* @__PURE__ */ A.jsx(KE, J({}, t, {
    ref: n,
    children: s
  }));
});
process.env.NODE_ENV !== "production" && (QH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
const Sse = Be(h2)(({
  theme: e
}) => ({
  maxHeight: "calc(100% + 1px)",
  // border width
  flexGrow: 1,
  [`& .${ch.selectLabel}`]: {
    display: "none",
    [e.breakpoints.up("sm")]: {
      display: "block"
    }
  },
  [`& .${ch.input}`]: {
    display: "none",
    [e.breakpoints.up("sm")]: {
      display: "inline-flex"
    }
  }
})), wse = (e, t) => ({
  from: n,
  to: i,
  count: s,
  page: u
}) => e({
  from: n,
  to: i,
  count: s,
  page: u,
  estimated: t
}), xse = ({
  from: e,
  to: t,
  count: n,
  estimated: i
}) => i ? `${e}–${t} of ${n !== -1 ? n : `more than ${i > t ? i : t}`}` : `${e}–${t} of ${n !== -1 ? n : `more than ${t}`}`, JH = nr(function(t, n) {
  var M;
  const i = In(), s = Vt(), u = tt(i, aa), d = tt(i, Og), p = tt(i, Az), {
    paginationMode: m,
    loading: v,
    estimatedRowCount: y
  } = s, C = w.useMemo(() => d === -1 && m === "server" && v ? {
    backIconButtonProps: {
      disabled: !0
    },
    nextIconButtonProps: {
      disabled: !0
    }
  } : {}, [v, m, d]), S = w.useMemo(() => Math.max(0, p - 1), [p]), R = w.useMemo(() => d === -1 || u.page <= S ? u.page : S, [S, u.page, d]), O = w.useCallback((D) => {
    const H = Number(D.target.value);
    i.current.setPageSize(H);
  }, [i]), E = w.useCallback((D, H) => {
    i.current.setPage(H);
  }, [i]), k = (D) => {
    for (let H = 0; H < s.pageSizeOptions.length; H += 1) {
      const K = s.pageSizeOptions[H];
      if (typeof K == "number") {
        if (K === D)
          return !0;
      } else if (K.value === D)
        return !0;
    }
    return !1;
  };
  if (process.env.NODE_ENV !== "production") {
    const D = w.useRef(!1), H = ((M = s.paginationModel) == null ? void 0 : M.pageSize) ?? u.pageSize;
    !D.current && !s.autoPageSize && !k(H) && (console.warn([`MUI X: The page size \`${u.pageSize}\` is not present in the \`pageSizeOptions\`.`, "Add it to show the pagination select."].join(`
`)), D.current = !0);
  }
  const F = k(u.pageSize) ? s.pageSizeOptions : [], _ = i.current.getLocaleText("MuiTablePagination"), L = wse(_.labelDisplayedRows || xse, y);
  return /* @__PURE__ */ A.jsx(Sse, J({
    component: "div",
    count: d,
    page: R,
    rowsPerPageOptions: F,
    rowsPerPage: u.pageSize,
    onPageChange: E,
    onRowsPerPageChange: O
  }, C, _, {
    labelDisplayedRows: L
  }, t, {
    ref: n
  }));
});
process.env.NODE_ENV !== "production" && (JH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  component: a.elementType
});
const Ese = ["className", "rowCount", "visibleRowCount"], Tse = (e) => {
  const {
    classes: t
  } = e;
  return yt({
    root: ["rowCount"]
  }, Gn, t);
}, Rse = Dr("div", {
  name: "MuiDataGrid",
  slot: "RowCount",
  overridesResolver: (e, t) => t.rowCount
})(({
  theme: e
}) => ({
  alignItems: "center",
  display: "flex",
  margin: e.spacing(0, 2)
})), ZH = nr(function(t, n) {
  const {
    className: i,
    rowCount: s,
    visibleRowCount: u
  } = t, d = Xt(t, Ese), p = In(), m = Vt(), v = Tse(m);
  if (s === 0)
    return null;
  const y = u < s ? p.current.getLocaleText("footerTotalVisibleRows")(u, s) : s.toLocaleString();
  return /* @__PURE__ */ A.jsxs(Rse, J({
    className: nt(v.root, i),
    ownerState: m
  }, d, {
    ref: n,
    children: [p.current.getLocaleText("footerTotalRows"), " ", y]
  }));
});
process.env.NODE_ENV !== "production" && (ZH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  rowCount: a.number.isRequired,
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  visibleRowCount: a.number.isRequired
});
function Ose(e) {
  for (const t in e)
    return !1;
  return !0;
}
function kse(e, t) {
  return yt(t, Gn, e);
}
const Pse = ["selected", "rowId", "row", "index", "style", "rowHeight", "className", "visibleColumns", "pinnedColumns", "offsetLeft", "columnsTotalWidth", "firstColumnIndex", "lastColumnIndex", "focusedColumnIndex", "isFirstVisible", "isLastVisible", "isNotVisible", "showBottomBorder", "scrollbarWidth", "gridHasFiller", "onClick", "onDoubleClick", "onMouseEnter", "onMouseLeave", "onMouseOut", "onMouseOver"], Mse = VC(si, (e, t) => t ? !!Ose(e) : !1), eV = nr(function(t, n) {
  var vt;
  const {
    selected: i,
    rowId: s,
    row: u,
    index: d,
    style: p,
    rowHeight: m,
    className: v,
    visibleColumns: y,
    pinnedColumns: C,
    offsetLeft: S,
    columnsTotalWidth: R,
    firstColumnIndex: O,
    lastColumnIndex: E,
    focusedColumnIndex: k,
    isFirstVisible: F,
    isLastVisible: _,
    isNotVisible: L,
    showBottomBorder: M,
    scrollbarWidth: D,
    gridHasFiller: H,
    onClick: K,
    onDoubleClick: Q,
    onMouseEnter: z,
    onMouseLeave: I,
    onMouseOut: G,
    onMouseOver: W
  } = t, B = Xt(t, Pse), ee = Cs(), U = CM(), q = w.useRef(null), Y = Vt(), ne = vM(ee), re = tt(ee, $l), X = tt(ee, Sh), j = tt(ee, Of), ie = Y.rowReordering, fe = gC(ee, Mse, ie), ce = Vr(q, n), me = ee.current.getRowNode(s), ge = gC(ee, lH, {
    rowId: s,
    editMode: Y.editMode
  }), de = Y.editMode === Yu.Row, pe = k !== void 0, be = pe && k >= C.left.length && k < O, Ce = pe && k < y.length - C.right.length && k >= E, Re = kse(Y.classes, {
    root: ["row", i && "selected", de && "row--editable", ge && "row--editing", F && "row--firstVisible", _ && "row--lastVisible", M && "row--borderBottom", m === "auto" && "row--dynamicHeight"]
  }), ue = U.hooks.useGridRowAriaAttributes();
  w.useLayoutEffect(() => {
    if (ne.range) {
      const Qe = ee.current.getRowIndexRelativeToVisibleRows(s);
      Qe !== void 0 && ee.current.unstable_setLastMeasuredRowIndex(Qe);
    }
    if (q.current && m === "auto")
      return ee.current.observeRowHeight(q.current, s);
  }, [ee, ne.range, m, s]);
  const we = w.useCallback((Qe, Oe) => (Me) => {
    XC(Me) || ee.current.getRow(s) && (ee.current.publishEvent(Qe, ee.current.getRowParams(s), Me), Oe && Oe(Me));
  }, [ee, s]), _e = w.useCallback((Qe) => {
    const Oe = J0(Qe.target, ae.cell), Me = Oe == null ? void 0 : Oe.getAttribute("data-field");
    if (Me) {
      if (Me === pv.field || Me === zE || Me === "__reorder__" || ee.current.getCellMode(s, Me) === yr.Edit)
        return;
      const ht = ee.current.getColumn(Me);
      if ((ht == null ? void 0 : ht.type) === $E)
        return;
    }
    we("rowClick", K)(Qe);
  }, [ee, K, we, s]), {
    slots: He,
    slotProps: et,
    disableColumnReorder: Ne
  } = Y, rt = tt(ee, () => J({}, ee.current.getRowHeightEntry(s)), tM), it = w.useMemo(() => {
    if (L)
      return {
        opacity: 0,
        width: 0,
        height: 0
      };
    const Qe = J({}, p, {
      maxHeight: m === "auto" ? "none" : m,
      // max-height doesn't support "auto"
      minHeight: m,
      "--height": typeof m == "number" ? `${m}px` : m
    });
    if (rt.spacingTop) {
      const Oe = Y.rowSpacingType === "border" ? "borderTopWidth" : "marginTop";
      Qe[Oe] = rt.spacingTop;
    }
    if (rt.spacingBottom) {
      const Oe = Y.rowSpacingType === "border" ? "borderBottomWidth" : "marginBottom";
      let Me = Qe[Oe];
      typeof Me != "number" && (Me = parseInt(Me || "0", 10)), Me += rt.spacingBottom, Qe[Oe] = Me;
    }
    return Qe;
  }, [L, m, p, rt, Y.rowSpacingType]), wt = ee.current.unstable_applyPipeProcessors("rowClassName", [], s), gt = ue(me, d);
  if (typeof Y.getRowClassName == "function") {
    const Qe = d - (((vt = ne.range) == null ? void 0 : vt.firstRowIndex) || 0), Oe = J({}, ee.current.getRowParams(s), {
      isFirstVisible: Qe === 0,
      isLastVisible: Qe === ne.rows.length - 1,
      indexRelativeToCurrentPage: Qe
    });
    wt.push(Y.getRowClassName(Oe));
  }
  const ot = (Qe, Oe, Me, ht, xt = jn.NONE) => {
    const zt = ee.current.unstable_getCellColSpanInfo(s, Me);
    if (zt != null && zt.spannedByColSpan)
      return null;
    const bt = (zt == null ? void 0 : zt.cellProps.width) ?? Qe.computedWidth, Ge = (zt == null ? void 0 : zt.cellProps.colSpan) ?? 1, Et = Jb(xt, Qe.computedWidth, Me, j, R, D);
    if (me.type === "skeletonRow")
      return /* @__PURE__ */ A.jsx(He.skeletonCell, {
        type: Qe.type,
        width: bt,
        height: m,
        field: Qe.field,
        align: Qe.align
      }, Qe.field);
    const At = Qe.field === "__reorder__", pn = !(Ne || Qe.disableReorder), fn = fe && !re.length && X <= 1, mr = !(pn || At && fn), qn = xt === jn.VIRTUAL, Nr = tE(xt, Oe), gr = eE(xt, Oe, ht, Y.showCellVerticalBorder, H);
    return /* @__PURE__ */ A.jsx(He.cell, J({
      column: Qe,
      width: bt,
      rowId: s,
      align: Qe.align || "left",
      colIndex: Me,
      colSpan: Ge,
      disableDragEvents: mr,
      isNotVisible: qn,
      pinnedOffset: Et,
      pinnedPosition: xt,
      showLeftBorder: Nr,
      showRightBorder: gr,
      row: u,
      rowNode: me
    }, et == null ? void 0 : et.cell), Qe.field);
  }, jt = C.left.map((Qe, Oe) => ot(Qe, Oe, Oe, C.left.length, jn.LEFT)), ct = C.right.map((Qe, Oe) => {
    const Me = y.length - C.right.length + Oe;
    return ot(Qe, Oe, Me, C.right.length, jn.RIGHT);
  }), Tt = y.length - C.left.length - C.right.length, Rt = [];
  be && Rt.push(ot(y[k], k - C.left.length, k, Tt, jn.VIRTUAL));
  for (let Qe = O; Qe < E; Qe += 1) {
    const Oe = y[Qe], Me = Qe - C.left.length;
    Oe && Rt.push(ot(Oe, Me, Qe, Tt));
  }
  Ce && Rt.push(ot(y[k], k - C.left.length, k, Tt, jn.VIRTUAL));
  const Lt = u ? {
    onClick: _e,
    onDoubleClick: we("rowDoubleClick", Q),
    onMouseEnter: we("rowMouseEnter", z),
    onMouseLeave: we("rowMouseLeave", I),
    onMouseOut: we("rowMouseOut", G),
    onMouseOver: we("rowMouseOver", W)
  } : null;
  return /* @__PURE__ */ A.jsxs("div", J({
    "data-id": s,
    "data-rowindex": d,
    role: "row",
    className: nt(...wt, Re.root, v),
    style: it
  }, gt, Lt, B, {
    ref: ce,
    children: [jt, /* @__PURE__ */ A.jsx("div", {
      role: "presentation",
      className: ae.cellOffsetLeft,
      style: {
        width: S
      }
    }), Rt, /* @__PURE__ */ A.jsx("div", {
      role: "presentation",
      className: nt(ae.cell, ae.cellEmpty)
    }), ct, D !== 0 && /* @__PURE__ */ A.jsx(xM, {
      pinnedRight: C.right.length > 0,
      borderTop: !F
    })]
  }));
});
process.env.NODE_ENV !== "production" && (eV.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  columnsTotalWidth: a.number.isRequired,
  firstColumnIndex: a.number.isRequired,
  /**
   * Determines which cell has focus.
   * If `null`, no cell in this row has focus.
   */
  focusedColumnIndex: a.number,
  gridHasFiller: a.bool.isRequired,
  /**
   * Index of the row in the whole sorted and filtered dataset.
   * If some rows above have expanded children, this index also take those children into account.
   */
  index: a.number.isRequired,
  isFirstVisible: a.bool.isRequired,
  isLastVisible: a.bool.isRequired,
  isNotVisible: a.bool.isRequired,
  lastColumnIndex: a.number.isRequired,
  offsetLeft: a.number.isRequired,
  onClick: a.func,
  onDoubleClick: a.func,
  onMouseEnter: a.func,
  onMouseLeave: a.func,
  pinnedColumns: a.object.isRequired,
  row: a.object.isRequired,
  rowHeight: a.oneOfType([a.oneOf(["auto"]), a.number]).isRequired,
  rowId: a.oneOfType([a.number, a.string]).isRequired,
  scrollbarWidth: a.number.isRequired,
  selected: a.bool.isRequired,
  showBottomBorder: a.bool.isRequired,
  visibleColumns: a.arrayOf(a.object).isRequired
});
const Ise = Zc(eV), Dse = () => {
  const e = Cs(), t = Vt(), n = tt(e, ho), i = tt(e, uM), s = tt(e, KC), u = tt(e, J2);
  return {
    role: "grid",
    "aria-colcount": n.length,
    "aria-rowcount": s + 1 + u + i,
    "aria-multiselectable": dM(t)
  };
}, Nse = () => {
  const e = Cs(), t = tt(e, mf), n = tt(e, KC);
  return w.useCallback((i, s) => {
    const u = {}, d = s + n + 2;
    return u["aria-rowindex"] = d, e.current.isRowSelectable(i.id) && (u["aria-selected"] = t[i.id] !== void 0), u;
  }, [e, t, n]);
};
function Lse({
  privateApiRef: e,
  configuration: t,
  props: n,
  children: i
}) {
  const s = w.useRef(e.current.getPublicApi());
  return /* @__PURE__ */ A.jsx(bM.Provider, {
    value: t,
    children: /* @__PURE__ */ A.jsx(ZP.Provider, {
      value: n,
      children: /* @__PURE__ */ A.jsx(gM.Provider, {
        value: e,
        children: /* @__PURE__ */ A.jsx(JP.Provider, {
          value: s,
          children: i
        })
      })
    })
  });
}
const Fse = (e) => {
  const t = w.useRef(null), n = w.useRef(null), i = w.useRef(null), s = w.useRef(null), u = w.useRef(null), d = w.useRef(null);
  e.current.register("public", {
    rootElementRef: t
  }), e.current.register("private", {
    mainElementRef: n,
    virtualScrollerRef: i,
    virtualScrollbarVerticalRef: s,
    virtualScrollbarHorizontalRef: u,
    columnHeadersContainerRef: d
  });
}, _se = (e) => {
  const t = zi();
  e.current.state.isRtl === void 0 && (e.current.state.isRtl = t);
  const n = w.useRef(!0);
  w.useEffect(() => {
    n.current ? n.current = !1 : e.current.setState((i) => J({}, i, {
      isRtl: t
    }));
  }, [e, t]);
}, Ase = Nte() && window.localStorage.getItem("DEBUG") != null, Gb = () => {
}, $se = {
  debug: Gb,
  info: Gb,
  warn: Gb,
  error: Gb
}, LA = ["debug", "info", "warn", "error"];
function FA(e, t, n = console) {
  const i = LA.indexOf(t);
  if (i === -1)
    throw new Error(`MUI X: Log level ${t} not recognized.`);
  return LA.reduce((u, d, p) => (p >= i ? u[d] = (...m) => {
    const [v, ...y] = m;
    n[d](`MUI X: ${e} - ${v}`, ...y);
  } : u[d] = Gb, u), {});
}
const jse = (e, t) => {
  const n = w.useCallback((i) => Ase ? FA(i, "debug", t.logger) : t.logLevel ? FA(i, t.logLevel.toString(), t.logger) : $se, [t.logLevel, t.logger]);
  Mn(e, {
    getLogger: n
  }, "private");
};
class zse {
  constructor() {
    this.maxListeners = 20, this.warnOnce = !1, this.events = {};
  }
  on(t, n, i = {}) {
    let s = this.events[t];
    if (s || (s = {
      highPriority: /* @__PURE__ */ new Map(),
      regular: /* @__PURE__ */ new Map()
    }, this.events[t] = s), i.isFirst ? s.highPriority.set(n, !0) : s.regular.set(n, !0), process.env.NODE_ENV !== "production") {
      const u = s.highPriority.size + s.regular.size;
      u > this.maxListeners && !this.warnOnce && (this.warnOnce = !0, console.warn([`Possible EventEmitter memory leak detected. ${u} ${t} listeners added.`].join(`
`)));
    }
  }
  removeListener(t, n) {
    this.events[t] && (this.events[t].regular.delete(n), this.events[t].highPriority.delete(n));
  }
  removeAllListeners() {
    this.events = {};
  }
  emit(t, ...n) {
    const i = this.events[t];
    if (!i)
      return;
    const s = Array.from(i.highPriority.keys()), u = Array.from(i.regular.keys());
    for (let d = s.length - 1; d >= 0; d -= 1) {
      const p = s[d];
      i.highPriority.has(p) && p.apply(this, n);
    }
    for (let d = 0; d < u.length; d += 1) {
      const p = u[d];
      i.regular.has(p) && p.apply(this, n);
    }
  }
  once(t, n) {
    const i = this;
    this.on(t, function s(...u) {
      i.removeListener(t, s), n.apply(i, u);
    });
  }
}
class EM {
  static create(t) {
    return new EM(t);
  }
  constructor(t) {
    this.value = void 0, this.listeners = void 0, this.subscribe = (n) => (this.listeners.add(n), () => {
      this.listeners.delete(n);
    }), this.getSnapshot = () => this.value, this.update = (n) => {
      this.value = n, this.listeners.forEach((i) => i(n));
    }, this.value = t, this.listeners = /* @__PURE__ */ new Set();
  }
}
const tV = Symbol("mui.api_private"), Hse = (e) => e.isPropagationStopped !== void 0;
let _A = 0;
function Vse(e) {
  var s;
  const t = (s = e.current) == null ? void 0 : s[tV];
  if (t)
    return t;
  const n = {}, i = {
    state: n,
    store: EM.create(n),
    instanceId: {
      id: _A
    }
  };
  return _A += 1, i.getPublicApi = () => e.current, i.register = (u, d) => {
    Object.keys(d).forEach((p) => {
      const m = d[p], v = i[p];
      if ((v == null ? void 0 : v.spying) === !0 ? v.target = m : i[p] = m, u === "public") {
        const y = e.current, C = y[p];
        (C == null ? void 0 : C.spying) === !0 ? C.target = m : y[p] = m;
      }
    });
  }, i.register("private", {
    caches: {},
    eventManager: new zse()
  }), i;
}
function Bse(e) {
  return {
    get state() {
      return e.current.state;
    },
    get store() {
      return e.current.store;
    },
    get instanceId() {
      return e.current.instanceId;
    },
    [tV]: e.current
  };
}
function Use(e, t) {
  var d;
  const n = w.useRef(null), i = w.useRef(null);
  i.current || (i.current = Vse(n)), n.current || (n.current = Bse(i));
  const s = w.useCallback((...p) => {
    const [m, v, y = {}] = p;
    if (y.defaultMuiPrevented = !1, Hse(y) && y.isPropagationStopped())
      return;
    const C = t.signature === gs.DataGridPro || t.signature === gs.DataGridPremium ? {
      api: i.current.getPublicApi()
    } : {};
    i.current.eventManager.emit(m, v, y, C);
  }, [i, t.signature]), u = w.useCallback((p, m, v) => {
    i.current.eventManager.on(p, m, v);
    const y = i.current;
    return () => {
      y.eventManager.removeListener(p, m);
    };
  }, [i]);
  return Mn(i, {
    subscribeEvent: u,
    publishEvent: s
  }, "public"), e && !((d = e.current) != null && d.state) && (e.current = n.current), w.useImperativeHandle(e, () => n.current, [n]), w.useEffect(() => {
    const p = i.current;
    return () => {
      p.publishEvent("unmount");
    };
  }, [i]), i;
}
const Gse = (e, t) => {
  const n = w.useCallback((i) => {
    if (t.localeText[i] == null)
      throw new Error(`Missing translation for key ${i}.`);
    return t.localeText[i];
  }, [t.localeText]);
  e.current.register("public", {
    getLocaleText: n
  });
};
function CC(e) {
  "@babel/helpers - typeof";
  return CC = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t) {
    return typeof t;
  } : function(t) {
    return t && typeof Symbol == "function" && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
  }, CC(e);
}
function Wse(e, t) {
  if (CC(e) != "object" || !e) return e;
  var n = e[Symbol.toPrimitive];
  if (n !== void 0) {
    var i = n.call(e, t);
    if (CC(i) != "object") return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return String(e);
}
function SC(e) {
  var t = Wse(e, "string");
  return CC(t) == "symbol" ? t : t + "";
}
const qse = (e) => {
  const t = w.useRef({}), n = w.useRef(!1), i = w.useCallback((y) => {
    n.current || !y || (n.current = !0, Object.values(y.appliers).forEach((C) => {
      C();
    }), n.current = !1);
  }, []), s = w.useCallback((y, C, S) => {
    t.current[y] || (t.current[y] = {
      processors: /* @__PURE__ */ new Map(),
      processorsAsArray: [],
      appliers: {}
    });
    const R = t.current[y];
    return R.processors.get(C) !== S && (R.processors.set(C, S), R.processorsAsArray = Array.from(t.current[y].processors.values()).filter((E) => E !== null), i(R)), () => {
      t.current[y].processors.set(C, null), t.current[y].processorsAsArray = Array.from(t.current[y].processors.values()).filter((E) => E !== null);
    };
  }, [i]), u = w.useCallback((y, C, S) => (t.current[y] || (t.current[y] = {
    processors: /* @__PURE__ */ new Map(),
    processorsAsArray: [],
    appliers: {}
  }), t.current[y].appliers[C] = S, () => {
    const R = t.current[y].appliers, O = Xt(R, [C].map(SC));
    t.current[y].appliers = O;
  }), []), d = w.useCallback((y) => {
    i(t.current[y]);
  }, [i]), p = w.useCallback((...y) => {
    const [C, S, R] = y;
    if (!t.current[C])
      return S;
    const O = t.current[C].processorsAsArray;
    let E = S;
    for (let k = 0; k < O.length; k += 1)
      E = O[k](E, R);
    return E;
  }, []), m = {
    registerPipeProcessor: s,
    registerPipeApplier: u,
    requestPipeProcessorsApplication: d
  }, v = {
    unstable_applyPipeProcessors: p
  };
  Mn(e, m, "private"), Mn(e, v, "public");
}, no = (e, t, n, i = !0) => {
  const s = w.useRef(null), u = w.useRef(`mui-${Math.round(Math.random() * 1e9)}`), d = w.useCallback(() => {
    s.current = e.current.registerPipeProcessor(t, u.current, n);
  }, [e, n, t]);
  UC(() => {
    i && d();
  });
  const p = w.useRef(!0);
  w.useEffect(() => (p.current ? p.current = !1 : i && d(), () => {
    s.current && (s.current(), s.current = null);
  }), [d, i]);
}, TM = (e, t, n) => {
  const i = w.useRef(null), s = w.useRef(`mui-${Math.round(Math.random() * 1e9)}`), u = w.useCallback(() => {
    i.current = e.current.registerPipeApplier(t, s.current, n);
  }, [e, n, t]);
  UC(() => {
    u();
  });
  const d = w.useRef(!0);
  w.useEffect(() => (d.current ? d.current = !1 : u(), () => {
    i.current && (i.current(), i.current = null);
  }), [u]);
}, nE = (e, t, n, i) => {
  const s = w.useCallback(() => {
    e.current.registerStrategyProcessor(t, n, i);
  }, [e, i, n, t]);
  UC(() => {
    s();
  });
  const u = w.useRef(!0);
  w.useEffect(() => {
    u.current ? u.current = !1 : s();
  }, [s]);
}, gh = "none", AA = {
  rowTreeCreation: "rowTree",
  filtering: "rowTree",
  sorting: "rowTree",
  visibleRowsLookupCreation: "rowTree"
}, Kse = (e) => {
  const t = w.useRef(/* @__PURE__ */ new Map()), n = w.useRef({}), i = w.useCallback((m, v, y) => {
    const C = () => {
      const O = n.current[v], E = Xt(O, [m].map(SC));
      n.current[v] = E;
    };
    n.current[v] || (n.current[v] = {});
    const S = n.current[v], R = S[m];
    return S[m] = y, !R || R === y || m === e.current.getActiveStrategy(AA[v]) && e.current.publishEvent("activeStrategyProcessorChange", v), C;
  }, [e]), s = w.useCallback((m, v) => {
    const y = e.current.getActiveStrategy(AA[m]);
    if (y == null)
      throw new Error("Can't apply a strategy processor before defining an active strategy");
    const C = n.current[m];
    if (!C || !C[y])
      throw new Error(`No processor found for processor "${m}" on strategy "${y}"`);
    const S = C[y];
    return S(v);
  }, [e]), u = w.useCallback((m) => {
    const y = Array.from(t.current.entries()).find(([, C]) => C.group !== m ? !1 : C.isAvailable());
    return (y == null ? void 0 : y[0]) ?? gh;
  }, []), d = w.useCallback((m, v, y) => {
    t.current.set(v, {
      group: m,
      isAvailable: y
    }), e.current.publishEvent("strategyAvailabilityChange");
  }, [e]);
  Mn(e, {
    registerStrategyProcessor: i,
    applyStrategyProcessor: s,
    getActiveStrategy: u,
    setStrategyAvailability: d
  }, "private");
}, Yse = (e) => {
  const t = w.useRef({}), n = w.useCallback((m) => {
    t.current[m.stateId] = m;
  }, []), i = w.useCallback((m, v) => {
    let y;
    if (Dte(m) ? y = m(e.current.state) : y = m, e.current.state === y)
      return !1;
    let C = !1;
    const S = [];
    if (Object.keys(t.current).forEach((R) => {
      const O = t.current[R], E = O.stateSelector(e.current.state, e.current.instanceId), k = O.stateSelector(y, e.current.instanceId);
      k !== E && (S.push({
        stateId: O.stateId,
        hasPropChanged: k !== O.propModel
      }), O.propModel !== void 0 && k !== O.propModel && (C = !0));
    }), S.length > 1)
      throw new Error(`You're not allowed to update several sub-state in one transaction. You already updated ${S[0].stateId}, therefore, you're not allowed to update ${S.map((R) => R.stateId).join(", ")} in the same transaction.`);
    if (C || (e.current.state = y, e.current.publishEvent("stateChange", y), e.current.store.update(y)), S.length === 1) {
      const {
        stateId: R,
        hasPropChanged: O
      } = S[0], E = t.current[R], k = E.stateSelector(y, e.current.instanceId);
      E.propOnChange && O && E.propOnChange(k, {
        reason: v,
        api: e.current
      }), C || e.current.publishEvent(E.changeEvent, k, {
        reason: v
      });
    }
    return !C;
  }, [e]), s = w.useCallback((m, v, y) => e.current.setState((C) => J({}, C, {
    [m]: v(C[m])
  }), y), [e]), u = w.useCallback(() => {
  }, []), d = {
    setState: i,
    forceUpdate: u
  }, p = {
    updateControlState: s,
    registerControlState: n
  };
  Mn(e, d, "public"), Mn(e, p, "private");
}, Xse = (e, t) => J({}, e, {
  props: {
    getRowId: t.getRowId
  }
}), Qse = (e, t) => {
  w.useEffect(() => {
    e.current.setState((n) => J({}, n, {
      props: {
        getRowId: t.getRowId
      }
    }));
  }, [e, t.getRowId]);
}, Jse = (e, t) => {
  const n = Use(e, t);
  return Fse(n), Qse(n, t), _se(n), jse(n, t), Yse(n), qse(n), Kse(n), Gse(n, t), n.current.register("private", {
    rootProps: t
  }), n;
}, ai = (e, t, n) => {
  const i = w.useRef(!1);
  i.current || (t.current.state = e(t.current.state, n, t), i.current = !0);
};
function Yk(e, t) {
  if (e == null)
    return "";
  const n = typeof e == "string" ? e : `${e}`;
  if (t.shouldAppendQuotes || t.escapeFormulas) {
    const i = n.replace(/"/g, '""');
    return t.escapeFormulas && ["=", "+", "-", "@", "	", "\r"].includes(i[0]) ? `"'${i}"` : [t.delimiter, `
`, "\r", '"'].some((s) => n.includes(s)) ? `"${i}"` : i;
  }
  return n;
}
const nV = (e, t) => {
  var u, d;
  const {
    csvOptions: n,
    ignoreValueFormatter: i
  } = t;
  let s;
  if (i) {
    const p = e.colDef.type;
    p === "number" ? s = String(e.value) : p === "date" || p === "dateTime" ? s = (u = e.value) == null ? void 0 : u.toISOString() : typeof ((d = e.value) == null ? void 0 : d.toString) == "function" ? s = e.value.toString() : s = e.value;
  } else
    s = e.formattedValue;
  return Yk(s, n);
};
class Xk {
  constructor(t) {
    this.options = void 0, this.rowString = "", this.isEmpty = !0, this.options = t;
  }
  addValue(t) {
    this.isEmpty || (this.rowString += this.options.csvOptions.delimiter), typeof this.options.sanitizeCellValue == "function" ? this.rowString += this.options.sanitizeCellValue(t, this.options.csvOptions) : this.rowString += t, this.isEmpty = !1;
  }
  getRowString() {
    return this.rowString;
  }
}
const Zse = ({
  id: e,
  columns: t,
  getCellParams: n,
  csvOptions: i,
  ignoreValueFormatter: s
}) => {
  const u = new Xk({
    csvOptions: i
  });
  return t.forEach((d) => {
    const p = n(e, d.field);
    process.env.NODE_ENV !== "production" && String(p.formattedValue) === "[object Object]" && tl(["MUI X: When the value of a field is an object or a `renderCell` is provided, the CSV export might not display the value correctly.", "You can provide a `valueFormatter` with a string representation to be used."]), u.addValue(nV(p, {
      ignoreValueFormatter: s,
      csvOptions: i
    }));
  }), u.getRowString();
};
function ele(e) {
  const {
    columns: t,
    rowIds: n,
    csvOptions: i,
    ignoreValueFormatter: s,
    apiRef: u
  } = e, d = n.reduce((C, S) => `${C}${Zse({
    id: S,
    columns: t,
    getCellParams: u.current.getCellParams,
    ignoreValueFormatter: s,
    csvOptions: i
  })}\r
`, "").trim();
  if (!i.includeHeaders)
    return d;
  const p = t.filter((C) => C.field !== pv.field), m = [];
  if (i.includeColumnGroupsHeaders) {
    const C = u.current.getAllGroupDetails();
    let S = 0;
    const R = p.reduce((O, E) => {
      const k = u.current.getColumnGroupPath(E.field);
      return O[E.field] = k, S = Math.max(S, k.length), O;
    }, {});
    for (let O = 0; O < S; O += 1) {
      const E = new Xk({
        csvOptions: i,
        sanitizeCellValue: Yk
      });
      m.push(E), p.forEach((k) => {
        const F = (R[k.field] || [])[O], _ = C[F];
        E.addValue(_ ? _.headerName || _.groupId : "");
      });
    }
  }
  const v = new Xk({
    csvOptions: i,
    sanitizeCellValue: Yk
  });
  return p.forEach((C) => {
    v.addValue(C.headerName || C.field);
  }), m.push(v), `${`${m.map((C) => C.getRowString()).join(`\r
`)}\r
`}${d}`.trim();
}
function $A(e) {
  const t = document.createElement("span");
  t.style.whiteSpace = "pre", t.style.userSelect = "all", t.style.opacity = "0px", t.textContent = e, document.body.appendChild(t);
  const n = document.createRange();
  n.selectNode(t);
  const i = window.getSelection();
  i.removeAllRanges(), i.addRange(n);
  try {
    document.execCommand("copy");
  } finally {
    document.body.removeChild(t);
  }
}
function tle(e) {
  navigator.clipboard ? navigator.clipboard.writeText(e).catch(() => {
    $A(e);
  }) : $A(e);
}
function nle(e) {
  var t;
  return !!((t = window.getSelection()) != null && t.toString() || e && (e.selectionEnd || 0) - (e.selectionStart || 0) > 0);
}
const rle = (e, t) => {
  const n = t.ignoreValueFormatterDuringExport, i = (typeof n == "object" ? n == null ? void 0 : n.clipboardExport : n) || !1, s = t.clipboardCopyCellDelimiter, u = w.useCallback((d) => {
    if (!wae(d) || nle(d.target))
      return;
    let p = "";
    if (e.current.getSelectedRows().size > 0)
      p = e.current.getDataAsCsv({
        includeHeaders: !1,
        delimiter: s,
        shouldAppendQuotes: !1,
        escapeFormulas: !1
      });
    else {
      const v = Sa(e);
      if (v) {
        const y = e.current.getCellParams(v.id, v.field);
        p = nV(y, {
          csvOptions: {
            delimiter: s,
            shouldAppendQuotes: !1,
            escapeFormulas: !1
          },
          ignoreValueFormatter: i
        });
      }
    }
    p = e.current.unstable_applyPipeProcessors("clipboardCopy", p), p && (tle(p), e.current.publishEvent("clipboardCopy", p));
  }, [e, i, s]);
  Iz(e, () => e.current.rootElementRef.current, "keydown", u), Cr(e, "clipboardCopy", t.onClipboardCopy);
}, ole = (e) => J({}, e, {
  columnMenu: {
    open: !1
  }
}), ile = (e) => {
  const t = ci(e, "useGridColumnMenu"), n = w.useCallback((d) => {
    const p = C0(e.current.state), m = {
      open: !0,
      field: d
    };
    (m.open !== p.open || m.field !== p.field) && (e.current.setState((y) => y.columnMenu.open && y.columnMenu.field === d ? y : (t.debug("Opening Column Menu"), J({}, y, {
      columnMenu: {
        open: !0,
        field: d
      }
    }))), e.current.hidePreferences());
  }, [e, t]), i = w.useCallback(() => {
    const d = C0(e.current.state);
    if (d.field) {
      const v = ed(e), y = Zs(e), C = Kc(e);
      let S = d.field;
      if (v[S] || (S = C[0]), y[S] === !1) {
        const R = C.filter((E) => E === S ? !0 : y[E] !== !1), O = R.indexOf(S);
        S = R[O + 1] || R[O - 1];
      }
      e.current.setColumnHeaderFocus(S);
    }
    const p = {
      open: !1,
      field: void 0
    };
    (p.open !== d.open || p.field !== d.field) && e.current.setState((v) => (t.debug("Hiding Column Menu"), J({}, v, {
      columnMenu: p
    })));
  }, [e, t]), s = w.useCallback((d) => {
    t.debug("Toggle Column Menu");
    const p = C0(e.current.state);
    !p.open || p.field !== d ? n(d) : i();
  }, [e, t, n, i]);
  Mn(e, {
    showColumnMenu: n,
    hideColumnMenu: i,
    toggleColumnMenu: s
  }, "public"), Mt(e, "columnResizeStart", i), Mt(e, "virtualScrollerWheel", e.current.hideColumnMenu), Mt(e, "virtualScrollerTouchMove", e.current.hideColumnMenu);
}, ale = (e, t, n) => {
  var s, u, d;
  const i = xg({
    apiRef: n,
    columnsToUpsert: t.columns,
    initialState: (s = t.initialState) == null ? void 0 : s.columns,
    columnVisibilityModel: t.columnVisibilityModel ?? ((d = (u = t.initialState) == null ? void 0 : u.columns) == null ? void 0 : d.columnVisibilityModel) ?? {},
    keepOnlyColumnsToUpsert: !0
  });
  return J({}, e, {
    columns: i,
    // In pro/premium, this part of the state is defined. We give it an empty but defined value
    // for the community version.
    pinnedColumns: e.pinnedColumns ?? q0
  });
};
function sle(e, t) {
  var I, G;
  const n = ci(e, "useGridColumns"), i = w.useRef(t.columns);
  e.current.registerControlState({
    stateId: "visibleColumns",
    propModel: t.columnVisibilityModel,
    propOnChange: t.onColumnVisibilityModelChange,
    stateSelector: Zs,
    changeEvent: "columnVisibilityModelChange"
  });
  const s = w.useCallback((W) => {
    n.debug("Updating columns state."), e.current.setState(jA(W)), e.current.publishEvent("columnsChange", W.orderedFields);
  }, [n, e]), u = w.useCallback((W) => ed(e)[W], [e]), d = w.useCallback(() => nl(e), [e]), p = w.useCallback(() => ho(e), [e]), m = w.useCallback((W, B = !0) => (B ? ho(e) : nl(e)).findIndex((U) => U.field === W), [e]), v = w.useCallback((W) => {
    const B = m(W);
    return Of(e)[B];
  }, [e, m]), y = w.useCallback((W) => {
    var ee, U;
    Zs(e) !== W && (e.current.setState((q) => J({}, q, {
      columns: xg({
        apiRef: e,
        columnsToUpsert: [],
        initialState: void 0,
        columnVisibilityModel: W,
        keepOnlyColumnsToUpsert: !1
      })
    })), (U = (ee = e.current).updateRenderContext) == null || U.call(ee), e.current.forceUpdate());
  }, [e]), C = w.useCallback((W) => {
    const B = xg({
      apiRef: e,
      columnsToUpsert: W,
      initialState: void 0,
      keepOnlyColumnsToUpsert: !1
    });
    s(B);
  }, [e, s]), S = w.useCallback((W, B) => {
    const ee = Zs(e), U = ee[W] ?? !0;
    if (B !== U) {
      const q = J({}, ee, {
        [W]: B
      });
      e.current.setColumnVisibilityModel(q);
    }
  }, [e]), R = w.useCallback((W) => Kc(e).findIndex((ee) => ee === W), [e]), O = w.useCallback((W, B) => {
    const ee = Kc(e), U = R(W);
    if (U === B)
      return;
    n.debug(`Moving column ${W} to index ${B}`);
    const q = [...ee], Y = q.splice(U, 1)[0];
    q.splice(B, 0, Y), s(J({}, Uu(e.current.state), {
      orderedFields: q
    }));
    const ne = {
      column: e.current.getColumn(W),
      targetIndex: e.current.getColumnIndexRelativeToVisibleColumns(W),
      oldIndex: U
    };
    e.current.publishEvent("columnIndexChange", ne);
  }, [e, n, s, R]), E = w.useCallback((W, B) => {
    n.debug(`Updating column ${W} width to ${B}`);
    const ee = Uu(e.current.state), U = ee.lookup[W], q = J({}, U, {
      width: B,
      hasBeenResized: !0
    });
    s(Gk(J({}, ee, {
      lookup: J({}, ee.lookup, {
        [W]: q
      })
    }), e.current.getRootDimensions())), e.current.publishEvent("columnWidthChange", {
      element: e.current.getColumnHeaderElement(W),
      colDef: q,
      width: B
    });
  }, [e, n, s]), k = {
    getColumn: u,
    getAllColumns: d,
    getColumnIndex: m,
    getColumnPosition: v,
    getVisibleColumns: p,
    getColumnIndexRelativeToVisibleColumns: R,
    updateColumns: C,
    setColumnVisibilityModel: y,
    setColumnVisibility: S,
    setColumnWidth: E
  }, F = {
    setColumnIndex: O
  };
  Mn(e, k, "public"), Mn(e, F, t.signature === gs.DataGrid ? "private" : "public");
  const _ = w.useCallback((W, B) => {
    var re, X;
    const ee = {}, U = Zs(e);
    // Always export if the `exportOnlyDirtyModels` property is not activated
    (!B.exportOnlyDirtyModels || // Always export if the model is controlled
    t.columnVisibilityModel != null || // Always export if the model has been initialized
    // TODO v6 Do a nullish check instead to export even if the initial model equals "{}"
    Object.keys(((X = (re = t.initialState) == null ? void 0 : re.columns) == null ? void 0 : X.columnVisibilityModel) ?? {}).length > 0 || // Always export if the model is not empty
    Object.keys(U).length > 0) && (ee.columnVisibilityModel = U), ee.orderedFields = Kc(e);
    const Y = nl(e), ne = {};
    return Y.forEach((j) => {
      if (j.hasBeenResized) {
        const ie = {};
        Kz.forEach((fe) => {
          let ce = j[fe];
          ce === 1 / 0 && (ce = -1), ie[fe] = ce;
        }), ne[j.field] = ie;
      }
    }), Object.keys(ne).length > 0 && (ee.dimensions = ne), J({}, W, {
      columns: ee
    });
  }, [e, t.columnVisibilityModel, (I = t.initialState) == null ? void 0 : I.columns]), L = w.useCallback((W, B) => {
    var Y;
    const ee = (Y = B.stateToRestore.columns) == null ? void 0 : Y.columnVisibilityModel, U = B.stateToRestore.columns;
    if (ee == null && U == null)
      return W;
    const q = xg({
      apiRef: e,
      columnsToUpsert: [],
      initialState: U,
      columnVisibilityModel: ee,
      keepOnlyColumnsToUpsert: !1
    });
    return e.current.setState(jA(q)), U != null && e.current.publishEvent("columnsChange", q.orderedFields), W;
  }, [e]), M = w.useCallback((W, B) => {
    var ee;
    if (B === mh.columns) {
      const U = t.slots.columnsPanel;
      return /* @__PURE__ */ A.jsx(U, J({}, (ee = t.slotProps) == null ? void 0 : ee.columnsPanel));
    }
    return W;
  }, [t.slots.columnsPanel, (G = t.slotProps) == null ? void 0 : G.columnsPanel]), D = w.useCallback((W) => t.disableColumnSelector ? W : [...W, "columnMenuColumnsItem"], [t.disableColumnSelector]);
  no(e, "columnMenu", D), no(e, "exportState", _), no(e, "restoreState", L), no(e, "preferencePanel", M);
  const H = w.useRef(null);
  Mt(e, "viewportInnerSizeChange", (W) => {
    if (H.current !== W.width) {
      if (H.current = W.width, !ho(e).some((ee) => ee.flex && ee.flex > 0))
        return;
      s(Gk(Uu(e.current.state), e.current.getRootDimensions()));
    }
  });
  const Q = w.useCallback(() => {
    n.info("Columns pipe processing have changed, regenerating the columns");
    const W = xg({
      apiRef: e,
      columnsToUpsert: [],
      initialState: void 0,
      keepOnlyColumnsToUpsert: !1
    });
    s(W);
  }, [e, n, s]);
  TM(e, "hydrateColumns", Q);
  const z = w.useRef(!0);
  w.useEffect(() => {
    if (z.current) {
      z.current = !1;
      return;
    }
    if (n.info(`GridColumns have changed, new length ${t.columns.length}`), i.current === t.columns)
      return;
    const W = xg({
      apiRef: e,
      initialState: void 0,
      // If the user provides a model, we don't want to set it in the state here because it has it's dedicated `useEffect` which calls `setColumnVisibilityModel`
      columnsToUpsert: t.columns,
      keepOnlyColumnsToUpsert: !0
    });
    i.current = t.columns, s(W);
  }, [n, e, s, t.columns]), w.useEffect(() => {
    t.columnVisibilityModel !== void 0 && e.current.setColumnVisibilityModel(t.columnVisibilityModel);
  }, [e, n, t.columnVisibilityModel]);
}
function jA(e) {
  return (t) => J({}, t, {
    columns: e
  });
}
const lle = (e, t) => {
  var n;
  return J({}, e, {
    density: ((n = t.initialState) == null ? void 0 : n.density) ?? t.density ?? "standard"
  });
}, ule = (e, t) => {
  var p;
  const n = ci(e, "useDensity");
  e.current.registerControlState({
    stateId: "density",
    propModel: t.density,
    propOnChange: t.onDensityChange,
    stateSelector: Rg,
    changeEvent: "densityChange"
  });
  const s = {
    setDensity: Nn((m) => {
      Rg(e.current.state) !== m && (n.debug(`Set grid density to ${m}`), e.current.setState((y) => J({}, y, {
        density: m
      })));
    })
  };
  Mn(e, s, "public");
  const u = w.useCallback((m, v) => {
    var S;
    const y = Rg(e.current.state);
    return (
      // Always export if the `exportOnlyDirtyModels` property is not activated
      !v.exportOnlyDirtyModels || // Always export if the `density` is controlled
      t.density != null || // Always export if the `density` has been initialized
      ((S = t.initialState) == null ? void 0 : S.density) != null ? J({}, m, {
        density: y
      }) : m
    );
  }, [e, t.density, (p = t.initialState) == null ? void 0 : p.density]), d = w.useCallback((m, v) => {
    var C;
    const y = (C = v.stateToRestore) != null && C.density ? v.stateToRestore.density : Rg(e.current.state);
    return e.current.setState((S) => J({}, S, {
      density: y
    })), m;
  }, [e]);
  no(e, "exportState", u), no(e, "restoreState", d), w.useEffect(() => {
    t.density && e.current.setDensity(t.density);
  }, [e, t.density]);
};
function cle(e, t = "csv", n = document.title || "untitled") {
  const i = `${n}.${t}`;
  if ("download" in HTMLAnchorElement.prototype) {
    const s = URL.createObjectURL(e), u = document.createElement("a");
    u.href = s, u.download = i, u.click(), setTimeout(() => {
      URL.revokeObjectURL(s);
    });
    return;
  }
  throw new Error("MUI X: exportAs not supported.");
}
const rV = ({
  apiRef: e,
  options: t
}) => {
  const n = nl(e);
  return t.fields ? t.fields.reduce((s, u) => {
    const d = n.find((p) => p.field === u);
    return d && s.push(d), s;
  }, []) : (t.allColumns ? n : ho(e)).filter((s) => !s.disableExport);
}, oV = ({
  apiRef: e
}) => {
  var m, v;
  const t = Tz(e), n = Go(e), i = e.current.getSelectedRows(), s = t.filter((y) => n[y].type !== "footer"), u = lv(e), d = ((m = u == null ? void 0 : u.top) == null ? void 0 : m.map((y) => y.id)) || [], p = ((v = u == null ? void 0 : u.bottom) == null ? void 0 : v.map((y) => y.id)) || [];
  return s.unshift(...d), s.push(...p), i.size > 0 ? s.filter((y) => i.has(y)) : s;
}, dle = (e, t) => {
  const n = ci(e, "useGridCsvExport"), i = t.ignoreValueFormatterDuringExport, s = (typeof i == "object" ? i == null ? void 0 : i.csvExport : i) || !1, u = w.useCallback((v = {}) => {
    n.debug("Get data as CSV");
    const y = rV({
      apiRef: e,
      options: v
    }), S = (v.getRowsToExport ?? oV)({
      apiRef: e
    });
    return ele({
      columns: y,
      rowIds: S,
      csvOptions: {
        delimiter: v.delimiter || ",",
        shouldAppendQuotes: v.shouldAppendQuotes ?? !0,
        includeHeaders: v.includeHeaders ?? !0,
        includeColumnGroupsHeaders: v.includeColumnGroupsHeaders ?? !0,
        escapeFormulas: v.escapeFormulas ?? !0
      },
      ignoreValueFormatter: s,
      apiRef: e
    });
  }, [n, e, s]), d = w.useCallback((v) => {
    n.debug("Export data as CSV");
    const y = u(v), C = new Blob([v != null && v.utf8WithBom ? new Uint8Array([239, 187, 191]) : "", y], {
      type: "text/csv"
    });
    cle(C, "csv", v == null ? void 0 : v.fileName);
  }, [n, u]);
  Mn(e, {
    getDataAsCsv: u,
    exportDataAsCsv: d
  }, "public");
  const m = w.useCallback((v, y) => {
    var C;
    return (C = y.csvOptions) != null && C.disableToolbarButton ? v : [...v, {
      component: /* @__PURE__ */ A.jsx(WH, {
        options: y.csvOptions
      }),
      componentName: "csvExport"
    }];
  }, []);
  no(e, "exportMenu", m);
}, S0 = (e, t, n) => {
  let i = e.paginationModel;
  const s = e.rowCount, u = (n == null ? void 0 : n.pageSize) ?? i.pageSize, d = (n == null ? void 0 : n.page) ?? i.page, p = Dz(s, u, d);
  n && ((n == null ? void 0 : n.page) !== i.page || (n == null ? void 0 : n.pageSize) !== i.pageSize) && (i = n);
  const m = u === -1 ? 0 : $ne(i.page, p);
  return m !== i.page && (i = J({}, i, {
    page: m
  })), Lz(i.pageSize, t), i;
}, fle = (e, t) => {
  var _, L;
  const n = ci(e, "useGridPaginationModel"), i = tt(e, sv), s = w.useRef(yi(e)), u = Math.floor(t.rowHeight * i);
  e.current.registerControlState({
    stateId: "paginationModel",
    propModel: t.paginationModel,
    propOnChange: t.onPaginationModelChange,
    stateSelector: aa,
    changeEvent: "paginationModelChange"
  });
  const d = w.useCallback((M) => {
    const D = aa(e);
    M !== D.page && (n.debug(`Setting page to ${M}`), e.current.setPaginationModel({
      page: M,
      pageSize: D.pageSize
    }));
  }, [e, n]), p = w.useCallback((M) => {
    const D = aa(e);
    M !== D.pageSize && (n.debug(`Setting page size to ${M}`), e.current.setPaginationModel({
      pageSize: M,
      page: D.page
    }));
  }, [e, n]), m = w.useCallback((M) => {
    const D = aa(e);
    M !== D && (n.debug("Setting 'paginationModel' to", M), e.current.setState((H) => J({}, H, {
      pagination: J({}, H.pagination, {
        paginationModel: S0(H.pagination, t.signature, M)
      })
    }), "setPaginationModel"));
  }, [e, n, t.signature]);
  Mn(e, {
    setPage: d,
    setPageSize: p,
    setPaginationModel: m
  }, "public");
  const y = w.useCallback((M, D) => {
    var Q, z;
    const H = aa(e);
    return (
      // Always export if the `exportOnlyDirtyModels` property is not activated
      !D.exportOnlyDirtyModels || // Always export if the `paginationModel` is controlled
      t.paginationModel != null || // Always export if the `paginationModel` has been initialized
      ((z = (Q = t.initialState) == null ? void 0 : Q.pagination) == null ? void 0 : z.paginationModel) != null || // Export if `page` or `pageSize` is not equal to the default value
      H.page !== 0 && H.pageSize !== Ane(t.autoPageSize) ? J({}, M, {
        pagination: J({}, M.pagination, {
          paginationModel: H
        })
      }) : M
    );
  }, [e, t.paginationModel, (L = (_ = t.initialState) == null ? void 0 : _.pagination) == null ? void 0 : L.paginationModel, t.autoPageSize]), C = w.useCallback((M, D) => {
    var K, Q;
    const H = (K = D.stateToRestore.pagination) != null && K.paginationModel ? J({}, Nz(t.autoPageSize), (Q = D.stateToRestore.pagination) == null ? void 0 : Q.paginationModel) : aa(e);
    return e.current.setState((z) => J({}, z, {
      pagination: J({}, z.pagination, {
        paginationModel: S0(z.pagination, t.signature, H)
      })
    }), "stateRestorePreProcessing"), M;
  }, [e, t.autoPageSize, t.signature]);
  no(e, "exportState", y), no(e, "restoreState", C);
  const S = () => {
    var D;
    const M = aa(e);
    (D = e.current.virtualScrollerRef) != null && D.current && e.current.scrollToIndexes({
      rowIndex: M.page * M.pageSize
    });
  }, R = w.useCallback(() => {
    if (!t.autoPageSize)
      return;
    const M = e.current.getRootDimensions(), D = Math.max(1, Math.floor(M.viewportInnerSize.height / u));
    e.current.setPageSize(D);
  }, [e, t.autoPageSize, u]), O = w.useCallback((M) => {
    if (M == null)
      return;
    const D = aa(e);
    if (D.page === 0)
      return;
    const H = Az(e);
    D.page > H - 1 && e.current.setPage(Math.max(0, H - 1));
  }, [e]), E = w.useCallback(() => {
    aa(e).page !== 0 && e.current.setPage(0), e.current.getScrollPosition().top !== 0 && e.current.scroll({
      top: 0
    });
  }, [e]), k = w.useCallback((M) => {
    const D = J({}, M, {
      // replace items with the active items
      items: Oz(e)
    });
    hf(D, s.current) || (s.current = D, E());
  }, [e, E]);
  Mt(e, "viewportInnerSizeChange", R), Mt(e, "paginationModelChange", S), Mt(e, "rowCountChange", O), Mt(e, "sortModelChange", Yp(t.resetPageOnSortFilter, E)), Mt(e, "filterModelChange", Yp(t.resetPageOnSortFilter, k));
  const F = w.useRef(!0);
  w.useEffect(() => {
    if (F.current) {
      F.current = !1;
      return;
    }
    t.pagination && e.current.setState((M) => J({}, M, {
      pagination: J({}, M.pagination, {
        paginationModel: S0(M.pagination, t.signature, t.paginationModel)
      })
    }));
  }, [e, t.paginationModel, t.signature, t.pagination]), w.useEffect(() => {
    e.current.setState((M) => {
      const D = t.pagination === !0;
      return M.pagination.paginationMode === t.paginationMode || M.pagination.enabled === D ? M : J({}, M, {
        pagination: J({}, M.pagination, {
          paginationMode: t.paginationMode,
          enabled: t.pagination === !0
        })
      });
    });
  }, [e, t.paginationMode, t.pagination]), w.useEffect(R, [R]);
};
function ple() {
  return new Promise((e) => {
    requestAnimationFrame(() => {
      e();
    });
  });
}
function hle(e) {
  const t = document.createElement("iframe");
  return t.style.position = "absolute", t.style.width = "0px", t.style.height = "0px", t.title = e || document.title, t;
}
const mle = (e, t) => {
  const n = e.current.rootElementRef.current !== null, i = ci(e, "useGridPrintExport"), s = w.useRef(null), u = w.useRef(null), d = w.useRef({}), p = w.useRef([]), m = w.useRef(null);
  w.useEffect(() => {
    s.current = ao(e.current.rootElementRef.current);
  }, [e, n]);
  const v = w.useCallback((k, F, _) => new Promise((L) => {
    const M = rV({
      apiRef: e,
      options: {
        fields: k,
        allColumns: F
      }
    }).map((K) => K.field), D = nl(e), H = {};
    D.forEach((K) => {
      H[K.field] = M.includes(K.field);
    }), _ && (H[pv.field] = !0), e.current.setColumnVisibilityModel(H), L();
  }), [e]), y = w.useCallback((k) => {
    const _ = k({
      apiRef: e
    }).reduce((L, M) => {
      const D = e.current.getRow(M);
      return D[Jg] || L.push(D), L;
    }, []);
    e.current.setRows(_);
  }, [e]), C = w.useCallback((k, F) => {
    var U, q, Y;
    const _ = J({
      copyStyles: !0,
      hideToolbar: !1,
      hideFooter: !1,
      includeCheckboxes: !1
    }, F), L = k.contentDocument;
    if (!L)
      return;
    const M = hv(e.current.state), D = e.current.rootElementRef.current, H = D.cloneNode(!0), K = H.querySelector(`.${ae.main}`);
    K.style.overflow = "visible", H.style.contain = "size";
    let Q = ((U = D.querySelector(`.${ae.toolbarContainer}`)) == null ? void 0 : U.offsetHeight) || 0, z = ((q = D.querySelector(`.${ae.footerContainer}`)) == null ? void 0 : q.offsetHeight) || 0;
    const I = H.querySelector(`.${ae.footerContainer}`);
    _.hideToolbar && ((Y = H.querySelector(`.${ae.toolbarContainer}`)) == null || Y.remove(), Q = 0), _.hideFooter && I && (I.remove(), z = 0);
    const G = M.currentPageTotalHeight + GE(e, t) + Q + z;
    H.style.height = `${G}px`, H.style.boxSizing = "content-box", !_.hideFooter && I && (I.style.position = "absolute", I.style.width = "100%", I.style.top = `${G - z}px`);
    const W = document.createElement("div");
    W.appendChild(H), L.body.style.marginTop = "0px", L.body.innerHTML = W.innerHTML;
    const B = typeof _.pageStyle == "function" ? _.pageStyle() : _.pageStyle;
    if (typeof B == "string") {
      const ne = L.createElement("style");
      ne.appendChild(L.createTextNode(B)), L.head.appendChild(ne);
    }
    _.bodyClassName && L.body.classList.add(..._.bodyClassName.split(" "));
    const ee = [];
    if (_.copyStyles) {
      const ne = D.getRootNode(), X = (ne.constructor.name === "ShadowRoot" ? ne : s.current).querySelectorAll("style, link[rel='stylesheet']");
      for (let j = 0; j < X.length; j += 1) {
        const ie = X[j];
        if (ie.tagName === "STYLE") {
          const fe = L.createElement(ie.tagName), ce = ie.sheet;
          if (ce) {
            let me = "";
            for (let ge = 0; ge < ce.cssRules.length; ge += 1)
              typeof ce.cssRules[ge].cssText == "string" && (me += `${ce.cssRules[ge].cssText}\r
`);
            fe.appendChild(L.createTextNode(me)), L.head.appendChild(fe);
          }
        } else if (ie.getAttribute("href")) {
          const fe = L.createElement(ie.tagName);
          for (let ce = 0; ce < ie.attributes.length; ce += 1) {
            const me = ie.attributes[ce];
            me && fe.setAttribute(me.nodeName, me.nodeValue || "");
          }
          ee.push(new Promise((ce) => {
            fe.addEventListener("load", () => ce());
          })), L.head.appendChild(fe);
        }
      }
    }
    process.env.NODE_ENV !== "test" && Promise.all(ee).then(() => {
      k.contentWindow.print();
    });
  }, [e, s, t]), S = w.useCallback((k) => {
    var F, _;
    s.current.body.removeChild(k), e.current.restoreState(u.current || {}), (_ = (F = u.current) == null ? void 0 : F.columns) != null && _.columnVisibilityModel || e.current.setColumnVisibilityModel(d.current), e.current.setState((L) => J({}, L, {
      virtualization: m.current
    })), e.current.setRows(p.current), u.current = null, d.current = {}, p.current = [];
  }, [e]), O = {
    exportDataAsPrint: w.useCallback(async (k) => {
      if (i.debug("Export data as Print"), !e.current.rootElementRef.current)
        throw new Error("MUI X: No grid root element available.");
      if (u.current = e.current.exportState(), d.current = Zs(e), p.current = e.current.getSortedRows().filter((_) => !_[Jg]), t.pagination) {
        const L = {
          page: 0,
          pageSize: uM(e)
        };
        e.current.setState((M) => J({}, M, {
          pagination: J({}, M.pagination, {
            paginationModel: S0(
              M.pagination,
              // Using signature `DataGridPro` to allow more than 100 rows in the print export
              "DataGridPro",
              L
            )
          })
        }));
      }
      m.current = e.current.state.virtualization, e.current.setState((_) => J({}, _, {
        virtualization: J({}, _.virtualization, {
          enabled: !1,
          enabledForColumns: !1
        })
      })), await v(k == null ? void 0 : k.fields, k == null ? void 0 : k.allColumns, k == null ? void 0 : k.includeCheckboxes), y((k == null ? void 0 : k.getRowsToExport) ?? oV), await ple();
      const F = hle(k == null ? void 0 : k.fileName);
      process.env.NODE_ENV === "test" ? (s.current.body.appendChild(F), C(F, k), S(F)) : (F.onload = () => {
        C(F, k), F.contentWindow.matchMedia("print").addEventListener("change", (L) => {
          L.matches === !1 && S(F);
        });
      }, s.current.body.appendChild(F));
    }, [t, i, e, C, S, v, y])
  };
  Mn(e, O, "public");
  const E = w.useCallback((k, F) => {
    var _;
    return (_ = F.printOptions) != null && _.disableToolbarButton ? k : [...k, {
      component: /* @__PURE__ */ A.jsx(qH, {
        options: F.printOptions
      }),
      componentName: "printExport"
    }];
  }, []);
  no(e, "exportMenu", E);
}, gle = (e, t, n) => {
  var s, u;
  const i = t.filterModel ?? ((u = (s = t.initialState) == null ? void 0 : s.filter) == null ? void 0 : u.filterModel) ?? vC();
  return J({}, e, {
    filter: J({
      filterModel: aM(i, t.disableMultipleColumnsFiltering, n)
    }, iz),
    visibleRowsLookup: {}
  });
}, vle = (e) => e.filteredRowsLookup;
function zA(e, t) {
  return e.current.applyStrategyProcessor("visibleRowsLookupCreation", {
    tree: t.rows.tree,
    filteredRowsLookup: t.filter.filteredRowsLookup
  });
}
function yle() {
  return z2(Object.values);
}
const ble = (e, t) => {
  var z, I, G;
  const n = ci(e, "useGridFilter");
  e.current.registerControlState({
    stateId: "filter",
    propModel: t.filterModel,
    propOnChange: t.onFilterModelChange,
    stateSelector: yi,
    changeEvent: "filterModelChange"
  });
  const i = w.useCallback(() => {
    e.current.setState((W) => {
      const B = yi(W, e.current.instanceId), ee = e.current.getFilterState(B), U = J({}, W, {
        filter: J({}, W.filter, ee)
      }), q = zA(e, U);
      return J({}, U, {
        visibleRowsLookup: q
      });
    }), e.current.publishEvent("filteredRowsSet");
  }, [e]), s = w.useCallback((W, B) => B == null || B.filterable === !1 || t.disableColumnFilter ? W : [...W, "columnMenuFilterItem"], [t.disableColumnFilter]), u = w.useCallback(() => {
    i(), e.current.forceUpdate();
  }, [e, i]), d = w.useCallback((W) => {
    const B = yi(e), ee = [...B.items], U = ee.findIndex((q) => q.id === W.id);
    U === -1 ? ee.push(W) : ee[U] = W, e.current.setFilterModel(J({}, B, {
      items: ee
    }), "upsertFilterItem");
  }, [e]), p = w.useCallback((W) => {
    const B = yi(e), ee = [...B.items];
    W.forEach((U) => {
      const q = ee.findIndex((Y) => Y.id === U.id);
      q === -1 ? ee.push(U) : ee[q] = U;
    }), e.current.setFilterModel(J({}, B, {
      items: ee
    }), "upsertFilterItems");
  }, [e]), m = w.useCallback((W) => {
    const B = yi(e), ee = B.items.filter((U) => U.id !== W.id);
    ee.length !== B.items.length && e.current.setFilterModel(J({}, B, {
      items: ee
    }), "deleteFilterItem");
  }, [e]), v = w.useCallback((W, B, ee) => {
    if (n.debug("Displaying filter panel"), W) {
      const U = yi(e), q = U.items.filter((X) => {
        var ce;
        if (X.value !== void 0)
          return !(Array.isArray(X.value) && X.value.length === 0);
        const ie = (ce = e.current.getColumn(X.field).filterOperators) == null ? void 0 : ce.find((me) => me.value === X.operator);
        return !(typeof (ie == null ? void 0 : ie.requiresFilterValue) > "u" ? !0 : ie == null ? void 0 : ie.requiresFilterValue);
      });
      let Y;
      const ne = q.find((X) => X.field === W), re = e.current.getColumn(W);
      ne ? Y = q : t.disableMultipleColumnsFiltering ? Y = [Bk({
        field: W,
        operator: re.filterOperators[0].value
      }, e)] : Y = [...q, Bk({
        field: W,
        operator: re.filterOperators[0].value
      }, e)], e.current.setFilterModel(J({}, U, {
        items: Y
      }));
    }
    e.current.showPreferences(mh.filters, B, ee);
  }, [e, n, t.disableMultipleColumnsFiltering]), y = w.useCallback(() => {
    n.debug("Hiding filter panel"), e.current.hidePreferences();
  }, [e, n]), C = w.useCallback((W) => {
    const B = yi(e);
    B.logicOperator !== W && e.current.setFilterModel(J({}, B, {
      logicOperator: W
    }), "changeLogicOperator");
  }, [e]), S = w.useCallback((W) => {
    const B = yi(e);
    hf(B.quickFilterValues, W) || e.current.setFilterModel(J({}, B, {
      quickFilterValues: [...W]
    }));
  }, [e]), R = w.useCallback((W, B) => {
    yi(e) !== W && (n.debug("Setting filter model"), e.current.updateControlState("filter", eA(W, t.disableMultipleColumnsFiltering, e), B), e.current.unstable_applyFilters());
  }, [e, n, t.disableMultipleColumnsFiltering]), O = w.useCallback((W) => {
    const B = aM(W, t.disableMultipleColumnsFiltering, e), ee = t.filterMode === "client" ? Bte(B, e, t.disableEval) : null, U = e.current.applyStrategyProcessor("filtering", {
      isRowMatchingFilters: ee,
      filterModel: B ?? vC()
    });
    return J({}, U, {
      filterModel: B
    });
  }, [t.disableMultipleColumnsFiltering, t.filterMode, t.disableEval, e]), E = {
    setFilterLogicOperator: C,
    unstable_applyFilters: u,
    deleteFilterItem: m,
    upsertFilterItem: d,
    upsertFilterItems: p,
    setFilterModel: R,
    showFilterPanel: v,
    hideFilterPanel: y,
    setQuickFilterValues: S,
    ignoreDiacritics: t.ignoreDiacritics,
    getFilterState: O
  };
  Mn(e, E, "public");
  const k = w.useCallback((W, B) => {
    var q, Y;
    const ee = yi(e);
    return ee.items.forEach((ne) => {
      delete ne.fromInput;
    }), // Always export if the `exportOnlyDirtyModels` property is not activated
    !B.exportOnlyDirtyModels || // Always export if the model is controlled
    t.filterModel != null || // Always export if the model has been initialized
    ((Y = (q = t.initialState) == null ? void 0 : q.filter) == null ? void 0 : Y.filterModel) != null || // Export if the model is not equal to the default value
    !hf(ee, vC()) ? J({}, W, {
      filter: {
        filterModel: ee
      }
    }) : W;
  }, [e, t.filterModel, (I = (z = t.initialState) == null ? void 0 : z.filter) == null ? void 0 : I.filterModel]), F = w.useCallback((W, B) => {
    var U;
    const ee = (U = B.stateToRestore.filter) == null ? void 0 : U.filterModel;
    return ee == null ? W : (e.current.updateControlState("filter", eA(ee, t.disableMultipleColumnsFiltering, e), "restoreState"), J({}, W, {
      callbacks: [...W.callbacks, e.current.unstable_applyFilters]
    }));
  }, [e, t.disableMultipleColumnsFiltering]), _ = w.useCallback((W, B) => {
    var ee;
    if (B === mh.filters) {
      const U = t.slots.filterPanel;
      return /* @__PURE__ */ A.jsx(U, J({}, (ee = t.slotProps) == null ? void 0 : ee.filterPanel));
    }
    return W;
  }, [t.slots.filterPanel, (G = t.slotProps) == null ? void 0 : G.filterPanel]), {
    getRowId: L
  } = t, M = sl(yle), D = w.useCallback((W) => {
    var j;
    if (t.filterMode !== "client" || !W.isRowMatchingFilters || !W.filterModel.items.length && !((j = W.filterModel.quickFilterValues) != null && j.length))
      return iz;
    const B = Js(e), ee = {}, {
      isRowMatchingFilters: U
    } = W, q = {}, Y = {
      passingFilterItems: null,
      passingQuickFilterValues: null
    }, ne = M.current(e.current.state.rows.dataRowIdToModelLookup);
    for (let ie = 0; ie < ne.length; ie += 1) {
      const fe = ne[ie], ce = L ? L(fe) : fe.id;
      U(fe, void 0, Y);
      const me = Gte([Y.passingFilterItems], [Y.passingQuickFilterValues], W.filterModel, e, q);
      ee[ce] = me;
    }
    const re = "auto-generated-group-footer-root";
    return B[re] && (ee[re] = !0), {
      filteredRowsLookup: ee,
      filteredChildrenCountLookup: {},
      filteredDescendantCountLookup: {}
    };
  }, [e, t.filterMode, L, M]);
  no(e, "columnMenu", s), no(e, "exportState", k), no(e, "restoreState", F), no(e, "preferencePanel", _), nE(e, gh, "filtering", D), nE(e, gh, "visibleRowsLookupCreation", vle);
  const H = w.useCallback(() => {
    n.debug("onColUpdated - GridColumns changed, applying filters");
    const W = yi(e), B = ed(e), ee = W.items.filter((U) => U.field && B[U.field]);
    ee.length < W.items.length && e.current.setFilterModel(J({}, W, {
      items: ee
    }));
  }, [e, n]), K = w.useCallback((W) => {
    W === "filtering" && e.current.unstable_applyFilters();
  }, [e]), Q = w.useCallback(() => {
    e.current.setState((W) => J({}, W, {
      visibleRowsLookup: zA(e, W)
    })), e.current.forceUpdate();
  }, [e]);
  Mt(e, "rowsSet", i), Mt(e, "columnsChange", H), Mt(e, "activeStrategyProcessorChange", K), Mt(e, "rowExpansionChange", Q), Mt(e, "columnVisibilityModelChange", () => {
    const W = yi(e);
    W.quickFilterValues && fz(W) && e.current.unstable_applyFilters();
  }), UC(() => {
    e.current.unstable_applyFilters();
  }), _r(() => {
    t.filterModel !== void 0 && e.current.setFilterModel(t.filterModel);
  }, [e, n, t.filterModel]);
}, Cle = (e) => J({}, e, {
  focus: {
    cell: null,
    columnHeader: null,
    columnHeaderFilter: null,
    columnGroupHeader: null
  },
  tabIndex: {
    cell: null,
    columnHeader: null,
    columnHeaderFilter: null,
    columnGroupHeader: null
  }
}), Sle = (e, t) => {
  const n = ci(e, "useGridFocus"), i = w.useRef(null), s = e.current.rootElementRef.current !== null, u = w.useCallback((Q, z) => {
    Q && e.current.getRow(Q.id) && e.current.publishEvent("cellFocusOut", e.current.getCellParams(Q.id, Q.field), z);
  }, [e]), d = w.useCallback((Q, z) => {
    const I = Sa(e);
    (I == null ? void 0 : I.id) === Q && (I == null ? void 0 : I.field) === z || (e.current.setState((G) => (n.debug(`Focusing on cell with id=${Q} and field=${z}`), J({}, G, {
      tabIndex: {
        cell: {
          id: Q,
          field: z
        },
        columnHeader: null,
        columnHeaderFilter: null,
        columnGroupHeader: null
      },
      focus: {
        cell: {
          id: Q,
          field: z
        },
        columnHeader: null,
        columnHeaderFilter: null,
        columnGroupHeader: null
      }
    }))), e.current.forceUpdate(), e.current.getRow(Q) && (I && u(I, {}), e.current.publishEvent("cellFocusIn", e.current.getCellParams(Q, z))));
  }, [e, n, u]), p = w.useCallback((Q, z = {}) => {
    const I = Sa(e);
    u(I, z), e.current.setState((G) => (n.debug(`Focusing on column header with colIndex=${Q}`), J({}, G, {
      tabIndex: {
        columnHeader: {
          field: Q
        },
        columnHeaderFilter: null,
        cell: null,
        columnGroupHeader: null
      },
      focus: {
        columnHeader: {
          field: Q
        },
        columnHeaderFilter: null,
        cell: null,
        columnGroupHeader: null
      }
    }))), e.current.forceUpdate();
  }, [e, n, u]), m = w.useCallback((Q, z = {}) => {
    const I = Sa(e);
    u(I, z), e.current.setState((G) => (n.debug(`Focusing on column header filter with colIndex=${Q}`), J({}, G, {
      tabIndex: {
        columnHeader: null,
        columnHeaderFilter: {
          field: Q
        },
        cell: null,
        columnGroupHeader: null
      },
      focus: {
        columnHeader: null,
        columnHeaderFilter: {
          field: Q
        },
        cell: null,
        columnGroupHeader: null
      }
    }))), e.current.forceUpdate();
  }, [e, n, u]), v = w.useCallback((Q, z, I = {}) => {
    const G = Sa(e);
    G && e.current.publishEvent("cellFocusOut", e.current.getCellParams(G.id, G.field), I), e.current.setState((W) => J({}, W, {
      tabIndex: {
        columnGroupHeader: {
          field: Q,
          depth: z
        },
        columnHeader: null,
        columnHeaderFilter: null,
        cell: null
      },
      focus: {
        columnGroupHeader: {
          field: Q,
          depth: z
        },
        columnHeader: null,
        columnHeaderFilter: null,
        cell: null
      }
    })), e.current.forceUpdate();
  }, [e]), y = w.useCallback(() => K0(e), [e]), C = w.useCallback((Q, z, I) => {
    let G = e.current.getColumnIndex(z);
    const W = ho(e), B = gf(e, {
      pagination: t.pagination,
      paginationMode: t.paginationMode
    }), ee = lv(e), U = [].concat(ee.top || [], B.rows, ee.bottom || []);
    let q = U.findIndex((X) => X.id === Q);
    I === "right" ? G += 1 : I === "left" ? G -= 1 : q += 1, G >= W.length ? (q += 1, q < U.length && (G = 0)) : G < 0 && (q -= 1, q >= 0 && (G = W.length - 1)), q = vs(q, 0, U.length - 1);
    const Y = U[q];
    if (!Y)
      return;
    const ne = e.current.unstable_getCellColSpanInfo(Y.id, G);
    ne && ne.spannedByColSpan && (I === "left" || I === "below" ? G = ne.leftVisibleCellIndex : I === "right" && (G = ne.rightVisibleCellIndex)), G = vs(G, 0, W.length - 1);
    const re = W[G];
    e.current.setCellFocus(Y.id, re.field);
  }, [e, t.pagination, t.paginationMode]), S = w.useCallback(({
    id: Q,
    field: z
  }) => {
    e.current.setCellFocus(Q, z);
  }, [e]), R = w.useCallback((Q, z) => {
    z.key === "Enter" || z.key === "Tab" || z.key === "Shift" || Z0(z.key) || e.current.setCellFocus(Q.id, Q.field);
  }, [e]), O = w.useCallback(({
    field: Q
  }, z) => {
    z.target === z.currentTarget && e.current.setColumnHeaderFocus(Q, z);
  }, [e]), E = w.useCallback(({
    fields: Q,
    depth: z
  }, I) => {
    if (I.target !== I.currentTarget)
      return;
    const G = K0(e);
    G !== null && G.depth === z && Q.includes(G.field) || e.current.setColumnGroupHeaderFocus(Q[0], z, I);
  }, [e]), k = w.useCallback((Q, z) => {
    var I, G;
    (G = (I = z.relatedTarget) == null ? void 0 : I.getAttribute("class")) != null && G.includes(ae.columnHeader) || (n.debug("Clearing focus"), e.current.setState((W) => J({}, W, {
      focus: {
        cell: null,
        columnHeader: null,
        columnHeaderFilter: null,
        columnGroupHeader: null
      }
    })));
  }, [n, e]), F = w.useCallback((Q) => {
    i.current = Q;
  }, []), _ = w.useCallback((Q) => {
    const z = i.current;
    i.current = null;
    const I = Sa(e);
    if (!e.current.unstable_applyPipeProcessors("canUpdateFocus", !0, {
      event: Q,
      cell: z
    }))
      return;
    if (!I) {
      z && e.current.setCellFocus(z.id, z.field);
      return;
    }
    if ((z == null ? void 0 : z.id) === I.id && (z == null ? void 0 : z.field) === I.field)
      return;
    const W = e.current.getCellElement(I.id, I.field);
    W != null && W.contains(Q.target) || (z ? e.current.setCellFocus(z.id, z.field) : (e.current.setState((B) => J({}, B, {
      focus: {
        cell: null,
        columnHeader: null,
        columnHeaderFilter: null,
        columnGroupHeader: null
      }
    })), e.current.forceUpdate(), u(I, Q)));
  }, [e, u]), L = w.useCallback((Q) => {
    if (Q.cellMode === "view")
      return;
    const z = Sa(e);
    ((z == null ? void 0 : z.id) !== Q.id || (z == null ? void 0 : z.field) !== Q.field) && e.current.setCellFocus(Q.id, Q.field);
  }, [e]), M = w.useCallback(() => {
    const Q = Sa(e);
    if (Q && !e.current.getRow(Q.id)) {
      const z = Q.id;
      let I = null;
      if (typeof z < "u") {
        const G = e.current.getRowElement(z), W = G != null && G.dataset.rowindex ? Number(G == null ? void 0 : G.dataset.rowindex) : 0, B = gf(e, {
          pagination: t.pagination,
          paginationMode: t.paginationMode
        }), ee = B.rows[vs(W, 0, B.rows.length - 1)];
        I = (ee == null ? void 0 : ee.id) ?? null;
      }
      e.current.setState((G) => J({}, G, {
        focus: {
          cell: I === null ? null : {
            id: I,
            field: Q.field
          },
          columnHeader: null,
          columnHeaderFilter: null,
          columnGroupHeader: null
        }
      }));
    }
  }, [e, t.pagination, t.paginationMode]), D = Nn(() => {
    const Q = Sa(e);
    if (!Q)
      return;
    const z = gf(e, {
      pagination: t.pagination,
      paginationMode: t.paginationMode
    });
    if (z.rows.find((W) => W.id === Q.id))
      return;
    const G = ho(e);
    e.current.setState((W) => J({}, W, {
      tabIndex: {
        cell: {
          id: z.rows[0].id,
          field: G[0].field
        },
        columnGroupHeader: null,
        columnHeader: null,
        columnHeaderFilter: null
      }
    }));
  }), H = {
    setCellFocus: d,
    setColumnHeaderFocus: p,
    setColumnHeaderFilterFocus: m
  }, K = {
    moveFocusToRelativeCell: C,
    setColumnGroupHeaderFocus: v,
    getColumnGroupHeaderFocus: y
  };
  Mn(e, H, "public"), Mn(e, K, "private"), w.useEffect(() => {
    const Q = ao(e.current.rootElementRef.current);
    return Q.addEventListener("mouseup", _), () => {
      Q.removeEventListener("mouseup", _);
    };
  }, [e, s, _]), Mt(e, "columnHeaderBlur", k), Mt(e, "cellDoubleClick", S), Mt(e, "cellMouseDown", F), Mt(e, "cellKeyDown", R), Mt(e, "cellModeChange", L), Mt(e, "columnHeaderFocus", O), Mt(e, "columnGroupHeaderFocus", E), Mt(e, "rowsSet", M), Mt(e, "paginationModelChange", D);
}, qO = ({
  currentColIndex: e,
  firstColIndex: t,
  lastColIndex: n,
  isRtl: i
}) => {
  if (i) {
    if (e < n)
      return e + 1;
  } else if (!i && e > t)
    return e - 1;
  return null;
}, KO = ({
  currentColIndex: e,
  firstColIndex: t,
  lastColIndex: n,
  isRtl: i
}) => {
  if (i) {
    if (e > t)
      return e - 1;
  } else if (!i && e < n)
    return e + 1;
  return null;
};
function wle(e, t, n, i) {
  var p, m;
  const s = tH(e);
  if (!((p = s[t]) != null && p[n]))
    return t;
  const u = Tz(e);
  let d = u.indexOf(t) + (i === "down" ? 1 : -1);
  for (; d >= 0 && d < u.length; ) {
    const v = u[d];
    if (!((m = s[v]) != null && m[n]))
      return v;
    d += i === "down" ? 1 : -1;
  }
  return t;
}
const xle = dr(WC, lv, (e, t) => (t.top || []).concat(e.rows, t.bottom || [])), Ele = (e, t) => {
  const n = ci(e, "useGridKeyboardNavigation"), i = zi(), s = t.unstable_listView, u = w.useCallback(() => xle(e), [e]), d = t.signature !== "DataGrid" && t.headerFilters, p = w.useCallback((F, _, L = "left", M = "up") => {
    const D = kf(e), H = e.current.unstable_getCellColSpanInfo(_, F);
    H && H.spannedByColSpan && (L === "left" ? F = H.leftVisibleCellIndex : L === "right" && (F = H.rightVisibleCellIndex));
    const K = s ? tv(e.current.state).field : uv(e)[F], Q = wle(e, _, K, M), z = D.findIndex((I) => I.id === Q);
    n.debug(`Navigating to cell row ${z}, col ${F}`), e.current.scrollToIndexes({
      colIndex: F,
      rowIndex: z
    }), e.current.setCellFocus(Q, K);
  }, [e, n, s]), m = w.useCallback((F, _) => {
    n.debug(`Navigating to header col ${F}`), e.current.scrollToIndexes({
      colIndex: F
    });
    const L = e.current.getVisibleColumns()[F].field;
    e.current.setColumnHeaderFocus(L, _);
  }, [e, n]), v = w.useCallback((F, _) => {
    n.debug(`Navigating to header filter col ${F}`), e.current.scrollToIndexes({
      colIndex: F
    });
    const L = e.current.getVisibleColumns()[F].field;
    e.current.setColumnHeaderFilterFocus(L, _);
  }, [e, n]), y = w.useCallback((F, _, L) => {
    n.debug(`Navigating to header col ${F}`), e.current.scrollToIndexes({
      colIndex: F
    });
    const {
      field: M
    } = e.current.getVisibleColumns()[F];
    e.current.setColumnGroupHeaderFocus(M, _, L);
  }, [e, n]), C = w.useCallback((F) => {
    var _;
    return (_ = u()[F]) == null ? void 0 : _.id;
  }, [u]), S = w.useCallback((F, _) => {
    const L = _.currentTarget.querySelector(`.${ae.columnHeaderTitleContainerContent}`);
    if (!!L && L.contains(_.target) && F.field !== pv.field)
      return;
    const D = u(), H = e.current.getViewportPageSize(), K = F.field ? e.current.getColumnIndex(F.field) : 0, Q = D.length > 0 ? 0 : null, z = D.length - 1, I = 0, G = ho(e).length - 1, W = KC(e);
    let B = !0;
    switch (_.key) {
      case "ArrowDown": {
        d ? v(K, _) : Q !== null && p(K, C(Q));
        break;
      }
      case "ArrowRight": {
        const ee = KO({
          currentColIndex: K,
          firstColIndex: I,
          lastColIndex: G,
          isRtl: i
        });
        ee !== null && m(ee, _);
        break;
      }
      case "ArrowLeft": {
        const ee = qO({
          currentColIndex: K,
          firstColIndex: I,
          lastColIndex: G,
          isRtl: i
        });
        ee !== null && m(ee, _);
        break;
      }
      case "ArrowUp": {
        W > 0 && y(K, W - 1, _);
        break;
      }
      case "PageDown": {
        Q !== null && z !== null && p(K, C(Math.min(Q + H, z)));
        break;
      }
      case "Home": {
        m(I, _);
        break;
      }
      case "End": {
        m(G, _);
        break;
      }
      case "Enter": {
        (_.ctrlKey || _.metaKey) && e.current.toggleColumnMenu(F.field);
        break;
      }
      case " ":
        break;
      default:
        B = !1;
    }
    B && _.preventDefault();
  }, [e, u, d, v, p, C, i, m, y]), R = w.useCallback((F, _) => {
    const L = bre(e) === F.field, M = Cre(e) === F.field;
    if (L || M || !Z0(_.key))
      return;
    const D = u(), H = e.current.getViewportPageSize(), K = F.field ? e.current.getColumnIndex(F.field) : 0, Q = 0, z = D.length - 1, I = 0, G = ho(e).length - 1;
    let W = !0;
    switch (_.key) {
      case "ArrowDown": {
        const B = C(Q);
        B != null && p(K, B);
        break;
      }
      case "ArrowRight": {
        const B = KO({
          currentColIndex: K,
          firstColIndex: I,
          lastColIndex: G,
          isRtl: i
        });
        B !== null && v(B, _);
        break;
      }
      case "ArrowLeft": {
        const B = qO({
          currentColIndex: K,
          firstColIndex: I,
          lastColIndex: G,
          isRtl: i
        });
        B !== null ? v(B, _) : e.current.setColumnHeaderFilterFocus(F.field, _);
        break;
      }
      case "ArrowUp": {
        m(K, _);
        break;
      }
      case "PageDown": {
        z !== null && p(K, C(Math.min(Q + H, z)));
        break;
      }
      case "Home": {
        v(I, _);
        break;
      }
      case "End": {
        v(G, _);
        break;
      }
      case " ":
        break;
      default:
        W = !1;
    }
    W && _.preventDefault();
  }, [e, u, v, i, m, p, C]), O = w.useCallback((F, _) => {
    const L = K0(e);
    if (L === null)
      return;
    const {
      field: M,
      depth: D
    } = L, {
      fields: H,
      depth: K,
      maxDepth: Q
    } = F, z = u(), I = e.current.getViewportPageSize(), G = e.current.getColumnIndex(M), W = M ? e.current.getColumnIndex(M) : 0, B = 0, ee = z.length - 1, U = 0, q = ho(e).length - 1;
    let Y = !0;
    switch (_.key) {
      case "ArrowDown": {
        K === Q - 1 ? m(G, _) : y(G, D + 1, _);
        break;
      }
      case "ArrowUp": {
        K > 0 && y(G, D - 1, _);
        break;
      }
      case "ArrowRight": {
        const ne = H.length - H.indexOf(M) - 1;
        G + ne + 1 <= q && y(G + ne + 1, D, _);
        break;
      }
      case "ArrowLeft": {
        const ne = H.indexOf(M);
        G - ne - 1 >= U && y(G - ne - 1, D, _);
        break;
      }
      case "PageDown": {
        ee !== null && p(W, C(Math.min(B + I, ee)));
        break;
      }
      case "Home": {
        y(U, D, _);
        break;
      }
      case "End": {
        y(q, D, _);
        break;
      }
      case " ":
        break;
      default:
        Y = !1;
    }
    Y && _.preventDefault();
  }, [e, u, m, y, p, C]), E = w.useCallback((F, _) => {
    if (XC(_))
      return;
    const L = e.current.getCellParams(F.id, F.field);
    if (L.cellMode === yr.Edit || !Z0(_.key) || !e.current.unstable_applyPipeProcessors("canUpdateFocus", !0, {
      event: _,
      cell: L
    }))
      return;
    const D = u();
    if (D.length === 0)
      return;
    const H = e.current.getViewportPageSize(), K = s ? () => 0 : e.current.getColumnIndex, Q = F.field ? K(F.field) : 0, z = D.findIndex((q) => q.id === F.id), I = 0, G = D.length - 1, W = 0, ee = (s ? [tv(e.current.state)] : ho(e)).length - 1;
    let U = !0;
    switch (_.key) {
      case "ArrowDown": {
        z < G && p(Q, C(z + 1), i ? "right" : "left", "down");
        break;
      }
      case "ArrowUp": {
        z > I ? p(Q, C(z - 1)) : d ? v(Q, _) : m(Q, _);
        break;
      }
      case "ArrowRight": {
        const q = KO({
          currentColIndex: Q,
          firstColIndex: W,
          lastColIndex: ee,
          isRtl: i
        });
        q !== null && p(q, C(z), i ? "left" : "right");
        break;
      }
      case "ArrowLeft": {
        const q = qO({
          currentColIndex: Q,
          firstColIndex: W,
          lastColIndex: ee,
          isRtl: i
        });
        q !== null && p(q, C(z), i ? "right" : "left");
        break;
      }
      case "Tab": {
        _.shiftKey && Q > W ? p(Q - 1, C(z), "left") : !_.shiftKey && Q < ee && p(Q + 1, C(z), "right");
        break;
      }
      case " ": {
        if (F.field === zE)
          break;
        const Y = F.colDef;
        if (Y && (Y.field === ane || Boe(Y.field)))
          break;
        !_.shiftKey && z < G && p(Q, C(Math.min(z + H, G)));
        break;
      }
      case "PageDown": {
        z < G && p(Q, C(Math.min(z + H, G)));
        break;
      }
      case "PageUp": {
        const q = Math.max(z - H, I);
        q !== z && q >= I ? p(Q, C(q)) : m(Q, _);
        break;
      }
      case "Home": {
        _.ctrlKey || _.metaKey || _.shiftKey ? p(W, C(I)) : p(W, C(z));
        break;
      }
      case "End": {
        _.ctrlKey || _.metaKey || _.shiftKey ? p(ee, C(G)) : p(ee, C(z));
        break;
      }
      default:
        U = !1;
    }
    U && _.preventDefault();
  }, [e, u, i, p, C, d, v, m, s]), k = w.useCallback((F, {
    event: _
  }) => _.key === " " ? !1 : F, []);
  no(e, "canStartEditing", k), Mt(e, "columnHeaderKeyDown", S), Mt(e, "headerFilterKeyDown", R), Mt(e, "columnGroupHeaderKeyDown", O), Mt(e, "cellKeyDown", E);
}, Tle = (e, t) => {
  var O, E;
  const n = ci(e, "useGridRowCount"), i = tt(e, cM), s = tt(e, Og), u = tt(e, Ub), d = tt(e, aa), p = sl(() => aa(e).pageSize);
  e.current.registerControlState({
    stateId: "paginationRowCount",
    propModel: t.rowCount,
    propOnChange: t.onRowCountChange,
    stateSelector: Og,
    changeEvent: "rowCountChange"
  });
  const v = {
    setRowCount: w.useCallback((k) => {
      s !== k && (n.debug("Setting 'rowCount' to", k), e.current.setState((F) => J({}, F, {
        pagination: J({}, F.pagination, {
          rowCount: k
        })
      })));
    }, [e, n, s])
  };
  Mn(e, v, "public");
  const y = w.useCallback((k, F) => {
    var M, D;
    const _ = Og(e);
    return (
      // Always export if the `exportOnlyDirtyModels` property is not activated
      !F.exportOnlyDirtyModels || // Always export if the `rowCount` is controlled
      t.rowCount != null || // Always export if the `rowCount` has been initialized
      ((D = (M = t.initialState) == null ? void 0 : M.pagination) == null ? void 0 : D.rowCount) != null ? J({}, k, {
        pagination: J({}, k.pagination, {
          rowCount: _
        })
      }) : k
    );
  }, [e, t.rowCount, (E = (O = t.initialState) == null ? void 0 : O.pagination) == null ? void 0 : E.rowCount]), C = w.useCallback((k, F) => {
    var L;
    const _ = (L = F.stateToRestore.pagination) != null && L.rowCount ? F.stateToRestore.pagination.rowCount : Og(e);
    return e.current.setState((M) => J({}, M, {
      pagination: J({}, M.pagination, {
        rowCount: _
      })
    })), k;
  }, [e]);
  no(e, "exportState", y), no(e, "restoreState", C);
  const S = w.useCallback((k) => {
    t.paginationMode === "client" || !p.current || k.pageSize !== p.current && (p.current = k.pageSize, s === -1 && e.current.setPage(0));
  }, [t.paginationMode, p, s, e]);
  Mt(e, "paginationModelChange", S), w.useEffect(() => {
    t.paginationMode === "client" ? e.current.setRowCount(i) : t.rowCount != null && e.current.setRowCount(t.rowCount);
  }, [e, t.paginationMode, i, t.rowCount]);
  const R = u.hasNextPage === !1;
  w.useEffect(() => {
    R && s === -1 && e.current.setRowCount(d.pageSize * d.page + i);
  }, [e, i, R, s, d]);
}, Rle = (e, t) => {
  var m, v;
  const n = ci(e, "useGridPaginationMeta"), i = tt(e, Ub);
  e.current.registerControlState({
    stateId: "paginationMeta",
    propModel: t.paginationMeta,
    propOnChange: t.onPaginationMetaChange,
    stateSelector: Ub,
    changeEvent: "paginationMetaChange"
  });
  const u = {
    setPaginationMeta: w.useCallback((y) => {
      i !== y && (n.debug("Setting 'paginationMeta' to", y), e.current.setState((C) => J({}, C, {
        pagination: J({}, C.pagination, {
          meta: y
        })
      })));
    }, [e, n, i])
  };
  Mn(e, u, "public");
  const d = w.useCallback((y, C) => {
    var O, E;
    const S = Ub(e);
    return (
      // Always export if the `exportOnlyDirtyModels` property is not activated
      !C.exportOnlyDirtyModels || // Always export if the `paginationMeta` is controlled
      t.paginationMeta != null || // Always export if the `paginationMeta` has been initialized
      ((E = (O = t.initialState) == null ? void 0 : O.pagination) == null ? void 0 : E.meta) != null ? J({}, y, {
        pagination: J({}, y.pagination, {
          meta: S
        })
      }) : y
    );
  }, [e, t.paginationMeta, (v = (m = t.initialState) == null ? void 0 : m.pagination) == null ? void 0 : v.meta]), p = w.useCallback((y, C) => {
    var R;
    const S = (R = C.stateToRestore.pagination) != null && R.meta ? C.stateToRestore.pagination.meta : Ub(e);
    return e.current.setState((O) => J({}, O, {
      pagination: J({}, O.pagination, {
        meta: S
      })
    })), y;
  }, [e]);
  no(e, "exportState", d), no(e, "restoreState", p), w.useEffect(() => {
    t.paginationMeta && e.current.setPaginationMeta(t.paginationMeta);
  }, [e, t.paginationMeta]);
}, Ole = (e, t) => {
  var u, d, p, m, v, y, C;
  const n = J({}, Nz(t.autoPageSize), t.paginationModel ?? ((d = (u = t.initialState) == null ? void 0 : u.pagination) == null ? void 0 : d.paginationModel));
  Lz(n.pageSize, t.signature);
  const i = t.rowCount ?? ((m = (p = t.initialState) == null ? void 0 : p.pagination) == null ? void 0 : m.rowCount) ?? (t.paginationMode === "client" ? (v = e.rows) == null ? void 0 : v.totalRowCount : void 0), s = t.paginationMeta ?? ((C = (y = t.initialState) == null ? void 0 : y.pagination) == null ? void 0 : C.meta) ?? {};
  return J({}, e, {
    pagination: J({}, e.pagination, {
      paginationModel: n,
      rowCount: i,
      meta: s,
      enabled: t.pagination === !0,
      paginationMode: t.paginationMode
    })
  });
}, kle = (e, t) => {
  Rle(e, t), fle(e, t), Tle(e, t);
}, Ple = (e, t) => {
  var n;
  return J({}, e, {
    preferencePanel: ((n = t.initialState) == null ? void 0 : n.preferencePanel) ?? {
      open: !1
    }
  });
}, Mle = (e, t) => {
  var p;
  const n = ci(e, "useGridPreferencesPanel"), i = w.useCallback(() => {
    e.current.setState((m) => {
      if (!m.preferencePanel.open)
        return m;
      n.debug("Hiding Preferences Panel");
      const v = bC(m);
      return e.current.publishEvent("preferencePanelClose", {
        openedPanelValue: v.openedPanelValue
      }), J({}, m, {
        preferencePanel: {
          open: !1
        }
      });
    });
  }, [e, n]), s = w.useCallback((m, v, y) => {
    n.debug("Opening Preferences Panel"), e.current.setState((C) => J({}, C, {
      preferencePanel: J({}, C.preferencePanel, {
        open: !0,
        openedPanelValue: m,
        panelId: v,
        labelId: y
      })
    })), e.current.publishEvent("preferencePanelOpen", {
      openedPanelValue: m
    });
  }, [n, e]);
  Mn(e, {
    showPreferences: s,
    hidePreferences: i
  }, "public");
  const u = w.useCallback((m, v) => {
    var S;
    const y = bC(e.current.state);
    return (
      // Always export if the `exportOnlyDirtyModels` property is not activated
      !v.exportOnlyDirtyModels || // Always export if the panel was initialized
      ((S = t.initialState) == null ? void 0 : S.preferencePanel) != null || // Always export if the panel is opened
      y.open ? J({}, m, {
        preferencePanel: y
      }) : m
    );
  }, [e, (p = t.initialState) == null ? void 0 : p.preferencePanel]), d = w.useCallback((m, v) => {
    const y = v.stateToRestore.preferencePanel;
    return y != null && e.current.setState((C) => J({}, C, {
      preferencePanel: y
    })), m;
  }, [e]);
  no(e, "exportState", u), no(e, "restoreState", d);
}, Qk = (e) => {
  switch (e.type) {
    case "boolean":
      return !1;
    case "date":
    case "dateTime":
    case "number":
      return;
    case "singleSelect":
      return null;
    case "string":
    default:
      return "";
  }
}, Ile = ["id", "field"], Dle = ["id", "field"], Nle = (e, t) => {
  const [n, i] = w.useState({}), s = w.useRef(n), u = w.useRef({}), {
    processRowUpdate: d,
    onProcessRowUpdateError: p,
    cellModesModel: m,
    onCellModesModelChange: v
  } = t, y = (U) => (...q) => {
    t.editMode === Yu.Cell && U(...q);
  }, C = w.useCallback((U, q) => {
    const Y = e.current.getCellParams(U, q);
    if (!e.current.isCellEditable(Y))
      throw new Error(`MUI X: The cell with id=${U} and field=${q} is not editable.`);
  }, [e]), S = w.useCallback((U, q, Y) => {
    if (e.current.getCellMode(U, q) !== Y)
      throw new Error(`MUI X: The cell with id=${U} and field=${q} is not in ${Y} mode.`);
  }, [e]), R = w.useCallback((U, q) => {
    if (!U.isEditable || U.cellMode === yr.Edit)
      return;
    const Y = J({}, U, {
      reason: Uc.cellDoubleClick
    });
    e.current.publishEvent("cellEditStart", Y, q);
  }, [e]), O = w.useCallback((U, q) => {
    if (U.cellMode === yr.View || e.current.getCellMode(U.id, U.field) === yr.View)
      return;
    const Y = J({}, U, {
      reason: Al.cellFocusOut
    });
    e.current.publishEvent("cellEditStop", Y, q);
  }, [e]), E = w.useCallback((U, q) => {
    if (U.cellMode === yr.Edit) {
      if (q.which === 229)
        return;
      let Y;
      if (q.key === "Escape" ? Y = Al.escapeKeyDown : q.key === "Enter" ? Y = Al.enterKeyDown : q.key === "Tab" && (Y = q.shiftKey ? Al.shiftTabKeyDown : Al.tabKeyDown, q.preventDefault()), Y) {
        const ne = J({}, U, {
          reason: Y
        });
        e.current.publishEvent("cellEditStop", ne, q);
      }
    } else if (U.isEditable) {
      let Y;
      if (!e.current.unstable_applyPipeProcessors("canStartEditing", !0, {
        event: q,
        cellParams: U,
        editMode: "cell"
      }))
        return;
      if (kH(q) ? Y = Uc.printableKeyDown : MH(q) ? Y = Uc.pasteKeyDown : q.key === "Enter" ? Y = Uc.enterKeyDown : (q.key === "Backspace" || q.key === "Delete") && (Y = Uc.deleteKeyDown), Y) {
        const re = J({}, U, {
          reason: Y,
          key: q.key
        });
        e.current.publishEvent("cellEditStart", re, q);
      }
    }
  }, [e]), k = w.useCallback((U) => {
    const {
      id: q,
      field: Y,
      reason: ne
    } = U, re = {
      id: q,
      field: Y
    };
    (ne === Uc.printableKeyDown || ne === Uc.deleteKeyDown || ne === Uc.pasteKeyDown) && (re.deleteValue = !0), e.current.startCellEditMode(re);
  }, [e]), F = w.useCallback((U) => {
    const {
      id: q,
      field: Y,
      reason: ne
    } = U;
    e.current.runPendingEditCellValueMutation(q, Y);
    let re;
    ne === Al.enterKeyDown ? re = "below" : ne === Al.tabKeyDown ? re = "right" : ne === Al.shiftTabKeyDown && (re = "left");
    const X = ne === "escapeKeyDown";
    e.current.stopCellEditMode({
      id: q,
      field: Y,
      ignoreModifications: X,
      cellToFocusAfter: re
    });
  }, [e]), _ = (U) => async (...q) => {
    var Y;
    if (U) {
      const {
        id: ne,
        field: re
      } = q[0];
      ((Y = e.current.state.editRows[ne][re]) == null ? void 0 : Y.error) || U(...q);
    }
  };
  Mt(e, "cellDoubleClick", y(R)), Mt(e, "cellFocusOut", y(O)), Mt(e, "cellKeyDown", y(E)), Mt(e, "cellEditStart", y(k)), Mt(e, "cellEditStop", y(F)), Cr(e, "cellEditStart", t.onCellEditStart), Cr(e, "cellEditStop", _(t.onCellEditStop));
  const L = w.useCallback((U, q) => {
    const Y = si(e.current.state);
    return Y[U] && Y[U][q] ? yr.Edit : yr.View;
  }, [e]), M = Nn((U) => {
    const q = U !== t.cellModesModel;
    v && q && v(U, {
      api: e.current
    }), !(t.cellModesModel && q) && (i(U), s.current = U, e.current.publishEvent("cellModesModelChange", U));
  }), D = w.useCallback((U, q, Y) => {
    const ne = J({}, s.current);
    if (Y !== null)
      ne[U] = J({}, ne[U], {
        [q]: J({}, Y)
      });
    else {
      const re = ne[U], X = Xt(re, [q].map(SC));
      ne[U] = X, Object.keys(ne[U]).length === 0 && delete ne[U];
    }
    M(ne);
  }, [M]), H = w.useCallback((U, q, Y) => {
    e.current.setState((ne) => {
      const re = J({}, ne.editRows);
      return Y !== null ? re[U] = J({}, re[U], {
        [q]: J({}, Y)
      }) : (delete re[U][q], Object.keys(re[U]).length === 0 && delete re[U]), J({}, ne, {
        editRows: re
      });
    }), e.current.forceUpdate();
  }, [e]), K = w.useCallback((U) => {
    const {
      id: q,
      field: Y
    } = U, ne = Xt(U, Ile);
    C(q, Y), S(q, Y, yr.View), D(q, Y, J({
      mode: yr.Edit
    }, ne));
  }, [C, S, D]), Q = Nn(async (U) => {
    const {
      id: q,
      field: Y,
      deleteValue: ne,
      initialValue: re
    } = U, X = e.current.getCellValue(q, Y);
    let j = X;
    ne ? j = Qk(e.current.getColumn(Y)) : re && (j = re);
    const ie = e.current.getColumn(Y), fe = !!ie.preProcessEditCellProps && ne;
    let ce = {
      value: j,
      error: !1,
      isProcessingProps: fe
    };
    if (H(q, Y, ce), e.current.setCellFocus(q, Y), fe && (ce = await Promise.resolve(ie.preProcessEditCellProps({
      id: q,
      row: e.current.getRow(q),
      props: ce,
      hasChanged: j !== X
    })), e.current.getCellMode(q, Y) === yr.Edit)) {
      const me = si(e.current.state);
      H(q, Y, J({}, ce, {
        value: me[q][Y].value,
        isProcessingProps: !1
      }));
    }
  }), z = w.useCallback((U) => {
    const {
      id: q,
      field: Y
    } = U, ne = Xt(U, Dle);
    S(q, Y, yr.Edit), D(q, Y, J({
      mode: yr.View
    }, ne));
  }, [S, D]), I = Nn(async (U) => {
    const {
      id: q,
      field: Y,
      ignoreModifications: ne,
      cellToFocusAfter: re = "none"
    } = U;
    S(q, Y, yr.Edit), e.current.runPendingEditCellValueMutation(q, Y);
    const X = () => {
      H(q, Y, null), D(q, Y, null), re !== "none" && e.current.moveFocusToRelativeCell(q, Y, re);
    };
    if (ne) {
      X();
      return;
    }
    const j = si(e.current.state), {
      error: ie,
      isProcessingProps: fe
    } = j[q][Y];
    if (ie || fe) {
      u.current[q][Y].mode = yr.Edit, D(q, Y, {
        mode: yr.Edit
      });
      return;
    }
    const ce = e.current.getRowWithUpdatedValuesFromCellEditing(q, Y);
    if (d) {
      const me = (ge) => {
        u.current[q][Y].mode = yr.Edit, D(q, Y, {
          mode: yr.Edit
        }), p ? p(ge) : process.env.NODE_ENV !== "production" && tl(["MUI X: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.", "To handle the error pass a callback to the `onProcessRowUpdateError` prop, for example `<DataGrid onProcessRowUpdateError={(error) => ...} />`.", "For more detail, see https://mui.com/x/react-data-grid/editing/#server-side-persistence."], "error");
      };
      try {
        const ge = e.current.getRow(q);
        Promise.resolve(d(ce, ge, {
          rowId: q
        })).then((de) => {
          e.current.updateRows([de]), X();
        }).catch(me);
      } catch (ge) {
        me(ge);
      }
    } else
      e.current.updateRows([ce]), X();
  }), G = w.useCallback(async (U) => {
    var ge, de;
    const {
      id: q,
      field: Y,
      value: ne,
      debounceMs: re,
      unstable_skipValueParser: X
    } = U;
    C(q, Y), S(q, Y, yr.Edit);
    const j = e.current.getColumn(Y), ie = e.current.getRow(q);
    let fe = ne;
    j.valueParser && !X && (fe = j.valueParser(ne, ie, j, e));
    let ce = si(e.current.state), me = J({}, ce[q][Y], {
      value: fe,
      changeReason: re ? "debouncedSetEditCellValue" : "setEditCellValue"
    });
    if (j.preProcessEditCellProps) {
      const pe = ne !== ce[q][Y].value;
      me = J({}, me, {
        isProcessingProps: !0
      }), H(q, Y, me), me = await Promise.resolve(j.preProcessEditCellProps({
        id: q,
        row: ie,
        props: me,
        hasChanged: pe
      }));
    }
    return e.current.getCellMode(q, Y) === yr.View ? !1 : (ce = si(e.current.state), me = J({}, me, {
      isProcessingProps: !1
    }), me.value = j.preProcessEditCellProps ? ce[q][Y].value : fe, H(q, Y, me), ce = si(e.current.state), !((de = (ge = ce[q]) == null ? void 0 : ge[Y]) != null && de.error));
  }, [e, C, S, H]), W = w.useCallback((U, q) => {
    const Y = e.current.getColumn(q), ne = si(e.current.state), re = e.current.getRow(U);
    if (!ne[U] || !ne[U][q])
      return e.current.getRow(U);
    const {
      value: X
    } = ne[U][q];
    return Y.valueSetter ? Y.valueSetter(X, re, Y, e) : J({}, re, {
      [q]: X
    });
  }, [e]), B = {
    getCellMode: L,
    startCellEditMode: K,
    stopCellEditMode: z
  }, ee = {
    setCellEditingEditCellValue: G,
    getRowWithUpdatedValuesFromCellEditing: W
  };
  Mn(e, B, "public"), Mn(e, ee, "private"), w.useEffect(() => {
    m && M(m);
  }, [m, M]), _r(() => {
    const U = Js(e), q = u.current;
    u.current = rz(n), Object.entries(n).forEach(([Y, ne]) => {
      Object.entries(ne).forEach(([re, X]) => {
        var fe, ce;
        const j = ((ce = (fe = q[Y]) == null ? void 0 : fe[re]) == null ? void 0 : ce.mode) || yr.View, ie = U[Y] ? e.current.getRowId(U[Y]) : Y;
        X.mode === yr.Edit && j === yr.View ? Q(J({
          id: ie,
          field: re
        }, X)) : X.mode === yr.View && j === yr.Edit && I(J({
          id: ie,
          field: re
        }, X));
      });
    });
  }, [e, n, Q, I]);
}, Lle = ["id"], Fle = ["id"], _le = (e, t) => {
  const [n, i] = w.useState({}), s = w.useRef(n), u = w.useRef({}), d = w.useRef({}), p = w.useRef(void 0), m = w.useRef(null), {
    processRowUpdate: v,
    onProcessRowUpdateError: y,
    rowModesModel: C,
    onRowModesModelChange: S
  } = t, R = (X) => (...j) => {
    t.editMode === Yu.Row && X(...j);
  }, O = w.useCallback((X, j) => {
    const ie = e.current.getCellParams(X, j);
    if (!e.current.isCellEditable(ie))
      throw new Error(`MUI X: The cell with id=${X} and field=${j} is not editable.`);
  }, [e]), E = w.useCallback((X, j) => {
    if (e.current.getRowMode(X) !== j)
      throw new Error(`MUI X: The row with id=${X} is not in ${j} mode.`);
  }, [e]), k = w.useCallback((X) => {
    const j = si(e.current.state);
    return Object.values(j[X]).some((ie) => ie.error);
  }, [e]), F = w.useCallback((X, j) => {
    if (!X.isEditable || e.current.getRowMode(X.id) === Yr.Edit)
      return;
    const ie = e.current.getRowParams(X.id), fe = J({}, ie, {
      field: X.field,
      reason: tf.cellDoubleClick
    });
    e.current.publishEvent("rowEditStart", fe, j);
  }, [e]), _ = w.useCallback((X) => {
    m.current = X;
  }, []), L = w.useCallback((X, j) => {
    X.isEditable && e.current.getRowMode(X.id) !== Yr.View && (m.current = null, p.current = setTimeout(() => {
      var ie;
      if (((ie = m.current) == null ? void 0 : ie.id) !== X.id) {
        if (!e.current.getRow(X.id) || e.current.getRowMode(X.id) === Yr.View || k(X.id))
          return;
        const fe = e.current.getRowParams(X.id), ce = J({}, fe, {
          field: X.field,
          reason: Du.rowFocusOut
        });
        e.current.publishEvent("rowEditStop", ce, j);
      }
    }));
  }, [e, k]);
  w.useEffect(() => () => {
    clearTimeout(p.current);
  }, []);
  const M = w.useCallback((X, j) => {
    if (X.cellMode === Yr.Edit) {
      if (j.which === 229)
        return;
      let ie;
      if (j.key === "Escape")
        ie = Du.escapeKeyDown;
      else if (j.key === "Enter")
        ie = Du.enterKeyDown;
      else if (j.key === "Tab") {
        const fe = uv(e).filter((ce) => e.current.getColumn(ce).type === $E ? !0 : e.current.isCellEditable(e.current.getCellParams(X.id, ce)));
        if (j.shiftKey ? X.field === fe[0] && (ie = Du.shiftTabKeyDown) : X.field === fe[fe.length - 1] && (ie = Du.tabKeyDown), j.preventDefault(), !ie) {
          const ce = fe.findIndex((ge) => ge === X.field), me = fe[j.shiftKey ? ce - 1 : ce + 1];
          e.current.setCellFocus(X.id, me);
        }
      }
      if (ie) {
        if (ie !== Du.escapeKeyDown && k(X.id))
          return;
        const fe = J({}, e.current.getRowParams(X.id), {
          reason: ie,
          field: X.field
        });
        e.current.publishEvent("rowEditStop", fe, j);
      }
    } else if (X.isEditable) {
      let ie;
      if (!e.current.unstable_applyPipeProcessors("canStartEditing", !0, {
        event: j,
        cellParams: X,
        editMode: "row"
      }))
        return;
      if (kH(j) || MH(j) ? ie = tf.printableKeyDown : j.key === "Enter" ? ie = tf.enterKeyDown : (j.key === "Backspace" || j.key === "Delete") && (ie = tf.deleteKeyDown), ie) {
        const ce = e.current.getRowParams(X.id), me = J({}, ce, {
          field: X.field,
          reason: ie
        });
        e.current.publishEvent("rowEditStart", me, j);
      }
    }
  }, [e, k]), D = w.useCallback((X) => {
    const {
      id: j,
      field: ie,
      reason: fe
    } = X, ce = {
      id: j,
      fieldToFocus: ie
    };
    (fe === tf.printableKeyDown || fe === tf.deleteKeyDown) && (ce.deleteValue = !!ie), e.current.startRowEditMode(ce);
  }, [e]), H = w.useCallback((X) => {
    const {
      id: j,
      reason: ie,
      field: fe
    } = X;
    e.current.runPendingEditCellValueMutation(j);
    let ce;
    ie === Du.enterKeyDown ? ce = "below" : ie === Du.tabKeyDown ? ce = "right" : ie === Du.shiftTabKeyDown && (ce = "left");
    const me = ie === "escapeKeyDown";
    e.current.stopRowEditMode({
      id: j,
      ignoreModifications: me,
      field: fe,
      cellToFocusAfter: ce
    });
  }, [e]);
  Mt(e, "cellDoubleClick", R(F)), Mt(e, "cellFocusIn", R(_)), Mt(e, "cellFocusOut", R(L)), Mt(e, "cellKeyDown", R(M)), Mt(e, "rowEditStart", R(D)), Mt(e, "rowEditStop", R(H)), Cr(e, "rowEditStart", t.onRowEditStart), Cr(e, "rowEditStop", t.onRowEditStop);
  const K = w.useCallback((X) => lH(e, {
    rowId: X,
    editMode: t.editMode
  }) ? Yr.Edit : Yr.View, [e, t.editMode]), Q = Nn((X) => {
    const j = X !== t.rowModesModel;
    S && j && S(X, {
      api: e.current
    }), !(t.rowModesModel && j) && (i(X), s.current = X, e.current.publishEvent("rowModesModelChange", X));
  }), z = w.useCallback((X, j) => {
    const ie = J({}, s.current);
    j !== null ? ie[X] = J({}, j) : delete ie[X], Q(ie);
  }, [Q]), I = w.useCallback((X, j) => {
    e.current.setState((ie) => {
      const fe = J({}, ie.editRows);
      return j !== null ? fe[X] = j : delete fe[X], J({}, ie, {
        editRows: fe
      });
    }), e.current.forceUpdate();
  }, [e]), G = w.useCallback((X, j, ie) => {
    e.current.setState((fe) => {
      const ce = J({}, fe.editRows);
      return ie !== null ? ce[X] = J({}, ce[X], {
        [j]: J({}, ie)
      }) : (delete ce[X][j], Object.keys(ce[X]).length === 0 && delete ce[X]), J({}, fe, {
        editRows: ce
      });
    }), e.current.forceUpdate();
  }, [e]), W = w.useCallback((X) => {
    const {
      id: j
    } = X, ie = Xt(X, Lle);
    E(j, Yr.View), z(j, J({
      mode: Yr.Edit
    }, ie));
  }, [E, z]), B = Nn((X) => {
    const {
      id: j,
      fieldToFocus: ie,
      deleteValue: fe,
      initialValue: ce
    } = X, me = e.current.getRow(j), ge = nl(e), de = ge.reduce((pe, be) => {
      const Ce = be.field;
      if (!e.current.getCellParams(j, Ce).isEditable)
        return pe;
      const ue = e.current.getColumn(Ce);
      let we = e.current.getCellValue(j, Ce);
      return ie === Ce && (fe || ce) && (fe ? we = Qk(ue) : ce && (we = ce)), pe[Ce] = {
        value: we,
        error: !1,
        isProcessingProps: ue.editable && !!ue.preProcessEditCellProps && fe
      }, pe;
    }, {});
    d.current[j] = me, I(j, de), ie && e.current.setCellFocus(j, ie), ge.filter((pe) => e.current.getCellParams(j, pe.field).isEditable && pe.editable && !!pe.preProcessEditCellProps && fe).forEach((pe) => {
      const be = pe.field, Ce = e.current.getCellValue(j, be), Re = fe ? Qk(pe) : ce ?? Ce;
      Promise.resolve(pe.preProcessEditCellProps({
        id: j,
        row: me,
        props: de[be],
        hasChanged: Re !== Ce
      })).then((ue) => {
        if (e.current.getRowMode(j) === Yr.Edit) {
          const we = si(e.current.state);
          G(j, be, J({}, ue, {
            value: we[j][be].value,
            isProcessingProps: !1
          }));
        }
      });
    });
  }), ee = w.useCallback((X) => {
    const {
      id: j
    } = X, ie = Xt(X, Fle);
    E(j, Yr.Edit), z(j, J({
      mode: Yr.View
    }, ie));
  }, [E, z]), U = Nn((X) => {
    const {
      id: j,
      ignoreModifications: ie,
      field: fe,
      cellToFocusAfter: ce = "none"
    } = X;
    e.current.runPendingEditCellValueMutation(j);
    const me = () => {
      ce !== "none" && fe && e.current.moveFocusToRelativeCell(j, fe, ce), I(j, null), z(j, null), delete d.current[j];
    };
    if (ie) {
      me();
      return;
    }
    const ge = si(e.current.state), de = d.current[j];
    if (Object.values(ge[j]).some((Ce) => Ce.isProcessingProps)) {
      u.current[j].mode = Yr.Edit;
      return;
    }
    if (k(j)) {
      u.current[j].mode = Yr.Edit, z(j, {
        mode: Yr.Edit
      });
      return;
    }
    const be = e.current.getRowWithUpdatedValuesFromRowEditing(j);
    if (v) {
      const Ce = (Re) => {
        u.current[j] && (u.current[j].mode = Yr.Edit, z(j, {
          mode: Yr.Edit
        })), y ? y(Re) : process.env.NODE_ENV !== "production" && tl(["MUI X: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.", "To handle the error pass a callback to the `onProcessRowUpdateError` prop, for example `<DataGrid onProcessRowUpdateError={(error) => ...} />`.", "For more detail, see https://mui.com/x/react-data-grid/editing/#server-side-persistence."], "error");
      };
      try {
        Promise.resolve(v(be, de, {
          rowId: j
        })).then((Re) => {
          e.current.updateRows([Re]), me();
        }).catch(Ce);
      } catch (Re) {
        Ce(Re);
      }
    } else
      e.current.updateRows([be]), me();
  }), q = w.useCallback((X) => {
    const {
      id: j,
      field: ie,
      value: fe,
      debounceMs: ce,
      unstable_skipValueParser: me
    } = X;
    O(j, ie);
    const ge = e.current.getColumn(ie), de = e.current.getRow(j);
    let pe = fe;
    ge.valueParser && !me && (pe = ge.valueParser(fe, de, ge, e));
    let be = si(e.current.state), Ce = J({}, be[j][ie], {
      value: pe,
      changeReason: ce ? "debouncedSetEditCellValue" : "setEditCellValue"
    });
    return ge.preProcessEditCellProps || G(j, ie, Ce), new Promise((Re) => {
      const ue = [];
      if (ge.preProcessEditCellProps) {
        const we = Ce.value !== be[j][ie].value;
        Ce = J({}, Ce, {
          isProcessingProps: !0
        }), G(j, ie, Ce);
        const _e = be[j], He = Xt(_e, [ie].map(SC)), et = Promise.resolve(ge.preProcessEditCellProps({
          id: j,
          row: de,
          props: Ce,
          hasChanged: we,
          otherFieldsProps: He
        })).then((Ne) => {
          if (e.current.getRowMode(j) === Yr.View) {
            Re(!1);
            return;
          }
          be = si(e.current.state), Ne = J({}, Ne, {
            isProcessingProps: !1
          }), Ne.value = ge.preProcessEditCellProps ? be[j][ie].value : pe, G(j, ie, Ne);
        });
        ue.push(et);
      }
      Object.entries(be[j]).forEach(([we, _e]) => {
        if (we === ie)
          return;
        const He = e.current.getColumn(we);
        if (!He.preProcessEditCellProps)
          return;
        _e = J({}, _e, {
          isProcessingProps: !0
        }), G(j, we, _e), be = si(e.current.state);
        const et = be[j], Ne = Xt(et, [we].map(SC)), rt = Promise.resolve(He.preProcessEditCellProps({
          id: j,
          row: de,
          props: _e,
          hasChanged: !1,
          otherFieldsProps: Ne
        })).then((it) => {
          if (e.current.getRowMode(j) === Yr.View) {
            Re(!1);
            return;
          }
          it = J({}, it, {
            isProcessingProps: !1
          }), G(j, we, it);
        });
        ue.push(rt);
      }), Promise.all(ue).then(() => {
        e.current.getRowMode(j) === Yr.Edit ? (be = si(e.current.state), Re(!be[j][ie].error)) : Re(!1);
      });
    });
  }, [e, O, G]), Y = w.useCallback((X) => {
    const j = si(e.current.state), ie = e.current.getRow(X);
    if (!j[X])
      return e.current.getRow(X);
    let fe = J({}, d.current[X], ie);
    return Object.entries(j[X]).forEach(([ce, me]) => {
      const ge = e.current.getColumn(ce);
      ge != null && ge.valueSetter ? fe = ge.valueSetter(me.value, fe, ge, e) : fe[ce] = me.value;
    }), fe;
  }, [e]), ne = {
    getRowMode: K,
    startRowEditMode: W,
    stopRowEditMode: ee
  }, re = {
    setRowEditingEditCellValue: q,
    getRowWithUpdatedValuesFromRowEditing: Y
  };
  Mn(e, ne, "public"), Mn(e, re, "private"), w.useEffect(() => {
    C && Q(C);
  }, [C, Q]), _r(() => {
    const X = Js(e), j = u.current;
    u.current = rz(n);
    const ie = /* @__PURE__ */ new Set([...Object.keys(n), ...Object.keys(j)]);
    Array.from(ie).forEach((fe) => {
      var de;
      const ce = n[fe] ?? {
        mode: Yr.View
      }, me = ((de = j[fe]) == null ? void 0 : de.mode) || Yr.View, ge = X[fe] ? e.current.getRowId(X[fe]) : fe;
      ce.mode === Yr.Edit && me === Yr.View ? B(J({
        id: ge
      }, ce)) : ce.mode === Yr.View && me === Yr.Edit && U(J({
        id: ge
      }, ce));
    });
  }, [e, n, B, U]);
}, Ale = (e) => J({}, e, {
  editRows: {}
}), $le = (e, t) => {
  Nle(e, t), _le(e, t);
  const n = w.useRef({}), {
    isCellEditable: i
  } = t, s = w.useCallback((S) => Zg(S.rowNode) || !S.colDef.editable || !S.colDef.renderEditCell ? !1 : i ? i(S) : !0, [i]), u = (S, R, O, E) => {
    if (!O) {
      E();
      return;
    }
    if (n.current[S] || (n.current[S] = {}), n.current[S][R]) {
      const [_] = n.current[S][R];
      clearTimeout(_);
    }
    const k = () => {
      const [_] = n.current[S][R];
      clearTimeout(_), E(), delete n.current[S][R];
    }, F = setTimeout(() => {
      E(), delete n.current[S][R];
    }, O);
    n.current[S][R] = [F, k];
  };
  w.useEffect(() => {
    const S = n.current;
    return () => {
      Object.entries(S).forEach(([R, O]) => {
        Object.keys(O).forEach((E) => {
          const [k] = S[R][E];
          clearTimeout(k), delete S[R][E];
        });
      });
    };
  }, []);
  const d = w.useCallback((S, R) => {
    if (n.current[S]) {
      if (!R)
        Object.keys(n.current[S]).forEach((O) => {
          const [, E] = n.current[S][O];
          E();
        });
      else if (n.current[S][R]) {
        const [, O] = n.current[S][R];
        O();
      }
    }
  }, []), p = w.useCallback((S) => {
    const {
      id: R,
      field: O,
      debounceMs: E
    } = S;
    return new Promise((k) => {
      u(R, O, E, async () => {
        const F = t.editMode === Yu.Row ? e.current.setRowEditingEditCellValue : e.current.setCellEditingEditCellValue;
        if (e.current.getCellMode(R, O) === yr.Edit) {
          const _ = await F(S);
          k(_);
        }
      });
    });
  }, [e, t.editMode]), m = w.useCallback((S, R) => t.editMode === Yu.Cell ? e.current.getRowWithUpdatedValuesFromCellEditing(S, R) : e.current.getRowWithUpdatedValuesFromRowEditing(S), [e, t.editMode]), v = w.useCallback((S, R) => {
    var E;
    return ((E = si(e.current.state)[S]) == null ? void 0 : E[R]) ?? null;
  }, [e]), y = {
    isCellEditable: s,
    setEditCellValue: p,
    getRowWithUpdatedValues: m,
    unstable_getEditCellMeta: v
  }, C = {
    runPendingEditCellValueMutation: d
  };
  Mn(e, y, "public"), Mn(e, C, "private");
}, jle = (e, t, n) => {
  const i = !!t.unstable_dataSource;
  return n.current.caches.rows = y0({
    rows: i ? [] : t.rows,
    getRowId: t.getRowId,
    loading: t.loading,
    rowCount: t.rowCount
  }), J({}, e, {
    rows: mz({
      apiRef: n,
      rowCountProp: t.rowCount,
      loadingProp: i ? !0 : t.loading,
      previousTree: null,
      previousTreeDepths: null
    })
  });
}, zle = (e, t) => {
  if (process.env.NODE_ENV !== "production")
    try {
      Object.freeze(t.rows);
    } catch {
    }
  const n = ci(e, "useGridRows"), i = w.useRef(Date.now()), s = w.useRef(t.rowCount), u = ps(), d = w.useCallback((U) => {
    const q = Js(e)[U];
    if (q)
      return q;
    const Y = e.current.getRowNode(U);
    return Y && Zg(Y) ? {
      [Jg]: U
    } : null;
  }, [e]), p = w.useCallback((U) => qC(e.current.state, U), [e]), m = w.useCallback(({
    cache: U,
    throttle: q
  }) => {
    const Y = () => {
      i.current = Date.now(), e.current.setState((re) => J({}, re, {
        rows: mz({
          apiRef: e,
          rowCountProp: t.rowCount,
          loadingProp: t.loading,
          previousTree: Go(e),
          previousTreeDepths: X_(e),
          previousGroupsToFetch: wte(e)
        })
      })), e.current.publishEvent("rowsSet"), e.current.forceUpdate();
    };
    if (u.clear(), e.current.caches.rows = U, !q) {
      Y();
      return;
    }
    const ne = t.throttleRowsMs - (Date.now() - i.current);
    if (ne > 0) {
      u.start(ne, Y);
      return;
    }
    Y();
  }, [t.throttleRowsMs, t.rowCount, t.loading, e, u]), v = w.useCallback((U) => {
    n.debug(`Updating all rows, new length ${U.length}`);
    const q = y0({
      rows: U,
      getRowId: t.getRowId,
      loading: t.loading,
      rowCount: t.rowCount
    }), Y = e.current.caches.rows;
    q.rowsBeforePartialUpdates = Y.rowsBeforePartialUpdates, m({
      cache: q,
      throttle: !0
    });
  }, [n, t.getRowId, t.loading, t.rowCount, m, e]), y = w.useCallback((U) => {
    if (t.signature === gs.DataGrid && U.length > 1)
      throw new Error(["MUI X: You cannot update several rows at once in `apiRef.current.updateRows` on the DataGrid.", "You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature."].join(`
`));
    const q = sA(e, U, t.getRowId), Y = aA({
      updates: q,
      getRowId: t.getRowId,
      previousCache: e.current.caches.rows
    });
    m({
      cache: Y,
      throttle: !0
    });
  }, [t.signature, t.getRowId, m, e]), C = w.useCallback((U, q) => {
    const Y = sA(e, U, t.getRowId), ne = aA({
      updates: Y,
      getRowId: t.getRowId,
      previousCache: e.current.caches.rows,
      groupKeys: q ?? []
    });
    m({
      cache: ne,
      throttle: !1
    });
  }, [t.getRowId, m, e]), S = w.useCallback((U) => {
    U !== t.loading && (n.debug(`Setting loading to ${U}`), e.current.setState((q) => J({}, q, {
      rows: J({}, q.rows, {
        loading: U
      })
    })), e.current.caches.rows.loadingPropBeforePartialUpdates = U);
  }, [t.loading, e, n]), R = w.useCallback(() => {
    const U = Bb(e), q = Js(e);
    return new Map(U.map((Y) => [Y, q[Y] ?? {}]));
  }, [e]), O = w.useCallback(() => BC(e), [e]), E = w.useCallback(() => Bb(e), [e]), k = w.useCallback((U) => {
    const q = e.current.getRow(U), {
      rowToIndexMap: Y
    } = gf(e);
    return Y.get(q);
  }, [e]), F = w.useCallback((U, q) => {
    const Y = e.current.getRowNode(U);
    if (!Y)
      throw new Error(`MUI X: No row with id #${U} found.`);
    if (Y.type !== "group")
      throw new Error("MUI X: Only group nodes can be expanded or collapsed.");
    const ne = J({}, Y, {
      childrenExpanded: q
    });
    e.current.setState((re) => J({}, re, {
      rows: J({}, re.rows, {
        tree: J({}, re.rows.tree, {
          [U]: ne
        })
      })
    })), e.current.forceUpdate(), e.current.publishEvent("rowExpansionChange", ne);
  }, [e]), _ = w.useCallback((U) => Go(e)[U] ?? null, [e]), L = w.useCallback(({
    skipAutoGeneratedRows: U = !0,
    groupId: q,
    applySorting: Y,
    applyFiltering: ne
  }) => {
    const re = Go(e);
    let X;
    if (Y) {
      const j = re[q];
      if (!j)
        return [];
      const ie = dv(e);
      X = [];
      const fe = ie.findIndex((ce) => ce === q) + 1;
      for (let ce = fe; ce < ie.length && re[ie[ce]].depth > j.depth; ce += 1) {
        const me = ie[ce];
        (!U || !Zg(re[me])) && X.push(me);
      }
    } else
      X = sM(re, q, U);
    if (ne) {
      const j = fv(e);
      X = X.filter((ie) => j[ie] !== !1);
    }
    return X;
  }, [e]), M = w.useCallback((U, q) => {
    const Y = e.current.getRowNode(U);
    if (!Y)
      throw new Error(`MUI X: No row with id #${U} found.`);
    if (Y.parent !== ji)
      throw new Error("MUI X: The row reordering do not support reordering of grouped rows yet.");
    if (Y.type !== "leaf")
      throw new Error("MUI X: The row reordering do not support reordering of footer or grouping rows.");
    e.current.setState((ne) => {
      const re = Go(ne, e.current.instanceId)[ji], X = re.children, j = X.findIndex((fe) => fe === U);
      if (j === -1 || j === q)
        return ne;
      n.debug(`Moving row ${U} to index ${q}`);
      const ie = [...X];
      return ie.splice(q, 0, ie.splice(j, 1)[0]), J({}, ne, {
        rows: J({}, ne.rows, {
          tree: J({}, ne.rows.tree, {
            [ji]: J({}, re, {
              children: ie
            })
          })
        })
      });
    }), e.current.publishEvent("rowsSet");
  }, [e, n]), D = w.useCallback((U, q) => {
    if (t.signature === gs.DataGrid && q.length > 1)
      throw new Error(["MUI X: You cannot replace rows using `apiRef.current.unstable_replaceRows` on the DataGrid.", "You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature."].join(`
`));
    if (q.length === 0)
      return;
    if (Sh(e) > 1)
      throw new Error("`apiRef.current.unstable_replaceRows` is not compatible with tree data and row grouping");
    const ne = J({}, Go(e)), re = J({}, Js(e)), X = J({}, Y_(e)), j = ne[ji], ie = [...j.children], fe = /* @__PURE__ */ new Set();
    for (let me = 0; me < q.length; me += 1) {
      const ge = q[me], de = jE(ge, t.getRowId, "A row was provided without id when calling replaceRows()."), [pe] = ie.splice(U + me, 1, de);
      fe.has(pe) || (delete re[pe], delete X[pe], delete ne[pe]);
      const be = {
        id: de,
        depth: 0,
        parent: ji,
        type: "leaf",
        groupingKey: null
      };
      re[de] = ge, X[de] = de, ne[de] = be, fe.add(de);
    }
    ne[ji] = J({}, j, {
      children: ie
    });
    const ce = ie.filter((me) => {
      var ge;
      return ((ge = ne[me]) == null ? void 0 : ge.type) === "leaf";
    });
    e.current.caches.rows.dataRowIdToModelLookup = re, e.current.caches.rows.dataRowIdToIdLookup = X, e.current.setState((me) => J({}, me, {
      rows: J({}, me.rows, {
        dataRowIdToModelLookup: re,
        dataRowIdToIdLookup: X,
        dataRowIds: ce,
        tree: ne
      })
    })), e.current.publishEvent("rowsSet");
  }, [e, t.signature, t.getRowId]), H = {
    getRow: d,
    setLoading: S,
    getRowId: p,
    getRowModels: R,
    getRowsCount: O,
    getAllRowIds: E,
    setRows: v,
    updateRows: y,
    getRowNode: _,
    getRowIndexRelativeToVisibleRows: k,
    unstable_replaceRows: D
  }, K = {
    setRowIndex: M,
    setRowChildrenExpansion: F,
    getRowGroupChildren: L
  }, Q = {
    updateServerRows: C
  }, z = w.useCallback(() => {
    n.info("Row grouping pre-processing have changed, regenerating the row tree");
    let U;
    e.current.caches.rows.rowsBeforePartialUpdates === t.rows ? U = J({}, e.current.caches.rows, {
      updates: {
        type: "full",
        rows: Bb(e)
      }
    }) : U = y0({
      rows: t.rows,
      getRowId: t.getRowId,
      loading: t.loading,
      rowCount: t.rowCount
    }), m({
      cache: U,
      throttle: !1
    });
  }, [n, e, t.rows, t.getRowId, t.loading, t.rowCount, m]), I = sl(() => t.unstable_dataSource), G = w.useCallback((U) => {
    if (t.unstable_dataSource && t.unstable_dataSource !== I.current) {
      I.current = t.unstable_dataSource;
      return;
    }
    U === "rowTreeCreation" && z();
  }, [z, I, t.unstable_dataSource]), W = w.useCallback(() => {
    e.current.getActiveStrategy("rowTree") !== xte(e) && z();
  }, [e, z]);
  Mt(e, "activeStrategyProcessorChange", G), Mt(e, "strategyAvailabilityChange", W);
  const B = w.useCallback(() => {
    e.current.setState((U) => {
      const q = e.current.unstable_applyPipeProcessors("hydrateRows", {
        tree: Go(U, e.current.instanceId),
        treeDepths: X_(U, e.current.instanceId),
        dataRowIds: Bb(U, e.current.instanceId),
        dataRowIdToModelLookup: Js(U, e.current.instanceId),
        dataRowIdToIdLookup: Y_(U, e.current.instanceId)
      });
      return J({}, U, {
        rows: J({}, U.rows, q, {
          totalTopLevelRowCount: hz({
            tree: q.tree,
            rowCountProp: t.rowCount
          })
        })
      });
    }), e.current.publishEvent("rowsSet"), e.current.forceUpdate();
  }, [e, t.rowCount]);
  TM(e, "hydrateRows", B), Mn(e, H, "public"), Mn(e, K, t.signature === gs.DataGrid ? "private" : "public"), Mn(e, Q, "private");
  const ee = w.useRef(!0);
  w.useEffect(() => {
    var re;
    if (ee.current) {
      ee.current = !1;
      return;
    }
    let U = !1;
    t.rowCount !== s.current && (U = !0, s.current = t.rowCount);
    const q = e.current.caches.rows.rowsBeforePartialUpdates === t.rows, Y = e.current.caches.rows.loadingPropBeforePartialUpdates === t.loading, ne = e.current.caches.rows.rowCountPropBeforePartialUpdates === t.rowCount;
    q && (Y || (e.current.setState((X) => J({}, X, {
      rows: J({}, X.rows, {
        loading: t.loading
      })
    })), e.current.caches.rows.loadingPropBeforePartialUpdates = t.loading, e.current.forceUpdate()), ne || (e.current.setState((X) => J({}, X, {
      rows: J({}, X.rows, {
        totalRowCount: Math.max(t.rowCount || 0, X.rows.totalRowCount),
        totalTopLevelRowCount: Math.max(t.rowCount || 0, X.rows.totalTopLevelRowCount)
      })
    })), e.current.caches.rows.rowCountPropBeforePartialUpdates = t.rowCount, e.current.forceUpdate()), !U) || (n.debug(`Updating all rows, new length ${(re = t.rows) == null ? void 0 : re.length}`), m({
      cache: y0({
        rows: t.rows,
        getRowId: t.getRowId,
        loading: t.loading,
        rowCount: t.rowCount
      }),
      throttle: !1
    }));
  }, [t.rows, t.rowCount, t.getRowId, t.loading, n, m, e]);
}, Hle = (e) => {
  const t = {
    [ji]: J({}, nne(), {
      children: e
    })
  };
  for (let n = 0; n < e.length; n += 1) {
    const i = e[n];
    t[i] = {
      id: i,
      depth: 0,
      parent: ji,
      type: "leaf",
      groupingKey: null
    };
  }
  return {
    groupingName: gh,
    tree: t,
    treeDepths: {
      0: e.length
    },
    dataRowIds: e
  };
}, Vle = ({
  previousTree: e,
  actions: t
}) => {
  const n = J({}, e), i = {};
  for (let d = 0; d < t.remove.length; d += 1) {
    const p = t.remove[d];
    i[p] = !0, delete n[p];
  }
  for (let d = 0; d < t.insert.length; d += 1) {
    const p = t.insert[d];
    n[p] = {
      id: p,
      depth: 0,
      parent: ji,
      type: "leaf",
      groupingKey: null
    };
  }
  const s = n[ji];
  let u = [...s.children, ...t.insert];
  return Object.values(i).length && (u = u.filter((d) => !i[d])), n[ji] = J({}, s, {
    children: u
  }), {
    groupingName: gh,
    tree: n,
    treeDepths: {
      0: u.length
    },
    dataRowIds: u
  };
}, Ble = (e) => e.updates.type === "full" ? Hle(e.updates.rows) : Vle({
  previousTree: e.previousTree,
  actions: e.updates.actions
}), Ule = (e) => {
  nE(e, gh, "rowTreeCreation", Ble);
};
class YO extends Error {
}
function Gle(e, t) {
  var O;
  const n = w.useCallback((E) => ({
    field: E,
    colDef: e.current.getColumn(E)
  }), [e]), i = w.useCallback((E) => {
    const k = e.current.getRow(E);
    if (!k)
      throw new YO(`No row with id #${E} found`);
    return {
      id: E,
      columns: e.current.getAllColumns(),
      row: k
    };
  }, [e]), s = w.useCallback((E, k, F, {
    cellMode: _,
    colDef: L,
    hasFocus: M,
    rowNode: D,
    tabIndex: H
  }) => {
    const K = F[k], Q = L != null && L.valueGetter ? L.valueGetter(K, F, L, e) : K, z = {
      id: E,
      field: k,
      row: F,
      rowNode: D,
      colDef: L,
      cellMode: _,
      hasFocus: M,
      tabIndex: H,
      value: Q,
      formattedValue: Q,
      isEditable: !1,
      api: e.current
    };
    return L && L.valueFormatter && (z.formattedValue = L.valueFormatter(Q, F, L, e)), z.isEditable = L && e.current.isCellEditable(z), z;
  }, [e]), u = w.useCallback((E, k) => {
    var H;
    const F = e.current.getRow(E), _ = e.current.getRowNode(E);
    if (!F || !_)
      throw new YO(`No row with id #${E} found`);
    const L = Sa(e), M = fM(e), D = e.current.getCellMode(E, k);
    return e.current.getCellParamsForRow(E, k, F, {
      colDef: t.unstable_listView && ((H = t.unstable_listColumn) == null ? void 0 : H.field) === k ? tv(e.current.state) : e.current.getColumn(k),
      rowNode: _,
      hasFocus: L !== null && L.field === k && L.id === E,
      tabIndex: M && M.field === k && M.id === E ? 0 : -1,
      cellMode: D
    });
  }, [e, t.unstable_listView, (O = t.unstable_listColumn) == null ? void 0 : O.field]), d = w.useCallback((E, k) => {
    const F = e.current.getColumn(k), _ = e.current.getRow(E);
    if (!_)
      throw new YO(`No row with id #${E} found`);
    return !F || !F.valueGetter ? _[k] : F.valueGetter(_[F.field], _, F, e);
  }, [e]), p = w.useCallback((E, k) => {
    const F = k.field;
    if (!k || !k.valueGetter)
      return E[F];
    const _ = E[k.field];
    return k.valueGetter(_, E, k, e);
  }, [e]), m = w.useCallback((E, k) => {
    const F = p(E, k);
    return !k || !k.valueFormatter ? F : k.valueFormatter(F, E, k, e);
  }, [e, p]), v = w.useCallback((E) => e.current.rootElementRef.current ? Rie(e.current.rootElementRef.current, E) : null, [e]), y = w.useCallback((E) => e.current.rootElementRef.current ? Oie(e.current.rootElementRef.current, E) : null, [e]), C = w.useCallback((E, k) => e.current.rootElementRef.current ? kie(e.current.rootElementRef.current, {
    id: E,
    field: k
  }) : null, [e]), S = {
    getCellValue: d,
    getCellParams: u,
    getCellElement: C,
    getRowValue: p,
    getRowFormattedValue: m,
    getRowParams: i,
    getRowElement: y,
    getColumnHeaderParams: n,
    getColumnHeaderElement: v
  }, R = {
    getCellParamsForRow: s
  };
  Mn(e, S, "public"), Mn(e, R, "private");
}
const iV = (e, t) => e == null || Array.isArray(e) ? e : t && t[0] === e ? t : [e], Wle = (e, t) => J({}, e, {
  rowSelection: t.rowSelection ? iV(t.rowSelectionModel) ?? [] : []
}), qle = (e, t) => {
  var ne, re, X, j, ie, fe, ce, me, ge;
  const n = ci(e, "useGridSelection"), i = w.useCallback((de) => (...pe) => {
    t.rowSelection && de(...pe);
  }, [t.rowSelection]), s = t.signature !== gs.DataGrid && (((ne = t.rowSelectionPropagation) == null ? void 0 : ne.parents) || ((re = t.rowSelectionPropagation) == null ? void 0 : re.descendants)), u = w.useMemo(() => iV(t.rowSelectionModel, us(e.current.state)), [e, t.rowSelectionModel]), d = w.useRef(null);
  e.current.registerControlState({
    stateId: "rowSelection",
    propModel: u,
    propOnChange: t.onRowSelectionModelChange,
    stateSelector: us,
    changeEvent: "rowSelectionChange"
  });
  const {
    checkboxSelection: p,
    disableRowSelectionOnClick: m,
    isRowSelectable: v
  } = t, y = dM(t), C = tt(e, Go), S = tt(e, Sh) > 1, R = w.useCallback((de) => {
    let pe = de;
    const be = d.current ?? de, Ce = e.current.isRowSelected(de);
    if (Ce) {
      const Re = Ng(e), ue = Re.findIndex((_e) => _e === be), we = Re.findIndex((_e) => _e === pe);
      if (ue === we)
        return;
      ue > we ? pe = Re[we + 1] : pe = Re[we - 1];
    }
    d.current = de, e.current.selectRowRange({
      startId: be,
      endId: pe
    }, !Ce);
  }, [e]), O = w.useCallback((de) => {
    if (t.signature === gs.DataGrid && !y && Array.isArray(de) && de.length > 1)
      throw new Error(["MUI X: `rowSelectionModel` can only contain 1 item in DataGrid.", "You need to upgrade to DataGridPro or DataGridPremium component to unlock multiple selection."].join(`
`));
    us(e.current.state) !== de && (n.debug("Setting selection model"), e.current.setState((be) => J({}, be, {
      rowSelection: t.rowSelection ? de : []
    })), e.current.forceUpdate());
  }, [e, n, t.rowSelection, t.signature, y]), E = w.useCallback((de) => us(e.current.state).includes(de), [e]), k = w.useCallback((de) => {
    if (t.rowSelection === !1 || v && !v(e.current.getRowParams(de)))
      return !1;
    const pe = Go(e)[de];
    return !((pe == null ? void 0 : pe.type) === "footer" || (pe == null ? void 0 : pe.type) === "pinnedRow");
  }, [e, t.rowSelection, v]), F = w.useCallback(() => Tne(e), [e]), _ = w.useCallback((de, pe = !0, be = !1) => {
    var Ce, Re, ue, we, _e, He;
    if (e.current.isRowSelectable(de))
      if (d.current = de, be) {
        n.debug(`Setting selection for row ${de}`);
        const et = [], Ne = (rt) => {
          et.push(rt);
        };
        pe && (Ne(de), s && Nb(e, C, de, ((Ce = t.rowSelectionPropagation) == null ? void 0 : Ce.descendants) ?? !1, ((Re = t.rowSelectionPropagation) == null ? void 0 : Re.parents) ?? !1, Ne)), e.current.setRowSelectionModel(et);
      } else {
        n.debug(`Toggling selection for row ${de}`);
        const et = us(e.current.state), Ne = new Set(et);
        Ne.delete(de);
        const rt = (gt) => {
          Ne.add(gt);
        }, it = (gt) => {
          Ne.delete(gt);
        };
        pe ? (rt(de), s && Nb(e, C, de, ((ue = t.rowSelectionPropagation) == null ? void 0 : ue.descendants) ?? !1, ((we = t.rowSelectionPropagation) == null ? void 0 : we.parents) ?? !1, rt)) : s && uA(e, C, de, ((_e = t.rowSelectionPropagation) == null ? void 0 : _e.descendants) ?? !1, ((He = t.rowSelectionPropagation) == null ? void 0 : He.parents) ?? !1, it), (Ne.size < 2 || y) && e.current.setRowSelectionModel(Array.from(Ne));
      }
  }, [e, n, s, C, (X = t.rowSelectionPropagation) == null ? void 0 : X.descendants, (j = t.rowSelectionPropagation) == null ? void 0 : j.parents, y]), L = w.useCallback((de, pe = !0, be = !1) => {
    n.debug("Setting selection for several rows");
    const Ce = de.filter((we) => e.current.isRowSelectable(we));
    let Re;
    if (be) {
      if (pe) {
        if (Re = new Set(Ce), s) {
          const _e = (He) => {
            Re.add(He);
          };
          Ce.forEach((He) => {
            var et, Ne;
            Nb(e, C, He, ((et = t.rowSelectionPropagation) == null ? void 0 : et.descendants) ?? !1, ((Ne = t.rowSelectionPropagation) == null ? void 0 : Ne.parents) ?? !1, _e);
          });
        }
      } else
        Re = /* @__PURE__ */ new Set();
      const we = mf(e);
      if (Re.size === Object.keys(we).length && Array.from(Re).every((_e) => we[_e] === _e))
        return;
    } else {
      Re = new Set(Object.values(mf(e)));
      const we = (He) => {
        Re.add(He);
      }, _e = (He) => {
        Re.delete(He);
      };
      Ce.forEach((He) => {
        var et, Ne, rt, it;
        pe ? (Re.add(He), s && Nb(e, C, He, ((et = t.rowSelectionPropagation) == null ? void 0 : et.descendants) ?? !1, ((Ne = t.rowSelectionPropagation) == null ? void 0 : Ne.parents) ?? !1, we)) : (_e(He), s && uA(e, C, He, ((rt = t.rowSelectionPropagation) == null ? void 0 : rt.descendants) ?? !1, ((it = t.rowSelectionPropagation) == null ? void 0 : it.parents) ?? !1, _e));
      });
    }
    (Re.size < 2 || y) && e.current.setRowSelectionModel(Array.from(Re));
  }, [n, s, y, e, C, (ie = t.rowSelectionPropagation) == null ? void 0 : ie.descendants, (fe = t.rowSelectionPropagation) == null ? void 0 : fe.parents]), M = w.useCallback((de) => {
    var Ce, Re;
    if (!S || !s || de.length === 0)
      return de;
    const pe = new Set(de), be = (ue) => {
      pe.add(ue);
    };
    for (const ue of de)
      Nb(e, C, ue, ((Ce = t.rowSelectionPropagation) == null ? void 0 : Ce.descendants) ?? !1, ((Re = t.rowSelectionPropagation) == null ? void 0 : Re.parents) ?? !1, be, pe);
    return Array.from(pe);
  }, [e, C, (ce = t.rowSelectionPropagation) == null ? void 0 : ce.descendants, (me = t.rowSelectionPropagation) == null ? void 0 : me.parents, S, s]), D = w.useCallback(({
    startId: de,
    endId: pe
  }, be = !0, Ce = !1) => {
    if (!e.current.getRow(de) || !e.current.getRow(pe))
      return;
    n.debug(`Expanding selection from row ${de} to row ${pe}`);
    const Re = Ng(e), ue = Re.indexOf(de), we = Re.indexOf(pe), [_e, He] = ue > we ? [we, ue] : [ue, we], et = Re.slice(_e, He + 1);
    e.current.selectRows(et, be, Ce);
  }, [e, n]), H = {
    selectRow: _,
    setRowSelectionModel: O,
    getSelectedRows: F,
    isRowSelected: E,
    isRowSelectable: k
  }, K = {
    selectRows: L,
    selectRowRange: D,
    getPropagatedRowSelectionModel: M
  };
  Mn(e, H, "public"), Mn(e, K, t.signature === gs.DataGrid ? "private" : "public");
  const Q = w.useRef(!0), z = w.useCallback((de = !1) => {
    var He;
    if (Q.current)
      return;
    const pe = us(e.current.state), be = Js(e), Ce = fv(e), Re = J({}, mf(e)), ue = (et) => t.filterMode === "server" ? !be[et] : !be[et] || Ce[et] === !1;
    let we = !1;
    pe.forEach((et) => {
      var rt;
      if (ue(et)) {
        if (t.keepNonExistentRowsSelected)
          return;
        delete Re[et], we = !0;
        return;
      }
      if (!((rt = t.rowSelectionPropagation) != null && rt.parents))
        return;
      const Ne = C[et];
      if (Ne.type === "group") {
        if (Ne.isAutoGenerated) {
          delete Re[et], we = !0;
          return;
        }
        Ne.children.every((wt) => Ce[wt] === !1) || (delete Re[et], we = !0);
      }
    });
    const _e = S && ((He = t.rowSelectionPropagation) == null ? void 0 : He.parents) && Object.keys(Re).length > 0;
    if (we || _e && !de) {
      const et = Object.values(Re);
      _e ? e.current.selectRows(et, !0, !0) : e.current.setRowSelectionModel(et);
    }
  }, [e, S, (ge = t.rowSelectionPropagation) == null ? void 0 : ge.parents, t.keepNonExistentRowsSelected, t.filterMode, C]), I = w.useCallback((de, pe) => {
    const be = pe.metaKey || pe.ctrlKey, Ce = !p && !be && !Sae(pe), Re = !y || Ce, ue = e.current.isRowSelected(de);
    Re ? e.current.selectRow(de, Ce ? !0 : !ue, !0) : e.current.selectRow(de, !ue, !1);
  }, [e, y, p]), G = w.useCallback((de, pe) => {
    var Re;
    if (m)
      return;
    const be = (Re = pe.target.closest(`.${ae.cell}`)) == null ? void 0 : Re.getAttribute("data-field");
    if (be === pv.field || be === zE)
      return;
    if (be) {
      const ue = e.current.getColumn(be);
      if ((ue == null ? void 0 : ue.type) === $E)
        return;
    }
    Go(e)[de.id].type !== "pinnedRow" && (pe.shiftKey && y ? R(de.id) : I(de.id, pe));
  }, [m, y, e, R, I]), W = w.useCallback((de, pe) => {
    var be;
    y && pe.shiftKey && ((be = window.getSelection()) == null || be.removeAllRanges());
  }, [y]), B = w.useCallback((de, pe) => {
    y && pe.nativeEvent.shiftKey ? R(de.id) : e.current.selectRow(de.id, de.value, !y);
  }, [e, R, y]), ee = w.useCallback((de) => {
    const pe = t.pagination && t.checkboxSelectionVisibleOnly && t.paginationMode === "client" ? $z(e) : Ng(e);
    e.current.selectRows(pe, de.value);
  }, [e, t.checkboxSelectionVisibleOnly, t.pagination, t.paginationMode]), U = w.useCallback((de, pe) => {
    if (e.current.getCellMode(de.id, de.field) !== yr.Edit && !XC(pe)) {
      if (Z0(pe.key) && pe.shiftKey) {
        const be = Sa(e);
        if (be && be.id !== de.id) {
          pe.preventDefault();
          const Ce = e.current.isRowSelected(be.id);
          if (!y) {
            e.current.selectRow(be.id, !Ce, !0);
            return;
          }
          const Re = e.current.getRowIndexRelativeToVisibleRows(be.id), ue = e.current.getRowIndexRelativeToVisibleRows(de.id);
          let we, _e;
          Re > ue ? Ce ? (we = ue, _e = Re - 1) : (we = ue, _e = Re) : Ce ? (we = Re + 1, _e = ue) : (we = Re, _e = ue);
          const et = gf(e).rows.slice(we, _e + 1).map((Ne) => Ne.id);
          e.current.selectRows(et, !Ce);
          return;
        }
      }
      if (pe.key === " " && pe.shiftKey) {
        pe.preventDefault(), I(de.id, pe);
        return;
      }
      String.fromCharCode(pe.keyCode) === "A" && (pe.ctrlKey || pe.metaKey) && (pe.preventDefault(), L(e.current.getAllRowIds(), !0));
    }
  }, [e, I, L, y]), q = Nn(() => {
    if (!t.rowSelection) {
      e.current.setRowSelectionModel([]);
      return;
    }
    if (u === void 0)
      return;
    if (!s || !S || u.length === 0) {
      e.current.setRowSelectionModel(u);
      return;
    }
    const de = e.current.getPropagatedRowSelectionModel(u);
    if (de.length !== u.length || !de.every((pe) => u.includes(pe))) {
      e.current.setRowSelectionModel(de);
      return;
    }
    e.current.setRowSelectionModel(u);
  });
  Mt(e, "sortedRowsSet", i(() => z(!0))), Mt(e, "filteredRowsSet", i(() => z())), Mt(e, "rowClick", i(G)), Mt(e, "rowSelectionCheckboxChange", i(B)), Mt(e, "headerSelectionCheckboxChange", ee), Mt(e, "cellMouseDown", i(W)), Mt(e, "cellKeyDown", i(U)), w.useEffect(() => {
    q();
  }, [e, u, t.rowSelection, q]);
  const Y = u != null;
  w.useEffect(() => {
    if (Y || !t.rowSelection)
      return;
    const de = us(e.current.state);
    if (k) {
      const pe = de.filter((be) => k(be));
      pe.length < de.length && e.current.setRowSelectionModel(pe);
    }
  }, [e, k, Y, t.rowSelection]), w.useEffect(() => {
    if (!t.rowSelection || Y)
      return;
    const de = us(e.current.state);
    !y && de.length > 1 && e.current.setRowSelectionModel([]);
  }, [e, y, p, Y, t.rowSelection]), w.useEffect(() => {
    i(z);
  }, [z, i]), w.useEffect(() => {
    Q.current && (Q.current = !1);
  }, []);
}, Kle = (e) => {
  const {
    classes: t
  } = e;
  return w.useMemo(() => yt({
    cellCheckbox: ["cellCheckbox"],
    columnHeaderCheckbox: ["columnHeaderCheckbox"]
  }, Gn, t), [t]);
}, Yle = (e, t) => {
  const n = {
    classes: t.classes
  }, i = Kle(n), s = w.useCallback((u) => {
    const d = J({}, pv, {
      cellClassName: i.cellCheckbox,
      headerClassName: i.columnHeaderCheckbox,
      headerName: e.current.getLocaleText("checkboxSelectionHeaderName")
    }), p = t.checkboxSelection, m = u.lookup[qs] != null;
    return p && !m ? (u.lookup[qs] = d, u.orderedFields = [qs, ...u.orderedFields]) : !p && m ? (delete u.lookup[qs], u.orderedFields = u.orderedFields.filter((v) => v !== qs)) : p && m && (u.lookup[qs] = J({}, d, u.lookup[qs]), t.columns.some((v) => v.field === qs) || (u.orderedFields = [qs, ...u.orderedFields.filter((v) => v !== qs)])), u;
  }, [e, i, t.columns, t.checkboxSelection]);
  no(e, "hydrateColumns", s);
}, Xle = (e, t) => {
  var i, s;
  const n = t.sortModel ?? ((s = (i = t.initialState) == null ? void 0 : i.sorting) == null ? void 0 : s.sortModel) ?? [];
  return J({}, e, {
    sorting: {
      sortModel: Z2(n, t.disableMultipleColumnsSorting),
      sortedRows: []
    }
  });
}, Qle = (e, t) => {
  var D, H;
  const n = ci(e, "useGridSorting");
  e.current.registerControlState({
    stateId: "sortModel",
    propModel: t.sortModel,
    propOnChange: t.onSortModelChange,
    stateSelector: $l,
    changeEvent: "sortModelChange"
  });
  const i = w.useCallback((K, Q) => {
    const z = $l(e), I = z.findIndex((W) => W.field === K);
    let G = [...z];
    return I > -1 ? (Q == null ? void 0 : Q.sort) == null ? G.splice(I, 1) : G.splice(I, 1, Q) : G = [...z, Q], G;
  }, [e]), s = w.useCallback((K, Q) => {
    const I = $l(e).find((G) => G.field === K.field);
    if (I) {
      const G = Q === void 0 ? J_(K.sortingOrder ?? t.sortingOrder, I.sort) : Q;
      return G === void 0 ? void 0 : J({}, I, {
        sort: G
      });
    }
    return {
      field: K.field,
      sort: Q === void 0 ? J_(K.sortingOrder ?? t.sortingOrder) : Q
    };
  }, [e, t.sortingOrder]), u = w.useCallback((K, Q) => Q == null || Q.sortable === !1 || t.disableColumnSorting ? K : (Q.sortingOrder || t.sortingOrder).some((I) => !!I) ? [...K, "columnMenuSortItem"] : K, [t.sortingOrder, t.disableColumnSorting]), d = w.useCallback(() => {
    e.current.setState((K) => {
      if (t.sortingMode === "server")
        return n.debug("Skipping sorting rows as sortingMode = server"), J({}, K, {
          sorting: J({}, K.sorting, {
            sortedRows: sM(Go(e), ji, !1)
          })
        });
      const Q = $l(K, e.current.instanceId), z = kte(Q, e), I = e.current.applyStrategyProcessor("sorting", {
        sortRowList: z
      });
      return J({}, K, {
        sorting: J({}, K.sorting, {
          sortedRows: I
        })
      });
    }), e.current.publishEvent("sortedRowsSet"), e.current.forceUpdate();
  }, [e, n, t.sortingMode]), p = w.useCallback((K) => {
    $l(e) !== K && (n.debug("Setting sort model"), e.current.setState(Q_(K, t.disableMultipleColumnsSorting)), e.current.forceUpdate(), e.current.applySorting());
  }, [e, n, t.disableMultipleColumnsSorting]), m = w.useCallback((K, Q, z) => {
    const I = e.current.getColumn(K), G = s(I, Q);
    let W;
    !z || t.disableMultipleColumnsSorting ? W = (G == null ? void 0 : G.sort) == null ? [] : [G] : W = i(I.field, G), e.current.setSortModel(W);
  }, [e, i, s, t.disableMultipleColumnsSorting]), v = w.useCallback(() => $l(e), [e]), y = w.useCallback(() => lM(e).map((Q) => Q.model), [e]), C = w.useCallback(() => dv(e), [e]), S = w.useCallback((K) => e.current.getSortedRowIds()[K], [e]);
  Mn(e, {
    getSortModel: v,
    getSortedRows: y,
    getSortedRowIds: C,
    getRowIdFromRowIndex: S,
    setSortModel: p,
    sortColumn: m,
    applySorting: d
  }, "public");
  const O = w.useCallback((K, Q) => {
    var G, W;
    const z = $l(e);
    return (
      // Always export if the `exportOnlyDirtyModels` property is not activated
      !Q.exportOnlyDirtyModels || // Always export if the model is controlled
      t.sortModel != null || // Always export if the model has been initialized
      ((W = (G = t.initialState) == null ? void 0 : G.sorting) == null ? void 0 : W.sortModel) != null || // Export if the model is not empty
      z.length > 0 ? J({}, K, {
        sorting: {
          sortModel: z
        }
      }) : K
    );
  }, [e, t.sortModel, (H = (D = t.initialState) == null ? void 0 : D.sorting) == null ? void 0 : H.sortModel]), E = w.useCallback((K, Q) => {
    var I;
    const z = (I = Q.stateToRestore.sorting) == null ? void 0 : I.sortModel;
    return z == null ? K : (e.current.setState(Q_(z, t.disableMultipleColumnsSorting)), J({}, K, {
      callbacks: [...K.callbacks, e.current.applySorting]
    }));
  }, [e, t.disableMultipleColumnsSorting]), k = w.useCallback((K) => {
    const Q = Go(e), z = Q[ji], I = K.sortRowList ? K.sortRowList(z.children.map((G) => Q[G])) : [...z.children];
    return z.footerId != null && I.push(z.footerId), I;
  }, [e]);
  no(e, "exportState", O), no(e, "restoreState", E), nE(e, gh, "sorting", k);
  const F = w.useCallback(({
    field: K,
    colDef: Q
  }, z) => {
    if (!Q.sortable || t.disableColumnSorting)
      return;
    const I = z.shiftKey || z.metaKey || z.ctrlKey;
    m(K, void 0, I);
  }, [m, t.disableColumnSorting]), _ = w.useCallback(({
    field: K,
    colDef: Q
  }, z) => {
    !Q.sortable || t.disableColumnSorting || z.key === "Enter" && !z.ctrlKey && !z.metaKey && m(K, void 0, z.shiftKey);
  }, [m, t.disableColumnSorting]), L = w.useCallback(() => {
    const K = $l(e), Q = ed(e);
    if (K.length > 0) {
      const z = K.filter((I) => Q[I.field]);
      z.length < K.length && e.current.setSortModel(z);
    }
  }, [e]), M = w.useCallback((K) => {
    K === "sorting" && e.current.applySorting();
  }, [e]);
  no(e, "columnMenu", u), Mt(e, "columnHeaderClick", F), Mt(e, "columnHeaderKeyDown", _), Mt(e, "rowsSet", e.current.applySorting), Mt(e, "columnsChange", L), Mt(e, "activeStrategyProcessorChange", M), UC(() => {
    e.current.applySorting();
  }), _r(() => {
    t.sortModel !== void 0 && e.current.setSortModel(t.sortModel);
  }, [e, t.sortModel]);
};
function HA(e) {
  const {
    containerSize: t,
    scrollPosition: n,
    elementSize: i,
    elementOffset: s
  } = e, u = s + i;
  if (i > t)
    return s;
  if (u - t > n)
    return u - t;
  if (s < n)
    return s;
}
const Jle = (e, t) => {
  const n = zi(), i = ci(e, "useGridScroll"), s = e.current.columnHeadersContainerRef, u = e.current.virtualScrollerRef, d = tt(e, kf), p = w.useCallback((C) => {
    var F;
    const S = ui(e.current.state), R = BC(e), O = t.unstable_listView ? [tv(e.current.state)] : ho(e);
    if (!(C.rowIndex == null) && R === 0 || O.length === 0)
      return !1;
    i.debug(`Scrolling to cell at row ${C.rowIndex}, col: ${C.colIndex} `);
    let k = {};
    if (C.colIndex !== void 0) {
      const _ = Of(e);
      let L;
      if (typeof C.rowIndex < "u") {
        const M = (F = d[C.rowIndex]) == null ? void 0 : F.id, D = e.current.unstable_getCellColSpanInfo(M, C.colIndex);
        D && !D.spannedByColSpan && (L = D.cellProps.width);
      }
      typeof L > "u" && (L = O[C.colIndex].computedWidth), k.left = HA({
        containerSize: S.viewportOuterSize.width,
        scrollPosition: Math.abs(u.current.scrollLeft),
        elementSize: L,
        elementOffset: _[C.colIndex]
      });
    }
    if (C.rowIndex !== void 0) {
      const _ = hv(e.current.state), L = zne(e), M = _z(e), D = t.pagination ? C.rowIndex - L * M : C.rowIndex, H = _.positions[D + 1] ? _.positions[D + 1] - _.positions[D] : _.currentPageTotalHeight - _.positions[D];
      k.top = HA({
        containerSize: S.viewportInnerSize.height,
        scrollPosition: u.current.scrollTop,
        elementSize: H,
        elementOffset: _.positions[D]
      });
    }
    return k = e.current.unstable_applyPipeProcessors("scrollToIndexes", k, C), typeof k.left !== void 0 || typeof k.top !== void 0 ? (e.current.scroll(k), !0) : !1;
  }, [i, e, u, t.pagination, d, t.unstable_listView]), m = w.useCallback((C) => {
    if (u.current && C.left !== void 0 && s.current) {
      const S = n ? -1 : 1;
      s.current.scrollLeft = C.left, u.current.scrollLeft = S * C.left, i.debug(`Scrolling left: ${C.left}`);
    }
    u.current && C.top !== void 0 && (u.current.scrollTop = C.top, i.debug(`Scrolling top: ${C.top}`)), i.debug("Scrolling, updating container, and viewport");
  }, [u, n, s, i]), v = w.useCallback(() => u != null && u.current ? {
    top: u.current.scrollTop,
    left: u.current.scrollLeft
  } : {
    top: 0,
    left: 0
  }, [u]);
  Mn(e, {
    scroll: m,
    scrollToIndexes: p,
    getScrollPosition: v
  }, "public");
};
function Zle(e, t) {
  Cr(e, "columnHeaderClick", t.onColumnHeaderClick), Cr(e, "columnHeaderContextMenu", t.onColumnHeaderContextMenu), Cr(e, "columnHeaderDoubleClick", t.onColumnHeaderDoubleClick), Cr(e, "columnHeaderOver", t.onColumnHeaderOver), Cr(e, "columnHeaderOut", t.onColumnHeaderOut), Cr(e, "columnHeaderEnter", t.onColumnHeaderEnter), Cr(e, "columnHeaderLeave", t.onColumnHeaderLeave), Cr(e, "cellClick", t.onCellClick), Cr(e, "cellDoubleClick", t.onCellDoubleClick), Cr(e, "cellKeyDown", t.onCellKeyDown), Cr(e, "preferencePanelClose", t.onPreferencePanelClose), Cr(e, "preferencePanelOpen", t.onPreferencePanelOpen), Cr(e, "menuOpen", t.onMenuOpen), Cr(e, "menuClose", t.onMenuClose), Cr(e, "rowDoubleClick", t.onRowDoubleClick), Cr(e, "rowClick", t.onRowClick), Cr(e, "stateChange", t.onStateChange);
}
function eue(e, t = 166) {
  let n, i;
  const s = () => {
    n = void 0, e(...i);
  };
  function u(...d) {
    i = d, n === void 0 && (n = setTimeout(s, t));
  }
  return u.clear = () => {
    clearTimeout(n), n = void 0;
  }, u;
}
const Jk = {
  autoHeight: !1,
  autoPageSize: !1,
  autosizeOnMount: !1,
  checkboxSelection: !1,
  checkboxSelectionVisibleOnly: !1,
  clipboardCopyCellDelimiter: "	",
  columnBufferPx: 150,
  columnHeaderHeight: 56,
  disableAutosize: !1,
  disableColumnFilter: !1,
  disableColumnMenu: !1,
  disableColumnReorder: !1,
  disableColumnResize: !1,
  disableColumnSelector: !1,
  disableColumnSorting: !1,
  disableDensitySelector: !1,
  disableEval: !1,
  disableMultipleColumnsFiltering: !1,
  disableMultipleColumnsSorting: !1,
  disableMultipleRowSelection: !1,
  disableRowSelectionOnClick: !1,
  disableVirtualization: !1,
  editMode: Yu.Cell,
  filterDebounceMs: 150,
  filterMode: "client",
  hideFooter: !1,
  hideFooterPagination: !1,
  hideFooterRowCount: !1,
  hideFooterSelectedRowCount: !1,
  ignoreDiacritics: !1,
  ignoreValueFormatterDuringExport: !1,
  // TODO v8: Update to 'select'
  indeterminateCheckboxAction: "deselect",
  keepColumnPositionIfDraggedOutside: !1,
  keepNonExistentRowsSelected: !1,
  loading: !1,
  logger: console,
  logLevel: process.env.NODE_ENV === "production" ? "error" : "warn",
  pageSizeOptions: [25, 50, 100],
  pagination: !1,
  paginationMode: "client",
  resetPageOnSortFilter: !1,
  resizeThrottleMs: 60,
  rowBufferPx: 150,
  rowHeight: 52,
  rowPositionsDebounceMs: 166,
  rows: [],
  rowSelection: !0,
  rowSpacingType: "margin",
  showCellVerticalBorder: !1,
  showColumnVerticalBorder: !1,
  sortingMode: "client",
  sortingOrder: ["asc", "desc", null],
  throttleRowsMs: 0,
  unstable_rowSpanning: !1,
  virtualizeColumnsWithAutoRowHeight: !1
}, Eg = {
  width: 0,
  height: 0
}, tue = {
  isReady: !1,
  root: Eg,
  viewportOuterSize: Eg,
  viewportInnerSize: Eg,
  contentSize: Eg,
  minimumSize: Eg,
  hasScrollX: !1,
  hasScrollY: !1,
  scrollbarSize: 0,
  headerHeight: 0,
  groupHeaderHeight: 0,
  headerFilterHeight: 0,
  rowWidth: 0,
  rowHeight: 0,
  columnsTotalWidth: 0,
  leftPinnedWidth: 0,
  rightPinnedWidth: 0,
  headersTotalHeight: 0,
  topContainerHeight: 0,
  bottomContainerHeight: 0
}, nue = (e, t, n) => {
  const i = tue, s = sv(n);
  return J({}, e, {
    dimensions: J({}, i, sV(t, n, s, cv(n)))
  });
}, aV = an(ho, Of, (e, t) => {
  const n = e.length;
  return n === 0 ? 0 : kg(t[n - 1] + e[n - 1].computedWidth, 1);
});
function rue(e, t) {
  const n = ci(e, "useResizeContainer"), i = w.useRef(!1), s = w.useRef(Eg), u = tt(e, cv), d = tt(e, sv), p = tt(e, aV), m = w.useRef(!0), {
    rowHeight: v,
    headerHeight: y,
    groupHeaderHeight: C,
    headerFilterHeight: S,
    headersTotalHeight: R,
    leftPinnedWidth: O,
    rightPinnedWidth: E
  } = sV(t, e, d, u), k = w.useRef(void 0), F = w.useCallback(() => ui(e.current.state), [e]), _ = w.useCallback((W) => {
    e.current.setState((B) => J({}, B, {
      dimensions: W
    })), e.current.rootElementRef.current && VA(e.current.rootElementRef.current, ui(e.current.state));
  }, [e]), L = w.useCallback(() => {
    const W = e.current.mainElementRef.current;
    if (!W)
      return;
    const B = rl(W).getComputedStyle(W), ee = {
      width: parseFloat(B.width) || 0,
      height: parseFloat(B.height) || 0
    };
    (!k.current || !UA(k.current, ee)) && (e.current.publishEvent("resize", ee), k.current = ee);
  }, [e]), M = w.useCallback(() => {
    const W = ui(e.current.state);
    if (!W.isReady)
      return 0;
    const B = gf(e);
    if (t.getRowHeight) {
      const U = YC(e), q = U.lastRowIndex - U.firstRowIndex;
      return Math.min(q - 1, B.rows.length);
    }
    const ee = Math.floor(W.viewportInnerSize.height / v);
    return Math.min(ee, B.rows.length);
  }, [e, t.getRowHeight, v]), D = w.useCallback(() => {
    var ge, de;
    if (m.current)
      return;
    const W = oue(e.current.mainElementRef.current, t.scrollbarSize), B = hv(e.current.state), ee = R + B.pinnedTopRowsTotalHeight, U = B.pinnedBottomRowsTotalHeight, Y = {
      width: p - O - E,
      height: kg(B.currentPageTotalHeight, 1)
    };
    let ne, re, X = !1, j = !1;
    if (t.autoHeight)
      j = !1, X = Math.round(p) > Math.round(s.current.width), ne = {
        width: s.current.width,
        height: ee + U + Y.height
      }, re = {
        width: Math.max(0, ne.width - (j ? W : 0)),
        height: Math.max(0, ne.height - (X ? W : 0))
      };
    else {
      ne = {
        width: s.current.width,
        height: s.current.height
      }, re = {
        width: Math.max(0, ne.width - O - E),
        height: Math.max(0, ne.height - ee - U)
      };
      const pe = Y, be = re, Ce = pe.width > be.width, Re = pe.height > be.height;
      (Ce || Re) && (j = Re, X = pe.width + (j ? W : 0) > be.width, X && (j = pe.height + W > be.height)), j && (re.width -= W), X && (re.height -= W);
    }
    const ie = Math.max(ne.width, p + (j ? W : 0)), fe = {
      width: p,
      height: ee + Y.height + U
    }, ce = {
      isReady: !0,
      root: s.current,
      viewportOuterSize: ne,
      viewportInnerSize: re,
      contentSize: Y,
      minimumSize: fe,
      hasScrollX: X,
      hasScrollY: j,
      scrollbarSize: W,
      headerHeight: y,
      groupHeaderHeight: C,
      headerFilterHeight: S,
      rowWidth: ie,
      rowHeight: v,
      columnsTotalWidth: p,
      leftPinnedWidth: O,
      rightPinnedWidth: E,
      headersTotalHeight: R,
      topContainerHeight: ee,
      bottomContainerHeight: U
    }, me = e.current.state.dimensions;
    hf(me, ce) || (_(ce), UA(ce.viewportInnerSize, me.viewportInnerSize) || e.current.publishEvent("viewportInnerSizeChange", ce.viewportInnerSize), (de = (ge = e.current).updateRenderContext) == null || de.call(ge));
  }, [e, _, t.scrollbarSize, t.autoHeight, v, y, C, S, p, R, O, E]), H = Nn(D), K = w.useMemo(() => t.resizeThrottleMs > 0 ? eue(() => {
    H(), e.current.publishEvent("debouncedResize", s.current);
  }, t.resizeThrottleMs) : void 0, [e, t.resizeThrottleMs, H]);
  w.useEffect(() => K == null ? void 0 : K.clear, [K]);
  const Q = {
    resize: L,
    getRootDimensions: F
  }, z = {
    updateDimensions: D,
    getViewportPageSize: M
  };
  _r(D, [D]), Mn(e, Q, "public"), Mn(e, z, "private");
  const I = w.useCallback((W) => {
    VA(W, ui(e.current.state));
  }, [e]), G = w.useCallback((W) => {
    if (s.current = W, W.height === 0 && !i.current && !t.autoHeight && !Q0 && (n.error(["The parent DOM element of the Data Grid has an empty height.", "Please make sure that this element has an intrinsic height.", "The grid displays with a height of 0px.", "", "More details: https://mui.com/r/x-data-grid-no-dimensions."].join(`
`)), i.current = !0), W.width === 0 && !i.current && !Q0 && (n.error(["The parent DOM element of the Data Grid has an empty width.", "Please make sure that this element has an intrinsic width.", "The grid displays with a width of 0px.", "", "More details: https://mui.com/r/x-data-grid-no-dimensions."].join(`
`)), i.current = !0), m.current || !K) {
      m.current = !1, D();
      return;
    }
    K();
  }, [D, t.autoHeight, K, n]);
  Cr(e, "rootMount", I), Cr(e, "resize", G), Cr(e, "debouncedResize", t.onResize);
}
function VA(e, t) {
  const n = (i, s) => e.style.setProperty(i, s);
  n("--DataGrid-hasScrollX", `${Number(t.hasScrollX)}`), n("--DataGrid-hasScrollY", `${Number(t.hasScrollY)}`), n("--DataGrid-scrollbarSize", `${t.scrollbarSize}px`), n("--DataGrid-rowWidth", `${t.rowWidth}px`), n("--DataGrid-columnsTotalWidth", `${t.columnsTotalWidth}px`), n("--DataGrid-leftPinnedWidth", `${t.leftPinnedWidth}px`), n("--DataGrid-rightPinnedWidth", `${t.rightPinnedWidth}px`), n("--DataGrid-headerHeight", `${t.headerHeight}px`), n("--DataGrid-headersTotalHeight", `${t.headersTotalHeight}px`), n("--DataGrid-topContainerHeight", `${t.topContainerHeight}px`), n("--DataGrid-bottomContainerHeight", `${t.bottomContainerHeight}px`), n("--height", `${t.rowHeight}px`);
}
function sV(e, t, n, i) {
  const s = vz(e.rowHeight, Jk.rowHeight, one);
  return {
    rowHeight: Math.floor(s * n),
    headerHeight: Math.floor(e.columnHeaderHeight * n),
    groupHeaderHeight: Math.floor((e.columnGroupHeaderHeight ?? e.columnHeaderHeight) * n),
    headerFilterHeight: Math.floor((e.headerFilterHeight ?? e.columnHeaderHeight) * n),
    columnsTotalWidth: aV(t),
    headersTotalHeight: GE(t, e),
    leftPinnedWidth: i.left.reduce((u, d) => u + d.computedWidth, 0),
    rightPinnedWidth: i.right.reduce((u, d) => u + d.computedWidth, 0)
  };
}
const BA = /* @__PURE__ */ new WeakMap();
function oue(e, t) {
  if (t !== void 0)
    return t;
  if (e === null)
    return 0;
  const n = BA.get(e);
  if (n !== void 0)
    return n;
  const s = ao(e).createElement("div");
  s.style.width = "99px", s.style.height = "99px", s.style.position = "absolute", s.style.overflow = "scroll", s.className = "scrollDiv", e.appendChild(s);
  const u = s.offsetWidth - s.clientWidth;
  return e.removeChild(s), BA.set(e, u), u;
}
function UA(e, t) {
  return e.width === t.width && e.height === t.height;
}
const iue = typeof globalThis.ResizeObserver < "u" ? globalThis.ResizeObserver : class {
  observe() {
  }
  unobserve() {
  }
  disconnect() {
  }
}, aue = (e, t, n) => {
  n.current.caches.rowsMeta = {
    heights: /* @__PURE__ */ new Map()
  };
  const i = nM(n.current.state), s = BC(n), u = GC(n.current.state), d = Math.min(u.enabled ? u.paginationModel.pageSize : s, s);
  return J({}, e, {
    rowsMeta: {
      currentPageTotalHeight: d * i,
      positions: Array.from({
        length: d
      }, (p, m) => m * i),
      pinnedTopRowsTotalHeight: 0,
      pinnedBottomRowsTotalHeight: 0
    }
  });
}, sue = (e, t) => {
  const {
    getRowHeight: n,
    getRowSpacing: i,
    getEstimatedRowHeight: s
  } = t, u = e.current.caches.rowsMeta.heights, d = w.useRef(-1), p = w.useRef(!1), m = w.useRef(!1), v = tt(e, sv), y = vM(e), C = tt(e, lv), S = tt(e, nM), R = (I) => {
    let G = u.get(I);
    return G === void 0 && (G = {
      content: S,
      spacingTop: 0,
      spacingBottom: 0,
      detail: 0,
      autoHeight: !1,
      needsFirstMeasurement: !0
    }, u.set(I, G)), G;
  }, O = w.useCallback((I) => {
    const G = ui(e.current.state).rowHeight, W = e.current.getRowHeightEntry(I.id);
    if (!n)
      W.content = G, W.needsFirstMeasurement = !1;
    else {
      const B = n(J({}, I, {
        densityFactor: v
      }));
      if (B === "auto") {
        if (W.needsFirstMeasurement) {
          const ee = s ? s(J({}, I, {
            densityFactor: v
          })) : G;
          W.content = ee ?? G;
        }
        p.current = !0, W.autoHeight = !0;
      } else
        W.content = vz(B, G, ine), W.needsFirstMeasurement = !1, W.autoHeight = !1;
    }
    if (i) {
      const B = e.current.getRowIndexRelativeToVisibleRows(I.id), ee = i(J({}, I, {
        isFirstVisible: B === 0,
        isLastVisible: B === y.rows.length - 1,
        indexRelativeToCurrentPage: B
      }));
      W.spacingTop = ee.top ?? 0, W.spacingBottom = ee.bottom ?? 0;
    } else
      W.spacingTop = 0, W.spacingBottom = 0;
    return e.current.unstable_applyPipeProcessors("rowHeight", W, I), W;
  }, [e, y.rows, n, s, S, i, v]), E = w.useCallback(() => {
    p.current = !1;
    const I = C.top.reduce((q, Y) => {
      const ne = O(Y);
      return q + ne.content + ne.spacingTop + ne.spacingBottom + ne.detail;
    }, 0), G = C.bottom.reduce((q, Y) => {
      const ne = O(Y);
      return q + ne.content + ne.spacingTop + ne.spacingBottom + ne.detail;
    }, 0), W = [], B = y.rows.reduce((q, Y) => {
      W.push(q);
      const ne = O(Y), re = ne.content + ne.spacingTop + ne.spacingBottom + ne.detail;
      return q + re;
    }, 0);
    p.current || (d.current = 1 / 0);
    const ee = I !== e.current.state.rowsMeta.pinnedTopRowsTotalHeight || G !== e.current.state.rowsMeta.pinnedBottomRowsTotalHeight || B !== e.current.state.rowsMeta.currentPageTotalHeight, U = {
      currentPageTotalHeight: B,
      positions: W,
      pinnedTopRowsTotalHeight: I,
      pinnedBottomRowsTotalHeight: G
    };
    e.current.setState((q) => J({}, q, {
      rowsMeta: U
    })), ee && e.current.updateDimensions(), m.current = !0;
  }, [e, C, y.rows, O]), k = (I) => {
    var G;
    return ((G = u.get(I)) == null ? void 0 : G.content) ?? S;
  }, F = (I, G) => {
    const W = e.current.getRowHeightEntry(I), B = W.content !== G;
    W.needsFirstMeasurement = !1, W.content = G, m.current && (m.current = !B);
  }, _ = (I) => {
    var G;
    return ((G = u.get(I)) == null ? void 0 : G.autoHeight) ?? !1;
  }, L = () => d.current, M = (I) => {
    p.current && I > d.current && (d.current = I);
  }, D = () => {
    u.clear(), E();
  }, H = sl(() => new iue((I) => {
    var G;
    for (let W = 0; W < I.length; W += 1) {
      const B = I[W], ee = B.borderBoxSize && B.borderBoxSize.length > 0 ? B.borderBoxSize[0].blockSize : B.contentRect.height, U = B.target.__mui_id;
      if (((G = nH(e)) == null ? void 0 : G.id) === U && ee === 0)
        return;
      e.current.unstable_storeRowHeightMeasurement(U, ee);
    }
    m.current || requestAnimationFrame(() => {
      e.current.requestPipeProcessorsApplication("rowHeight");
    });
  })).current, K = (I, G) => (I.__mui_id = G, H.observe(I), () => H.unobserve(I));
  TM(e, "rowHeight", E), _r(() => {
    E();
  }, [E]);
  const Q = {
    unstable_getRowHeight: k,
    unstable_setLastMeasuredRowIndex: M,
    unstable_storeRowHeightMeasurement: F,
    resetRowHeights: D
  }, z = {
    hydrateRowsMeta: E,
    observeRowHeight: K,
    rowHasAutoHeight: _,
    getRowHeightEntry: R,
    getLastMeasuredRowIndex: L
  };
  Mn(e, Q, "public"), Mn(e, z, "private");
}, lue = (e) => {
  const t = w.useCallback((s = {}) => e.current.unstable_applyPipeProcessors("exportState", {}, s), [e]), n = w.useCallback((s) => {
    e.current.unstable_applyPipeProcessors("restoreState", {
      callbacks: []
    }, {
      stateToRestore: s
    }).callbacks.forEach((d) => {
      d();
    }), e.current.forceUpdate();
  }, [e]);
  Mn(e, {
    exportState: t,
    restoreState: n
  }, "public");
}, uue = (e) => {
  const t = w.useRef({}), n = (p, m) => {
    var v;
    return (v = t.current[p]) == null ? void 0 : v[m];
  }, i = () => {
    t.current = {};
  }, s = w.useCallback(({
    rowId: p,
    minFirstColumn: m,
    maxLastColumn: v,
    columns: y
  }) => {
    for (let C = m; C < v; C += 1) {
      const S = cue({
        apiRef: e,
        lookup: t.current,
        columnIndex: C,
        rowId: p,
        minFirstColumnIndex: m,
        maxLastColumnIndex: v,
        columns: y
      });
      S.colSpan > 1 && (C += S.colSpan - 1);
    }
  }, [e]), u = {
    unstable_getCellColSpanInfo: n
  }, d = {
    resetColSpan: i,
    calculateColSpan: s
  };
  Mn(e, u, "public"), Mn(e, d, "private"), Mt(e, "columnOrderChange", i);
};
function cue(e) {
  const {
    apiRef: t,
    lookup: n,
    columnIndex: i,
    rowId: s,
    minFirstColumnIndex: u,
    maxLastColumnIndex: d,
    columns: p
  } = e, m = p.length, v = p[i], y = t.current.getRow(s), C = t.current.getRowValue(y, v), S = typeof v.colSpan == "function" ? v.colSpan(C, y, v, t) : v.colSpan;
  if (!S || S === 1)
    return XO(n, s, i, {
      spannedByColSpan: !1,
      cellProps: {
        colSpan: 1,
        width: v.computedWidth
      }
    }), {
      colSpan: 1
    };
  let R = v.computedWidth;
  for (let O = 1; O < S; O += 1) {
    const E = i + O;
    if (E >= u && E < d) {
      const k = p[E];
      R += k.computedWidth, XO(n, s, i + O, {
        spannedByColSpan: !0,
        rightVisibleCellIndex: Math.min(i + S, m - 1),
        leftVisibleCellIndex: i
      });
    }
    XO(n, s, i, {
      spannedByColSpan: !1,
      cellProps: {
        colSpan: S,
        width: R
      }
    });
  }
  return {
    colSpan: S
  };
}
function XO(e, t, n, i) {
  e[t] || (e[t] = {}), e[t][n] = i;
}
const lV = (e, t, n) => {
  if (oz(e)) {
    if (n[e.field] !== void 0)
      throw new Error(["MUI X: columnGroupingModel contains duplicated field", `column field ${e.field} occurs two times in the grouping model:`, `- ${n[e.field].join(" > ")}`, `- ${t.join(" > ")}`].join(`
`));
    n[e.field] = t;
    return;
  }
  const {
    groupId: i,
    children: s
  } = e;
  s.forEach((u) => {
    lV(u, [...t, i], n);
  });
}, Zk = (e) => {
  if (!e)
    return {};
  const t = {};
  return e.forEach((n) => {
    lV(n, [], t);
  }), t;
}, eP = (e, t, n) => {
  const i = (m) => t[m] ?? [], s = [], u = Math.max(...e.map((m) => i(m).length)), d = (m, v, y) => hf(i(m).slice(0, y + 1), i(v).slice(0, y + 1)), p = (m, v) => !!(n != null && n.left && n.left.includes(m) && !n.left.includes(v) || n != null && n.right && !n.right.includes(m) && n.right.includes(v));
  for (let m = 0; m < u; m += 1) {
    const v = e.reduce((y, C) => {
      const S = i(C)[m] ?? null;
      if (y.length === 0)
        return [{
          columnFields: [C],
          groupId: S
        }];
      const R = y[y.length - 1], O = R.columnFields[R.columnFields.length - 1];
      return R.groupId !== S || !d(O, C, m) || // Fix for https://github.com/mui/mui-x/issues/7041
      p(O, C) ? [...y, {
        columnFields: [C],
        groupId: S
      }] : [...y.slice(0, y.length - 1), {
        columnFields: [...R.columnFields, C],
        groupId: S
      }];
    }, []);
    s.push(v);
  }
  return s;
}, due = ["groupId", "children"], RM = (e) => {
  let t = {};
  return e.forEach((n) => {
    if (oz(n))
      return;
    const {
      groupId: i,
      children: s
    } = n, u = Xt(n, due);
    if (!i)
      throw new Error("MUI X: An element of the columnGroupingModel does not have either `field` or `groupId`.");
    process.env.NODE_ENV !== "production" && (s || console.warn(`MUI X: group groupId=${i} has no children.`));
    const d = J({}, u, {
      groupId: i
    }), p = RM(s);
    if (p[i] !== void 0 || t[i] !== void 0)
      throw new Error(`MUI X: The groupId ${i} is used multiple times in the columnGroupingModel.`);
    t = J({}, t, p, {
      [i]: d
    });
  }), J({}, t);
}, fue = (e, t, n) => {
  if (!t.columnGroupingModel)
    return e;
  const i = Kc(n), s = uv(n), u = RM(t.columnGroupingModel ?? []), d = Zk(t.columnGroupingModel ?? []), p = eP(i, d, n.current.state.pinnedColumns ?? {}), m = s.length === 0 ? 0 : Math.max(...s.map((v) => {
    var y;
    return ((y = d[v]) == null ? void 0 : y.length) ?? 0;
  }));
  return J({}, e, {
    columnGrouping: {
      lookup: u,
      unwrappedGroupingModel: d,
      headerStructure: p,
      maxDepth: m
    }
  });
}, pue = (e, t) => {
  const n = w.useCallback((p) => Wz(e)[p] ?? [], [e]), i = w.useCallback(() => qz(e), [e]);
  Mn(e, {
    getColumnGroupPath: n,
    getAllGroupDetails: i
  }, "public");
  const u = w.useCallback(() => {
    const p = Zk(t.columnGroupingModel ?? []);
    e.current.setState((m) => {
      var S;
      const v = ((S = m.columns) == null ? void 0 : S.orderedFields) ?? [], y = m.pinnedColumns ?? {}, C = eP(v, p, y);
      return J({}, m, {
        columnGrouping: J({}, m.columnGrouping, {
          headerStructure: C
        })
      });
    });
  }, [e, t.columnGroupingModel]), d = w.useCallback((p) => {
    var E, k;
    const m = ((k = (E = e.current).getPinnedColumns) == null ? void 0 : k.call(E)) ?? {}, v = Kc(e), y = uv(e), C = RM(p ?? []), S = Zk(p ?? []), R = eP(v, S, m), O = y.length === 0 ? 0 : Math.max(...y.map((F) => {
      var _;
      return ((_ = S[F]) == null ? void 0 : _.length) ?? 0;
    }));
    e.current.setState((F) => J({}, F, {
      columnGrouping: {
        lookup: C,
        unwrappedGroupingModel: S,
        headerStructure: R,
        maxDepth: O
      }
    }));
  }, [e]);
  Mt(e, "columnIndexChange", u), Mt(e, "columnsChange", () => {
    d(t.columnGroupingModel);
  }), Mt(e, "columnVisibilityModelChange", () => {
    d(t.columnGroupingModel);
  }), w.useEffect(() => {
    d(t.columnGroupingModel);
  }, [d, t.columnGroupingModel]);
};
function hue() {
  let e, t;
  const n = new Promise((i, s) => {
    e = i, t = s;
  });
  return n.resolve = e, n.reject = t, n;
}
function GA(e, t) {
  if (t !== void 0 && e.changedTouches) {
    for (let n = 0; n < e.changedTouches.length; n += 1) {
      const i = e.changedTouches[n];
      if (i.identifier === t)
        return {
          x: i.clientX,
          y: i.clientY
        };
    }
    return !1;
  }
  return {
    x: e.clientX,
    y: e.clientY
  };
}
function WA(e, t, n, i) {
  let s = e;
  return i === "Right" ? s += t - n.left : s += n.right - t, s;
}
function mue(e, t, n) {
  return n === "Left" ? e - t.left : t.right - e;
}
function gue(e) {
  return e === "Right" ? "Left" : "Right";
}
function vue(e, t) {
  const n = e.classList.contains(ae["columnSeparator--sideRight"]) ? "Right" : "Left";
  return t ? gue(n) : n;
}
function qA(e) {
  e.preventDefault(), e.stopImmediatePropagation();
}
function yue(e) {
  const t = w.useRef(void 0), n = () => eH(e), i = tt(e, n);
  return w.useEffect(() => {
    t.current && i === !1 && (t.current.resolve(), t.current = void 0);
  }), () => {
    if (!t.current) {
      if (n() === !1)
        return Promise.resolve();
      t.current = hue();
    }
    return t.current;
  };
}
function bue(e, t) {
  if (e.length < 4)
    return e;
  const n = e.slice();
  n.sort((p, m) => p - m);
  const i = n[Math.floor(n.length * 0.25)], s = n[Math.floor(n.length * 0.75) - 1], u = s - i, d = u < 5 ? 5 : u * t;
  return n.filter((p) => p > i - d && p < s + d);
}
function Cue(e, t, n) {
  const i = {}, s = e.current.rootElementRef.current;
  return s.classList.add(ae.autosizing), n.forEach((u) => {
    const p = jie(e.current, u.field).map((O) => O.getBoundingClientRect().width ?? 0), m = t.includeOutliers ? p : bue(p, t.outliersFactor);
    if (t.includeHeaders) {
      const O = $ie(e.current, u.field);
      if (O) {
        const E = O.querySelector(`.${ae.columnHeaderTitle}`), k = O.querySelector(`.${ae.columnHeaderTitleContainerContent}`), F = O.querySelector(`.${ae.iconButtonContainer}`), _ = O.querySelector(`.${ae.menuIcon}`), L = E ?? k, M = window.getComputedStyle(O, null), D = parseInt(M.paddingLeft, 10) + parseInt(M.paddingRight, 10), K = L.scrollWidth + 1 + D + ((F == null ? void 0 : F.clientWidth) ?? 0) + ((_ == null ? void 0 : _.clientWidth) ?? 0);
        m.push(K);
      }
    }
    const v = u.minWidth !== -1 / 0 && u.minWidth !== void 0, y = u.maxWidth !== 1 / 0 && u.maxWidth !== void 0, C = v ? u.minWidth : 0, S = y ? u.maxWidth : 1 / 0, R = m.length === 0 ? 0 : Math.max(...m);
    i[u.field] = vs(R, C, S);
  }), s.classList.remove(ae.autosizing), i;
}
const Sue = (e) => J({}, e, {
  columnResize: {
    resizingColumnField: ""
  }
});
function wue() {
  return {
    colDef: void 0,
    initialColWidth: 0,
    initialTotalWidth: 0,
    previousMouseClickEvent: void 0,
    columnHeaderElement: void 0,
    headerFilterElement: void 0,
    groupHeaderElements: [],
    cellElements: [],
    leftPinnedCellsAfter: [],
    rightPinnedCellsBefore: [],
    fillerLeft: void 0,
    fillerRight: void 0,
    leftPinnedHeadersAfter: [],
    rightPinnedHeadersBefore: []
  };
}
const xue = (e, t) => {
  const n = zi(), i = ci(e, "useGridColumnResize"), s = sl(wue).current, u = w.useRef(null), d = w.useRef(null), p = ps(), m = w.useRef(void 0), v = (z) => {
    var U, q;
    i.debug(`Updating width to ${z} for col ${s.colDef.field}`);
    const I = s.columnHeaderElement.offsetWidth, G = z - I, W = z - s.initialColWidth;
    if (W > 0) {
      const Y = s.initialTotalWidth + W;
      (q = (U = e.current.rootElementRef) == null ? void 0 : U.current) == null || q.style.setProperty("--DataGrid-rowWidth", `${Y}px`);
    }
    s.colDef.computedWidth = z, s.colDef.width = z, s.colDef.flex = 0, s.columnHeaderElement.style.width = `${z}px`;
    const B = s.headerFilterElement;
    B && (B.style.width = `${z}px`), s.groupHeaderElements.forEach((Y) => {
      const ne = Y;
      let re;
      ne.getAttribute("aria-colspan") === "1" ? re = `${z}px` : re = `${ne.offsetWidth + G}px`, ne.style.width = re;
    }), s.cellElements.forEach((Y) => {
      const ne = Y;
      let re;
      ne.getAttribute("aria-colspan") === "1" ? re = `${z}px` : re = `${ne.offsetWidth + G}px`, ne.style.setProperty("--width", re);
    });
    const ee = e.current.unstable_applyPipeProcessors("isColumnPinned", !1, s.colDef.field);
    ee === nf.LEFT && (Cg(s.fillerLeft, "width", G), s.leftPinnedCellsAfter.forEach((Y) => {
      Cg(Y, "left", G);
    }), s.leftPinnedHeadersAfter.forEach((Y) => {
      Cg(Y, "left", G);
    })), ee === nf.RIGHT && (Cg(s.fillerRight, "width", G), s.rightPinnedCellsBefore.forEach((Y) => {
      Cg(Y, "right", G);
    }), s.rightPinnedHeadersBefore.forEach((Y) => {
      Cg(Y, "right", G);
    }));
  }, y = (z) => {
    if (F(), s.previousMouseClickEvent) {
      const I = s.previousMouseClickEvent, G = I.timeStamp, W = I.clientX, B = I.clientY;
      if (z.timeStamp - G < 300 && z.clientX === W && z.clientY === B) {
        s.previousMouseClickEvent = void 0, e.current.publishEvent("columnResizeStop", null, z);
        return;
      }
    }
    if (s.colDef) {
      e.current.setColumnWidth(s.colDef.field, s.colDef.width), i.debug(`Updating col ${s.colDef.field} with new width: ${s.colDef.width}`);
      const I = Uu(e.current.state);
      s.groupHeaderElements.forEach((G) => {
        const W = Iie(G), B = G, U = `${W.reduce((q, Y) => I.columnVisibilityModel[Y] !== !1 ? q + I.lookup[Y].computedWidth : q, 0)}px`;
        B.style.width = U;
      });
    }
    p.start(0, () => {
      e.current.publishEvent("columnResizeStop", null, z);
    });
  }, C = (z, I, G) => {
    var U;
    const W = e.current.rootElementRef.current;
    s.initialColWidth = z.computedWidth, s.initialTotalWidth = e.current.getRootDimensions().rowWidth, s.colDef = z, s.columnHeaderElement = Mie(e.current.columnHeadersContainerRef.current, z.field);
    const B = W.querySelector(`.${ae.headerFilterRow} [data-field="${td(z.field)}"]`);
    B && (s.headerFilterElement = B), s.groupHeaderElements = Die((U = e.current.columnHeadersContainerRef) == null ? void 0 : U.current, z.field), s.cellElements = Nie(s.columnHeaderElement, e.current), s.fillerLeft = wA(e.current, n ? "filler--pinnedRight" : "filler--pinnedLeft"), s.fillerRight = wA(e.current, n ? "filler--pinnedLeft" : "filler--pinnedRight");
    const ee = e.current.unstable_applyPipeProcessors("isColumnPinned", !1, s.colDef.field);
    s.leftPinnedCellsAfter = ee !== nf.LEFT ? [] : Lie(e.current, s.columnHeaderElement, n), s.rightPinnedCellsBefore = ee !== nf.RIGHT ? [] : Fie(e.current, s.columnHeaderElement, n), s.leftPinnedHeadersAfter = ee !== nf.LEFT ? [] : _ie(e.current, s.columnHeaderElement, n), s.rightPinnedHeadersBefore = ee !== nf.RIGHT ? [] : Aie(e.current, s.columnHeaderElement, n), d.current = vue(I, n), u.current = mue(G, s.columnHeaderElement.getBoundingClientRect(), d.current);
  }, S = Nn(y), R = Nn((z) => {
    if (z.buttons === 0) {
      S(z);
      return;
    }
    let I = WA(u.current, z.clientX, s.columnHeaderElement.getBoundingClientRect(), d.current);
    I = vs(I, s.colDef.minWidth, s.colDef.maxWidth), v(I);
    const G = {
      element: s.columnHeaderElement,
      colDef: s.colDef,
      width: I
    };
    e.current.publishEvent("columnResize", G, z);
  }), O = Nn((z) => {
    GA(z, m.current) && y(z);
  }), E = Nn((z) => {
    const I = GA(z, m.current);
    if (!I)
      return;
    if (z.type === "mousemove" && z.buttons === 0) {
      O(z);
      return;
    }
    let G = WA(u.current, I.x, s.columnHeaderElement.getBoundingClientRect(), d.current);
    G = vs(G, s.colDef.minWidth, s.colDef.maxWidth), v(G);
    const W = {
      element: s.columnHeaderElement,
      colDef: s.colDef,
      width: G
    };
    e.current.publishEvent("columnResize", W, z);
  }), k = Nn((z) => {
    const I = J0(z.target, ae["columnSeparator--resizable"]);
    if (!I)
      return;
    const G = z.changedTouches[0];
    G != null && (m.current = G.identifier);
    const W = J0(z.target, ae.columnHeader), B = Pie(W), ee = e.current.getColumn(B);
    i.debug(`Start Resize on col ${ee.field}`), e.current.publishEvent("columnResizeStart", {
      field: B
    }, z), C(ee, I, G.clientX);
    const U = ao(z.currentTarget);
    U.addEventListener("touchmove", E), U.addEventListener("touchend", O);
  }), F = w.useCallback(() => {
    const z = ao(e.current.rootElementRef.current);
    z.body.style.removeProperty("cursor"), z.removeEventListener("mousemove", R), z.removeEventListener("mouseup", S), z.removeEventListener("touchmove", E), z.removeEventListener("touchend", O), setTimeout(() => {
      z.removeEventListener("click", qA, !0);
    }, 100), s.columnHeaderElement && (s.columnHeaderElement.style.pointerEvents = "unset");
  }, [e, s, R, S, E, O]), _ = w.useCallback(({
    field: z
  }) => {
    e.current.setState((I) => J({}, I, {
      columnResize: J({}, I.columnResize, {
        resizingColumnField: z
      })
    })), e.current.forceUpdate();
  }, [e]), L = w.useCallback(() => {
    e.current.setState((z) => J({}, z, {
      columnResize: J({}, z.columnResize, {
        resizingColumnField: ""
      })
    })), e.current.forceUpdate();
  }, [e]), M = Nn(({
    colDef: z
  }, I) => {
    if (I.button !== 0 || !I.currentTarget.classList.contains(ae["columnSeparator--resizable"]))
      return;
    I.preventDefault(), i.debug(`Start Resize on col ${z.field}`), e.current.publishEvent("columnResizeStart", {
      field: z.field
    }, I), C(z, I.currentTarget, I.clientX);
    const G = ao(e.current.rootElementRef.current);
    G.body.style.cursor = "col-resize", s.previousMouseClickEvent = I.nativeEvent, G.addEventListener("mousemove", R), G.addEventListener("mouseup", S), G.addEventListener("click", qA, !0);
  }), D = Nn((z, I) => {
    if (t.disableAutosize || I.button !== 0)
      return;
    const G = e.current.state.columns.lookup[z.field];
    G.resizable !== !1 && e.current.autosizeColumns(J({}, t.autosizeOptions, {
      disableColumnVirtualization: !1,
      columns: [G.field]
    }));
  }), H = yue(e), K = w.useRef(!1), Q = w.useCallback(async (z) => {
    var ee;
    if (!((ee = e.current.rootElementRef) == null ? void 0 : ee.current) || K.current)
      return;
    K.current = !0;
    const G = Uu(e.current.state), W = J({}, Toe, z, {
      columns: (z == null ? void 0 : z.columns) ?? G.orderedFields
    });
    W.columns = W.columns.filter((U) => G.columnVisibilityModel[U] !== !1);
    const B = W.columns.map((U) => e.current.state.columns.lookup[U]);
    try {
      !t.disableVirtualization && W.disableColumnVirtualization && (e.current.unstable_setColumnVirtualization(!1), await H());
      const U = Cue(e, W, B), q = B.map((Y) => J({}, Y, {
        width: U[Y.field],
        computedWidth: U[Y.field],
        flex: 0
      }));
      if (W.expand) {
        const ne = G.orderedFields.map((ie) => G.lookup[ie]).filter((ie) => G.columnVisibilityModel[ie.field] !== !1).reduce((ie, fe) => ie + (U[fe.field] ?? fe.computedWidth ?? fe.width), 0), j = e.current.getRootDimensions().viewportInnerSize.width - ne;
        if (j > 0) {
          const ie = j / (q.length || 1);
          q.forEach((fe) => {
            fe.width += ie, fe.computedWidth += ie;
          });
        }
      }
      e.current.updateColumns(q), q.forEach((Y, ne) => {
        if (Y.width !== B[ne].width) {
          const re = Y.width;
          e.current.publishEvent("columnWidthChange", {
            element: e.current.getColumnHeaderElement(Y.field),
            colDef: Y,
            width: re
          });
        }
      });
    } finally {
      t.disableVirtualization || e.current.unstable_setColumnVirtualization(!0), K.current = !1;
    }
  }, [e, H, t.disableVirtualization]);
  w.useEffect(() => F, [F]), bP(() => {
    t.autosizeOnMount && Promise.resolve().then(() => {
      e.current.autosizeColumns(t.autosizeOptions);
    });
  }), Iz(e, () => {
    var z;
    return (z = e.current.columnHeadersContainerRef) == null ? void 0 : z.current;
  }, "touchstart", k, {
    passive: !0
  }), Mn(e, {
    autosizeColumns: Q
  }, "public"), Mt(e, "columnResizeStop", L), Mt(e, "columnResizeStart", _), Mt(e, "columnSeparatorMouseDown", M), Mt(e, "columnSeparatorDoubleClick", D), Cr(e, "columnResize", t.onColumnResize), Cr(e, "columnWidthChange", t.onColumnWidthChange);
};
function Cg(e, t, n) {
  e && (e.style[t] = `${parseInt(e.style[t], 10) + n}px`);
}
function Eue(e, t) {
  return e.firstRowIndex >= t.firstRowIndex && e.lastRowIndex <= t.lastRowIndex ? null : e.firstRowIndex >= t.firstRowIndex && e.lastRowIndex > t.lastRowIndex ? {
    firstRowIndex: t.lastRowIndex,
    lastRowIndex: e.lastRowIndex
  } : e.firstRowIndex < t.firstRowIndex && e.lastRowIndex <= t.lastRowIndex ? {
    firstRowIndex: e.firstRowIndex,
    lastRowIndex: t.firstRowIndex - 1
  } : e;
}
function KA(e) {
  return e.firstRowIndex !== 0 || e.lastRowIndex !== 0;
}
const QO = (e, t, n) => {
  if (!e)
    return null;
  let i = e[t.field];
  const s = t.rowSpanValueGetter ?? t.valueGetter;
  return s && (i = s(i, e, t, n)), i;
}, Pg = {
  spannedCells: {},
  hiddenCells: {},
  hiddenCellOriginMap: {}
}, rE = {
  firstRowIndex: 0,
  lastRowIndex: 0
}, Tue = /* @__PURE__ */ new Set([qs, "__reorder__", zE]), YA = 20, uV = (e, t, n, i, s, u, d) => {
  const p = u ? {} : J({}, e.current.state.rowSpanning.spannedCells), m = u ? {} : J({}, e.current.state.rowSpanning.hiddenCells), v = u ? {} : J({}, e.current.state.rowSpanning.hiddenCellOriginMap);
  return u && (d = rE), t.forEach((y) => {
    var C;
    if (!Tue.has(y.field)) {
      for (let S = s.firstRowIndex; S < s.lastRowIndex; S += 1) {
        const R = n[S];
        if ((C = m[R.id]) != null && C[y.field])
          continue;
        const O = QO(R.model, y, e);
        if (O == null)
          continue;
        let E = R.id, k = S, F = 0;
        const _ = [];
        if (S === s.firstRowIndex) {
          let M = S - 1, D = n[M];
          for (; M >= i.firstRowIndex && D && QO(D.model, y, e) === O; ) {
            const H = n[M + 1];
            m[H.id] ? m[H.id][y.field] = !0 : m[H.id] = {
              [y.field]: !0
            }, _.push(S), F += 1, E = D.id, k = M, M -= 1, D = n[M];
          }
        }
        _.forEach((M) => {
          v[M] ? v[M][y.field] = k : v[M] = {
            [y.field]: k
          };
        });
        let L = S + 1;
        for (; L <= i.lastRowIndex && n[L] && QO(n[L].model, y, e) === O; ) {
          const M = n[L];
          m[M.id] ? m[M.id][y.field] = !0 : m[M.id] = {
            [y.field]: !0
          }, v[L] ? v[L][y.field] = k : v[L] = {
            [y.field]: k
          }, L += 1, F += 1;
        }
        F > 0 && (p[E] ? p[E][y.field] = F + 1 : p[E] = {
          [y.field]: F + 1
        });
      }
      d = {
        firstRowIndex: Math.min(d.firstRowIndex, s.firstRowIndex),
        lastRowIndex: Math.max(d.lastRowIndex, s.lastRowIndex)
      };
    }
  }), {
    spannedCells: p,
    hiddenCells: m,
    hiddenCellOriginMap: v,
    processedRange: d
  };
}, cV = (e, t) => {
  const n = Bb(t).length;
  if (e.pagination) {
    const i = _z(t);
    let s = YA;
    return i > 0 && (s = i - 1), {
      firstRowIndex: 0,
      lastRowIndex: Math.min(s, n)
    };
  }
  return {
    firstRowIndex: 0,
    lastRowIndex: Math.min(YA, n)
  };
}, Rue = (e, t, n) => {
  var O;
  if (!t.unstable_rowSpanning)
    return J({}, e, {
      rowSpanning: Pg
    });
  const i = e.rows.dataRowIds || [], s = e.columns.orderedFields || [], u = e.rows.dataRowIdToModelLookup, d = e.columns.lookup, p = !!e.filter.filterModel.items.length || !!((O = e.filter.filterModel.quickFilterValues) != null && O.length);
  if (!i.length || !s.length || !u || !d || p)
    return J({}, e, {
      rowSpanning: Pg
    });
  const m = cV(t, n), v = i.map((E) => ({
    id: E,
    model: u[E]
  })), y = s.map((E) => d[E]), {
    spannedCells: C,
    hiddenCells: S,
    hiddenCellOriginMap: R
  } = uV(n, y, v, m, m, !0, rE);
  return J({}, e, {
    rowSpanning: {
      spannedCells: C,
      hiddenCells: S,
      hiddenCellOriginMap: R
    }
  });
}, Oue = (e, t) => {
  const n = sl(() => e.current.state.rowSpanning !== Pg ? cV(t, e) : rE), i = w.useCallback((u, d = !1) => {
    const {
      range: p,
      rows: m
    } = gf(e, {
      pagination: t.pagination,
      paginationMode: t.paginationMode
    });
    if (p === null || !KA(u))
      return;
    d && (n.current = rE);
    const v = Eue({
      firstRowIndex: u.firstRowIndex,
      lastRowIndex: Math.min(u.lastRowIndex, p.lastRowIndex + 1)
    }, n.current);
    if (v === null)
      return;
    const y = ho(e), {
      spannedCells: C,
      hiddenCells: S,
      hiddenCellOriginMap: R,
      processedRange: O
    } = uV(e, y, m, p, v, d, n.current);
    n.current = O;
    const E = Object.keys(C).length, k = Object.keys(S).length, F = Object.keys(e.current.state.rowSpanning.spannedCells).length, _ = Object.keys(e.current.state.rowSpanning.hiddenCells).length;
    !(d || E !== F || k !== _) || E === 0 && F === 0 || e.current.setState((D) => J({}, D, {
      rowSpanning: {
        spannedCells: C,
        hiddenCells: S,
        hiddenCellOriginMap: R
      }
    }));
  }, [e, n, t.pagination, t.paginationMode]), s = w.useCallback(() => {
    const u = YC(e);
    KA(u) && i(u, !0);
  }, [e, i]);
  Mt(e, "renderedRowsIntervalChange", Yp(t.unstable_rowSpanning, i)), Mt(e, "sortedRowsSet", Yp(t.unstable_rowSpanning, s)), Mt(e, "paginationModelChange", Yp(t.unstable_rowSpanning, s)), Mt(e, "filteredRowsSet", Yp(t.unstable_rowSpanning, s)), Mt(e, "columnsChange", Yp(t.unstable_rowSpanning, s)), w.useEffect(() => {
    t.unstable_rowSpanning ? e.current.state.rowSpanning === Pg && s() : e.current.state.rowSpanning !== Pg && e.current.setState((u) => J({}, u, {
      rowSpanning: Pg
    }));
  }, [e, s, t.unstable_rowSpanning]);
}, kue = (e, t, n) => J({}, e, {
  listViewColumn: t.unstable_listColumn ? J({}, t.unstable_listColumn, {
    computedWidth: tP(n)
  }) : void 0
});
function Pue(e, t) {
  const n = () => {
    e.current.setState((u) => u.listViewColumn ? J({}, u, {
      listViewColumn: J({}, u.listViewColumn, {
        computedWidth: tP(e)
      })
    }) : u);
  }, i = w.useRef(null);
  Mt(e, "viewportInnerSizeChange", (u) => {
    i.current !== u.width && (i.current = u.width, n());
  }), Mt(e, "columnVisibilityModelChange", n), _r(() => {
    const u = t.unstable_listColumn;
    u && e.current.setState((d) => J({}, d, {
      listViewColumn: J({}, u, {
        computedWidth: tP(e)
      })
    }));
  }, [e, t.unstable_listColumn]), w.useEffect(() => {
    t.unstable_listView && !t.unstable_listColumn && tl(["MUI X: The `unstable_listColumn` prop must be set if `unstable_listView` is enabled.", 'To fix, pass a column definition to the `unstable_listColumn` prop, e.g. `{ field: "example", renderCell: (params) => <div>{params.row.id}</div> }`.', "For more details, see https://mui.com/x/react-data-grid/list-view/"]);
  }, [t.unstable_listView, t.unstable_listColumn]);
}
function tP(e) {
  return ui(e.current.state).viewportInnerSize.width;
}
const Mue = (e, t) => {
  const n = Jse(e, t);
  return Yle(n, t), Ule(n), ai(Xse, n, t), ai(Wle, n, t), ai(ale, n, t), ai(jle, n, t), ai(Ole, n, t), ai(Ale, n, t), ai(Cle, n, t), ai(Xle, n, t), ai(Ple, n, t), ai(gle, n, t), ai(Rue, n, t), ai(lle, n, t), ai(Sue, n, t), ai(ole, n, t), ai(fue, n, t), ai(jre, n, t), ai(nue, n, t), ai(aue, n, t), ai(kue, n, t), Ele(n, t), qle(n, t), sle(n, t), zle(n, t), Oue(n, t), Gle(n, t), uue(n), pue(n, t), $le(n, t), Sle(n, t), Mle(n, t), ble(n, t), Qle(n, t), ule(n, t), xue(n, t), kle(n, t), sue(n, t), Jle(n, t), ile(n), dle(n, t), mle(n, t), rle(n, t), rue(n, t), Zle(n, t), lue(n), zre(n, t), Pue(n, t), n;
}, Iue = (e) => {
  const {
    classes: t,
    headerAlign: n,
    isDragging: i,
    isLastColumn: s,
    showLeftBorder: u,
    showRightBorder: d,
    groupId: p,
    pinnedPosition: m
  } = e, v = {
    root: ["columnHeader", n === "left" && "columnHeader--alignLeft", n === "center" && "columnHeader--alignCenter", n === "right" && "columnHeader--alignRight", i && "columnHeader--moving", d && "columnHeader--withRightBorder", u && "columnHeader--withLeftBorder", "withBorderColor", p === null ? "columnHeader--emptyGroup" : "columnHeader--filledGroup", m === jn.LEFT && "columnHeader--pinnedLeft", m === jn.RIGHT && "columnHeader--pinnedRight", s && "columnHeader--last"],
    draggableContainer: ["columnHeaderDraggableContainer"],
    titleContainer: ["columnHeaderTitleContainer", "withBorderColor"],
    titleContainerContent: ["columnHeaderTitleContainerContent"]
  };
  return yt(v, Gn, t);
};
function Due(e) {
  var ne;
  const {
    groupId: t,
    width: n,
    depth: i,
    maxDepth: s,
    fields: u,
    height: d,
    colIndex: p,
    hasFocus: m,
    tabIndex: v,
    isLastColumn: y,
    pinnedPosition: C,
    pinnedOffset: S
  } = e, R = Vt(), O = zi(), E = w.useRef(null), k = In(), F = tt(k, qz), _ = t ? F[t] : {}, {
    headerName: L = t ?? "",
    description: M = "",
    headerAlign: D = void 0
  } = _;
  let H;
  const K = t && ((ne = F[t]) == null ? void 0 : ne.renderHeaderGroup), Q = w.useMemo(() => ({
    groupId: t,
    headerName: L,
    description: M,
    depth: i,
    maxDepth: s,
    fields: u,
    colIndex: p,
    isLastColumn: y
  }), [t, L, M, i, s, u, p, y]);
  t && K && (H = K(Q));
  const z = J({}, e, {
    classes: R.classes,
    headerAlign: D,
    depth: i,
    isDragging: !1
  }), I = L ?? t, G = Sr(), W = t === null ? `empty-group-cell-${G}` : t, B = Iue(z);
  w.useLayoutEffect(() => {
    if (m) {
      const X = E.current.querySelector('[tabindex="0"]') || E.current;
      X == null || X.focus();
    }
  }, [k, m]);
  const ee = w.useCallback(
    (re) => (X) => {
      XC(X) || k.current.publishEvent(re, Q, X);
    },
    // For now this is stupid, because renderParams change all the time.
    // Need to move it's computation in the api, such that for a given depth+columnField, I can get the group parameters
    [k, Q]
  ), U = w.useMemo(() => ({
    onKeyDown: ee("columnGroupHeaderKeyDown"),
    onFocus: ee("columnGroupHeaderFocus"),
    onBlur: ee("columnGroupHeaderBlur")
  }), [ee]), q = typeof _.headerClassName == "function" ? _.headerClassName(Q) : _.headerClassName, Y = w.useMemo(() => qE(J({}, e.style), O, C, S), [C, S, e.style, O]);
  return /* @__PURE__ */ A.jsx(wH, J({
    ref: E,
    classes: B,
    columnMenuOpen: !1,
    colIndex: p,
    height: d,
    isResizing: !1,
    sortDirection: null,
    hasFocus: !1,
    tabIndex: v,
    isDraggable: !1,
    headerComponent: H,
    headerClassName: q,
    description: M,
    elementId: W,
    width: n,
    columnMenuIconButton: null,
    columnTitleIconButtons: null,
    resizable: !1,
    label: I,
    "aria-colspan": u.length,
    "data-fields": `|-${u.join("-|-")}-|`,
    style: Y
  }, U));
}
const XA = Be("div", {
  name: "MuiDataGrid",
  slot: "ColumnHeaderRow",
  overridesResolver: (e, t) => t.columnHeaderRow
})({
  display: "flex"
}), Nue = (e) => {
  const {
    visibleColumns: t,
    sortColumnLookup: n,
    filterColumnLookup: i,
    columnHeaderTabIndexState: s,
    columnGroupHeaderTabIndexState: u,
    columnHeaderFocus: d,
    columnGroupHeaderFocus: p,
    headerGroupingMaxDepth: m,
    columnMenuState: v,
    columnVisibility: y,
    columnGroupsHeaderStructure: C,
    hasOtherElementInTabSequence: S
  } = e, [R, O] = w.useState(""), [E, k] = w.useState(""), F = Cs(), _ = Vt(), L = tt(F, Wz), M = tt(F, Of), D = tt(F, $re), H = tt(F, cv), K = tt(F, ed), Q = rH(M, D, H.left.length), z = tt(F, _E), I = tt(F, Y2), G = tt(F, rte), W = tt(F, ote), B = tt(F, X2), ee = w.useCallback((ge) => k(ge.field), []), U = w.useCallback(() => k(""), []), q = w.useCallback((ge) => O(ge.field), []), Y = w.useCallback(() => O(""), []), ne = w.useMemo(() => H.left.length ? {
    firstColumnIndex: 0,
    lastColumnIndex: H.left.length
  } : null, [H.left.length]), re = w.useMemo(() => H.right.length ? {
    firstColumnIndex: t.length - H.right.length,
    lastColumnIndex: t.length
  } : null, [H.right.length, t.length]);
  Mt(F, "columnResizeStart", ee), Mt(F, "columnResizeStop", U), Mt(F, "columnHeaderDragStart", q), Mt(F, "columnHeaderDragEnd", Y);
  const X = (ge) => {
    const {
      renderContext: de = D
    } = ge || {}, pe = de.firstColumnIndex, be = de.lastColumnIndex;
    return {
      renderedColumns: t.slice(pe, be),
      firstColumnToRender: pe,
      lastColumnToRender: be
    };
  }, j = (ge, de, pe, be = !1) => {
    const Ce = (ge == null ? void 0 : ge.position) === jn.RIGHT, Re = (ge == null ? void 0 : ge.position) === void 0, ue = H.right.length > 0 && Ce || H.right.length === 0 && Re, we = Q - pe;
    return /* @__PURE__ */ A.jsxs(w.Fragment, {
      children: [Re && /* @__PURE__ */ A.jsx("div", {
        role: "presentation",
        style: {
          width: we
        }
      }), de, Re && /* @__PURE__ */ A.jsx("div", {
        role: "presentation",
        className: nt(ae.filler, be && ae["filler--borderBottom"])
      }), ue && /* @__PURE__ */ A.jsx(xM, {
        header: !0,
        pinnedRight: Ce,
        borderBottom: be,
        borderTop: !1
      })]
    });
  }, ie = (ge, de = {}) => {
    const {
      renderedColumns: pe,
      firstColumnToRender: be
    } = X(ge), Ce = [];
    for (let Re = 0; Re < pe.length; Re += 1) {
      const ue = pe[Re], we = be + Re, _e = we === 0, He = s !== null && s.field === ue.field || _e && !S ? 0 : -1, et = d !== null && d.field === ue.field, Ne = v.open && v.field === ue.field, rt = ge == null ? void 0 : ge.position, it = Jb(rt, ue.computedWidth, we, M, z, B), wt = rt === jn.RIGHT ? pe[Re - 1] : pe[Re + 1], gt = wt ? d !== null && d.field === wt.field : !1, ot = we + 1 === M.length - H.right.length, jt = Re, ct = pe.length, Tt = tE(rt, jt), Rt = eE(rt, jt, ct, _.showColumnVerticalBorder, I);
      Ce.push(/* @__PURE__ */ A.jsx(Yie, J({}, n[ue.field], {
        columnMenuOpen: Ne,
        filterItemsCounter: i[ue.field] && i[ue.field].length,
        headerHeight: G,
        isDragging: ue.field === R,
        colDef: ue,
        colIndex: we,
        isResizing: E === ue.field,
        isLast: we === M.length - 1,
        hasFocus: et,
        tabIndex: He,
        pinnedPosition: rt,
        pinnedOffset: it,
        isLastUnpinned: ot,
        isSiblingFocused: gt,
        showLeftBorder: Tt,
        showRightBorder: Rt
      }, de), ue.field));
    }
    return j(ge, Ce, 0);
  }, fe = () => /* @__PURE__ */ A.jsxs(XA, {
    role: "row",
    "aria-rowindex": m + 1,
    ownerState: _,
    className: ae["row--borderBottom"],
    children: [ne && ie({
      position: jn.LEFT,
      renderContext: ne
    }, {
      disableReorder: !0
    }), ie({
      renderContext: D
    }), re && ie({
      position: jn.RIGHT,
      renderContext: re
    }, {
      disableReorder: !0,
      separatorSide: SM.Left
    })]
  }), ce = ({
    depth: ge,
    params: de
  }) => {
    var ct, Tt;
    const pe = X(de);
    if (pe.renderedColumns.length === 0)
      return null;
    const {
      firstColumnToRender: be,
      lastColumnToRender: Ce
    } = pe, Re = C[ge], ue = t[be].field, we = ((ct = L[ue]) == null ? void 0 : ct[ge]) ?? null, _e = Re.findIndex(({
      groupId: Rt,
      columnFields: Lt
    }) => Rt === we && Lt.includes(ue)), He = t[Ce - 1].field, et = ((Tt = L[He]) == null ? void 0 : Tt[ge]) ?? null, Ne = Re.findIndex(({
      groupId: Rt,
      columnFields: Lt
    }) => Rt === et && Lt.includes(He)), rt = Re.slice(_e, Ne + 1).map((Rt) => J({}, Rt, {
      columnFields: Rt.columnFields.filter((Lt) => y[Lt] !== !1)
    })).filter((Rt) => Rt.columnFields.length > 0), it = rt[0].columnFields.indexOf(ue), gt = rt[0].columnFields.slice(0, it).reduce((Rt, Lt) => {
      const vt = K[Lt];
      return Rt + (vt.computedWidth ?? 0);
    }, 0);
    let ot = be;
    const jt = rt.map(({
      groupId: Rt,
      columnFields: Lt
    }, vt) => {
      const Qe = p !== null && p.depth === ge && Lt.includes(p.field), Oe = u !== null && u.depth === ge && Lt.includes(u.field) ? 0 : -1, Me = {
        width: Lt.reduce((bt, Ge) => bt + K[Ge].computedWidth, 0),
        fields: Lt,
        colIndex: ot
      }, ht = de.position, xt = Jb(ht, Me.width, ot, M, z, B);
      ot += Lt.length;
      let zt = vt;
      return ht === jn.LEFT && (zt = ot - 1), /* @__PURE__ */ A.jsx(Due, {
        groupId: Rt,
        width: Me.width,
        fields: Me.fields,
        colIndex: Me.colIndex,
        depth: ge,
        isLastColumn: vt === rt.length - 1,
        maxDepth: m,
        height: W,
        hasFocus: Qe,
        tabIndex: Oe,
        pinnedPosition: ht,
        pinnedOffset: xt,
        showLeftBorder: tE(ht, zt),
        showRightBorder: eE(ht, zt, rt.length, _.showColumnVerticalBorder, I)
      }, vt);
    });
    return j(de, jt, gt);
  };
  return {
    renderContext: D,
    leftRenderContext: ne,
    rightRenderContext: re,
    pinnedColumns: H,
    visibleColumns: t,
    columnPositions: M,
    getFillers: j,
    getColumnHeadersRow: fe,
    getColumnsToRender: X,
    getColumnGroupHeadersRows: () => {
      if (m === 0)
        return null;
      const ge = [];
      for (let de = 0; de < m; de += 1)
        ge.push(/* @__PURE__ */ A.jsxs(XA, {
          role: "row",
          "aria-rowindex": de + 1,
          ownerState: _,
          children: [ne && ce({
            depth: de,
            params: {
              position: jn.LEFT,
              renderContext: ne,
              maxLastColumn: ne.lastColumnIndex
            }
          }), ce({
            depth: de,
            params: {
              renderContext: D
            }
          }), re && ce({
            depth: de,
            params: {
              position: jn.RIGHT,
              renderContext: re,
              maxLastColumn: re.lastColumnIndex
            }
          })]
        }, de));
      return ge;
    },
    getPinnedCellOffset: Jb,
    isDragging: !!R,
    getInnerProps: () => ({
      role: "rowgroup"
    })
  };
}, Lue = ["className"], Fue = (e) => {
  const {
    classes: t
  } = e;
  return yt({
    root: ["columnHeaders"]
  }, Gn, t);
}, _ue = Dr("div", {
  name: "MuiDataGrid",
  slot: "ColumnHeaders",
  overridesResolver: (e, t) => t.columnHeaders
})({
  display: "flex",
  flexDirection: "column",
  borderTopLeftRadius: "var(--unstable_DataGrid-radius)",
  borderTopRightRadius: "var(--unstable_DataGrid-radius)"
}), Aue = nr(function(t, n) {
  const {
    className: i
  } = t, s = Xt(t, Lue), u = Vt(), d = Fue(u);
  return /* @__PURE__ */ A.jsx(_ue, J({
    className: nt(d.root, i),
    ownerState: u
  }, s, {
    role: "presentation",
    ref: n
  }));
}), $ue = ["className", "visibleColumns", "sortColumnLookup", "filterColumnLookup", "columnHeaderTabIndexState", "columnGroupHeaderTabIndexState", "columnHeaderFocus", "columnGroupHeaderFocus", "headerGroupingMaxDepth", "columnMenuState", "columnVisibility", "columnGroupsHeaderStructure", "hasOtherElementInTabSequence"], dV = nr(function(t, n) {
  const {
    visibleColumns: i,
    sortColumnLookup: s,
    filterColumnLookup: u,
    columnHeaderTabIndexState: d,
    columnGroupHeaderTabIndexState: p,
    columnHeaderFocus: m,
    columnGroupHeaderFocus: v,
    headerGroupingMaxDepth: y,
    columnMenuState: C,
    columnVisibility: S,
    columnGroupsHeaderStructure: R,
    hasOtherElementInTabSequence: O
  } = t, E = Xt(t, $ue), {
    getInnerProps: k,
    getColumnHeadersRow: F,
    getColumnGroupHeadersRows: _
  } = Nue({
    visibleColumns: i,
    sortColumnLookup: s,
    filterColumnLookup: u,
    columnHeaderTabIndexState: d,
    columnGroupHeaderTabIndexState: p,
    columnHeaderFocus: m,
    columnGroupHeaderFocus: v,
    headerGroupingMaxDepth: y,
    columnMenuState: C,
    columnVisibility: S,
    columnGroupsHeaderStructure: R,
    hasOtherElementInTabSequence: O
  });
  return /* @__PURE__ */ A.jsxs(Aue, J({}, E, k(), {
    ref: n,
    children: [_(), F()]
  }));
});
process.env.NODE_ENV !== "production" && (dV.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  columnGroupHeaderFocus: a.shape({
    depth: a.number.isRequired,
    field: a.string.isRequired
  }),
  columnGroupHeaderTabIndexState: a.shape({
    depth: a.number.isRequired,
    field: a.string.isRequired
  }),
  columnGroupsHeaderStructure: a.arrayOf(a.arrayOf(a.shape({
    columnFields: a.arrayOf(a.string).isRequired,
    groupId: a.string
  }))).isRequired,
  columnHeaderFocus: a.shape({
    field: a.string.isRequired
  }),
  columnHeaderTabIndexState: a.shape({
    field: a.string.isRequired
  }),
  columnMenuState: a.shape({
    field: a.string,
    open: a.bool.isRequired
  }).isRequired,
  columnVisibility: a.object.isRequired,
  filterColumnLookup: a.object.isRequired,
  hasOtherElementInTabSequence: a.bool.isRequired,
  headerGroupingMaxDepth: a.number.isRequired,
  sortColumnLookup: a.object.isRequired,
  visibleColumns: a.arrayOf(a.object).isRequired
});
const jue = Zc(dV);
function zue(e) {
  return null;
}
function Hue(e) {
  return null;
}
const Vue = nr(function(t, n) {
  const s = In().current.getLocaleText("noResultsOverlayLabel");
  return /* @__PURE__ */ A.jsx(KE, J({}, t, {
    ref: n,
    children: s
  }));
}), Bue = ["sortingOrder"], Uue = /* @__PURE__ */ w.memo(function(t) {
  const {
    sortingOrder: n
  } = t, i = Xt(t, Bue), s = Vt(), [u] = n, d = u === "asc" ? s.slots.columnSortedAscendingIcon : s.slots.columnSortedDescendingIcon;
  return d ? /* @__PURE__ */ A.jsx(d, J({}, i)) : null;
}), Gue = ["native"];
function Wue(e) {
  let {
    native: t
  } = e, n = Xt(e, Gue);
  return t ? /* @__PURE__ */ A.jsx("option", J({}, n)) : /* @__PURE__ */ A.jsx(ms, J({}, n));
}
const que = {
  booleanCellTrueIcon: mae,
  booleanCellFalseIcon: WO,
  columnMenuIcon: dae,
  openFilterButtonIcon: oae,
  filterPanelDeleteIcon: WO,
  columnFilteredIcon: OA,
  columnSelectorIcon: aae,
  columnUnsortedIcon: Uue,
  columnSortedAscendingIcon: xA,
  columnSortedDescendingIcon: EA,
  columnResizeIcon: sae,
  densityCompactIcon: lae,
  densityStandardIcon: uae,
  densityComfortableIcon: cae,
  exportIcon: hae,
  moreActionsIcon: gae,
  treeDataCollapseIcon: RA,
  treeDataExpandIcon: TA,
  groupingCriteriaCollapseIcon: RA,
  groupingCriteriaExpandIcon: TA,
  detailPanelExpandIcon: kA,
  detailPanelCollapseIcon: fae,
  rowReorderIcon: PA,
  quickFilterIcon: iae,
  quickFilterClearIcon: WO,
  columnMenuHideIcon: vae,
  columnMenuSortAscendingIcon: xA,
  columnMenuSortDescendingIcon: EA,
  columnMenuFilterIcon: OA,
  columnMenuManageColumnsIcon: yae,
  columnMenuClearIcon: bae,
  loadIcon: pae,
  filterPanelAddIcon: kA,
  filterPanelRemoveAllIcon: Cae,
  columnReorderIcon: PA
}, Kue = J({}, que, {
  baseBadge: Fj,
  baseCheckbox: zj,
  baseDivider: A0,
  baseTextField: Jp,
  baseFormControl: zP,
  baseSelect: ov,
  baseButton: Qs,
  baseIconButton: Wc,
  baseInputAdornment: qj,
  baseTooltip: s2,
  basePopper: Rf,
  baseInputLabel: HP,
  baseSelectOption: Wue,
  baseChip: $P
}), Yue = J({}, Kue, {
  cell: qoe,
  skeletonCell: Zoe,
  columnHeaderFilterIconButton: RH,
  columnHeaderSortIcon: nae,
  columnMenu: $H,
  columnHeaders: jue,
  detailPanels: zue,
  footer: YH,
  footerRowCount: ZH,
  toolbar: null,
  pinnedRows: Hue,
  loadingOverlay: XH,
  noResultsOverlay: Vue,
  noRowsOverlay: QH,
  pagination: JH,
  filterPanel: BH,
  columnsPanel: jH,
  columnsManagement: UH,
  panel: zH,
  row: Ise
}), Xue = {
  disableMultipleColumnsFiltering: !0,
  disableMultipleColumnsSorting: !0,
  throttleRowsMs: void 0,
  hideFooterRowCount: !1,
  pagination: !0,
  checkboxSelectionVisibleOnly: !1,
  disableColumnReorder: !0,
  keepColumnPositionIfDraggedOutside: !1,
  signature: "DataGrid",
  unstable_listView: !1
}, Que = Yue, Jue = (e) => {
  const t = rv(), n = joe(w.useMemo(() => V$({
    props: e,
    theme: t,
    name: "MuiDataGrid"
  }), [t, e])), i = w.useMemo(() => J({}, ate, n.localeText), [n.localeText]), s = w.useMemo(() => Aoe({
    defaultSlots: Que,
    slots: n.slots
  }), [n.slots]), u = w.useMemo(() => Object.keys(Jk).reduce((d, p) => (d[p] = n[p] ?? Jk[p], d), {}), [n]);
  return w.useMemo(() => J({}, n, u, {
    localeText: i,
    slots: s
  }, Xue), [n, i, s, u]);
}, Zue = {
  hooks: {
    useGridAriaAttributes: Dse,
    useGridRowAriaAttributes: Nse,
    useCellAggregationResult: () => null
  }
}, fV = nr(function(t, n) {
  var u;
  const i = Jue(t), s = Mue(i.apiRef, i);
  return process.env.NODE_ENV !== "production" && Hoe(i, zoe), /* @__PURE__ */ A.jsx(Lse, {
    privateApiRef: s,
    configuration: Zue,
    props: i,
    children: /* @__PURE__ */ A.jsx(gie, J({
      className: i.className,
      style: i.style,
      sx: i.sx
    }, i.forwardedProps, (u = i.slotProps) == null ? void 0 : u.root, {
      ref: n
    }))
  });
}), ece = /* @__PURE__ */ w.memo(fV);
fV.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * The ref object that allows Data Grid manipulation. Can be instantiated with `useGridApiRef()`.
   */
  apiRef: a.shape({
    current: a.object.isRequired
  }),
  /**
   * The label of the Data Grid.
   */
  "aria-label": a.string,
  /**
   * The id of the element containing a label for the Data Grid.
   */
  "aria-labelledby": a.string,
  /**
   * If `true`, the Data Grid height is dynamic and follows the number of rows in the Data Grid.
   * @default false
   * @deprecated Use flex parent container instead: https://mui.com/x/react-data-grid/layout/#flex-parent-container
   * @example
   * <div style={{ display: 'flex', flexDirection: 'column' }}>
   *   <DataGrid />
   * </div>
   */
  autoHeight: a.bool,
  /**
   * If `true`, the pageSize is calculated according to the container size and the max number of rows to avoid rendering a vertical scroll bar.
   * @default false
   */
  autoPageSize: a.bool,
  /**
   * If `true`, columns are autosized after the datagrid is mounted.
   * @default false
   */
  autosizeOnMount: a.bool,
  /**
   * The options for autosize when user-initiated.
   */
  autosizeOptions: a.shape({
    columns: a.arrayOf(a.string),
    disableColumnVirtualization: a.bool,
    expand: a.bool,
    includeHeaders: a.bool,
    includeOutliers: a.bool,
    outliersFactor: a.number
  }),
  /**
   * Controls the modes of the cells.
   */
  cellModesModel: a.object,
  /**
   * If `true`, the Data Grid will display an extra column with checkboxes for selecting rows.
   * @default false
   */
  checkboxSelection: a.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * The character used to separate cell values when copying to the clipboard.
   * @default '\t'
   */
  clipboardCopyCellDelimiter: a.string,
  /**
   * Column region in pixels to render before/after the viewport
   * @default 150
   */
  columnBufferPx: a.number,
  /**
   * Sets the height in pixels of the column group headers in the Data Grid.
   * Inherits the `columnHeaderHeight` value if not set.
   */
  columnGroupHeaderHeight: a.number,
  columnGroupingModel: a.arrayOf(a.object),
  /**
   * Sets the height in pixel of the column headers in the Data Grid.
   * @default 56
   */
  columnHeaderHeight: a.number,
  /**
   * Set of columns of type [[GridColDef]][].
   */
  columns: a.arrayOf(a.object).isRequired,
  /**
   * Set the column visibility model of the Data Grid.
   * If defined, the Data Grid will ignore the `hide` property in [[GridColDef]].
   */
  columnVisibilityModel: a.object,
  /**
   * Set the density of the Data Grid.
   * @default "standard"
   */
  density: a.oneOf(["comfortable", "compact", "standard"]),
  /**
   * If `true`, column autosizing on header separator double-click is disabled.
   * @default false
   */
  disableAutosize: a.bool,
  /**
   * If `true`, column filters are disabled.
   * @default false
   */
  disableColumnFilter: a.bool,
  /**
   * If `true`, the column menu is disabled.
   * @default false
   */
  disableColumnMenu: a.bool,
  /**
   * If `true`, resizing columns is disabled.
   * @default false
   */
  disableColumnResize: a.bool,
  /**
   * If `true`, hiding/showing columns is disabled.
   * @default false
   */
  disableColumnSelector: a.bool,
  /**
   * If `true`, the column sorting feature will be disabled.
   * @default false
   */
  disableColumnSorting: a.bool,
  /**
   * If `true`, the density selector is disabled.
   * @default false
   */
  disableDensitySelector: a.bool,
  /**
   * If `true`, `eval()` is not used for performance optimization.
   * @default false
   */
  disableEval: a.bool,
  /**
   * If `true`, multiple selection using the Ctrl/CMD or Shift key is disabled.
   * The MIT DataGrid will ignore this prop, unless `checkboxSelection` is enabled.
   * @default false (`!props.checkboxSelection` for MIT Data Grid)
   */
  disableMultipleRowSelection: a.bool,
  /**
   * If `true`, the selection on click on a row or cell is disabled.
   * @default false
   */
  disableRowSelectionOnClick: a.bool,
  /**
   * If `true`, the virtualization is disabled.
   * @default false
   */
  disableVirtualization: a.bool,
  /**
   * Controls whether to use the cell or row editing.
   * @default "cell"
   */
  editMode: a.oneOf(["cell", "row"]),
  /**
   * Use if the actual rowCount is not known upfront, but an estimation is available.
   * If some rows have children (for instance in the tree data), this number represents the amount of top level rows.
   * Applicable only with `paginationMode="server"` and when `rowCount="-1"`
   */
  estimatedRowCount: a.number,
  /**
   * Unstable features, breaking changes might be introduced.
   * For each feature, if the flag is not explicitly set to `true`, the feature will be fully disabled and any property / method call will not have any effect.
   */
  experimentalFeatures: a.shape({
    warnIfFocusStateIsNotSynced: a.bool
  }),
  /**
   * The milliseconds delay to wait after a keystroke before triggering filtering.
   * @default 150
   */
  filterDebounceMs: a.number,
  /**
   * Filtering can be processed on the server or client-side.
   * Set it to 'server' if you would like to handle filtering on the server-side.
   * @default "client"
   */
  filterMode: a.oneOf(["client", "server"]),
  /**
   * Set the filter model of the Data Grid.
   */
  filterModel: a.shape({
    items: a.arrayOf(a.shape({
      field: a.string.isRequired,
      id: a.oneOfType([a.number, a.string]),
      operator: a.string.isRequired,
      value: a.any
    })).isRequired,
    logicOperator: a.oneOf(["and", "or"]),
    quickFilterExcludeHiddenColumns: a.bool,
    quickFilterLogicOperator: a.oneOf(["and", "or"]),
    quickFilterValues: a.array
  }),
  /**
   * Forwarded props for the Data Grid root element.
   * @ignore - do not document.
   */
  forwardedProps: a.object,
  /**
   * Function that applies CSS classes dynamically on cells.
   * @param {GridCellParams} params With all properties from [[GridCellParams]].
   * @returns {string} The CSS class to apply to the cell.
   */
  getCellClassName: a.func,
  /**
   * Function that returns the element to render in row detail.
   * @param {GridRowParams} params With all properties from [[GridRowParams]].
   * @returns {React.JSX.Element} The row detail element.
   */
  getDetailPanelContent: a.func,
  /**
   * Function that returns the estimated height for a row.
   * Only works if dynamic row height is used.
   * Once the row height is measured this value is discarded.
   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].
   * @returns {number | null} The estimated row height value. If `null` or `undefined` then the default row height, based on the density, is applied.
   */
  getEstimatedRowHeight: a.func,
  /**
   * Function that applies CSS classes dynamically on rows.
   * @param {GridRowClassNameParams} params With all properties from [[GridRowClassNameParams]].
   * @returns {string} The CSS class to apply to the row.
   */
  getRowClassName: a.func,
  /**
   * Function that sets the row height per row.
   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].
   * @returns {GridRowHeightReturnValue} The row height value. If `null` or `undefined` then the default row height is applied. If "auto" then the row height is calculated based on the content.
   */
  getRowHeight: a.func,
  /**
   * Return the id of a given [[GridRowModel]].
   * Ensure the reference of this prop is stable to avoid performance implications.
   * It could be done by either defining the prop outside of the component or by memoizing it.
   */
  getRowId: a.func,
  /**
   * Function that allows to specify the spacing between rows.
   * @param {GridRowSpacingParams} params With all properties from [[GridRowSpacingParams]].
   * @returns {GridRowSpacing} The row spacing values.
   */
  getRowSpacing: a.func,
  /**
   * If `true`, the footer component is hidden.
   * @default false
   */
  hideFooter: a.bool,
  /**
   * If `true`, the pagination component in the footer is hidden.
   * @default false
   */
  hideFooterPagination: a.bool,
  /**
   * If `true`, the selected row count in the footer is hidden.
   * @default false
   */
  hideFooterSelectedRowCount: a.bool,
  /**
   * If `true`, the diacritics (accents) are ignored when filtering or quick filtering.
   * E.g. when filter value is `cafe`, the rows with `café` will be visible.
   * @default false
   */
  ignoreDiacritics: a.bool,
  /**
   * If `true`, the Data Grid will not use `valueFormatter` when exporting to CSV or copying to clipboard.
   * If an object is provided, you can choose to ignore the `valueFormatter` for CSV export or clipboard export.
   * @default false
   */
  ignoreValueFormatterDuringExport: a.oneOfType([a.shape({
    clipboardExport: a.bool,
    csvExport: a.bool
  }), a.bool]),
  /**
   * If `select`, a group header checkbox in indeterminate state (like "Select All" checkbox)
   * will select all the rows under it.
   * If `deselect`, it will deselect all the rows under it.
   * Works only if `checkboxSelection` is enabled.
   * @default "deselect"
   * @deprecated `select` will be the default behavior from v8 onwards
   */
  indeterminateCheckboxAction: a.oneOf(["deselect", "select"]),
  /**
   * The initial state of the DataGrid.
   * The data in it will be set in the state on initialization but will not be controlled.
   * If one of the data in `initialState` is also being controlled, then the control state wins.
   */
  initialState: a.object,
  /**
   * Callback fired when a cell is rendered, returns true if the cell is editable.
   * @param {GridCellParams} params With all properties from [[GridCellParams]].
   * @returns {boolean} A boolean indicating if the cell is editable.
   */
  isCellEditable: a.func,
  /**
   * Determines if a row can be selected.
   * @param {GridRowParams} params With all properties from [[GridRowParams]].
   * @returns {boolean} A boolean indicating if the row is selectable.
   */
  isRowSelectable: a.func,
  /**
   * If `true`, the selection model will retain selected rows that do not exist.
   * Useful when using server side pagination and row selections need to be retained
   * when changing pages.
   * @default false
   */
  keepNonExistentRowsSelected: a.bool,
  /**
   * If `true`, a loading overlay is displayed.
   * @default false
   */
  loading: a.bool,
  /**
   * Set the locale text of the Data Grid.
   * You can find all the translation keys supported in [the source](https://github.com/mui/mui-x/blob/HEAD/packages/x-data-grid/src/constants/localeTextConstants.ts) in the GitHub repository.
   */
  localeText: a.object,
  /**
   * Pass a custom logger in the components that implements the [[Logger]] interface.
   * @default console
   */
  logger: a.shape({
    debug: a.func.isRequired,
    error: a.func.isRequired,
    info: a.func.isRequired,
    warn: a.func.isRequired
  }),
  /**
   * Allows to pass the logging level or false to turn off logging.
   * @default "error" ("warn" in dev mode)
   */
  logLevel: a.oneOf(["debug", "error", "info", "warn", !1]),
  /**
   * Nonce of the inline styles for [Content Security Policy](https://www.w3.org/TR/2016/REC-CSP2-20161215/#script-src-the-nonce-attribute).
   */
  nonce: a.string,
  /**
   * Callback fired when any cell is clicked.
   * @param {GridCellParams} params With all properties from [[GridCellParams]].
   * @param {MuiEvent<React.MouseEvent>} event The event object.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onCellClick: a.func,
  /**
   * Callback fired when a double click event comes from a cell element.
   * @param {GridCellParams} params With all properties from [[GridCellParams]].
   * @param {MuiEvent<React.MouseEvent>} event The event object.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onCellDoubleClick: a.func,
  /**
   * Callback fired when the cell turns to edit mode.
   * @param {GridCellParams} params With all properties from [[GridCellParams]].
   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.
   */
  onCellEditStart: a.func,
  /**
   * Callback fired when the cell turns to view mode.
   * @param {GridCellParams} params With all properties from [[GridCellParams]].
   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.
   */
  onCellEditStop: a.func,
  /**
   * Callback fired when a keydown event comes from a cell element.
   * @param {GridCellParams} params With all properties from [[GridCellParams]].
   * @param {MuiEvent<React.KeyboardEvent>} event The event object.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onCellKeyDown: a.func,
  /**
   * Callback fired when the `cellModesModel` prop changes.
   * @param {GridCellModesModel} cellModesModel Object containing which cells are in "edit" mode.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onCellModesModelChange: a.func,
  /**
   * Callback called when the data is copied to the clipboard.
   * @param {string} data The data copied to the clipboard.
   */
  onClipboardCopy: a.func,
  /**
   * Callback fired when a click event comes from a column header element.
   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].
   * @param {MuiEvent<React.MouseEvent>} event The event object.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onColumnHeaderClick: a.func,
  /**
   * Callback fired when a contextmenu event comes from a column header element.
   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].
   * @param {MuiEvent<React.MouseEvent>} event The event object.
   */
  onColumnHeaderContextMenu: a.func,
  /**
   * Callback fired when a double click event comes from a column header element.
   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].
   * @param {MuiEvent<React.MouseEvent>} event The event object.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onColumnHeaderDoubleClick: a.func,
  /**
   * Callback fired when a mouse enter event comes from a column header element.
   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].
   * @param {MuiEvent<React.MouseEvent>} event The event object.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onColumnHeaderEnter: a.func,
  /**
   * Callback fired when a mouse leave event comes from a column header element.
   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].
   * @param {MuiEvent<React.MouseEvent>} event The event object.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onColumnHeaderLeave: a.func,
  /**
   * Callback fired when a mouseout event comes from a column header element.
   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].
   * @param {MuiEvent<React.MouseEvent>} event The event object.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onColumnHeaderOut: a.func,
  /**
   * Callback fired when a mouseover event comes from a column header element.
   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].
   * @param {MuiEvent<React.MouseEvent>} event The event object.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onColumnHeaderOver: a.func,
  /**
   * Callback fired when a column is reordered.
   * @param {GridColumnOrderChangeParams} params With all properties from [[GridColumnOrderChangeParams]].
   * @param {MuiEvent<{}>} event The event object.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onColumnOrderChange: a.func,
  /**
   * Callback fired while a column is being resized.
   * @param {GridColumnResizeParams} params With all properties from [[GridColumnResizeParams]].
   * @param {MuiEvent<React.MouseEvent>} event The event object.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onColumnResize: a.func,
  /**
   * Callback fired when the column visibility model changes.
   * @param {GridColumnVisibilityModel} model The new model.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onColumnVisibilityModelChange: a.func,
  /**
   * Callback fired when the width of a column is changed.
   * @param {GridColumnResizeParams} params With all properties from [[GridColumnResizeParams]].
   * @param {MuiEvent<React.MouseEvent>} event The event object.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onColumnWidthChange: a.func,
  /**
   * Callback fired when the density changes.
   * @param {GridDensity} density New density value.
   */
  onDensityChange: a.func,
  /**
   * Callback fired when the Filter model changes before the filters are applied.
   * @param {GridFilterModel} model With all properties from [[GridFilterModel]].
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onFilterModelChange: a.func,
  /**
   * Callback fired when the menu is closed.
   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].
   * @param {MuiEvent<{}>} event The event object.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onMenuClose: a.func,
  /**
   * Callback fired when the menu is opened.
   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].
   * @param {MuiEvent<{}>} event The event object.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onMenuOpen: a.func,
  /**
   * Callback fired when the pagination meta has changed.
   * @param {GridPaginationMeta} paginationMeta Updated pagination meta.
   */
  onPaginationMetaChange: a.func,
  /**
   * Callback fired when the pagination model has changed.
   * @param {GridPaginationModel} model Updated pagination model.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onPaginationModelChange: a.func,
  /**
   * Callback fired when the preferences panel is closed.
   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].
   * @param {MuiEvent<{}>} event The event object.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onPreferencePanelClose: a.func,
  /**
   * Callback fired when the preferences panel is opened.
   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].
   * @param {MuiEvent<{}>} event The event object.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onPreferencePanelOpen: a.func,
  /**
   * Callback called when `processRowUpdate` throws an error or rejects.
   * @param {any} error The error thrown.
   */
  onProcessRowUpdateError: a.func,
  /**
   * Callback fired when the Data Grid is resized.
   * @param {ElementSize} containerSize With all properties from [[ElementSize]].
   * @param {MuiEvent<{}>} event The event object.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onResize: a.func,
  /**
   * Callback fired when a row is clicked.
   * Not called if the target clicked is an interactive element added by the built-in columns.
   * @param {GridRowParams} params With all properties from [[GridRowParams]].
   * @param {MuiEvent<React.MouseEvent>} event The event object.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onRowClick: a.func,
  /**
   * Callback fired when the row count has changed.
   * @param {number} count Updated row count.
   */
  onRowCountChange: a.func,
  /**
   * Callback fired when a double click event comes from a row container element.
   * @param {GridRowParams} params With all properties from [[RowParams]].
   * @param {MuiEvent<React.MouseEvent>} event The event object.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onRowDoubleClick: a.func,
  /**
   * Callback fired when the row turns to edit mode.
   * @param {GridRowParams} params With all properties from [[GridRowParams]].
   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.
   */
  onRowEditStart: a.func,
  /**
   * Callback fired when the row turns to view mode.
   * @param {GridRowParams} params With all properties from [[GridRowParams]].
   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.
   */
  onRowEditStop: a.func,
  /**
   * Callback fired when the `rowModesModel` prop changes.
   * @param {GridRowModesModel} rowModesModel Object containing which rows are in "edit" mode.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onRowModesModelChange: a.func,
  /**
   * Callback fired when the selection state of one or multiple rows changes.
   * @param {GridRowSelectionModel} rowSelectionModel With all the row ids [[GridSelectionModel]].
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onRowSelectionModelChange: a.func,
  /**
   * Callback fired when the sort model changes before a column is sorted.
   * @param {GridSortModel} model With all properties from [[GridSortModel]].
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onSortModelChange: a.func,
  /**
   * Callback fired when the state of the Data Grid is updated.
   * @param {GridState} state The new state.
   * @param {MuiEvent<{}>} event The event object.
   * @param {GridCallbackDetails} details Additional details for this callback.
   * @ignore - do not document.
   */
  onStateChange: a.func,
  /**
   * Select the pageSize dynamically using the component UI.
   * @default [25, 50, 100]
   */
  pageSizeOptions: a.arrayOf(a.oneOfType([a.number, a.shape({
    label: a.string.isRequired,
    value: a.number.isRequired
  })]).isRequired),
  pagination: a.oneOf([!0]),
  /**
   * The extra information about the pagination state of the Data Grid.
   * Only applicable with `paginationMode="server"`.
   */
  paginationMeta: a.shape({
    hasNextPage: a.bool
  }),
  /**
   * Pagination can be processed on the server or client-side.
   * Set it to 'client' if you would like to handle the pagination on the client-side.
   * Set it to 'server' if you would like to handle the pagination on the server-side.
   * @default "client"
   */
  paginationMode: a.oneOf(["client", "server"]),
  /**
   * The pagination model of type [[GridPaginationModel]] which refers to current `page` and `pageSize`.
   */
  paginationModel: a.shape({
    page: a.number.isRequired,
    pageSize: a.number.isRequired
  }),
  /**
   * Callback called before updating a row with new values in the row and cell editing.
   * @template R
   * @param {R} newRow Row object with the new values.
   * @param {R} oldRow Row object with the old values.
   * @param {{ rowId: GridRowId }} params Additional parameters.
   * @returns {Promise<R> | R} The final values to update the row.
   */
  processRowUpdate: a.func,
  /**
   * If `true`, the page is set to 0 after each sorting or filtering.
   * This prop will be removed in the next major version and resetting the page will become the default behavior.
   * @default false
   */
  resetPageOnSortFilter: a.bool,
  /**
   * The milliseconds throttle delay for resizing the grid.
   * @default 60
   */
  resizeThrottleMs: a.number,
  /**
   * Row region in pixels to render before/after the viewport
   * @default 150
   */
  rowBufferPx: a.number,
  /**
   * Set the total number of rows, if it is different from the length of the value `rows` prop.
   * If some rows have children (for instance in the tree data), this number represents the amount of top level rows.
   * Only works with `paginationMode="server"`, ignored when `paginationMode="client"`.
   */
  rowCount: a.number,
  /**
   * Sets the height in pixel of a row in the Data Grid.
   * @default 52
   */
  rowHeight: a.number,
  /**
   * Controls the modes of the rows.
   */
  rowModesModel: a.object,
  /**
   * The milliseconds delay to wait after measuring the row height before recalculating row positions.
   * Setting it to a lower value could be useful when using dynamic row height,
   * but might reduce performance when displaying a large number of rows.
   * @default 166
   * @deprecated
   */
  rowPositionsDebounceMs: a.number,
  /**
   * Set of rows of type [[GridRowsProp]].
   * @default []
   */
  rows: a.arrayOf(a.object),
  /**
   * If `false`, the row selection mode is disabled.
   * @default true
   */
  rowSelection: a.bool,
  /**
   * Sets the row selection model of the Data Grid.
   */
  rowSelectionModel: a.oneOfType([a.arrayOf(a.oneOfType([a.number, a.string]).isRequired), a.number, a.string]),
  /**
   * Sets the type of space between rows added by `getRowSpacing`.
   * @default "margin"
   */
  rowSpacingType: a.oneOf(["border", "margin"]),
  /**
   * Override the height/width of the Data Grid inner scrollbar.
   */
  scrollbarSize: a.number,
  /**
   * If `true`, vertical borders will be displayed between cells.
   * @default false
   */
  showCellVerticalBorder: a.bool,
  /**
   * If `true`, vertical borders will be displayed between column header items.
   * @default false
   */
  showColumnVerticalBorder: a.bool,
  /**
   * Overridable components props dynamically passed to the component at rendering.
   */
  slotProps: a.object,
  /**
   * Overridable components.
   */
  slots: a.object,
  /**
   * Sorting can be processed on the server or client-side.
   * Set it to 'client' if you would like to handle sorting on the client-side.
   * Set it to 'server' if you would like to handle sorting on the server-side.
   * @default "client"
   */
  sortingMode: a.oneOf(["client", "server"]),
  /**
   * The order of the sorting sequence.
   * @default ['asc', 'desc', null]
   */
  sortingOrder: a.arrayOf(a.oneOf(["asc", "desc"])),
  /**
   * Set the sort model of the Data Grid.
   */
  sortModel: a.arrayOf(a.shape({
    field: a.string.isRequired,
    sort: a.oneOf(["asc", "desc"])
  })),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * If `true`, the Data Grid will auto span the cells over the rows having the same value.
   * @default false
   */
  unstable_rowSpanning: a.bool,
  /**
   * If `true`, the Data Grid enables column virtualization when `getRowHeight` is set to `() => 'auto'`.
   * By default, column virtualization is disabled when dynamic row height is enabled to measure the row height correctly.
   * For datasets with a large number of columns, this can cause performance issues.
   * The downside of enabling this prop is that the row height will be estimated based the cells that are currently rendered, which can cause row height change when scrolling horizontally.
   * @default false
   */
  virtualizeColumnsWithAutoRowHeight: a.bool
};
const tce = () => {
  const { result: e } = QP(), [t, n] = tr.useState("fused"), i = tr.useMemo(() => ((e == null ? void 0 : e[t]) || []).map((d, p) => ({ id: p, ...d })), [e, t]), s = tr.useMemo(() => {
    const u = i == null ? void 0 : i[0];
    return u ? Object.keys(u).filter((d) => d !== "id").map((d) => ({ field: d, headerName: d, flex: 1 })) : [];
  }, [i]);
  return /* @__PURE__ */ A.jsxs(bs, { sx: { p: 2, height: "80vh" }, children: [
    /* @__PURE__ */ A.jsxs(v2, { value: t, onChange: (u, d) => n(d), sx: { mb: 1 }, children: [
      /* @__PURE__ */ A.jsx(m0, { label: "Fused", value: "fused" }),
      /* @__PURE__ */ A.jsx(m0, { label: "A Enriched", value: "a_enriched" }),
      /* @__PURE__ */ A.jsx(m0, { label: "B Enriched", value: "b_enriched" })
    ] }),
    /* @__PURE__ */ A.jsx("div", { style: { height: "calc(100% - 48px)" }, children: /* @__PURE__ */ A.jsx(ece, { rows: i, columns: s, density: "compact", disableRowSelectionOnClick: !0, pagination: !0, autoPageSize: !0 }) })
  ] });
}, nce = new F3(), rce = ({ runtimeConfig: e }) => {
  var n, i, s, u, d, p, m;
  const t = tr.useMemo(() => xE({ palette: { mode: "light" } }), []);
  return /* @__PURE__ */ A.jsxs(D8, { theme: t, children: [
    /* @__PURE__ */ A.jsx(Bj, {}),
    /* @__PURE__ */ A.jsx(wee, { defaultLang: (e == null ? void 0 : e.lang) ?? ((n = window.__DATAFUSION_CONFIG__) == null ? void 0 : n.defaultLang) ?? "en", children: /* @__PURE__ */ A.jsx(A3, { client: nce, children: /* @__PURE__ */ A.jsx(Ree, { runtime: {
      apiBase: (e == null ? void 0 : e.apiBase) ?? ((i = window.__DATAFUSION_CONFIG__) == null ? void 0 : i.apiBase),
      authEnabled: (e == null ? void 0 : e.authEnabled) ?? ((s = window.__DATAFUSION_CONFIG__) == null ? void 0 : s.authEnabled),
      jwtToken: (e == null ? void 0 : e.jwtToken) ?? ((u = window.__DATAFUSION_CONFIG__) == null ? void 0 : u.jwtToken),
      lang: (e == null ? void 0 : e.lang) ?? ((d = window.__DATAFUSION_CONFIG__) == null ? void 0 : d.defaultLang) ?? "en",
      maxUploadMb: (e == null ? void 0 : e.maxUploadMb) ?? ((p = window.__DATAFUSION_CONFIG__) == null ? void 0 : p.maxUploadMb) ?? 20,
      persistenceEnabled: (e == null ? void 0 : e.persistenceEnabled) ?? ((m = window.__DATAFUSION_CONFIG__) == null ? void 0 : m.persistenceEnabled)
    }, children: /* @__PURE__ */ A.jsx(sZ, { children: /* @__PURE__ */ A.jsx(Eee, { children: /* @__PURE__ */ A.jsxs(WJ, { children: [
      /* @__PURE__ */ A.jsx(wg, { path: "/", element: /* @__PURE__ */ A.jsx(Oee, {}) }),
      /* @__PURE__ */ A.jsx(wg, { path: "/overlap", element: /* @__PURE__ */ A.jsx(kee, {}) }),
      /* @__PURE__ */ A.jsx(wg, { path: "/targets", element: /* @__PURE__ */ A.jsx(Pee, {}) }),
      /* @__PURE__ */ A.jsx(wg, { path: "/settings", element: /* @__PURE__ */ A.jsx(Mee, {}) }),
      /* @__PURE__ */ A.jsx(wg, { path: "/results", element: /* @__PURE__ */ A.jsx(tce, {}) })
    ] }) }) }) }) }) })
  ] });
};
class oce extends HTMLElement {
  constructor() {
    super(...arguments);
    Mu(this, "root");
  }
  static get observedAttributes() {
    return ["api-base", "auth-enabled", "jwt-token", "lang", "max-upload-mb", "persistence-enabled"];
  }
  connectedCallback() {
    const n = this.attachShadow({ mode: "open" }), i = document.createElement("div");
    n.appendChild(i), this.root = Ab.createRoot(i), this.render();
  }
  attributeChangedCallback() {
    this.render();
  }
  disconnectedCallback() {
    var n;
    (n = this.root) == null || n.unmount();
  }
  readConfig() {
    var i, s, u, d, p, m;
    const n = (v) => this.getAttribute(v);
    return {
      apiBase: n("api-base") ?? ((i = window.__DATAFUSION_CONFIG__) == null ? void 0 : i.apiBase),
      authEnabled: this.hasAttribute("auth-enabled") || ((s = window.__DATAFUSION_CONFIG__) == null ? void 0 : s.authEnabled),
      jwtToken: n("jwt-token") ?? ((u = window.__DATAFUSION_CONFIG__) == null ? void 0 : u.jwtToken),
      lang: n("lang") ?? ((d = window.__DATAFUSION_CONFIG__) == null ? void 0 : d.defaultLang) ?? "en",
      maxUploadMb: Number(n("max-upload-mb") ?? ((p = window.__DATAFUSION_CONFIG__) == null ? void 0 : p.maxUploadMb) ?? 20),
      persistenceEnabled: this.hasAttribute("persistence-enabled") || ((m = window.__DATAFUSION_CONFIG__) == null ? void 0 : m.persistenceEnabled)
    };
  }
  render() {
    var i;
    const n = this.readConfig();
    (i = this.root) == null || i.render(
      /* @__PURE__ */ A.jsx(tr.StrictMode, { children: /* @__PURE__ */ A.jsx(rce, { runtimeConfig: n }) })
    );
  }
}
customElements.define("datafusion-app", oce);
