var Y4 = Object.defineProperty;
var nL = (e) => {
  throw TypeError(e);
};
var X4 = (e, t, n) => t in e ? Y4(e, t, { enumerable: !0, configurable: !0, writable: !0, value: n }) : e[t] = n;
var ku = (e, t, n) => X4(e, typeof t != "symbol" ? t + "" : t, n), uO = (e, t, n) => t.has(e) || nL("Cannot " + n);
var Xe = (e, t, n) => (uO(e, t, "read from private field"), n ? n.call(e) : t.get(e)), rr = (e, t, n) => t.has(e) ? nL("Cannot add the same private member more than once") : t instanceof WeakSet ? t.add(e) : t.set(e, n), wn = (e, t, n, i) => (uO(e, t, "write to private field"), i ? i.call(e, n) : t.set(e, n), n), ra = (e, t, n) => (uO(e, t, "access private method"), n);
var jx = (e, t, n, i) => ({
  set _(s) {
    wn(e, t, s, n);
  },
  get _() {
    return Xe(e, t, i);
  }
});
function Q4(e, t) {
  for (var n = 0; n < t.length; n++) {
    const i = t[n];
    if (typeof i != "string" && !Array.isArray(i)) {
      for (const s in i)
        if (s !== "default" && !(s in e)) {
          const u = Object.getOwnPropertyDescriptor(i, s);
          u && Object.defineProperty(e, s, u.get ? u : {
            enumerable: !0,
            get: () => i[s]
          });
        }
    }
  }
  return Object.freeze(Object.defineProperty(e, Symbol.toStringTag, { value: "Module" }));
}
function Jk(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
var YO = { exports: {} }, yb = {}, XO = { exports: {} }, Wn = {};
/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var rL;
function J4() {
  if (rL) return Wn;
  rL = 1;
  var e = Symbol.for("react.element"), t = Symbol.for("react.portal"), n = Symbol.for("react.fragment"), i = Symbol.for("react.strict_mode"), s = Symbol.for("react.profiler"), u = Symbol.for("react.provider"), d = Symbol.for("react.context"), p = Symbol.for("react.forward_ref"), m = Symbol.for("react.suspense"), v = Symbol.for("react.memo"), y = Symbol.for("react.lazy"), C = Symbol.iterator;
  function w(j) {
    return j === null || typeof j != "object" ? null : (j = C && j[C] || j["@@iterator"], typeof j == "function" ? j : null);
  }
  var R = { isMounted: function() {
    return !1;
  }, enqueueForceUpdate: function() {
  }, enqueueReplaceState: function() {
  }, enqueueSetState: function() {
  } }, O = Object.assign, E = {};
  function k(j, ie, fe) {
    this.props = j, this.context = ie, this.refs = E, this.updater = fe || R;
  }
  k.prototype.isReactComponent = {}, k.prototype.setState = function(j, ie) {
    if (typeof j != "object" && typeof j != "function" && j != null) throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
    this.updater.enqueueSetState(this, j, ie, "setState");
  }, k.prototype.forceUpdate = function(j) {
    this.updater.enqueueForceUpdate(this, j, "forceUpdate");
  };
  function L() {
  }
  L.prototype = k.prototype;
  function F(j, ie, fe) {
    this.props = j, this.context = ie, this.refs = E, this.updater = fe || R;
  }
  var _ = F.prototype = new L();
  _.constructor = F, O(_, k.prototype), _.isPureReactComponent = !0;
  var P = Array.isArray, D = Object.prototype.hasOwnProperty, z = { current: null }, K = { key: !0, ref: !0, __self: !0, __source: !0 };
  function Q(j, ie, fe) {
    var ce, me = {}, ge = null, de = null;
    if (ie != null) for (ce in ie.ref !== void 0 && (de = ie.ref), ie.key !== void 0 && (ge = "" + ie.key), ie) D.call(ie, ce) && !K.hasOwnProperty(ce) && (me[ce] = ie[ce]);
    var pe = arguments.length - 2;
    if (pe === 1) me.children = fe;
    else if (1 < pe) {
      for (var be = Array(pe), Ce = 0; Ce < pe; Ce++) be[Ce] = arguments[Ce + 2];
      me.children = be;
    }
    if (j && j.defaultProps) for (ce in pe = j.defaultProps, pe) me[ce] === void 0 && (me[ce] = pe[ce]);
    return { $$typeof: e, type: j, key: ge, ref: de, props: me, _owner: z.current };
  }
  function H(j, ie) {
    return { $$typeof: e, type: j.type, key: ie, ref: j.ref, props: j.props, _owner: j._owner };
  }
  function I(j) {
    return typeof j == "object" && j !== null && j.$$typeof === e;
  }
  function U(j) {
    var ie = { "=": "=0", ":": "=2" };
    return "$" + j.replace(/[=:]/g, function(fe) {
      return ie[fe];
    });
  }
  var G = /\/+/g;
  function Y(j, ie) {
    return typeof j == "object" && j !== null && j.key != null ? U("" + j.key) : ie.toString(36);
  }
  function te(j, ie, fe, ce, me) {
    var ge = typeof j;
    (ge === "undefined" || ge === "boolean") && (j = null);
    var de = !1;
    if (j === null) de = !0;
    else switch (ge) {
      case "string":
      case "number":
        de = !0;
        break;
      case "object":
        switch (j.$$typeof) {
          case e:
          case t:
            de = !0;
        }
    }
    if (de) return de = j, me = me(de), j = ce === "" ? "." + Y(de, 0) : ce, P(me) ? (fe = "", j != null && (fe = j.replace(G, "$&/") + "/"), te(me, ie, fe, "", function(Ce) {
      return Ce;
    })) : me != null && (I(me) && (me = H(me, fe + (!me.key || de && de.key === me.key ? "" : ("" + me.key).replace(G, "$&/") + "/") + j)), ie.push(me)), 1;
    if (de = 0, ce = ce === "" ? "." : ce + ":", P(j)) for (var pe = 0; pe < j.length; pe++) {
      ge = j[pe];
      var be = ce + Y(ge, pe);
      de += te(ge, ie, fe, be, me);
    }
    else if (be = w(j), typeof be == "function") for (j = be.call(j), pe = 0; !(ge = j.next()).done; ) ge = ge.value, be = ce + Y(ge, pe++), de += te(ge, ie, fe, be, me);
    else if (ge === "object") throw ie = String(j), Error("Objects are not valid as a React child (found: " + (ie === "[object Object]" ? "object with keys {" + Object.keys(j).join(", ") + "}" : ie) + "). If you meant to render a collection of children, use an array instead.");
    return de;
  }
  function B(j, ie, fe) {
    if (j == null) return j;
    var ce = [], me = 0;
    return te(j, ce, "", "", function(ge) {
      return ie.call(fe, ge, me++);
    }), ce;
  }
  function W(j) {
    if (j._status === -1) {
      var ie = j._result;
      ie = ie(), ie.then(function(fe) {
        (j._status === 0 || j._status === -1) && (j._status = 1, j._result = fe);
      }, function(fe) {
        (j._status === 0 || j._status === -1) && (j._status = 2, j._result = fe);
      }), j._status === -1 && (j._status = 0, j._result = ie);
    }
    if (j._status === 1) return j._result.default;
    throw j._result;
  }
  var q = { current: null }, ne = { transition: null }, re = { ReactCurrentDispatcher: q, ReactCurrentBatchConfig: ne, ReactCurrentOwner: z };
  function X() {
    throw Error("act(...) is not supported in production builds of React.");
  }
  return Wn.Children = { map: B, forEach: function(j, ie, fe) {
    B(j, function() {
      ie.apply(this, arguments);
    }, fe);
  }, count: function(j) {
    var ie = 0;
    return B(j, function() {
      ie++;
    }), ie;
  }, toArray: function(j) {
    return B(j, function(ie) {
      return ie;
    }) || [];
  }, only: function(j) {
    if (!I(j)) throw Error("React.Children.only expected to receive a single React element child.");
    return j;
  } }, Wn.Component = k, Wn.Fragment = n, Wn.Profiler = s, Wn.PureComponent = F, Wn.StrictMode = i, Wn.Suspense = m, Wn.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = re, Wn.act = X, Wn.cloneElement = function(j, ie, fe) {
    if (j == null) throw Error("React.cloneElement(...): The argument must be a React element, but you passed " + j + ".");
    var ce = O({}, j.props), me = j.key, ge = j.ref, de = j._owner;
    if (ie != null) {
      if (ie.ref !== void 0 && (ge = ie.ref, de = z.current), ie.key !== void 0 && (me = "" + ie.key), j.type && j.type.defaultProps) var pe = j.type.defaultProps;
      for (be in ie) D.call(ie, be) && !K.hasOwnProperty(be) && (ce[be] = ie[be] === void 0 && pe !== void 0 ? pe[be] : ie[be]);
    }
    var be = arguments.length - 2;
    if (be === 1) ce.children = fe;
    else if (1 < be) {
      pe = Array(be);
      for (var Ce = 0; Ce < be; Ce++) pe[Ce] = arguments[Ce + 2];
      ce.children = pe;
    }
    return { $$typeof: e, type: j.type, key: me, ref: ge, props: ce, _owner: de };
  }, Wn.createContext = function(j) {
    return j = { $$typeof: d, _currentValue: j, _currentValue2: j, _threadCount: 0, Provider: null, Consumer: null, _defaultValue: null, _globalName: null }, j.Provider = { $$typeof: u, _context: j }, j.Consumer = j;
  }, Wn.createElement = Q, Wn.createFactory = function(j) {
    var ie = Q.bind(null, j);
    return ie.type = j, ie;
  }, Wn.createRef = function() {
    return { current: null };
  }, Wn.forwardRef = function(j) {
    return { $$typeof: p, render: j };
  }, Wn.isValidElement = I, Wn.lazy = function(j) {
    return { $$typeof: y, _payload: { _status: -1, _result: j }, _init: W };
  }, Wn.memo = function(j, ie) {
    return { $$typeof: v, type: j, compare: ie === void 0 ? null : ie };
  }, Wn.startTransition = function(j) {
    var ie = ne.transition;
    ne.transition = {};
    try {
      j();
    } finally {
      ne.transition = ie;
    }
  }, Wn.unstable_act = X, Wn.useCallback = function(j, ie) {
    return q.current.useCallback(j, ie);
  }, Wn.useContext = function(j) {
    return q.current.useContext(j);
  }, Wn.useDebugValue = function() {
  }, Wn.useDeferredValue = function(j) {
    return q.current.useDeferredValue(j);
  }, Wn.useEffect = function(j, ie) {
    return q.current.useEffect(j, ie);
  }, Wn.useId = function() {
    return q.current.useId();
  }, Wn.useImperativeHandle = function(j, ie, fe) {
    return q.current.useImperativeHandle(j, ie, fe);
  }, Wn.useInsertionEffect = function(j, ie) {
    return q.current.useInsertionEffect(j, ie);
  }, Wn.useLayoutEffect = function(j, ie) {
    return q.current.useLayoutEffect(j, ie);
  }, Wn.useMemo = function(j, ie) {
    return q.current.useMemo(j, ie);
  }, Wn.useReducer = function(j, ie, fe) {
    return q.current.useReducer(j, ie, fe);
  }, Wn.useRef = function(j) {
    return q.current.useRef(j);
  }, Wn.useState = function(j) {
    return q.current.useState(j);
  }, Wn.useSyncExternalStore = function(j, ie, fe) {
    return q.current.useSyncExternalStore(j, ie, fe);
  }, Wn.useTransition = function() {
    return q.current.useTransition();
  }, Wn.version = "18.3.1", Wn;
}
var Nb = { exports: {} };
/**
 * @license React
 * react.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Nb.exports;
var oL;
function Z4() {
  return oL || (oL = 1, function(e, t) {
    process.env.NODE_ENV !== "production" && function() {
      typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
      var n = "18.3.1", i = Symbol.for("react.element"), s = Symbol.for("react.portal"), u = Symbol.for("react.fragment"), d = Symbol.for("react.strict_mode"), p = Symbol.for("react.profiler"), m = Symbol.for("react.provider"), v = Symbol.for("react.context"), y = Symbol.for("react.forward_ref"), C = Symbol.for("react.suspense"), w = Symbol.for("react.suspense_list"), R = Symbol.for("react.memo"), O = Symbol.for("react.lazy"), E = Symbol.for("react.offscreen"), k = Symbol.iterator, L = "@@iterator";
      function F(ee) {
        if (ee === null || typeof ee != "object")
          return null;
        var ye = k && ee[k] || ee[L];
        return typeof ye == "function" ? ye : null;
      }
      var _ = {
        /**
         * @internal
         * @type {ReactComponent}
         */
        current: null
      }, P = {
        transition: null
      }, D = {
        current: null,
        // Used to reproduce behavior of `batchedUpdates` in legacy mode.
        isBatchingLegacy: !1,
        didScheduleLegacyUpdate: !1
      }, z = {
        /**
         * @internal
         * @type {ReactComponent}
         */
        current: null
      }, K = {}, Q = null;
      function H(ee) {
        Q = ee;
      }
      K.setExtraStackFrame = function(ee) {
        Q = ee;
      }, K.getCurrentStack = null, K.getStackAddendum = function() {
        var ee = "";
        Q && (ee += Q);
        var ye = K.getCurrentStack;
        return ye && (ee += ye() || ""), ee;
      };
      var I = !1, U = !1, G = !1, Y = !1, te = !1, B = {
        ReactCurrentDispatcher: _,
        ReactCurrentBatchConfig: P,
        ReactCurrentOwner: z
      };
      B.ReactDebugCurrentFrame = K, B.ReactCurrentActQueue = D;
      function W(ee) {
        {
          for (var ye = arguments.length, $e = new Array(ye > 1 ? ye - 1 : 0), Ve = 1; Ve < ye; Ve++)
            $e[Ve - 1] = arguments[Ve];
          ne("warn", ee, $e);
        }
      }
      function q(ee) {
        {
          for (var ye = arguments.length, $e = new Array(ye > 1 ? ye - 1 : 0), Ve = 1; Ve < ye; Ve++)
            $e[Ve - 1] = arguments[Ve];
          ne("error", ee, $e);
        }
      }
      function ne(ee, ye, $e) {
        {
          var Ve = B.ReactDebugCurrentFrame, mt = Ve.getStackAddendum();
          mt !== "" && (ye += "%s", $e = $e.concat([mt]));
          var sn = $e.map(function(Pt) {
            return String(Pt);
          });
          sn.unshift("Warning: " + ye), Function.prototype.apply.call(console[ee], console, sn);
        }
      }
      var re = {};
      function X(ee, ye) {
        {
          var $e = ee.constructor, Ve = $e && ($e.displayName || $e.name) || "ReactClass", mt = Ve + "." + ye;
          if (re[mt])
            return;
          q("Can't call %s on a component that is not yet mounted. This is a no-op, but it might indicate a bug in your application. Instead, assign to `this.state` directly or define a `state = {};` class property with the desired state in the %s component.", ye, Ve), re[mt] = !0;
        }
      }
      var j = {
        /**
         * Checks whether or not this composite component is mounted.
         * @param {ReactClass} publicInstance The instance we want to test.
         * @return {boolean} True if mounted, false otherwise.
         * @protected
         * @final
         */
        isMounted: function(ee) {
          return !1;
        },
        /**
         * Forces an update. This should only be invoked when it is known with
         * certainty that we are **not** in a DOM transaction.
         *
         * You may want to call this when you know that some deeper aspect of the
         * component's state has changed but `setState` was not called.
         *
         * This will not invoke `shouldComponentUpdate`, but it will invoke
         * `componentWillUpdate` and `componentDidUpdate`.
         *
         * @param {ReactClass} publicInstance The instance that should rerender.
         * @param {?function} callback Called after component is updated.
         * @param {?string} callerName name of the calling function in the public API.
         * @internal
         */
        enqueueForceUpdate: function(ee, ye, $e) {
          X(ee, "forceUpdate");
        },
        /**
         * Replaces all of the state. Always use this or `setState` to mutate state.
         * You should treat `this.state` as immutable.
         *
         * There is no guarantee that `this.state` will be immediately updated, so
         * accessing `this.state` after calling this method may return the old value.
         *
         * @param {ReactClass} publicInstance The instance that should rerender.
         * @param {object} completeState Next state.
         * @param {?function} callback Called after component is updated.
         * @param {?string} callerName name of the calling function in the public API.
         * @internal
         */
        enqueueReplaceState: function(ee, ye, $e, Ve) {
          X(ee, "replaceState");
        },
        /**
         * Sets a subset of the state. This only exists because _pendingState is
         * internal. This provides a merging strategy that is not available to deep
         * properties which is confusing. TODO: Expose pendingState or don't use it
         * during the merge.
         *
         * @param {ReactClass} publicInstance The instance that should rerender.
         * @param {object} partialState Next partial state to be merged with state.
         * @param {?function} callback Called after component is updated.
         * @param {?string} Name of the calling function in the public API.
         * @internal
         */
        enqueueSetState: function(ee, ye, $e, Ve) {
          X(ee, "setState");
        }
      }, ie = Object.assign, fe = {};
      Object.freeze(fe);
      function ce(ee, ye, $e) {
        this.props = ee, this.context = ye, this.refs = fe, this.updater = $e || j;
      }
      ce.prototype.isReactComponent = {}, ce.prototype.setState = function(ee, ye) {
        if (typeof ee != "object" && typeof ee != "function" && ee != null)
          throw new Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
        this.updater.enqueueSetState(this, ee, ye, "setState");
      }, ce.prototype.forceUpdate = function(ee) {
        this.updater.enqueueForceUpdate(this, ee, "forceUpdate");
      };
      {
        var me = {
          isMounted: ["isMounted", "Instead, make sure to clean up subscriptions and pending requests in componentWillUnmount to prevent memory leaks."],
          replaceState: ["replaceState", "Refactor your code to use setState instead (see https://github.com/facebook/react/issues/3236)."]
        }, ge = function(ee, ye) {
          Object.defineProperty(ce.prototype, ee, {
            get: function() {
              W("%s(...) is deprecated in plain JavaScript React classes. %s", ye[0], ye[1]);
            }
          });
        };
        for (var de in me)
          me.hasOwnProperty(de) && ge(de, me[de]);
      }
      function pe() {
      }
      pe.prototype = ce.prototype;
      function be(ee, ye, $e) {
        this.props = ee, this.context = ye, this.refs = fe, this.updater = $e || j;
      }
      var Ce = be.prototype = new pe();
      Ce.constructor = be, ie(Ce, ce.prototype), Ce.isPureReactComponent = !0;
      function Re() {
        var ee = {
          current: null
        };
        return Object.seal(ee), ee;
      }
      var ue = Array.isArray;
      function we(ee) {
        return ue(ee);
      }
      function _e(ee) {
        {
          var ye = typeof Symbol == "function" && Symbol.toStringTag, $e = ye && ee[Symbol.toStringTag] || ee.constructor.name || "Object";
          return $e;
        }
      }
      function He(ee) {
        try {
          return et(ee), !1;
        } catch {
          return !0;
        }
      }
      function et(ee) {
        return "" + ee;
      }
      function Ne(ee) {
        if (He(ee))
          return q("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", _e(ee)), et(ee);
      }
      function rt(ee, ye, $e) {
        var Ve = ee.displayName;
        if (Ve)
          return Ve;
        var mt = ye.displayName || ye.name || "";
        return mt !== "" ? $e + "(" + mt + ")" : $e;
      }
      function it(ee) {
        return ee.displayName || "Context";
      }
      function wt(ee) {
        if (ee == null)
          return null;
        if (typeof ee.tag == "number" && q("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), typeof ee == "function")
          return ee.displayName || ee.name || null;
        if (typeof ee == "string")
          return ee;
        switch (ee) {
          case u:
            return "Fragment";
          case s:
            return "Portal";
          case p:
            return "Profiler";
          case d:
            return "StrictMode";
          case C:
            return "Suspense";
          case w:
            return "SuspenseList";
        }
        if (typeof ee == "object")
          switch (ee.$$typeof) {
            case v:
              var ye = ee;
              return it(ye) + ".Consumer";
            case m:
              var $e = ee;
              return it($e._context) + ".Provider";
            case y:
              return rt(ee, ee.render, "ForwardRef");
            case R:
              var Ve = ee.displayName || null;
              return Ve !== null ? Ve : wt(ee.type) || "Memo";
            case O: {
              var mt = ee, sn = mt._payload, Pt = mt._init;
              try {
                return wt(Pt(sn));
              } catch {
                return null;
              }
            }
          }
        return null;
      }
      var gt = Object.prototype.hasOwnProperty, ot = {
        key: !0,
        ref: !0,
        __self: !0,
        __source: !0
      }, jt, ct, Tt;
      Tt = {};
      function Rt(ee) {
        if (gt.call(ee, "ref")) {
          var ye = Object.getOwnPropertyDescriptor(ee, "ref").get;
          if (ye && ye.isReactWarning)
            return !1;
        }
        return ee.ref !== void 0;
      }
      function Lt(ee) {
        if (gt.call(ee, "key")) {
          var ye = Object.getOwnPropertyDescriptor(ee, "key").get;
          if (ye && ye.isReactWarning)
            return !1;
        }
        return ee.key !== void 0;
      }
      function vt(ee, ye) {
        var $e = function() {
          jt || (jt = !0, q("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", ye));
        };
        $e.isReactWarning = !0, Object.defineProperty(ee, "key", {
          get: $e,
          configurable: !0
        });
      }
      function Qe(ee, ye) {
        var $e = function() {
          ct || (ct = !0, q("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", ye));
        };
        $e.isReactWarning = !0, Object.defineProperty(ee, "ref", {
          get: $e,
          configurable: !0
        });
      }
      function Oe(ee) {
        if (typeof ee.ref == "string" && z.current && ee.__self && z.current.stateNode !== ee.__self) {
          var ye = wt(z.current.type);
          Tt[ye] || (q('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', ye, ee.ref), Tt[ye] = !0);
        }
      }
      var Me = function(ee, ye, $e, Ve, mt, sn, Pt) {
        var cn = {
          // This tag allows us to uniquely identify this as a React Element
          $$typeof: i,
          // Built-in properties that belong on the element
          type: ee,
          key: ye,
          ref: $e,
          props: Pt,
          // Record the component responsible for creating this element.
          _owner: sn
        };
        return cn._store = {}, Object.defineProperty(cn._store, "validated", {
          configurable: !1,
          enumerable: !1,
          writable: !0,
          value: !1
        }), Object.defineProperty(cn, "_self", {
          configurable: !1,
          enumerable: !1,
          writable: !1,
          value: Ve
        }), Object.defineProperty(cn, "_source", {
          configurable: !1,
          enumerable: !1,
          writable: !1,
          value: mt
        }), Object.freeze && (Object.freeze(cn.props), Object.freeze(cn)), cn;
      };
      function ht(ee, ye, $e) {
        var Ve, mt = {}, sn = null, Pt = null, cn = null, An = null;
        if (ye != null) {
          Rt(ye) && (Pt = ye.ref, Oe(ye)), Lt(ye) && (Ne(ye.key), sn = "" + ye.key), cn = ye.__self === void 0 ? null : ye.__self, An = ye.__source === void 0 ? null : ye.__source;
          for (Ve in ye)
            gt.call(ye, Ve) && !ot.hasOwnProperty(Ve) && (mt[Ve] = ye[Ve]);
        }
        var er = arguments.length - 2;
        if (er === 1)
          mt.children = $e;
        else if (er > 1) {
          for (var $r = Array(er), xr = 0; xr < er; xr++)
            $r[xr] = arguments[xr + 2];
          Object.freeze && Object.freeze($r), mt.children = $r;
        }
        if (ee && ee.defaultProps) {
          var Dn = ee.defaultProps;
          for (Ve in Dn)
            mt[Ve] === void 0 && (mt[Ve] = Dn[Ve]);
        }
        if (sn || Pt) {
          var Er = typeof ee == "function" ? ee.displayName || ee.name || "Unknown" : ee;
          sn && vt(mt, Er), Pt && Qe(mt, Er);
        }
        return Me(ee, sn, Pt, cn, An, z.current, mt);
      }
      function xt(ee, ye) {
        var $e = Me(ee.type, ye, ee.ref, ee._self, ee._source, ee._owner, ee.props);
        return $e;
      }
      function zt(ee, ye, $e) {
        if (ee == null)
          throw new Error("React.cloneElement(...): The argument must be a React element, but you passed " + ee + ".");
        var Ve, mt = ie({}, ee.props), sn = ee.key, Pt = ee.ref, cn = ee._self, An = ee._source, er = ee._owner;
        if (ye != null) {
          Rt(ye) && (Pt = ye.ref, er = z.current), Lt(ye) && (Ne(ye.key), sn = "" + ye.key);
          var $r;
          ee.type && ee.type.defaultProps && ($r = ee.type.defaultProps);
          for (Ve in ye)
            gt.call(ye, Ve) && !ot.hasOwnProperty(Ve) && (ye[Ve] === void 0 && $r !== void 0 ? mt[Ve] = $r[Ve] : mt[Ve] = ye[Ve]);
        }
        var xr = arguments.length - 2;
        if (xr === 1)
          mt.children = $e;
        else if (xr > 1) {
          for (var Dn = Array(xr), Er = 0; Er < xr; Er++)
            Dn[Er] = arguments[Er + 2];
          mt.children = Dn;
        }
        return Me(ee.type, sn, Pt, cn, An, er, mt);
      }
      function bt(ee) {
        return typeof ee == "object" && ee !== null && ee.$$typeof === i;
      }
      var Ge = ".", Et = ":";
      function At(ee) {
        var ye = /[=:]/g, $e = {
          "=": "=0",
          ":": "=2"
        }, Ve = ee.replace(ye, function(mt) {
          return $e[mt];
        });
        return "$" + Ve;
      }
      var pn = !1, fn = /\/+/g;
      function hr(ee) {
        return ee.replace(fn, "$&/");
      }
      function qn(ee, ye) {
        return typeof ee == "object" && ee !== null && ee.key != null ? (Ne(ee.key), At("" + ee.key)) : ye.toString(36);
      }
      function Dr(ee, ye, $e, Ve, mt) {
        var sn = typeof ee;
        (sn === "undefined" || sn === "boolean") && (ee = null);
        var Pt = !1;
        if (ee === null)
          Pt = !0;
        else
          switch (sn) {
            case "string":
            case "number":
              Pt = !0;
              break;
            case "object":
              switch (ee.$$typeof) {
                case i:
                case s:
                  Pt = !0;
              }
          }
        if (Pt) {
          var cn = ee, An = mt(cn), er = Ve === "" ? Ge + qn(cn, 0) : Ve;
          if (we(An)) {
            var $r = "";
            er != null && ($r = hr(er) + "/"), Dr(An, ye, $r, "", function(gv) {
              return gv;
            });
          } else An != null && (bt(An) && (An.key && (!cn || cn.key !== An.key) && Ne(An.key), An = xt(
            An,
            // Keep both the (mapped) and old keys if they differ, just as
            // traverseAllChildren used to do for objects as children
            $e + // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key
            (An.key && (!cn || cn.key !== An.key) ? (
              // $FlowFixMe Flow incorrectly thinks existing element's key can be a number
              // eslint-disable-next-line react-internal/safe-string-coercion
              hr("" + An.key) + "/"
            ) : "") + er
          )), ye.push(An));
          return 1;
        }
        var xr, Dn, Er = 0, Xr = Ve === "" ? Ge : Ve + Et;
        if (we(ee))
          for (var Ql = 0; Ql < ee.length; Ql++)
            xr = ee[Ql], Dn = Xr + qn(xr, Ql), Er += Dr(xr, ye, $e, Dn, mt);
        else {
          var Df = F(ee);
          if (typeof Df == "function") {
            var cl = ee;
            Df === cl.entries && (pn || W("Using Maps as children is not supported. Use an array of keyed ReactElements instead."), pn = !0);
            for (var Nf = Df.call(cl), ec, mv = 0; !(ec = Nf.next()).done; )
              xr = ec.value, Dn = Xr + qn(xr, mv++), Er += Dr(xr, ye, $e, Dn, mt);
          } else if (sn === "object") {
            var Sh = String(ee);
            throw new Error("Objects are not valid as a React child (found: " + (Sh === "[object Object]" ? "object with keys {" + Object.keys(ee).join(", ") + "}" : Sh) + "). If you meant to render a collection of children, use an array instead.");
          }
        }
        return Er;
      }
      function mr(ee, ye, $e) {
        if (ee == null)
          return ee;
        var Ve = [], mt = 0;
        return Dr(ee, Ve, "", "", function(sn) {
          return ye.call($e, sn, mt++);
        }), Ve;
      }
      function Po(ee) {
        var ye = 0;
        return mr(ee, function() {
          ye++;
        }), ye;
      }
      function Mo(ee, ye, $e) {
        mr(ee, function() {
          ye.apply(this, arguments);
        }, $e);
      }
      function Ut(ee) {
        return mr(ee, function(ye) {
          return ye;
        }) || [];
      }
      function dr(ee) {
        if (!bt(ee))
          throw new Error("React.Children.only expected to receive a single React element child.");
        return ee;
      }
      function Ct(ee) {
        var ye = {
          $$typeof: v,
          // As a workaround to support multiple concurrent renderers, we categorize
          // some renderers as primary and others as secondary. We only expect
          // there to be two concurrent renderers at most: React Native (primary) and
          // Fabric (secondary); React DOM (primary) and React ART (secondary).
          // Secondary renderers store their context values on separate fields.
          _currentValue: ee,
          _currentValue2: ee,
          // Used to track how many concurrent renderers this context currently
          // supports within in a single renderer. Such as parallel server rendering.
          _threadCount: 0,
          // These are circular
          Provider: null,
          Consumer: null,
          // Add these to use same hidden class in VM as ServerContext
          _defaultValue: null,
          _globalName: null
        };
        ye.Provider = {
          $$typeof: m,
          _context: ye
        };
        var $e = !1, Ve = !1, mt = !1;
        {
          var sn = {
            $$typeof: v,
            _context: ye
          };
          Object.defineProperties(sn, {
            Provider: {
              get: function() {
                return Ve || (Ve = !0, q("Rendering <Context.Consumer.Provider> is not supported and will be removed in a future major release. Did you mean to render <Context.Provider> instead?")), ye.Provider;
              },
              set: function(Pt) {
                ye.Provider = Pt;
              }
            },
            _currentValue: {
              get: function() {
                return ye._currentValue;
              },
              set: function(Pt) {
                ye._currentValue = Pt;
              }
            },
            _currentValue2: {
              get: function() {
                return ye._currentValue2;
              },
              set: function(Pt) {
                ye._currentValue2 = Pt;
              }
            },
            _threadCount: {
              get: function() {
                return ye._threadCount;
              },
              set: function(Pt) {
                ye._threadCount = Pt;
              }
            },
            Consumer: {
              get: function() {
                return $e || ($e = !0, q("Rendering <Context.Consumer.Consumer> is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?")), ye.Consumer;
              }
            },
            displayName: {
              get: function() {
                return ye.displayName;
              },
              set: function(Pt) {
                mt || (W("Setting `displayName` on Context.Consumer has no effect. You should set it directly on the context with Context.displayName = '%s'.", Pt), mt = !0);
              }
            }
          }), ye.Consumer = sn;
        }
        return ye._currentRenderer = null, ye._currentRenderer2 = null, ye;
      }
      var St = -1, en = 0, on = 1, zn = 2;
      function Ar(ee) {
        if (ee._status === St) {
          var ye = ee._result, $e = ye();
          if ($e.then(function(sn) {
            if (ee._status === en || ee._status === St) {
              var Pt = ee;
              Pt._status = on, Pt._result = sn;
            }
          }, function(sn) {
            if (ee._status === en || ee._status === St) {
              var Pt = ee;
              Pt._status = zn, Pt._result = sn;
            }
          }), ee._status === St) {
            var Ve = ee;
            Ve._status = en, Ve._result = $e;
          }
        }
        if (ee._status === on) {
          var mt = ee._result;
          return mt === void 0 && q(`lazy: Expected the result of a dynamic import() call. Instead received: %s

Your code should look like: 
  const MyComponent = lazy(() => import('./MyComponent'))

Did you accidentally put curly braces around the import?`, mt), "default" in mt || q(`lazy: Expected the result of a dynamic import() call. Instead received: %s

Your code should look like: 
  const MyComponent = lazy(() => import('./MyComponent'))`, mt), mt.default;
        } else
          throw ee._result;
      }
      function ro(ee) {
        var ye = {
          // We use these fields to store the result.
          _status: St,
          _result: ee
        }, $e = {
          $$typeof: O,
          _payload: ye,
          _init: Ar
        };
        {
          var Ve, mt;
          Object.defineProperties($e, {
            defaultProps: {
              configurable: !0,
              get: function() {
                return Ve;
              },
              set: function(sn) {
                q("React.lazy(...): It is not supported to assign `defaultProps` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it."), Ve = sn, Object.defineProperty($e, "defaultProps", {
                  enumerable: !0
                });
              }
            },
            propTypes: {
              configurable: !0,
              get: function() {
                return mt;
              },
              set: function(sn) {
                q("React.lazy(...): It is not supported to assign `propTypes` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it."), mt = sn, Object.defineProperty($e, "propTypes", {
                  enumerable: !0
                });
              }
            }
          });
        }
        return $e;
      }
      function mo(ee) {
        ee != null && ee.$$typeof === R ? q("forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...)).") : typeof ee != "function" ? q("forwardRef requires a render function but was given %s.", ee === null ? "null" : typeof ee) : ee.length !== 0 && ee.length !== 2 && q("forwardRef render functions accept exactly two parameters: props and ref. %s", ee.length === 1 ? "Did you forget to use the ref parameter?" : "Any additional parameter will be undefined."), ee != null && (ee.defaultProps != null || ee.propTypes != null) && q("forwardRef render functions do not support propTypes or defaultProps. Did you accidentally pass a React component?");
        var ye = {
          $$typeof: y,
          render: ee
        };
        {
          var $e;
          Object.defineProperty(ye, "displayName", {
            enumerable: !1,
            configurable: !0,
            get: function() {
              return $e;
            },
            set: function(Ve) {
              $e = Ve, !ee.name && !ee.displayName && (ee.displayName = Ve);
            }
          });
        }
        return ye;
      }
      var ve;
      ve = Symbol.for("react.module.reference");
      function We(ee) {
        return !!(typeof ee == "string" || typeof ee == "function" || ee === u || ee === p || te || ee === d || ee === C || ee === w || Y || ee === E || I || U || G || typeof ee == "object" && ee !== null && (ee.$$typeof === O || ee.$$typeof === R || ee.$$typeof === m || ee.$$typeof === v || ee.$$typeof === y || // This needs to include all possible module reference object
        // types supported by any Flight configuration anywhere since
        // we don't know which Flight build this will end up being used
        // with.
        ee.$$typeof === ve || ee.getModuleId !== void 0));
      }
      function pt(ee, ye) {
        We(ee) || q("memo: The first argument must be a component. Instead received: %s", ee === null ? "null" : typeof ee);
        var $e = {
          $$typeof: R,
          type: ee,
          compare: ye === void 0 ? null : ye
        };
        {
          var Ve;
          Object.defineProperty($e, "displayName", {
            enumerable: !1,
            configurable: !0,
            get: function() {
              return Ve;
            },
            set: function(mt) {
              Ve = mt, !ee.name && !ee.displayName && (ee.displayName = mt);
            }
          });
        }
        return $e;
      }
      function Ot() {
        var ee = _.current;
        return ee === null && q(`Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:
1. You might have mismatching versions of React and the renderer (such as React DOM)
2. You might be breaking the Rules of Hooks
3. You might have more than one copy of React in the same app
See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.`), ee;
      }
      function mn(ee) {
        var ye = Ot();
        if (ee._context !== void 0) {
          var $e = ee._context;
          $e.Consumer === ee ? q("Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be removed in a future major release. Did you mean to call useContext(Context) instead?") : $e.Provider === ee && q("Calling useContext(Context.Provider) is not supported. Did you mean to call useContext(Context) instead?");
        }
        return ye.useContext(ee);
      }
      function Le(ee) {
        var ye = Ot();
        return ye.useState(ee);
      }
      function ke(ee, ye, $e) {
        var Ve = Ot();
        return Ve.useReducer(ee, ye, $e);
      }
      function Ze(ee) {
        var ye = Ot();
        return ye.useRef(ee);
      }
      function Gt(ee, ye) {
        var $e = Ot();
        return $e.useEffect(ee, ye);
      }
      function Bt(ee, ye) {
        var $e = Ot();
        return $e.useInsertionEffect(ee, ye);
      }
      function Qt(ee, ye) {
        var $e = Ot();
        return $e.useLayoutEffect(ee, ye);
      }
      function Hn(ee, ye) {
        var $e = Ot();
        return $e.useCallback(ee, ye);
      }
      function Nr(ee, ye) {
        var $e = Ot();
        return $e.useMemo(ee, ye);
      }
      function Wo(ee, ye, $e) {
        var Ve = Ot();
        return Ve.useImperativeHandle(ee, ye, $e);
      }
      function xn(ee, ye) {
        {
          var $e = Ot();
          return $e.useDebugValue(ee, ye);
        }
      }
      function Rn() {
        var ee = Ot();
        return ee.useTransition();
      }
      function ci(ee) {
        var ye = Ot();
        return ye.useDeferredValue(ee);
      }
      function Ta() {
        var ee = Ot();
        return ee.useId();
      }
      function _n(ee, ye, $e) {
        var Ve = Ot();
        return Ve.useSyncExternalStore(ee, ye, $e);
      }
      var Io = 0, Ci, zi, di, kf, Si, bh, Ch;
      function td() {
      }
      td.__reactDisabledLog = !0;
      function Wl() {
        {
          if (Io === 0) {
            Ci = console.log, zi = console.info, di = console.warn, kf = console.error, Si = console.group, bh = console.groupCollapsed, Ch = console.groupEnd;
            var ee = {
              configurable: !0,
              enumerable: !0,
              value: td,
              writable: !0
            };
            Object.defineProperties(console, {
              info: ee,
              log: ee,
              warn: ee,
              error: ee,
              group: ee,
              groupCollapsed: ee,
              groupEnd: ee
            });
          }
          Io++;
        }
      }
      function la() {
        {
          if (Io--, Io === 0) {
            var ee = {
              configurable: !0,
              enumerable: !0,
              writable: !0
            };
            Object.defineProperties(console, {
              log: ie({}, ee, {
                value: Ci
              }),
              info: ie({}, ee, {
                value: zi
              }),
              warn: ie({}, ee, {
                value: di
              }),
              error: ie({}, ee, {
                value: kf
              }),
              group: ie({}, ee, {
                value: Si
              }),
              groupCollapsed: ie({}, ee, {
                value: bh
              }),
              groupEnd: ie({}, ee, {
                value: Ch
              })
            });
          }
          Io < 0 && q("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
        }
      }
      var Xa = B.ReactCurrentDispatcher, Qa;
      function nd(ee, ye, $e) {
        {
          if (Qa === void 0)
            try {
              throw Error();
            } catch (mt) {
              var Ve = mt.stack.trim().match(/\n( *(at )?)/);
              Qa = Ve && Ve[1] || "";
            }
          return `
` + Qa + ee;
        }
      }
      var Xu = !1, ql;
      {
        var rd = typeof WeakMap == "function" ? WeakMap : Map;
        ql = new rd();
      }
      function od(ee, ye) {
        if (!ee || Xu)
          return "";
        {
          var $e = ql.get(ee);
          if ($e !== void 0)
            return $e;
        }
        var Ve;
        Xu = !0;
        var mt = Error.prepareStackTrace;
        Error.prepareStackTrace = void 0;
        var sn;
        sn = Xa.current, Xa.current = null, Wl();
        try {
          if (ye) {
            var Pt = function() {
              throw Error();
            };
            if (Object.defineProperty(Pt.prototype, "props", {
              set: function() {
                throw Error();
              }
            }), typeof Reflect == "object" && Reflect.construct) {
              try {
                Reflect.construct(Pt, []);
              } catch (Xr) {
                Ve = Xr;
              }
              Reflect.construct(ee, [], Pt);
            } else {
              try {
                Pt.call();
              } catch (Xr) {
                Ve = Xr;
              }
              ee.call(Pt.prototype);
            }
          } else {
            try {
              throw Error();
            } catch (Xr) {
              Ve = Xr;
            }
            ee();
          }
        } catch (Xr) {
          if (Xr && Ve && typeof Xr.stack == "string") {
            for (var cn = Xr.stack.split(`
`), An = Ve.stack.split(`
`), er = cn.length - 1, $r = An.length - 1; er >= 1 && $r >= 0 && cn[er] !== An[$r]; )
              $r--;
            for (; er >= 1 && $r >= 0; er--, $r--)
              if (cn[er] !== An[$r]) {
                if (er !== 1 || $r !== 1)
                  do
                    if (er--, $r--, $r < 0 || cn[er] !== An[$r]) {
                      var xr = `
` + cn[er].replace(" at new ", " at ");
                      return ee.displayName && xr.includes("<anonymous>") && (xr = xr.replace("<anonymous>", ee.displayName)), typeof ee == "function" && ql.set(ee, xr), xr;
                    }
                  while (er >= 1 && $r >= 0);
                break;
              }
          }
        } finally {
          Xu = !1, Xa.current = sn, la(), Error.prepareStackTrace = mt;
        }
        var Dn = ee ? ee.displayName || ee.name : "", Er = Dn ? nd(Dn) : "";
        return typeof ee == "function" && ql.set(ee, Er), Er;
      }
      function ll(ee, ye, $e) {
        return od(ee, !1);
      }
      function pv(ee) {
        var ye = ee.prototype;
        return !!(ye && ye.isReactComponent);
      }
      function ul(ee, ye, $e) {
        if (ee == null)
          return "";
        if (typeof ee == "function")
          return od(ee, pv(ee));
        if (typeof ee == "string")
          return nd(ee);
        switch (ee) {
          case C:
            return nd("Suspense");
          case w:
            return nd("SuspenseList");
        }
        if (typeof ee == "object")
          switch (ee.$$typeof) {
            case y:
              return ll(ee.render);
            case R:
              return ul(ee.type, ye, $e);
            case O: {
              var Ve = ee, mt = Ve._payload, sn = Ve._init;
              try {
                return ul(sn(mt), ye, $e);
              } catch {
              }
            }
          }
        return "";
      }
      var or = {}, id = B.ReactDebugCurrentFrame;
      function Zn(ee) {
        if (ee) {
          var ye = ee._owner, $e = ul(ee.type, ee._source, ye ? ye.type : null);
          id.setExtraStackFrame($e);
        } else
          id.setExtraStackFrame(null);
      }
      function Pf(ee, ye, $e, Ve, mt) {
        {
          var sn = Function.call.bind(gt);
          for (var Pt in ee)
            if (sn(ee, Pt)) {
              var cn = void 0;
              try {
                if (typeof ee[Pt] != "function") {
                  var An = Error((Ve || "React class") + ": " + $e + " type `" + Pt + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof ee[Pt] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                  throw An.name = "Invariant Violation", An;
                }
                cn = ee[Pt](ye, Pt, Ve, $e, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
              } catch (er) {
                cn = er;
              }
              cn && !(cn instanceof Error) && (Zn(mt), q("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", Ve || "React class", $e, Pt, typeof cn), Zn(null)), cn instanceof Error && !(cn.message in or) && (or[cn.message] = !0, Zn(mt), q("Failed %s type: %s", $e, cn.message), Zn(null));
            }
        }
      }
      function Ss(ee) {
        if (ee) {
          var ye = ee._owner, $e = ul(ee.type, ee._source, ye ? ye.type : null);
          H($e);
        } else
          H(null);
      }
      var Sn;
      Sn = !1;
      function ad() {
        if (z.current) {
          var ee = wt(z.current.type);
          if (ee)
            return `

Check the render method of \`` + ee + "`.";
        }
        return "";
      }
      function qo(ee) {
        if (ee !== void 0) {
          var ye = ee.fileName.replace(/^.*[\\\/]/, ""), $e = ee.lineNumber;
          return `

Check your code at ` + ye + ":" + $e + ".";
        }
        return "";
      }
      function ws(ee) {
        return ee != null ? qo(ee.__source) : "";
      }
      var wi = {};
      function xs(ee) {
        var ye = ad();
        if (!ye) {
          var $e = typeof ee == "string" ? ee : ee.displayName || ee.name;
          $e && (ye = `

Check the top-level render call using <` + $e + ">.");
        }
        return ye;
      }
      function Br(ee, ye) {
        if (!(!ee._store || ee._store.validated || ee.key != null)) {
          ee._store.validated = !0;
          var $e = xs(ye);
          if (!wi[$e]) {
            wi[$e] = !0;
            var Ve = "";
            ee && ee._owner && ee._owner !== z.current && (Ve = " It was passed a child from " + wt(ee._owner.type) + "."), Ss(ee), q('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', $e, Ve), Ss(null);
          }
        }
      }
      function wr(ee, ye) {
        if (typeof ee == "object") {
          if (we(ee))
            for (var $e = 0; $e < ee.length; $e++) {
              var Ve = ee[$e];
              bt(Ve) && Br(Ve, ye);
            }
          else if (bt(ee))
            ee._store && (ee._store.validated = !0);
          else if (ee) {
            var mt = F(ee);
            if (typeof mt == "function" && mt !== ee.entries)
              for (var sn = mt.call(ee), Pt; !(Pt = sn.next()).done; )
                bt(Pt.value) && Br(Pt.value, ye);
          }
        }
      }
      function Kl(ee) {
        {
          var ye = ee.type;
          if (ye == null || typeof ye == "string")
            return;
          var $e;
          if (typeof ye == "function")
            $e = ye.propTypes;
          else if (typeof ye == "object" && (ye.$$typeof === y || // Note: Memo only checks outer props here.
          // Inner props are checked in the reconciler.
          ye.$$typeof === R))
            $e = ye.propTypes;
          else
            return;
          if ($e) {
            var Ve = wt(ye);
            Pf($e, ee.props, "prop", Ve, ee);
          } else if (ye.PropTypes !== void 0 && !Sn) {
            Sn = !0;
            var mt = wt(ye);
            q("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?", mt || "Unknown");
          }
          typeof ye.getDefaultProps == "function" && !ye.getDefaultProps.isReactClassApproved && q("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
        }
      }
      function Do(ee) {
        {
          for (var ye = Object.keys(ee.props), $e = 0; $e < ye.length; $e++) {
            var Ve = ye[$e];
            if (Ve !== "children" && Ve !== "key") {
              Ss(ee), q("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", Ve), Ss(null);
              break;
            }
          }
          ee.ref !== null && (Ss(ee), q("Invalid attribute `ref` supplied to `React.Fragment`."), Ss(null));
        }
      }
      function xi(ee, ye, $e) {
        var Ve = We(ee);
        if (!Ve) {
          var mt = "";
          (ee === void 0 || typeof ee == "object" && ee !== null && Object.keys(ee).length === 0) && (mt += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.");
          var sn = ws(ye);
          sn ? mt += sn : mt += ad();
          var Pt;
          ee === null ? Pt = "null" : we(ee) ? Pt = "array" : ee !== void 0 && ee.$$typeof === i ? (Pt = "<" + (wt(ee.type) || "Unknown") + " />", mt = " Did you accidentally export a JSX literal instead of a component?") : Pt = typeof ee, q("React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", Pt, mt);
        }
        var cn = ht.apply(this, arguments);
        if (cn == null)
          return cn;
        if (Ve)
          for (var An = 2; An < arguments.length; An++)
            wr(arguments[An], ee);
        return ee === u ? Do(cn) : Kl(cn), cn;
      }
      var Ra = !1;
      function Qu(ee) {
        var ye = xi.bind(null, ee);
        return ye.type = ee, Ra || (Ra = !0, W("React.createFactory() is deprecated and will be removed in a future major release. Consider using JSX or use React.createElement() directly instead.")), Object.defineProperty(ye, "type", {
          enumerable: !1,
          get: function() {
            return W("Factory.type is deprecated. Access the class directly before passing it to createFactory."), Object.defineProperty(this, "type", {
              value: ee
            }), ee;
          }
        }), ye;
      }
      function Mf(ee, ye, $e) {
        for (var Ve = zt.apply(this, arguments), mt = 2; mt < arguments.length; mt++)
          wr(arguments[mt], Ve.type);
        return Kl(Ve), Ve;
      }
      function If(ee, ye) {
        var $e = P.transition;
        P.transition = {};
        var Ve = P.transition;
        P.transition._updatedFibers = /* @__PURE__ */ new Set();
        try {
          ee();
        } finally {
          if (P.transition = $e, $e === null && Ve._updatedFibers) {
            var mt = Ve._updatedFibers.size;
            mt > 10 && W("Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table."), Ve._updatedFibers.clear();
          }
        }
      }
      var Yl = !1, Ju = null;
      function hv(ee) {
        if (Ju === null)
          try {
            var ye = ("require" + Math.random()).slice(0, 7), $e = e && e[ye];
            Ju = $e.call(e, "timers").setImmediate;
          } catch {
            Ju = function(mt) {
              Yl === !1 && (Yl = !0, typeof MessageChannel > "u" && q("This browser does not have a MessageChannel implementation, so enqueuing tasks via await act(async () => ...) will fail. Please file an issue at https://github.com/facebook/react/issues if you encounter this warning."));
              var sn = new MessageChannel();
              sn.port1.onmessage = mt, sn.port2.postMessage(void 0);
            };
          }
        return Ju(ee);
      }
      var Oa = 0, Ja = !1;
      function Es(ee) {
        {
          var ye = Oa;
          Oa++, D.current === null && (D.current = []);
          var $e = D.isBatchingLegacy, Ve;
          try {
            if (D.isBatchingLegacy = !0, Ve = ee(), !$e && D.didScheduleLegacyUpdate) {
              var mt = D.current;
              mt !== null && (D.didScheduleLegacyUpdate = !1, Xl(mt));
            }
          } catch (Dn) {
            throw ka(ye), Dn;
          } finally {
            D.isBatchingLegacy = $e;
          }
          if (Ve !== null && typeof Ve == "object" && typeof Ve.then == "function") {
            var sn = Ve, Pt = !1, cn = {
              then: function(Dn, Er) {
                Pt = !0, sn.then(function(Xr) {
                  ka(ye), Oa === 0 ? sd(Xr, Dn, Er) : Dn(Xr);
                }, function(Xr) {
                  ka(ye), Er(Xr);
                });
              }
            };
            return !Ja && typeof Promise < "u" && Promise.resolve().then(function() {
            }).then(function() {
              Pt || (Ja = !0, q("You called act(async () => ...) without await. This could lead to unexpected testing behaviour, interleaving multiple act calls and mixing their scopes. You should - await act(async () => ...);"));
            }), cn;
          } else {
            var An = Ve;
            if (ka(ye), Oa === 0) {
              var er = D.current;
              er !== null && (Xl(er), D.current = null);
              var $r = {
                then: function(Dn, Er) {
                  D.current === null ? (D.current = [], sd(An, Dn, Er)) : Dn(An);
                }
              };
              return $r;
            } else {
              var xr = {
                then: function(Dn, Er) {
                  Dn(An);
                }
              };
              return xr;
            }
          }
        }
      }
      function ka(ee) {
        ee !== Oa - 1 && q("You seem to have overlapping act() calls, this is not supported. Be sure to await previous act() calls before making a new one. "), Oa = ee;
      }
      function sd(ee, ye, $e) {
        {
          var Ve = D.current;
          if (Ve !== null)
            try {
              Xl(Ve), hv(function() {
                Ve.length === 0 ? (D.current = null, ye(ee)) : sd(ee, ye, $e);
              });
            } catch (mt) {
              $e(mt);
            }
          else
            ye(ee);
        }
      }
      var ld = !1;
      function Xl(ee) {
        if (!ld) {
          ld = !0;
          var ye = 0;
          try {
            for (; ye < ee.length; ye++) {
              var $e = ee[ye];
              do
                $e = $e(!0);
              while ($e !== null);
            }
            ee.length = 0;
          } catch (Ve) {
            throw ee = ee.slice(ye + 1), Ve;
          } finally {
            ld = !1;
          }
        }
      }
      var Zu = xi, ud = Mf, cd = Qu, Za = {
        map: mr,
        forEach: Mo,
        count: Po,
        toArray: Ut,
        only: dr
      };
      t.Children = Za, t.Component = ce, t.Fragment = u, t.Profiler = p, t.PureComponent = be, t.StrictMode = d, t.Suspense = C, t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = B, t.act = Es, t.cloneElement = ud, t.createContext = Ct, t.createElement = Zu, t.createFactory = cd, t.createRef = Re, t.forwardRef = mo, t.isValidElement = bt, t.lazy = ro, t.memo = pt, t.startTransition = If, t.unstable_act = Es, t.useCallback = Hn, t.useContext = mn, t.useDebugValue = xn, t.useDeferredValue = ci, t.useEffect = Gt, t.useId = Ta, t.useImperativeHandle = Wo, t.useInsertionEffect = Bt, t.useLayoutEffect = Qt, t.useMemo = Nr, t.useReducer = ke, t.useRef = Ze, t.useState = Le, t.useSyncExternalStore = _n, t.useTransition = Rn, t.version = n, typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
    }();
  }(Nb, Nb.exports)), Nb.exports;
}
process.env.NODE_ENV === "production" ? XO.exports = J4() : XO.exports = Z4();
var S = XO.exports;
const Cr = /* @__PURE__ */ Jk(S), b0 = /* @__PURE__ */ Q4({
  __proto__: null,
  default: Cr
}, [S]);
/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var iL;
function e3() {
  if (iL) return yb;
  iL = 1;
  var e = S, t = Symbol.for("react.element"), n = Symbol.for("react.fragment"), i = Object.prototype.hasOwnProperty, s = e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, u = { key: !0, ref: !0, __self: !0, __source: !0 };
  function d(p, m, v) {
    var y, C = {}, w = null, R = null;
    v !== void 0 && (w = "" + v), m.key !== void 0 && (w = "" + m.key), m.ref !== void 0 && (R = m.ref);
    for (y in m) i.call(m, y) && !u.hasOwnProperty(y) && (C[y] = m[y]);
    if (p && p.defaultProps) for (y in m = p.defaultProps, m) C[y] === void 0 && (C[y] = m[y]);
    return { $$typeof: t, type: p, key: w, ref: R, props: C, _owner: s.current };
  }
  return yb.Fragment = n, yb.jsx = d, yb.jsxs = d, yb;
}
var bb = {};
/**
 * @license React
 * react-jsx-runtime.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var aL;
function t3() {
  return aL || (aL = 1, process.env.NODE_ENV !== "production" && function() {
    var e = S, t = Symbol.for("react.element"), n = Symbol.for("react.portal"), i = Symbol.for("react.fragment"), s = Symbol.for("react.strict_mode"), u = Symbol.for("react.profiler"), d = Symbol.for("react.provider"), p = Symbol.for("react.context"), m = Symbol.for("react.forward_ref"), v = Symbol.for("react.suspense"), y = Symbol.for("react.suspense_list"), C = Symbol.for("react.memo"), w = Symbol.for("react.lazy"), R = Symbol.for("react.offscreen"), O = Symbol.iterator, E = "@@iterator";
    function k(ve) {
      if (ve === null || typeof ve != "object")
        return null;
      var We = O && ve[O] || ve[E];
      return typeof We == "function" ? We : null;
    }
    var L = e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
    function F(ve) {
      {
        for (var We = arguments.length, pt = new Array(We > 1 ? We - 1 : 0), Ot = 1; Ot < We; Ot++)
          pt[Ot - 1] = arguments[Ot];
        _("error", ve, pt);
      }
    }
    function _(ve, We, pt) {
      {
        var Ot = L.ReactDebugCurrentFrame, mn = Ot.getStackAddendum();
        mn !== "" && (We += "%s", pt = pt.concat([mn]));
        var Le = pt.map(function(ke) {
          return String(ke);
        });
        Le.unshift("Warning: " + We), Function.prototype.apply.call(console[ve], console, Le);
      }
    }
    var P = !1, D = !1, z = !1, K = !1, Q = !1, H;
    H = Symbol.for("react.module.reference");
    function I(ve) {
      return !!(typeof ve == "string" || typeof ve == "function" || ve === i || ve === u || Q || ve === s || ve === v || ve === y || K || ve === R || P || D || z || typeof ve == "object" && ve !== null && (ve.$$typeof === w || ve.$$typeof === C || ve.$$typeof === d || ve.$$typeof === p || ve.$$typeof === m || // This needs to include all possible module reference object
      // types supported by any Flight configuration anywhere since
      // we don't know which Flight build this will end up being used
      // with.
      ve.$$typeof === H || ve.getModuleId !== void 0));
    }
    function U(ve, We, pt) {
      var Ot = ve.displayName;
      if (Ot)
        return Ot;
      var mn = We.displayName || We.name || "";
      return mn !== "" ? pt + "(" + mn + ")" : pt;
    }
    function G(ve) {
      return ve.displayName || "Context";
    }
    function Y(ve) {
      if (ve == null)
        return null;
      if (typeof ve.tag == "number" && F("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), typeof ve == "function")
        return ve.displayName || ve.name || null;
      if (typeof ve == "string")
        return ve;
      switch (ve) {
        case i:
          return "Fragment";
        case n:
          return "Portal";
        case u:
          return "Profiler";
        case s:
          return "StrictMode";
        case v:
          return "Suspense";
        case y:
          return "SuspenseList";
      }
      if (typeof ve == "object")
        switch (ve.$$typeof) {
          case p:
            var We = ve;
            return G(We) + ".Consumer";
          case d:
            var pt = ve;
            return G(pt._context) + ".Provider";
          case m:
            return U(ve, ve.render, "ForwardRef");
          case C:
            var Ot = ve.displayName || null;
            return Ot !== null ? Ot : Y(ve.type) || "Memo";
          case w: {
            var mn = ve, Le = mn._payload, ke = mn._init;
            try {
              return Y(ke(Le));
            } catch {
              return null;
            }
          }
        }
      return null;
    }
    var te = Object.assign, B = 0, W, q, ne, re, X, j, ie;
    function fe() {
    }
    fe.__reactDisabledLog = !0;
    function ce() {
      {
        if (B === 0) {
          W = console.log, q = console.info, ne = console.warn, re = console.error, X = console.group, j = console.groupCollapsed, ie = console.groupEnd;
          var ve = {
            configurable: !0,
            enumerable: !0,
            value: fe,
            writable: !0
          };
          Object.defineProperties(console, {
            info: ve,
            log: ve,
            warn: ve,
            error: ve,
            group: ve,
            groupCollapsed: ve,
            groupEnd: ve
          });
        }
        B++;
      }
    }
    function me() {
      {
        if (B--, B === 0) {
          var ve = {
            configurable: !0,
            enumerable: !0,
            writable: !0
          };
          Object.defineProperties(console, {
            log: te({}, ve, {
              value: W
            }),
            info: te({}, ve, {
              value: q
            }),
            warn: te({}, ve, {
              value: ne
            }),
            error: te({}, ve, {
              value: re
            }),
            group: te({}, ve, {
              value: X
            }),
            groupCollapsed: te({}, ve, {
              value: j
            }),
            groupEnd: te({}, ve, {
              value: ie
            })
          });
        }
        B < 0 && F("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
      }
    }
    var ge = L.ReactCurrentDispatcher, de;
    function pe(ve, We, pt) {
      {
        if (de === void 0)
          try {
            throw Error();
          } catch (mn) {
            var Ot = mn.stack.trim().match(/\n( *(at )?)/);
            de = Ot && Ot[1] || "";
          }
        return `
` + de + ve;
      }
    }
    var be = !1, Ce;
    {
      var Re = typeof WeakMap == "function" ? WeakMap : Map;
      Ce = new Re();
    }
    function ue(ve, We) {
      if (!ve || be)
        return "";
      {
        var pt = Ce.get(ve);
        if (pt !== void 0)
          return pt;
      }
      var Ot;
      be = !0;
      var mn = Error.prepareStackTrace;
      Error.prepareStackTrace = void 0;
      var Le;
      Le = ge.current, ge.current = null, ce();
      try {
        if (We) {
          var ke = function() {
            throw Error();
          };
          if (Object.defineProperty(ke.prototype, "props", {
            set: function() {
              throw Error();
            }
          }), typeof Reflect == "object" && Reflect.construct) {
            try {
              Reflect.construct(ke, []);
            } catch (xn) {
              Ot = xn;
            }
            Reflect.construct(ve, [], ke);
          } else {
            try {
              ke.call();
            } catch (xn) {
              Ot = xn;
            }
            ve.call(ke.prototype);
          }
        } else {
          try {
            throw Error();
          } catch (xn) {
            Ot = xn;
          }
          ve();
        }
      } catch (xn) {
        if (xn && Ot && typeof xn.stack == "string") {
          for (var Ze = xn.stack.split(`
`), Gt = Ot.stack.split(`
`), Bt = Ze.length - 1, Qt = Gt.length - 1; Bt >= 1 && Qt >= 0 && Ze[Bt] !== Gt[Qt]; )
            Qt--;
          for (; Bt >= 1 && Qt >= 0; Bt--, Qt--)
            if (Ze[Bt] !== Gt[Qt]) {
              if (Bt !== 1 || Qt !== 1)
                do
                  if (Bt--, Qt--, Qt < 0 || Ze[Bt] !== Gt[Qt]) {
                    var Hn = `
` + Ze[Bt].replace(" at new ", " at ");
                    return ve.displayName && Hn.includes("<anonymous>") && (Hn = Hn.replace("<anonymous>", ve.displayName)), typeof ve == "function" && Ce.set(ve, Hn), Hn;
                  }
                while (Bt >= 1 && Qt >= 0);
              break;
            }
        }
      } finally {
        be = !1, ge.current = Le, me(), Error.prepareStackTrace = mn;
      }
      var Nr = ve ? ve.displayName || ve.name : "", Wo = Nr ? pe(Nr) : "";
      return typeof ve == "function" && Ce.set(ve, Wo), Wo;
    }
    function we(ve, We, pt) {
      return ue(ve, !1);
    }
    function _e(ve) {
      var We = ve.prototype;
      return !!(We && We.isReactComponent);
    }
    function He(ve, We, pt) {
      if (ve == null)
        return "";
      if (typeof ve == "function")
        return ue(ve, _e(ve));
      if (typeof ve == "string")
        return pe(ve);
      switch (ve) {
        case v:
          return pe("Suspense");
        case y:
          return pe("SuspenseList");
      }
      if (typeof ve == "object")
        switch (ve.$$typeof) {
          case m:
            return we(ve.render);
          case C:
            return He(ve.type, We, pt);
          case w: {
            var Ot = ve, mn = Ot._payload, Le = Ot._init;
            try {
              return He(Le(mn), We, pt);
            } catch {
            }
          }
        }
      return "";
    }
    var et = Object.prototype.hasOwnProperty, Ne = {}, rt = L.ReactDebugCurrentFrame;
    function it(ve) {
      if (ve) {
        var We = ve._owner, pt = He(ve.type, ve._source, We ? We.type : null);
        rt.setExtraStackFrame(pt);
      } else
        rt.setExtraStackFrame(null);
    }
    function wt(ve, We, pt, Ot, mn) {
      {
        var Le = Function.call.bind(et);
        for (var ke in ve)
          if (Le(ve, ke)) {
            var Ze = void 0;
            try {
              if (typeof ve[ke] != "function") {
                var Gt = Error((Ot || "React class") + ": " + pt + " type `" + ke + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof ve[ke] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                throw Gt.name = "Invariant Violation", Gt;
              }
              Ze = ve[ke](We, ke, Ot, pt, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
            } catch (Bt) {
              Ze = Bt;
            }
            Ze && !(Ze instanceof Error) && (it(mn), F("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", Ot || "React class", pt, ke, typeof Ze), it(null)), Ze instanceof Error && !(Ze.message in Ne) && (Ne[Ze.message] = !0, it(mn), F("Failed %s type: %s", pt, Ze.message), it(null));
          }
      }
    }
    var gt = Array.isArray;
    function ot(ve) {
      return gt(ve);
    }
    function jt(ve) {
      {
        var We = typeof Symbol == "function" && Symbol.toStringTag, pt = We && ve[Symbol.toStringTag] || ve.constructor.name || "Object";
        return pt;
      }
    }
    function ct(ve) {
      try {
        return Tt(ve), !1;
      } catch {
        return !0;
      }
    }
    function Tt(ve) {
      return "" + ve;
    }
    function Rt(ve) {
      if (ct(ve))
        return F("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", jt(ve)), Tt(ve);
    }
    var Lt = L.ReactCurrentOwner, vt = {
      key: !0,
      ref: !0,
      __self: !0,
      __source: !0
    }, Qe, Oe;
    function Me(ve) {
      if (et.call(ve, "ref")) {
        var We = Object.getOwnPropertyDescriptor(ve, "ref").get;
        if (We && We.isReactWarning)
          return !1;
      }
      return ve.ref !== void 0;
    }
    function ht(ve) {
      if (et.call(ve, "key")) {
        var We = Object.getOwnPropertyDescriptor(ve, "key").get;
        if (We && We.isReactWarning)
          return !1;
      }
      return ve.key !== void 0;
    }
    function xt(ve, We) {
      typeof ve.ref == "string" && Lt.current;
    }
    function zt(ve, We) {
      {
        var pt = function() {
          Qe || (Qe = !0, F("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", We));
        };
        pt.isReactWarning = !0, Object.defineProperty(ve, "key", {
          get: pt,
          configurable: !0
        });
      }
    }
    function bt(ve, We) {
      {
        var pt = function() {
          Oe || (Oe = !0, F("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", We));
        };
        pt.isReactWarning = !0, Object.defineProperty(ve, "ref", {
          get: pt,
          configurable: !0
        });
      }
    }
    var Ge = function(ve, We, pt, Ot, mn, Le, ke) {
      var Ze = {
        // This tag allows us to uniquely identify this as a React Element
        $$typeof: t,
        // Built-in properties that belong on the element
        type: ve,
        key: We,
        ref: pt,
        props: ke,
        // Record the component responsible for creating this element.
        _owner: Le
      };
      return Ze._store = {}, Object.defineProperty(Ze._store, "validated", {
        configurable: !1,
        enumerable: !1,
        writable: !0,
        value: !1
      }), Object.defineProperty(Ze, "_self", {
        configurable: !1,
        enumerable: !1,
        writable: !1,
        value: Ot
      }), Object.defineProperty(Ze, "_source", {
        configurable: !1,
        enumerable: !1,
        writable: !1,
        value: mn
      }), Object.freeze && (Object.freeze(Ze.props), Object.freeze(Ze)), Ze;
    };
    function Et(ve, We, pt, Ot, mn) {
      {
        var Le, ke = {}, Ze = null, Gt = null;
        pt !== void 0 && (Rt(pt), Ze = "" + pt), ht(We) && (Rt(We.key), Ze = "" + We.key), Me(We) && (Gt = We.ref, xt(We, mn));
        for (Le in We)
          et.call(We, Le) && !vt.hasOwnProperty(Le) && (ke[Le] = We[Le]);
        if (ve && ve.defaultProps) {
          var Bt = ve.defaultProps;
          for (Le in Bt)
            ke[Le] === void 0 && (ke[Le] = Bt[Le]);
        }
        if (Ze || Gt) {
          var Qt = typeof ve == "function" ? ve.displayName || ve.name || "Unknown" : ve;
          Ze && zt(ke, Qt), Gt && bt(ke, Qt);
        }
        return Ge(ve, Ze, Gt, mn, Ot, Lt.current, ke);
      }
    }
    var At = L.ReactCurrentOwner, pn = L.ReactDebugCurrentFrame;
    function fn(ve) {
      if (ve) {
        var We = ve._owner, pt = He(ve.type, ve._source, We ? We.type : null);
        pn.setExtraStackFrame(pt);
      } else
        pn.setExtraStackFrame(null);
    }
    var hr;
    hr = !1;
    function qn(ve) {
      return typeof ve == "object" && ve !== null && ve.$$typeof === t;
    }
    function Dr() {
      {
        if (At.current) {
          var ve = Y(At.current.type);
          if (ve)
            return `

Check the render method of \`` + ve + "`.";
        }
        return "";
      }
    }
    function mr(ve) {
      return "";
    }
    var Po = {};
    function Mo(ve) {
      {
        var We = Dr();
        if (!We) {
          var pt = typeof ve == "string" ? ve : ve.displayName || ve.name;
          pt && (We = `

Check the top-level render call using <` + pt + ">.");
        }
        return We;
      }
    }
    function Ut(ve, We) {
      {
        if (!ve._store || ve._store.validated || ve.key != null)
          return;
        ve._store.validated = !0;
        var pt = Mo(We);
        if (Po[pt])
          return;
        Po[pt] = !0;
        var Ot = "";
        ve && ve._owner && ve._owner !== At.current && (Ot = " It was passed a child from " + Y(ve._owner.type) + "."), fn(ve), F('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', pt, Ot), fn(null);
      }
    }
    function dr(ve, We) {
      {
        if (typeof ve != "object")
          return;
        if (ot(ve))
          for (var pt = 0; pt < ve.length; pt++) {
            var Ot = ve[pt];
            qn(Ot) && Ut(Ot, We);
          }
        else if (qn(ve))
          ve._store && (ve._store.validated = !0);
        else if (ve) {
          var mn = k(ve);
          if (typeof mn == "function" && mn !== ve.entries)
            for (var Le = mn.call(ve), ke; !(ke = Le.next()).done; )
              qn(ke.value) && Ut(ke.value, We);
        }
      }
    }
    function Ct(ve) {
      {
        var We = ve.type;
        if (We == null || typeof We == "string")
          return;
        var pt;
        if (typeof We == "function")
          pt = We.propTypes;
        else if (typeof We == "object" && (We.$$typeof === m || // Note: Memo only checks outer props here.
        // Inner props are checked in the reconciler.
        We.$$typeof === C))
          pt = We.propTypes;
        else
          return;
        if (pt) {
          var Ot = Y(We);
          wt(pt, ve.props, "prop", Ot, ve);
        } else if (We.PropTypes !== void 0 && !hr) {
          hr = !0;
          var mn = Y(We);
          F("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?", mn || "Unknown");
        }
        typeof We.getDefaultProps == "function" && !We.getDefaultProps.isReactClassApproved && F("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
      }
    }
    function St(ve) {
      {
        for (var We = Object.keys(ve.props), pt = 0; pt < We.length; pt++) {
          var Ot = We[pt];
          if (Ot !== "children" && Ot !== "key") {
            fn(ve), F("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", Ot), fn(null);
            break;
          }
        }
        ve.ref !== null && (fn(ve), F("Invalid attribute `ref` supplied to `React.Fragment`."), fn(null));
      }
    }
    var en = {};
    function on(ve, We, pt, Ot, mn, Le) {
      {
        var ke = I(ve);
        if (!ke) {
          var Ze = "";
          (ve === void 0 || typeof ve == "object" && ve !== null && Object.keys(ve).length === 0) && (Ze += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.");
          var Gt = mr();
          Gt ? Ze += Gt : Ze += Dr();
          var Bt;
          ve === null ? Bt = "null" : ot(ve) ? Bt = "array" : ve !== void 0 && ve.$$typeof === t ? (Bt = "<" + (Y(ve.type) || "Unknown") + " />", Ze = " Did you accidentally export a JSX literal instead of a component?") : Bt = typeof ve, F("React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", Bt, Ze);
        }
        var Qt = Et(ve, We, pt, mn, Le);
        if (Qt == null)
          return Qt;
        if (ke) {
          var Hn = We.children;
          if (Hn !== void 0)
            if (Ot)
              if (ot(Hn)) {
                for (var Nr = 0; Nr < Hn.length; Nr++)
                  dr(Hn[Nr], ve);
                Object.freeze && Object.freeze(Hn);
              } else
                F("React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.");
            else
              dr(Hn, ve);
        }
        if (et.call(We, "key")) {
          var Wo = Y(ve), xn = Object.keys(We).filter(function(Ta) {
            return Ta !== "key";
          }), Rn = xn.length > 0 ? "{key: someKey, " + xn.join(": ..., ") + ": ...}" : "{key: someKey}";
          if (!en[Wo + Rn]) {
            var ci = xn.length > 0 ? "{" + xn.join(": ..., ") + ": ...}" : "{}";
            F(`A props object containing a "key" prop is being spread into JSX:
  let props = %s;
  <%s {...props} />
React keys must be passed directly to JSX without using spread:
  let props = %s;
  <%s key={someKey} {...props} />`, Rn, Wo, ci, Wo), en[Wo + Rn] = !0;
          }
        }
        return ve === i ? St(Qt) : Ct(Qt), Qt;
      }
    }
    function zn(ve, We, pt) {
      return on(ve, We, pt, !0);
    }
    function Ar(ve, We, pt) {
      return on(ve, We, pt, !1);
    }
    var ro = Ar, mo = zn;
    bb.Fragment = i, bb.jsx = ro, bb.jsxs = mo;
  }()), bb;
}
process.env.NODE_ENV === "production" ? YO.exports = e3() : YO.exports = t3();
var A = YO.exports, Lb = {}, QO = { exports: {} }, Ua = {}, zx = { exports: {} }, cO = {};
/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var sL;
function n3() {
  return sL || (sL = 1, function(e) {
    function t(ne, re) {
      var X = ne.length;
      ne.push(re);
      e: for (; 0 < X; ) {
        var j = X - 1 >>> 1, ie = ne[j];
        if (0 < s(ie, re)) ne[j] = re, ne[X] = ie, X = j;
        else break e;
      }
    }
    function n(ne) {
      return ne.length === 0 ? null : ne[0];
    }
    function i(ne) {
      if (ne.length === 0) return null;
      var re = ne[0], X = ne.pop();
      if (X !== re) {
        ne[0] = X;
        e: for (var j = 0, ie = ne.length, fe = ie >>> 1; j < fe; ) {
          var ce = 2 * (j + 1) - 1, me = ne[ce], ge = ce + 1, de = ne[ge];
          if (0 > s(me, X)) ge < ie && 0 > s(de, me) ? (ne[j] = de, ne[ge] = X, j = ge) : (ne[j] = me, ne[ce] = X, j = ce);
          else if (ge < ie && 0 > s(de, X)) ne[j] = de, ne[ge] = X, j = ge;
          else break e;
        }
      }
      return re;
    }
    function s(ne, re) {
      var X = ne.sortIndex - re.sortIndex;
      return X !== 0 ? X : ne.id - re.id;
    }
    if (typeof performance == "object" && typeof performance.now == "function") {
      var u = performance;
      e.unstable_now = function() {
        return u.now();
      };
    } else {
      var d = Date, p = d.now();
      e.unstable_now = function() {
        return d.now() - p;
      };
    }
    var m = [], v = [], y = 1, C = null, w = 3, R = !1, O = !1, E = !1, k = typeof setTimeout == "function" ? setTimeout : null, L = typeof clearTimeout == "function" ? clearTimeout : null, F = typeof setImmediate < "u" ? setImmediate : null;
    typeof navigator < "u" && navigator.scheduling !== void 0 && navigator.scheduling.isInputPending !== void 0 && navigator.scheduling.isInputPending.bind(navigator.scheduling);
    function _(ne) {
      for (var re = n(v); re !== null; ) {
        if (re.callback === null) i(v);
        else if (re.startTime <= ne) i(v), re.sortIndex = re.expirationTime, t(m, re);
        else break;
        re = n(v);
      }
    }
    function P(ne) {
      if (E = !1, _(ne), !O) if (n(m) !== null) O = !0, W(D);
      else {
        var re = n(v);
        re !== null && q(P, re.startTime - ne);
      }
    }
    function D(ne, re) {
      O = !1, E && (E = !1, L(Q), Q = -1), R = !0;
      var X = w;
      try {
        for (_(re), C = n(m); C !== null && (!(C.expirationTime > re) || ne && !U()); ) {
          var j = C.callback;
          if (typeof j == "function") {
            C.callback = null, w = C.priorityLevel;
            var ie = j(C.expirationTime <= re);
            re = e.unstable_now(), typeof ie == "function" ? C.callback = ie : C === n(m) && i(m), _(re);
          } else i(m);
          C = n(m);
        }
        if (C !== null) var fe = !0;
        else {
          var ce = n(v);
          ce !== null && q(P, ce.startTime - re), fe = !1;
        }
        return fe;
      } finally {
        C = null, w = X, R = !1;
      }
    }
    var z = !1, K = null, Q = -1, H = 5, I = -1;
    function U() {
      return !(e.unstable_now() - I < H);
    }
    function G() {
      if (K !== null) {
        var ne = e.unstable_now();
        I = ne;
        var re = !0;
        try {
          re = K(!0, ne);
        } finally {
          re ? Y() : (z = !1, K = null);
        }
      } else z = !1;
    }
    var Y;
    if (typeof F == "function") Y = function() {
      F(G);
    };
    else if (typeof MessageChannel < "u") {
      var te = new MessageChannel(), B = te.port2;
      te.port1.onmessage = G, Y = function() {
        B.postMessage(null);
      };
    } else Y = function() {
      k(G, 0);
    };
    function W(ne) {
      K = ne, z || (z = !0, Y());
    }
    function q(ne, re) {
      Q = k(function() {
        ne(e.unstable_now());
      }, re);
    }
    e.unstable_IdlePriority = 5, e.unstable_ImmediatePriority = 1, e.unstable_LowPriority = 4, e.unstable_NormalPriority = 3, e.unstable_Profiling = null, e.unstable_UserBlockingPriority = 2, e.unstable_cancelCallback = function(ne) {
      ne.callback = null;
    }, e.unstable_continueExecution = function() {
      O || R || (O = !0, W(D));
    }, e.unstable_forceFrameRate = function(ne) {
      0 > ne || 125 < ne ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : H = 0 < ne ? Math.floor(1e3 / ne) : 5;
    }, e.unstable_getCurrentPriorityLevel = function() {
      return w;
    }, e.unstable_getFirstCallbackNode = function() {
      return n(m);
    }, e.unstable_next = function(ne) {
      switch (w) {
        case 1:
        case 2:
        case 3:
          var re = 3;
          break;
        default:
          re = w;
      }
      var X = w;
      w = re;
      try {
        return ne();
      } finally {
        w = X;
      }
    }, e.unstable_pauseExecution = function() {
    }, e.unstable_requestPaint = function() {
    }, e.unstable_runWithPriority = function(ne, re) {
      switch (ne) {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
          break;
        default:
          ne = 3;
      }
      var X = w;
      w = ne;
      try {
        return re();
      } finally {
        w = X;
      }
    }, e.unstable_scheduleCallback = function(ne, re, X) {
      var j = e.unstable_now();
      switch (typeof X == "object" && X !== null ? (X = X.delay, X = typeof X == "number" && 0 < X ? j + X : j) : X = j, ne) {
        case 1:
          var ie = -1;
          break;
        case 2:
          ie = 250;
          break;
        case 5:
          ie = 1073741823;
          break;
        case 4:
          ie = 1e4;
          break;
        default:
          ie = 5e3;
      }
      return ie = X + ie, ne = { id: y++, callback: re, priorityLevel: ne, startTime: X, expirationTime: ie, sortIndex: -1 }, X > j ? (ne.sortIndex = X, t(v, ne), n(m) === null && ne === n(v) && (E ? (L(Q), Q = -1) : E = !0, q(P, X - j))) : (ne.sortIndex = ie, t(m, ne), O || R || (O = !0, W(D))), ne;
    }, e.unstable_shouldYield = U, e.unstable_wrapCallback = function(ne) {
      var re = w;
      return function() {
        var X = w;
        w = re;
        try {
          return ne.apply(this, arguments);
        } finally {
          w = X;
        }
      };
    };
  }(cO)), cO;
}
var dO = {};
/**
 * @license React
 * scheduler.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var lL;
function r3() {
  return lL || (lL = 1, function(e) {
    process.env.NODE_ENV !== "production" && function() {
      typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
      var t = !1, n = 5;
      function i(Oe, Me) {
        var ht = Oe.length;
        Oe.push(Me), d(Oe, Me, ht);
      }
      function s(Oe) {
        return Oe.length === 0 ? null : Oe[0];
      }
      function u(Oe) {
        if (Oe.length === 0)
          return null;
        var Me = Oe[0], ht = Oe.pop();
        return ht !== Me && (Oe[0] = ht, p(Oe, ht, 0)), Me;
      }
      function d(Oe, Me, ht) {
        for (var xt = ht; xt > 0; ) {
          var zt = xt - 1 >>> 1, bt = Oe[zt];
          if (m(bt, Me) > 0)
            Oe[zt] = Me, Oe[xt] = bt, xt = zt;
          else
            return;
        }
      }
      function p(Oe, Me, ht) {
        for (var xt = ht, zt = Oe.length, bt = zt >>> 1; xt < bt; ) {
          var Ge = (xt + 1) * 2 - 1, Et = Oe[Ge], At = Ge + 1, pn = Oe[At];
          if (m(Et, Me) < 0)
            At < zt && m(pn, Et) < 0 ? (Oe[xt] = pn, Oe[At] = Me, xt = At) : (Oe[xt] = Et, Oe[Ge] = Me, xt = Ge);
          else if (At < zt && m(pn, Me) < 0)
            Oe[xt] = pn, Oe[At] = Me, xt = At;
          else
            return;
        }
      }
      function m(Oe, Me) {
        var ht = Oe.sortIndex - Me.sortIndex;
        return ht !== 0 ? ht : Oe.id - Me.id;
      }
      var v = 1, y = 2, C = 3, w = 4, R = 5;
      function O(Oe, Me) {
      }
      var E = typeof performance == "object" && typeof performance.now == "function";
      if (E) {
        var k = performance;
        e.unstable_now = function() {
          return k.now();
        };
      } else {
        var L = Date, F = L.now();
        e.unstable_now = function() {
          return L.now() - F;
        };
      }
      var _ = 1073741823, P = -1, D = 250, z = 5e3, K = 1e4, Q = _, H = [], I = [], U = 1, G = null, Y = C, te = !1, B = !1, W = !1, q = typeof setTimeout == "function" ? setTimeout : null, ne = typeof clearTimeout == "function" ? clearTimeout : null, re = typeof setImmediate < "u" ? setImmediate : null;
      typeof navigator < "u" && navigator.scheduling !== void 0 && navigator.scheduling.isInputPending !== void 0 && navigator.scheduling.isInputPending.bind(navigator.scheduling);
      function X(Oe) {
        for (var Me = s(I); Me !== null; ) {
          if (Me.callback === null)
            u(I);
          else if (Me.startTime <= Oe)
            u(I), Me.sortIndex = Me.expirationTime, i(H, Me);
          else
            return;
          Me = s(I);
        }
      }
      function j(Oe) {
        if (W = !1, X(Oe), !B)
          if (s(H) !== null)
            B = !0, Tt(ie);
          else {
            var Me = s(I);
            Me !== null && Rt(j, Me.startTime - Oe);
          }
      }
      function ie(Oe, Me) {
        B = !1, W && (W = !1, Lt()), te = !0;
        var ht = Y;
        try {
          var xt;
          if (!t) return fe(Oe, Me);
        } finally {
          G = null, Y = ht, te = !1;
        }
      }
      function fe(Oe, Me) {
        var ht = Me;
        for (X(ht), G = s(H); G !== null && !(G.expirationTime > ht && (!Oe || rt())); ) {
          var xt = G.callback;
          if (typeof xt == "function") {
            G.callback = null, Y = G.priorityLevel;
            var zt = G.expirationTime <= ht, bt = xt(zt);
            ht = e.unstable_now(), typeof bt == "function" ? G.callback = bt : G === s(H) && u(H), X(ht);
          } else
            u(H);
          G = s(H);
        }
        if (G !== null)
          return !0;
        var Ge = s(I);
        return Ge !== null && Rt(j, Ge.startTime - ht), !1;
      }
      function ce(Oe, Me) {
        switch (Oe) {
          case v:
          case y:
          case C:
          case w:
          case R:
            break;
          default:
            Oe = C;
        }
        var ht = Y;
        Y = Oe;
        try {
          return Me();
        } finally {
          Y = ht;
        }
      }
      function me(Oe) {
        var Me;
        switch (Y) {
          case v:
          case y:
          case C:
            Me = C;
            break;
          default:
            Me = Y;
            break;
        }
        var ht = Y;
        Y = Me;
        try {
          return Oe();
        } finally {
          Y = ht;
        }
      }
      function ge(Oe) {
        var Me = Y;
        return function() {
          var ht = Y;
          Y = Me;
          try {
            return Oe.apply(this, arguments);
          } finally {
            Y = ht;
          }
        };
      }
      function de(Oe, Me, ht) {
        var xt = e.unstable_now(), zt;
        if (typeof ht == "object" && ht !== null) {
          var bt = ht.delay;
          typeof bt == "number" && bt > 0 ? zt = xt + bt : zt = xt;
        } else
          zt = xt;
        var Ge;
        switch (Oe) {
          case v:
            Ge = P;
            break;
          case y:
            Ge = D;
            break;
          case R:
            Ge = Q;
            break;
          case w:
            Ge = K;
            break;
          case C:
          default:
            Ge = z;
            break;
        }
        var Et = zt + Ge, At = {
          id: U++,
          callback: Me,
          priorityLevel: Oe,
          startTime: zt,
          expirationTime: Et,
          sortIndex: -1
        };
        return zt > xt ? (At.sortIndex = zt, i(I, At), s(H) === null && At === s(I) && (W ? Lt() : W = !0, Rt(j, zt - xt))) : (At.sortIndex = Et, i(H, At), !B && !te && (B = !0, Tt(ie))), At;
      }
      function pe() {
      }
      function be() {
        !B && !te && (B = !0, Tt(ie));
      }
      function Ce() {
        return s(H);
      }
      function Re(Oe) {
        Oe.callback = null;
      }
      function ue() {
        return Y;
      }
      var we = !1, _e = null, He = -1, et = n, Ne = -1;
      function rt() {
        var Oe = e.unstable_now() - Ne;
        return !(Oe < et);
      }
      function it() {
      }
      function wt(Oe) {
        if (Oe < 0 || Oe > 125) {
          console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported");
          return;
        }
        Oe > 0 ? et = Math.floor(1e3 / Oe) : et = n;
      }
      var gt = function() {
        if (_e !== null) {
          var Oe = e.unstable_now();
          Ne = Oe;
          var Me = !0, ht = !0;
          try {
            ht = _e(Me, Oe);
          } finally {
            ht ? ot() : (we = !1, _e = null);
          }
        } else
          we = !1;
      }, ot;
      if (typeof re == "function")
        ot = function() {
          re(gt);
        };
      else if (typeof MessageChannel < "u") {
        var jt = new MessageChannel(), ct = jt.port2;
        jt.port1.onmessage = gt, ot = function() {
          ct.postMessage(null);
        };
      } else
        ot = function() {
          q(gt, 0);
        };
      function Tt(Oe) {
        _e = Oe, we || (we = !0, ot());
      }
      function Rt(Oe, Me) {
        He = q(function() {
          Oe(e.unstable_now());
        }, Me);
      }
      function Lt() {
        ne(He), He = -1;
      }
      var vt = it, Qe = null;
      e.unstable_IdlePriority = R, e.unstable_ImmediatePriority = v, e.unstable_LowPriority = w, e.unstable_NormalPriority = C, e.unstable_Profiling = Qe, e.unstable_UserBlockingPriority = y, e.unstable_cancelCallback = Re, e.unstable_continueExecution = be, e.unstable_forceFrameRate = wt, e.unstable_getCurrentPriorityLevel = ue, e.unstable_getFirstCallbackNode = Ce, e.unstable_next = me, e.unstable_pauseExecution = pe, e.unstable_requestPaint = vt, e.unstable_runWithPriority = ce, e.unstable_scheduleCallback = de, e.unstable_shouldYield = rt, e.unstable_wrapCallback = ge, typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
    }();
  }(dO)), dO;
}
var uL;
function n$() {
  return uL || (uL = 1, process.env.NODE_ENV === "production" ? zx.exports = n3() : zx.exports = r3()), zx.exports;
}
/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var cL;
function o3() {
  if (cL) return Ua;
  cL = 1;
  var e = S, t = n$();
  function n(l) {
    for (var c = "https://reactjs.org/docs/error-decoder.html?invariant=" + l, g = 1; g < arguments.length; g++) c += "&args[]=" + encodeURIComponent(arguments[g]);
    return "Minified React error #" + l + "; visit " + c + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
  }
  var i = /* @__PURE__ */ new Set(), s = {};
  function u(l, c) {
    d(l, c), d(l + "Capture", c);
  }
  function d(l, c) {
    for (s[l] = c, l = 0; l < c.length; l++) i.add(c[l]);
  }
  var p = !(typeof window > "u" || typeof window.document > "u" || typeof window.document.createElement > "u"), m = Object.prototype.hasOwnProperty, v = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/, y = {}, C = {};
  function w(l) {
    return m.call(C, l) ? !0 : m.call(y, l) ? !1 : v.test(l) ? C[l] = !0 : (y[l] = !0, !1);
  }
  function R(l, c, g, x) {
    if (g !== null && g.type === 0) return !1;
    switch (typeof c) {
      case "function":
      case "symbol":
        return !0;
      case "boolean":
        return x ? !1 : g !== null ? !g.acceptsBooleans : (l = l.toLowerCase().slice(0, 5), l !== "data-" && l !== "aria-");
      default:
        return !1;
    }
  }
  function O(l, c, g, x) {
    if (c === null || typeof c > "u" || R(l, c, g, x)) return !0;
    if (x) return !1;
    if (g !== null) switch (g.type) {
      case 3:
        return !c;
      case 4:
        return c === !1;
      case 5:
        return isNaN(c);
      case 6:
        return isNaN(c) || 1 > c;
    }
    return !1;
  }
  function E(l, c, g, x, M, $, oe) {
    this.acceptsBooleans = c === 2 || c === 3 || c === 4, this.attributeName = x, this.attributeNamespace = M, this.mustUseProperty = g, this.propertyName = l, this.type = c, this.sanitizeURL = $, this.removeEmptyString = oe;
  }
  var k = {};
  "children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(l) {
    k[l] = new E(l, 0, !1, l, null, !1, !1);
  }), [["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(l) {
    var c = l[0];
    k[c] = new E(c, 1, !1, l[1], null, !1, !1);
  }), ["contentEditable", "draggable", "spellCheck", "value"].forEach(function(l) {
    k[l] = new E(l, 2, !1, l.toLowerCase(), null, !1, !1);
  }), ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(l) {
    k[l] = new E(l, 2, !1, l, null, !1, !1);
  }), "allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(l) {
    k[l] = new E(l, 3, !1, l.toLowerCase(), null, !1, !1);
  }), ["checked", "multiple", "muted", "selected"].forEach(function(l) {
    k[l] = new E(l, 3, !0, l, null, !1, !1);
  }), ["capture", "download"].forEach(function(l) {
    k[l] = new E(l, 4, !1, l, null, !1, !1);
  }), ["cols", "rows", "size", "span"].forEach(function(l) {
    k[l] = new E(l, 6, !1, l, null, !1, !1);
  }), ["rowSpan", "start"].forEach(function(l) {
    k[l] = new E(l, 5, !1, l.toLowerCase(), null, !1, !1);
  });
  var L = /[\-:]([a-z])/g;
  function F(l) {
    return l[1].toUpperCase();
  }
  "accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(l) {
    var c = l.replace(
      L,
      F
    );
    k[c] = new E(c, 1, !1, l, null, !1, !1);
  }), "xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(l) {
    var c = l.replace(L, F);
    k[c] = new E(c, 1, !1, l, "http://www.w3.org/1999/xlink", !1, !1);
  }), ["xml:base", "xml:lang", "xml:space"].forEach(function(l) {
    var c = l.replace(L, F);
    k[c] = new E(c, 1, !1, l, "http://www.w3.org/XML/1998/namespace", !1, !1);
  }), ["tabIndex", "crossOrigin"].forEach(function(l) {
    k[l] = new E(l, 1, !1, l.toLowerCase(), null, !1, !1);
  }), k.xlinkHref = new E("xlinkHref", 1, !1, "xlink:href", "http://www.w3.org/1999/xlink", !0, !1), ["src", "href", "action", "formAction"].forEach(function(l) {
    k[l] = new E(l, 1, !1, l.toLowerCase(), null, !0, !0);
  });
  function _(l, c, g, x) {
    var M = k.hasOwnProperty(c) ? k[c] : null;
    (M !== null ? M.type !== 0 : x || !(2 < c.length) || c[0] !== "o" && c[0] !== "O" || c[1] !== "n" && c[1] !== "N") && (O(c, g, M, x) && (g = null), x || M === null ? w(c) && (g === null ? l.removeAttribute(c) : l.setAttribute(c, "" + g)) : M.mustUseProperty ? l[M.propertyName] = g === null ? M.type === 3 ? !1 : "" : g : (c = M.attributeName, x = M.attributeNamespace, g === null ? l.removeAttribute(c) : (M = M.type, g = M === 3 || M === 4 && g === !0 ? "" : "" + g, x ? l.setAttributeNS(x, c, g) : l.setAttribute(c, g))));
  }
  var P = e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, D = Symbol.for("react.element"), z = Symbol.for("react.portal"), K = Symbol.for("react.fragment"), Q = Symbol.for("react.strict_mode"), H = Symbol.for("react.profiler"), I = Symbol.for("react.provider"), U = Symbol.for("react.context"), G = Symbol.for("react.forward_ref"), Y = Symbol.for("react.suspense"), te = Symbol.for("react.suspense_list"), B = Symbol.for("react.memo"), W = Symbol.for("react.lazy"), q = Symbol.for("react.offscreen"), ne = Symbol.iterator;
  function re(l) {
    return l === null || typeof l != "object" ? null : (l = ne && l[ne] || l["@@iterator"], typeof l == "function" ? l : null);
  }
  var X = Object.assign, j;
  function ie(l) {
    if (j === void 0) try {
      throw Error();
    } catch (g) {
      var c = g.stack.trim().match(/\n( *(at )?)/);
      j = c && c[1] || "";
    }
    return `
` + j + l;
  }
  var fe = !1;
  function ce(l, c) {
    if (!l || fe) return "";
    fe = !0;
    var g = Error.prepareStackTrace;
    Error.prepareStackTrace = void 0;
    try {
      if (c) if (c = function() {
        throw Error();
      }, Object.defineProperty(c.prototype, "props", { set: function() {
        throw Error();
      } }), typeof Reflect == "object" && Reflect.construct) {
        try {
          Reflect.construct(c, []);
        } catch (je) {
          var x = je;
        }
        Reflect.construct(l, [], c);
      } else {
        try {
          c.call();
        } catch (je) {
          x = je;
        }
        l.call(c.prototype);
      }
      else {
        try {
          throw Error();
        } catch (je) {
          x = je;
        }
        l();
      }
    } catch (je) {
      if (je && x && typeof je.stack == "string") {
        for (var M = je.stack.split(`
`), $ = x.stack.split(`
`), oe = M.length - 1, he = $.length - 1; 1 <= oe && 0 <= he && M[oe] !== $[he]; ) he--;
        for (; 1 <= oe && 0 <= he; oe--, he--) if (M[oe] !== $[he]) {
          if (oe !== 1 || he !== 1)
            do
              if (oe--, he--, 0 > he || M[oe] !== $[he]) {
                var Se = `
` + M[oe].replace(" at new ", " at ");
                return l.displayName && Se.includes("<anonymous>") && (Se = Se.replace("<anonymous>", l.displayName)), Se;
              }
            while (1 <= oe && 0 <= he);
          break;
        }
      }
    } finally {
      fe = !1, Error.prepareStackTrace = g;
    }
    return (l = l ? l.displayName || l.name : "") ? ie(l) : "";
  }
  function me(l) {
    switch (l.tag) {
      case 5:
        return ie(l.type);
      case 16:
        return ie("Lazy");
      case 13:
        return ie("Suspense");
      case 19:
        return ie("SuspenseList");
      case 0:
      case 2:
      case 15:
        return l = ce(l.type, !1), l;
      case 11:
        return l = ce(l.type.render, !1), l;
      case 1:
        return l = ce(l.type, !0), l;
      default:
        return "";
    }
  }
  function ge(l) {
    if (l == null) return null;
    if (typeof l == "function") return l.displayName || l.name || null;
    if (typeof l == "string") return l;
    switch (l) {
      case K:
        return "Fragment";
      case z:
        return "Portal";
      case H:
        return "Profiler";
      case Q:
        return "StrictMode";
      case Y:
        return "Suspense";
      case te:
        return "SuspenseList";
    }
    if (typeof l == "object") switch (l.$$typeof) {
      case U:
        return (l.displayName || "Context") + ".Consumer";
      case I:
        return (l._context.displayName || "Context") + ".Provider";
      case G:
        var c = l.render;
        return l = l.displayName, l || (l = c.displayName || c.name || "", l = l !== "" ? "ForwardRef(" + l + ")" : "ForwardRef"), l;
      case B:
        return c = l.displayName || null, c !== null ? c : ge(l.type) || "Memo";
      case W:
        c = l._payload, l = l._init;
        try {
          return ge(l(c));
        } catch {
        }
    }
    return null;
  }
  function de(l) {
    var c = l.type;
    switch (l.tag) {
      case 24:
        return "Cache";
      case 9:
        return (c.displayName || "Context") + ".Consumer";
      case 10:
        return (c._context.displayName || "Context") + ".Provider";
      case 18:
        return "DehydratedFragment";
      case 11:
        return l = c.render, l = l.displayName || l.name || "", c.displayName || (l !== "" ? "ForwardRef(" + l + ")" : "ForwardRef");
      case 7:
        return "Fragment";
      case 5:
        return c;
      case 4:
        return "Portal";
      case 3:
        return "Root";
      case 6:
        return "Text";
      case 16:
        return ge(c);
      case 8:
        return c === Q ? "StrictMode" : "Mode";
      case 22:
        return "Offscreen";
      case 12:
        return "Profiler";
      case 21:
        return "Scope";
      case 13:
        return "Suspense";
      case 19:
        return "SuspenseList";
      case 25:
        return "TracingMarker";
      case 1:
      case 0:
      case 17:
      case 2:
      case 14:
      case 15:
        if (typeof c == "function") return c.displayName || c.name || null;
        if (typeof c == "string") return c;
    }
    return null;
  }
  function pe(l) {
    switch (typeof l) {
      case "boolean":
      case "number":
      case "string":
      case "undefined":
        return l;
      case "object":
        return l;
      default:
        return "";
    }
  }
  function be(l) {
    var c = l.type;
    return (l = l.nodeName) && l.toLowerCase() === "input" && (c === "checkbox" || c === "radio");
  }
  function Ce(l) {
    var c = be(l) ? "checked" : "value", g = Object.getOwnPropertyDescriptor(l.constructor.prototype, c), x = "" + l[c];
    if (!l.hasOwnProperty(c) && typeof g < "u" && typeof g.get == "function" && typeof g.set == "function") {
      var M = g.get, $ = g.set;
      return Object.defineProperty(l, c, { configurable: !0, get: function() {
        return M.call(this);
      }, set: function(oe) {
        x = "" + oe, $.call(this, oe);
      } }), Object.defineProperty(l, c, { enumerable: g.enumerable }), { getValue: function() {
        return x;
      }, setValue: function(oe) {
        x = "" + oe;
      }, stopTracking: function() {
        l._valueTracker = null, delete l[c];
      } };
    }
  }
  function Re(l) {
    l._valueTracker || (l._valueTracker = Ce(l));
  }
  function ue(l) {
    if (!l) return !1;
    var c = l._valueTracker;
    if (!c) return !0;
    var g = c.getValue(), x = "";
    return l && (x = be(l) ? l.checked ? "true" : "false" : l.value), l = x, l !== g ? (c.setValue(l), !0) : !1;
  }
  function we(l) {
    if (l = l || (typeof document < "u" ? document : void 0), typeof l > "u") return null;
    try {
      return l.activeElement || l.body;
    } catch {
      return l.body;
    }
  }
  function _e(l, c) {
    var g = c.checked;
    return X({}, c, { defaultChecked: void 0, defaultValue: void 0, value: void 0, checked: g ?? l._wrapperState.initialChecked });
  }
  function He(l, c) {
    var g = c.defaultValue == null ? "" : c.defaultValue, x = c.checked != null ? c.checked : c.defaultChecked;
    g = pe(c.value != null ? c.value : g), l._wrapperState = { initialChecked: x, initialValue: g, controlled: c.type === "checkbox" || c.type === "radio" ? c.checked != null : c.value != null };
  }
  function et(l, c) {
    c = c.checked, c != null && _(l, "checked", c, !1);
  }
  function Ne(l, c) {
    et(l, c);
    var g = pe(c.value), x = c.type;
    if (g != null) x === "number" ? (g === 0 && l.value === "" || l.value != g) && (l.value = "" + g) : l.value !== "" + g && (l.value = "" + g);
    else if (x === "submit" || x === "reset") {
      l.removeAttribute("value");
      return;
    }
    c.hasOwnProperty("value") ? it(l, c.type, g) : c.hasOwnProperty("defaultValue") && it(l, c.type, pe(c.defaultValue)), c.checked == null && c.defaultChecked != null && (l.defaultChecked = !!c.defaultChecked);
  }
  function rt(l, c, g) {
    if (c.hasOwnProperty("value") || c.hasOwnProperty("defaultValue")) {
      var x = c.type;
      if (!(x !== "submit" && x !== "reset" || c.value !== void 0 && c.value !== null)) return;
      c = "" + l._wrapperState.initialValue, g || c === l.value || (l.value = c), l.defaultValue = c;
    }
    g = l.name, g !== "" && (l.name = ""), l.defaultChecked = !!l._wrapperState.initialChecked, g !== "" && (l.name = g);
  }
  function it(l, c, g) {
    (c !== "number" || we(l.ownerDocument) !== l) && (g == null ? l.defaultValue = "" + l._wrapperState.initialValue : l.defaultValue !== "" + g && (l.defaultValue = "" + g));
  }
  var wt = Array.isArray;
  function gt(l, c, g, x) {
    if (l = l.options, c) {
      c = {};
      for (var M = 0; M < g.length; M++) c["$" + g[M]] = !0;
      for (g = 0; g < l.length; g++) M = c.hasOwnProperty("$" + l[g].value), l[g].selected !== M && (l[g].selected = M), M && x && (l[g].defaultSelected = !0);
    } else {
      for (g = "" + pe(g), c = null, M = 0; M < l.length; M++) {
        if (l[M].value === g) {
          l[M].selected = !0, x && (l[M].defaultSelected = !0);
          return;
        }
        c !== null || l[M].disabled || (c = l[M]);
      }
      c !== null && (c.selected = !0);
    }
  }
  function ot(l, c) {
    if (c.dangerouslySetInnerHTML != null) throw Error(n(91));
    return X({}, c, { value: void 0, defaultValue: void 0, children: "" + l._wrapperState.initialValue });
  }
  function jt(l, c) {
    var g = c.value;
    if (g == null) {
      if (g = c.children, c = c.defaultValue, g != null) {
        if (c != null) throw Error(n(92));
        if (wt(g)) {
          if (1 < g.length) throw Error(n(93));
          g = g[0];
        }
        c = g;
      }
      c == null && (c = ""), g = c;
    }
    l._wrapperState = { initialValue: pe(g) };
  }
  function ct(l, c) {
    var g = pe(c.value), x = pe(c.defaultValue);
    g != null && (g = "" + g, g !== l.value && (l.value = g), c.defaultValue == null && l.defaultValue !== g && (l.defaultValue = g)), x != null && (l.defaultValue = "" + x);
  }
  function Tt(l) {
    var c = l.textContent;
    c === l._wrapperState.initialValue && c !== "" && c !== null && (l.value = c);
  }
  function Rt(l) {
    switch (l) {
      case "svg":
        return "http://www.w3.org/2000/svg";
      case "math":
        return "http://www.w3.org/1998/Math/MathML";
      default:
        return "http://www.w3.org/1999/xhtml";
    }
  }
  function Lt(l, c) {
    return l == null || l === "http://www.w3.org/1999/xhtml" ? Rt(c) : l === "http://www.w3.org/2000/svg" && c === "foreignObject" ? "http://www.w3.org/1999/xhtml" : l;
  }
  var vt, Qe = function(l) {
    return typeof MSApp < "u" && MSApp.execUnsafeLocalFunction ? function(c, g, x, M) {
      MSApp.execUnsafeLocalFunction(function() {
        return l(c, g, x, M);
      });
    } : l;
  }(function(l, c) {
    if (l.namespaceURI !== "http://www.w3.org/2000/svg" || "innerHTML" in l) l.innerHTML = c;
    else {
      for (vt = vt || document.createElement("div"), vt.innerHTML = "<svg>" + c.valueOf().toString() + "</svg>", c = vt.firstChild; l.firstChild; ) l.removeChild(l.firstChild);
      for (; c.firstChild; ) l.appendChild(c.firstChild);
    }
  });
  function Oe(l, c) {
    if (c) {
      var g = l.firstChild;
      if (g && g === l.lastChild && g.nodeType === 3) {
        g.nodeValue = c;
        return;
      }
    }
    l.textContent = c;
  }
  var Me = {
    animationIterationCount: !0,
    aspectRatio: !0,
    borderImageOutset: !0,
    borderImageSlice: !0,
    borderImageWidth: !0,
    boxFlex: !0,
    boxFlexGroup: !0,
    boxOrdinalGroup: !0,
    columnCount: !0,
    columns: !0,
    flex: !0,
    flexGrow: !0,
    flexPositive: !0,
    flexShrink: !0,
    flexNegative: !0,
    flexOrder: !0,
    gridArea: !0,
    gridRow: !0,
    gridRowEnd: !0,
    gridRowSpan: !0,
    gridRowStart: !0,
    gridColumn: !0,
    gridColumnEnd: !0,
    gridColumnSpan: !0,
    gridColumnStart: !0,
    fontWeight: !0,
    lineClamp: !0,
    lineHeight: !0,
    opacity: !0,
    order: !0,
    orphans: !0,
    tabSize: !0,
    widows: !0,
    zIndex: !0,
    zoom: !0,
    fillOpacity: !0,
    floodOpacity: !0,
    stopOpacity: !0,
    strokeDasharray: !0,
    strokeDashoffset: !0,
    strokeMiterlimit: !0,
    strokeOpacity: !0,
    strokeWidth: !0
  }, ht = ["Webkit", "ms", "Moz", "O"];
  Object.keys(Me).forEach(function(l) {
    ht.forEach(function(c) {
      c = c + l.charAt(0).toUpperCase() + l.substring(1), Me[c] = Me[l];
    });
  });
  function xt(l, c, g) {
    return c == null || typeof c == "boolean" || c === "" ? "" : g || typeof c != "number" || c === 0 || Me.hasOwnProperty(l) && Me[l] ? ("" + c).trim() : c + "px";
  }
  function zt(l, c) {
    l = l.style;
    for (var g in c) if (c.hasOwnProperty(g)) {
      var x = g.indexOf("--") === 0, M = xt(g, c[g], x);
      g === "float" && (g = "cssFloat"), x ? l.setProperty(g, M) : l[g] = M;
    }
  }
  var bt = X({ menuitem: !0 }, { area: !0, base: !0, br: !0, col: !0, embed: !0, hr: !0, img: !0, input: !0, keygen: !0, link: !0, meta: !0, param: !0, source: !0, track: !0, wbr: !0 });
  function Ge(l, c) {
    if (c) {
      if (bt[l] && (c.children != null || c.dangerouslySetInnerHTML != null)) throw Error(n(137, l));
      if (c.dangerouslySetInnerHTML != null) {
        if (c.children != null) throw Error(n(60));
        if (typeof c.dangerouslySetInnerHTML != "object" || !("__html" in c.dangerouslySetInnerHTML)) throw Error(n(61));
      }
      if (c.style != null && typeof c.style != "object") throw Error(n(62));
    }
  }
  function Et(l, c) {
    if (l.indexOf("-") === -1) return typeof c.is == "string";
    switch (l) {
      case "annotation-xml":
      case "color-profile":
      case "font-face":
      case "font-face-src":
      case "font-face-uri":
      case "font-face-format":
      case "font-face-name":
      case "missing-glyph":
        return !1;
      default:
        return !0;
    }
  }
  var At = null;
  function pn(l) {
    return l = l.target || l.srcElement || window, l.correspondingUseElement && (l = l.correspondingUseElement), l.nodeType === 3 ? l.parentNode : l;
  }
  var fn = null, hr = null, qn = null;
  function Dr(l) {
    if (l = tn(l)) {
      if (typeof fn != "function") throw Error(n(280));
      var c = l.stateNode;
      c && (c = Qr(c), fn(l.stateNode, l.type, c));
    }
  }
  function mr(l) {
    hr ? qn ? qn.push(l) : qn = [l] : hr = l;
  }
  function Po() {
    if (hr) {
      var l = hr, c = qn;
      if (qn = hr = null, Dr(l), c) for (l = 0; l < c.length; l++) Dr(c[l]);
    }
  }
  function Mo(l, c) {
    return l(c);
  }
  function Ut() {
  }
  var dr = !1;
  function Ct(l, c, g) {
    if (dr) return l(c, g);
    dr = !0;
    try {
      return Mo(l, c, g);
    } finally {
      dr = !1, (hr !== null || qn !== null) && (Ut(), Po());
    }
  }
  function St(l, c) {
    var g = l.stateNode;
    if (g === null) return null;
    var x = Qr(g);
    if (x === null) return null;
    g = x[c];
    e: switch (c) {
      case "onClick":
      case "onClickCapture":
      case "onDoubleClick":
      case "onDoubleClickCapture":
      case "onMouseDown":
      case "onMouseDownCapture":
      case "onMouseMove":
      case "onMouseMoveCapture":
      case "onMouseUp":
      case "onMouseUpCapture":
      case "onMouseEnter":
        (x = !x.disabled) || (l = l.type, x = !(l === "button" || l === "input" || l === "select" || l === "textarea")), l = !x;
        break e;
      default:
        l = !1;
    }
    if (l) return null;
    if (g && typeof g != "function") throw Error(n(231, c, typeof g));
    return g;
  }
  var en = !1;
  if (p) try {
    var on = {};
    Object.defineProperty(on, "passive", { get: function() {
      en = !0;
    } }), window.addEventListener("test", on, on), window.removeEventListener("test", on, on);
  } catch {
    en = !1;
  }
  function zn(l, c, g, x, M, $, oe, he, Se) {
    var je = Array.prototype.slice.call(arguments, 3);
    try {
      c.apply(g, je);
    } catch (lt) {
      this.onError(lt);
    }
  }
  var Ar = !1, ro = null, mo = !1, ve = null, We = { onError: function(l) {
    Ar = !0, ro = l;
  } };
  function pt(l, c, g, x, M, $, oe, he, Se) {
    Ar = !1, ro = null, zn.apply(We, arguments);
  }
  function Ot(l, c, g, x, M, $, oe, he, Se) {
    if (pt.apply(this, arguments), Ar) {
      if (Ar) {
        var je = ro;
        Ar = !1, ro = null;
      } else throw Error(n(198));
      mo || (mo = !0, ve = je);
    }
  }
  function mn(l) {
    var c = l, g = l;
    if (l.alternate) for (; c.return; ) c = c.return;
    else {
      l = c;
      do
        c = l, c.flags & 4098 && (g = c.return), l = c.return;
      while (l);
    }
    return c.tag === 3 ? g : null;
  }
  function Le(l) {
    if (l.tag === 13) {
      var c = l.memoizedState;
      if (c === null && (l = l.alternate, l !== null && (c = l.memoizedState)), c !== null) return c.dehydrated;
    }
    return null;
  }
  function ke(l) {
    if (mn(l) !== l) throw Error(n(188));
  }
  function Ze(l) {
    var c = l.alternate;
    if (!c) {
      if (c = mn(l), c === null) throw Error(n(188));
      return c !== l ? null : l;
    }
    for (var g = l, x = c; ; ) {
      var M = g.return;
      if (M === null) break;
      var $ = M.alternate;
      if ($ === null) {
        if (x = M.return, x !== null) {
          g = x;
          continue;
        }
        break;
      }
      if (M.child === $.child) {
        for ($ = M.child; $; ) {
          if ($ === g) return ke(M), l;
          if ($ === x) return ke(M), c;
          $ = $.sibling;
        }
        throw Error(n(188));
      }
      if (g.return !== x.return) g = M, x = $;
      else {
        for (var oe = !1, he = M.child; he; ) {
          if (he === g) {
            oe = !0, g = M, x = $;
            break;
          }
          if (he === x) {
            oe = !0, x = M, g = $;
            break;
          }
          he = he.sibling;
        }
        if (!oe) {
          for (he = $.child; he; ) {
            if (he === g) {
              oe = !0, g = $, x = M;
              break;
            }
            if (he === x) {
              oe = !0, x = $, g = M;
              break;
            }
            he = he.sibling;
          }
          if (!oe) throw Error(n(189));
        }
      }
      if (g.alternate !== x) throw Error(n(190));
    }
    if (g.tag !== 3) throw Error(n(188));
    return g.stateNode.current === g ? l : c;
  }
  function Gt(l) {
    return l = Ze(l), l !== null ? Bt(l) : null;
  }
  function Bt(l) {
    if (l.tag === 5 || l.tag === 6) return l;
    for (l = l.child; l !== null; ) {
      var c = Bt(l);
      if (c !== null) return c;
      l = l.sibling;
    }
    return null;
  }
  var Qt = t.unstable_scheduleCallback, Hn = t.unstable_cancelCallback, Nr = t.unstable_shouldYield, Wo = t.unstable_requestPaint, xn = t.unstable_now, Rn = t.unstable_getCurrentPriorityLevel, ci = t.unstable_ImmediatePriority, Ta = t.unstable_UserBlockingPriority, _n = t.unstable_NormalPriority, Io = t.unstable_LowPriority, Ci = t.unstable_IdlePriority, zi = null, di = null;
  function kf(l) {
    if (di && typeof di.onCommitFiberRoot == "function") try {
      di.onCommitFiberRoot(zi, l, void 0, (l.current.flags & 128) === 128);
    } catch {
    }
  }
  var Si = Math.clz32 ? Math.clz32 : td, bh = Math.log, Ch = Math.LN2;
  function td(l) {
    return l >>>= 0, l === 0 ? 32 : 31 - (bh(l) / Ch | 0) | 0;
  }
  var Wl = 64, la = 4194304;
  function Xa(l) {
    switch (l & -l) {
      case 1:
        return 1;
      case 2:
        return 2;
      case 4:
        return 4;
      case 8:
        return 8;
      case 16:
        return 16;
      case 32:
        return 32;
      case 64:
      case 128:
      case 256:
      case 512:
      case 1024:
      case 2048:
      case 4096:
      case 8192:
      case 16384:
      case 32768:
      case 65536:
      case 131072:
      case 262144:
      case 524288:
      case 1048576:
      case 2097152:
        return l & 4194240;
      case 4194304:
      case 8388608:
      case 16777216:
      case 33554432:
      case 67108864:
        return l & 130023424;
      case 134217728:
        return 134217728;
      case 268435456:
        return 268435456;
      case 536870912:
        return 536870912;
      case 1073741824:
        return 1073741824;
      default:
        return l;
    }
  }
  function Qa(l, c) {
    var g = l.pendingLanes;
    if (g === 0) return 0;
    var x = 0, M = l.suspendedLanes, $ = l.pingedLanes, oe = g & 268435455;
    if (oe !== 0) {
      var he = oe & ~M;
      he !== 0 ? x = Xa(he) : ($ &= oe, $ !== 0 && (x = Xa($)));
    } else oe = g & ~M, oe !== 0 ? x = Xa(oe) : $ !== 0 && (x = Xa($));
    if (x === 0) return 0;
    if (c !== 0 && c !== x && !(c & M) && (M = x & -x, $ = c & -c, M >= $ || M === 16 && ($ & 4194240) !== 0)) return c;
    if (x & 4 && (x |= g & 16), c = l.entangledLanes, c !== 0) for (l = l.entanglements, c &= x; 0 < c; ) g = 31 - Si(c), M = 1 << g, x |= l[g], c &= ~M;
    return x;
  }
  function nd(l, c) {
    switch (l) {
      case 1:
      case 2:
      case 4:
        return c + 250;
      case 8:
      case 16:
      case 32:
      case 64:
      case 128:
      case 256:
      case 512:
      case 1024:
      case 2048:
      case 4096:
      case 8192:
      case 16384:
      case 32768:
      case 65536:
      case 131072:
      case 262144:
      case 524288:
      case 1048576:
      case 2097152:
        return c + 5e3;
      case 4194304:
      case 8388608:
      case 16777216:
      case 33554432:
      case 67108864:
        return -1;
      case 134217728:
      case 268435456:
      case 536870912:
      case 1073741824:
        return -1;
      default:
        return -1;
    }
  }
  function Xu(l, c) {
    for (var g = l.suspendedLanes, x = l.pingedLanes, M = l.expirationTimes, $ = l.pendingLanes; 0 < $; ) {
      var oe = 31 - Si($), he = 1 << oe, Se = M[oe];
      Se === -1 ? (!(he & g) || he & x) && (M[oe] = nd(he, c)) : Se <= c && (l.expiredLanes |= he), $ &= ~he;
    }
  }
  function ql(l) {
    return l = l.pendingLanes & -1073741825, l !== 0 ? l : l & 1073741824 ? 1073741824 : 0;
  }
  function rd() {
    var l = Wl;
    return Wl <<= 1, !(Wl & 4194240) && (Wl = 64), l;
  }
  function od(l) {
    for (var c = [], g = 0; 31 > g; g++) c.push(l);
    return c;
  }
  function ll(l, c, g) {
    l.pendingLanes |= c, c !== 536870912 && (l.suspendedLanes = 0, l.pingedLanes = 0), l = l.eventTimes, c = 31 - Si(c), l[c] = g;
  }
  function pv(l, c) {
    var g = l.pendingLanes & ~c;
    l.pendingLanes = c, l.suspendedLanes = 0, l.pingedLanes = 0, l.expiredLanes &= c, l.mutableReadLanes &= c, l.entangledLanes &= c, c = l.entanglements;
    var x = l.eventTimes;
    for (l = l.expirationTimes; 0 < g; ) {
      var M = 31 - Si(g), $ = 1 << M;
      c[M] = 0, x[M] = -1, l[M] = -1, g &= ~$;
    }
  }
  function ul(l, c) {
    var g = l.entangledLanes |= c;
    for (l = l.entanglements; g; ) {
      var x = 31 - Si(g), M = 1 << x;
      M & c | l[x] & c && (l[x] |= c), g &= ~M;
    }
  }
  var or = 0;
  function id(l) {
    return l &= -l, 1 < l ? 4 < l ? l & 268435455 ? 16 : 536870912 : 4 : 1;
  }
  var Zn, Pf, Ss, Sn, ad, qo = !1, ws = [], wi = null, xs = null, Br = null, wr = /* @__PURE__ */ new Map(), Kl = /* @__PURE__ */ new Map(), Do = [], xi = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");
  function Ra(l, c) {
    switch (l) {
      case "focusin":
      case "focusout":
        wi = null;
        break;
      case "dragenter":
      case "dragleave":
        xs = null;
        break;
      case "mouseover":
      case "mouseout":
        Br = null;
        break;
      case "pointerover":
      case "pointerout":
        wr.delete(c.pointerId);
        break;
      case "gotpointercapture":
      case "lostpointercapture":
        Kl.delete(c.pointerId);
    }
  }
  function Qu(l, c, g, x, M, $) {
    return l === null || l.nativeEvent !== $ ? (l = { blockedOn: c, domEventName: g, eventSystemFlags: x, nativeEvent: $, targetContainers: [M] }, c !== null && (c = tn(c), c !== null && Pf(c)), l) : (l.eventSystemFlags |= x, c = l.targetContainers, M !== null && c.indexOf(M) === -1 && c.push(M), l);
  }
  function Mf(l, c, g, x, M) {
    switch (c) {
      case "focusin":
        return wi = Qu(wi, l, c, g, x, M), !0;
      case "dragenter":
        return xs = Qu(xs, l, c, g, x, M), !0;
      case "mouseover":
        return Br = Qu(Br, l, c, g, x, M), !0;
      case "pointerover":
        var $ = M.pointerId;
        return wr.set($, Qu(wr.get($) || null, l, c, g, x, M)), !0;
      case "gotpointercapture":
        return $ = M.pointerId, Kl.set($, Qu(Kl.get($) || null, l, c, g, x, M)), !0;
    }
    return !1;
  }
  function If(l) {
    var c = ac(l.target);
    if (c !== null) {
      var g = mn(c);
      if (g !== null) {
        if (c = g.tag, c === 13) {
          if (c = Le(g), c !== null) {
            l.blockedOn = c, ad(l.priority, function() {
              Ss(g);
            });
            return;
          }
        } else if (c === 3 && g.stateNode.current.memoizedState.isDehydrated) {
          l.blockedOn = g.tag === 3 ? g.stateNode.containerInfo : null;
          return;
        }
      }
    }
    l.blockedOn = null;
  }
  function Yl(l) {
    if (l.blockedOn !== null) return !1;
    for (var c = l.targetContainers; 0 < c.length; ) {
      var g = ud(l.domEventName, l.eventSystemFlags, c[0], l.nativeEvent);
      if (g === null) {
        g = l.nativeEvent;
        var x = new g.constructor(g.type, g);
        At = x, g.target.dispatchEvent(x), At = null;
      } else return c = tn(g), c !== null && Pf(c), l.blockedOn = g, !1;
      c.shift();
    }
    return !0;
  }
  function Ju(l, c, g) {
    Yl(l) && g.delete(c);
  }
  function hv() {
    qo = !1, wi !== null && Yl(wi) && (wi = null), xs !== null && Yl(xs) && (xs = null), Br !== null && Yl(Br) && (Br = null), wr.forEach(Ju), Kl.forEach(Ju);
  }
  function Oa(l, c) {
    l.blockedOn === c && (l.blockedOn = null, qo || (qo = !0, t.unstable_scheduleCallback(t.unstable_NormalPriority, hv)));
  }
  function Ja(l) {
    function c(M) {
      return Oa(M, l);
    }
    if (0 < ws.length) {
      Oa(ws[0], l);
      for (var g = 1; g < ws.length; g++) {
        var x = ws[g];
        x.blockedOn === l && (x.blockedOn = null);
      }
    }
    for (wi !== null && Oa(wi, l), xs !== null && Oa(xs, l), Br !== null && Oa(Br, l), wr.forEach(c), Kl.forEach(c), g = 0; g < Do.length; g++) x = Do[g], x.blockedOn === l && (x.blockedOn = null);
    for (; 0 < Do.length && (g = Do[0], g.blockedOn === null); ) If(g), g.blockedOn === null && Do.shift();
  }
  var Es = P.ReactCurrentBatchConfig, ka = !0;
  function sd(l, c, g, x) {
    var M = or, $ = Es.transition;
    Es.transition = null;
    try {
      or = 1, Xl(l, c, g, x);
    } finally {
      or = M, Es.transition = $;
    }
  }
  function ld(l, c, g, x) {
    var M = or, $ = Es.transition;
    Es.transition = null;
    try {
      or = 4, Xl(l, c, g, x);
    } finally {
      or = M, Es.transition = $;
    }
  }
  function Xl(l, c, g, x) {
    if (ka) {
      var M = ud(l, c, g, x);
      if (M === null) Dh(l, c, x, Zu, g), Ra(l, x);
      else if (Mf(M, l, c, g, x)) x.stopPropagation();
      else if (Ra(l, x), c & 4 && -1 < xi.indexOf(l)) {
        for (; M !== null; ) {
          var $ = tn(M);
          if ($ !== null && Zn($), $ = ud(l, c, g, x), $ === null && Dh(l, c, x, Zu, g), $ === M) break;
          M = $;
        }
        M !== null && x.stopPropagation();
      } else Dh(l, c, x, null, g);
    }
  }
  var Zu = null;
  function ud(l, c, g, x) {
    if (Zu = null, l = pn(x), l = ac(l), l !== null) if (c = mn(l), c === null) l = null;
    else if (g = c.tag, g === 13) {
      if (l = Le(c), l !== null) return l;
      l = null;
    } else if (g === 3) {
      if (c.stateNode.current.memoizedState.isDehydrated) return c.tag === 3 ? c.stateNode.containerInfo : null;
      l = null;
    } else c !== l && (l = null);
    return Zu = l, null;
  }
  function cd(l) {
    switch (l) {
      case "cancel":
      case "click":
      case "close":
      case "contextmenu":
      case "copy":
      case "cut":
      case "auxclick":
      case "dblclick":
      case "dragend":
      case "dragstart":
      case "drop":
      case "focusin":
      case "focusout":
      case "input":
      case "invalid":
      case "keydown":
      case "keypress":
      case "keyup":
      case "mousedown":
      case "mouseup":
      case "paste":
      case "pause":
      case "play":
      case "pointercancel":
      case "pointerdown":
      case "pointerup":
      case "ratechange":
      case "reset":
      case "resize":
      case "seeked":
      case "submit":
      case "touchcancel":
      case "touchend":
      case "touchstart":
      case "volumechange":
      case "change":
      case "selectionchange":
      case "textInput":
      case "compositionstart":
      case "compositionend":
      case "compositionupdate":
      case "beforeblur":
      case "afterblur":
      case "beforeinput":
      case "blur":
      case "fullscreenchange":
      case "focus":
      case "hashchange":
      case "popstate":
      case "select":
      case "selectstart":
        return 1;
      case "drag":
      case "dragenter":
      case "dragexit":
      case "dragleave":
      case "dragover":
      case "mousemove":
      case "mouseout":
      case "mouseover":
      case "pointermove":
      case "pointerout":
      case "pointerover":
      case "scroll":
      case "toggle":
      case "touchmove":
      case "wheel":
      case "mouseenter":
      case "mouseleave":
      case "pointerenter":
      case "pointerleave":
        return 4;
      case "message":
        switch (Rn()) {
          case ci:
            return 1;
          case Ta:
            return 4;
          case _n:
          case Io:
            return 16;
          case Ci:
            return 536870912;
          default:
            return 16;
        }
      default:
        return 16;
    }
  }
  var Za = null, ee = null, ye = null;
  function $e() {
    if (ye) return ye;
    var l, c = ee, g = c.length, x, M = "value" in Za ? Za.value : Za.textContent, $ = M.length;
    for (l = 0; l < g && c[l] === M[l]; l++) ;
    var oe = g - l;
    for (x = 1; x <= oe && c[g - x] === M[$ - x]; x++) ;
    return ye = M.slice(l, 1 < x ? 1 - x : void 0);
  }
  function Ve(l) {
    var c = l.keyCode;
    return "charCode" in l ? (l = l.charCode, l === 0 && c === 13 && (l = 13)) : l = c, l === 10 && (l = 13), 32 <= l || l === 13 ? l : 0;
  }
  function mt() {
    return !0;
  }
  function sn() {
    return !1;
  }
  function Pt(l) {
    function c(g, x, M, $, oe) {
      this._reactName = g, this._targetInst = M, this.type = x, this.nativeEvent = $, this.target = oe, this.currentTarget = null;
      for (var he in l) l.hasOwnProperty(he) && (g = l[he], this[he] = g ? g($) : $[he]);
      return this.isDefaultPrevented = ($.defaultPrevented != null ? $.defaultPrevented : $.returnValue === !1) ? mt : sn, this.isPropagationStopped = sn, this;
    }
    return X(c.prototype, { preventDefault: function() {
      this.defaultPrevented = !0;
      var g = this.nativeEvent;
      g && (g.preventDefault ? g.preventDefault() : typeof g.returnValue != "unknown" && (g.returnValue = !1), this.isDefaultPrevented = mt);
    }, stopPropagation: function() {
      var g = this.nativeEvent;
      g && (g.stopPropagation ? g.stopPropagation() : typeof g.cancelBubble != "unknown" && (g.cancelBubble = !0), this.isPropagationStopped = mt);
    }, persist: function() {
    }, isPersistent: mt }), c;
  }
  var cn = { eventPhase: 0, bubbles: 0, cancelable: 0, timeStamp: function(l) {
    return l.timeStamp || Date.now();
  }, defaultPrevented: 0, isTrusted: 0 }, An = Pt(cn), er = X({}, cn, { view: 0, detail: 0 }), $r = Pt(er), xr, Dn, Er, Xr = X({}, er, { screenX: 0, screenY: 0, clientX: 0, clientY: 0, pageX: 0, pageY: 0, ctrlKey: 0, shiftKey: 0, altKey: 0, metaKey: 0, getModifierState: bv, button: 0, buttons: 0, relatedTarget: function(l) {
    return l.relatedTarget === void 0 ? l.fromElement === l.srcElement ? l.toElement : l.fromElement : l.relatedTarget;
  }, movementX: function(l) {
    return "movementX" in l ? l.movementX : (l !== Er && (Er && l.type === "mousemove" ? (xr = l.screenX - Er.screenX, Dn = l.screenY - Er.screenY) : Dn = xr = 0, Er = l), xr);
  }, movementY: function(l) {
    return "movementY" in l ? l.movementY : Dn;
  } }), Ql = Pt(Xr), Df = X({}, Xr, { dataTransfer: 0 }), cl = Pt(Df), Nf = X({}, er, { relatedTarget: 0 }), ec = Pt(Nf), mv = X({}, cn, { animationName: 0, elapsedTime: 0, pseudoElement: 0 }), Sh = Pt(mv), gv = X({}, cn, { clipboardData: function(l) {
    return "clipboardData" in l ? l.clipboardData : window.clipboardData;
  } }), KC = Pt(gv), vv = X({}, cn, { data: 0 }), yv = Pt(vv), YC = {
    Esc: "Escape",
    Spacebar: " ",
    Left: "ArrowLeft",
    Up: "ArrowUp",
    Right: "ArrowRight",
    Down: "ArrowDown",
    Del: "Delete",
    Win: "OS",
    Menu: "ContextMenu",
    Apps: "ContextMenu",
    Scroll: "ScrollLock",
    MozPrintableKey: "Unidentified"
  }, XC = {
    8: "Backspace",
    9: "Tab",
    12: "Clear",
    13: "Enter",
    16: "Shift",
    17: "Control",
    18: "Alt",
    19: "Pause",
    20: "CapsLock",
    27: "Escape",
    32: " ",
    33: "PageUp",
    34: "PageDown",
    35: "End",
    36: "Home",
    37: "ArrowLeft",
    38: "ArrowUp",
    39: "ArrowRight",
    40: "ArrowDown",
    45: "Insert",
    46: "Delete",
    112: "F1",
    113: "F2",
    114: "F3",
    115: "F4",
    116: "F5",
    117: "F6",
    118: "F7",
    119: "F8",
    120: "F9",
    121: "F10",
    122: "F11",
    123: "F12",
    144: "NumLock",
    145: "ScrollLock",
    224: "Meta"
  }, qE = { Alt: "altKey", Control: "ctrlKey", Meta: "metaKey", Shift: "shiftKey" };
  function dl(l) {
    var c = this.nativeEvent;
    return c.getModifierState ? c.getModifierState(l) : (l = qE[l]) ? !!c[l] : !1;
  }
  function bv() {
    return dl;
  }
  var Cv = X({}, er, { key: function(l) {
    if (l.key) {
      var c = YC[l.key] || l.key;
      if (c !== "Unidentified") return c;
    }
    return l.type === "keypress" ? (l = Ve(l), l === 13 ? "Enter" : String.fromCharCode(l)) : l.type === "keydown" || l.type === "keyup" ? XC[l.keyCode] || "Unidentified" : "";
  }, code: 0, location: 0, ctrlKey: 0, shiftKey: 0, altKey: 0, metaKey: 0, repeat: 0, locale: 0, getModifierState: bv, charCode: function(l) {
    return l.type === "keypress" ? Ve(l) : 0;
  }, keyCode: function(l) {
    return l.type === "keydown" || l.type === "keyup" ? l.keyCode : 0;
  }, which: function(l) {
    return l.type === "keypress" ? Ve(l) : l.type === "keydown" || l.type === "keyup" ? l.keyCode : 0;
  } }), Sv = Pt(Cv), wv = X({}, Xr, { pointerId: 0, width: 0, height: 0, pressure: 0, tangentialPressure: 0, tiltX: 0, tiltY: 0, twist: 0, pointerType: 0, isPrimary: 0 }), QC = Pt(wv), wh = X({}, er, { touches: 0, targetTouches: 0, changedTouches: 0, altKey: 0, metaKey: 0, ctrlKey: 0, shiftKey: 0, getModifierState: bv }), JC = Pt(wh), Hi = X({}, cn, { propertyName: 0, elapsedTime: 0, pseudoElement: 0 }), fl = Pt(Hi), go = X({}, Xr, {
    deltaX: function(l) {
      return "deltaX" in l ? l.deltaX : "wheelDeltaX" in l ? -l.wheelDeltaX : 0;
    },
    deltaY: function(l) {
      return "deltaY" in l ? l.deltaY : "wheelDeltaY" in l ? -l.wheelDeltaY : "wheelDelta" in l ? -l.wheelDelta : 0;
    },
    deltaZ: 0,
    deltaMode: 0
  }), pl = Pt(go), xv = [9, 13, 27, 32], dd = p && "CompositionEvent" in window, Lf = null;
  p && "documentMode" in document && (Lf = document.documentMode);
  var Ff = p && "TextEvent" in window && !Lf, ZC = p && (!dd || Lf && 8 < Lf && 11 >= Lf), eS = " ", xh = !1;
  function tS(l, c) {
    switch (l) {
      case "keyup":
        return xv.indexOf(c.keyCode) !== -1;
      case "keydown":
        return c.keyCode !== 229;
      case "keypress":
      case "mousedown":
      case "focusout":
        return !0;
      default:
        return !1;
    }
  }
  function nS(l) {
    return l = l.detail, typeof l == "object" && "data" in l ? l.data : null;
  }
  var fd = !1;
  function rS(l, c) {
    switch (l) {
      case "compositionend":
        return nS(c);
      case "keypress":
        return c.which !== 32 ? null : (xh = !0, eS);
      case "textInput":
        return l = c.data, l === eS && xh ? null : l;
      default:
        return null;
    }
  }
  function KE(l, c) {
    if (fd) return l === "compositionend" || !dd && tS(l, c) ? (l = $e(), ye = ee = Za = null, fd = !1, l) : null;
    switch (l) {
      case "paste":
        return null;
      case "keypress":
        if (!(c.ctrlKey || c.altKey || c.metaKey) || c.ctrlKey && c.altKey) {
          if (c.char && 1 < c.char.length) return c.char;
          if (c.which) return String.fromCharCode(c.which);
        }
        return null;
      case "compositionend":
        return ZC && c.locale !== "ko" ? null : c.data;
      default:
        return null;
    }
  }
  var YE = { color: !0, date: !0, datetime: !0, "datetime-local": !0, email: !0, month: !0, number: !0, password: !0, range: !0, search: !0, tel: !0, text: !0, time: !0, url: !0, week: !0 };
  function oS(l) {
    var c = l && l.nodeName && l.nodeName.toLowerCase();
    return c === "input" ? !!YE[l.type] : c === "textarea";
  }
  function Ev(l, c, g, x) {
    mr(x), c = Hf(c, "onChange"), 0 < c.length && (g = new An("onChange", "change", null, g, x), l.push({ event: g, listeners: c }));
  }
  var Ts = null, tc = null;
  function iS(l) {
    oc(l, 0);
  }
  function _f(l) {
    var c = ts(l);
    if (ue(c)) return l;
  }
  function XE(l, c) {
    if (l === "change") return c;
  }
  var aS = !1;
  if (p) {
    var Tv;
    if (p) {
      var Rv = "oninput" in document;
      if (!Rv) {
        var sS = document.createElement("div");
        sS.setAttribute("oninput", "return;"), Rv = typeof sS.oninput == "function";
      }
      Tv = Rv;
    } else Tv = !1;
    aS = Tv && (!document.documentMode || 9 < document.documentMode);
  }
  function lS() {
    Ts && (Ts.detachEvent("onpropertychange", uS), tc = Ts = null);
  }
  function uS(l) {
    if (l.propertyName === "value" && _f(tc)) {
      var c = [];
      Ev(c, tc, l, pn(l)), Ct(iS, c);
    }
  }
  function QE(l, c, g) {
    l === "focusin" ? (lS(), Ts = c, tc = g, Ts.attachEvent("onpropertychange", uS)) : l === "focusout" && lS();
  }
  function cS(l) {
    if (l === "selectionchange" || l === "keyup" || l === "keydown") return _f(tc);
  }
  function JE(l, c) {
    if (l === "click") return _f(c);
  }
  function dS(l, c) {
    if (l === "input" || l === "change") return _f(c);
  }
  function ZE(l, c) {
    return l === c && (l !== 0 || 1 / l === 1 / c) || l !== l && c !== c;
  }
  var es = typeof Object.is == "function" ? Object.is : ZE;
  function Af(l, c) {
    if (es(l, c)) return !0;
    if (typeof l != "object" || l === null || typeof c != "object" || c === null) return !1;
    var g = Object.keys(l), x = Object.keys(c);
    if (g.length !== x.length) return !1;
    for (x = 0; x < g.length; x++) {
      var M = g[x];
      if (!m.call(c, M) || !es(l[M], c[M])) return !1;
    }
    return !0;
  }
  function fS(l) {
    for (; l && l.firstChild; ) l = l.firstChild;
    return l;
  }
  function Eh(l, c) {
    var g = fS(l);
    l = 0;
    for (var x; g; ) {
      if (g.nodeType === 3) {
        if (x = l + g.textContent.length, l <= c && x >= c) return { node: g, offset: c - l };
        l = x;
      }
      e: {
        for (; g; ) {
          if (g.nextSibling) {
            g = g.nextSibling;
            break e;
          }
          g = g.parentNode;
        }
        g = void 0;
      }
      g = fS(g);
    }
  }
  function Jl(l, c) {
    return l && c ? l === c ? !0 : l && l.nodeType === 3 ? !1 : c && c.nodeType === 3 ? Jl(l, c.parentNode) : "contains" in l ? l.contains(c) : l.compareDocumentPosition ? !!(l.compareDocumentPosition(c) & 16) : !1 : !1;
  }
  function $f() {
    for (var l = window, c = we(); c instanceof l.HTMLIFrameElement; ) {
      try {
        var g = typeof c.contentWindow.location.href == "string";
      } catch {
        g = !1;
      }
      if (g) l = c.contentWindow;
      else break;
      c = we(l.document);
    }
    return c;
  }
  function Th(l) {
    var c = l && l.nodeName && l.nodeName.toLowerCase();
    return c && (c === "input" && (l.type === "text" || l.type === "search" || l.type === "tel" || l.type === "url" || l.type === "password") || c === "textarea" || l.contentEditable === "true");
  }
  function pd(l) {
    var c = $f(), g = l.focusedElem, x = l.selectionRange;
    if (c !== g && g && g.ownerDocument && Jl(g.ownerDocument.documentElement, g)) {
      if (x !== null && Th(g)) {
        if (c = x.start, l = x.end, l === void 0 && (l = c), "selectionStart" in g) g.selectionStart = c, g.selectionEnd = Math.min(l, g.value.length);
        else if (l = (c = g.ownerDocument || document) && c.defaultView || window, l.getSelection) {
          l = l.getSelection();
          var M = g.textContent.length, $ = Math.min(x.start, M);
          x = x.end === void 0 ? $ : Math.min(x.end, M), !l.extend && $ > x && (M = x, x = $, $ = M), M = Eh(g, $);
          var oe = Eh(
            g,
            x
          );
          M && oe && (l.rangeCount !== 1 || l.anchorNode !== M.node || l.anchorOffset !== M.offset || l.focusNode !== oe.node || l.focusOffset !== oe.offset) && (c = c.createRange(), c.setStart(M.node, M.offset), l.removeAllRanges(), $ > x ? (l.addRange(c), l.extend(oe.node, oe.offset)) : (c.setEnd(oe.node, oe.offset), l.addRange(c)));
        }
      }
      for (c = [], l = g; l = l.parentNode; ) l.nodeType === 1 && c.push({ element: l, left: l.scrollLeft, top: l.scrollTop });
      for (typeof g.focus == "function" && g.focus(), g = 0; g < c.length; g++) l = c[g], l.element.scrollLeft = l.left, l.element.scrollTop = l.top;
    }
  }
  var eT = p && "documentMode" in document && 11 >= document.documentMode, hd = null, Ov = null, jf = null, kv = !1;
  function Pv(l, c, g) {
    var x = g.window === g ? g.document : g.nodeType === 9 ? g : g.ownerDocument;
    kv || hd == null || hd !== we(x) || (x = hd, "selectionStart" in x && Th(x) ? x = { start: x.selectionStart, end: x.selectionEnd } : (x = (x.ownerDocument && x.ownerDocument.defaultView || window).getSelection(), x = { anchorNode: x.anchorNode, anchorOffset: x.anchorOffset, focusNode: x.focusNode, focusOffset: x.focusOffset }), jf && Af(jf, x) || (jf = x, x = Hf(Ov, "onSelect"), 0 < x.length && (c = new An("onSelect", "select", null, c, g), l.push({ event: c, listeners: x }), c.target = hd)));
  }
  function Rh(l, c) {
    var g = {};
    return g[l.toLowerCase()] = c.toLowerCase(), g["Webkit" + l] = "webkit" + c, g["Moz" + l] = "moz" + c, g;
  }
  var nc = { animationend: Rh("Animation", "AnimationEnd"), animationiteration: Rh("Animation", "AnimationIteration"), animationstart: Rh("Animation", "AnimationStart"), transitionend: Rh("Transition", "TransitionEnd") }, Ko = {}, Mv = {};
  p && (Mv = document.createElement("div").style, "AnimationEvent" in window || (delete nc.animationend.animation, delete nc.animationiteration.animation, delete nc.animationstart.animation), "TransitionEvent" in window || delete nc.transitionend.transition);
  function Oh(l) {
    if (Ko[l]) return Ko[l];
    if (!nc[l]) return l;
    var c = nc[l], g;
    for (g in c) if (c.hasOwnProperty(g) && g in Mv) return Ko[l] = c[g];
    return l;
  }
  var pS = Oh("animationend"), hS = Oh("animationiteration"), mS = Oh("animationstart"), gS = Oh("transitionend"), Iv = /* @__PURE__ */ new Map(), kh = "abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");
  function Pa(l, c) {
    Iv.set(l, c), u(c, [l]);
  }
  for (var Dv = 0; Dv < kh.length; Dv++) {
    var rc = kh[Dv], tT = rc.toLowerCase(), nT = rc[0].toUpperCase() + rc.slice(1);
    Pa(tT, "on" + nT);
  }
  Pa(pS, "onAnimationEnd"), Pa(hS, "onAnimationIteration"), Pa(mS, "onAnimationStart"), Pa("dblclick", "onDoubleClick"), Pa("focusin", "onFocus"), Pa("focusout", "onBlur"), Pa(gS, "onTransitionEnd"), d("onMouseEnter", ["mouseout", "mouseover"]), d("onMouseLeave", ["mouseout", "mouseover"]), d("onPointerEnter", ["pointerout", "pointerover"]), d("onPointerLeave", ["pointerout", "pointerover"]), u("onChange", "change click focusin focusout input keydown keyup selectionchange".split(" ")), u("onSelect", "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")), u("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]), u("onCompositionEnd", "compositionend focusout keydown keypress keyup mousedown".split(" ")), u("onCompositionStart", "compositionstart focusout keydown keypress keyup mousedown".split(" ")), u("onCompositionUpdate", "compositionupdate focusout keydown keypress keyup mousedown".split(" "));
  var zf = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "), Nv = new Set("cancel close invalid load scroll toggle".split(" ").concat(zf));
  function Ph(l, c, g) {
    var x = l.type || "unknown-event";
    l.currentTarget = g, Ot(x, c, void 0, l), l.currentTarget = null;
  }
  function oc(l, c) {
    c = (c & 4) !== 0;
    for (var g = 0; g < l.length; g++) {
      var x = l[g], M = x.event;
      x = x.listeners;
      e: {
        var $ = void 0;
        if (c) for (var oe = x.length - 1; 0 <= oe; oe--) {
          var he = x[oe], Se = he.instance, je = he.currentTarget;
          if (he = he.listener, Se !== $ && M.isPropagationStopped()) break e;
          Ph(M, he, je), $ = Se;
        }
        else for (oe = 0; oe < x.length; oe++) {
          if (he = x[oe], Se = he.instance, je = he.currentTarget, he = he.listener, Se !== $ && M.isPropagationStopped()) break e;
          Ph(M, he, je), $ = Se;
        }
      }
    }
    if (mo) throw l = ve, mo = !1, ve = null, l;
  }
  function fr(l, c) {
    var g = c[Uf];
    g === void 0 && (g = c[Uf] = /* @__PURE__ */ new Set());
    var x = l + "__bubble";
    g.has(x) || (vS(c, l, 2, !1), g.add(x));
  }
  function Mh(l, c, g) {
    var x = 0;
    c && (x |= 4), vS(g, l, x, c);
  }
  var Ih = "_reactListening" + Math.random().toString(36).slice(2);
  function md(l) {
    if (!l[Ih]) {
      l[Ih] = !0, i.forEach(function(g) {
        g !== "selectionchange" && (Nv.has(g) || Mh(g, !1, l), Mh(g, !0, l));
      });
      var c = l.nodeType === 9 ? l : l.ownerDocument;
      c === null || c[Ih] || (c[Ih] = !0, Mh("selectionchange", !1, c));
    }
  }
  function vS(l, c, g, x) {
    switch (cd(c)) {
      case 1:
        var M = sd;
        break;
      case 4:
        M = ld;
        break;
      default:
        M = Xl;
    }
    g = M.bind(null, c, g, l), M = void 0, !en || c !== "touchstart" && c !== "touchmove" && c !== "wheel" || (M = !0), x ? M !== void 0 ? l.addEventListener(c, g, { capture: !0, passive: M }) : l.addEventListener(c, g, !0) : M !== void 0 ? l.addEventListener(c, g, { passive: M }) : l.addEventListener(c, g, !1);
  }
  function Dh(l, c, g, x, M) {
    var $ = x;
    if (!(c & 1) && !(c & 2) && x !== null) e: for (; ; ) {
      if (x === null) return;
      var oe = x.tag;
      if (oe === 3 || oe === 4) {
        var he = x.stateNode.containerInfo;
        if (he === M || he.nodeType === 8 && he.parentNode === M) break;
        if (oe === 4) for (oe = x.return; oe !== null; ) {
          var Se = oe.tag;
          if ((Se === 3 || Se === 4) && (Se = oe.stateNode.containerInfo, Se === M || Se.nodeType === 8 && Se.parentNode === M)) return;
          oe = oe.return;
        }
        for (; he !== null; ) {
          if (oe = ac(he), oe === null) return;
          if (Se = oe.tag, Se === 5 || Se === 6) {
            x = $ = oe;
            continue e;
          }
          he = he.parentNode;
        }
      }
      x = x.return;
    }
    Ct(function() {
      var je = $, lt = pn(g), dt = [];
      e: {
        var st = Iv.get(l);
        if (st !== void 0) {
          var Ft = An, Wt = l;
          switch (l) {
            case "keypress":
              if (Ve(g) === 0) break e;
            case "keydown":
            case "keyup":
              Ft = Sv;
              break;
            case "focusin":
              Wt = "focus", Ft = ec;
              break;
            case "focusout":
              Wt = "blur", Ft = ec;
              break;
            case "beforeblur":
            case "afterblur":
              Ft = ec;
              break;
            case "click":
              if (g.button === 2) break e;
            case "auxclick":
            case "dblclick":
            case "mousedown":
            case "mousemove":
            case "mouseup":
            case "mouseout":
            case "mouseover":
            case "contextmenu":
              Ft = Ql;
              break;
            case "drag":
            case "dragend":
            case "dragenter":
            case "dragexit":
            case "dragleave":
            case "dragover":
            case "dragstart":
            case "drop":
              Ft = cl;
              break;
            case "touchcancel":
            case "touchend":
            case "touchmove":
            case "touchstart":
              Ft = JC;
              break;
            case pS:
            case hS:
            case mS:
              Ft = Sh;
              break;
            case gS:
              Ft = fl;
              break;
            case "scroll":
              Ft = $r;
              break;
            case "wheel":
              Ft = pl;
              break;
            case "copy":
            case "cut":
            case "paste":
              Ft = KC;
              break;
            case "gotpointercapture":
            case "lostpointercapture":
            case "pointercancel":
            case "pointerdown":
            case "pointermove":
            case "pointerout":
            case "pointerover":
            case "pointerup":
              Ft = QC;
          }
          var Yt = (c & 4) !== 0, fo = !Yt && l === "scroll", Pe = Yt ? st !== null ? st + "Capture" : null : st;
          Yt = [];
          for (var Ee = je, Fe; Ee !== null; ) {
            Fe = Ee;
            var ut = Fe.stateNode;
            if (Fe.tag === 5 && ut !== null && (Fe = ut, Pe !== null && (ut = St(Ee, Pe), ut != null && Yt.push(gd(Ee, ut, Fe)))), fo) break;
            Ee = Ee.return;
          }
          0 < Yt.length && (st = new Ft(st, Wt, null, g, lt), dt.push({ event: st, listeners: Yt }));
        }
      }
      if (!(c & 7)) {
        e: {
          if (st = l === "mouseover" || l === "pointerover", Ft = l === "mouseout" || l === "pointerout", st && g !== At && (Wt = g.relatedTarget || g.fromElement) && (ac(Wt) || Wt[hl])) break e;
          if ((Ft || st) && (st = lt.window === lt ? lt : (st = lt.ownerDocument) ? st.defaultView || st.parentWindow : window, Ft ? (Wt = g.relatedTarget || g.toElement, Ft = je, Wt = Wt ? ac(Wt) : null, Wt !== null && (fo = mn(Wt), Wt !== fo || Wt.tag !== 5 && Wt.tag !== 6) && (Wt = null)) : (Ft = null, Wt = je), Ft !== Wt)) {
            if (Yt = Ql, ut = "onMouseLeave", Pe = "onMouseEnter", Ee = "mouse", (l === "pointerout" || l === "pointerover") && (Yt = QC, ut = "onPointerLeave", Pe = "onPointerEnter", Ee = "pointer"), fo = Ft == null ? st : ts(Ft), Fe = Wt == null ? st : ts(Wt), st = new Yt(ut, Ee + "leave", Ft, g, lt), st.target = fo, st.relatedTarget = Fe, ut = null, ac(lt) === je && (Yt = new Yt(Pe, Ee + "enter", Wt, g, lt), Yt.target = Fe, Yt.relatedTarget = fo, ut = Yt), fo = ut, Ft && Wt) t: {
              for (Yt = Ft, Pe = Wt, Ee = 0, Fe = Yt; Fe; Fe = Zl(Fe)) Ee++;
              for (Fe = 0, ut = Pe; ut; ut = Zl(ut)) Fe++;
              for (; 0 < Ee - Fe; ) Yt = Zl(Yt), Ee--;
              for (; 0 < Fe - Ee; ) Pe = Zl(Pe), Fe--;
              for (; Ee--; ) {
                if (Yt === Pe || Pe !== null && Yt === Pe.alternate) break t;
                Yt = Zl(Yt), Pe = Zl(Pe);
              }
              Yt = null;
            }
            else Yt = null;
            Ft !== null && yS(dt, st, Ft, Yt, !1), Wt !== null && fo !== null && yS(dt, fo, Wt, Yt, !0);
          }
        }
        e: {
          if (st = je ? ts(je) : window, Ft = st.nodeName && st.nodeName.toLowerCase(), Ft === "select" || Ft === "input" && st.type === "file") var qt = XE;
          else if (oS(st)) if (aS) qt = dS;
          else {
            qt = cS;
            var un = QE;
          }
          else (Ft = st.nodeName) && Ft.toLowerCase() === "input" && (st.type === "checkbox" || st.type === "radio") && (qt = JE);
          if (qt && (qt = qt(l, je))) {
            Ev(dt, qt, g, lt);
            break e;
          }
          un && un(l, st, je), l === "focusout" && (un = st._wrapperState) && un.controlled && st.type === "number" && it(st, "number", st.value);
        }
        switch (un = je ? ts(je) : window, l) {
          case "focusin":
            (oS(un) || un.contentEditable === "true") && (hd = un, Ov = je, jf = null);
            break;
          case "focusout":
            jf = Ov = hd = null;
            break;
          case "mousedown":
            kv = !0;
            break;
          case "contextmenu":
          case "mouseup":
          case "dragend":
            kv = !1, Pv(dt, g, lt);
            break;
          case "selectionchange":
            if (eT) break;
          case "keydown":
          case "keyup":
            Pv(dt, g, lt);
        }
        var dn;
        if (dd) e: {
          switch (l) {
            case "compositionstart":
              var Cn = "onCompositionStart";
              break e;
            case "compositionend":
              Cn = "onCompositionEnd";
              break e;
            case "compositionupdate":
              Cn = "onCompositionUpdate";
              break e;
          }
          Cn = void 0;
        }
        else fd ? tS(l, g) && (Cn = "onCompositionEnd") : l === "keydown" && g.keyCode === 229 && (Cn = "onCompositionStart");
        Cn && (ZC && g.locale !== "ko" && (fd || Cn !== "onCompositionStart" ? Cn === "onCompositionEnd" && fd && (dn = $e()) : (Za = lt, ee = "value" in Za ? Za.value : Za.textContent, fd = !0)), un = Hf(je, Cn), 0 < un.length && (Cn = new yv(Cn, l, null, g, lt), dt.push({ event: Cn, listeners: un }), dn ? Cn.data = dn : (dn = nS(g), dn !== null && (Cn.data = dn)))), (dn = Ff ? rS(l, g) : KE(l, g)) && (je = Hf(je, "onBeforeInput"), 0 < je.length && (lt = new yv("onBeforeInput", "beforeinput", null, g, lt), dt.push({ event: lt, listeners: je }), lt.data = dn));
      }
      oc(dt, c);
    });
  }
  function gd(l, c, g) {
    return { instance: l, listener: c, currentTarget: g };
  }
  function Hf(l, c) {
    for (var g = c + "Capture", x = []; l !== null; ) {
      var M = l, $ = M.stateNode;
      M.tag === 5 && $ !== null && (M = $, $ = St(l, g), $ != null && x.unshift(gd(l, $, M)), $ = St(l, c), $ != null && x.push(gd(l, $, M))), l = l.return;
    }
    return x;
  }
  function Zl(l) {
    if (l === null) return null;
    do
      l = l.return;
    while (l && l.tag !== 5);
    return l || null;
  }
  function yS(l, c, g, x, M) {
    for (var $ = c._reactName, oe = []; g !== null && g !== x; ) {
      var he = g, Se = he.alternate, je = he.stateNode;
      if (Se !== null && Se === x) break;
      he.tag === 5 && je !== null && (he = je, M ? (Se = St(g, $), Se != null && oe.unshift(gd(g, Se, he))) : M || (Se = St(g, $), Se != null && oe.push(gd(g, Se, he)))), g = g.return;
    }
    oe.length !== 0 && l.push({ event: c, listeners: oe });
  }
  var bS = /\r\n?/g, rT = /\u0000|\uFFFD/g;
  function CS(l) {
    return (typeof l == "string" ? l : "" + l).replace(bS, `
`).replace(rT, "");
  }
  function Nh(l, c, g) {
    if (c = CS(c), CS(l) !== c && g) throw Error(n(425));
  }
  function eu() {
  }
  var Vf = null, ic = null;
  function Lh(l, c) {
    return l === "textarea" || l === "noscript" || typeof c.children == "string" || typeof c.children == "number" || typeof c.dangerouslySetInnerHTML == "object" && c.dangerouslySetInnerHTML !== null && c.dangerouslySetInnerHTML.__html != null;
  }
  var Fh = typeof setTimeout == "function" ? setTimeout : void 0, Lv = typeof clearTimeout == "function" ? clearTimeout : void 0, SS = typeof Promise == "function" ? Promise : void 0, vd = typeof queueMicrotask == "function" ? queueMicrotask : typeof SS < "u" ? function(l) {
    return SS.resolve(null).then(l).catch(_h);
  } : Fh;
  function _h(l) {
    setTimeout(function() {
      throw l;
    });
  }
  function yd(l, c) {
    var g = c, x = 0;
    do {
      var M = g.nextSibling;
      if (l.removeChild(g), M && M.nodeType === 8) if (g = M.data, g === "/$") {
        if (x === 0) {
          l.removeChild(M), Ja(c);
          return;
        }
        x--;
      } else g !== "$" && g !== "$?" && g !== "$!" || x++;
      g = M;
    } while (g);
    Ja(c);
  }
  function Rs(l) {
    for (; l != null; l = l.nextSibling) {
      var c = l.nodeType;
      if (c === 1 || c === 3) break;
      if (c === 8) {
        if (c = l.data, c === "$" || c === "$!" || c === "$?") break;
        if (c === "/$") return null;
      }
    }
    return l;
  }
  function wS(l) {
    l = l.previousSibling;
    for (var c = 0; l; ) {
      if (l.nodeType === 8) {
        var g = l.data;
        if (g === "$" || g === "$!" || g === "$?") {
          if (c === 0) return l;
          c--;
        } else g === "/$" && c++;
      }
      l = l.previousSibling;
    }
    return null;
  }
  var tu = Math.random().toString(36).slice(2), Os = "__reactFiber$" + tu, Bf = "__reactProps$" + tu, hl = "__reactContainer$" + tu, Uf = "__reactEvents$" + tu, bd = "__reactListeners$" + tu, oT = "__reactHandles$" + tu;
  function ac(l) {
    var c = l[Os];
    if (c) return c;
    for (var g = l.parentNode; g; ) {
      if (c = g[hl] || g[Os]) {
        if (g = c.alternate, c.child !== null || g !== null && g.child !== null) for (l = wS(l); l !== null; ) {
          if (g = l[Os]) return g;
          l = wS(l);
        }
        return c;
      }
      l = g, g = l.parentNode;
    }
    return null;
  }
  function tn(l) {
    return l = l[Os] || l[hl], !l || l.tag !== 5 && l.tag !== 6 && l.tag !== 13 && l.tag !== 3 ? null : l;
  }
  function ts(l) {
    if (l.tag === 5 || l.tag === 6) return l.stateNode;
    throw Error(n(33));
  }
  function Qr(l) {
    return l[Bf] || null;
  }
  var Kn = [], Ma = -1;
  function Ia(l) {
    return { current: l };
  }
  function jr(l) {
    0 > Ma || (l.current = Kn[Ma], Kn[Ma] = null, Ma--);
  }
  function Zt(l, c) {
    Ma++, Kn[Ma] = l.current, l.current = c;
  }
  var fi = {}, oo = Ia(fi), No = Ia(!1), Vi = fi;
  function Bi(l, c) {
    var g = l.type.contextTypes;
    if (!g) return fi;
    var x = l.stateNode;
    if (x && x.__reactInternalMemoizedUnmaskedChildContext === c) return x.__reactInternalMemoizedMaskedChildContext;
    var M = {}, $;
    for ($ in g) M[$] = c[$];
    return x && (l = l.stateNode, l.__reactInternalMemoizedUnmaskedChildContext = c, l.__reactInternalMemoizedMaskedChildContext = M), M;
  }
  function vo(l) {
    return l = l.childContextTypes, l != null;
  }
  function Cd() {
    jr(No), jr(oo);
  }
  function xS(l, c, g) {
    if (oo.current !== fi) throw Error(n(168));
    Zt(oo, c), Zt(No, g);
  }
  function Gf(l, c, g) {
    var x = l.stateNode;
    if (c = c.childContextTypes, typeof x.getChildContext != "function") return g;
    x = x.getChildContext();
    for (var M in x) if (!(M in c)) throw Error(n(108, de(l) || "Unknown", M));
    return X({}, g, x);
  }
  function jo(l) {
    return l = (l = l.stateNode) && l.__reactInternalMemoizedMergedChildContext || fi, Vi = oo.current, Zt(oo, l), Zt(No, No.current), !0;
  }
  function Ah(l, c, g) {
    var x = l.stateNode;
    if (!x) throw Error(n(169));
    g ? (l = Gf(l, c, Vi), x.__reactInternalMemoizedMergedChildContext = l, jr(No), jr(oo), Zt(oo, l)) : jr(No), Zt(No, g);
  }
  var ks = null, Sd = !1, ml = !1;
  function $h(l) {
    ks === null ? ks = [l] : ks.push(l);
  }
  function nu(l) {
    Sd = !0, $h(l);
  }
  function Ps() {
    if (!ml && ks !== null) {
      ml = !0;
      var l = 0, c = or;
      try {
        var g = ks;
        for (or = 1; l < g.length; l++) {
          var x = g[l];
          do
            x = x(!0);
          while (x !== null);
        }
        ks = null, Sd = !1;
      } catch (M) {
        throw ks !== null && (ks = ks.slice(l + 1)), Qt(ci, Ps), M;
      } finally {
        or = c, ml = !1;
      }
    }
    return null;
  }
  var ru = [], ou = 0, iu = null, gl = 0, yo = [], Da = 0, ua = null, Ms = 1, Is = "";
  function sc(l, c) {
    ru[ou++] = gl, ru[ou++] = iu, iu = l, gl = c;
  }
  function ES(l, c, g) {
    yo[Da++] = Ms, yo[Da++] = Is, yo[Da++] = ua, ua = l;
    var x = Ms;
    l = Is;
    var M = 32 - Si(x) - 1;
    x &= ~(1 << M), g += 1;
    var $ = 32 - Si(c) + M;
    if (30 < $) {
      var oe = M - M % 5;
      $ = (x & (1 << oe) - 1).toString(32), x >>= oe, M -= oe, Ms = 1 << 32 - Si(c) + M | g << M | x, Is = $ + l;
    } else Ms = 1 << $ | g << M | x, Is = l;
  }
  function jh(l) {
    l.return !== null && (sc(l, 1), ES(l, 1, 0));
  }
  function zh(l) {
    for (; l === iu; ) iu = ru[--ou], ru[ou] = null, gl = ru[--ou], ru[ou] = null;
    for (; l === ua; ) ua = yo[--Da], yo[Da] = null, Is = yo[--Da], yo[Da] = null, Ms = yo[--Da], yo[Da] = null;
  }
  var Ui = null, Gi = null, qr = !1, Na = null;
  function Fv(l, c) {
    var g = $a(5, null, null, 0);
    g.elementType = "DELETED", g.stateNode = c, g.return = l, c = l.deletions, c === null ? (l.deletions = [g], l.flags |= 16) : c.push(g);
  }
  function TS(l, c) {
    switch (l.tag) {
      case 5:
        var g = l.type;
        return c = c.nodeType !== 1 || g.toLowerCase() !== c.nodeName.toLowerCase() ? null : c, c !== null ? (l.stateNode = c, Ui = l, Gi = Rs(c.firstChild), !0) : !1;
      case 6:
        return c = l.pendingProps === "" || c.nodeType !== 3 ? null : c, c !== null ? (l.stateNode = c, Ui = l, Gi = null, !0) : !1;
      case 13:
        return c = c.nodeType !== 8 ? null : c, c !== null ? (g = ua !== null ? { id: Ms, overflow: Is } : null, l.memoizedState = { dehydrated: c, treeContext: g, retryLane: 1073741824 }, g = $a(18, null, null, 0), g.stateNode = c, g.return = l, l.child = g, Ui = l, Gi = null, !0) : !1;
      default:
        return !1;
    }
  }
  function _v(l) {
    return (l.mode & 1) !== 0 && (l.flags & 128) === 0;
  }
  function Av(l) {
    if (qr) {
      var c = Gi;
      if (c) {
        var g = c;
        if (!TS(l, c)) {
          if (_v(l)) throw Error(n(418));
          c = Rs(g.nextSibling);
          var x = Ui;
          c && TS(l, c) ? Fv(x, g) : (l.flags = l.flags & -4097 | 2, qr = !1, Ui = l);
        }
      } else {
        if (_v(l)) throw Error(n(418));
        l.flags = l.flags & -4097 | 2, qr = !1, Ui = l;
      }
    }
  }
  function Lo(l) {
    for (l = l.return; l !== null && l.tag !== 5 && l.tag !== 3 && l.tag !== 13; ) l = l.return;
    Ui = l;
  }
  function Hh(l) {
    if (l !== Ui) return !1;
    if (!qr) return Lo(l), qr = !0, !1;
    var c;
    if ((c = l.tag !== 3) && !(c = l.tag !== 5) && (c = l.type, c = c !== "head" && c !== "body" && !Lh(l.type, l.memoizedProps)), c && (c = Gi)) {
      if (_v(l)) throw Wf(), Error(n(418));
      for (; c; ) Fv(l, c), c = Rs(c.nextSibling);
    }
    if (Lo(l), l.tag === 13) {
      if (l = l.memoizedState, l = l !== null ? l.dehydrated : null, !l) throw Error(n(317));
      e: {
        for (l = l.nextSibling, c = 0; l; ) {
          if (l.nodeType === 8) {
            var g = l.data;
            if (g === "/$") {
              if (c === 0) {
                Gi = Rs(l.nextSibling);
                break e;
              }
              c--;
            } else g !== "$" && g !== "$!" && g !== "$?" || c++;
          }
          l = l.nextSibling;
        }
        Gi = null;
      }
    } else Gi = Ui ? Rs(l.stateNode.nextSibling) : null;
    return !0;
  }
  function Wf() {
    for (var l = Gi; l; ) l = Rs(l.nextSibling);
  }
  function au() {
    Gi = Ui = null, qr = !1;
  }
  function vl(l) {
    Na === null ? Na = [l] : Na.push(l);
  }
  var iT = P.ReactCurrentBatchConfig;
  function lc(l, c, g) {
    if (l = g.ref, l !== null && typeof l != "function" && typeof l != "object") {
      if (g._owner) {
        if (g = g._owner, g) {
          if (g.tag !== 1) throw Error(n(309));
          var x = g.stateNode;
        }
        if (!x) throw Error(n(147, l));
        var M = x, $ = "" + l;
        return c !== null && c.ref !== null && typeof c.ref == "function" && c.ref._stringRef === $ ? c.ref : (c = function(oe) {
          var he = M.refs;
          oe === null ? delete he[$] : he[$] = oe;
        }, c._stringRef = $, c);
      }
      if (typeof l != "string") throw Error(n(284));
      if (!g._owner) throw Error(n(290, l));
    }
    return l;
  }
  function Vh(l, c) {
    throw l = Object.prototype.toString.call(c), Error(n(31, l === "[object Object]" ? "object with keys {" + Object.keys(c).join(", ") + "}" : l));
  }
  function RS(l) {
    var c = l._init;
    return c(l._payload);
  }
  function uc(l) {
    function c(Pe, Ee) {
      if (l) {
        var Fe = Pe.deletions;
        Fe === null ? (Pe.deletions = [Ee], Pe.flags |= 16) : Fe.push(Ee);
      }
    }
    function g(Pe, Ee) {
      if (!l) return null;
      for (; Ee !== null; ) c(Pe, Ee), Ee = Ee.sibling;
      return null;
    }
    function x(Pe, Ee) {
      for (Pe = /* @__PURE__ */ new Map(); Ee !== null; ) Ee.key !== null ? Pe.set(Ee.key, Ee) : Pe.set(Ee.index, Ee), Ee = Ee.sibling;
      return Pe;
    }
    function M(Pe, Ee) {
      return Pe = hu(Pe, Ee), Pe.index = 0, Pe.sibling = null, Pe;
    }
    function $(Pe, Ee, Fe) {
      return Pe.index = Fe, l ? (Fe = Pe.alternate, Fe !== null ? (Fe = Fe.index, Fe < Ee ? (Pe.flags |= 2, Ee) : Fe) : (Pe.flags |= 2, Ee)) : (Pe.flags |= 1048576, Ee);
    }
    function oe(Pe) {
      return l && Pe.alternate === null && (Pe.flags |= 2), Pe;
    }
    function he(Pe, Ee, Fe, ut) {
      return Ee === null || Ee.tag !== 6 ? (Ee = hy(Fe, Pe.mode, ut), Ee.return = Pe, Ee) : (Ee = M(Ee, Fe), Ee.return = Pe, Ee);
    }
    function Se(Pe, Ee, Fe, ut) {
      var qt = Fe.type;
      return qt === K ? lt(Pe, Ee, Fe.props.children, ut, Fe.key) : Ee !== null && (Ee.elementType === qt || typeof qt == "object" && qt !== null && qt.$$typeof === W && RS(qt) === Ee.type) ? (ut = M(Ee, Fe.props), ut.ref = lc(Pe, Ee, Fe), ut.return = Pe, ut) : (ut = wp(Fe.type, Fe.key, Fe.props, null, Pe.mode, ut), ut.ref = lc(Pe, Ee, Fe), ut.return = Pe, ut);
    }
    function je(Pe, Ee, Fe, ut) {
      return Ee === null || Ee.tag !== 4 || Ee.stateNode.containerInfo !== Fe.containerInfo || Ee.stateNode.implementation !== Fe.implementation ? (Ee = Sm(Fe, Pe.mode, ut), Ee.return = Pe, Ee) : (Ee = M(Ee, Fe.children || []), Ee.return = Pe, Ee);
    }
    function lt(Pe, Ee, Fe, ut, qt) {
      return Ee === null || Ee.tag !== 7 ? (Ee = xl(Fe, Pe.mode, ut, qt), Ee.return = Pe, Ee) : (Ee = M(Ee, Fe), Ee.return = Pe, Ee);
    }
    function dt(Pe, Ee, Fe) {
      if (typeof Ee == "string" && Ee !== "" || typeof Ee == "number") return Ee = hy("" + Ee, Pe.mode, Fe), Ee.return = Pe, Ee;
      if (typeof Ee == "object" && Ee !== null) {
        switch (Ee.$$typeof) {
          case D:
            return Fe = wp(Ee.type, Ee.key, Ee.props, null, Pe.mode, Fe), Fe.ref = lc(Pe, null, Ee), Fe.return = Pe, Fe;
          case z:
            return Ee = Sm(Ee, Pe.mode, Fe), Ee.return = Pe, Ee;
          case W:
            var ut = Ee._init;
            return dt(Pe, ut(Ee._payload), Fe);
        }
        if (wt(Ee) || re(Ee)) return Ee = xl(Ee, Pe.mode, Fe, null), Ee.return = Pe, Ee;
        Vh(Pe, Ee);
      }
      return null;
    }
    function st(Pe, Ee, Fe, ut) {
      var qt = Ee !== null ? Ee.key : null;
      if (typeof Fe == "string" && Fe !== "" || typeof Fe == "number") return qt !== null ? null : he(Pe, Ee, "" + Fe, ut);
      if (typeof Fe == "object" && Fe !== null) {
        switch (Fe.$$typeof) {
          case D:
            return Fe.key === qt ? Se(Pe, Ee, Fe, ut) : null;
          case z:
            return Fe.key === qt ? je(Pe, Ee, Fe, ut) : null;
          case W:
            return qt = Fe._init, st(
              Pe,
              Ee,
              qt(Fe._payload),
              ut
            );
        }
        if (wt(Fe) || re(Fe)) return qt !== null ? null : lt(Pe, Ee, Fe, ut, null);
        Vh(Pe, Fe);
      }
      return null;
    }
    function Ft(Pe, Ee, Fe, ut, qt) {
      if (typeof ut == "string" && ut !== "" || typeof ut == "number") return Pe = Pe.get(Fe) || null, he(Ee, Pe, "" + ut, qt);
      if (typeof ut == "object" && ut !== null) {
        switch (ut.$$typeof) {
          case D:
            return Pe = Pe.get(ut.key === null ? Fe : ut.key) || null, Se(Ee, Pe, ut, qt);
          case z:
            return Pe = Pe.get(ut.key === null ? Fe : ut.key) || null, je(Ee, Pe, ut, qt);
          case W:
            var un = ut._init;
            return Ft(Pe, Ee, Fe, un(ut._payload), qt);
        }
        if (wt(ut) || re(ut)) return Pe = Pe.get(Fe) || null, lt(Ee, Pe, ut, qt, null);
        Vh(Ee, ut);
      }
      return null;
    }
    function Wt(Pe, Ee, Fe, ut) {
      for (var qt = null, un = null, dn = Ee, Cn = Ee = 0, Vo = null; dn !== null && Cn < Fe.length; Cn++) {
        dn.index > Cn ? (Vo = dn, dn = null) : Vo = dn.sibling;
        var sr = st(Pe, dn, Fe[Cn], ut);
        if (sr === null) {
          dn === null && (dn = Vo);
          break;
        }
        l && dn && sr.alternate === null && c(Pe, dn), Ee = $(sr, Ee, Cn), un === null ? qt = sr : un.sibling = sr, un = sr, dn = Vo;
      }
      if (Cn === Fe.length) return g(Pe, dn), qr && sc(Pe, Cn), qt;
      if (dn === null) {
        for (; Cn < Fe.length; Cn++) dn = dt(Pe, Fe[Cn], ut), dn !== null && (Ee = $(dn, Ee, Cn), un === null ? qt = dn : un.sibling = dn, un = dn);
        return qr && sc(Pe, Cn), qt;
      }
      for (dn = x(Pe, dn); Cn < Fe.length; Cn++) Vo = Ft(dn, Pe, Cn, Fe[Cn], ut), Vo !== null && (l && Vo.alternate !== null && dn.delete(Vo.key === null ? Cn : Vo.key), Ee = $(Vo, Ee, Cn), un === null ? qt = Vo : un.sibling = Vo, un = Vo);
      return l && dn.forEach(function(vu) {
        return c(Pe, vu);
      }), qr && sc(Pe, Cn), qt;
    }
    function Yt(Pe, Ee, Fe, ut) {
      var qt = re(Fe);
      if (typeof qt != "function") throw Error(n(150));
      if (Fe = qt.call(Fe), Fe == null) throw Error(n(151));
      for (var un = qt = null, dn = Ee, Cn = Ee = 0, Vo = null, sr = Fe.next(); dn !== null && !sr.done; Cn++, sr = Fe.next()) {
        dn.index > Cn ? (Vo = dn, dn = null) : Vo = dn.sibling;
        var vu = st(Pe, dn, sr.value, ut);
        if (vu === null) {
          dn === null && (dn = Vo);
          break;
        }
        l && dn && vu.alternate === null && c(Pe, dn), Ee = $(vu, Ee, Cn), un === null ? qt = vu : un.sibling = vu, un = vu, dn = Vo;
      }
      if (sr.done) return g(
        Pe,
        dn
      ), qr && sc(Pe, Cn), qt;
      if (dn === null) {
        for (; !sr.done; Cn++, sr = Fe.next()) sr = dt(Pe, sr.value, ut), sr !== null && (Ee = $(sr, Ee, Cn), un === null ? qt = sr : un.sibling = sr, un = sr);
        return qr && sc(Pe, Cn), qt;
      }
      for (dn = x(Pe, dn); !sr.done; Cn++, sr = Fe.next()) sr = Ft(dn, Pe, Cn, sr.value, ut), sr !== null && (l && sr.alternate !== null && dn.delete(sr.key === null ? Cn : sr.key), Ee = $(sr, Ee, Cn), un === null ? qt = sr : un.sibling = sr, un = sr);
      return l && dn.forEach(function(lw) {
        return c(Pe, lw);
      }), qr && sc(Pe, Cn), qt;
    }
    function fo(Pe, Ee, Fe, ut) {
      if (typeof Fe == "object" && Fe !== null && Fe.type === K && Fe.key === null && (Fe = Fe.props.children), typeof Fe == "object" && Fe !== null) {
        switch (Fe.$$typeof) {
          case D:
            e: {
              for (var qt = Fe.key, un = Ee; un !== null; ) {
                if (un.key === qt) {
                  if (qt = Fe.type, qt === K) {
                    if (un.tag === 7) {
                      g(Pe, un.sibling), Ee = M(un, Fe.props.children), Ee.return = Pe, Pe = Ee;
                      break e;
                    }
                  } else if (un.elementType === qt || typeof qt == "object" && qt !== null && qt.$$typeof === W && RS(qt) === un.type) {
                    g(Pe, un.sibling), Ee = M(un, Fe.props), Ee.ref = lc(Pe, un, Fe), Ee.return = Pe, Pe = Ee;
                    break e;
                  }
                  g(Pe, un);
                  break;
                } else c(Pe, un);
                un = un.sibling;
              }
              Fe.type === K ? (Ee = xl(Fe.props.children, Pe.mode, ut, Fe.key), Ee.return = Pe, Pe = Ee) : (ut = wp(Fe.type, Fe.key, Fe.props, null, Pe.mode, ut), ut.ref = lc(Pe, Ee, Fe), ut.return = Pe, Pe = ut);
            }
            return oe(Pe);
          case z:
            e: {
              for (un = Fe.key; Ee !== null; ) {
                if (Ee.key === un) if (Ee.tag === 4 && Ee.stateNode.containerInfo === Fe.containerInfo && Ee.stateNode.implementation === Fe.implementation) {
                  g(Pe, Ee.sibling), Ee = M(Ee, Fe.children || []), Ee.return = Pe, Pe = Ee;
                  break e;
                } else {
                  g(Pe, Ee);
                  break;
                }
                else c(Pe, Ee);
                Ee = Ee.sibling;
              }
              Ee = Sm(Fe, Pe.mode, ut), Ee.return = Pe, Pe = Ee;
            }
            return oe(Pe);
          case W:
            return un = Fe._init, fo(Pe, Ee, un(Fe._payload), ut);
        }
        if (wt(Fe)) return Wt(Pe, Ee, Fe, ut);
        if (re(Fe)) return Yt(Pe, Ee, Fe, ut);
        Vh(Pe, Fe);
      }
      return typeof Fe == "string" && Fe !== "" || typeof Fe == "number" ? (Fe = "" + Fe, Ee !== null && Ee.tag === 6 ? (g(Pe, Ee.sibling), Ee = M(Ee, Fe), Ee.return = Pe, Pe = Ee) : (g(Pe, Ee), Ee = hy(Fe, Pe.mode, ut), Ee.return = Pe, Pe = Ee), oe(Pe)) : g(Pe, Ee);
    }
    return fo;
  }
  var so = uc(!0), It = uc(!1), ca = Ia(null), Wi = null, wd = null, $v = null;
  function jv() {
    $v = wd = Wi = null;
  }
  function zv(l) {
    var c = ca.current;
    jr(ca), l._currentValue = c;
  }
  function Hv(l, c, g) {
    for (; l !== null; ) {
      var x = l.alternate;
      if ((l.childLanes & c) !== c ? (l.childLanes |= c, x !== null && (x.childLanes |= c)) : x !== null && (x.childLanes & c) !== c && (x.childLanes |= c), l === g) break;
      l = l.return;
    }
  }
  function Jr(l, c) {
    Wi = l, $v = wd = null, l = l.dependencies, l !== null && l.firstContext !== null && (l.lanes & c && (Co = !0), l.firstContext = null);
  }
  function La(l) {
    var c = l._currentValue;
    if ($v !== l) if (l = { context: l, memoizedValue: c, next: null }, wd === null) {
      if (Wi === null) throw Error(n(308));
      wd = l, Wi.dependencies = { lanes: 0, firstContext: l };
    } else wd = wd.next = l;
    return c;
  }
  var cc = null;
  function Vv(l) {
    cc === null ? cc = [l] : cc.push(l);
  }
  function Bv(l, c, g, x) {
    var M = c.interleaved;
    return M === null ? (g.next = g, Vv(c)) : (g.next = M.next, M.next = g), c.interleaved = g, da(l, x);
  }
  function da(l, c) {
    l.lanes |= c;
    var g = l.alternate;
    for (g !== null && (g.lanes |= c), g = l, l = l.return; l !== null; ) l.childLanes |= c, g = l.alternate, g !== null && (g.childLanes |= c), g = l, l = l.return;
    return g.tag === 3 ? g.stateNode : null;
  }
  var fa = !1;
  function Uv(l) {
    l.updateQueue = { baseState: l.memoizedState, firstBaseUpdate: null, lastBaseUpdate: null, shared: { pending: null, interleaved: null, lanes: 0 }, effects: null };
  }
  function OS(l, c) {
    l = l.updateQueue, c.updateQueue === l && (c.updateQueue = { baseState: l.baseState, firstBaseUpdate: l.firstBaseUpdate, lastBaseUpdate: l.lastBaseUpdate, shared: l.shared, effects: l.effects });
  }
  function yl(l, c) {
    return { eventTime: l, lane: c, tag: 0, payload: null, callback: null, next: null };
  }
  function su(l, c, g) {
    var x = l.updateQueue;
    if (x === null) return null;
    if (x = x.shared, Yn & 2) {
      var M = x.pending;
      return M === null ? c.next = c : (c.next = M.next, M.next = c), x.pending = c, da(l, g);
    }
    return M = x.interleaved, M === null ? (c.next = c, Vv(x)) : (c.next = M.next, M.next = c), x.interleaved = c, da(l, g);
  }
  function Bh(l, c, g) {
    if (c = c.updateQueue, c !== null && (c = c.shared, (g & 4194240) !== 0)) {
      var x = c.lanes;
      x &= l.pendingLanes, g |= x, c.lanes = g, ul(l, g);
    }
  }
  function kS(l, c) {
    var g = l.updateQueue, x = l.alternate;
    if (x !== null && (x = x.updateQueue, g === x)) {
      var M = null, $ = null;
      if (g = g.firstBaseUpdate, g !== null) {
        do {
          var oe = { eventTime: g.eventTime, lane: g.lane, tag: g.tag, payload: g.payload, callback: g.callback, next: null };
          $ === null ? M = $ = oe : $ = $.next = oe, g = g.next;
        } while (g !== null);
        $ === null ? M = $ = c : $ = $.next = c;
      } else M = $ = c;
      g = { baseState: x.baseState, firstBaseUpdate: M, lastBaseUpdate: $, shared: x.shared, effects: x.effects }, l.updateQueue = g;
      return;
    }
    l = g.lastBaseUpdate, l === null ? g.firstBaseUpdate = c : l.next = c, g.lastBaseUpdate = c;
  }
  function qf(l, c, g, x) {
    var M = l.updateQueue;
    fa = !1;
    var $ = M.firstBaseUpdate, oe = M.lastBaseUpdate, he = M.shared.pending;
    if (he !== null) {
      M.shared.pending = null;
      var Se = he, je = Se.next;
      Se.next = null, oe === null ? $ = je : oe.next = je, oe = Se;
      var lt = l.alternate;
      lt !== null && (lt = lt.updateQueue, he = lt.lastBaseUpdate, he !== oe && (he === null ? lt.firstBaseUpdate = je : he.next = je, lt.lastBaseUpdate = Se));
    }
    if ($ !== null) {
      var dt = M.baseState;
      oe = 0, lt = je = Se = null, he = $;
      do {
        var st = he.lane, Ft = he.eventTime;
        if ((x & st) === st) {
          lt !== null && (lt = lt.next = {
            eventTime: Ft,
            lane: 0,
            tag: he.tag,
            payload: he.payload,
            callback: he.callback,
            next: null
          });
          e: {
            var Wt = l, Yt = he;
            switch (st = c, Ft = g, Yt.tag) {
              case 1:
                if (Wt = Yt.payload, typeof Wt == "function") {
                  dt = Wt.call(Ft, dt, st);
                  break e;
                }
                dt = Wt;
                break e;
              case 3:
                Wt.flags = Wt.flags & -65537 | 128;
              case 0:
                if (Wt = Yt.payload, st = typeof Wt == "function" ? Wt.call(Ft, dt, st) : Wt, st == null) break e;
                dt = X({}, dt, st);
                break e;
              case 2:
                fa = !0;
            }
          }
          he.callback !== null && he.lane !== 0 && (l.flags |= 64, st = M.effects, st === null ? M.effects = [he] : st.push(he));
        } else Ft = { eventTime: Ft, lane: st, tag: he.tag, payload: he.payload, callback: he.callback, next: null }, lt === null ? (je = lt = Ft, Se = dt) : lt = lt.next = Ft, oe |= st;
        if (he = he.next, he === null) {
          if (he = M.shared.pending, he === null) break;
          st = he, he = st.next, st.next = null, M.lastBaseUpdate = st, M.shared.pending = null;
        }
      } while (!0);
      if (lt === null && (Se = dt), M.baseState = Se, M.firstBaseUpdate = je, M.lastBaseUpdate = lt, c = M.shared.interleaved, c !== null) {
        M = c;
        do
          oe |= M.lane, M = M.next;
        while (M !== c);
      } else $ === null && (M.shared.lanes = 0);
      _s |= oe, l.lanes = oe, l.memoizedState = dt;
    }
  }
  function Gv(l, c, g) {
    if (l = c.effects, c.effects = null, l !== null) for (c = 0; c < l.length; c++) {
      var x = l[c], M = x.callback;
      if (M !== null) {
        if (x.callback = null, x = g, typeof M != "function") throw Error(n(191, M));
        M.call(x);
      }
    }
  }
  var Kf = {}, Ds = Ia(Kf), Yf = Ia(Kf), Xf = Ia(Kf);
  function dc(l) {
    if (l === Kf) throw Error(n(174));
    return l;
  }
  function Wv(l, c) {
    switch (Zt(Xf, c), Zt(Yf, l), Zt(Ds, Kf), l = c.nodeType, l) {
      case 9:
      case 11:
        c = (c = c.documentElement) ? c.namespaceURI : Lt(null, "");
        break;
      default:
        l = l === 8 ? c.parentNode : c, c = l.namespaceURI || null, l = l.tagName, c = Lt(c, l);
    }
    jr(Ds), Zt(Ds, c);
  }
  function fc() {
    jr(Ds), jr(Yf), jr(Xf);
  }
  function PS(l) {
    dc(Xf.current);
    var c = dc(Ds.current), g = Lt(c, l.type);
    c !== g && (Zt(Yf, l), Zt(Ds, g));
  }
  function Uh(l) {
    Yf.current === l && (jr(Ds), jr(Yf));
  }
  var Zr = Ia(0);
  function Gh(l) {
    for (var c = l; c !== null; ) {
      if (c.tag === 13) {
        var g = c.memoizedState;
        if (g !== null && (g = g.dehydrated, g === null || g.data === "$?" || g.data === "$!")) return c;
      } else if (c.tag === 19 && c.memoizedProps.revealOrder !== void 0) {
        if (c.flags & 128) return c;
      } else if (c.child !== null) {
        c.child.return = c, c = c.child;
        continue;
      }
      if (c === l) break;
      for (; c.sibling === null; ) {
        if (c.return === null || c.return === l) return null;
        c = c.return;
      }
      c.sibling.return = c.return, c = c.sibling;
    }
    return null;
  }
  var Qf = [];
  function nn() {
    for (var l = 0; l < Qf.length; l++) Qf[l]._workInProgressVersionPrimary = null;
    Qf.length = 0;
  }
  var Ln = P.ReactCurrentDispatcher, ir = P.ReactCurrentBatchConfig, Tr = 0, ar = null, bo = null, zo = null, Wh = !1, Jf = !1, pc = 0, at = 0;
  function nr() {
    throw Error(n(321));
  }
  function hn(l, c) {
    if (c === null) return !1;
    for (var g = 0; g < c.length && g < l.length; g++) if (!es(l[g], c[g])) return !1;
    return !0;
  }
  function lu(l, c, g, x, M, $) {
    if (Tr = $, ar = c, c.memoizedState = null, c.updateQueue = null, c.lanes = 0, Ln.current = l === null || l.memoizedState === null ? sm : op, l = g(x, M), Jf) {
      $ = 0;
      do {
        if (Jf = !1, pc = 0, 25 <= $) throw Error(n(301));
        $ += 1, zo = bo = null, c.updateQueue = null, Ln.current = lm, l = g(x, M);
      } while (Jf);
    }
    if (Ln.current = yc, c = bo !== null && bo.next !== null, Tr = 0, zo = bo = ar = null, Wh = !1, c) throw Error(n(300));
    return l;
  }
  function ns() {
    var l = pc !== 0;
    return pc = 0, l;
  }
  function pi() {
    var l = { memoizedState: null, baseState: null, baseQueue: null, queue: null, next: null };
    return zo === null ? ar.memoizedState = zo = l : zo = zo.next = l, zo;
  }
  function lo() {
    if (bo === null) {
      var l = ar.alternate;
      l = l !== null ? l.memoizedState : null;
    } else l = bo.next;
    var c = zo === null ? ar.memoizedState : zo.next;
    if (c !== null) zo = c, bo = l;
    else {
      if (l === null) throw Error(n(310));
      bo = l, l = { memoizedState: bo.memoizedState, baseState: bo.baseState, baseQueue: bo.baseQueue, queue: bo.queue, next: null }, zo === null ? ar.memoizedState = zo = l : zo = zo.next = l;
    }
    return zo;
  }
  function bl(l, c) {
    return typeof c == "function" ? c(l) : c;
  }
  function uu(l) {
    var c = lo(), g = c.queue;
    if (g === null) throw Error(n(311));
    g.lastRenderedReducer = l;
    var x = bo, M = x.baseQueue, $ = g.pending;
    if ($ !== null) {
      if (M !== null) {
        var oe = M.next;
        M.next = $.next, $.next = oe;
      }
      x.baseQueue = M = $, g.pending = null;
    }
    if (M !== null) {
      $ = M.next, x = x.baseState;
      var he = oe = null, Se = null, je = $;
      do {
        var lt = je.lane;
        if ((Tr & lt) === lt) Se !== null && (Se = Se.next = { lane: 0, action: je.action, hasEagerState: je.hasEagerState, eagerState: je.eagerState, next: null }), x = je.hasEagerState ? je.eagerState : l(x, je.action);
        else {
          var dt = {
            lane: lt,
            action: je.action,
            hasEagerState: je.hasEagerState,
            eagerState: je.eagerState,
            next: null
          };
          Se === null ? (he = Se = dt, oe = x) : Se = Se.next = dt, ar.lanes |= lt, _s |= lt;
        }
        je = je.next;
      } while (je !== null && je !== $);
      Se === null ? oe = x : Se.next = he, es(x, c.memoizedState) || (Co = !0), c.memoizedState = x, c.baseState = oe, c.baseQueue = Se, g.lastRenderedState = x;
    }
    if (l = g.interleaved, l !== null) {
      M = l;
      do
        $ = M.lane, ar.lanes |= $, _s |= $, M = M.next;
      while (M !== l);
    } else M === null && (g.lanes = 0);
    return [c.memoizedState, g.dispatch];
  }
  function hc(l) {
    var c = lo(), g = c.queue;
    if (g === null) throw Error(n(311));
    g.lastRenderedReducer = l;
    var x = g.dispatch, M = g.pending, $ = c.memoizedState;
    if (M !== null) {
      g.pending = null;
      var oe = M = M.next;
      do
        $ = l($, oe.action), oe = oe.next;
      while (oe !== M);
      es($, c.memoizedState) || (Co = !0), c.memoizedState = $, c.baseQueue === null && (c.baseState = $), g.lastRenderedState = $;
    }
    return [$, x];
  }
  function qh() {
  }
  function Kh(l, c) {
    var g = ar, x = lo(), M = c(), $ = !es(x.memoizedState, M);
    if ($ && (x.memoizedState = M, Co = !0), x = x.queue, Zf(Qh.bind(null, g, x, l), [l]), x.getSnapshot !== c || $ || zo !== null && zo.memoizedState.tag & 1) {
      if (g.flags |= 2048, mc(9, Xh.bind(null, g, x, M, c), void 0, null), Fo === null) throw Error(n(349));
      Tr & 30 || Yh(g, c, M);
    }
    return M;
  }
  function Yh(l, c, g) {
    l.flags |= 16384, l = { getSnapshot: c, value: g }, c = ar.updateQueue, c === null ? (c = { lastEffect: null, stores: null }, ar.updateQueue = c, c.stores = [l]) : (g = c.stores, g === null ? c.stores = [l] : g.push(l));
  }
  function Xh(l, c, g, x) {
    c.value = g, c.getSnapshot = x, Jh(c) && Zh(l);
  }
  function Qh(l, c, g) {
    return g(function() {
      Jh(c) && Zh(l);
    });
  }
  function Jh(l) {
    var c = l.getSnapshot;
    l = l.value;
    try {
      var g = c();
      return !es(l, g);
    } catch {
      return !0;
    }
  }
  function Zh(l) {
    var c = da(l, 1);
    c !== null && Oi(c, l, 1, -1);
  }
  function em(l) {
    var c = pi();
    return typeof l == "function" && (l = l()), c.memoizedState = c.baseState = l, l = { pending: null, interleaved: null, lanes: 0, dispatch: null, lastRenderedReducer: bl, lastRenderedState: l }, c.queue = l, l = l.dispatch = vc.bind(null, ar, l), [c.memoizedState, l];
  }
  function mc(l, c, g, x) {
    return l = { tag: l, create: c, destroy: g, deps: x, next: null }, c = ar.updateQueue, c === null ? (c = { lastEffect: null, stores: null }, ar.updateQueue = c, c.lastEffect = l.next = l) : (g = c.lastEffect, g === null ? c.lastEffect = l.next = l : (x = g.next, g.next = l, l.next = x, c.lastEffect = l)), l;
  }
  function tm() {
    return lo().memoizedState;
  }
  function xd(l, c, g, x) {
    var M = pi();
    ar.flags |= l, M.memoizedState = mc(1 | c, g, void 0, x === void 0 ? null : x);
  }
  function Ed(l, c, g, x) {
    var M = lo();
    x = x === void 0 ? null : x;
    var $ = void 0;
    if (bo !== null) {
      var oe = bo.memoizedState;
      if ($ = oe.destroy, x !== null && hn(x, oe.deps)) {
        M.memoizedState = mc(c, g, $, x);
        return;
      }
    }
    ar.flags |= l, M.memoizedState = mc(1 | c, g, $, x);
  }
  function nm(l, c) {
    return xd(8390656, 8, l, c);
  }
  function Zf(l, c) {
    return Ed(2048, 8, l, c);
  }
  function rm(l, c) {
    return Ed(4, 2, l, c);
  }
  function ep(l, c) {
    return Ed(4, 4, l, c);
  }
  function gc(l, c) {
    if (typeof c == "function") return l = l(), c(l), function() {
      c(null);
    };
    if (c != null) return l = l(), c.current = l, function() {
      c.current = null;
    };
  }
  function om(l, c, g) {
    return g = g != null ? g.concat([l]) : null, Ed(4, 4, gc.bind(null, c, l), g);
  }
  function tp() {
  }
  function im(l, c) {
    var g = lo();
    c = c === void 0 ? null : c;
    var x = g.memoizedState;
    return x !== null && c !== null && hn(c, x[1]) ? x[0] : (g.memoizedState = [l, c], l);
  }
  function am(l, c) {
    var g = lo();
    c = c === void 0 ? null : c;
    var x = g.memoizedState;
    return x !== null && c !== null && hn(c, x[1]) ? x[0] : (l = l(), g.memoizedState = [l, c], l);
  }
  function qv(l, c, g) {
    return Tr & 21 ? (es(g, c) || (g = rd(), ar.lanes |= g, _s |= g, l.baseState = !0), c) : (l.baseState && (l.baseState = !1, Co = !0), l.memoizedState = g);
  }
  function np(l, c) {
    var g = or;
    or = g !== 0 && 4 > g ? g : 4, l(!0);
    var x = ir.transition;
    ir.transition = {};
    try {
      l(!1), c();
    } finally {
      or = g, ir.transition = x;
    }
  }
  function Kv() {
    return lo().memoizedState;
  }
  function rp(l, c, g) {
    var x = As(l);
    if (g = { lane: x, action: g, hasEagerState: !1, eagerState: null, next: null }, qi(l)) MS(c, g);
    else if (g = Bv(l, c, g, x), g !== null) {
      var M = xo();
      Oi(g, l, x, M), Lr(g, c, x);
    }
  }
  function vc(l, c, g) {
    var x = As(l), M = { lane: x, action: g, hasEagerState: !1, eagerState: null, next: null };
    if (qi(l)) MS(c, M);
    else {
      var $ = l.alternate;
      if (l.lanes === 0 && ($ === null || $.lanes === 0) && ($ = c.lastRenderedReducer, $ !== null)) try {
        var oe = c.lastRenderedState, he = $(oe, g);
        if (M.hasEagerState = !0, M.eagerState = he, es(he, oe)) {
          var Se = c.interleaved;
          Se === null ? (M.next = M, Vv(c)) : (M.next = Se.next, Se.next = M), c.interleaved = M;
          return;
        }
      } catch {
      } finally {
      }
      g = Bv(l, c, M, x), g !== null && (M = xo(), Oi(g, l, x, M), Lr(g, c, x));
    }
  }
  function qi(l) {
    var c = l.alternate;
    return l === ar || c !== null && c === ar;
  }
  function MS(l, c) {
    Jf = Wh = !0;
    var g = l.pending;
    g === null ? c.next = c : (c.next = g.next, g.next = c), l.pending = c;
  }
  function Lr(l, c, g) {
    if (g & 4194240) {
      var x = c.lanes;
      x &= l.pendingLanes, g |= x, c.lanes = g, ul(l, g);
    }
  }
  var yc = { readContext: La, useCallback: nr, useContext: nr, useEffect: nr, useImperativeHandle: nr, useInsertionEffect: nr, useLayoutEffect: nr, useMemo: nr, useReducer: nr, useRef: nr, useState: nr, useDebugValue: nr, useDeferredValue: nr, useTransition: nr, useMutableSource: nr, useSyncExternalStore: nr, useId: nr, unstable_isNewReconciler: !1 }, sm = { readContext: La, useCallback: function(l, c) {
    return pi().memoizedState = [l, c === void 0 ? null : c], l;
  }, useContext: La, useEffect: nm, useImperativeHandle: function(l, c, g) {
    return g = g != null ? g.concat([l]) : null, xd(
      4194308,
      4,
      gc.bind(null, c, l),
      g
    );
  }, useLayoutEffect: function(l, c) {
    return xd(4194308, 4, l, c);
  }, useInsertionEffect: function(l, c) {
    return xd(4, 2, l, c);
  }, useMemo: function(l, c) {
    var g = pi();
    return c = c === void 0 ? null : c, l = l(), g.memoizedState = [l, c], l;
  }, useReducer: function(l, c, g) {
    var x = pi();
    return c = g !== void 0 ? g(c) : c, x.memoizedState = x.baseState = c, l = { pending: null, interleaved: null, lanes: 0, dispatch: null, lastRenderedReducer: l, lastRenderedState: c }, x.queue = l, l = l.dispatch = rp.bind(null, ar, l), [x.memoizedState, l];
  }, useRef: function(l) {
    var c = pi();
    return l = { current: l }, c.memoizedState = l;
  }, useState: em, useDebugValue: tp, useDeferredValue: function(l) {
    return pi().memoizedState = l;
  }, useTransition: function() {
    var l = em(!1), c = l[0];
    return l = np.bind(null, l[1]), pi().memoizedState = l, [c, l];
  }, useMutableSource: function() {
  }, useSyncExternalStore: function(l, c, g) {
    var x = ar, M = pi();
    if (qr) {
      if (g === void 0) throw Error(n(407));
      g = g();
    } else {
      if (g = c(), Fo === null) throw Error(n(349));
      Tr & 30 || Yh(x, c, g);
    }
    M.memoizedState = g;
    var $ = { value: g, getSnapshot: c };
    return M.queue = $, nm(Qh.bind(
      null,
      x,
      $,
      l
    ), [l]), x.flags |= 2048, mc(9, Xh.bind(null, x, $, g, c), void 0, null), g;
  }, useId: function() {
    var l = pi(), c = Fo.identifierPrefix;
    if (qr) {
      var g = Is, x = Ms;
      g = (x & ~(1 << 32 - Si(x) - 1)).toString(32) + g, c = ":" + c + "R" + g, g = pc++, 0 < g && (c += "H" + g.toString(32)), c += ":";
    } else g = at++, c = ":" + c + "r" + g.toString(32) + ":";
    return l.memoizedState = c;
  }, unstable_isNewReconciler: !1 }, op = {
    readContext: La,
    useCallback: im,
    useContext: La,
    useEffect: Zf,
    useImperativeHandle: om,
    useInsertionEffect: rm,
    useLayoutEffect: ep,
    useMemo: am,
    useReducer: uu,
    useRef: tm,
    useState: function() {
      return uu(bl);
    },
    useDebugValue: tp,
    useDeferredValue: function(l) {
      var c = lo();
      return qv(c, bo.memoizedState, l);
    },
    useTransition: function() {
      var l = uu(bl)[0], c = lo().memoizedState;
      return [l, c];
    },
    useMutableSource: qh,
    useSyncExternalStore: Kh,
    useId: Kv,
    unstable_isNewReconciler: !1
  }, lm = { readContext: La, useCallback: im, useContext: La, useEffect: Zf, useImperativeHandle: om, useInsertionEffect: rm, useLayoutEffect: ep, useMemo: am, useReducer: hc, useRef: tm, useState: function() {
    return hc(bl);
  }, useDebugValue: tp, useDeferredValue: function(l) {
    var c = lo();
    return bo === null ? c.memoizedState = l : qv(c, bo.memoizedState, l);
  }, useTransition: function() {
    var l = hc(bl)[0], c = lo().memoizedState;
    return [l, c];
  }, useMutableSource: qh, useSyncExternalStore: Kh, useId: Kv, unstable_isNewReconciler: !1 };
  function rs(l, c) {
    if (l && l.defaultProps) {
      c = X({}, c), l = l.defaultProps;
      for (var g in l) c[g] === void 0 && (c[g] = l[g]);
      return c;
    }
    return c;
  }
  function Yv(l, c, g, x) {
    c = l.memoizedState, g = g(x, c), g = g == null ? c : X({}, c, g), l.memoizedState = g, l.lanes === 0 && (l.updateQueue.baseState = g);
  }
  var um = { isMounted: function(l) {
    return (l = l._reactInternals) ? mn(l) === l : !1;
  }, enqueueSetState: function(l, c, g) {
    l = l._reactInternals;
    var x = xo(), M = As(l), $ = yl(x, M);
    $.payload = c, g != null && ($.callback = g), c = su(l, $, M), c !== null && (Oi(c, l, M, x), Bh(c, l, M));
  }, enqueueReplaceState: function(l, c, g) {
    l = l._reactInternals;
    var x = xo(), M = As(l), $ = yl(x, M);
    $.tag = 1, $.payload = c, g != null && ($.callback = g), c = su(l, $, M), c !== null && (Oi(c, l, M, x), Bh(c, l, M));
  }, enqueueForceUpdate: function(l, c) {
    l = l._reactInternals;
    var g = xo(), x = As(l), M = yl(g, x);
    M.tag = 2, c != null && (M.callback = c), c = su(l, M, x), c !== null && (Oi(c, l, x, g), Bh(c, l, x));
  } };
  function IS(l, c, g, x, M, $, oe) {
    return l = l.stateNode, typeof l.shouldComponentUpdate == "function" ? l.shouldComponentUpdate(x, $, oe) : c.prototype && c.prototype.isPureReactComponent ? !Af(g, x) || !Af(M, $) : !0;
  }
  function cm(l, c, g) {
    var x = !1, M = fi, $ = c.contextType;
    return typeof $ == "object" && $ !== null ? $ = La($) : (M = vo(c) ? Vi : oo.current, x = c.contextTypes, $ = (x = x != null) ? Bi(l, M) : fi), c = new c(g, $), l.memoizedState = c.state !== null && c.state !== void 0 ? c.state : null, c.updater = um, l.stateNode = c, c._reactInternals = l, x && (l = l.stateNode, l.__reactInternalMemoizedUnmaskedChildContext = M, l.__reactInternalMemoizedMaskedChildContext = $), c;
  }
  function DS(l, c, g, x) {
    l = c.state, typeof c.componentWillReceiveProps == "function" && c.componentWillReceiveProps(g, x), typeof c.UNSAFE_componentWillReceiveProps == "function" && c.UNSAFE_componentWillReceiveProps(g, x), c.state !== l && um.enqueueReplaceState(c, c.state, null);
  }
  function ip(l, c, g, x) {
    var M = l.stateNode;
    M.props = g, M.state = l.memoizedState, M.refs = {}, Uv(l);
    var $ = c.contextType;
    typeof $ == "object" && $ !== null ? M.context = La($) : ($ = vo(c) ? Vi : oo.current, M.context = Bi(l, $)), M.state = l.memoizedState, $ = c.getDerivedStateFromProps, typeof $ == "function" && (Yv(l, c, $, g), M.state = l.memoizedState), typeof c.getDerivedStateFromProps == "function" || typeof M.getSnapshotBeforeUpdate == "function" || typeof M.UNSAFE_componentWillMount != "function" && typeof M.componentWillMount != "function" || (c = M.state, typeof M.componentWillMount == "function" && M.componentWillMount(), typeof M.UNSAFE_componentWillMount == "function" && M.UNSAFE_componentWillMount(), c !== M.state && um.enqueueReplaceState(M, M.state, null), qf(l, g, M, x), M.state = l.memoizedState), typeof M.componentDidMount == "function" && (l.flags |= 4194308);
  }
  function bc(l, c) {
    try {
      var g = "", x = c;
      do
        g += me(x), x = x.return;
      while (x);
      var M = g;
    } catch ($) {
      M = `
Error generating stack: ` + $.message + `
` + $.stack;
    }
    return { value: l, source: c, stack: M, digest: null };
  }
  function Xv(l, c, g) {
    return { value: l, source: null, stack: g ?? null, digest: c ?? null };
  }
  function Qv(l, c) {
    try {
      console.error(c.value);
    } catch (g) {
      setTimeout(function() {
        throw g;
      });
    }
  }
  var dm = typeof WeakMap == "function" ? WeakMap : Map;
  function NS(l, c, g) {
    g = yl(-1, g), g.tag = 3, g.payload = { element: null };
    var x = c.value;
    return g.callback = function() {
      Md || (Md = !0, wc = x), Qv(l, c);
    }, g;
  }
  function Jv(l, c, g) {
    g = yl(-1, g), g.tag = 3;
    var x = l.type.getDerivedStateFromError;
    if (typeof x == "function") {
      var M = c.value;
      g.payload = function() {
        return x(M);
      }, g.callback = function() {
        Qv(l, c);
      };
    }
    var $ = l.stateNode;
    return $ !== null && typeof $.componentDidCatch == "function" && (g.callback = function() {
      Qv(l, c), typeof x != "function" && (fu === null ? fu = /* @__PURE__ */ new Set([this]) : fu.add(this));
      var oe = c.stack;
      this.componentDidCatch(c.value, { componentStack: oe !== null ? oe : "" });
    }), g;
  }
  function Zv(l, c, g) {
    var x = l.pingCache;
    if (x === null) {
      x = l.pingCache = new dm();
      var M = /* @__PURE__ */ new Set();
      x.set(c, M);
    } else M = x.get(c), M === void 0 && (M = /* @__PURE__ */ new Set(), x.set(c, M));
    M.has(g) || (M.add(g), l = fT.bind(null, l, c, g), c.then(l, l));
  }
  function LS(l) {
    do {
      var c;
      if ((c = l.tag === 13) && (c = l.memoizedState, c = c !== null ? c.dehydrated !== null : !0), c) return l;
      l = l.return;
    } while (l !== null);
    return null;
  }
  function cu(l, c, g, x, M) {
    return l.mode & 1 ? (l.flags |= 65536, l.lanes = M, l) : (l === c ? l.flags |= 65536 : (l.flags |= 128, g.flags |= 131072, g.flags &= -52805, g.tag === 1 && (g.alternate === null ? g.tag = 17 : (c = yl(-1, 1), c.tag = 2, su(g, c, 1))), g.lanes |= 1), l);
  }
  var ap = P.ReactCurrentOwner, Co = !1;
  function Yo(l, c, g, x) {
    c.child = l === null ? It(c, null, g, x) : so(c, l.child, g, x);
  }
  function Ki(l, c, g, x, M) {
    g = g.render;
    var $ = c.ref;
    return Jr(c, M), x = lu(l, c, g, x, $, M), g = ns(), l !== null && !Co ? (c.updateQueue = l.updateQueue, c.flags &= -2053, l.lanes &= ~M, _a(l, c, M)) : (qr && g && jh(c), c.flags |= 1, Yo(l, c, x, M), c.child);
  }
  function Cc(l, c, g, x, M) {
    if (l === null) {
      var $ = g.type;
      return typeof $ == "function" && !py($) && $.defaultProps === void 0 && g.compare === null && g.defaultProps === void 0 ? (c.tag = 15, c.type = $, kn(l, c, $, x, M)) : (l = wp(g.type, null, x, c, c.mode, M), l.ref = c.ref, l.return = c, c.child = l);
    }
    if ($ = l.child, !(l.lanes & M)) {
      var oe = $.memoizedProps;
      if (g = g.compare, g = g !== null ? g : Af, g(oe, x) && l.ref === c.ref) return _a(l, c, M);
    }
    return c.flags |= 1, l = hu($, x), l.ref = c.ref, l.return = c, c.child = l;
  }
  function kn(l, c, g, x, M) {
    if (l !== null) {
      var $ = l.memoizedProps;
      if (Af($, x) && l.ref === c.ref) if (Co = !1, c.pendingProps = x = $, (l.lanes & M) !== 0) l.flags & 131072 && (Co = !0);
      else return c.lanes = l.lanes, _a(l, c, M);
    }
    return FS(l, c, g, x, M);
  }
  function sp(l, c, g) {
    var x = c.pendingProps, M = x.children, $ = l !== null ? l.memoizedState : null;
    if (x.mode === "hidden") if (!(c.mode & 1)) c.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }, Zt(Od, pa), pa |= g;
    else {
      if (!(g & 1073741824)) return l = $ !== null ? $.baseLanes | g : g, c.lanes = c.childLanes = 1073741824, c.memoizedState = { baseLanes: l, cachePool: null, transitions: null }, c.updateQueue = null, Zt(Od, pa), pa |= l, null;
      c.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }, x = $ !== null ? $.baseLanes : g, Zt(Od, pa), pa |= x;
    }
    else $ !== null ? (x = $.baseLanes | g, c.memoizedState = null) : x = g, Zt(Od, pa), pa |= x;
    return Yo(l, c, M, g), c.child;
  }
  function ey(l, c) {
    var g = c.ref;
    (l === null && g !== null || l !== null && l.ref !== g) && (c.flags |= 512, c.flags |= 2097152);
  }
  function FS(l, c, g, x, M) {
    var $ = vo(g) ? Vi : oo.current;
    return $ = Bi(c, $), Jr(c, M), g = lu(l, c, g, x, $, M), x = ns(), l !== null && !Co ? (c.updateQueue = l.updateQueue, c.flags &= -2053, l.lanes &= ~M, _a(l, c, M)) : (qr && x && jh(c), c.flags |= 1, Yo(l, c, g, M), c.child);
  }
  function _S(l, c, g, x, M) {
    if (vo(g)) {
      var $ = !0;
      jo(c);
    } else $ = !1;
    if (Jr(c, M), c.stateNode === null) Fa(l, c), cm(c, g, x), ip(c, g, x, M), x = !0;
    else if (l === null) {
      var oe = c.stateNode, he = c.memoizedProps;
      oe.props = he;
      var Se = oe.context, je = g.contextType;
      typeof je == "object" && je !== null ? je = La(je) : (je = vo(g) ? Vi : oo.current, je = Bi(c, je));
      var lt = g.getDerivedStateFromProps, dt = typeof lt == "function" || typeof oe.getSnapshotBeforeUpdate == "function";
      dt || typeof oe.UNSAFE_componentWillReceiveProps != "function" && typeof oe.componentWillReceiveProps != "function" || (he !== x || Se !== je) && DS(c, oe, x, je), fa = !1;
      var st = c.memoizedState;
      oe.state = st, qf(c, x, oe, M), Se = c.memoizedState, he !== x || st !== Se || No.current || fa ? (typeof lt == "function" && (Yv(c, g, lt, x), Se = c.memoizedState), (he = fa || IS(c, g, he, x, st, Se, je)) ? (dt || typeof oe.UNSAFE_componentWillMount != "function" && typeof oe.componentWillMount != "function" || (typeof oe.componentWillMount == "function" && oe.componentWillMount(), typeof oe.UNSAFE_componentWillMount == "function" && oe.UNSAFE_componentWillMount()), typeof oe.componentDidMount == "function" && (c.flags |= 4194308)) : (typeof oe.componentDidMount == "function" && (c.flags |= 4194308), c.memoizedProps = x, c.memoizedState = Se), oe.props = x, oe.state = Se, oe.context = je, x = he) : (typeof oe.componentDidMount == "function" && (c.flags |= 4194308), x = !1);
    } else {
      oe = c.stateNode, OS(l, c), he = c.memoizedProps, je = c.type === c.elementType ? he : rs(c.type, he), oe.props = je, dt = c.pendingProps, st = oe.context, Se = g.contextType, typeof Se == "object" && Se !== null ? Se = La(Se) : (Se = vo(g) ? Vi : oo.current, Se = Bi(c, Se));
      var Ft = g.getDerivedStateFromProps;
      (lt = typeof Ft == "function" || typeof oe.getSnapshotBeforeUpdate == "function") || typeof oe.UNSAFE_componentWillReceiveProps != "function" && typeof oe.componentWillReceiveProps != "function" || (he !== dt || st !== Se) && DS(c, oe, x, Se), fa = !1, st = c.memoizedState, oe.state = st, qf(c, x, oe, M);
      var Wt = c.memoizedState;
      he !== dt || st !== Wt || No.current || fa ? (typeof Ft == "function" && (Yv(c, g, Ft, x), Wt = c.memoizedState), (je = fa || IS(c, g, je, x, st, Wt, Se) || !1) ? (lt || typeof oe.UNSAFE_componentWillUpdate != "function" && typeof oe.componentWillUpdate != "function" || (typeof oe.componentWillUpdate == "function" && oe.componentWillUpdate(x, Wt, Se), typeof oe.UNSAFE_componentWillUpdate == "function" && oe.UNSAFE_componentWillUpdate(x, Wt, Se)), typeof oe.componentDidUpdate == "function" && (c.flags |= 4), typeof oe.getSnapshotBeforeUpdate == "function" && (c.flags |= 1024)) : (typeof oe.componentDidUpdate != "function" || he === l.memoizedProps && st === l.memoizedState || (c.flags |= 4), typeof oe.getSnapshotBeforeUpdate != "function" || he === l.memoizedProps && st === l.memoizedState || (c.flags |= 1024), c.memoizedProps = x, c.memoizedState = Wt), oe.props = x, oe.state = Wt, oe.context = Se, x = je) : (typeof oe.componentDidUpdate != "function" || he === l.memoizedProps && st === l.memoizedState || (c.flags |= 4), typeof oe.getSnapshotBeforeUpdate != "function" || he === l.memoizedProps && st === l.memoizedState || (c.flags |= 1024), x = !1);
    }
    return lp(l, c, g, x, $, M);
  }
  function lp(l, c, g, x, M, $) {
    ey(l, c);
    var oe = (c.flags & 128) !== 0;
    if (!x && !oe) return M && Ah(c, g, !1), _a(l, c, $);
    x = c.stateNode, ap.current = c;
    var he = oe && typeof g.getDerivedStateFromError != "function" ? null : x.render();
    return c.flags |= 1, l !== null && oe ? (c.child = so(c, l.child, null, $), c.child = so(c, null, he, $)) : Yo(l, c, he, $), c.memoizedState = x.state, M && Ah(c, g, !0), c.child;
  }
  function Td(l) {
    var c = l.stateNode;
    c.pendingContext ? xS(l, c.pendingContext, c.pendingContext !== c.context) : c.context && xS(l, c.context, !1), Wv(l, c.containerInfo);
  }
  function AS(l, c, g, x, M) {
    return au(), vl(M), c.flags |= 256, Yo(l, c, g, x), c.child;
  }
  var fm = { dehydrated: null, treeContext: null, retryLane: 0 };
  function ty(l) {
    return { baseLanes: l, cachePool: null, transitions: null };
  }
  function pm(l, c, g) {
    var x = c.pendingProps, M = Zr.current, $ = !1, oe = (c.flags & 128) !== 0, he;
    if ((he = oe) || (he = l !== null && l.memoizedState === null ? !1 : (M & 2) !== 0), he ? ($ = !0, c.flags &= -129) : (l === null || l.memoizedState !== null) && (M |= 1), Zt(Zr, M & 1), l === null)
      return Av(c), l = c.memoizedState, l !== null && (l = l.dehydrated, l !== null) ? (c.mode & 1 ? l.data === "$!" ? c.lanes = 8 : c.lanes = 1073741824 : c.lanes = 1, null) : (oe = x.children, l = x.fallback, $ ? (x = c.mode, $ = c.child, oe = { mode: "hidden", children: oe }, !(x & 1) && $ !== null ? ($.childLanes = 0, $.pendingProps = oe) : $ = mu(oe, x, 0, null), l = xl(l, x, g, null), $.return = c, l.return = c, $.sibling = l, c.child = $, c.child.memoizedState = ty(g), c.memoizedState = fm, l) : ny(c, oe));
    if (M = l.memoizedState, M !== null && (he = M.dehydrated, he !== null)) return $S(l, c, oe, x, he, M, g);
    if ($) {
      $ = x.fallback, oe = c.mode, M = l.child, he = M.sibling;
      var Se = { mode: "hidden", children: x.children };
      return !(oe & 1) && c.child !== M ? (x = c.child, x.childLanes = 0, x.pendingProps = Se, c.deletions = null) : (x = hu(M, Se), x.subtreeFlags = M.subtreeFlags & 14680064), he !== null ? $ = hu(he, $) : ($ = xl($, oe, g, null), $.flags |= 2), $.return = c, x.return = c, x.sibling = $, c.child = x, x = $, $ = c.child, oe = l.child.memoizedState, oe = oe === null ? ty(g) : { baseLanes: oe.baseLanes | g, cachePool: null, transitions: oe.transitions }, $.memoizedState = oe, $.childLanes = l.childLanes & ~g, c.memoizedState = fm, x;
    }
    return $ = l.child, l = $.sibling, x = hu($, { mode: "visible", children: x.children }), !(c.mode & 1) && (x.lanes = g), x.return = c, x.sibling = null, l !== null && (g = c.deletions, g === null ? (c.deletions = [l], c.flags |= 16) : g.push(l)), c.child = x, c.memoizedState = null, x;
  }
  function ny(l, c) {
    return c = mu({ mode: "visible", children: c }, l.mode, 0, null), c.return = l, l.child = c;
  }
  function up(l, c, g, x) {
    return x !== null && vl(x), so(c, l.child, null, g), l = ny(c, c.pendingProps.children), l.flags |= 2, c.memoizedState = null, l;
  }
  function $S(l, c, g, x, M, $, oe) {
    if (g)
      return c.flags & 256 ? (c.flags &= -257, x = Xv(Error(n(422))), up(l, c, oe, x)) : c.memoizedState !== null ? (c.child = l.child, c.flags |= 128, null) : ($ = x.fallback, M = c.mode, x = mu({ mode: "visible", children: x.children }, M, 0, null), $ = xl($, M, oe, null), $.flags |= 2, x.return = c, $.return = c, x.sibling = $, c.child = x, c.mode & 1 && so(c, l.child, null, oe), c.child.memoizedState = ty(oe), c.memoizedState = fm, $);
    if (!(c.mode & 1)) return up(l, c, oe, null);
    if (M.data === "$!") {
      if (x = M.nextSibling && M.nextSibling.dataset, x) var he = x.dgst;
      return x = he, $ = Error(n(419)), x = Xv($, x, void 0), up(l, c, oe, x);
    }
    if (he = (oe & l.childLanes) !== 0, Co || he) {
      if (x = Fo, x !== null) {
        switch (oe & -oe) {
          case 4:
            M = 2;
            break;
          case 16:
            M = 8;
            break;
          case 64:
          case 128:
          case 256:
          case 512:
          case 1024:
          case 2048:
          case 4096:
          case 8192:
          case 16384:
          case 32768:
          case 65536:
          case 131072:
          case 262144:
          case 524288:
          case 1048576:
          case 2097152:
          case 4194304:
          case 8388608:
          case 16777216:
          case 33554432:
          case 67108864:
            M = 32;
            break;
          case 536870912:
            M = 268435456;
            break;
          default:
            M = 0;
        }
        M = M & (x.suspendedLanes | oe) ? 0 : M, M !== 0 && M !== $.retryLane && ($.retryLane = M, da(l, M), Oi(x, l, M, -1));
      }
      return fy(), x = Xv(Error(n(421))), up(l, c, oe, x);
    }
    return M.data === "$?" ? (c.flags |= 128, c.child = l.child, c = pT.bind(null, l), M._reactRetry = c, null) : (l = $.treeContext, Gi = Rs(M.nextSibling), Ui = c, qr = !0, Na = null, l !== null && (yo[Da++] = Ms, yo[Da++] = Is, yo[Da++] = ua, Ms = l.id, Is = l.overflow, ua = c), c = ny(c, x.children), c.flags |= 4096, c);
  }
  function ry(l, c, g) {
    l.lanes |= c;
    var x = l.alternate;
    x !== null && (x.lanes |= c), Hv(l.return, c, g);
  }
  function Ei(l, c, g, x, M) {
    var $ = l.memoizedState;
    $ === null ? l.memoizedState = { isBackwards: c, rendering: null, renderingStartTime: 0, last: x, tail: g, tailMode: M } : ($.isBackwards = c, $.rendering = null, $.renderingStartTime = 0, $.last = x, $.tail = g, $.tailMode = M);
  }
  function Ns(l, c, g) {
    var x = c.pendingProps, M = x.revealOrder, $ = x.tail;
    if (Yo(l, c, x.children, g), x = Zr.current, x & 2) x = x & 1 | 2, c.flags |= 128;
    else {
      if (l !== null && l.flags & 128) e: for (l = c.child; l !== null; ) {
        if (l.tag === 13) l.memoizedState !== null && ry(l, g, c);
        else if (l.tag === 19) ry(l, g, c);
        else if (l.child !== null) {
          l.child.return = l, l = l.child;
          continue;
        }
        if (l === c) break e;
        for (; l.sibling === null; ) {
          if (l.return === null || l.return === c) break e;
          l = l.return;
        }
        l.sibling.return = l.return, l = l.sibling;
      }
      x &= 1;
    }
    if (Zt(Zr, x), !(c.mode & 1)) c.memoizedState = null;
    else switch (M) {
      case "forwards":
        for (g = c.child, M = null; g !== null; ) l = g.alternate, l !== null && Gh(l) === null && (M = g), g = g.sibling;
        g = M, g === null ? (M = c.child, c.child = null) : (M = g.sibling, g.sibling = null), Ei(c, !1, M, g, $);
        break;
      case "backwards":
        for (g = null, M = c.child, c.child = null; M !== null; ) {
          if (l = M.alternate, l !== null && Gh(l) === null) {
            c.child = M;
            break;
          }
          l = M.sibling, M.sibling = g, g = M, M = l;
        }
        Ei(c, !0, g, null, $);
        break;
      case "together":
        Ei(c, !1, null, null, void 0);
        break;
      default:
        c.memoizedState = null;
    }
    return c.child;
  }
  function Fa(l, c) {
    !(c.mode & 1) && l !== null && (l.alternate = null, c.alternate = null, c.flags |= 2);
  }
  function _a(l, c, g) {
    if (l !== null && (c.dependencies = l.dependencies), _s |= c.lanes, !(g & c.childLanes)) return null;
    if (l !== null && c.child !== l.child) throw Error(n(153));
    if (c.child !== null) {
      for (l = c.child, g = hu(l, l.pendingProps), c.child = g, g.return = c; l.sibling !== null; ) l = l.sibling, g = g.sibling = hu(l, l.pendingProps), g.return = c;
      g.sibling = null;
    }
    return c.child;
  }
  function cp(l, c, g) {
    switch (c.tag) {
      case 3:
        Td(c), au();
        break;
      case 5:
        PS(c);
        break;
      case 1:
        vo(c.type) && jo(c);
        break;
      case 4:
        Wv(c, c.stateNode.containerInfo);
        break;
      case 10:
        var x = c.type._context, M = c.memoizedProps.value;
        Zt(ca, x._currentValue), x._currentValue = M;
        break;
      case 13:
        if (x = c.memoizedState, x !== null)
          return x.dehydrated !== null ? (Zt(Zr, Zr.current & 1), c.flags |= 128, null) : g & c.child.childLanes ? pm(l, c, g) : (Zt(Zr, Zr.current & 1), l = _a(l, c, g), l !== null ? l.sibling : null);
        Zt(Zr, Zr.current & 1);
        break;
      case 19:
        if (x = (g & c.childLanes) !== 0, l.flags & 128) {
          if (x) return Ns(l, c, g);
          c.flags |= 128;
        }
        if (M = c.memoizedState, M !== null && (M.rendering = null, M.tail = null, M.lastEffect = null), Zt(Zr, Zr.current), x) break;
        return null;
      case 22:
      case 23:
        return c.lanes = 0, sp(l, c, g);
    }
    return _a(l, c, g);
  }
  var Aa, So, jS, zS;
  Aa = function(l, c) {
    for (var g = c.child; g !== null; ) {
      if (g.tag === 5 || g.tag === 6) l.appendChild(g.stateNode);
      else if (g.tag !== 4 && g.child !== null) {
        g.child.return = g, g = g.child;
        continue;
      }
      if (g === c) break;
      for (; g.sibling === null; ) {
        if (g.return === null || g.return === c) return;
        g = g.return;
      }
      g.sibling.return = g.return, g = g.sibling;
    }
  }, So = function() {
  }, jS = function(l, c, g, x) {
    var M = l.memoizedProps;
    if (M !== x) {
      l = c.stateNode, dc(Ds.current);
      var $ = null;
      switch (g) {
        case "input":
          M = _e(l, M), x = _e(l, x), $ = [];
          break;
        case "select":
          M = X({}, M, { value: void 0 }), x = X({}, x, { value: void 0 }), $ = [];
          break;
        case "textarea":
          M = ot(l, M), x = ot(l, x), $ = [];
          break;
        default:
          typeof M.onClick != "function" && typeof x.onClick == "function" && (l.onclick = eu);
      }
      Ge(g, x);
      var oe;
      g = null;
      for (je in M) if (!x.hasOwnProperty(je) && M.hasOwnProperty(je) && M[je] != null) if (je === "style") {
        var he = M[je];
        for (oe in he) he.hasOwnProperty(oe) && (g || (g = {}), g[oe] = "");
      } else je !== "dangerouslySetInnerHTML" && je !== "children" && je !== "suppressContentEditableWarning" && je !== "suppressHydrationWarning" && je !== "autoFocus" && (s.hasOwnProperty(je) ? $ || ($ = []) : ($ = $ || []).push(je, null));
      for (je in x) {
        var Se = x[je];
        if (he = M != null ? M[je] : void 0, x.hasOwnProperty(je) && Se !== he && (Se != null || he != null)) if (je === "style") if (he) {
          for (oe in he) !he.hasOwnProperty(oe) || Se && Se.hasOwnProperty(oe) || (g || (g = {}), g[oe] = "");
          for (oe in Se) Se.hasOwnProperty(oe) && he[oe] !== Se[oe] && (g || (g = {}), g[oe] = Se[oe]);
        } else g || ($ || ($ = []), $.push(
          je,
          g
        )), g = Se;
        else je === "dangerouslySetInnerHTML" ? (Se = Se ? Se.__html : void 0, he = he ? he.__html : void 0, Se != null && he !== Se && ($ = $ || []).push(je, Se)) : je === "children" ? typeof Se != "string" && typeof Se != "number" || ($ = $ || []).push(je, "" + Se) : je !== "suppressContentEditableWarning" && je !== "suppressHydrationWarning" && (s.hasOwnProperty(je) ? (Se != null && je === "onScroll" && fr("scroll", l), $ || he === Se || ($ = [])) : ($ = $ || []).push(je, Se));
      }
      g && ($ = $ || []).push("style", g);
      var je = $;
      (c.updateQueue = je) && (c.flags |= 4);
    }
  }, zS = function(l, c, g, x) {
    g !== x && (c.flags |= 4);
  };
  function dp(l, c) {
    if (!qr) switch (l.tailMode) {
      case "hidden":
        c = l.tail;
        for (var g = null; c !== null; ) c.alternate !== null && (g = c), c = c.sibling;
        g === null ? l.tail = null : g.sibling = null;
        break;
      case "collapsed":
        g = l.tail;
        for (var x = null; g !== null; ) g.alternate !== null && (x = g), g = g.sibling;
        x === null ? c || l.tail === null ? l.tail = null : l.tail.sibling = null : x.sibling = null;
    }
  }
  function Ho(l) {
    var c = l.alternate !== null && l.alternate.child === l.child, g = 0, x = 0;
    if (c) for (var M = l.child; M !== null; ) g |= M.lanes | M.childLanes, x |= M.subtreeFlags & 14680064, x |= M.flags & 14680064, M.return = l, M = M.sibling;
    else for (M = l.child; M !== null; ) g |= M.lanes | M.childLanes, x |= M.subtreeFlags, x |= M.flags, M.return = l, M = M.sibling;
    return l.subtreeFlags |= x, l.childLanes = g, c;
  }
  function HS(l, c, g) {
    var x = c.pendingProps;
    switch (zh(c), c.tag) {
      case 2:
      case 16:
      case 15:
      case 0:
      case 11:
      case 7:
      case 8:
      case 12:
      case 9:
      case 14:
        return Ho(c), null;
      case 1:
        return vo(c.type) && Cd(), Ho(c), null;
      case 3:
        return x = c.stateNode, fc(), jr(No), jr(oo), nn(), x.pendingContext && (x.context = x.pendingContext, x.pendingContext = null), (l === null || l.child === null) && (Hh(c) ? c.flags |= 4 : l === null || l.memoizedState.isDehydrated && !(c.flags & 256) || (c.flags |= 1024, Na !== null && (xc(Na), Na = null))), So(l, c), Ho(c), null;
      case 5:
        Uh(c);
        var M = dc(Xf.current);
        if (g = c.type, l !== null && c.stateNode != null) jS(l, c, g, x, M), l.ref !== c.ref && (c.flags |= 512, c.flags |= 2097152);
        else {
          if (!x) {
            if (c.stateNode === null) throw Error(n(166));
            return Ho(c), null;
          }
          if (l = dc(Ds.current), Hh(c)) {
            x = c.stateNode, g = c.type;
            var $ = c.memoizedProps;
            switch (x[Os] = c, x[Bf] = $, l = (c.mode & 1) !== 0, g) {
              case "dialog":
                fr("cancel", x), fr("close", x);
                break;
              case "iframe":
              case "object":
              case "embed":
                fr("load", x);
                break;
              case "video":
              case "audio":
                for (M = 0; M < zf.length; M++) fr(zf[M], x);
                break;
              case "source":
                fr("error", x);
                break;
              case "img":
              case "image":
              case "link":
                fr(
                  "error",
                  x
                ), fr("load", x);
                break;
              case "details":
                fr("toggle", x);
                break;
              case "input":
                He(x, $), fr("invalid", x);
                break;
              case "select":
                x._wrapperState = { wasMultiple: !!$.multiple }, fr("invalid", x);
                break;
              case "textarea":
                jt(x, $), fr("invalid", x);
            }
            Ge(g, $), M = null;
            for (var oe in $) if ($.hasOwnProperty(oe)) {
              var he = $[oe];
              oe === "children" ? typeof he == "string" ? x.textContent !== he && ($.suppressHydrationWarning !== !0 && Nh(x.textContent, he, l), M = ["children", he]) : typeof he == "number" && x.textContent !== "" + he && ($.suppressHydrationWarning !== !0 && Nh(
                x.textContent,
                he,
                l
              ), M = ["children", "" + he]) : s.hasOwnProperty(oe) && he != null && oe === "onScroll" && fr("scroll", x);
            }
            switch (g) {
              case "input":
                Re(x), rt(x, $, !0);
                break;
              case "textarea":
                Re(x), Tt(x);
                break;
              case "select":
              case "option":
                break;
              default:
                typeof $.onClick == "function" && (x.onclick = eu);
            }
            x = M, c.updateQueue = x, x !== null && (c.flags |= 4);
          } else {
            oe = M.nodeType === 9 ? M : M.ownerDocument, l === "http://www.w3.org/1999/xhtml" && (l = Rt(g)), l === "http://www.w3.org/1999/xhtml" ? g === "script" ? (l = oe.createElement("div"), l.innerHTML = "<script><\/script>", l = l.removeChild(l.firstChild)) : typeof x.is == "string" ? l = oe.createElement(g, { is: x.is }) : (l = oe.createElement(g), g === "select" && (oe = l, x.multiple ? oe.multiple = !0 : x.size && (oe.size = x.size))) : l = oe.createElementNS(l, g), l[Os] = c, l[Bf] = x, Aa(l, c, !1, !1), c.stateNode = l;
            e: {
              switch (oe = Et(g, x), g) {
                case "dialog":
                  fr("cancel", l), fr("close", l), M = x;
                  break;
                case "iframe":
                case "object":
                case "embed":
                  fr("load", l), M = x;
                  break;
                case "video":
                case "audio":
                  for (M = 0; M < zf.length; M++) fr(zf[M], l);
                  M = x;
                  break;
                case "source":
                  fr("error", l), M = x;
                  break;
                case "img":
                case "image":
                case "link":
                  fr(
                    "error",
                    l
                  ), fr("load", l), M = x;
                  break;
                case "details":
                  fr("toggle", l), M = x;
                  break;
                case "input":
                  He(l, x), M = _e(l, x), fr("invalid", l);
                  break;
                case "option":
                  M = x;
                  break;
                case "select":
                  l._wrapperState = { wasMultiple: !!x.multiple }, M = X({}, x, { value: void 0 }), fr("invalid", l);
                  break;
                case "textarea":
                  jt(l, x), M = ot(l, x), fr("invalid", l);
                  break;
                default:
                  M = x;
              }
              Ge(g, M), he = M;
              for ($ in he) if (he.hasOwnProperty($)) {
                var Se = he[$];
                $ === "style" ? zt(l, Se) : $ === "dangerouslySetInnerHTML" ? (Se = Se ? Se.__html : void 0, Se != null && Qe(l, Se)) : $ === "children" ? typeof Se == "string" ? (g !== "textarea" || Se !== "") && Oe(l, Se) : typeof Se == "number" && Oe(l, "" + Se) : $ !== "suppressContentEditableWarning" && $ !== "suppressHydrationWarning" && $ !== "autoFocus" && (s.hasOwnProperty($) ? Se != null && $ === "onScroll" && fr("scroll", l) : Se != null && _(l, $, Se, oe));
              }
              switch (g) {
                case "input":
                  Re(l), rt(l, x, !1);
                  break;
                case "textarea":
                  Re(l), Tt(l);
                  break;
                case "option":
                  x.value != null && l.setAttribute("value", "" + pe(x.value));
                  break;
                case "select":
                  l.multiple = !!x.multiple, $ = x.value, $ != null ? gt(l, !!x.multiple, $, !1) : x.defaultValue != null && gt(
                    l,
                    !!x.multiple,
                    x.defaultValue,
                    !0
                  );
                  break;
                default:
                  typeof M.onClick == "function" && (l.onclick = eu);
              }
              switch (g) {
                case "button":
                case "input":
                case "select":
                case "textarea":
                  x = !!x.autoFocus;
                  break e;
                case "img":
                  x = !0;
                  break e;
                default:
                  x = !1;
              }
            }
            x && (c.flags |= 4);
          }
          c.ref !== null && (c.flags |= 512, c.flags |= 2097152);
        }
        return Ho(c), null;
      case 6:
        if (l && c.stateNode != null) zS(l, c, l.memoizedProps, x);
        else {
          if (typeof x != "string" && c.stateNode === null) throw Error(n(166));
          if (g = dc(Xf.current), dc(Ds.current), Hh(c)) {
            if (x = c.stateNode, g = c.memoizedProps, x[Os] = c, ($ = x.nodeValue !== g) && (l = Ui, l !== null)) switch (l.tag) {
              case 3:
                Nh(x.nodeValue, g, (l.mode & 1) !== 0);
                break;
              case 5:
                l.memoizedProps.suppressHydrationWarning !== !0 && Nh(x.nodeValue, g, (l.mode & 1) !== 0);
            }
            $ && (c.flags |= 4);
          } else x = (g.nodeType === 9 ? g : g.ownerDocument).createTextNode(x), x[Os] = c, c.stateNode = x;
        }
        return Ho(c), null;
      case 13:
        if (jr(Zr), x = c.memoizedState, l === null || l.memoizedState !== null && l.memoizedState.dehydrated !== null) {
          if (qr && Gi !== null && c.mode & 1 && !(c.flags & 128)) Wf(), au(), c.flags |= 98560, $ = !1;
          else if ($ = Hh(c), x !== null && x.dehydrated !== null) {
            if (l === null) {
              if (!$) throw Error(n(318));
              if ($ = c.memoizedState, $ = $ !== null ? $.dehydrated : null, !$) throw Error(n(317));
              $[Os] = c;
            } else au(), !(c.flags & 128) && (c.memoizedState = null), c.flags |= 4;
            Ho(c), $ = !1;
          } else Na !== null && (xc(Na), Na = null), $ = !0;
          if (!$) return c.flags & 65536 ? c : null;
        }
        return c.flags & 128 ? (c.lanes = g, c) : (x = x !== null, x !== (l !== null && l.memoizedState !== null) && x && (c.child.flags |= 8192, c.mode & 1 && (l === null || Zr.current & 1 ? co === 0 && (co = 3) : fy())), c.updateQueue !== null && (c.flags |= 4), Ho(c), null);
      case 4:
        return fc(), So(l, c), l === null && md(c.stateNode.containerInfo), Ho(c), null;
      case 10:
        return zv(c.type._context), Ho(c), null;
      case 17:
        return vo(c.type) && Cd(), Ho(c), null;
      case 19:
        if (jr(Zr), $ = c.memoizedState, $ === null) return Ho(c), null;
        if (x = (c.flags & 128) !== 0, oe = $.rendering, oe === null) if (x) dp($, !1);
        else {
          if (co !== 0 || l !== null && l.flags & 128) for (l = c.child; l !== null; ) {
            if (oe = Gh(l), oe !== null) {
              for (c.flags |= 128, dp($, !1), x = oe.updateQueue, x !== null && (c.updateQueue = x, c.flags |= 4), c.subtreeFlags = 0, x = g, g = c.child; g !== null; ) $ = g, l = x, $.flags &= 14680066, oe = $.alternate, oe === null ? ($.childLanes = 0, $.lanes = l, $.child = null, $.subtreeFlags = 0, $.memoizedProps = null, $.memoizedState = null, $.updateQueue = null, $.dependencies = null, $.stateNode = null) : ($.childLanes = oe.childLanes, $.lanes = oe.lanes, $.child = oe.child, $.subtreeFlags = 0, $.deletions = null, $.memoizedProps = oe.memoizedProps, $.memoizedState = oe.memoizedState, $.updateQueue = oe.updateQueue, $.type = oe.type, l = oe.dependencies, $.dependencies = l === null ? null : { lanes: l.lanes, firstContext: l.firstContext }), g = g.sibling;
              return Zt(Zr, Zr.current & 1 | 2), c.child;
            }
            l = l.sibling;
          }
          $.tail !== null && xn() > Pd && (c.flags |= 128, x = !0, dp($, !1), c.lanes = 4194304);
        }
        else {
          if (!x) if (l = Gh(oe), l !== null) {
            if (c.flags |= 128, x = !0, g = l.updateQueue, g !== null && (c.updateQueue = g, c.flags |= 4), dp($, !0), $.tail === null && $.tailMode === "hidden" && !oe.alternate && !qr) return Ho(c), null;
          } else 2 * xn() - $.renderingStartTime > Pd && g !== 1073741824 && (c.flags |= 128, x = !0, dp($, !1), c.lanes = 4194304);
          $.isBackwards ? (oe.sibling = c.child, c.child = oe) : (g = $.last, g !== null ? g.sibling = oe : c.child = oe, $.last = oe);
        }
        return $.tail !== null ? (c = $.tail, $.rendering = c, $.tail = c.sibling, $.renderingStartTime = xn(), c.sibling = null, g = Zr.current, Zt(Zr, x ? g & 1 | 2 : g & 1), c) : (Ho(c), null);
      case 22:
      case 23:
        return dy(), x = c.memoizedState !== null, l !== null && l.memoizedState !== null !== x && (c.flags |= 8192), x && c.mode & 1 ? pa & 1073741824 && (Ho(c), c.subtreeFlags & 6 && (c.flags |= 8192)) : Ho(c), null;
      case 24:
        return null;
      case 25:
        return null;
    }
    throw Error(n(156, c.tag));
  }
  function hm(l, c) {
    switch (zh(c), c.tag) {
      case 1:
        return vo(c.type) && Cd(), l = c.flags, l & 65536 ? (c.flags = l & -65537 | 128, c) : null;
      case 3:
        return fc(), jr(No), jr(oo), nn(), l = c.flags, l & 65536 && !(l & 128) ? (c.flags = l & -65537 | 128, c) : null;
      case 5:
        return Uh(c), null;
      case 13:
        if (jr(Zr), l = c.memoizedState, l !== null && l.dehydrated !== null) {
          if (c.alternate === null) throw Error(n(340));
          au();
        }
        return l = c.flags, l & 65536 ? (c.flags = l & -65537 | 128, c) : null;
      case 19:
        return jr(Zr), null;
      case 4:
        return fc(), null;
      case 10:
        return zv(c.type._context), null;
      case 22:
      case 23:
        return dy(), null;
      case 24:
        return null;
      default:
        return null;
    }
  }
  var fp = !1, hi = !1, aT = typeof WeakSet == "function" ? WeakSet : Set, Ht = null;
  function Rd(l, c) {
    var g = l.ref;
    if (g !== null) if (typeof g == "function") try {
      g(null);
    } catch (x) {
      Kr(l, c, x);
    }
    else g.current = null;
  }
  function mm(l, c, g) {
    try {
      g();
    } catch (x) {
      Kr(l, c, x);
    }
  }
  var VS = !1;
  function BS(l, c) {
    if (Vf = ka, l = $f(), Th(l)) {
      if ("selectionStart" in l) var g = { start: l.selectionStart, end: l.selectionEnd };
      else e: {
        g = (g = l.ownerDocument) && g.defaultView || window;
        var x = g.getSelection && g.getSelection();
        if (x && x.rangeCount !== 0) {
          g = x.anchorNode;
          var M = x.anchorOffset, $ = x.focusNode;
          x = x.focusOffset;
          try {
            g.nodeType, $.nodeType;
          } catch {
            g = null;
            break e;
          }
          var oe = 0, he = -1, Se = -1, je = 0, lt = 0, dt = l, st = null;
          t: for (; ; ) {
            for (var Ft; dt !== g || M !== 0 && dt.nodeType !== 3 || (he = oe + M), dt !== $ || x !== 0 && dt.nodeType !== 3 || (Se = oe + x), dt.nodeType === 3 && (oe += dt.nodeValue.length), (Ft = dt.firstChild) !== null; )
              st = dt, dt = Ft;
            for (; ; ) {
              if (dt === l) break t;
              if (st === g && ++je === M && (he = oe), st === $ && ++lt === x && (Se = oe), (Ft = dt.nextSibling) !== null) break;
              dt = st, st = dt.parentNode;
            }
            dt = Ft;
          }
          g = he === -1 || Se === -1 ? null : { start: he, end: Se };
        } else g = null;
      }
      g = g || { start: 0, end: 0 };
    } else g = null;
    for (ic = { focusedElem: l, selectionRange: g }, ka = !1, Ht = c; Ht !== null; ) if (c = Ht, l = c.child, (c.subtreeFlags & 1028) !== 0 && l !== null) l.return = c, Ht = l;
    else for (; Ht !== null; ) {
      c = Ht;
      try {
        var Wt = c.alternate;
        if (c.flags & 1024) switch (c.tag) {
          case 0:
          case 11:
          case 15:
            break;
          case 1:
            if (Wt !== null) {
              var Yt = Wt.memoizedProps, fo = Wt.memoizedState, Pe = c.stateNode, Ee = Pe.getSnapshotBeforeUpdate(c.elementType === c.type ? Yt : rs(c.type, Yt), fo);
              Pe.__reactInternalSnapshotBeforeUpdate = Ee;
            }
            break;
          case 3:
            var Fe = c.stateNode.containerInfo;
            Fe.nodeType === 1 ? Fe.textContent = "" : Fe.nodeType === 9 && Fe.documentElement && Fe.removeChild(Fe.documentElement);
            break;
          case 5:
          case 6:
          case 4:
          case 17:
            break;
          default:
            throw Error(n(163));
        }
      } catch (ut) {
        Kr(c, c.return, ut);
      }
      if (l = c.sibling, l !== null) {
        l.return = c.return, Ht = l;
        break;
      }
      Ht = c.return;
    }
    return Wt = VS, VS = !1, Wt;
  }
  function pp(l, c, g) {
    var x = c.updateQueue;
    if (x = x !== null ? x.lastEffect : null, x !== null) {
      var M = x = x.next;
      do {
        if ((M.tag & l) === l) {
          var $ = M.destroy;
          M.destroy = void 0, $ !== void 0 && mm(c, g, $);
        }
        M = M.next;
      } while (M !== x);
    }
  }
  function hp(l, c) {
    if (c = c.updateQueue, c = c !== null ? c.lastEffect : null, c !== null) {
      var g = c = c.next;
      do {
        if ((g.tag & l) === l) {
          var x = g.create;
          g.destroy = x();
        }
        g = g.next;
      } while (g !== c);
    }
  }
  function oy(l) {
    var c = l.ref;
    if (c !== null) {
      var g = l.stateNode;
      switch (l.tag) {
        case 5:
          l = g;
          break;
        default:
          l = g;
      }
      typeof c == "function" ? c(l) : c.current = l;
    }
  }
  function gm(l) {
    var c = l.alternate;
    c !== null && (l.alternate = null, gm(c)), l.child = null, l.deletions = null, l.sibling = null, l.tag === 5 && (c = l.stateNode, c !== null && (delete c[Os], delete c[Bf], delete c[Uf], delete c[bd], delete c[oT])), l.stateNode = null, l.return = null, l.dependencies = null, l.memoizedProps = null, l.memoizedState = null, l.pendingProps = null, l.stateNode = null, l.updateQueue = null;
  }
  function mp(l) {
    return l.tag === 5 || l.tag === 3 || l.tag === 4;
  }
  function Cl(l) {
    e: for (; ; ) {
      for (; l.sibling === null; ) {
        if (l.return === null || mp(l.return)) return null;
        l = l.return;
      }
      for (l.sibling.return = l.return, l = l.sibling; l.tag !== 5 && l.tag !== 6 && l.tag !== 18; ) {
        if (l.flags & 2 || l.child === null || l.tag === 4) continue e;
        l.child.return = l, l = l.child;
      }
      if (!(l.flags & 2)) return l.stateNode;
    }
  }
  function Ls(l, c, g) {
    var x = l.tag;
    if (x === 5 || x === 6) l = l.stateNode, c ? g.nodeType === 8 ? g.parentNode.insertBefore(l, c) : g.insertBefore(l, c) : (g.nodeType === 8 ? (c = g.parentNode, c.insertBefore(l, g)) : (c = g, c.appendChild(l)), g = g._reactRootContainer, g != null || c.onclick !== null || (c.onclick = eu));
    else if (x !== 4 && (l = l.child, l !== null)) for (Ls(l, c, g), l = l.sibling; l !== null; ) Ls(l, c, g), l = l.sibling;
  }
  function Fs(l, c, g) {
    var x = l.tag;
    if (x === 5 || x === 6) l = l.stateNode, c ? g.insertBefore(l, c) : g.appendChild(l);
    else if (x !== 4 && (l = l.child, l !== null)) for (Fs(l, c, g), l = l.sibling; l !== null; ) Fs(l, c, g), l = l.sibling;
  }
  var uo = null, Ti = !1;
  function Ri(l, c, g) {
    for (g = g.child; g !== null; ) US(l, c, g), g = g.sibling;
  }
  function US(l, c, g) {
    if (di && typeof di.onCommitFiberUnmount == "function") try {
      di.onCommitFiberUnmount(zi, g);
    } catch {
    }
    switch (g.tag) {
      case 5:
        hi || Rd(g, c);
      case 6:
        var x = uo, M = Ti;
        uo = null, Ri(l, c, g), uo = x, Ti = M, uo !== null && (Ti ? (l = uo, g = g.stateNode, l.nodeType === 8 ? l.parentNode.removeChild(g) : l.removeChild(g)) : uo.removeChild(g.stateNode));
        break;
      case 18:
        uo !== null && (Ti ? (l = uo, g = g.stateNode, l.nodeType === 8 ? yd(l.parentNode, g) : l.nodeType === 1 && yd(l, g), Ja(l)) : yd(uo, g.stateNode));
        break;
      case 4:
        x = uo, M = Ti, uo = g.stateNode.containerInfo, Ti = !0, Ri(l, c, g), uo = x, Ti = M;
        break;
      case 0:
      case 11:
      case 14:
      case 15:
        if (!hi && (x = g.updateQueue, x !== null && (x = x.lastEffect, x !== null))) {
          M = x = x.next;
          do {
            var $ = M, oe = $.destroy;
            $ = $.tag, oe !== void 0 && ($ & 2 || $ & 4) && mm(g, c, oe), M = M.next;
          } while (M !== x);
        }
        Ri(l, c, g);
        break;
      case 1:
        if (!hi && (Rd(g, c), x = g.stateNode, typeof x.componentWillUnmount == "function")) try {
          x.props = g.memoizedProps, x.state = g.memoizedState, x.componentWillUnmount();
        } catch (he) {
          Kr(g, c, he);
        }
        Ri(l, c, g);
        break;
      case 21:
        Ri(l, c, g);
        break;
      case 22:
        g.mode & 1 ? (hi = (x = hi) || g.memoizedState !== null, Ri(l, c, g), hi = x) : Ri(l, c, g);
        break;
      default:
        Ri(l, c, g);
    }
  }
  function GS(l) {
    var c = l.updateQueue;
    if (c !== null) {
      l.updateQueue = null;
      var g = l.stateNode;
      g === null && (g = l.stateNode = new aT()), c.forEach(function(x) {
        var M = ew.bind(null, l, x);
        g.has(x) || (g.add(x), x.then(M, M));
      });
    }
  }
  function os(l, c) {
    var g = c.deletions;
    if (g !== null) for (var x = 0; x < g.length; x++) {
      var M = g[x];
      try {
        var $ = l, oe = c, he = oe;
        e: for (; he !== null; ) {
          switch (he.tag) {
            case 5:
              uo = he.stateNode, Ti = !1;
              break e;
            case 3:
              uo = he.stateNode.containerInfo, Ti = !0;
              break e;
            case 4:
              uo = he.stateNode.containerInfo, Ti = !0;
              break e;
          }
          he = he.return;
        }
        if (uo === null) throw Error(n(160));
        US($, oe, M), uo = null, Ti = !1;
        var Se = M.alternate;
        Se !== null && (Se.return = null), M.return = null;
      } catch (je) {
        Kr(M, c, je);
      }
    }
    if (c.subtreeFlags & 12854) for (c = c.child; c !== null; ) iy(c, l), c = c.sibling;
  }
  function iy(l, c) {
    var g = l.alternate, x = l.flags;
    switch (l.tag) {
      case 0:
      case 11:
      case 14:
      case 15:
        if (os(c, l), Yi(l), x & 4) {
          try {
            pp(3, l, l.return), hp(3, l);
          } catch (Yt) {
            Kr(l, l.return, Yt);
          }
          try {
            pp(5, l, l.return);
          } catch (Yt) {
            Kr(l, l.return, Yt);
          }
        }
        break;
      case 1:
        os(c, l), Yi(l), x & 512 && g !== null && Rd(g, g.return);
        break;
      case 5:
        if (os(c, l), Yi(l), x & 512 && g !== null && Rd(g, g.return), l.flags & 32) {
          var M = l.stateNode;
          try {
            Oe(M, "");
          } catch (Yt) {
            Kr(l, l.return, Yt);
          }
        }
        if (x & 4 && (M = l.stateNode, M != null)) {
          var $ = l.memoizedProps, oe = g !== null ? g.memoizedProps : $, he = l.type, Se = l.updateQueue;
          if (l.updateQueue = null, Se !== null) try {
            he === "input" && $.type === "radio" && $.name != null && et(M, $), Et(he, oe);
            var je = Et(he, $);
            for (oe = 0; oe < Se.length; oe += 2) {
              var lt = Se[oe], dt = Se[oe + 1];
              lt === "style" ? zt(M, dt) : lt === "dangerouslySetInnerHTML" ? Qe(M, dt) : lt === "children" ? Oe(M, dt) : _(M, lt, dt, je);
            }
            switch (he) {
              case "input":
                Ne(M, $);
                break;
              case "textarea":
                ct(M, $);
                break;
              case "select":
                var st = M._wrapperState.wasMultiple;
                M._wrapperState.wasMultiple = !!$.multiple;
                var Ft = $.value;
                Ft != null ? gt(M, !!$.multiple, Ft, !1) : st !== !!$.multiple && ($.defaultValue != null ? gt(
                  M,
                  !!$.multiple,
                  $.defaultValue,
                  !0
                ) : gt(M, !!$.multiple, $.multiple ? [] : "", !1));
            }
            M[Bf] = $;
          } catch (Yt) {
            Kr(l, l.return, Yt);
          }
        }
        break;
      case 6:
        if (os(c, l), Yi(l), x & 4) {
          if (l.stateNode === null) throw Error(n(162));
          M = l.stateNode, $ = l.memoizedProps;
          try {
            M.nodeValue = $;
          } catch (Yt) {
            Kr(l, l.return, Yt);
          }
        }
        break;
      case 3:
        if (os(c, l), Yi(l), x & 4 && g !== null && g.memoizedState.isDehydrated) try {
          Ja(c.containerInfo);
        } catch (Yt) {
          Kr(l, l.return, Yt);
        }
        break;
      case 4:
        os(c, l), Yi(l);
        break;
      case 13:
        os(c, l), Yi(l), M = l.child, M.flags & 8192 && ($ = M.memoizedState !== null, M.stateNode.isHidden = $, !$ || M.alternate !== null && M.alternate.memoizedState !== null || (ly = xn())), x & 4 && GS(l);
        break;
      case 22:
        if (lt = g !== null && g.memoizedState !== null, l.mode & 1 ? (hi = (je = hi) || lt, os(c, l), hi = je) : os(c, l), Yi(l), x & 8192) {
          if (je = l.memoizedState !== null, (l.stateNode.isHidden = je) && !lt && l.mode & 1) for (Ht = l, lt = l.child; lt !== null; ) {
            for (dt = Ht = lt; Ht !== null; ) {
              switch (st = Ht, Ft = st.child, st.tag) {
                case 0:
                case 11:
                case 14:
                case 15:
                  pp(4, st, st.return);
                  break;
                case 1:
                  Rd(st, st.return);
                  var Wt = st.stateNode;
                  if (typeof Wt.componentWillUnmount == "function") {
                    x = st, g = st.return;
                    try {
                      c = x, Wt.props = c.memoizedProps, Wt.state = c.memoizedState, Wt.componentWillUnmount();
                    } catch (Yt) {
                      Kr(x, g, Yt);
                    }
                  }
                  break;
                case 5:
                  Rd(st, st.return);
                  break;
                case 22:
                  if (st.memoizedState !== null) {
                    gp(dt);
                    continue;
                  }
              }
              Ft !== null ? (Ft.return = st, Ht = Ft) : gp(dt);
            }
            lt = lt.sibling;
          }
          e: for (lt = null, dt = l; ; ) {
            if (dt.tag === 5) {
              if (lt === null) {
                lt = dt;
                try {
                  M = dt.stateNode, je ? ($ = M.style, typeof $.setProperty == "function" ? $.setProperty("display", "none", "important") : $.display = "none") : (he = dt.stateNode, Se = dt.memoizedProps.style, oe = Se != null && Se.hasOwnProperty("display") ? Se.display : null, he.style.display = xt("display", oe));
                } catch (Yt) {
                  Kr(l, l.return, Yt);
                }
              }
            } else if (dt.tag === 6) {
              if (lt === null) try {
                dt.stateNode.nodeValue = je ? "" : dt.memoizedProps;
              } catch (Yt) {
                Kr(l, l.return, Yt);
              }
            } else if ((dt.tag !== 22 && dt.tag !== 23 || dt.memoizedState === null || dt === l) && dt.child !== null) {
              dt.child.return = dt, dt = dt.child;
              continue;
            }
            if (dt === l) break e;
            for (; dt.sibling === null; ) {
              if (dt.return === null || dt.return === l) break e;
              lt === dt && (lt = null), dt = dt.return;
            }
            lt === dt && (lt = null), dt.sibling.return = dt.return, dt = dt.sibling;
          }
        }
        break;
      case 19:
        os(c, l), Yi(l), x & 4 && GS(l);
        break;
      case 21:
        break;
      default:
        os(
          c,
          l
        ), Yi(l);
    }
  }
  function Yi(l) {
    var c = l.flags;
    if (c & 2) {
      try {
        e: {
          for (var g = l.return; g !== null; ) {
            if (mp(g)) {
              var x = g;
              break e;
            }
            g = g.return;
          }
          throw Error(n(160));
        }
        switch (x.tag) {
          case 5:
            var M = x.stateNode;
            x.flags & 32 && (Oe(M, ""), x.flags &= -33);
            var $ = Cl(l);
            Fs(l, $, M);
            break;
          case 3:
          case 4:
            var oe = x.stateNode.containerInfo, he = Cl(l);
            Ls(l, he, oe);
            break;
          default:
            throw Error(n(161));
        }
      } catch (Se) {
        Kr(l, l.return, Se);
      }
      l.flags &= -3;
    }
    c & 4096 && (l.flags &= -4097);
  }
  function sT(l, c, g) {
    Ht = l, ay(l);
  }
  function ay(l, c, g) {
    for (var x = (l.mode & 1) !== 0; Ht !== null; ) {
      var M = Ht, $ = M.child;
      if (M.tag === 22 && x) {
        var oe = M.memoizedState !== null || fp;
        if (!oe) {
          var he = M.alternate, Se = he !== null && he.memoizedState !== null || hi;
          he = fp;
          var je = hi;
          if (fp = oe, (hi = Se) && !je) for (Ht = M; Ht !== null; ) oe = Ht, Se = oe.child, oe.tag === 22 && oe.memoizedState !== null ? sy(M) : Se !== null ? (Se.return = oe, Ht = Se) : sy(M);
          for (; $ !== null; ) Ht = $, ay($), $ = $.sibling;
          Ht = M, fp = he, hi = je;
        }
        WS(l);
      } else M.subtreeFlags & 8772 && $ !== null ? ($.return = M, Ht = $) : WS(l);
    }
  }
  function WS(l) {
    for (; Ht !== null; ) {
      var c = Ht;
      if (c.flags & 8772) {
        var g = c.alternate;
        try {
          if (c.flags & 8772) switch (c.tag) {
            case 0:
            case 11:
            case 15:
              hi || hp(5, c);
              break;
            case 1:
              var x = c.stateNode;
              if (c.flags & 4 && !hi) if (g === null) x.componentDidMount();
              else {
                var M = c.elementType === c.type ? g.memoizedProps : rs(c.type, g.memoizedProps);
                x.componentDidUpdate(M, g.memoizedState, x.__reactInternalSnapshotBeforeUpdate);
              }
              var $ = c.updateQueue;
              $ !== null && Gv(c, $, x);
              break;
            case 3:
              var oe = c.updateQueue;
              if (oe !== null) {
                if (g = null, c.child !== null) switch (c.child.tag) {
                  case 5:
                    g = c.child.stateNode;
                    break;
                  case 1:
                    g = c.child.stateNode;
                }
                Gv(c, oe, g);
              }
              break;
            case 5:
              var he = c.stateNode;
              if (g === null && c.flags & 4) {
                g = he;
                var Se = c.memoizedProps;
                switch (c.type) {
                  case "button":
                  case "input":
                  case "select":
                  case "textarea":
                    Se.autoFocus && g.focus();
                    break;
                  case "img":
                    Se.src && (g.src = Se.src);
                }
              }
              break;
            case 6:
              break;
            case 4:
              break;
            case 12:
              break;
            case 13:
              if (c.memoizedState === null) {
                var je = c.alternate;
                if (je !== null) {
                  var lt = je.memoizedState;
                  if (lt !== null) {
                    var dt = lt.dehydrated;
                    dt !== null && Ja(dt);
                  }
                }
              }
              break;
            case 19:
            case 17:
            case 21:
            case 22:
            case 23:
            case 25:
              break;
            default:
              throw Error(n(163));
          }
          hi || c.flags & 512 && oy(c);
        } catch (st) {
          Kr(c, c.return, st);
        }
      }
      if (c === l) {
        Ht = null;
        break;
      }
      if (g = c.sibling, g !== null) {
        g.return = c.return, Ht = g;
        break;
      }
      Ht = c.return;
    }
  }
  function gp(l) {
    for (; Ht !== null; ) {
      var c = Ht;
      if (c === l) {
        Ht = null;
        break;
      }
      var g = c.sibling;
      if (g !== null) {
        g.return = c.return, Ht = g;
        break;
      }
      Ht = c.return;
    }
  }
  function sy(l) {
    for (; Ht !== null; ) {
      var c = Ht;
      try {
        switch (c.tag) {
          case 0:
          case 11:
          case 15:
            var g = c.return;
            try {
              hp(4, c);
            } catch (Se) {
              Kr(c, g, Se);
            }
            break;
          case 1:
            var x = c.stateNode;
            if (typeof x.componentDidMount == "function") {
              var M = c.return;
              try {
                x.componentDidMount();
              } catch (Se) {
                Kr(c, M, Se);
              }
            }
            var $ = c.return;
            try {
              oy(c);
            } catch (Se) {
              Kr(c, $, Se);
            }
            break;
          case 5:
            var oe = c.return;
            try {
              oy(c);
            } catch (Se) {
              Kr(c, oe, Se);
            }
        }
      } catch (Se) {
        Kr(c, c.return, Se);
      }
      if (c === l) {
        Ht = null;
        break;
      }
      var he = c.sibling;
      if (he !== null) {
        he.return = c.return, Ht = he;
        break;
      }
      Ht = c.return;
    }
  }
  var lT = Math.ceil, du = P.ReactCurrentDispatcher, Sc = P.ReactCurrentOwner, Xo = P.ReactCurrentBatchConfig, Yn = 0, Fo = null, wo = null, Qo = 0, pa = 0, Od = Ia(0), co = 0, vp = null, _s = 0, kd = 0, vm = 0, yp = null, Xi = null, ly = 0, Pd = 1 / 0, ha = null, Md = !1, wc = null, fu = null, ym = !1, Sl = null, bp = 0, pu = 0, Id = null, Cp = -1, mi = 0;
  function xo() {
    return Yn & 6 ? xn() : Cp !== -1 ? Cp : Cp = xn();
  }
  function As(l) {
    return l.mode & 1 ? Yn & 2 && Qo !== 0 ? Qo & -Qo : iT.transition !== null ? (mi === 0 && (mi = rd()), mi) : (l = or, l !== 0 || (l = window.event, l = l === void 0 ? 16 : cd(l.type)), l) : 1;
  }
  function Oi(l, c, g, x) {
    if (50 < pu) throw pu = 0, Id = null, Error(n(185));
    ll(l, g, x), (!(Yn & 2) || l !== Fo) && (l === Fo && (!(Yn & 2) && (kd |= g), co === 4 && is(l, Qo)), Qi(l, x), g === 1 && Yn === 0 && !(c.mode & 1) && (Pd = xn() + 500, Sd && Ps()));
  }
  function Qi(l, c) {
    var g = l.callbackNode;
    Xu(l, c);
    var x = Qa(l, l === Fo ? Qo : 0);
    if (x === 0) g !== null && Hn(g), l.callbackNode = null, l.callbackPriority = 0;
    else if (c = x & -x, l.callbackPriority !== c) {
      if (g != null && Hn(g), c === 1) l.tag === 0 ? nu(uy.bind(null, l)) : $h(uy.bind(null, l)), vd(function() {
        !(Yn & 6) && Ps();
      }), g = null;
      else {
        switch (id(x)) {
          case 1:
            g = ci;
            break;
          case 4:
            g = Ta;
            break;
          case 16:
            g = _n;
            break;
          case 536870912:
            g = Ci;
            break;
          default:
            g = _n;
        }
        g = nw(g, bm.bind(null, l));
      }
      l.callbackPriority = c, l.callbackNode = g;
    }
  }
  function bm(l, c) {
    if (Cp = -1, mi = 0, Yn & 6) throw Error(n(327));
    var g = l.callbackNode;
    if (Dd() && l.callbackNode !== g) return null;
    var x = Qa(l, l === Fo ? Qo : 0);
    if (x === 0) return null;
    if (x & 30 || x & l.expiredLanes || c) c = Cm(l, x);
    else {
      c = x;
      var M = Yn;
      Yn |= 2;
      var $ = KS();
      (Fo !== l || Qo !== c) && (ha = null, Pd = xn() + 500, wl(l, c));
      do
        try {
          YS();
          break;
        } catch (he) {
          qS(l, he);
        }
      while (!0);
      jv(), du.current = $, Yn = M, wo !== null ? c = 0 : (Fo = null, Qo = 0, c = co);
    }
    if (c !== 0) {
      if (c === 2 && (M = ql(l), M !== 0 && (x = M, c = Sp(l, M))), c === 1) throw g = vp, wl(l, 0), is(l, x), Qi(l, xn()), g;
      if (c === 6) is(l, x);
      else {
        if (M = l.current.alternate, !(x & 30) && !uT(M) && (c = Cm(l, x), c === 2 && ($ = ql(l), $ !== 0 && (x = $, c = Sp(l, $))), c === 1)) throw g = vp, wl(l, 0), is(l, x), Qi(l, xn()), g;
        switch (l.finishedWork = M, l.finishedLanes = x, c) {
          case 0:
          case 1:
            throw Error(n(345));
          case 2:
            Tc(l, Xi, ha);
            break;
          case 3:
            if (is(l, x), (x & 130023424) === x && (c = ly + 500 - xn(), 10 < c)) {
              if (Qa(l, 0) !== 0) break;
              if (M = l.suspendedLanes, (M & x) !== x) {
                xo(), l.pingedLanes |= l.suspendedLanes & M;
                break;
              }
              l.timeoutHandle = Fh(Tc.bind(null, l, Xi, ha), c);
              break;
            }
            Tc(l, Xi, ha);
            break;
          case 4:
            if (is(l, x), (x & 4194240) === x) break;
            for (c = l.eventTimes, M = -1; 0 < x; ) {
              var oe = 31 - Si(x);
              $ = 1 << oe, oe = c[oe], oe > M && (M = oe), x &= ~$;
            }
            if (x = M, x = xn() - x, x = (120 > x ? 120 : 480 > x ? 480 : 1080 > x ? 1080 : 1920 > x ? 1920 : 3e3 > x ? 3e3 : 4320 > x ? 4320 : 1960 * lT(x / 1960)) - x, 10 < x) {
              l.timeoutHandle = Fh(Tc.bind(null, l, Xi, ha), x);
              break;
            }
            Tc(l, Xi, ha);
            break;
          case 5:
            Tc(l, Xi, ha);
            break;
          default:
            throw Error(n(329));
        }
      }
    }
    return Qi(l, xn()), l.callbackNode === g ? bm.bind(null, l) : null;
  }
  function Sp(l, c) {
    var g = yp;
    return l.current.memoizedState.isDehydrated && (wl(l, c).flags |= 256), l = Cm(l, c), l !== 2 && (c = Xi, Xi = g, c !== null && xc(c)), l;
  }
  function xc(l) {
    Xi === null ? Xi = l : Xi.push.apply(Xi, l);
  }
  function uT(l) {
    for (var c = l; ; ) {
      if (c.flags & 16384) {
        var g = c.updateQueue;
        if (g !== null && (g = g.stores, g !== null)) for (var x = 0; x < g.length; x++) {
          var M = g[x], $ = M.getSnapshot;
          M = M.value;
          try {
            if (!es($(), M)) return !1;
          } catch {
            return !1;
          }
        }
      }
      if (g = c.child, c.subtreeFlags & 16384 && g !== null) g.return = c, c = g;
      else {
        if (c === l) break;
        for (; c.sibling === null; ) {
          if (c.return === null || c.return === l) return !0;
          c = c.return;
        }
        c.sibling.return = c.return, c = c.sibling;
      }
    }
    return !0;
  }
  function is(l, c) {
    for (c &= ~vm, c &= ~kd, l.suspendedLanes |= c, l.pingedLanes &= ~c, l = l.expirationTimes; 0 < c; ) {
      var g = 31 - Si(c), x = 1 << g;
      l[g] = -1, c &= ~x;
    }
  }
  function uy(l) {
    if (Yn & 6) throw Error(n(327));
    Dd();
    var c = Qa(l, 0);
    if (!(c & 1)) return Qi(l, xn()), null;
    var g = Cm(l, c);
    if (l.tag !== 0 && g === 2) {
      var x = ql(l);
      x !== 0 && (c = x, g = Sp(l, x));
    }
    if (g === 1) throw g = vp, wl(l, 0), is(l, c), Qi(l, xn()), g;
    if (g === 6) throw Error(n(345));
    return l.finishedWork = l.current.alternate, l.finishedLanes = c, Tc(l, Xi, ha), Qi(l, xn()), null;
  }
  function cy(l, c) {
    var g = Yn;
    Yn |= 1;
    try {
      return l(c);
    } finally {
      Yn = g, Yn === 0 && (Pd = xn() + 500, Sd && Ps());
    }
  }
  function Ec(l) {
    Sl !== null && Sl.tag === 0 && !(Yn & 6) && Dd();
    var c = Yn;
    Yn |= 1;
    var g = Xo.transition, x = or;
    try {
      if (Xo.transition = null, or = 1, l) return l();
    } finally {
      or = x, Xo.transition = g, Yn = c, !(Yn & 6) && Ps();
    }
  }
  function dy() {
    pa = Od.current, jr(Od);
  }
  function wl(l, c) {
    l.finishedWork = null, l.finishedLanes = 0;
    var g = l.timeoutHandle;
    if (g !== -1 && (l.timeoutHandle = -1, Lv(g)), wo !== null) for (g = wo.return; g !== null; ) {
      var x = g;
      switch (zh(x), x.tag) {
        case 1:
          x = x.type.childContextTypes, x != null && Cd();
          break;
        case 3:
          fc(), jr(No), jr(oo), nn();
          break;
        case 5:
          Uh(x);
          break;
        case 4:
          fc();
          break;
        case 13:
          jr(Zr);
          break;
        case 19:
          jr(Zr);
          break;
        case 10:
          zv(x.type._context);
          break;
        case 22:
        case 23:
          dy();
      }
      g = g.return;
    }
    if (Fo = l, wo = l = hu(l.current, null), Qo = pa = c, co = 0, vp = null, vm = kd = _s = 0, Xi = yp = null, cc !== null) {
      for (c = 0; c < cc.length; c++) if (g = cc[c], x = g.interleaved, x !== null) {
        g.interleaved = null;
        var M = x.next, $ = g.pending;
        if ($ !== null) {
          var oe = $.next;
          $.next = M, x.next = oe;
        }
        g.pending = x;
      }
      cc = null;
    }
    return l;
  }
  function qS(l, c) {
    do {
      var g = wo;
      try {
        if (jv(), Ln.current = yc, Wh) {
          for (var x = ar.memoizedState; x !== null; ) {
            var M = x.queue;
            M !== null && (M.pending = null), x = x.next;
          }
          Wh = !1;
        }
        if (Tr = 0, zo = bo = ar = null, Jf = !1, pc = 0, Sc.current = null, g === null || g.return === null) {
          co = 1, vp = c, wo = null;
          break;
        }
        e: {
          var $ = l, oe = g.return, he = g, Se = c;
          if (c = Qo, he.flags |= 32768, Se !== null && typeof Se == "object" && typeof Se.then == "function") {
            var je = Se, lt = he, dt = lt.tag;
            if (!(lt.mode & 1) && (dt === 0 || dt === 11 || dt === 15)) {
              var st = lt.alternate;
              st ? (lt.updateQueue = st.updateQueue, lt.memoizedState = st.memoizedState, lt.lanes = st.lanes) : (lt.updateQueue = null, lt.memoizedState = null);
            }
            var Ft = LS(oe);
            if (Ft !== null) {
              Ft.flags &= -257, cu(Ft, oe, he, $, c), Ft.mode & 1 && Zv($, je, c), c = Ft, Se = je;
              var Wt = c.updateQueue;
              if (Wt === null) {
                var Yt = /* @__PURE__ */ new Set();
                Yt.add(Se), c.updateQueue = Yt;
              } else Wt.add(Se);
              break e;
            } else {
              if (!(c & 1)) {
                Zv($, je, c), fy();
                break e;
              }
              Se = Error(n(426));
            }
          } else if (qr && he.mode & 1) {
            var fo = LS(oe);
            if (fo !== null) {
              !(fo.flags & 65536) && (fo.flags |= 256), cu(fo, oe, he, $, c), vl(bc(Se, he));
              break e;
            }
          }
          $ = Se = bc(Se, he), co !== 4 && (co = 2), yp === null ? yp = [$] : yp.push($), $ = oe;
          do {
            switch ($.tag) {
              case 3:
                $.flags |= 65536, c &= -c, $.lanes |= c;
                var Pe = NS($, Se, c);
                kS($, Pe);
                break e;
              case 1:
                he = Se;
                var Ee = $.type, Fe = $.stateNode;
                if (!($.flags & 128) && (typeof Ee.getDerivedStateFromError == "function" || Fe !== null && typeof Fe.componentDidCatch == "function" && (fu === null || !fu.has(Fe)))) {
                  $.flags |= 65536, c &= -c, $.lanes |= c;
                  var ut = Jv($, he, c);
                  kS($, ut);
                  break e;
                }
            }
            $ = $.return;
          } while ($ !== null);
        }
        QS(g);
      } catch (qt) {
        c = qt, wo === g && g !== null && (wo = g = g.return);
        continue;
      }
      break;
    } while (!0);
  }
  function KS() {
    var l = du.current;
    return du.current = yc, l === null ? yc : l;
  }
  function fy() {
    (co === 0 || co === 3 || co === 2) && (co = 4), Fo === null || !(_s & 268435455) && !(kd & 268435455) || is(Fo, Qo);
  }
  function Cm(l, c) {
    var g = Yn;
    Yn |= 2;
    var x = KS();
    (Fo !== l || Qo !== c) && (ha = null, wl(l, c));
    do
      try {
        cT();
        break;
      } catch (M) {
        qS(l, M);
      }
    while (!0);
    if (jv(), Yn = g, du.current = x, wo !== null) throw Error(n(261));
    return Fo = null, Qo = 0, co;
  }
  function cT() {
    for (; wo !== null; ) XS(wo);
  }
  function YS() {
    for (; wo !== null && !Nr(); ) XS(wo);
  }
  function XS(l) {
    var c = tw(l.alternate, l, pa);
    l.memoizedProps = l.pendingProps, c === null ? QS(l) : wo = c, Sc.current = null;
  }
  function QS(l) {
    var c = l;
    do {
      var g = c.alternate;
      if (l = c.return, c.flags & 32768) {
        if (g = hm(g, c), g !== null) {
          g.flags &= 32767, wo = g;
          return;
        }
        if (l !== null) l.flags |= 32768, l.subtreeFlags = 0, l.deletions = null;
        else {
          co = 6, wo = null;
          return;
        }
      } else if (g = HS(g, c, pa), g !== null) {
        wo = g;
        return;
      }
      if (c = c.sibling, c !== null) {
        wo = c;
        return;
      }
      wo = c = l;
    } while (c !== null);
    co === 0 && (co = 5);
  }
  function Tc(l, c, g) {
    var x = or, M = Xo.transition;
    try {
      Xo.transition = null, or = 1, dT(l, c, g, x);
    } finally {
      Xo.transition = M, or = x;
    }
    return null;
  }
  function dT(l, c, g, x) {
    do
      Dd();
    while (Sl !== null);
    if (Yn & 6) throw Error(n(327));
    g = l.finishedWork;
    var M = l.finishedLanes;
    if (g === null) return null;
    if (l.finishedWork = null, l.finishedLanes = 0, g === l.current) throw Error(n(177));
    l.callbackNode = null, l.callbackPriority = 0;
    var $ = g.lanes | g.childLanes;
    if (pv(l, $), l === Fo && (wo = Fo = null, Qo = 0), !(g.subtreeFlags & 2064) && !(g.flags & 2064) || ym || (ym = !0, nw(_n, function() {
      return Dd(), null;
    })), $ = (g.flags & 15990) !== 0, g.subtreeFlags & 15990 || $) {
      $ = Xo.transition, Xo.transition = null;
      var oe = or;
      or = 1;
      var he = Yn;
      Yn |= 4, Sc.current = null, BS(l, g), iy(g, l), pd(ic), ka = !!Vf, ic = Vf = null, l.current = g, sT(g), Wo(), Yn = he, or = oe, Xo.transition = $;
    } else l.current = g;
    if (ym && (ym = !1, Sl = l, bp = M), $ = l.pendingLanes, $ === 0 && (fu = null), kf(g.stateNode), Qi(l, xn()), c !== null) for (x = l.onRecoverableError, g = 0; g < c.length; g++) M = c[g], x(M.value, { componentStack: M.stack, digest: M.digest });
    if (Md) throw Md = !1, l = wc, wc = null, l;
    return bp & 1 && l.tag !== 0 && Dd(), $ = l.pendingLanes, $ & 1 ? l === Id ? pu++ : (pu = 0, Id = l) : pu = 0, Ps(), null;
  }
  function Dd() {
    if (Sl !== null) {
      var l = id(bp), c = Xo.transition, g = or;
      try {
        if (Xo.transition = null, or = 16 > l ? 16 : l, Sl === null) var x = !1;
        else {
          if (l = Sl, Sl = null, bp = 0, Yn & 6) throw Error(n(331));
          var M = Yn;
          for (Yn |= 4, Ht = l.current; Ht !== null; ) {
            var $ = Ht, oe = $.child;
            if (Ht.flags & 16) {
              var he = $.deletions;
              if (he !== null) {
                for (var Se = 0; Se < he.length; Se++) {
                  var je = he[Se];
                  for (Ht = je; Ht !== null; ) {
                    var lt = Ht;
                    switch (lt.tag) {
                      case 0:
                      case 11:
                      case 15:
                        pp(8, lt, $);
                    }
                    var dt = lt.child;
                    if (dt !== null) dt.return = lt, Ht = dt;
                    else for (; Ht !== null; ) {
                      lt = Ht;
                      var st = lt.sibling, Ft = lt.return;
                      if (gm(lt), lt === je) {
                        Ht = null;
                        break;
                      }
                      if (st !== null) {
                        st.return = Ft, Ht = st;
                        break;
                      }
                      Ht = Ft;
                    }
                  }
                }
                var Wt = $.alternate;
                if (Wt !== null) {
                  var Yt = Wt.child;
                  if (Yt !== null) {
                    Wt.child = null;
                    do {
                      var fo = Yt.sibling;
                      Yt.sibling = null, Yt = fo;
                    } while (Yt !== null);
                  }
                }
                Ht = $;
              }
            }
            if ($.subtreeFlags & 2064 && oe !== null) oe.return = $, Ht = oe;
            else e: for (; Ht !== null; ) {
              if ($ = Ht, $.flags & 2048) switch ($.tag) {
                case 0:
                case 11:
                case 15:
                  pp(9, $, $.return);
              }
              var Pe = $.sibling;
              if (Pe !== null) {
                Pe.return = $.return, Ht = Pe;
                break e;
              }
              Ht = $.return;
            }
          }
          var Ee = l.current;
          for (Ht = Ee; Ht !== null; ) {
            oe = Ht;
            var Fe = oe.child;
            if (oe.subtreeFlags & 2064 && Fe !== null) Fe.return = oe, Ht = Fe;
            else e: for (oe = Ee; Ht !== null; ) {
              if (he = Ht, he.flags & 2048) try {
                switch (he.tag) {
                  case 0:
                  case 11:
                  case 15:
                    hp(9, he);
                }
              } catch (qt) {
                Kr(he, he.return, qt);
              }
              if (he === oe) {
                Ht = null;
                break e;
              }
              var ut = he.sibling;
              if (ut !== null) {
                ut.return = he.return, Ht = ut;
                break e;
              }
              Ht = he.return;
            }
          }
          if (Yn = M, Ps(), di && typeof di.onPostCommitFiberRoot == "function") try {
            di.onPostCommitFiberRoot(zi, l);
          } catch {
          }
          x = !0;
        }
        return x;
      } finally {
        or = g, Xo.transition = c;
      }
    }
    return !1;
  }
  function JS(l, c, g) {
    c = bc(g, c), c = NS(l, c, 1), l = su(l, c, 1), c = xo(), l !== null && (ll(l, 1, c), Qi(l, c));
  }
  function Kr(l, c, g) {
    if (l.tag === 3) JS(l, l, g);
    else for (; c !== null; ) {
      if (c.tag === 3) {
        JS(c, l, g);
        break;
      } else if (c.tag === 1) {
        var x = c.stateNode;
        if (typeof c.type.getDerivedStateFromError == "function" || typeof x.componentDidCatch == "function" && (fu === null || !fu.has(x))) {
          l = bc(g, l), l = Jv(c, l, 1), c = su(c, l, 1), l = xo(), c !== null && (ll(c, 1, l), Qi(c, l));
          break;
        }
      }
      c = c.return;
    }
  }
  function fT(l, c, g) {
    var x = l.pingCache;
    x !== null && x.delete(c), c = xo(), l.pingedLanes |= l.suspendedLanes & g, Fo === l && (Qo & g) === g && (co === 4 || co === 3 && (Qo & 130023424) === Qo && 500 > xn() - ly ? wl(l, 0) : vm |= g), Qi(l, c);
  }
  function ZS(l, c) {
    c === 0 && (l.mode & 1 ? (c = la, la <<= 1, !(la & 130023424) && (la = 4194304)) : c = 1);
    var g = xo();
    l = da(l, c), l !== null && (ll(l, c, g), Qi(l, g));
  }
  function pT(l) {
    var c = l.memoizedState, g = 0;
    c !== null && (g = c.retryLane), ZS(l, g);
  }
  function ew(l, c) {
    var g = 0;
    switch (l.tag) {
      case 13:
        var x = l.stateNode, M = l.memoizedState;
        M !== null && (g = M.retryLane);
        break;
      case 19:
        x = l.stateNode;
        break;
      default:
        throw Error(n(314));
    }
    x !== null && x.delete(c), ZS(l, g);
  }
  var tw;
  tw = function(l, c, g) {
    if (l !== null) if (l.memoizedProps !== c.pendingProps || No.current) Co = !0;
    else {
      if (!(l.lanes & g) && !(c.flags & 128)) return Co = !1, cp(l, c, g);
      Co = !!(l.flags & 131072);
    }
    else Co = !1, qr && c.flags & 1048576 && ES(c, gl, c.index);
    switch (c.lanes = 0, c.tag) {
      case 2:
        var x = c.type;
        Fa(l, c), l = c.pendingProps;
        var M = Bi(c, oo.current);
        Jr(c, g), M = lu(null, c, x, l, M, g);
        var $ = ns();
        return c.flags |= 1, typeof M == "object" && M !== null && typeof M.render == "function" && M.$$typeof === void 0 ? (c.tag = 1, c.memoizedState = null, c.updateQueue = null, vo(x) ? ($ = !0, jo(c)) : $ = !1, c.memoizedState = M.state !== null && M.state !== void 0 ? M.state : null, Uv(c), M.updater = um, c.stateNode = M, M._reactInternals = c, ip(c, x, l, g), c = lp(null, c, x, !0, $, g)) : (c.tag = 0, qr && $ && jh(c), Yo(null, c, M, g), c = c.child), c;
      case 16:
        x = c.elementType;
        e: {
          switch (Fa(l, c), l = c.pendingProps, M = x._init, x = M(x._payload), c.type = x, M = c.tag = mT(x), l = rs(x, l), M) {
            case 0:
              c = FS(null, c, x, l, g);
              break e;
            case 1:
              c = _S(null, c, x, l, g);
              break e;
            case 11:
              c = Ki(null, c, x, l, g);
              break e;
            case 14:
              c = Cc(null, c, x, rs(x.type, l), g);
              break e;
          }
          throw Error(n(
            306,
            x,
            ""
          ));
        }
        return c;
      case 0:
        return x = c.type, M = c.pendingProps, M = c.elementType === x ? M : rs(x, M), FS(l, c, x, M, g);
      case 1:
        return x = c.type, M = c.pendingProps, M = c.elementType === x ? M : rs(x, M), _S(l, c, x, M, g);
      case 3:
        e: {
          if (Td(c), l === null) throw Error(n(387));
          x = c.pendingProps, $ = c.memoizedState, M = $.element, OS(l, c), qf(c, x, null, g);
          var oe = c.memoizedState;
          if (x = oe.element, $.isDehydrated) if ($ = { element: x, isDehydrated: !1, cache: oe.cache, pendingSuspenseBoundaries: oe.pendingSuspenseBoundaries, transitions: oe.transitions }, c.updateQueue.baseState = $, c.memoizedState = $, c.flags & 256) {
            M = bc(Error(n(423)), c), c = AS(l, c, x, g, M);
            break e;
          } else if (x !== M) {
            M = bc(Error(n(424)), c), c = AS(l, c, x, g, M);
            break e;
          } else for (Gi = Rs(c.stateNode.containerInfo.firstChild), Ui = c, qr = !0, Na = null, g = It(c, null, x, g), c.child = g; g; ) g.flags = g.flags & -3 | 4096, g = g.sibling;
          else {
            if (au(), x === M) {
              c = _a(l, c, g);
              break e;
            }
            Yo(l, c, x, g);
          }
          c = c.child;
        }
        return c;
      case 5:
        return PS(c), l === null && Av(c), x = c.type, M = c.pendingProps, $ = l !== null ? l.memoizedProps : null, oe = M.children, Lh(x, M) ? oe = null : $ !== null && Lh(x, $) && (c.flags |= 32), ey(l, c), Yo(l, c, oe, g), c.child;
      case 6:
        return l === null && Av(c), null;
      case 13:
        return pm(l, c, g);
      case 4:
        return Wv(c, c.stateNode.containerInfo), x = c.pendingProps, l === null ? c.child = so(c, null, x, g) : Yo(l, c, x, g), c.child;
      case 11:
        return x = c.type, M = c.pendingProps, M = c.elementType === x ? M : rs(x, M), Ki(l, c, x, M, g);
      case 7:
        return Yo(l, c, c.pendingProps, g), c.child;
      case 8:
        return Yo(l, c, c.pendingProps.children, g), c.child;
      case 12:
        return Yo(l, c, c.pendingProps.children, g), c.child;
      case 10:
        e: {
          if (x = c.type._context, M = c.pendingProps, $ = c.memoizedProps, oe = M.value, Zt(ca, x._currentValue), x._currentValue = oe, $ !== null) if (es($.value, oe)) {
            if ($.children === M.children && !No.current) {
              c = _a(l, c, g);
              break e;
            }
          } else for ($ = c.child, $ !== null && ($.return = c); $ !== null; ) {
            var he = $.dependencies;
            if (he !== null) {
              oe = $.child;
              for (var Se = he.firstContext; Se !== null; ) {
                if (Se.context === x) {
                  if ($.tag === 1) {
                    Se = yl(-1, g & -g), Se.tag = 2;
                    var je = $.updateQueue;
                    if (je !== null) {
                      je = je.shared;
                      var lt = je.pending;
                      lt === null ? Se.next = Se : (Se.next = lt.next, lt.next = Se), je.pending = Se;
                    }
                  }
                  $.lanes |= g, Se = $.alternate, Se !== null && (Se.lanes |= g), Hv(
                    $.return,
                    g,
                    c
                  ), he.lanes |= g;
                  break;
                }
                Se = Se.next;
              }
            } else if ($.tag === 10) oe = $.type === c.type ? null : $.child;
            else if ($.tag === 18) {
              if (oe = $.return, oe === null) throw Error(n(341));
              oe.lanes |= g, he = oe.alternate, he !== null && (he.lanes |= g), Hv(oe, g, c), oe = $.sibling;
            } else oe = $.child;
            if (oe !== null) oe.return = $;
            else for (oe = $; oe !== null; ) {
              if (oe === c) {
                oe = null;
                break;
              }
              if ($ = oe.sibling, $ !== null) {
                $.return = oe.return, oe = $;
                break;
              }
              oe = oe.return;
            }
            $ = oe;
          }
          Yo(l, c, M.children, g), c = c.child;
        }
        return c;
      case 9:
        return M = c.type, x = c.pendingProps.children, Jr(c, g), M = La(M), x = x(M), c.flags |= 1, Yo(l, c, x, g), c.child;
      case 14:
        return x = c.type, M = rs(x, c.pendingProps), M = rs(x.type, M), Cc(l, c, x, M, g);
      case 15:
        return kn(l, c, c.type, c.pendingProps, g);
      case 17:
        return x = c.type, M = c.pendingProps, M = c.elementType === x ? M : rs(x, M), Fa(l, c), c.tag = 1, vo(x) ? (l = !0, jo(c)) : l = !1, Jr(c, g), cm(c, x, M), ip(c, x, M, g), lp(null, c, x, !0, l, g);
      case 19:
        return Ns(l, c, g);
      case 22:
        return sp(l, c, g);
    }
    throw Error(n(156, c.tag));
  };
  function nw(l, c) {
    return Qt(l, c);
  }
  function hT(l, c, g, x) {
    this.tag = l, this.key = g, this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null, this.index = 0, this.ref = null, this.pendingProps = c, this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null, this.mode = x, this.subtreeFlags = this.flags = 0, this.deletions = null, this.childLanes = this.lanes = 0, this.alternate = null;
  }
  function $a(l, c, g, x) {
    return new hT(l, c, g, x);
  }
  function py(l) {
    return l = l.prototype, !(!l || !l.isReactComponent);
  }
  function mT(l) {
    if (typeof l == "function") return py(l) ? 1 : 0;
    if (l != null) {
      if (l = l.$$typeof, l === G) return 11;
      if (l === B) return 14;
    }
    return 2;
  }
  function hu(l, c) {
    var g = l.alternate;
    return g === null ? (g = $a(l.tag, c, l.key, l.mode), g.elementType = l.elementType, g.type = l.type, g.stateNode = l.stateNode, g.alternate = l, l.alternate = g) : (g.pendingProps = c, g.type = l.type, g.flags = 0, g.subtreeFlags = 0, g.deletions = null), g.flags = l.flags & 14680064, g.childLanes = l.childLanes, g.lanes = l.lanes, g.child = l.child, g.memoizedProps = l.memoizedProps, g.memoizedState = l.memoizedState, g.updateQueue = l.updateQueue, c = l.dependencies, g.dependencies = c === null ? null : { lanes: c.lanes, firstContext: c.firstContext }, g.sibling = l.sibling, g.index = l.index, g.ref = l.ref, g;
  }
  function wp(l, c, g, x, M, $) {
    var oe = 2;
    if (x = l, typeof l == "function") py(l) && (oe = 1);
    else if (typeof l == "string") oe = 5;
    else e: switch (l) {
      case K:
        return xl(g.children, M, $, c);
      case Q:
        oe = 8, M |= 8;
        break;
      case H:
        return l = $a(12, g, c, M | 2), l.elementType = H, l.lanes = $, l;
      case Y:
        return l = $a(13, g, c, M), l.elementType = Y, l.lanes = $, l;
      case te:
        return l = $a(19, g, c, M), l.elementType = te, l.lanes = $, l;
      case q:
        return mu(g, M, $, c);
      default:
        if (typeof l == "object" && l !== null) switch (l.$$typeof) {
          case I:
            oe = 10;
            break e;
          case U:
            oe = 9;
            break e;
          case G:
            oe = 11;
            break e;
          case B:
            oe = 14;
            break e;
          case W:
            oe = 16, x = null;
            break e;
        }
        throw Error(n(130, l == null ? l : typeof l, ""));
    }
    return c = $a(oe, g, c, M), c.elementType = l, c.type = x, c.lanes = $, c;
  }
  function xl(l, c, g, x) {
    return l = $a(7, l, x, c), l.lanes = g, l;
  }
  function mu(l, c, g, x) {
    return l = $a(22, l, x, c), l.elementType = q, l.lanes = g, l.stateNode = { isHidden: !1 }, l;
  }
  function hy(l, c, g) {
    return l = $a(6, l, null, c), l.lanes = g, l;
  }
  function Sm(l, c, g) {
    return c = $a(4, l.children !== null ? l.children : [], l.key, c), c.lanes = g, c.stateNode = { containerInfo: l.containerInfo, pendingChildren: null, implementation: l.implementation }, c;
  }
  function rw(l, c, g, x, M) {
    this.tag = c, this.containerInfo = l, this.finishedWork = this.pingCache = this.current = this.pendingChildren = null, this.timeoutHandle = -1, this.callbackNode = this.pendingContext = this.context = null, this.callbackPriority = 0, this.eventTimes = od(0), this.expirationTimes = od(-1), this.entangledLanes = this.finishedLanes = this.mutableReadLanes = this.expiredLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0, this.entanglements = od(0), this.identifierPrefix = x, this.onRecoverableError = M, this.mutableSourceEagerHydrationData = null;
  }
  function wm(l, c, g, x, M, $, oe, he, Se) {
    return l = new rw(l, c, g, he, Se), c === 1 ? (c = 1, $ === !0 && (c |= 8)) : c = 0, $ = $a(3, null, null, c), l.current = $, $.stateNode = l, $.memoizedState = { element: x, isDehydrated: g, cache: null, transitions: null, pendingSuspenseBoundaries: null }, Uv($), l;
  }
  function gT(l, c, g) {
    var x = 3 < arguments.length && arguments[3] !== void 0 ? arguments[3] : null;
    return { $$typeof: z, key: x == null ? null : "" + x, children: l, containerInfo: c, implementation: g };
  }
  function my(l) {
    if (!l) return fi;
    l = l._reactInternals;
    e: {
      if (mn(l) !== l || l.tag !== 1) throw Error(n(170));
      var c = l;
      do {
        switch (c.tag) {
          case 3:
            c = c.stateNode.context;
            break e;
          case 1:
            if (vo(c.type)) {
              c = c.stateNode.__reactInternalMemoizedMergedChildContext;
              break e;
            }
        }
        c = c.return;
      } while (c !== null);
      throw Error(n(171));
    }
    if (l.tag === 1) {
      var g = l.type;
      if (vo(g)) return Gf(l, g, c);
    }
    return c;
  }
  function ow(l, c, g, x, M, $, oe, he, Se) {
    return l = wm(g, x, !0, l, M, $, oe, he, Se), l.context = my(null), g = l.current, x = xo(), M = As(g), $ = yl(x, M), $.callback = c ?? null, su(g, $, M), l.current.lanes = M, ll(l, M, x), Qi(l, x), l;
  }
  function xm(l, c, g, x) {
    var M = c.current, $ = xo(), oe = As(M);
    return g = my(g), c.context === null ? c.context = g : c.pendingContext = g, c = yl($, oe), c.payload = { element: l }, x = x === void 0 ? null : x, x !== null && (c.callback = x), l = su(M, c, oe), l !== null && (Oi(l, M, oe, $), Bh(l, M, oe)), oe;
  }
  function Em(l) {
    if (l = l.current, !l.child) return null;
    switch (l.child.tag) {
      case 5:
        return l.child.stateNode;
      default:
        return l.child.stateNode;
    }
  }
  function gy(l, c) {
    if (l = l.memoizedState, l !== null && l.dehydrated !== null) {
      var g = l.retryLane;
      l.retryLane = g !== 0 && g < c ? g : c;
    }
  }
  function Tm(l, c) {
    gy(l, c), (l = l.alternate) && gy(l, c);
  }
  function iw() {
    return null;
  }
  var Rc = typeof reportError == "function" ? reportError : function(l) {
    console.error(l);
  };
  function vy(l) {
    this._internalRoot = l;
  }
  Rm.prototype.render = vy.prototype.render = function(l) {
    var c = this._internalRoot;
    if (c === null) throw Error(n(409));
    xm(l, c, null, null);
  }, Rm.prototype.unmount = vy.prototype.unmount = function() {
    var l = this._internalRoot;
    if (l !== null) {
      this._internalRoot = null;
      var c = l.containerInfo;
      Ec(function() {
        xm(null, l, null, null);
      }), c[hl] = null;
    }
  };
  function Rm(l) {
    this._internalRoot = l;
  }
  Rm.prototype.unstable_scheduleHydration = function(l) {
    if (l) {
      var c = Sn();
      l = { blockedOn: null, target: l, priority: c };
      for (var g = 0; g < Do.length && c !== 0 && c < Do[g].priority; g++) ;
      Do.splice(g, 0, l), g === 0 && If(l);
    }
  };
  function yy(l) {
    return !(!l || l.nodeType !== 1 && l.nodeType !== 9 && l.nodeType !== 11);
  }
  function Om(l) {
    return !(!l || l.nodeType !== 1 && l.nodeType !== 9 && l.nodeType !== 11 && (l.nodeType !== 8 || l.nodeValue !== " react-mount-point-unstable "));
  }
  function aw() {
  }
  function vT(l, c, g, x, M) {
    if (M) {
      if (typeof x == "function") {
        var $ = x;
        x = function() {
          var je = Em(oe);
          $.call(je);
        };
      }
      var oe = ow(c, x, l, 0, null, !1, !1, "", aw);
      return l._reactRootContainer = oe, l[hl] = oe.current, md(l.nodeType === 8 ? l.parentNode : l), Ec(), oe;
    }
    for (; M = l.lastChild; ) l.removeChild(M);
    if (typeof x == "function") {
      var he = x;
      x = function() {
        var je = Em(Se);
        he.call(je);
      };
    }
    var Se = wm(l, 0, !1, null, null, !1, !1, "", aw);
    return l._reactRootContainer = Se, l[hl] = Se.current, md(l.nodeType === 8 ? l.parentNode : l), Ec(function() {
      xm(c, Se, g, x);
    }), Se;
  }
  function xp(l, c, g, x, M) {
    var $ = g._reactRootContainer;
    if ($) {
      var oe = $;
      if (typeof M == "function") {
        var he = M;
        M = function() {
          var Se = Em(oe);
          he.call(Se);
        };
      }
      xm(c, oe, l, M);
    } else oe = vT(g, c, l, M, x);
    return Em(oe);
  }
  Zn = function(l) {
    switch (l.tag) {
      case 3:
        var c = l.stateNode;
        if (c.current.memoizedState.isDehydrated) {
          var g = Xa(c.pendingLanes);
          g !== 0 && (ul(c, g | 1), Qi(c, xn()), !(Yn & 6) && (Pd = xn() + 500, Ps()));
        }
        break;
      case 13:
        Ec(function() {
          var x = da(l, 1);
          if (x !== null) {
            var M = xo();
            Oi(x, l, 1, M);
          }
        }), Tm(l, 1);
    }
  }, Pf = function(l) {
    if (l.tag === 13) {
      var c = da(l, 134217728);
      if (c !== null) {
        var g = xo();
        Oi(c, l, 134217728, g);
      }
      Tm(l, 134217728);
    }
  }, Ss = function(l) {
    if (l.tag === 13) {
      var c = As(l), g = da(l, c);
      if (g !== null) {
        var x = xo();
        Oi(g, l, c, x);
      }
      Tm(l, c);
    }
  }, Sn = function() {
    return or;
  }, ad = function(l, c) {
    var g = or;
    try {
      return or = l, c();
    } finally {
      or = g;
    }
  }, fn = function(l, c, g) {
    switch (c) {
      case "input":
        if (Ne(l, g), c = g.name, g.type === "radio" && c != null) {
          for (g = l; g.parentNode; ) g = g.parentNode;
          for (g = g.querySelectorAll("input[name=" + JSON.stringify("" + c) + '][type="radio"]'), c = 0; c < g.length; c++) {
            var x = g[c];
            if (x !== l && x.form === l.form) {
              var M = Qr(x);
              if (!M) throw Error(n(90));
              ue(x), Ne(x, M);
            }
          }
        }
        break;
      case "textarea":
        ct(l, g);
        break;
      case "select":
        c = g.value, c != null && gt(l, !!g.multiple, c, !1);
    }
  }, Mo = cy, Ut = Ec;
  var yT = { usingClientEntryPoint: !1, Events: [tn, ts, Qr, mr, Po, cy] }, Ep = { findFiberByHostInstance: ac, bundleType: 0, version: "18.3.1", rendererPackageName: "react-dom" }, sw = { bundleType: Ep.bundleType, version: Ep.version, rendererPackageName: Ep.rendererPackageName, rendererConfig: Ep.rendererConfig, overrideHookState: null, overrideHookStateDeletePath: null, overrideHookStateRenamePath: null, overrideProps: null, overridePropsDeletePath: null, overridePropsRenamePath: null, setErrorHandler: null, setSuspenseHandler: null, scheduleUpdate: null, currentDispatcherRef: P.ReactCurrentDispatcher, findHostInstanceByFiber: function(l) {
    return l = Gt(l), l === null ? null : l.stateNode;
  }, findFiberByHostInstance: Ep.findFiberByHostInstance || iw, findHostInstancesForRefresh: null, scheduleRefresh: null, scheduleRoot: null, setRefreshHandler: null, getCurrentFiber: null, reconcilerVersion: "18.3.1-next-f1338f8080-20240426" };
  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u") {
    var gu = __REACT_DEVTOOLS_GLOBAL_HOOK__;
    if (!gu.isDisabled && gu.supportsFiber) try {
      zi = gu.inject(sw), di = gu;
    } catch {
    }
  }
  return Ua.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = yT, Ua.createPortal = function(l, c) {
    var g = 2 < arguments.length && arguments[2] !== void 0 ? arguments[2] : null;
    if (!yy(c)) throw Error(n(200));
    return gT(l, c, null, g);
  }, Ua.createRoot = function(l, c) {
    if (!yy(l)) throw Error(n(299));
    var g = !1, x = "", M = Rc;
    return c != null && (c.unstable_strictMode === !0 && (g = !0), c.identifierPrefix !== void 0 && (x = c.identifierPrefix), c.onRecoverableError !== void 0 && (M = c.onRecoverableError)), c = wm(l, 1, !1, null, null, g, !1, x, M), l[hl] = c.current, md(l.nodeType === 8 ? l.parentNode : l), new vy(c);
  }, Ua.findDOMNode = function(l) {
    if (l == null) return null;
    if (l.nodeType === 1) return l;
    var c = l._reactInternals;
    if (c === void 0)
      throw typeof l.render == "function" ? Error(n(188)) : (l = Object.keys(l).join(","), Error(n(268, l)));
    return l = Gt(c), l = l === null ? null : l.stateNode, l;
  }, Ua.flushSync = function(l) {
    return Ec(l);
  }, Ua.hydrate = function(l, c, g) {
    if (!Om(c)) throw Error(n(200));
    return xp(null, l, c, !0, g);
  }, Ua.hydrateRoot = function(l, c, g) {
    if (!yy(l)) throw Error(n(405));
    var x = g != null && g.hydratedSources || null, M = !1, $ = "", oe = Rc;
    if (g != null && (g.unstable_strictMode === !0 && (M = !0), g.identifierPrefix !== void 0 && ($ = g.identifierPrefix), g.onRecoverableError !== void 0 && (oe = g.onRecoverableError)), c = ow(c, null, l, 1, g ?? null, M, !1, $, oe), l[hl] = c.current, md(l), x) for (l = 0; l < x.length; l++) g = x[l], M = g._getVersion, M = M(g._source), c.mutableSourceEagerHydrationData == null ? c.mutableSourceEagerHydrationData = [g, M] : c.mutableSourceEagerHydrationData.push(
      g,
      M
    );
    return new Rm(c);
  }, Ua.render = function(l, c, g) {
    if (!Om(c)) throw Error(n(200));
    return xp(null, l, c, !1, g);
  }, Ua.unmountComponentAtNode = function(l) {
    if (!Om(l)) throw Error(n(40));
    return l._reactRootContainer ? (Ec(function() {
      xp(null, null, l, !1, function() {
        l._reactRootContainer = null, l[hl] = null;
      });
    }), !0) : !1;
  }, Ua.unstable_batchedUpdates = cy, Ua.unstable_renderSubtreeIntoContainer = function(l, c, g, x) {
    if (!Om(g)) throw Error(n(200));
    if (l == null || l._reactInternals === void 0) throw Error(n(38));
    return xp(l, c, g, !1, x);
  }, Ua.version = "18.3.1-next-f1338f8080-20240426", Ua;
}
var Ga = {};
/**
 * @license React
 * react-dom.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var dL;
function i3() {
  return dL || (dL = 1, process.env.NODE_ENV !== "production" && function() {
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
    var e = S, t = n$(), n = e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, i = !1;
    function s(r) {
      i = r;
    }
    function u(r) {
      if (!i) {
        for (var o = arguments.length, f = new Array(o > 1 ? o - 1 : 0), h = 1; h < o; h++)
          f[h - 1] = arguments[h];
        p("warn", r, f);
      }
    }
    function d(r) {
      if (!i) {
        for (var o = arguments.length, f = new Array(o > 1 ? o - 1 : 0), h = 1; h < o; h++)
          f[h - 1] = arguments[h];
        p("error", r, f);
      }
    }
    function p(r, o, f) {
      {
        var h = n.ReactDebugCurrentFrame, b = h.getStackAddendum();
        b !== "" && (o += "%s", f = f.concat([b]));
        var T = f.map(function(N) {
          return String(N);
        });
        T.unshift("Warning: " + o), Function.prototype.apply.call(console[r], console, T);
      }
    }
    var m = 0, v = 1, y = 2, C = 3, w = 4, R = 5, O = 6, E = 7, k = 8, L = 9, F = 10, _ = 11, P = 12, D = 13, z = 14, K = 15, Q = 16, H = 17, I = 18, U = 19, G = 21, Y = 22, te = 23, B = 24, W = 25, q = !0, ne = !1, re = !1, X = !1, j = !1, ie = !0, fe = !0, ce = !0, me = !0, ge = /* @__PURE__ */ new Set(), de = {}, pe = {};
    function be(r, o) {
      Ce(r, o), Ce(r + "Capture", o);
    }
    function Ce(r, o) {
      de[r] && d("EventRegistry: More than one plugin attempted to publish the same registration name, `%s`.", r), de[r] = o;
      {
        var f = r.toLowerCase();
        pe[f] = r, r === "onDoubleClick" && (pe.ondblclick = r);
      }
      for (var h = 0; h < o.length; h++)
        ge.add(o[h]);
    }
    var Re = typeof window < "u" && typeof window.document < "u" && typeof window.document.createElement < "u", ue = Object.prototype.hasOwnProperty;
    function we(r) {
      {
        var o = typeof Symbol == "function" && Symbol.toStringTag, f = o && r[Symbol.toStringTag] || r.constructor.name || "Object";
        return f;
      }
    }
    function _e(r) {
      try {
        return He(r), !1;
      } catch {
        return !0;
      }
    }
    function He(r) {
      return "" + r;
    }
    function et(r, o) {
      if (_e(r))
        return d("The provided `%s` attribute is an unsupported type %s. This value must be coerced to a string before before using it here.", o, we(r)), He(r);
    }
    function Ne(r) {
      if (_e(r))
        return d("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", we(r)), He(r);
    }
    function rt(r, o) {
      if (_e(r))
        return d("The provided `%s` prop is an unsupported type %s. This value must be coerced to a string before before using it here.", o, we(r)), He(r);
    }
    function it(r, o) {
      if (_e(r))
        return d("The provided `%s` CSS property is an unsupported type %s. This value must be coerced to a string before before using it here.", o, we(r)), He(r);
    }
    function wt(r) {
      if (_e(r))
        return d("The provided HTML markup uses a value of unsupported type %s. This value must be coerced to a string before before using it here.", we(r)), He(r);
    }
    function gt(r) {
      if (_e(r))
        return d("Form field values (value, checked, defaultValue, or defaultChecked props) must be strings, not %s. This value must be coerced to a string before before using it here.", we(r)), He(r);
    }
    var ot = 0, jt = 1, ct = 2, Tt = 3, Rt = 4, Lt = 5, vt = 6, Qe = ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD", Oe = Qe + "\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040", Me = new RegExp("^[" + Qe + "][" + Oe + "]*$"), ht = {}, xt = {};
    function zt(r) {
      return ue.call(xt, r) ? !0 : ue.call(ht, r) ? !1 : Me.test(r) ? (xt[r] = !0, !0) : (ht[r] = !0, d("Invalid attribute name: `%s`", r), !1);
    }
    function bt(r, o, f) {
      return o !== null ? o.type === ot : f ? !1 : r.length > 2 && (r[0] === "o" || r[0] === "O") && (r[1] === "n" || r[1] === "N");
    }
    function Ge(r, o, f, h) {
      if (f !== null && f.type === ot)
        return !1;
      switch (typeof o) {
        case "function":
        case "symbol":
          return !0;
        case "boolean": {
          if (h)
            return !1;
          if (f !== null)
            return !f.acceptsBooleans;
          var b = r.toLowerCase().slice(0, 5);
          return b !== "data-" && b !== "aria-";
        }
        default:
          return !1;
      }
    }
    function Et(r, o, f, h) {
      if (o === null || typeof o > "u" || Ge(r, o, f, h))
        return !0;
      if (h)
        return !1;
      if (f !== null)
        switch (f.type) {
          case Tt:
            return !o;
          case Rt:
            return o === !1;
          case Lt:
            return isNaN(o);
          case vt:
            return isNaN(o) || o < 1;
        }
      return !1;
    }
    function At(r) {
      return fn.hasOwnProperty(r) ? fn[r] : null;
    }
    function pn(r, o, f, h, b, T, N) {
      this.acceptsBooleans = o === ct || o === Tt || o === Rt, this.attributeName = h, this.attributeNamespace = b, this.mustUseProperty = f, this.propertyName = r, this.type = o, this.sanitizeURL = T, this.removeEmptyString = N;
    }
    var fn = {}, hr = [
      "children",
      "dangerouslySetInnerHTML",
      // TODO: This prevents the assignment of defaultValue to regular
      // elements (not just inputs). Now that ReactDOMInput assigns to the
      // defaultValue property -- do we need this?
      "defaultValue",
      "defaultChecked",
      "innerHTML",
      "suppressContentEditableWarning",
      "suppressHydrationWarning",
      "style"
    ];
    hr.forEach(function(r) {
      fn[r] = new pn(
        r,
        ot,
        !1,
        // mustUseProperty
        r,
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), [["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(r) {
      var o = r[0], f = r[1];
      fn[o] = new pn(
        o,
        jt,
        !1,
        // mustUseProperty
        f,
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), ["contentEditable", "draggable", "spellCheck", "value"].forEach(function(r) {
      fn[r] = new pn(
        r,
        ct,
        !1,
        // mustUseProperty
        r.toLowerCase(),
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(r) {
      fn[r] = new pn(
        r,
        ct,
        !1,
        // mustUseProperty
        r,
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), [
      "allowFullScreen",
      "async",
      // Note: there is a special case that prevents it from being written to the DOM
      // on the client side because the browsers are inconsistent. Instead we call focus().
      "autoFocus",
      "autoPlay",
      "controls",
      "default",
      "defer",
      "disabled",
      "disablePictureInPicture",
      "disableRemotePlayback",
      "formNoValidate",
      "hidden",
      "loop",
      "noModule",
      "noValidate",
      "open",
      "playsInline",
      "readOnly",
      "required",
      "reversed",
      "scoped",
      "seamless",
      // Microdata
      "itemScope"
    ].forEach(function(r) {
      fn[r] = new pn(
        r,
        Tt,
        !1,
        // mustUseProperty
        r.toLowerCase(),
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), [
      "checked",
      // Note: `option.selected` is not updated if `select.multiple` is
      // disabled with `removeAttribute`. We have special logic for handling this.
      "multiple",
      "muted",
      "selected"
      // NOTE: if you add a camelCased prop to this list,
      // you'll need to set attributeName to name.toLowerCase()
      // instead in the assignment below.
    ].forEach(function(r) {
      fn[r] = new pn(
        r,
        Tt,
        !0,
        // mustUseProperty
        r,
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), [
      "capture",
      "download"
      // NOTE: if you add a camelCased prop to this list,
      // you'll need to set attributeName to name.toLowerCase()
      // instead in the assignment below.
    ].forEach(function(r) {
      fn[r] = new pn(
        r,
        Rt,
        !1,
        // mustUseProperty
        r,
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), [
      "cols",
      "rows",
      "size",
      "span"
      // NOTE: if you add a camelCased prop to this list,
      // you'll need to set attributeName to name.toLowerCase()
      // instead in the assignment below.
    ].forEach(function(r) {
      fn[r] = new pn(
        r,
        vt,
        !1,
        // mustUseProperty
        r,
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), ["rowSpan", "start"].forEach(function(r) {
      fn[r] = new pn(
        r,
        Lt,
        !1,
        // mustUseProperty
        r.toLowerCase(),
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    });
    var qn = /[\-\:]([a-z])/g, Dr = function(r) {
      return r[1].toUpperCase();
    };
    [
      "accent-height",
      "alignment-baseline",
      "arabic-form",
      "baseline-shift",
      "cap-height",
      "clip-path",
      "clip-rule",
      "color-interpolation",
      "color-interpolation-filters",
      "color-profile",
      "color-rendering",
      "dominant-baseline",
      "enable-background",
      "fill-opacity",
      "fill-rule",
      "flood-color",
      "flood-opacity",
      "font-family",
      "font-size",
      "font-size-adjust",
      "font-stretch",
      "font-style",
      "font-variant",
      "font-weight",
      "glyph-name",
      "glyph-orientation-horizontal",
      "glyph-orientation-vertical",
      "horiz-adv-x",
      "horiz-origin-x",
      "image-rendering",
      "letter-spacing",
      "lighting-color",
      "marker-end",
      "marker-mid",
      "marker-start",
      "overline-position",
      "overline-thickness",
      "paint-order",
      "panose-1",
      "pointer-events",
      "rendering-intent",
      "shape-rendering",
      "stop-color",
      "stop-opacity",
      "strikethrough-position",
      "strikethrough-thickness",
      "stroke-dasharray",
      "stroke-dashoffset",
      "stroke-linecap",
      "stroke-linejoin",
      "stroke-miterlimit",
      "stroke-opacity",
      "stroke-width",
      "text-anchor",
      "text-decoration",
      "text-rendering",
      "underline-position",
      "underline-thickness",
      "unicode-bidi",
      "unicode-range",
      "units-per-em",
      "v-alphabetic",
      "v-hanging",
      "v-ideographic",
      "v-mathematical",
      "vector-effect",
      "vert-adv-y",
      "vert-origin-x",
      "vert-origin-y",
      "word-spacing",
      "writing-mode",
      "xmlns:xlink",
      "x-height"
      // NOTE: if you add a camelCased prop to this list,
      // you'll need to set attributeName to name.toLowerCase()
      // instead in the assignment below.
    ].forEach(function(r) {
      var o = r.replace(qn, Dr);
      fn[o] = new pn(
        o,
        jt,
        !1,
        // mustUseProperty
        r,
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), [
      "xlink:actuate",
      "xlink:arcrole",
      "xlink:role",
      "xlink:show",
      "xlink:title",
      "xlink:type"
      // NOTE: if you add a camelCased prop to this list,
      // you'll need to set attributeName to name.toLowerCase()
      // instead in the assignment below.
    ].forEach(function(r) {
      var o = r.replace(qn, Dr);
      fn[o] = new pn(
        o,
        jt,
        !1,
        // mustUseProperty
        r,
        "http://www.w3.org/1999/xlink",
        !1,
        // sanitizeURL
        !1
      );
    }), [
      "xml:base",
      "xml:lang",
      "xml:space"
      // NOTE: if you add a camelCased prop to this list,
      // you'll need to set attributeName to name.toLowerCase()
      // instead in the assignment below.
    ].forEach(function(r) {
      var o = r.replace(qn, Dr);
      fn[o] = new pn(
        o,
        jt,
        !1,
        // mustUseProperty
        r,
        "http://www.w3.org/XML/1998/namespace",
        !1,
        // sanitizeURL
        !1
      );
    }), ["tabIndex", "crossOrigin"].forEach(function(r) {
      fn[r] = new pn(
        r,
        jt,
        !1,
        // mustUseProperty
        r.toLowerCase(),
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    });
    var mr = "xlinkHref";
    fn[mr] = new pn(
      "xlinkHref",
      jt,
      !1,
      // mustUseProperty
      "xlink:href",
      "http://www.w3.org/1999/xlink",
      !0,
      // sanitizeURL
      !1
    ), ["src", "href", "action", "formAction"].forEach(function(r) {
      fn[r] = new pn(
        r,
        jt,
        !1,
        // mustUseProperty
        r.toLowerCase(),
        // attributeName
        null,
        // attributeNamespace
        !0,
        // sanitizeURL
        !0
      );
    });
    var Po = /^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*\:/i, Mo = !1;
    function Ut(r) {
      !Mo && Po.test(r) && (Mo = !0, d("A future version of React will block javascript: URLs as a security precaution. Use event handlers instead if you can. If you need to generate unsafe HTML try using dangerouslySetInnerHTML instead. React was passed %s.", JSON.stringify(r)));
    }
    function dr(r, o, f, h) {
      if (h.mustUseProperty) {
        var b = h.propertyName;
        return r[b];
      } else {
        et(f, o), h.sanitizeURL && Ut("" + f);
        var T = h.attributeName, N = null;
        if (h.type === Rt) {
          if (r.hasAttribute(T)) {
            var V = r.getAttribute(T);
            return V === "" ? !0 : Et(o, f, h, !1) ? V : V === "" + f ? f : V;
          }
        } else if (r.hasAttribute(T)) {
          if (Et(o, f, h, !1))
            return r.getAttribute(T);
          if (h.type === Tt)
            return f;
          N = r.getAttribute(T);
        }
        return Et(o, f, h, !1) ? N === null ? f : N : N === "" + f ? f : N;
      }
    }
    function Ct(r, o, f, h) {
      {
        if (!zt(o))
          return;
        if (!r.hasAttribute(o))
          return f === void 0 ? void 0 : null;
        var b = r.getAttribute(o);
        return et(f, o), b === "" + f ? f : b;
      }
    }
    function St(r, o, f, h) {
      var b = At(o);
      if (!bt(o, b, h)) {
        if (Et(o, f, b, h) && (f = null), h || b === null) {
          if (zt(o)) {
            var T = o;
            f === null ? r.removeAttribute(T) : (et(f, o), r.setAttribute(T, "" + f));
          }
          return;
        }
        var N = b.mustUseProperty;
        if (N) {
          var V = b.propertyName;
          if (f === null) {
            var Z = b.type;
            r[V] = Z === Tt ? !1 : "";
          } else
            r[V] = f;
          return;
        }
        var se = b.attributeName, le = b.attributeNamespace;
        if (f === null)
          r.removeAttribute(se);
        else {
          var Te = b.type, xe;
          Te === Tt || Te === Rt && f === !0 ? xe = "" : (et(f, se), xe = "" + f, b.sanitizeURL && Ut(xe.toString())), le ? r.setAttributeNS(le, se, xe) : r.setAttribute(se, xe);
        }
      }
    }
    var en = Symbol.for("react.element"), on = Symbol.for("react.portal"), zn = Symbol.for("react.fragment"), Ar = Symbol.for("react.strict_mode"), ro = Symbol.for("react.profiler"), mo = Symbol.for("react.provider"), ve = Symbol.for("react.context"), We = Symbol.for("react.forward_ref"), pt = Symbol.for("react.suspense"), Ot = Symbol.for("react.suspense_list"), mn = Symbol.for("react.memo"), Le = Symbol.for("react.lazy"), ke = Symbol.for("react.scope"), Ze = Symbol.for("react.debug_trace_mode"), Gt = Symbol.for("react.offscreen"), Bt = Symbol.for("react.legacy_hidden"), Qt = Symbol.for("react.cache"), Hn = Symbol.for("react.tracing_marker"), Nr = Symbol.iterator, Wo = "@@iterator";
    function xn(r) {
      if (r === null || typeof r != "object")
        return null;
      var o = Nr && r[Nr] || r[Wo];
      return typeof o == "function" ? o : null;
    }
    var Rn = Object.assign, ci = 0, Ta, _n, Io, Ci, zi, di, kf;
    function Si() {
    }
    Si.__reactDisabledLog = !0;
    function bh() {
      {
        if (ci === 0) {
          Ta = console.log, _n = console.info, Io = console.warn, Ci = console.error, zi = console.group, di = console.groupCollapsed, kf = console.groupEnd;
          var r = {
            configurable: !0,
            enumerable: !0,
            value: Si,
            writable: !0
          };
          Object.defineProperties(console, {
            info: r,
            log: r,
            warn: r,
            error: r,
            group: r,
            groupCollapsed: r,
            groupEnd: r
          });
        }
        ci++;
      }
    }
    function Ch() {
      {
        if (ci--, ci === 0) {
          var r = {
            configurable: !0,
            enumerable: !0,
            writable: !0
          };
          Object.defineProperties(console, {
            log: Rn({}, r, {
              value: Ta
            }),
            info: Rn({}, r, {
              value: _n
            }),
            warn: Rn({}, r, {
              value: Io
            }),
            error: Rn({}, r, {
              value: Ci
            }),
            group: Rn({}, r, {
              value: zi
            }),
            groupCollapsed: Rn({}, r, {
              value: di
            }),
            groupEnd: Rn({}, r, {
              value: kf
            })
          });
        }
        ci < 0 && d("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
      }
    }
    var td = n.ReactCurrentDispatcher, Wl;
    function la(r, o, f) {
      {
        if (Wl === void 0)
          try {
            throw Error();
          } catch (b) {
            var h = b.stack.trim().match(/\n( *(at )?)/);
            Wl = h && h[1] || "";
          }
        return `
` + Wl + r;
      }
    }
    var Xa = !1, Qa;
    {
      var nd = typeof WeakMap == "function" ? WeakMap : Map;
      Qa = new nd();
    }
    function Xu(r, o) {
      if (!r || Xa)
        return "";
      {
        var f = Qa.get(r);
        if (f !== void 0)
          return f;
      }
      var h;
      Xa = !0;
      var b = Error.prepareStackTrace;
      Error.prepareStackTrace = void 0;
      var T;
      T = td.current, td.current = null, bh();
      try {
        if (o) {
          var N = function() {
            throw Error();
          };
          if (Object.defineProperty(N.prototype, "props", {
            set: function() {
              throw Error();
            }
          }), typeof Reflect == "object" && Reflect.construct) {
            try {
              Reflect.construct(N, []);
            } catch (ze) {
              h = ze;
            }
            Reflect.construct(r, [], N);
          } else {
            try {
              N.call();
            } catch (ze) {
              h = ze;
            }
            r.call(N.prototype);
          }
        } else {
          try {
            throw Error();
          } catch (ze) {
            h = ze;
          }
          r();
        }
      } catch (ze) {
        if (ze && h && typeof ze.stack == "string") {
          for (var V = ze.stack.split(`
`), Z = h.stack.split(`
`), se = V.length - 1, le = Z.length - 1; se >= 1 && le >= 0 && V[se] !== Z[le]; )
            le--;
          for (; se >= 1 && le >= 0; se--, le--)
            if (V[se] !== Z[le]) {
              if (se !== 1 || le !== 1)
                do
                  if (se--, le--, le < 0 || V[se] !== Z[le]) {
                    var Te = `
` + V[se].replace(" at new ", " at ");
                    return r.displayName && Te.includes("<anonymous>") && (Te = Te.replace("<anonymous>", r.displayName)), typeof r == "function" && Qa.set(r, Te), Te;
                  }
                while (se >= 1 && le >= 0);
              break;
            }
        }
      } finally {
        Xa = !1, td.current = T, Ch(), Error.prepareStackTrace = b;
      }
      var xe = r ? r.displayName || r.name : "", Ae = xe ? la(xe) : "";
      return typeof r == "function" && Qa.set(r, Ae), Ae;
    }
    function ql(r, o, f) {
      return Xu(r, !0);
    }
    function rd(r, o, f) {
      return Xu(r, !1);
    }
    function od(r) {
      var o = r.prototype;
      return !!(o && o.isReactComponent);
    }
    function ll(r, o, f) {
      if (r == null)
        return "";
      if (typeof r == "function")
        return Xu(r, od(r));
      if (typeof r == "string")
        return la(r);
      switch (r) {
        case pt:
          return la("Suspense");
        case Ot:
          return la("SuspenseList");
      }
      if (typeof r == "object")
        switch (r.$$typeof) {
          case We:
            return rd(r.render);
          case mn:
            return ll(r.type, o, f);
          case Le: {
            var h = r, b = h._payload, T = h._init;
            try {
              return ll(T(b), o, f);
            } catch {
            }
          }
        }
      return "";
    }
    function pv(r) {
      switch (r._debugOwner && r._debugOwner.type, r._debugSource, r.tag) {
        case R:
          return la(r.type);
        case Q:
          return la("Lazy");
        case D:
          return la("Suspense");
        case U:
          return la("SuspenseList");
        case m:
        case y:
        case K:
          return rd(r.type);
        case _:
          return rd(r.type.render);
        case v:
          return ql(r.type);
        default:
          return "";
      }
    }
    function ul(r) {
      try {
        var o = "", f = r;
        do
          o += pv(f), f = f.return;
        while (f);
        return o;
      } catch (h) {
        return `
Error generating stack: ` + h.message + `
` + h.stack;
      }
    }
    function or(r, o, f) {
      var h = r.displayName;
      if (h)
        return h;
      var b = o.displayName || o.name || "";
      return b !== "" ? f + "(" + b + ")" : f;
    }
    function id(r) {
      return r.displayName || "Context";
    }
    function Zn(r) {
      if (r == null)
        return null;
      if (typeof r.tag == "number" && d("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), typeof r == "function")
        return r.displayName || r.name || null;
      if (typeof r == "string")
        return r;
      switch (r) {
        case zn:
          return "Fragment";
        case on:
          return "Portal";
        case ro:
          return "Profiler";
        case Ar:
          return "StrictMode";
        case pt:
          return "Suspense";
        case Ot:
          return "SuspenseList";
      }
      if (typeof r == "object")
        switch (r.$$typeof) {
          case ve:
            var o = r;
            return id(o) + ".Consumer";
          case mo:
            var f = r;
            return id(f._context) + ".Provider";
          case We:
            return or(r, r.render, "ForwardRef");
          case mn:
            var h = r.displayName || null;
            return h !== null ? h : Zn(r.type) || "Memo";
          case Le: {
            var b = r, T = b._payload, N = b._init;
            try {
              return Zn(N(T));
            } catch {
              return null;
            }
          }
        }
      return null;
    }
    function Pf(r, o, f) {
      var h = o.displayName || o.name || "";
      return r.displayName || (h !== "" ? f + "(" + h + ")" : f);
    }
    function Ss(r) {
      return r.displayName || "Context";
    }
    function Sn(r) {
      var o = r.tag, f = r.type;
      switch (o) {
        case B:
          return "Cache";
        case L:
          var h = f;
          return Ss(h) + ".Consumer";
        case F:
          var b = f;
          return Ss(b._context) + ".Provider";
        case I:
          return "DehydratedFragment";
        case _:
          return Pf(f, f.render, "ForwardRef");
        case E:
          return "Fragment";
        case R:
          return f;
        case w:
          return "Portal";
        case C:
          return "Root";
        case O:
          return "Text";
        case Q:
          return Zn(f);
        case k:
          return f === Ar ? "StrictMode" : "Mode";
        case Y:
          return "Offscreen";
        case P:
          return "Profiler";
        case G:
          return "Scope";
        case D:
          return "Suspense";
        case U:
          return "SuspenseList";
        case W:
          return "TracingMarker";
        case v:
        case m:
        case H:
        case y:
        case z:
        case K:
          if (typeof f == "function")
            return f.displayName || f.name || null;
          if (typeof f == "string")
            return f;
          break;
      }
      return null;
    }
    var ad = n.ReactDebugCurrentFrame, qo = null, ws = !1;
    function wi() {
      {
        if (qo === null)
          return null;
        var r = qo._debugOwner;
        if (r !== null && typeof r < "u")
          return Sn(r);
      }
      return null;
    }
    function xs() {
      return qo === null ? "" : ul(qo);
    }
    function Br() {
      ad.getCurrentStack = null, qo = null, ws = !1;
    }
    function wr(r) {
      ad.getCurrentStack = r === null ? null : xs, qo = r, ws = !1;
    }
    function Kl() {
      return qo;
    }
    function Do(r) {
      ws = r;
    }
    function xi(r) {
      return "" + r;
    }
    function Ra(r) {
      switch (typeof r) {
        case "boolean":
        case "number":
        case "string":
        case "undefined":
          return r;
        case "object":
          return gt(r), r;
        default:
          return "";
      }
    }
    var Qu = {
      button: !0,
      checkbox: !0,
      image: !0,
      hidden: !0,
      radio: !0,
      reset: !0,
      submit: !0
    };
    function Mf(r, o) {
      Qu[o.type] || o.onChange || o.onInput || o.readOnly || o.disabled || o.value == null || d("You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`."), o.onChange || o.readOnly || o.disabled || o.checked == null || d("You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.");
    }
    function If(r) {
      var o = r.type, f = r.nodeName;
      return f && f.toLowerCase() === "input" && (o === "checkbox" || o === "radio");
    }
    function Yl(r) {
      return r._valueTracker;
    }
    function Ju(r) {
      r._valueTracker = null;
    }
    function hv(r) {
      var o = "";
      return r && (If(r) ? o = r.checked ? "true" : "false" : o = r.value), o;
    }
    function Oa(r) {
      var o = If(r) ? "checked" : "value", f = Object.getOwnPropertyDescriptor(r.constructor.prototype, o);
      gt(r[o]);
      var h = "" + r[o];
      if (!(r.hasOwnProperty(o) || typeof f > "u" || typeof f.get != "function" || typeof f.set != "function")) {
        var b = f.get, T = f.set;
        Object.defineProperty(r, o, {
          configurable: !0,
          get: function() {
            return b.call(this);
          },
          set: function(V) {
            gt(V), h = "" + V, T.call(this, V);
          }
        }), Object.defineProperty(r, o, {
          enumerable: f.enumerable
        });
        var N = {
          getValue: function() {
            return h;
          },
          setValue: function(V) {
            gt(V), h = "" + V;
          },
          stopTracking: function() {
            Ju(r), delete r[o];
          }
        };
        return N;
      }
    }
    function Ja(r) {
      Yl(r) || (r._valueTracker = Oa(r));
    }
    function Es(r) {
      if (!r)
        return !1;
      var o = Yl(r);
      if (!o)
        return !0;
      var f = o.getValue(), h = hv(r);
      return h !== f ? (o.setValue(h), !0) : !1;
    }
    function ka(r) {
      if (r = r || (typeof document < "u" ? document : void 0), typeof r > "u")
        return null;
      try {
        return r.activeElement || r.body;
      } catch {
        return r.body;
      }
    }
    var sd = !1, ld = !1, Xl = !1, Zu = !1;
    function ud(r) {
      var o = r.type === "checkbox" || r.type === "radio";
      return o ? r.checked != null : r.value != null;
    }
    function cd(r, o) {
      var f = r, h = o.checked, b = Rn({}, o, {
        defaultChecked: void 0,
        defaultValue: void 0,
        value: void 0,
        checked: h ?? f._wrapperState.initialChecked
      });
      return b;
    }
    function Za(r, o) {
      Mf("input", o), o.checked !== void 0 && o.defaultChecked !== void 0 && !ld && (d("%s contains an input of type %s with both checked and defaultChecked props. Input elements must be either controlled or uncontrolled (specify either the checked prop, or the defaultChecked prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", wi() || "A component", o.type), ld = !0), o.value !== void 0 && o.defaultValue !== void 0 && !sd && (d("%s contains an input of type %s with both value and defaultValue props. Input elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", wi() || "A component", o.type), sd = !0);
      var f = r, h = o.defaultValue == null ? "" : o.defaultValue;
      f._wrapperState = {
        initialChecked: o.checked != null ? o.checked : o.defaultChecked,
        initialValue: Ra(o.value != null ? o.value : h),
        controlled: ud(o)
      };
    }
    function ee(r, o) {
      var f = r, h = o.checked;
      h != null && St(f, "checked", h, !1);
    }
    function ye(r, o) {
      var f = r;
      {
        var h = ud(o);
        !f._wrapperState.controlled && h && !Zu && (d("A component is changing an uncontrolled input to be controlled. This is likely caused by the value changing from undefined to a defined value, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components"), Zu = !0), f._wrapperState.controlled && !h && !Xl && (d("A component is changing a controlled input to be uncontrolled. This is likely caused by the value changing from a defined to undefined, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components"), Xl = !0);
      }
      ee(r, o);
      var b = Ra(o.value), T = o.type;
      if (b != null)
        T === "number" ? (b === 0 && f.value === "" || // We explicitly want to coerce to number here if possible.
        // eslint-disable-next-line
        f.value != b) && (f.value = xi(b)) : f.value !== xi(b) && (f.value = xi(b));
      else if (T === "submit" || T === "reset") {
        f.removeAttribute("value");
        return;
      }
      o.hasOwnProperty("value") ? sn(f, o.type, b) : o.hasOwnProperty("defaultValue") && sn(f, o.type, Ra(o.defaultValue)), o.checked == null && o.defaultChecked != null && (f.defaultChecked = !!o.defaultChecked);
    }
    function $e(r, o, f) {
      var h = r;
      if (o.hasOwnProperty("value") || o.hasOwnProperty("defaultValue")) {
        var b = o.type, T = b === "submit" || b === "reset";
        if (T && (o.value === void 0 || o.value === null))
          return;
        var N = xi(h._wrapperState.initialValue);
        f || N !== h.value && (h.value = N), h.defaultValue = N;
      }
      var V = h.name;
      V !== "" && (h.name = ""), h.defaultChecked = !h.defaultChecked, h.defaultChecked = !!h._wrapperState.initialChecked, V !== "" && (h.name = V);
    }
    function Ve(r, o) {
      var f = r;
      ye(f, o), mt(f, o);
    }
    function mt(r, o) {
      var f = o.name;
      if (o.type === "radio" && f != null) {
        for (var h = r; h.parentNode; )
          h = h.parentNode;
        et(f, "name");
        for (var b = h.querySelectorAll("input[name=" + JSON.stringify("" + f) + '][type="radio"]'), T = 0; T < b.length; T++) {
          var N = b[T];
          if (!(N === r || N.form !== r.form)) {
            var V = Tw(N);
            if (!V)
              throw new Error("ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.");
            Es(N), ye(N, V);
          }
        }
      }
    }
    function sn(r, o, f) {
      // Focused number inputs synchronize on blur. See ChangeEventPlugin.js
      (o !== "number" || ka(r.ownerDocument) !== r) && (f == null ? r.defaultValue = xi(r._wrapperState.initialValue) : r.defaultValue !== xi(f) && (r.defaultValue = xi(f)));
    }
    var Pt = !1, cn = !1, An = !1;
    function er(r, o) {
      o.value == null && (typeof o.children == "object" && o.children !== null ? e.Children.forEach(o.children, function(f) {
        f != null && (typeof f == "string" || typeof f == "number" || cn || (cn = !0, d("Cannot infer the option value of complex children. Pass a `value` prop or use a plain string as children to <option>.")));
      }) : o.dangerouslySetInnerHTML != null && (An || (An = !0, d("Pass a `value` prop if you set dangerouslyInnerHTML so React knows which value should be selected.")))), o.selected != null && !Pt && (d("Use the `defaultValue` or `value` props on <select> instead of setting `selected` on <option>."), Pt = !0);
    }
    function $r(r, o) {
      o.value != null && r.setAttribute("value", xi(Ra(o.value)));
    }
    var xr = Array.isArray;
    function Dn(r) {
      return xr(r);
    }
    var Er;
    Er = !1;
    function Xr() {
      var r = wi();
      return r ? `

Check the render method of \`` + r + "`." : "";
    }
    var Ql = ["value", "defaultValue"];
    function Df(r) {
      {
        Mf("select", r);
        for (var o = 0; o < Ql.length; o++) {
          var f = Ql[o];
          if (r[f] != null) {
            var h = Dn(r[f]);
            r.multiple && !h ? d("The `%s` prop supplied to <select> must be an array if `multiple` is true.%s", f, Xr()) : !r.multiple && h && d("The `%s` prop supplied to <select> must be a scalar value if `multiple` is false.%s", f, Xr());
          }
        }
      }
    }
    function cl(r, o, f, h) {
      var b = r.options;
      if (o) {
        for (var T = f, N = {}, V = 0; V < T.length; V++)
          N["$" + T[V]] = !0;
        for (var Z = 0; Z < b.length; Z++) {
          var se = N.hasOwnProperty("$" + b[Z].value);
          b[Z].selected !== se && (b[Z].selected = se), se && h && (b[Z].defaultSelected = !0);
        }
      } else {
        for (var le = xi(Ra(f)), Te = null, xe = 0; xe < b.length; xe++) {
          if (b[xe].value === le) {
            b[xe].selected = !0, h && (b[xe].defaultSelected = !0);
            return;
          }
          Te === null && !b[xe].disabled && (Te = b[xe]);
        }
        Te !== null && (Te.selected = !0);
      }
    }
    function Nf(r, o) {
      return Rn({}, o, {
        value: void 0
      });
    }
    function ec(r, o) {
      var f = r;
      Df(o), f._wrapperState = {
        wasMultiple: !!o.multiple
      }, o.value !== void 0 && o.defaultValue !== void 0 && !Er && (d("Select elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled select element and remove one of these props. More info: https://reactjs.org/link/controlled-components"), Er = !0);
    }
    function mv(r, o) {
      var f = r;
      f.multiple = !!o.multiple;
      var h = o.value;
      h != null ? cl(f, !!o.multiple, h, !1) : o.defaultValue != null && cl(f, !!o.multiple, o.defaultValue, !0);
    }
    function Sh(r, o) {
      var f = r, h = f._wrapperState.wasMultiple;
      f._wrapperState.wasMultiple = !!o.multiple;
      var b = o.value;
      b != null ? cl(f, !!o.multiple, b, !1) : h !== !!o.multiple && (o.defaultValue != null ? cl(f, !!o.multiple, o.defaultValue, !0) : cl(f, !!o.multiple, o.multiple ? [] : "", !1));
    }
    function gv(r, o) {
      var f = r, h = o.value;
      h != null && cl(f, !!o.multiple, h, !1);
    }
    var KC = !1;
    function vv(r, o) {
      var f = r;
      if (o.dangerouslySetInnerHTML != null)
        throw new Error("`dangerouslySetInnerHTML` does not make sense on <textarea>.");
      var h = Rn({}, o, {
        value: void 0,
        defaultValue: void 0,
        children: xi(f._wrapperState.initialValue)
      });
      return h;
    }
    function yv(r, o) {
      var f = r;
      Mf("textarea", o), o.value !== void 0 && o.defaultValue !== void 0 && !KC && (d("%s contains a textarea with both value and defaultValue props. Textarea elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled textarea and remove one of these props. More info: https://reactjs.org/link/controlled-components", wi() || "A component"), KC = !0);
      var h = o.value;
      if (h == null) {
        var b = o.children, T = o.defaultValue;
        if (b != null) {
          d("Use the `defaultValue` or `value` props instead of setting children on <textarea>.");
          {
            if (T != null)
              throw new Error("If you supply `defaultValue` on a <textarea>, do not pass children.");
            if (Dn(b)) {
              if (b.length > 1)
                throw new Error("<textarea> can only have at most one child.");
              b = b[0];
            }
            T = b;
          }
        }
        T == null && (T = ""), h = T;
      }
      f._wrapperState = {
        initialValue: Ra(h)
      };
    }
    function YC(r, o) {
      var f = r, h = Ra(o.value), b = Ra(o.defaultValue);
      if (h != null) {
        var T = xi(h);
        T !== f.value && (f.value = T), o.defaultValue == null && f.defaultValue !== T && (f.defaultValue = T);
      }
      b != null && (f.defaultValue = xi(b));
    }
    function XC(r, o) {
      var f = r, h = f.textContent;
      h === f._wrapperState.initialValue && h !== "" && h !== null && (f.value = h);
    }
    function qE(r, o) {
      YC(r, o);
    }
    var dl = "http://www.w3.org/1999/xhtml", bv = "http://www.w3.org/1998/Math/MathML", Cv = "http://www.w3.org/2000/svg";
    function Sv(r) {
      switch (r) {
        case "svg":
          return Cv;
        case "math":
          return bv;
        default:
          return dl;
      }
    }
    function wv(r, o) {
      return r == null || r === dl ? Sv(o) : r === Cv && o === "foreignObject" ? dl : r;
    }
    var QC = function(r) {
      return typeof MSApp < "u" && MSApp.execUnsafeLocalFunction ? function(o, f, h, b) {
        MSApp.execUnsafeLocalFunction(function() {
          return r(o, f, h, b);
        });
      } : r;
    }, wh, JC = QC(function(r, o) {
      if (r.namespaceURI === Cv && !("innerHTML" in r)) {
        wh = wh || document.createElement("div"), wh.innerHTML = "<svg>" + o.valueOf().toString() + "</svg>";
        for (var f = wh.firstChild; r.firstChild; )
          r.removeChild(r.firstChild);
        for (; f.firstChild; )
          r.appendChild(f.firstChild);
        return;
      }
      r.innerHTML = o;
    }), Hi = 1, fl = 3, go = 8, pl = 9, xv = 11, dd = function(r, o) {
      if (o) {
        var f = r.firstChild;
        if (f && f === r.lastChild && f.nodeType === fl) {
          f.nodeValue = o;
          return;
        }
      }
      r.textContent = o;
    }, Lf = {
      animation: ["animationDelay", "animationDirection", "animationDuration", "animationFillMode", "animationIterationCount", "animationName", "animationPlayState", "animationTimingFunction"],
      background: ["backgroundAttachment", "backgroundClip", "backgroundColor", "backgroundImage", "backgroundOrigin", "backgroundPositionX", "backgroundPositionY", "backgroundRepeat", "backgroundSize"],
      backgroundPosition: ["backgroundPositionX", "backgroundPositionY"],
      border: ["borderBottomColor", "borderBottomStyle", "borderBottomWidth", "borderImageOutset", "borderImageRepeat", "borderImageSlice", "borderImageSource", "borderImageWidth", "borderLeftColor", "borderLeftStyle", "borderLeftWidth", "borderRightColor", "borderRightStyle", "borderRightWidth", "borderTopColor", "borderTopStyle", "borderTopWidth"],
      borderBlockEnd: ["borderBlockEndColor", "borderBlockEndStyle", "borderBlockEndWidth"],
      borderBlockStart: ["borderBlockStartColor", "borderBlockStartStyle", "borderBlockStartWidth"],
      borderBottom: ["borderBottomColor", "borderBottomStyle", "borderBottomWidth"],
      borderColor: ["borderBottomColor", "borderLeftColor", "borderRightColor", "borderTopColor"],
      borderImage: ["borderImageOutset", "borderImageRepeat", "borderImageSlice", "borderImageSource", "borderImageWidth"],
      borderInlineEnd: ["borderInlineEndColor", "borderInlineEndStyle", "borderInlineEndWidth"],
      borderInlineStart: ["borderInlineStartColor", "borderInlineStartStyle", "borderInlineStartWidth"],
      borderLeft: ["borderLeftColor", "borderLeftStyle", "borderLeftWidth"],
      borderRadius: ["borderBottomLeftRadius", "borderBottomRightRadius", "borderTopLeftRadius", "borderTopRightRadius"],
      borderRight: ["borderRightColor", "borderRightStyle", "borderRightWidth"],
      borderStyle: ["borderBottomStyle", "borderLeftStyle", "borderRightStyle", "borderTopStyle"],
      borderTop: ["borderTopColor", "borderTopStyle", "borderTopWidth"],
      borderWidth: ["borderBottomWidth", "borderLeftWidth", "borderRightWidth", "borderTopWidth"],
      columnRule: ["columnRuleColor", "columnRuleStyle", "columnRuleWidth"],
      columns: ["columnCount", "columnWidth"],
      flex: ["flexBasis", "flexGrow", "flexShrink"],
      flexFlow: ["flexDirection", "flexWrap"],
      font: ["fontFamily", "fontFeatureSettings", "fontKerning", "fontLanguageOverride", "fontSize", "fontSizeAdjust", "fontStretch", "fontStyle", "fontVariant", "fontVariantAlternates", "fontVariantCaps", "fontVariantEastAsian", "fontVariantLigatures", "fontVariantNumeric", "fontVariantPosition", "fontWeight", "lineHeight"],
      fontVariant: ["fontVariantAlternates", "fontVariantCaps", "fontVariantEastAsian", "fontVariantLigatures", "fontVariantNumeric", "fontVariantPosition"],
      gap: ["columnGap", "rowGap"],
      grid: ["gridAutoColumns", "gridAutoFlow", "gridAutoRows", "gridTemplateAreas", "gridTemplateColumns", "gridTemplateRows"],
      gridArea: ["gridColumnEnd", "gridColumnStart", "gridRowEnd", "gridRowStart"],
      gridColumn: ["gridColumnEnd", "gridColumnStart"],
      gridColumnGap: ["columnGap"],
      gridGap: ["columnGap", "rowGap"],
      gridRow: ["gridRowEnd", "gridRowStart"],
      gridRowGap: ["rowGap"],
      gridTemplate: ["gridTemplateAreas", "gridTemplateColumns", "gridTemplateRows"],
      listStyle: ["listStyleImage", "listStylePosition", "listStyleType"],
      margin: ["marginBottom", "marginLeft", "marginRight", "marginTop"],
      marker: ["markerEnd", "markerMid", "markerStart"],
      mask: ["maskClip", "maskComposite", "maskImage", "maskMode", "maskOrigin", "maskPositionX", "maskPositionY", "maskRepeat", "maskSize"],
      maskPosition: ["maskPositionX", "maskPositionY"],
      outline: ["outlineColor", "outlineStyle", "outlineWidth"],
      overflow: ["overflowX", "overflowY"],
      padding: ["paddingBottom", "paddingLeft", "paddingRight", "paddingTop"],
      placeContent: ["alignContent", "justifyContent"],
      placeItems: ["alignItems", "justifyItems"],
      placeSelf: ["alignSelf", "justifySelf"],
      textDecoration: ["textDecorationColor", "textDecorationLine", "textDecorationStyle"],
      textEmphasis: ["textEmphasisColor", "textEmphasisStyle"],
      transition: ["transitionDelay", "transitionDuration", "transitionProperty", "transitionTimingFunction"],
      wordWrap: ["overflowWrap"]
    }, Ff = {
      animationIterationCount: !0,
      aspectRatio: !0,
      borderImageOutset: !0,
      borderImageSlice: !0,
      borderImageWidth: !0,
      boxFlex: !0,
      boxFlexGroup: !0,
      boxOrdinalGroup: !0,
      columnCount: !0,
      columns: !0,
      flex: !0,
      flexGrow: !0,
      flexPositive: !0,
      flexShrink: !0,
      flexNegative: !0,
      flexOrder: !0,
      gridArea: !0,
      gridRow: !0,
      gridRowEnd: !0,
      gridRowSpan: !0,
      gridRowStart: !0,
      gridColumn: !0,
      gridColumnEnd: !0,
      gridColumnSpan: !0,
      gridColumnStart: !0,
      fontWeight: !0,
      lineClamp: !0,
      lineHeight: !0,
      opacity: !0,
      order: !0,
      orphans: !0,
      tabSize: !0,
      widows: !0,
      zIndex: !0,
      zoom: !0,
      // SVG-related properties
      fillOpacity: !0,
      floodOpacity: !0,
      stopOpacity: !0,
      strokeDasharray: !0,
      strokeDashoffset: !0,
      strokeMiterlimit: !0,
      strokeOpacity: !0,
      strokeWidth: !0
    };
    function ZC(r, o) {
      return r + o.charAt(0).toUpperCase() + o.substring(1);
    }
    var eS = ["Webkit", "ms", "Moz", "O"];
    Object.keys(Ff).forEach(function(r) {
      eS.forEach(function(o) {
        Ff[ZC(o, r)] = Ff[r];
      });
    });
    function xh(r, o, f) {
      var h = o == null || typeof o == "boolean" || o === "";
      return h ? "" : !f && typeof o == "number" && o !== 0 && !(Ff.hasOwnProperty(r) && Ff[r]) ? o + "px" : (it(o, r), ("" + o).trim());
    }
    var tS = /([A-Z])/g, nS = /^ms-/;
    function fd(r) {
      return r.replace(tS, "-$1").toLowerCase().replace(nS, "-ms-");
    }
    var rS = function() {
    };
    {
      var KE = /^(?:webkit|moz|o)[A-Z]/, YE = /^-ms-/, oS = /-(.)/g, Ev = /;\s*$/, Ts = {}, tc = {}, iS = !1, _f = !1, XE = function(r) {
        return r.replace(oS, function(o, f) {
          return f.toUpperCase();
        });
      }, aS = function(r) {
        Ts.hasOwnProperty(r) && Ts[r] || (Ts[r] = !0, d(
          "Unsupported style property %s. Did you mean %s?",
          r,
          // As Andi Smith suggests
          // (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
          // is converted to lowercase `ms`.
          XE(r.replace(YE, "ms-"))
        ));
      }, Tv = function(r) {
        Ts.hasOwnProperty(r) && Ts[r] || (Ts[r] = !0, d("Unsupported vendor-prefixed style property %s. Did you mean %s?", r, r.charAt(0).toUpperCase() + r.slice(1)));
      }, Rv = function(r, o) {
        tc.hasOwnProperty(o) && tc[o] || (tc[o] = !0, d(`Style property values shouldn't contain a semicolon. Try "%s: %s" instead.`, r, o.replace(Ev, "")));
      }, sS = function(r, o) {
        iS || (iS = !0, d("`NaN` is an invalid value for the `%s` css style property.", r));
      }, lS = function(r, o) {
        _f || (_f = !0, d("`Infinity` is an invalid value for the `%s` css style property.", r));
      };
      rS = function(r, o) {
        r.indexOf("-") > -1 ? aS(r) : KE.test(r) ? Tv(r) : Ev.test(o) && Rv(r, o), typeof o == "number" && (isNaN(o) ? sS(r, o) : isFinite(o) || lS(r, o));
      };
    }
    var uS = rS;
    function QE(r) {
      {
        var o = "", f = "";
        for (var h in r)
          if (r.hasOwnProperty(h)) {
            var b = r[h];
            if (b != null) {
              var T = h.indexOf("--") === 0;
              o += f + (T ? h : fd(h)) + ":", o += xh(h, b, T), f = ";";
            }
          }
        return o || null;
      }
    }
    function cS(r, o) {
      var f = r.style;
      for (var h in o)
        if (o.hasOwnProperty(h)) {
          var b = h.indexOf("--") === 0;
          b || uS(h, o[h]);
          var T = xh(h, o[h], b);
          h === "float" && (h = "cssFloat"), b ? f.setProperty(h, T) : f[h] = T;
        }
    }
    function JE(r) {
      return r == null || typeof r == "boolean" || r === "";
    }
    function dS(r) {
      var o = {};
      for (var f in r)
        for (var h = Lf[f] || [f], b = 0; b < h.length; b++)
          o[h[b]] = f;
      return o;
    }
    function ZE(r, o) {
      {
        if (!o)
          return;
        var f = dS(r), h = dS(o), b = {};
        for (var T in f) {
          var N = f[T], V = h[T];
          if (V && N !== V) {
            var Z = N + "," + V;
            if (b[Z])
              continue;
            b[Z] = !0, d("%s a style property during rerender (%s) when a conflicting property is set (%s) can lead to styling bugs. To avoid this, don't mix shorthand and non-shorthand properties for the same value; instead, replace the shorthand with separate values.", JE(r[N]) ? "Removing" : "Updating", N, V);
          }
        }
      }
    }
    var es = {
      area: !0,
      base: !0,
      br: !0,
      col: !0,
      embed: !0,
      hr: !0,
      img: !0,
      input: !0,
      keygen: !0,
      link: !0,
      meta: !0,
      param: !0,
      source: !0,
      track: !0,
      wbr: !0
      // NOTE: menuitem's close tag should be omitted, but that causes problems.
    }, Af = Rn({
      menuitem: !0
    }, es), fS = "__html";
    function Eh(r, o) {
      if (o) {
        if (Af[r] && (o.children != null || o.dangerouslySetInnerHTML != null))
          throw new Error(r + " is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
        if (o.dangerouslySetInnerHTML != null) {
          if (o.children != null)
            throw new Error("Can only set one of `children` or `props.dangerouslySetInnerHTML`.");
          if (typeof o.dangerouslySetInnerHTML != "object" || !(fS in o.dangerouslySetInnerHTML))
            throw new Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.");
        }
        if (!o.suppressContentEditableWarning && o.contentEditable && o.children != null && d("A component is `contentEditable` and contains `children` managed by React. It is now your responsibility to guarantee that none of those nodes are unexpectedly modified or duplicated. This is probably not intentional."), o.style != null && typeof o.style != "object")
          throw new Error("The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.");
      }
    }
    function Jl(r, o) {
      if (r.indexOf("-") === -1)
        return typeof o.is == "string";
      switch (r) {
        case "annotation-xml":
        case "color-profile":
        case "font-face":
        case "font-face-src":
        case "font-face-uri":
        case "font-face-format":
        case "font-face-name":
        case "missing-glyph":
          return !1;
        default:
          return !0;
      }
    }
    var $f = {
      // HTML
      accept: "accept",
      acceptcharset: "acceptCharset",
      "accept-charset": "acceptCharset",
      accesskey: "accessKey",
      action: "action",
      allowfullscreen: "allowFullScreen",
      alt: "alt",
      as: "as",
      async: "async",
      autocapitalize: "autoCapitalize",
      autocomplete: "autoComplete",
      autocorrect: "autoCorrect",
      autofocus: "autoFocus",
      autoplay: "autoPlay",
      autosave: "autoSave",
      capture: "capture",
      cellpadding: "cellPadding",
      cellspacing: "cellSpacing",
      challenge: "challenge",
      charset: "charSet",
      checked: "checked",
      children: "children",
      cite: "cite",
      class: "className",
      classid: "classID",
      classname: "className",
      cols: "cols",
      colspan: "colSpan",
      content: "content",
      contenteditable: "contentEditable",
      contextmenu: "contextMenu",
      controls: "controls",
      controlslist: "controlsList",
      coords: "coords",
      crossorigin: "crossOrigin",
      dangerouslysetinnerhtml: "dangerouslySetInnerHTML",
      data: "data",
      datetime: "dateTime",
      default: "default",
      defaultchecked: "defaultChecked",
      defaultvalue: "defaultValue",
      defer: "defer",
      dir: "dir",
      disabled: "disabled",
      disablepictureinpicture: "disablePictureInPicture",
      disableremoteplayback: "disableRemotePlayback",
      download: "download",
      draggable: "draggable",
      enctype: "encType",
      enterkeyhint: "enterKeyHint",
      for: "htmlFor",
      form: "form",
      formmethod: "formMethod",
      formaction: "formAction",
      formenctype: "formEncType",
      formnovalidate: "formNoValidate",
      formtarget: "formTarget",
      frameborder: "frameBorder",
      headers: "headers",
      height: "height",
      hidden: "hidden",
      high: "high",
      href: "href",
      hreflang: "hrefLang",
      htmlfor: "htmlFor",
      httpequiv: "httpEquiv",
      "http-equiv": "httpEquiv",
      icon: "icon",
      id: "id",
      imagesizes: "imageSizes",
      imagesrcset: "imageSrcSet",
      innerhtml: "innerHTML",
      inputmode: "inputMode",
      integrity: "integrity",
      is: "is",
      itemid: "itemID",
      itemprop: "itemProp",
      itemref: "itemRef",
      itemscope: "itemScope",
      itemtype: "itemType",
      keyparams: "keyParams",
      keytype: "keyType",
      kind: "kind",
      label: "label",
      lang: "lang",
      list: "list",
      loop: "loop",
      low: "low",
      manifest: "manifest",
      marginwidth: "marginWidth",
      marginheight: "marginHeight",
      max: "max",
      maxlength: "maxLength",
      media: "media",
      mediagroup: "mediaGroup",
      method: "method",
      min: "min",
      minlength: "minLength",
      multiple: "multiple",
      muted: "muted",
      name: "name",
      nomodule: "noModule",
      nonce: "nonce",
      novalidate: "noValidate",
      open: "open",
      optimum: "optimum",
      pattern: "pattern",
      placeholder: "placeholder",
      playsinline: "playsInline",
      poster: "poster",
      preload: "preload",
      profile: "profile",
      radiogroup: "radioGroup",
      readonly: "readOnly",
      referrerpolicy: "referrerPolicy",
      rel: "rel",
      required: "required",
      reversed: "reversed",
      role: "role",
      rows: "rows",
      rowspan: "rowSpan",
      sandbox: "sandbox",
      scope: "scope",
      scoped: "scoped",
      scrolling: "scrolling",
      seamless: "seamless",
      selected: "selected",
      shape: "shape",
      size: "size",
      sizes: "sizes",
      span: "span",
      spellcheck: "spellCheck",
      src: "src",
      srcdoc: "srcDoc",
      srclang: "srcLang",
      srcset: "srcSet",
      start: "start",
      step: "step",
      style: "style",
      summary: "summary",
      tabindex: "tabIndex",
      target: "target",
      title: "title",
      type: "type",
      usemap: "useMap",
      value: "value",
      width: "width",
      wmode: "wmode",
      wrap: "wrap",
      // SVG
      about: "about",
      accentheight: "accentHeight",
      "accent-height": "accentHeight",
      accumulate: "accumulate",
      additive: "additive",
      alignmentbaseline: "alignmentBaseline",
      "alignment-baseline": "alignmentBaseline",
      allowreorder: "allowReorder",
      alphabetic: "alphabetic",
      amplitude: "amplitude",
      arabicform: "arabicForm",
      "arabic-form": "arabicForm",
      ascent: "ascent",
      attributename: "attributeName",
      attributetype: "attributeType",
      autoreverse: "autoReverse",
      azimuth: "azimuth",
      basefrequency: "baseFrequency",
      baselineshift: "baselineShift",
      "baseline-shift": "baselineShift",
      baseprofile: "baseProfile",
      bbox: "bbox",
      begin: "begin",
      bias: "bias",
      by: "by",
      calcmode: "calcMode",
      capheight: "capHeight",
      "cap-height": "capHeight",
      clip: "clip",
      clippath: "clipPath",
      "clip-path": "clipPath",
      clippathunits: "clipPathUnits",
      cliprule: "clipRule",
      "clip-rule": "clipRule",
      color: "color",
      colorinterpolation: "colorInterpolation",
      "color-interpolation": "colorInterpolation",
      colorinterpolationfilters: "colorInterpolationFilters",
      "color-interpolation-filters": "colorInterpolationFilters",
      colorprofile: "colorProfile",
      "color-profile": "colorProfile",
      colorrendering: "colorRendering",
      "color-rendering": "colorRendering",
      contentscripttype: "contentScriptType",
      contentstyletype: "contentStyleType",
      cursor: "cursor",
      cx: "cx",
      cy: "cy",
      d: "d",
      datatype: "datatype",
      decelerate: "decelerate",
      descent: "descent",
      diffuseconstant: "diffuseConstant",
      direction: "direction",
      display: "display",
      divisor: "divisor",
      dominantbaseline: "dominantBaseline",
      "dominant-baseline": "dominantBaseline",
      dur: "dur",
      dx: "dx",
      dy: "dy",
      edgemode: "edgeMode",
      elevation: "elevation",
      enablebackground: "enableBackground",
      "enable-background": "enableBackground",
      end: "end",
      exponent: "exponent",
      externalresourcesrequired: "externalResourcesRequired",
      fill: "fill",
      fillopacity: "fillOpacity",
      "fill-opacity": "fillOpacity",
      fillrule: "fillRule",
      "fill-rule": "fillRule",
      filter: "filter",
      filterres: "filterRes",
      filterunits: "filterUnits",
      floodopacity: "floodOpacity",
      "flood-opacity": "floodOpacity",
      floodcolor: "floodColor",
      "flood-color": "floodColor",
      focusable: "focusable",
      fontfamily: "fontFamily",
      "font-family": "fontFamily",
      fontsize: "fontSize",
      "font-size": "fontSize",
      fontsizeadjust: "fontSizeAdjust",
      "font-size-adjust": "fontSizeAdjust",
      fontstretch: "fontStretch",
      "font-stretch": "fontStretch",
      fontstyle: "fontStyle",
      "font-style": "fontStyle",
      fontvariant: "fontVariant",
      "font-variant": "fontVariant",
      fontweight: "fontWeight",
      "font-weight": "fontWeight",
      format: "format",
      from: "from",
      fx: "fx",
      fy: "fy",
      g1: "g1",
      g2: "g2",
      glyphname: "glyphName",
      "glyph-name": "glyphName",
      glyphorientationhorizontal: "glyphOrientationHorizontal",
      "glyph-orientation-horizontal": "glyphOrientationHorizontal",
      glyphorientationvertical: "glyphOrientationVertical",
      "glyph-orientation-vertical": "glyphOrientationVertical",
      glyphref: "glyphRef",
      gradienttransform: "gradientTransform",
      gradientunits: "gradientUnits",
      hanging: "hanging",
      horizadvx: "horizAdvX",
      "horiz-adv-x": "horizAdvX",
      horizoriginx: "horizOriginX",
      "horiz-origin-x": "horizOriginX",
      ideographic: "ideographic",
      imagerendering: "imageRendering",
      "image-rendering": "imageRendering",
      in2: "in2",
      in: "in",
      inlist: "inlist",
      intercept: "intercept",
      k1: "k1",
      k2: "k2",
      k3: "k3",
      k4: "k4",
      k: "k",
      kernelmatrix: "kernelMatrix",
      kernelunitlength: "kernelUnitLength",
      kerning: "kerning",
      keypoints: "keyPoints",
      keysplines: "keySplines",
      keytimes: "keyTimes",
      lengthadjust: "lengthAdjust",
      letterspacing: "letterSpacing",
      "letter-spacing": "letterSpacing",
      lightingcolor: "lightingColor",
      "lighting-color": "lightingColor",
      limitingconeangle: "limitingConeAngle",
      local: "local",
      markerend: "markerEnd",
      "marker-end": "markerEnd",
      markerheight: "markerHeight",
      markermid: "markerMid",
      "marker-mid": "markerMid",
      markerstart: "markerStart",
      "marker-start": "markerStart",
      markerunits: "markerUnits",
      markerwidth: "markerWidth",
      mask: "mask",
      maskcontentunits: "maskContentUnits",
      maskunits: "maskUnits",
      mathematical: "mathematical",
      mode: "mode",
      numoctaves: "numOctaves",
      offset: "offset",
      opacity: "opacity",
      operator: "operator",
      order: "order",
      orient: "orient",
      orientation: "orientation",
      origin: "origin",
      overflow: "overflow",
      overlineposition: "overlinePosition",
      "overline-position": "overlinePosition",
      overlinethickness: "overlineThickness",
      "overline-thickness": "overlineThickness",
      paintorder: "paintOrder",
      "paint-order": "paintOrder",
      panose1: "panose1",
      "panose-1": "panose1",
      pathlength: "pathLength",
      patterncontentunits: "patternContentUnits",
      patterntransform: "patternTransform",
      patternunits: "patternUnits",
      pointerevents: "pointerEvents",
      "pointer-events": "pointerEvents",
      points: "points",
      pointsatx: "pointsAtX",
      pointsaty: "pointsAtY",
      pointsatz: "pointsAtZ",
      prefix: "prefix",
      preservealpha: "preserveAlpha",
      preserveaspectratio: "preserveAspectRatio",
      primitiveunits: "primitiveUnits",
      property: "property",
      r: "r",
      radius: "radius",
      refx: "refX",
      refy: "refY",
      renderingintent: "renderingIntent",
      "rendering-intent": "renderingIntent",
      repeatcount: "repeatCount",
      repeatdur: "repeatDur",
      requiredextensions: "requiredExtensions",
      requiredfeatures: "requiredFeatures",
      resource: "resource",
      restart: "restart",
      result: "result",
      results: "results",
      rotate: "rotate",
      rx: "rx",
      ry: "ry",
      scale: "scale",
      security: "security",
      seed: "seed",
      shaperendering: "shapeRendering",
      "shape-rendering": "shapeRendering",
      slope: "slope",
      spacing: "spacing",
      specularconstant: "specularConstant",
      specularexponent: "specularExponent",
      speed: "speed",
      spreadmethod: "spreadMethod",
      startoffset: "startOffset",
      stddeviation: "stdDeviation",
      stemh: "stemh",
      stemv: "stemv",
      stitchtiles: "stitchTiles",
      stopcolor: "stopColor",
      "stop-color": "stopColor",
      stopopacity: "stopOpacity",
      "stop-opacity": "stopOpacity",
      strikethroughposition: "strikethroughPosition",
      "strikethrough-position": "strikethroughPosition",
      strikethroughthickness: "strikethroughThickness",
      "strikethrough-thickness": "strikethroughThickness",
      string: "string",
      stroke: "stroke",
      strokedasharray: "strokeDasharray",
      "stroke-dasharray": "strokeDasharray",
      strokedashoffset: "strokeDashoffset",
      "stroke-dashoffset": "strokeDashoffset",
      strokelinecap: "strokeLinecap",
      "stroke-linecap": "strokeLinecap",
      strokelinejoin: "strokeLinejoin",
      "stroke-linejoin": "strokeLinejoin",
      strokemiterlimit: "strokeMiterlimit",
      "stroke-miterlimit": "strokeMiterlimit",
      strokewidth: "strokeWidth",
      "stroke-width": "strokeWidth",
      strokeopacity: "strokeOpacity",
      "stroke-opacity": "strokeOpacity",
      suppresscontenteditablewarning: "suppressContentEditableWarning",
      suppresshydrationwarning: "suppressHydrationWarning",
      surfacescale: "surfaceScale",
      systemlanguage: "systemLanguage",
      tablevalues: "tableValues",
      targetx: "targetX",
      targety: "targetY",
      textanchor: "textAnchor",
      "text-anchor": "textAnchor",
      textdecoration: "textDecoration",
      "text-decoration": "textDecoration",
      textlength: "textLength",
      textrendering: "textRendering",
      "text-rendering": "textRendering",
      to: "to",
      transform: "transform",
      typeof: "typeof",
      u1: "u1",
      u2: "u2",
      underlineposition: "underlinePosition",
      "underline-position": "underlinePosition",
      underlinethickness: "underlineThickness",
      "underline-thickness": "underlineThickness",
      unicode: "unicode",
      unicodebidi: "unicodeBidi",
      "unicode-bidi": "unicodeBidi",
      unicoderange: "unicodeRange",
      "unicode-range": "unicodeRange",
      unitsperem: "unitsPerEm",
      "units-per-em": "unitsPerEm",
      unselectable: "unselectable",
      valphabetic: "vAlphabetic",
      "v-alphabetic": "vAlphabetic",
      values: "values",
      vectoreffect: "vectorEffect",
      "vector-effect": "vectorEffect",
      version: "version",
      vertadvy: "vertAdvY",
      "vert-adv-y": "vertAdvY",
      vertoriginx: "vertOriginX",
      "vert-origin-x": "vertOriginX",
      vertoriginy: "vertOriginY",
      "vert-origin-y": "vertOriginY",
      vhanging: "vHanging",
      "v-hanging": "vHanging",
      videographic: "vIdeographic",
      "v-ideographic": "vIdeographic",
      viewbox: "viewBox",
      viewtarget: "viewTarget",
      visibility: "visibility",
      vmathematical: "vMathematical",
      "v-mathematical": "vMathematical",
      vocab: "vocab",
      widths: "widths",
      wordspacing: "wordSpacing",
      "word-spacing": "wordSpacing",
      writingmode: "writingMode",
      "writing-mode": "writingMode",
      x1: "x1",
      x2: "x2",
      x: "x",
      xchannelselector: "xChannelSelector",
      xheight: "xHeight",
      "x-height": "xHeight",
      xlinkactuate: "xlinkActuate",
      "xlink:actuate": "xlinkActuate",
      xlinkarcrole: "xlinkArcrole",
      "xlink:arcrole": "xlinkArcrole",
      xlinkhref: "xlinkHref",
      "xlink:href": "xlinkHref",
      xlinkrole: "xlinkRole",
      "xlink:role": "xlinkRole",
      xlinkshow: "xlinkShow",
      "xlink:show": "xlinkShow",
      xlinktitle: "xlinkTitle",
      "xlink:title": "xlinkTitle",
      xlinktype: "xlinkType",
      "xlink:type": "xlinkType",
      xmlbase: "xmlBase",
      "xml:base": "xmlBase",
      xmllang: "xmlLang",
      "xml:lang": "xmlLang",
      xmlns: "xmlns",
      "xml:space": "xmlSpace",
      xmlnsxlink: "xmlnsXlink",
      "xmlns:xlink": "xmlnsXlink",
      xmlspace: "xmlSpace",
      y1: "y1",
      y2: "y2",
      y: "y",
      ychannelselector: "yChannelSelector",
      z: "z",
      zoomandpan: "zoomAndPan"
    }, Th = {
      "aria-current": 0,
      // state
      "aria-description": 0,
      "aria-details": 0,
      "aria-disabled": 0,
      // state
      "aria-hidden": 0,
      // state
      "aria-invalid": 0,
      // state
      "aria-keyshortcuts": 0,
      "aria-label": 0,
      "aria-roledescription": 0,
      // Widget Attributes
      "aria-autocomplete": 0,
      "aria-checked": 0,
      "aria-expanded": 0,
      "aria-haspopup": 0,
      "aria-level": 0,
      "aria-modal": 0,
      "aria-multiline": 0,
      "aria-multiselectable": 0,
      "aria-orientation": 0,
      "aria-placeholder": 0,
      "aria-pressed": 0,
      "aria-readonly": 0,
      "aria-required": 0,
      "aria-selected": 0,
      "aria-sort": 0,
      "aria-valuemax": 0,
      "aria-valuemin": 0,
      "aria-valuenow": 0,
      "aria-valuetext": 0,
      // Live Region Attributes
      "aria-atomic": 0,
      "aria-busy": 0,
      "aria-live": 0,
      "aria-relevant": 0,
      // Drag-and-Drop Attributes
      "aria-dropeffect": 0,
      "aria-grabbed": 0,
      // Relationship Attributes
      "aria-activedescendant": 0,
      "aria-colcount": 0,
      "aria-colindex": 0,
      "aria-colspan": 0,
      "aria-controls": 0,
      "aria-describedby": 0,
      "aria-errormessage": 0,
      "aria-flowto": 0,
      "aria-labelledby": 0,
      "aria-owns": 0,
      "aria-posinset": 0,
      "aria-rowcount": 0,
      "aria-rowindex": 0,
      "aria-rowspan": 0,
      "aria-setsize": 0
    }, pd = {}, eT = new RegExp("^(aria)-[" + Oe + "]*$"), hd = new RegExp("^(aria)[A-Z][" + Oe + "]*$");
    function Ov(r, o) {
      {
        if (ue.call(pd, o) && pd[o])
          return !0;
        if (hd.test(o)) {
          var f = "aria-" + o.slice(4).toLowerCase(), h = Th.hasOwnProperty(f) ? f : null;
          if (h == null)
            return d("Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.", o), pd[o] = !0, !0;
          if (o !== h)
            return d("Invalid ARIA attribute `%s`. Did you mean `%s`?", o, h), pd[o] = !0, !0;
        }
        if (eT.test(o)) {
          var b = o.toLowerCase(), T = Th.hasOwnProperty(b) ? b : null;
          if (T == null)
            return pd[o] = !0, !1;
          if (o !== T)
            return d("Unknown ARIA attribute `%s`. Did you mean `%s`?", o, T), pd[o] = !0, !0;
        }
      }
      return !0;
    }
    function jf(r, o) {
      {
        var f = [];
        for (var h in o) {
          var b = Ov(r, h);
          b || f.push(h);
        }
        var T = f.map(function(N) {
          return "`" + N + "`";
        }).join(", ");
        f.length === 1 ? d("Invalid aria prop %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", T, r) : f.length > 1 && d("Invalid aria props %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", T, r);
      }
    }
    function kv(r, o) {
      Jl(r, o) || jf(r, o);
    }
    var Pv = !1;
    function Rh(r, o) {
      {
        if (r !== "input" && r !== "textarea" && r !== "select")
          return;
        o != null && o.value === null && !Pv && (Pv = !0, r === "select" && o.multiple ? d("`value` prop on `%s` should not be null. Consider using an empty array when `multiple` is set to `true` to clear the component or `undefined` for uncontrolled components.", r) : d("`value` prop on `%s` should not be null. Consider using an empty string to clear the component or `undefined` for uncontrolled components.", r));
      }
    }
    var nc = function() {
    };
    {
      var Ko = {}, Mv = /^on./, Oh = /^on[^A-Z]/, pS = new RegExp("^(aria)-[" + Oe + "]*$"), hS = new RegExp("^(aria)[A-Z][" + Oe + "]*$");
      nc = function(r, o, f, h) {
        if (ue.call(Ko, o) && Ko[o])
          return !0;
        var b = o.toLowerCase();
        if (b === "onfocusin" || b === "onfocusout")
          return d("React uses onFocus and onBlur instead of onFocusIn and onFocusOut. All React events are normalized to bubble, so onFocusIn and onFocusOut are not needed/supported by React."), Ko[o] = !0, !0;
        if (h != null) {
          var T = h.registrationNameDependencies, N = h.possibleRegistrationNames;
          if (T.hasOwnProperty(o))
            return !0;
          var V = N.hasOwnProperty(b) ? N[b] : null;
          if (V != null)
            return d("Invalid event handler property `%s`. Did you mean `%s`?", o, V), Ko[o] = !0, !0;
          if (Mv.test(o))
            return d("Unknown event handler property `%s`. It will be ignored.", o), Ko[o] = !0, !0;
        } else if (Mv.test(o))
          return Oh.test(o) && d("Invalid event handler property `%s`. React events use the camelCase naming convention, for example `onClick`.", o), Ko[o] = !0, !0;
        if (pS.test(o) || hS.test(o))
          return !0;
        if (b === "innerhtml")
          return d("Directly setting property `innerHTML` is not permitted. For more information, lookup documentation on `dangerouslySetInnerHTML`."), Ko[o] = !0, !0;
        if (b === "aria")
          return d("The `aria` attribute is reserved for future use in React. Pass individual `aria-` attributes instead."), Ko[o] = !0, !0;
        if (b === "is" && f !== null && f !== void 0 && typeof f != "string")
          return d("Received a `%s` for a string attribute `is`. If this is expected, cast the value to a string.", typeof f), Ko[o] = !0, !0;
        if (typeof f == "number" && isNaN(f))
          return d("Received NaN for the `%s` attribute. If this is expected, cast the value to a string.", o), Ko[o] = !0, !0;
        var Z = At(o), se = Z !== null && Z.type === ot;
        if ($f.hasOwnProperty(b)) {
          var le = $f[b];
          if (le !== o)
            return d("Invalid DOM property `%s`. Did you mean `%s`?", o, le), Ko[o] = !0, !0;
        } else if (!se && o !== b)
          return d("React does not recognize the `%s` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `%s` instead. If you accidentally passed it from a parent component, remove it from the DOM element.", o, b), Ko[o] = !0, !0;
        return typeof f == "boolean" && Ge(o, f, Z, !1) ? (f ? d('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.', f, o, o, f, o) : d('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.', f, o, o, f, o, o, o), Ko[o] = !0, !0) : se ? !0 : Ge(o, f, Z, !1) ? (Ko[o] = !0, !1) : ((f === "false" || f === "true") && Z !== null && Z.type === Tt && (d("Received the string `%s` for the boolean attribute `%s`. %s Did you mean %s={%s}?", f, o, f === "false" ? "The browser will interpret it as a truthy value." : 'Although this works, it will not work as expected if you pass the string "false".', o, f), Ko[o] = !0), !0);
      };
    }
    var mS = function(r, o, f) {
      {
        var h = [];
        for (var b in o) {
          var T = nc(r, b, o[b], f);
          T || h.push(b);
        }
        var N = h.map(function(V) {
          return "`" + V + "`";
        }).join(", ");
        h.length === 1 ? d("Invalid value for prop %s on <%s> tag. Either remove it from the element, or pass a string or number value to keep it in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", N, r) : h.length > 1 && d("Invalid values for props %s on <%s> tag. Either remove them from the element, or pass a string or number value to keep them in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", N, r);
      }
    };
    function gS(r, o, f) {
      Jl(r, o) || mS(r, o, f);
    }
    var Iv = 1, kh = 2, Pa = 4, Dv = Iv | kh | Pa, rc = null;
    function tT(r) {
      rc !== null && d("Expected currently replaying event to be null. This error is likely caused by a bug in React. Please file an issue."), rc = r;
    }
    function nT() {
      rc === null && d("Expected currently replaying event to not be null. This error is likely caused by a bug in React. Please file an issue."), rc = null;
    }
    function zf(r) {
      return r === rc;
    }
    function Nv(r) {
      var o = r.target || r.srcElement || window;
      return o.correspondingUseElement && (o = o.correspondingUseElement), o.nodeType === fl ? o.parentNode : o;
    }
    var Ph = null, oc = null, fr = null;
    function Mh(r) {
      var o = Fd(r);
      if (o) {
        if (typeof Ph != "function")
          throw new Error("setRestoreImplementation() needs to be called to handle a target for controlled events. This error is likely caused by a bug in React. Please file an issue.");
        var f = o.stateNode;
        if (f) {
          var h = Tw(f);
          Ph(o.stateNode, o.type, h);
        }
      }
    }
    function Ih(r) {
      Ph = r;
    }
    function md(r) {
      oc ? fr ? fr.push(r) : fr = [r] : oc = r;
    }
    function vS() {
      return oc !== null || fr !== null;
    }
    function Dh() {
      if (oc) {
        var r = oc, o = fr;
        if (oc = null, fr = null, Mh(r), o)
          for (var f = 0; f < o.length; f++)
            Mh(o[f]);
      }
    }
    var gd = function(r, o) {
      return r(o);
    }, Hf = function() {
    }, Zl = !1;
    function yS() {
      var r = vS();
      r && (Hf(), Dh());
    }
    function bS(r, o, f) {
      if (Zl)
        return r(o, f);
      Zl = !0;
      try {
        return gd(r, o, f);
      } finally {
        Zl = !1, yS();
      }
    }
    function rT(r, o, f) {
      gd = r, Hf = f;
    }
    function CS(r) {
      return r === "button" || r === "input" || r === "select" || r === "textarea";
    }
    function Nh(r, o, f) {
      switch (r) {
        case "onClick":
        case "onClickCapture":
        case "onDoubleClick":
        case "onDoubleClickCapture":
        case "onMouseDown":
        case "onMouseDownCapture":
        case "onMouseMove":
        case "onMouseMoveCapture":
        case "onMouseUp":
        case "onMouseUpCapture":
        case "onMouseEnter":
          return !!(f.disabled && CS(o));
        default:
          return !1;
      }
    }
    function eu(r, o) {
      var f = r.stateNode;
      if (f === null)
        return null;
      var h = Tw(f);
      if (h === null)
        return null;
      var b = h[o];
      if (Nh(o, r.type, h))
        return null;
      if (b && typeof b != "function")
        throw new Error("Expected `" + o + "` listener to be a function, instead got a value of `" + typeof b + "` type.");
      return b;
    }
    var Vf = !1;
    if (Re)
      try {
        var ic = {};
        Object.defineProperty(ic, "passive", {
          get: function() {
            Vf = !0;
          }
        }), window.addEventListener("test", ic, ic), window.removeEventListener("test", ic, ic);
      } catch {
        Vf = !1;
      }
    function Lh(r, o, f, h, b, T, N, V, Z) {
      var se = Array.prototype.slice.call(arguments, 3);
      try {
        o.apply(f, se);
      } catch (le) {
        this.onError(le);
      }
    }
    var Fh = Lh;
    if (typeof window < "u" && typeof window.dispatchEvent == "function" && typeof document < "u" && typeof document.createEvent == "function") {
      var Lv = document.createElement("react");
      Fh = function(o, f, h, b, T, N, V, Z, se) {
        if (typeof document > "u" || document === null)
          throw new Error("The `document` global was defined when React was initialized, but is not defined anymore. This can happen in a test environment if a component schedules an update from an asynchronous callback, but the test has already finished running. To solve this, you can either unmount the component at the end of your test (and ensure that any asynchronous operations get canceled in `componentWillUnmount`), or you can change the test itself to be asynchronous.");
        var le = document.createEvent("Event"), Te = !1, xe = !0, Ae = window.event, ze = Object.getOwnPropertyDescriptor(window, "event");
        function qe() {
          Lv.removeEventListener(Ke, ln, !1), typeof window.event < "u" && window.hasOwnProperty("event") && (window.event = Ae);
        }
        var Dt = Array.prototype.slice.call(arguments, 3);
        function ln() {
          Te = !0, qe(), f.apply(h, Dt), xe = !1;
        }
        var Jt, Qn = !1, Un = !1;
        function Ie(De) {
          if (Jt = De.error, Qn = !0, Jt === null && De.colno === 0 && De.lineno === 0 && (Un = !0), De.defaultPrevented && Jt != null && typeof Jt == "object")
            try {
              Jt._suppressLogging = !0;
            } catch {
            }
        }
        var Ke = "react-" + (o || "invokeguardedcallback");
        if (window.addEventListener("error", Ie), Lv.addEventListener(Ke, ln, !1), le.initEvent(Ke, !1, !1), Lv.dispatchEvent(le), ze && Object.defineProperty(window, "event", ze), Te && xe && (Qn ? Un && (Jt = new Error("A cross-origin error was thrown. React doesn't have access to the actual error object in development. See https://reactjs.org/link/crossorigin-error for more information.")) : Jt = new Error(`An error was thrown inside one of your components, but React doesn't know what it was. This is likely due to browser flakiness. React does its best to preserve the "Pause on exceptions" behavior of the DevTools, which requires some DEV-mode only tricks. It's possible that these don't work in your browser. Try triggering the error in production mode, or switching to a modern browser. If you suspect that this is actually an issue with React, please file an issue.`), this.onError(Jt)), window.removeEventListener("error", Ie), !Te)
          return qe(), Lh.apply(this, arguments);
      };
    }
    var SS = Fh, vd = !1, _h = null, yd = !1, Rs = null, wS = {
      onError: function(r) {
        vd = !0, _h = r;
      }
    };
    function tu(r, o, f, h, b, T, N, V, Z) {
      vd = !1, _h = null, SS.apply(wS, arguments);
    }
    function Os(r, o, f, h, b, T, N, V, Z) {
      if (tu.apply(this, arguments), vd) {
        var se = Uf();
        yd || (yd = !0, Rs = se);
      }
    }
    function Bf() {
      if (yd) {
        var r = Rs;
        throw yd = !1, Rs = null, r;
      }
    }
    function hl() {
      return vd;
    }
    function Uf() {
      if (vd) {
        var r = _h;
        return vd = !1, _h = null, r;
      } else
        throw new Error("clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue.");
    }
    function bd(r) {
      return r._reactInternals;
    }
    function oT(r) {
      return r._reactInternals !== void 0;
    }
    function ac(r, o) {
      r._reactInternals = o;
    }
    var tn = (
      /*                      */
      0
    ), ts = (
      /*                */
      1
    ), Qr = (
      /*                    */
      2
    ), Kn = (
      /*                       */
      4
    ), Ma = (
      /*                */
      16
    ), Ia = (
      /*                 */
      32
    ), jr = (
      /*                     */
      64
    ), Zt = (
      /*                   */
      128
    ), fi = (
      /*            */
      256
    ), oo = (
      /*                          */
      512
    ), No = (
      /*                     */
      1024
    ), Vi = (
      /*                      */
      2048
    ), Bi = (
      /*                    */
      4096
    ), vo = (
      /*                   */
      8192
    ), Cd = (
      /*             */
      16384
    ), xS = (
      /*               */
      32767
    ), Gf = (
      /*                   */
      32768
    ), jo = (
      /*                */
      65536
    ), Ah = (
      /* */
      131072
    ), ks = (
      /*                       */
      1048576
    ), Sd = (
      /*                    */
      2097152
    ), ml = (
      /*                 */
      4194304
    ), $h = (
      /*                */
      8388608
    ), nu = (
      /*               */
      16777216
    ), Ps = (
      /*              */
      33554432
    ), ru = (
      // TODO: Remove Update flag from before mutation phase by re-landing Visibility
      // flag logic (see #20043)
      Kn | No | 0
    ), ou = Qr | Kn | Ma | Ia | oo | Bi | vo, iu = Kn | jr | oo | vo, gl = Vi | Ma, yo = ml | $h | Sd, Da = n.ReactCurrentOwner;
    function ua(r) {
      var o = r, f = r;
      if (r.alternate)
        for (; o.return; )
          o = o.return;
      else {
        var h = o;
        do
          o = h, (o.flags & (Qr | Bi)) !== tn && (f = o.return), h = o.return;
        while (h);
      }
      return o.tag === C ? f : null;
    }
    function Ms(r) {
      if (r.tag === D) {
        var o = r.memoizedState;
        if (o === null) {
          var f = r.alternate;
          f !== null && (o = f.memoizedState);
        }
        if (o !== null)
          return o.dehydrated;
      }
      return null;
    }
    function Is(r) {
      return r.tag === C ? r.stateNode.containerInfo : null;
    }
    function sc(r) {
      return ua(r) === r;
    }
    function ES(r) {
      {
        var o = Da.current;
        if (o !== null && o.tag === v) {
          var f = o, h = f.stateNode;
          h._warnedAboutRefsInRender || d("%s is accessing isMounted inside its render() function. render() should be a pure function of props and state. It should never access something that requires stale data from the previous render, such as refs. Move this logic to componentDidMount and componentDidUpdate instead.", Sn(f) || "A component"), h._warnedAboutRefsInRender = !0;
        }
      }
      var b = bd(r);
      return b ? ua(b) === b : !1;
    }
    function jh(r) {
      if (ua(r) !== r)
        throw new Error("Unable to find node on an unmounted component.");
    }
    function zh(r) {
      var o = r.alternate;
      if (!o) {
        var f = ua(r);
        if (f === null)
          throw new Error("Unable to find node on an unmounted component.");
        return f !== r ? null : r;
      }
      for (var h = r, b = o; ; ) {
        var T = h.return;
        if (T === null)
          break;
        var N = T.alternate;
        if (N === null) {
          var V = T.return;
          if (V !== null) {
            h = b = V;
            continue;
          }
          break;
        }
        if (T.child === N.child) {
          for (var Z = T.child; Z; ) {
            if (Z === h)
              return jh(T), r;
            if (Z === b)
              return jh(T), o;
            Z = Z.sibling;
          }
          throw new Error("Unable to find node on an unmounted component.");
        }
        if (h.return !== b.return)
          h = T, b = N;
        else {
          for (var se = !1, le = T.child; le; ) {
            if (le === h) {
              se = !0, h = T, b = N;
              break;
            }
            if (le === b) {
              se = !0, b = T, h = N;
              break;
            }
            le = le.sibling;
          }
          if (!se) {
            for (le = N.child; le; ) {
              if (le === h) {
                se = !0, h = N, b = T;
                break;
              }
              if (le === b) {
                se = !0, b = N, h = T;
                break;
              }
              le = le.sibling;
            }
            if (!se)
              throw new Error("Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue.");
          }
        }
        if (h.alternate !== b)
          throw new Error("Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue.");
      }
      if (h.tag !== C)
        throw new Error("Unable to find node on an unmounted component.");
      return h.stateNode.current === h ? r : o;
    }
    function Ui(r) {
      var o = zh(r);
      return o !== null ? Gi(o) : null;
    }
    function Gi(r) {
      if (r.tag === R || r.tag === O)
        return r;
      for (var o = r.child; o !== null; ) {
        var f = Gi(o);
        if (f !== null)
          return f;
        o = o.sibling;
      }
      return null;
    }
    function qr(r) {
      var o = zh(r);
      return o !== null ? Na(o) : null;
    }
    function Na(r) {
      if (r.tag === R || r.tag === O)
        return r;
      for (var o = r.child; o !== null; ) {
        if (o.tag !== w) {
          var f = Na(o);
          if (f !== null)
            return f;
        }
        o = o.sibling;
      }
      return null;
    }
    var Fv = t.unstable_scheduleCallback, TS = t.unstable_cancelCallback, _v = t.unstable_shouldYield, Av = t.unstable_requestPaint, Lo = t.unstable_now, Hh = t.unstable_getCurrentPriorityLevel, Wf = t.unstable_ImmediatePriority, au = t.unstable_UserBlockingPriority, vl = t.unstable_NormalPriority, iT = t.unstable_LowPriority, lc = t.unstable_IdlePriority, Vh = t.unstable_yieldValue, RS = t.unstable_setDisableYieldValue, uc = null, so = null, It = null, ca = !1, Wi = typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u";
    function wd(r) {
      if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ > "u")
        return !1;
      var o = __REACT_DEVTOOLS_GLOBAL_HOOK__;
      if (o.isDisabled)
        return !0;
      if (!o.supportsFiber)
        return d("The installed version of React DevTools is too old and will not work with the current version of React. Please update React DevTools. https://reactjs.org/link/react-devtools"), !0;
      try {
        fe && (r = Rn({}, r, {
          getLaneLabelMap: cc,
          injectProfilingHooks: La
        })), uc = o.inject(r), so = o;
      } catch (f) {
        d("React instrumentation encountered an error: %s.", f);
      }
      return !!o.checkDCE;
    }
    function $v(r, o) {
      if (so && typeof so.onScheduleFiberRoot == "function")
        try {
          so.onScheduleFiberRoot(uc, r, o);
        } catch (f) {
          ca || (ca = !0, d("React instrumentation encountered an error: %s", f));
        }
    }
    function jv(r, o) {
      if (so && typeof so.onCommitFiberRoot == "function")
        try {
          var f = (r.current.flags & Zt) === Zt;
          if (ce) {
            var h;
            switch (o) {
              case Ei:
                h = Wf;
                break;
              case Ns:
                h = au;
                break;
              case Fa:
                h = vl;
                break;
              case _a:
                h = lc;
                break;
              default:
                h = vl;
                break;
            }
            so.onCommitFiberRoot(uc, r, h, f);
          }
        } catch (b) {
          ca || (ca = !0, d("React instrumentation encountered an error: %s", b));
        }
    }
    function zv(r) {
      if (so && typeof so.onPostCommitFiberRoot == "function")
        try {
          so.onPostCommitFiberRoot(uc, r);
        } catch (o) {
          ca || (ca = !0, d("React instrumentation encountered an error: %s", o));
        }
    }
    function Hv(r) {
      if (so && typeof so.onCommitFiberUnmount == "function")
        try {
          so.onCommitFiberUnmount(uc, r);
        } catch (o) {
          ca || (ca = !0, d("React instrumentation encountered an error: %s", o));
        }
    }
    function Jr(r) {
      if (typeof Vh == "function" && (RS(r), s(r)), so && typeof so.setStrictMode == "function")
        try {
          so.setStrictMode(uc, r);
        } catch (o) {
          ca || (ca = !0, d("React instrumentation encountered an error: %s", o));
        }
    }
    function La(r) {
      It = r;
    }
    function cc() {
      {
        for (var r = /* @__PURE__ */ new Map(), o = 1, f = 0; f < pc; f++) {
          var h = MS(o);
          r.set(o, h), o *= 2;
        }
        return r;
      }
    }
    function Vv(r) {
      It !== null && typeof It.markCommitStarted == "function" && It.markCommitStarted(r);
    }
    function Bv() {
      It !== null && typeof It.markCommitStopped == "function" && It.markCommitStopped();
    }
    function da(r) {
      It !== null && typeof It.markComponentRenderStarted == "function" && It.markComponentRenderStarted(r);
    }
    function fa() {
      It !== null && typeof It.markComponentRenderStopped == "function" && It.markComponentRenderStopped();
    }
    function Uv(r) {
      It !== null && typeof It.markComponentPassiveEffectMountStarted == "function" && It.markComponentPassiveEffectMountStarted(r);
    }
    function OS() {
      It !== null && typeof It.markComponentPassiveEffectMountStopped == "function" && It.markComponentPassiveEffectMountStopped();
    }
    function yl(r) {
      It !== null && typeof It.markComponentPassiveEffectUnmountStarted == "function" && It.markComponentPassiveEffectUnmountStarted(r);
    }
    function su() {
      It !== null && typeof It.markComponentPassiveEffectUnmountStopped == "function" && It.markComponentPassiveEffectUnmountStopped();
    }
    function Bh(r) {
      It !== null && typeof It.markComponentLayoutEffectMountStarted == "function" && It.markComponentLayoutEffectMountStarted(r);
    }
    function kS() {
      It !== null && typeof It.markComponentLayoutEffectMountStopped == "function" && It.markComponentLayoutEffectMountStopped();
    }
    function qf(r) {
      It !== null && typeof It.markComponentLayoutEffectUnmountStarted == "function" && It.markComponentLayoutEffectUnmountStarted(r);
    }
    function Gv() {
      It !== null && typeof It.markComponentLayoutEffectUnmountStopped == "function" && It.markComponentLayoutEffectUnmountStopped();
    }
    function Kf(r, o, f) {
      It !== null && typeof It.markComponentErrored == "function" && It.markComponentErrored(r, o, f);
    }
    function Ds(r, o, f) {
      It !== null && typeof It.markComponentSuspended == "function" && It.markComponentSuspended(r, o, f);
    }
    function Yf(r) {
      It !== null && typeof It.markLayoutEffectsStarted == "function" && It.markLayoutEffectsStarted(r);
    }
    function Xf() {
      It !== null && typeof It.markLayoutEffectsStopped == "function" && It.markLayoutEffectsStopped();
    }
    function dc(r) {
      It !== null && typeof It.markPassiveEffectsStarted == "function" && It.markPassiveEffectsStarted(r);
    }
    function Wv() {
      It !== null && typeof It.markPassiveEffectsStopped == "function" && It.markPassiveEffectsStopped();
    }
    function fc(r) {
      It !== null && typeof It.markRenderStarted == "function" && It.markRenderStarted(r);
    }
    function PS() {
      It !== null && typeof It.markRenderYielded == "function" && It.markRenderYielded();
    }
    function Uh() {
      It !== null && typeof It.markRenderStopped == "function" && It.markRenderStopped();
    }
    function Zr(r) {
      It !== null && typeof It.markRenderScheduled == "function" && It.markRenderScheduled(r);
    }
    function Gh(r, o) {
      It !== null && typeof It.markForceUpdateScheduled == "function" && It.markForceUpdateScheduled(r, o);
    }
    function Qf(r, o) {
      It !== null && typeof It.markStateUpdateScheduled == "function" && It.markStateUpdateScheduled(r, o);
    }
    var nn = (
      /*                         */
      0
    ), Ln = (
      /*                 */
      1
    ), ir = (
      /*                    */
      2
    ), Tr = (
      /*               */
      8
    ), ar = (
      /*              */
      16
    ), bo = Math.clz32 ? Math.clz32 : Jf, zo = Math.log, Wh = Math.LN2;
    function Jf(r) {
      var o = r >>> 0;
      return o === 0 ? 32 : 31 - (zo(o) / Wh | 0) | 0;
    }
    var pc = 31, at = (
      /*                        */
      0
    ), nr = (
      /*                          */
      0
    ), hn = (
      /*                        */
      1
    ), lu = (
      /*    */
      2
    ), ns = (
      /*             */
      4
    ), pi = (
      /*            */
      8
    ), lo = (
      /*                     */
      16
    ), bl = (
      /*                */
      32
    ), uu = (
      /*                       */
      4194240
    ), hc = (
      /*                        */
      64
    ), qh = (
      /*                        */
      128
    ), Kh = (
      /*                        */
      256
    ), Yh = (
      /*                        */
      512
    ), Xh = (
      /*                        */
      1024
    ), Qh = (
      /*                        */
      2048
    ), Jh = (
      /*                        */
      4096
    ), Zh = (
      /*                        */
      8192
    ), em = (
      /*                        */
      16384
    ), mc = (
      /*                       */
      32768
    ), tm = (
      /*                       */
      65536
    ), xd = (
      /*                       */
      131072
    ), Ed = (
      /*                       */
      262144
    ), nm = (
      /*                       */
      524288
    ), Zf = (
      /*                       */
      1048576
    ), rm = (
      /*                       */
      2097152
    ), ep = (
      /*                            */
      130023424
    ), gc = (
      /*                             */
      4194304
    ), om = (
      /*                             */
      8388608
    ), tp = (
      /*                             */
      16777216
    ), im = (
      /*                             */
      33554432
    ), am = (
      /*                             */
      67108864
    ), qv = gc, np = (
      /*          */
      134217728
    ), Kv = (
      /*                          */
      268435455
    ), rp = (
      /*               */
      268435456
    ), vc = (
      /*                        */
      536870912
    ), qi = (
      /*                   */
      1073741824
    );
    function MS(r) {
      {
        if (r & hn)
          return "Sync";
        if (r & lu)
          return "InputContinuousHydration";
        if (r & ns)
          return "InputContinuous";
        if (r & pi)
          return "DefaultHydration";
        if (r & lo)
          return "Default";
        if (r & bl)
          return "TransitionHydration";
        if (r & uu)
          return "Transition";
        if (r & ep)
          return "Retry";
        if (r & np)
          return "SelectiveHydration";
        if (r & rp)
          return "IdleHydration";
        if (r & vc)
          return "Idle";
        if (r & qi)
          return "Offscreen";
      }
    }
    var Lr = -1, yc = hc, sm = gc;
    function op(r) {
      switch (cu(r)) {
        case hn:
          return hn;
        case lu:
          return lu;
        case ns:
          return ns;
        case pi:
          return pi;
        case lo:
          return lo;
        case bl:
          return bl;
        case hc:
        case qh:
        case Kh:
        case Yh:
        case Xh:
        case Qh:
        case Jh:
        case Zh:
        case em:
        case mc:
        case tm:
        case xd:
        case Ed:
        case nm:
        case Zf:
        case rm:
          return r & uu;
        case gc:
        case om:
        case tp:
        case im:
        case am:
          return r & ep;
        case np:
          return np;
        case rp:
          return rp;
        case vc:
          return vc;
        case qi:
          return qi;
        default:
          return d("Should have found matching lanes. This is a bug in React."), r;
      }
    }
    function lm(r, o) {
      var f = r.pendingLanes;
      if (f === at)
        return at;
      var h = at, b = r.suspendedLanes, T = r.pingedLanes, N = f & Kv;
      if (N !== at) {
        var V = N & ~b;
        if (V !== at)
          h = op(V);
        else {
          var Z = N & T;
          Z !== at && (h = op(Z));
        }
      } else {
        var se = f & ~b;
        se !== at ? h = op(se) : T !== at && (h = op(T));
      }
      if (h === at)
        return at;
      if (o !== at && o !== h && // If we already suspended with a delay, then interrupting is fine. Don't
      // bother waiting until the root is complete.
      (o & b) === at) {
        var le = cu(h), Te = cu(o);
        if (
          // Tests whether the next lane is equal or lower priority than the wip
          // one. This works because the bits decrease in priority as you go left.
          le >= Te || // Default priority updates should not interrupt transition updates. The
          // only difference between default updates and transition updates is that
          // default updates do not support refresh transitions.
          le === lo && (Te & uu) !== at
        )
          return o;
      }
      (h & ns) !== at && (h |= f & lo);
      var xe = r.entangledLanes;
      if (xe !== at)
        for (var Ae = r.entanglements, ze = h & xe; ze > 0; ) {
          var qe = Co(ze), Dt = 1 << qe;
          h |= Ae[qe], ze &= ~Dt;
        }
      return h;
    }
    function rs(r, o) {
      for (var f = r.eventTimes, h = Lr; o > 0; ) {
        var b = Co(o), T = 1 << b, N = f[b];
        N > h && (h = N), o &= ~T;
      }
      return h;
    }
    function Yv(r, o) {
      switch (r) {
        case hn:
        case lu:
        case ns:
          return o + 250;
        case pi:
        case lo:
        case bl:
        case hc:
        case qh:
        case Kh:
        case Yh:
        case Xh:
        case Qh:
        case Jh:
        case Zh:
        case em:
        case mc:
        case tm:
        case xd:
        case Ed:
        case nm:
        case Zf:
        case rm:
          return o + 5e3;
        case gc:
        case om:
        case tp:
        case im:
        case am:
          return Lr;
        case np:
        case rp:
        case vc:
        case qi:
          return Lr;
        default:
          return d("Should have found matching lanes. This is a bug in React."), Lr;
      }
    }
    function um(r, o) {
      for (var f = r.pendingLanes, h = r.suspendedLanes, b = r.pingedLanes, T = r.expirationTimes, N = f; N > 0; ) {
        var V = Co(N), Z = 1 << V, se = T[V];
        se === Lr ? ((Z & h) === at || (Z & b) !== at) && (T[V] = Yv(Z, o)) : se <= o && (r.expiredLanes |= Z), N &= ~Z;
      }
    }
    function IS(r) {
      return op(r.pendingLanes);
    }
    function cm(r) {
      var o = r.pendingLanes & ~qi;
      return o !== at ? o : o & qi ? qi : at;
    }
    function DS(r) {
      return (r & hn) !== at;
    }
    function ip(r) {
      return (r & Kv) !== at;
    }
    function bc(r) {
      return (r & ep) === r;
    }
    function Xv(r) {
      var o = hn | ns | lo;
      return (r & o) === at;
    }
    function Qv(r) {
      return (r & uu) === r;
    }
    function dm(r, o) {
      var f = lu | ns | pi | lo;
      return (o & f) !== at;
    }
    function NS(r, o) {
      return (o & r.expiredLanes) !== at;
    }
    function Jv(r) {
      return (r & uu) !== at;
    }
    function Zv() {
      var r = yc;
      return yc <<= 1, (yc & uu) === at && (yc = hc), r;
    }
    function LS() {
      var r = sm;
      return sm <<= 1, (sm & ep) === at && (sm = gc), r;
    }
    function cu(r) {
      return r & -r;
    }
    function ap(r) {
      return cu(r);
    }
    function Co(r) {
      return 31 - bo(r);
    }
    function Yo(r) {
      return Co(r);
    }
    function Ki(r, o) {
      return (r & o) !== at;
    }
    function Cc(r, o) {
      return (r & o) === o;
    }
    function kn(r, o) {
      return r | o;
    }
    function sp(r, o) {
      return r & ~o;
    }
    function ey(r, o) {
      return r & o;
    }
    function FS(r) {
      return r;
    }
    function _S(r, o) {
      return r !== nr && r < o ? r : o;
    }
    function lp(r) {
      for (var o = [], f = 0; f < pc; f++)
        o.push(r);
      return o;
    }
    function Td(r, o, f) {
      r.pendingLanes |= o, o !== vc && (r.suspendedLanes = at, r.pingedLanes = at);
      var h = r.eventTimes, b = Yo(o);
      h[b] = f;
    }
    function AS(r, o) {
      r.suspendedLanes |= o, r.pingedLanes &= ~o;
      for (var f = r.expirationTimes, h = o; h > 0; ) {
        var b = Co(h), T = 1 << b;
        f[b] = Lr, h &= ~T;
      }
    }
    function fm(r, o, f) {
      r.pingedLanes |= r.suspendedLanes & o;
    }
    function ty(r, o) {
      var f = r.pendingLanes & ~o;
      r.pendingLanes = o, r.suspendedLanes = at, r.pingedLanes = at, r.expiredLanes &= o, r.mutableReadLanes &= o, r.entangledLanes &= o;
      for (var h = r.entanglements, b = r.eventTimes, T = r.expirationTimes, N = f; N > 0; ) {
        var V = Co(N), Z = 1 << V;
        h[V] = at, b[V] = Lr, T[V] = Lr, N &= ~Z;
      }
    }
    function pm(r, o) {
      for (var f = r.entangledLanes |= o, h = r.entanglements, b = f; b; ) {
        var T = Co(b), N = 1 << T;
        // Is this one of the newly entangled lanes?
        N & o | // Is this lane transitively entangled with the newly entangled lanes?
        h[T] & o && (h[T] |= o), b &= ~N;
      }
    }
    function ny(r, o) {
      var f = cu(o), h;
      switch (f) {
        case ns:
          h = lu;
          break;
        case lo:
          h = pi;
          break;
        case hc:
        case qh:
        case Kh:
        case Yh:
        case Xh:
        case Qh:
        case Jh:
        case Zh:
        case em:
        case mc:
        case tm:
        case xd:
        case Ed:
        case nm:
        case Zf:
        case rm:
        case gc:
        case om:
        case tp:
        case im:
        case am:
          h = bl;
          break;
        case vc:
          h = rp;
          break;
        default:
          h = nr;
          break;
      }
      return (h & (r.suspendedLanes | o)) !== nr ? nr : h;
    }
    function up(r, o, f) {
      if (Wi)
        for (var h = r.pendingUpdatersLaneMap; f > 0; ) {
          var b = Yo(f), T = 1 << b, N = h[b];
          N.add(o), f &= ~T;
        }
    }
    function $S(r, o) {
      if (Wi)
        for (var f = r.pendingUpdatersLaneMap, h = r.memoizedUpdaters; o > 0; ) {
          var b = Yo(o), T = 1 << b, N = f[b];
          N.size > 0 && (N.forEach(function(V) {
            var Z = V.alternate;
            (Z === null || !h.has(Z)) && h.add(V);
          }), N.clear()), o &= ~T;
        }
    }
    function ry(r, o) {
      return null;
    }
    var Ei = hn, Ns = ns, Fa = lo, _a = vc, cp = nr;
    function Aa() {
      return cp;
    }
    function So(r) {
      cp = r;
    }
    function jS(r, o) {
      var f = cp;
      try {
        return cp = r, o();
      } finally {
        cp = f;
      }
    }
    function zS(r, o) {
      return r !== 0 && r < o ? r : o;
    }
    function dp(r, o) {
      return r > o ? r : o;
    }
    function Ho(r, o) {
      return r !== 0 && r < o;
    }
    function HS(r) {
      var o = cu(r);
      return Ho(Ei, o) ? Ho(Ns, o) ? ip(o) ? Fa : _a : Ns : Ei;
    }
    function hm(r) {
      var o = r.current.memoizedState;
      return o.isDehydrated;
    }
    var fp;
    function hi(r) {
      fp = r;
    }
    function aT(r) {
      fp(r);
    }
    var Ht;
    function Rd(r) {
      Ht = r;
    }
    var mm;
    function VS(r) {
      mm = r;
    }
    var BS;
    function pp(r) {
      BS = r;
    }
    var hp;
    function oy(r) {
      hp = r;
    }
    var gm = !1, mp = [], Cl = null, Ls = null, Fs = null, uo = /* @__PURE__ */ new Map(), Ti = /* @__PURE__ */ new Map(), Ri = [], US = [
      "mousedown",
      "mouseup",
      "touchcancel",
      "touchend",
      "touchstart",
      "auxclick",
      "dblclick",
      "pointercancel",
      "pointerdown",
      "pointerup",
      "dragend",
      "dragstart",
      "drop",
      "compositionend",
      "compositionstart",
      "keydown",
      "keypress",
      "keyup",
      "input",
      "textInput",
      // Intentionally camelCase
      "copy",
      "cut",
      "paste",
      "click",
      "change",
      "contextmenu",
      "reset",
      "submit"
    ];
    function GS(r) {
      return US.indexOf(r) > -1;
    }
    function os(r, o, f, h, b) {
      return {
        blockedOn: r,
        domEventName: o,
        eventSystemFlags: f,
        nativeEvent: b,
        targetContainers: [h]
      };
    }
    function iy(r, o) {
      switch (r) {
        case "focusin":
        case "focusout":
          Cl = null;
          break;
        case "dragenter":
        case "dragleave":
          Ls = null;
          break;
        case "mouseover":
        case "mouseout":
          Fs = null;
          break;
        case "pointerover":
        case "pointerout": {
          var f = o.pointerId;
          uo.delete(f);
          break;
        }
        case "gotpointercapture":
        case "lostpointercapture": {
          var h = o.pointerId;
          Ti.delete(h);
          break;
        }
      }
    }
    function Yi(r, o, f, h, b, T) {
      if (r === null || r.nativeEvent !== T) {
        var N = os(o, f, h, b, T);
        if (o !== null) {
          var V = Fd(o);
          V !== null && Ht(V);
        }
        return N;
      }
      r.eventSystemFlags |= h;
      var Z = r.targetContainers;
      return b !== null && Z.indexOf(b) === -1 && Z.push(b), r;
    }
    function sT(r, o, f, h, b) {
      switch (o) {
        case "focusin": {
          var T = b;
          return Cl = Yi(Cl, r, o, f, h, T), !0;
        }
        case "dragenter": {
          var N = b;
          return Ls = Yi(Ls, r, o, f, h, N), !0;
        }
        case "mouseover": {
          var V = b;
          return Fs = Yi(Fs, r, o, f, h, V), !0;
        }
        case "pointerover": {
          var Z = b, se = Z.pointerId;
          return uo.set(se, Yi(uo.get(se) || null, r, o, f, h, Z)), !0;
        }
        case "gotpointercapture": {
          var le = b, Te = le.pointerId;
          return Ti.set(Te, Yi(Ti.get(Te) || null, r, o, f, h, le)), !0;
        }
      }
      return !1;
    }
    function ay(r) {
      var o = Op(r.target);
      if (o !== null) {
        var f = ua(o);
        if (f !== null) {
          var h = f.tag;
          if (h === D) {
            var b = Ms(f);
            if (b !== null) {
              r.blockedOn = b, hp(r.priority, function() {
                mm(f);
              });
              return;
            }
          } else if (h === C) {
            var T = f.stateNode;
            if (hm(T)) {
              r.blockedOn = Is(f);
              return;
            }
          }
        }
      }
      r.blockedOn = null;
    }
    function WS(r) {
      for (var o = BS(), f = {
        blockedOn: null,
        target: r,
        priority: o
      }, h = 0; h < Ri.length && Ho(o, Ri[h].priority); h++)
        ;
      Ri.splice(h, 0, f), h === 0 && ay(f);
    }
    function gp(r) {
      if (r.blockedOn !== null)
        return !1;
      for (var o = r.targetContainers; o.length > 0; ) {
        var f = o[0], h = kd(r.domEventName, r.eventSystemFlags, f, r.nativeEvent);
        if (h === null) {
          var b = r.nativeEvent, T = new b.constructor(b.type, b);
          tT(T), b.target.dispatchEvent(T), nT();
        } else {
          var N = Fd(h);
          return N !== null && Ht(N), r.blockedOn = h, !1;
        }
        o.shift();
      }
      return !0;
    }
    function sy(r, o, f) {
      gp(r) && f.delete(o);
    }
    function lT() {
      gm = !1, Cl !== null && gp(Cl) && (Cl = null), Ls !== null && gp(Ls) && (Ls = null), Fs !== null && gp(Fs) && (Fs = null), uo.forEach(sy), Ti.forEach(sy);
    }
    function du(r, o) {
      r.blockedOn === o && (r.blockedOn = null, gm || (gm = !0, t.unstable_scheduleCallback(t.unstable_NormalPriority, lT)));
    }
    function Sc(r) {
      if (mp.length > 0) {
        du(mp[0], r);
        for (var o = 1; o < mp.length; o++) {
          var f = mp[o];
          f.blockedOn === r && (f.blockedOn = null);
        }
      }
      Cl !== null && du(Cl, r), Ls !== null && du(Ls, r), Fs !== null && du(Fs, r);
      var h = function(V) {
        return du(V, r);
      };
      uo.forEach(h), Ti.forEach(h);
      for (var b = 0; b < Ri.length; b++) {
        var T = Ri[b];
        T.blockedOn === r && (T.blockedOn = null);
      }
      for (; Ri.length > 0; ) {
        var N = Ri[0];
        if (N.blockedOn !== null)
          break;
        ay(N), N.blockedOn === null && Ri.shift();
      }
    }
    var Xo = n.ReactCurrentBatchConfig, Yn = !0;
    function Fo(r) {
      Yn = !!r;
    }
    function wo() {
      return Yn;
    }
    function Qo(r, o, f) {
      var h = vm(o), b;
      switch (h) {
        case Ei:
          b = pa;
          break;
        case Ns:
          b = Od;
          break;
        case Fa:
        default:
          b = co;
          break;
      }
      return b.bind(null, o, f, r);
    }
    function pa(r, o, f, h) {
      var b = Aa(), T = Xo.transition;
      Xo.transition = null;
      try {
        So(Ei), co(r, o, f, h);
      } finally {
        So(b), Xo.transition = T;
      }
    }
    function Od(r, o, f, h) {
      var b = Aa(), T = Xo.transition;
      Xo.transition = null;
      try {
        So(Ns), co(r, o, f, h);
      } finally {
        So(b), Xo.transition = T;
      }
    }
    function co(r, o, f, h) {
      Yn && vp(r, o, f, h);
    }
    function vp(r, o, f, h) {
      var b = kd(r, o, f, h);
      if (b === null) {
        TT(r, o, h, _s, f), iy(r, h);
        return;
      }
      if (sT(b, r, o, f, h)) {
        h.stopPropagation();
        return;
      }
      if (iy(r, h), o & Pa && GS(r)) {
        for (; b !== null; ) {
          var T = Fd(b);
          T !== null && aT(T);
          var N = kd(r, o, f, h);
          if (N === null && TT(r, o, h, _s, f), N === b)
            break;
          b = N;
        }
        b !== null && h.stopPropagation();
        return;
      }
      TT(r, o, h, null, f);
    }
    var _s = null;
    function kd(r, o, f, h) {
      _s = null;
      var b = Nv(h), T = Op(b);
      if (T !== null) {
        var N = ua(T);
        if (N === null)
          T = null;
        else {
          var V = N.tag;
          if (V === D) {
            var Z = Ms(N);
            if (Z !== null)
              return Z;
            T = null;
          } else if (V === C) {
            var se = N.stateNode;
            if (hm(se))
              return Is(N);
            T = null;
          } else N !== T && (T = null);
        }
      }
      return _s = T, null;
    }
    function vm(r) {
      switch (r) {
        case "cancel":
        case "click":
        case "close":
        case "contextmenu":
        case "copy":
        case "cut":
        case "auxclick":
        case "dblclick":
        case "dragend":
        case "dragstart":
        case "drop":
        case "focusin":
        case "focusout":
        case "input":
        case "invalid":
        case "keydown":
        case "keypress":
        case "keyup":
        case "mousedown":
        case "mouseup":
        case "paste":
        case "pause":
        case "play":
        case "pointercancel":
        case "pointerdown":
        case "pointerup":
        case "ratechange":
        case "reset":
        case "resize":
        case "seeked":
        case "submit":
        case "touchcancel":
        case "touchend":
        case "touchstart":
        case "volumechange":
        case "change":
        case "selectionchange":
        case "textInput":
        case "compositionstart":
        case "compositionend":
        case "compositionupdate":
        case "beforeblur":
        case "afterblur":
        case "beforeinput":
        case "blur":
        case "fullscreenchange":
        case "focus":
        case "hashchange":
        case "popstate":
        case "select":
        case "selectstart":
          return Ei;
        case "drag":
        case "dragenter":
        case "dragexit":
        case "dragleave":
        case "dragover":
        case "mousemove":
        case "mouseout":
        case "mouseover":
        case "pointermove":
        case "pointerout":
        case "pointerover":
        case "scroll":
        case "toggle":
        case "touchmove":
        case "wheel":
        case "mouseenter":
        case "mouseleave":
        case "pointerenter":
        case "pointerleave":
          return Ns;
        case "message": {
          var o = Hh();
          switch (o) {
            case Wf:
              return Ei;
            case au:
              return Ns;
            case vl:
            case iT:
              return Fa;
            case lc:
              return _a;
            default:
              return Fa;
          }
        }
        default:
          return Fa;
      }
    }
    function yp(r, o, f) {
      return r.addEventListener(o, f, !1), f;
    }
    function Xi(r, o, f) {
      return r.addEventListener(o, f, !0), f;
    }
    function ly(r, o, f, h) {
      return r.addEventListener(o, f, {
        capture: !0,
        passive: h
      }), f;
    }
    function Pd(r, o, f, h) {
      return r.addEventListener(o, f, {
        passive: h
      }), f;
    }
    var ha = null, Md = null, wc = null;
    function fu(r) {
      return ha = r, Md = bp(), !0;
    }
    function ym() {
      ha = null, Md = null, wc = null;
    }
    function Sl() {
      if (wc)
        return wc;
      var r, o = Md, f = o.length, h, b = bp(), T = b.length;
      for (r = 0; r < f && o[r] === b[r]; r++)
        ;
      var N = f - r;
      for (h = 1; h <= N && o[f - h] === b[T - h]; h++)
        ;
      var V = h > 1 ? 1 - h : void 0;
      return wc = b.slice(r, V), wc;
    }
    function bp() {
      return "value" in ha ? ha.value : ha.textContent;
    }
    function pu(r) {
      var o, f = r.keyCode;
      return "charCode" in r ? (o = r.charCode, o === 0 && f === 13 && (o = 13)) : o = f, o === 10 && (o = 13), o >= 32 || o === 13 ? o : 0;
    }
    function Id() {
      return !0;
    }
    function Cp() {
      return !1;
    }
    function mi(r) {
      function o(f, h, b, T, N) {
        this._reactName = f, this._targetInst = b, this.type = h, this.nativeEvent = T, this.target = N, this.currentTarget = null;
        for (var V in r)
          if (r.hasOwnProperty(V)) {
            var Z = r[V];
            Z ? this[V] = Z(T) : this[V] = T[V];
          }
        var se = T.defaultPrevented != null ? T.defaultPrevented : T.returnValue === !1;
        return se ? this.isDefaultPrevented = Id : this.isDefaultPrevented = Cp, this.isPropagationStopped = Cp, this;
      }
      return Rn(o.prototype, {
        preventDefault: function() {
          this.defaultPrevented = !0;
          var f = this.nativeEvent;
          f && (f.preventDefault ? f.preventDefault() : typeof f.returnValue != "unknown" && (f.returnValue = !1), this.isDefaultPrevented = Id);
        },
        stopPropagation: function() {
          var f = this.nativeEvent;
          f && (f.stopPropagation ? f.stopPropagation() : typeof f.cancelBubble != "unknown" && (f.cancelBubble = !0), this.isPropagationStopped = Id);
        },
        /**
         * We release all dispatched `SyntheticEvent`s after each event loop, adding
         * them back into the pool. This allows a way to hold onto a reference that
         * won't be added back into the pool.
         */
        persist: function() {
        },
        /**
         * Checks if this event should be released back into the pool.
         *
         * @return {boolean} True if this should not be released, false otherwise.
         */
        isPersistent: Id
      }), o;
    }
    var xo = {
      eventPhase: 0,
      bubbles: 0,
      cancelable: 0,
      timeStamp: function(r) {
        return r.timeStamp || Date.now();
      },
      defaultPrevented: 0,
      isTrusted: 0
    }, As = mi(xo), Oi = Rn({}, xo, {
      view: 0,
      detail: 0
    }), Qi = mi(Oi), bm, Sp, xc;
    function uT(r) {
      r !== xc && (xc && r.type === "mousemove" ? (bm = r.screenX - xc.screenX, Sp = r.screenY - xc.screenY) : (bm = 0, Sp = 0), xc = r);
    }
    var is = Rn({}, Oi, {
      screenX: 0,
      screenY: 0,
      clientX: 0,
      clientY: 0,
      pageX: 0,
      pageY: 0,
      ctrlKey: 0,
      shiftKey: 0,
      altKey: 0,
      metaKey: 0,
      getModifierState: Kr,
      button: 0,
      buttons: 0,
      relatedTarget: function(r) {
        return r.relatedTarget === void 0 ? r.fromElement === r.srcElement ? r.toElement : r.fromElement : r.relatedTarget;
      },
      movementX: function(r) {
        return "movementX" in r ? r.movementX : (uT(r), bm);
      },
      movementY: function(r) {
        return "movementY" in r ? r.movementY : Sp;
      }
    }), uy = mi(is), cy = Rn({}, is, {
      dataTransfer: 0
    }), Ec = mi(cy), dy = Rn({}, Oi, {
      relatedTarget: 0
    }), wl = mi(dy), qS = Rn({}, xo, {
      animationName: 0,
      elapsedTime: 0,
      pseudoElement: 0
    }), KS = mi(qS), fy = Rn({}, xo, {
      clipboardData: function(r) {
        return "clipboardData" in r ? r.clipboardData : window.clipboardData;
      }
    }), Cm = mi(fy), cT = Rn({}, xo, {
      data: 0
    }), YS = mi(cT), XS = YS, QS = {
      Esc: "Escape",
      Spacebar: " ",
      Left: "ArrowLeft",
      Up: "ArrowUp",
      Right: "ArrowRight",
      Down: "ArrowDown",
      Del: "Delete",
      Win: "OS",
      Menu: "ContextMenu",
      Apps: "ContextMenu",
      Scroll: "ScrollLock",
      MozPrintableKey: "Unidentified"
    }, Tc = {
      8: "Backspace",
      9: "Tab",
      12: "Clear",
      13: "Enter",
      16: "Shift",
      17: "Control",
      18: "Alt",
      19: "Pause",
      20: "CapsLock",
      27: "Escape",
      32: " ",
      33: "PageUp",
      34: "PageDown",
      35: "End",
      36: "Home",
      37: "ArrowLeft",
      38: "ArrowUp",
      39: "ArrowRight",
      40: "ArrowDown",
      45: "Insert",
      46: "Delete",
      112: "F1",
      113: "F2",
      114: "F3",
      115: "F4",
      116: "F5",
      117: "F6",
      118: "F7",
      119: "F8",
      120: "F9",
      121: "F10",
      122: "F11",
      123: "F12",
      144: "NumLock",
      145: "ScrollLock",
      224: "Meta"
    };
    function dT(r) {
      if (r.key) {
        var o = QS[r.key] || r.key;
        if (o !== "Unidentified")
          return o;
      }
      if (r.type === "keypress") {
        var f = pu(r);
        return f === 13 ? "Enter" : String.fromCharCode(f);
      }
      return r.type === "keydown" || r.type === "keyup" ? Tc[r.keyCode] || "Unidentified" : "";
    }
    var Dd = {
      Alt: "altKey",
      Control: "ctrlKey",
      Meta: "metaKey",
      Shift: "shiftKey"
    };
    function JS(r) {
      var o = this, f = o.nativeEvent;
      if (f.getModifierState)
        return f.getModifierState(r);
      var h = Dd[r];
      return h ? !!f[h] : !1;
    }
    function Kr(r) {
      return JS;
    }
    var fT = Rn({}, Oi, {
      key: dT,
      code: 0,
      location: 0,
      ctrlKey: 0,
      shiftKey: 0,
      altKey: 0,
      metaKey: 0,
      repeat: 0,
      locale: 0,
      getModifierState: Kr,
      // Legacy Interface
      charCode: function(r) {
        return r.type === "keypress" ? pu(r) : 0;
      },
      keyCode: function(r) {
        return r.type === "keydown" || r.type === "keyup" ? r.keyCode : 0;
      },
      which: function(r) {
        return r.type === "keypress" ? pu(r) : r.type === "keydown" || r.type === "keyup" ? r.keyCode : 0;
      }
    }), ZS = mi(fT), pT = Rn({}, is, {
      pointerId: 0,
      width: 0,
      height: 0,
      pressure: 0,
      tangentialPressure: 0,
      tiltX: 0,
      tiltY: 0,
      twist: 0,
      pointerType: 0,
      isPrimary: 0
    }), ew = mi(pT), tw = Rn({}, Oi, {
      touches: 0,
      targetTouches: 0,
      changedTouches: 0,
      altKey: 0,
      metaKey: 0,
      ctrlKey: 0,
      shiftKey: 0,
      getModifierState: Kr
    }), nw = mi(tw), hT = Rn({}, xo, {
      propertyName: 0,
      elapsedTime: 0,
      pseudoElement: 0
    }), $a = mi(hT), py = Rn({}, is, {
      deltaX: function(r) {
        return "deltaX" in r ? r.deltaX : (
          // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
          "wheelDeltaX" in r ? -r.wheelDeltaX : 0
        );
      },
      deltaY: function(r) {
        return "deltaY" in r ? r.deltaY : (
          // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
          "wheelDeltaY" in r ? -r.wheelDeltaY : (
            // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
            "wheelDelta" in r ? -r.wheelDelta : 0
          )
        );
      },
      deltaZ: 0,
      // Browsers without "deltaMode" is reporting in raw wheel delta where one
      // notch on the scroll is always +/- 120, roughly equivalent to pixels.
      // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
      // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
      deltaMode: 0
    }), mT = mi(py), hu = [9, 13, 27, 32], wp = 229, xl = Re && "CompositionEvent" in window, mu = null;
    Re && "documentMode" in document && (mu = document.documentMode);
    var hy = Re && "TextEvent" in window && !mu, Sm = Re && (!xl || mu && mu > 8 && mu <= 11), rw = 32, wm = String.fromCharCode(rw);
    function gT() {
      be("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]), be("onCompositionEnd", ["compositionend", "focusout", "keydown", "keypress", "keyup", "mousedown"]), be("onCompositionStart", ["compositionstart", "focusout", "keydown", "keypress", "keyup", "mousedown"]), be("onCompositionUpdate", ["compositionupdate", "focusout", "keydown", "keypress", "keyup", "mousedown"]);
    }
    var my = !1;
    function ow(r) {
      return (r.ctrlKey || r.altKey || r.metaKey) && // ctrlKey && altKey is equivalent to AltGr, and is not a command.
      !(r.ctrlKey && r.altKey);
    }
    function xm(r) {
      switch (r) {
        case "compositionstart":
          return "onCompositionStart";
        case "compositionend":
          return "onCompositionEnd";
        case "compositionupdate":
          return "onCompositionUpdate";
      }
    }
    function Em(r, o) {
      return r === "keydown" && o.keyCode === wp;
    }
    function gy(r, o) {
      switch (r) {
        case "keyup":
          return hu.indexOf(o.keyCode) !== -1;
        case "keydown":
          return o.keyCode !== wp;
        case "keypress":
        case "mousedown":
        case "focusout":
          return !0;
        default:
          return !1;
      }
    }
    function Tm(r) {
      var o = r.detail;
      return typeof o == "object" && "data" in o ? o.data : null;
    }
    function iw(r) {
      return r.locale === "ko";
    }
    var Rc = !1;
    function vy(r, o, f, h, b) {
      var T, N;
      if (xl ? T = xm(o) : Rc ? gy(o, h) && (T = "onCompositionEnd") : Em(o, h) && (T = "onCompositionStart"), !T)
        return null;
      Sm && !iw(h) && (!Rc && T === "onCompositionStart" ? Rc = fu(b) : T === "onCompositionEnd" && Rc && (N = Sl()));
      var V = fw(f, T);
      if (V.length > 0) {
        var Z = new YS(T, o, null, h, b);
        if (r.push({
          event: Z,
          listeners: V
        }), N)
          Z.data = N;
        else {
          var se = Tm(h);
          se !== null && (Z.data = se);
        }
      }
    }
    function Rm(r, o) {
      switch (r) {
        case "compositionend":
          return Tm(o);
        case "keypress":
          var f = o.which;
          return f !== rw ? null : (my = !0, wm);
        case "textInput":
          var h = o.data;
          return h === wm && my ? null : h;
        default:
          return null;
      }
    }
    function yy(r, o) {
      if (Rc) {
        if (r === "compositionend" || !xl && gy(r, o)) {
          var f = Sl();
          return ym(), Rc = !1, f;
        }
        return null;
      }
      switch (r) {
        case "paste":
          return null;
        case "keypress":
          if (!ow(o)) {
            if (o.char && o.char.length > 1)
              return o.char;
            if (o.which)
              return String.fromCharCode(o.which);
          }
          return null;
        case "compositionend":
          return Sm && !iw(o) ? null : o.data;
        default:
          return null;
      }
    }
    function Om(r, o, f, h, b) {
      var T;
      if (hy ? T = Rm(o, h) : T = yy(o, h), !T)
        return null;
      var N = fw(f, "onBeforeInput");
      if (N.length > 0) {
        var V = new XS("onBeforeInput", "beforeinput", null, h, b);
        r.push({
          event: V,
          listeners: N
        }), V.data = T;
      }
    }
    function aw(r, o, f, h, b, T, N) {
      vy(r, o, f, h, b), Om(r, o, f, h, b);
    }
    var vT = {
      color: !0,
      date: !0,
      datetime: !0,
      "datetime-local": !0,
      email: !0,
      month: !0,
      number: !0,
      password: !0,
      range: !0,
      search: !0,
      tel: !0,
      text: !0,
      time: !0,
      url: !0,
      week: !0
    };
    function xp(r) {
      var o = r && r.nodeName && r.nodeName.toLowerCase();
      return o === "input" ? !!vT[r.type] : o === "textarea";
    }
    /**
     * Checks if an event is supported in the current execution environment.
     *
     * NOTE: This will not work correctly for non-generic events such as `change`,
     * `reset`, `load`, `error`, and `select`.
     *
     * Borrows from Modernizr.
     *
     * @param {string} eventNameSuffix Event name, e.g. "click".
     * @return {boolean} True if the event is supported.
     * @internal
     * @license Modernizr 3.0.0pre (Custom Build) | MIT
     */
    function yT(r) {
      if (!Re)
        return !1;
      var o = "on" + r, f = o in document;
      if (!f) {
        var h = document.createElement("div");
        h.setAttribute(o, "return;"), f = typeof h[o] == "function";
      }
      return f;
    }
    function Ep() {
      be("onChange", ["change", "click", "focusin", "focusout", "input", "keydown", "keyup", "selectionchange"]);
    }
    function sw(r, o, f, h) {
      md(h);
      var b = fw(o, "onChange");
      if (b.length > 0) {
        var T = new As("onChange", "change", null, f, h);
        r.push({
          event: T,
          listeners: b
        });
      }
    }
    var gu = null, l = null;
    function c(r) {
      var o = r.nodeName && r.nodeName.toLowerCase();
      return o === "select" || o === "input" && r.type === "file";
    }
    function g(r) {
      var o = [];
      sw(o, l, r, Nv(r)), bS(x, o);
    }
    function x(r) {
      NM(r, 0);
    }
    function M(r) {
      var o = Nm(r);
      if (Es(o))
        return r;
    }
    function $(r, o) {
      if (r === "change")
        return o;
    }
    var oe = !1;
    Re && (oe = yT("input") && (!document.documentMode || document.documentMode > 9));
    function he(r, o) {
      gu = r, l = o, gu.attachEvent("onpropertychange", je);
    }
    function Se() {
      gu && (gu.detachEvent("onpropertychange", je), gu = null, l = null);
    }
    function je(r) {
      r.propertyName === "value" && M(l) && g(r);
    }
    function lt(r, o, f) {
      r === "focusin" ? (Se(), he(o, f)) : r === "focusout" && Se();
    }
    function dt(r, o) {
      if (r === "selectionchange" || r === "keyup" || r === "keydown")
        return M(l);
    }
    function st(r) {
      var o = r.nodeName;
      return o && o.toLowerCase() === "input" && (r.type === "checkbox" || r.type === "radio");
    }
    function Ft(r, o) {
      if (r === "click")
        return M(o);
    }
    function Wt(r, o) {
      if (r === "input" || r === "change")
        return M(o);
    }
    function Yt(r) {
      var o = r._wrapperState;
      !o || !o.controlled || r.type !== "number" || sn(r, "number", r.value);
    }
    function fo(r, o, f, h, b, T, N) {
      var V = f ? Nm(f) : window, Z, se;
      if (c(V) ? Z = $ : xp(V) ? oe ? Z = Wt : (Z = dt, se = lt) : st(V) && (Z = Ft), Z) {
        var le = Z(o, f);
        if (le) {
          sw(r, le, h, b);
          return;
        }
      }
      se && se(o, V, f), o === "focusout" && Yt(V);
    }
    function Pe() {
      Ce("onMouseEnter", ["mouseout", "mouseover"]), Ce("onMouseLeave", ["mouseout", "mouseover"]), Ce("onPointerEnter", ["pointerout", "pointerover"]), Ce("onPointerLeave", ["pointerout", "pointerover"]);
    }
    function Ee(r, o, f, h, b, T, N) {
      var V = o === "mouseover" || o === "pointerover", Z = o === "mouseout" || o === "pointerout";
      if (V && !zf(h)) {
        var se = h.relatedTarget || h.fromElement;
        if (se && (Op(se) || Dy(se)))
          return;
      }
      if (!(!Z && !V)) {
        var le;
        if (b.window === b)
          le = b;
        else {
          var Te = b.ownerDocument;
          Te ? le = Te.defaultView || Te.parentWindow : le = window;
        }
        var xe, Ae;
        if (Z) {
          var ze = h.relatedTarget || h.toElement;
          if (xe = f, Ae = ze ? Op(ze) : null, Ae !== null) {
            var qe = ua(Ae);
            (Ae !== qe || Ae.tag !== R && Ae.tag !== O) && (Ae = null);
          }
        } else
          xe = null, Ae = f;
        if (xe !== Ae) {
          var Dt = uy, ln = "onMouseLeave", Jt = "onMouseEnter", Qn = "mouse";
          (o === "pointerout" || o === "pointerover") && (Dt = ew, ln = "onPointerLeave", Jt = "onPointerEnter", Qn = "pointer");
          var Un = xe == null ? le : Nm(xe), Ie = Ae == null ? le : Nm(Ae), Ke = new Dt(ln, Qn + "leave", xe, h, b);
          Ke.target = Un, Ke.relatedTarget = Ie;
          var De = null, ft = Op(b);
          if (ft === f) {
            var $t = new Dt(Jt, Qn + "enter", Ae, h, b);
            $t.target = Ie, $t.relatedTarget = Un, De = $t;
          }
          OV(r, Ke, De, xe, Ae);
        }
      }
    }
    function Fe(r, o) {
      return r === o && (r !== 0 || 1 / r === 1 / o) || r !== r && o !== o;
    }
    var ut = typeof Object.is == "function" ? Object.is : Fe;
    function qt(r, o) {
      if (ut(r, o))
        return !0;
      if (typeof r != "object" || r === null || typeof o != "object" || o === null)
        return !1;
      var f = Object.keys(r), h = Object.keys(o);
      if (f.length !== h.length)
        return !1;
      for (var b = 0; b < f.length; b++) {
        var T = f[b];
        if (!ue.call(o, T) || !ut(r[T], o[T]))
          return !1;
      }
      return !0;
    }
    function un(r) {
      for (; r && r.firstChild; )
        r = r.firstChild;
      return r;
    }
    function dn(r) {
      for (; r; ) {
        if (r.nextSibling)
          return r.nextSibling;
        r = r.parentNode;
      }
    }
    function Cn(r, o) {
      for (var f = un(r), h = 0, b = 0; f; ) {
        if (f.nodeType === fl) {
          if (b = h + f.textContent.length, h <= o && b >= o)
            return {
              node: f,
              offset: o - h
            };
          h = b;
        }
        f = un(dn(f));
      }
    }
    function Vo(r) {
      var o = r.ownerDocument, f = o && o.defaultView || window, h = f.getSelection && f.getSelection();
      if (!h || h.rangeCount === 0)
        return null;
      var b = h.anchorNode, T = h.anchorOffset, N = h.focusNode, V = h.focusOffset;
      try {
        b.nodeType, N.nodeType;
      } catch {
        return null;
      }
      return sr(r, b, T, N, V);
    }
    function sr(r, o, f, h, b) {
      var T = 0, N = -1, V = -1, Z = 0, se = 0, le = r, Te = null;
      e: for (; ; ) {
        for (var xe = null; le === o && (f === 0 || le.nodeType === fl) && (N = T + f), le === h && (b === 0 || le.nodeType === fl) && (V = T + b), le.nodeType === fl && (T += le.nodeValue.length), (xe = le.firstChild) !== null; )
          Te = le, le = xe;
        for (; ; ) {
          if (le === r)
            break e;
          if (Te === o && ++Z === f && (N = T), Te === h && ++se === b && (V = T), (xe = le.nextSibling) !== null)
            break;
          le = Te, Te = le.parentNode;
        }
        le = xe;
      }
      return N === -1 || V === -1 ? null : {
        start: N,
        end: V
      };
    }
    function vu(r, o) {
      var f = r.ownerDocument || document, h = f && f.defaultView || window;
      if (h.getSelection) {
        var b = h.getSelection(), T = r.textContent.length, N = Math.min(o.start, T), V = o.end === void 0 ? N : Math.min(o.end, T);
        if (!b.extend && N > V) {
          var Z = V;
          V = N, N = Z;
        }
        var se = Cn(r, N), le = Cn(r, V);
        if (se && le) {
          if (b.rangeCount === 1 && b.anchorNode === se.node && b.anchorOffset === se.offset && b.focusNode === le.node && b.focusOffset === le.offset)
            return;
          var Te = f.createRange();
          Te.setStart(se.node, se.offset), b.removeAllRanges(), N > V ? (b.addRange(Te), b.extend(le.node, le.offset)) : (Te.setEnd(le.node, le.offset), b.addRange(Te));
        }
      }
    }
    function lw(r) {
      return r && r.nodeType === fl;
    }
    function wM(r, o) {
      return !r || !o ? !1 : r === o ? !0 : lw(r) ? !1 : lw(o) ? wM(r, o.parentNode) : "contains" in r ? r.contains(o) : r.compareDocumentPosition ? !!(r.compareDocumentPosition(o) & 16) : !1;
    }
    function uV(r) {
      return r && r.ownerDocument && wM(r.ownerDocument.documentElement, r);
    }
    function cV(r) {
      try {
        return typeof r.contentWindow.location.href == "string";
      } catch {
        return !1;
      }
    }
    function xM() {
      for (var r = window, o = ka(); o instanceof r.HTMLIFrameElement; ) {
        if (cV(o))
          r = o.contentWindow;
        else
          return o;
        o = ka(r.document);
      }
      return o;
    }
    function bT(r) {
      var o = r && r.nodeName && r.nodeName.toLowerCase();
      return o && (o === "input" && (r.type === "text" || r.type === "search" || r.type === "tel" || r.type === "url" || r.type === "password") || o === "textarea" || r.contentEditable === "true");
    }
    function dV() {
      var r = xM();
      return {
        focusedElem: r,
        selectionRange: bT(r) ? pV(r) : null
      };
    }
    function fV(r) {
      var o = xM(), f = r.focusedElem, h = r.selectionRange;
      if (o !== f && uV(f)) {
        h !== null && bT(f) && hV(f, h);
        for (var b = [], T = f; T = T.parentNode; )
          T.nodeType === Hi && b.push({
            element: T,
            left: T.scrollLeft,
            top: T.scrollTop
          });
        typeof f.focus == "function" && f.focus();
        for (var N = 0; N < b.length; N++) {
          var V = b[N];
          V.element.scrollLeft = V.left, V.element.scrollTop = V.top;
        }
      }
    }
    function pV(r) {
      var o;
      return "selectionStart" in r ? o = {
        start: r.selectionStart,
        end: r.selectionEnd
      } : o = Vo(r), o || {
        start: 0,
        end: 0
      };
    }
    function hV(r, o) {
      var f = o.start, h = o.end;
      h === void 0 && (h = f), "selectionStart" in r ? (r.selectionStart = f, r.selectionEnd = Math.min(h, r.value.length)) : vu(r, o);
    }
    var mV = Re && "documentMode" in document && document.documentMode <= 11;
    function gV() {
      be("onSelect", ["focusout", "contextmenu", "dragend", "focusin", "keydown", "keyup", "mousedown", "mouseup", "selectionchange"]);
    }
    var km = null, CT = null, by = null, ST = !1;
    function vV(r) {
      if ("selectionStart" in r && bT(r))
        return {
          start: r.selectionStart,
          end: r.selectionEnd
        };
      var o = r.ownerDocument && r.ownerDocument.defaultView || window, f = o.getSelection();
      return {
        anchorNode: f.anchorNode,
        anchorOffset: f.anchorOffset,
        focusNode: f.focusNode,
        focusOffset: f.focusOffset
      };
    }
    function yV(r) {
      return r.window === r ? r.document : r.nodeType === pl ? r : r.ownerDocument;
    }
    function EM(r, o, f) {
      var h = yV(f);
      if (!(ST || km == null || km !== ka(h))) {
        var b = vV(km);
        if (!by || !qt(by, b)) {
          by = b;
          var T = fw(CT, "onSelect");
          if (T.length > 0) {
            var N = new As("onSelect", "select", null, o, f);
            r.push({
              event: N,
              listeners: T
            }), N.target = km;
          }
        }
      }
    }
    function bV(r, o, f, h, b, T, N) {
      var V = f ? Nm(f) : window;
      switch (o) {
        case "focusin":
          (xp(V) || V.contentEditable === "true") && (km = V, CT = f, by = null);
          break;
        case "focusout":
          km = null, CT = null, by = null;
          break;
        case "mousedown":
          ST = !0;
          break;
        case "contextmenu":
        case "mouseup":
        case "dragend":
          ST = !1, EM(r, h, b);
          break;
        case "selectionchange":
          if (mV)
            break;
        case "keydown":
        case "keyup":
          EM(r, h, b);
      }
    }
    function uw(r, o) {
      var f = {};
      return f[r.toLowerCase()] = o.toLowerCase(), f["Webkit" + r] = "webkit" + o, f["Moz" + r] = "moz" + o, f;
    }
    var Pm = {
      animationend: uw("Animation", "AnimationEnd"),
      animationiteration: uw("Animation", "AnimationIteration"),
      animationstart: uw("Animation", "AnimationStart"),
      transitionend: uw("Transition", "TransitionEnd")
    }, wT = {}, TM = {};
    Re && (TM = document.createElement("div").style, "AnimationEvent" in window || (delete Pm.animationend.animation, delete Pm.animationiteration.animation, delete Pm.animationstart.animation), "TransitionEvent" in window || delete Pm.transitionend.transition);
    function cw(r) {
      if (wT[r])
        return wT[r];
      if (!Pm[r])
        return r;
      var o = Pm[r];
      for (var f in o)
        if (o.hasOwnProperty(f) && f in TM)
          return wT[r] = o[f];
      return r;
    }
    var RM = cw("animationend"), OM = cw("animationiteration"), kM = cw("animationstart"), PM = cw("transitionend"), MM = /* @__PURE__ */ new Map(), IM = ["abort", "auxClick", "cancel", "canPlay", "canPlayThrough", "click", "close", "contextMenu", "copy", "cut", "drag", "dragEnd", "dragEnter", "dragExit", "dragLeave", "dragOver", "dragStart", "drop", "durationChange", "emptied", "encrypted", "ended", "error", "gotPointerCapture", "input", "invalid", "keyDown", "keyPress", "keyUp", "load", "loadedData", "loadedMetadata", "loadStart", "lostPointerCapture", "mouseDown", "mouseMove", "mouseOut", "mouseOver", "mouseUp", "paste", "pause", "play", "playing", "pointerCancel", "pointerDown", "pointerMove", "pointerOut", "pointerOver", "pointerUp", "progress", "rateChange", "reset", "resize", "seeked", "seeking", "stalled", "submit", "suspend", "timeUpdate", "touchCancel", "touchEnd", "touchStart", "volumeChange", "scroll", "toggle", "touchMove", "waiting", "wheel"];
    function Nd(r, o) {
      MM.set(r, o), be(o, [r]);
    }
    function CV() {
      for (var r = 0; r < IM.length; r++) {
        var o = IM[r], f = o.toLowerCase(), h = o[0].toUpperCase() + o.slice(1);
        Nd(f, "on" + h);
      }
      Nd(RM, "onAnimationEnd"), Nd(OM, "onAnimationIteration"), Nd(kM, "onAnimationStart"), Nd("dblclick", "onDoubleClick"), Nd("focusin", "onFocus"), Nd("focusout", "onBlur"), Nd(PM, "onTransitionEnd");
    }
    function SV(r, o, f, h, b, T, N) {
      var V = MM.get(o);
      if (V !== void 0) {
        var Z = As, se = o;
        switch (o) {
          case "keypress":
            if (pu(h) === 0)
              return;
          case "keydown":
          case "keyup":
            Z = ZS;
            break;
          case "focusin":
            se = "focus", Z = wl;
            break;
          case "focusout":
            se = "blur", Z = wl;
            break;
          case "beforeblur":
          case "afterblur":
            Z = wl;
            break;
          case "click":
            if (h.button === 2)
              return;
          case "auxclick":
          case "dblclick":
          case "mousedown":
          case "mousemove":
          case "mouseup":
          case "mouseout":
          case "mouseover":
          case "contextmenu":
            Z = uy;
            break;
          case "drag":
          case "dragend":
          case "dragenter":
          case "dragexit":
          case "dragleave":
          case "dragover":
          case "dragstart":
          case "drop":
            Z = Ec;
            break;
          case "touchcancel":
          case "touchend":
          case "touchmove":
          case "touchstart":
            Z = nw;
            break;
          case RM:
          case OM:
          case kM:
            Z = KS;
            break;
          case PM:
            Z = $a;
            break;
          case "scroll":
            Z = Qi;
            break;
          case "wheel":
            Z = mT;
            break;
          case "copy":
          case "cut":
          case "paste":
            Z = Cm;
            break;
          case "gotpointercapture":
          case "lostpointercapture":
          case "pointercancel":
          case "pointerdown":
          case "pointermove":
          case "pointerout":
          case "pointerover":
          case "pointerup":
            Z = ew;
            break;
        }
        var le = (T & Pa) !== 0;
        {
          var Te = !le && // TODO: ideally, we'd eventually add all events from
          // nonDelegatedEvents list in DOMPluginEventSystem.
          // Then we can remove this special list.
          // This is a breaking change that can wait until React 18.
          o === "scroll", xe = TV(f, V, h.type, le, Te);
          if (xe.length > 0) {
            var Ae = new Z(V, se, null, h, b);
            r.push({
              event: Ae,
              listeners: xe
            });
          }
        }
      }
    }
    CV(), Pe(), Ep(), gV(), gT();
    function wV(r, o, f, h, b, T, N) {
      SV(r, o, f, h, b, T);
      var V = (T & Dv) === 0;
      V && (Ee(r, o, f, h, b), fo(r, o, f, h, b), bV(r, o, f, h, b), aw(r, o, f, h, b));
    }
    var Cy = ["abort", "canplay", "canplaythrough", "durationchange", "emptied", "encrypted", "ended", "error", "loadeddata", "loadedmetadata", "loadstart", "pause", "play", "playing", "progress", "ratechange", "resize", "seeked", "seeking", "stalled", "suspend", "timeupdate", "volumechange", "waiting"], xT = new Set(["cancel", "close", "invalid", "load", "scroll", "toggle"].concat(Cy));
    function DM(r, o, f) {
      var h = r.type || "unknown-event";
      r.currentTarget = f, Os(h, o, void 0, r), r.currentTarget = null;
    }
    function xV(r, o, f) {
      var h;
      if (f)
        for (var b = o.length - 1; b >= 0; b--) {
          var T = o[b], N = T.instance, V = T.currentTarget, Z = T.listener;
          if (N !== h && r.isPropagationStopped())
            return;
          DM(r, Z, V), h = N;
        }
      else
        for (var se = 0; se < o.length; se++) {
          var le = o[se], Te = le.instance, xe = le.currentTarget, Ae = le.listener;
          if (Te !== h && r.isPropagationStopped())
            return;
          DM(r, Ae, xe), h = Te;
        }
    }
    function NM(r, o) {
      for (var f = (o & Pa) !== 0, h = 0; h < r.length; h++) {
        var b = r[h], T = b.event, N = b.listeners;
        xV(T, N, f);
      }
      Bf();
    }
    function EV(r, o, f, h, b) {
      var T = Nv(f), N = [];
      wV(N, r, h, f, T, o), NM(N, o);
    }
    function eo(r, o) {
      xT.has(r) || d('Did not expect a listenToNonDelegatedEvent() call for "%s". This is a bug in React. Please file an issue.', r);
      var f = !1, h = eU(o), b = kV(r);
      h.has(b) || (LM(o, r, kh, f), h.add(b));
    }
    function ET(r, o, f) {
      xT.has(r) && !o && d('Did not expect a listenToNativeEvent() call for "%s" in the bubble phase. This is a bug in React. Please file an issue.', r);
      var h = 0;
      o && (h |= Pa), LM(f, r, h, o);
    }
    var dw = "_reactListening" + Math.random().toString(36).slice(2);
    function Sy(r) {
      if (!r[dw]) {
        r[dw] = !0, ge.forEach(function(f) {
          f !== "selectionchange" && (xT.has(f) || ET(f, !1, r), ET(f, !0, r));
        });
        var o = r.nodeType === pl ? r : r.ownerDocument;
        o !== null && (o[dw] || (o[dw] = !0, ET("selectionchange", !1, o)));
      }
    }
    function LM(r, o, f, h, b) {
      var T = Qo(r, o, f), N = void 0;
      Vf && (o === "touchstart" || o === "touchmove" || o === "wheel") && (N = !0), r = r, h ? N !== void 0 ? ly(r, o, T, N) : Xi(r, o, T) : N !== void 0 ? Pd(r, o, T, N) : yp(r, o, T);
    }
    function FM(r, o) {
      return r === o || r.nodeType === go && r.parentNode === o;
    }
    function TT(r, o, f, h, b) {
      var T = h;
      if (!(o & Iv) && !(o & kh)) {
        var N = b;
        if (h !== null) {
          var V = h;
          e: for (; ; ) {
            if (V === null)
              return;
            var Z = V.tag;
            if (Z === C || Z === w) {
              var se = V.stateNode.containerInfo;
              if (FM(se, N))
                break;
              if (Z === w)
                for (var le = V.return; le !== null; ) {
                  var Te = le.tag;
                  if (Te === C || Te === w) {
                    var xe = le.stateNode.containerInfo;
                    if (FM(xe, N))
                      return;
                  }
                  le = le.return;
                }
              for (; se !== null; ) {
                var Ae = Op(se);
                if (Ae === null)
                  return;
                var ze = Ae.tag;
                if (ze === R || ze === O) {
                  V = T = Ae;
                  continue e;
                }
                se = se.parentNode;
              }
            }
            V = V.return;
          }
        }
      }
      bS(function() {
        return EV(r, o, f, T);
      });
    }
    function wy(r, o, f) {
      return {
        instance: r,
        listener: o,
        currentTarget: f
      };
    }
    function TV(r, o, f, h, b, T) {
      for (var N = o !== null ? o + "Capture" : null, V = h ? N : o, Z = [], se = r, le = null; se !== null; ) {
        var Te = se, xe = Te.stateNode, Ae = Te.tag;
        if (Ae === R && xe !== null && (le = xe, V !== null)) {
          var ze = eu(se, V);
          ze != null && Z.push(wy(se, ze, le));
        }
        if (b)
          break;
        se = se.return;
      }
      return Z;
    }
    function fw(r, o) {
      for (var f = o + "Capture", h = [], b = r; b !== null; ) {
        var T = b, N = T.stateNode, V = T.tag;
        if (V === R && N !== null) {
          var Z = N, se = eu(b, f);
          se != null && h.unshift(wy(b, se, Z));
          var le = eu(b, o);
          le != null && h.push(wy(b, le, Z));
        }
        b = b.return;
      }
      return h;
    }
    function Mm(r) {
      if (r === null)
        return null;
      do
        r = r.return;
      while (r && r.tag !== R);
      return r || null;
    }
    function RV(r, o) {
      for (var f = r, h = o, b = 0, T = f; T; T = Mm(T))
        b++;
      for (var N = 0, V = h; V; V = Mm(V))
        N++;
      for (; b - N > 0; )
        f = Mm(f), b--;
      for (; N - b > 0; )
        h = Mm(h), N--;
      for (var Z = b; Z--; ) {
        if (f === h || h !== null && f === h.alternate)
          return f;
        f = Mm(f), h = Mm(h);
      }
      return null;
    }
    function _M(r, o, f, h, b) {
      for (var T = o._reactName, N = [], V = f; V !== null && V !== h; ) {
        var Z = V, se = Z.alternate, le = Z.stateNode, Te = Z.tag;
        if (se !== null && se === h)
          break;
        if (Te === R && le !== null) {
          var xe = le;
          if (b) {
            var Ae = eu(V, T);
            Ae != null && N.unshift(wy(V, Ae, xe));
          } else if (!b) {
            var ze = eu(V, T);
            ze != null && N.push(wy(V, ze, xe));
          }
        }
        V = V.return;
      }
      N.length !== 0 && r.push({
        event: o,
        listeners: N
      });
    }
    function OV(r, o, f, h, b) {
      var T = h && b ? RV(h, b) : null;
      h !== null && _M(r, o, h, T, !1), b !== null && f !== null && _M(r, f, b, T, !0);
    }
    function kV(r, o) {
      return r + "__bubble";
    }
    var ja = !1, xy = "dangerouslySetInnerHTML", pw = "suppressContentEditableWarning", Ld = "suppressHydrationWarning", AM = "autoFocus", Tp = "children", Rp = "style", hw = "__html", RT, mw, Ey, $M, gw, jM, zM;
    RT = {
      // There are working polyfills for <dialog>. Let people use it.
      dialog: !0,
      // Electron ships a custom <webview> tag to display external web content in
      // an isolated frame and process.
      // This tag is not present in non Electron environments such as JSDom which
      // is often used for testing purposes.
      // @see https://electronjs.org/docs/api/webview-tag
      webview: !0
    }, mw = function(r, o) {
      kv(r, o), Rh(r, o), gS(r, o, {
        registrationNameDependencies: de,
        possibleRegistrationNames: pe
      });
    }, jM = Re && !document.documentMode, Ey = function(r, o, f) {
      if (!ja) {
        var h = vw(f), b = vw(o);
        b !== h && (ja = !0, d("Prop `%s` did not match. Server: %s Client: %s", r, JSON.stringify(b), JSON.stringify(h)));
      }
    }, $M = function(r) {
      if (!ja) {
        ja = !0;
        var o = [];
        r.forEach(function(f) {
          o.push(f);
        }), d("Extra attributes from the server: %s", o);
      }
    }, gw = function(r, o) {
      o === !1 ? d("Expected `%s` listener to be a function, instead got `false`.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.", r, r, r) : d("Expected `%s` listener to be a function, instead got a value of `%s` type.", r, typeof o);
    }, zM = function(r, o) {
      var f = r.namespaceURI === dl ? r.ownerDocument.createElement(r.tagName) : r.ownerDocument.createElementNS(r.namespaceURI, r.tagName);
      return f.innerHTML = o, f.innerHTML;
    };
    var PV = /\r\n?/g, MV = /\u0000|\uFFFD/g;
    function vw(r) {
      wt(r);
      var o = typeof r == "string" ? r : "" + r;
      return o.replace(PV, `
`).replace(MV, "");
    }
    function yw(r, o, f, h) {
      var b = vw(o), T = vw(r);
      if (T !== b && (h && (ja || (ja = !0, d('Text content did not match. Server: "%s" Client: "%s"', T, b))), f && q))
        throw new Error("Text content does not match server-rendered HTML.");
    }
    function HM(r) {
      return r.nodeType === pl ? r : r.ownerDocument;
    }
    function IV() {
    }
    function bw(r) {
      r.onclick = IV;
    }
    function DV(r, o, f, h, b) {
      for (var T in h)
        if (h.hasOwnProperty(T)) {
          var N = h[T];
          if (T === Rp)
            N && Object.freeze(N), cS(o, N);
          else if (T === xy) {
            var V = N ? N[hw] : void 0;
            V != null && JC(o, V);
          } else if (T === Tp)
            if (typeof N == "string") {
              var Z = r !== "textarea" || N !== "";
              Z && dd(o, N);
            } else typeof N == "number" && dd(o, "" + N);
          else T === pw || T === Ld || T === AM || (de.hasOwnProperty(T) ? N != null && (typeof N != "function" && gw(T, N), T === "onScroll" && eo("scroll", o)) : N != null && St(o, T, N, b));
        }
    }
    function NV(r, o, f, h) {
      for (var b = 0; b < o.length; b += 2) {
        var T = o[b], N = o[b + 1];
        T === Rp ? cS(r, N) : T === xy ? JC(r, N) : T === Tp ? dd(r, N) : St(r, T, N, h);
      }
    }
    function LV(r, o, f, h) {
      var b, T = HM(f), N, V = h;
      if (V === dl && (V = Sv(r)), V === dl) {
        if (b = Jl(r, o), !b && r !== r.toLowerCase() && d("<%s /> is using incorrect casing. Use PascalCase for React components, or lowercase for HTML elements.", r), r === "script") {
          var Z = T.createElement("div");
          Z.innerHTML = "<script><\/script>";
          var se = Z.firstChild;
          N = Z.removeChild(se);
        } else if (typeof o.is == "string")
          N = T.createElement(r, {
            is: o.is
          });
        else if (N = T.createElement(r), r === "select") {
          var le = N;
          o.multiple ? le.multiple = !0 : o.size && (le.size = o.size);
        }
      } else
        N = T.createElementNS(V, r);
      return V === dl && !b && Object.prototype.toString.call(N) === "[object HTMLUnknownElement]" && !ue.call(RT, r) && (RT[r] = !0, d("The tag <%s> is unrecognized in this browser. If you meant to render a React component, start its name with an uppercase letter.", r)), N;
    }
    function FV(r, o) {
      return HM(o).createTextNode(r);
    }
    function _V(r, o, f, h) {
      var b = Jl(o, f);
      mw(o, f);
      var T;
      switch (o) {
        case "dialog":
          eo("cancel", r), eo("close", r), T = f;
          break;
        case "iframe":
        case "object":
        case "embed":
          eo("load", r), T = f;
          break;
        case "video":
        case "audio":
          for (var N = 0; N < Cy.length; N++)
            eo(Cy[N], r);
          T = f;
          break;
        case "source":
          eo("error", r), T = f;
          break;
        case "img":
        case "image":
        case "link":
          eo("error", r), eo("load", r), T = f;
          break;
        case "details":
          eo("toggle", r), T = f;
          break;
        case "input":
          Za(r, f), T = cd(r, f), eo("invalid", r);
          break;
        case "option":
          er(r, f), T = f;
          break;
        case "select":
          ec(r, f), T = Nf(r, f), eo("invalid", r);
          break;
        case "textarea":
          yv(r, f), T = vv(r, f), eo("invalid", r);
          break;
        default:
          T = f;
      }
      switch (Eh(o, T), DV(o, r, h, T, b), o) {
        case "input":
          Ja(r), $e(r, f, !1);
          break;
        case "textarea":
          Ja(r), XC(r);
          break;
        case "option":
          $r(r, f);
          break;
        case "select":
          mv(r, f);
          break;
        default:
          typeof T.onClick == "function" && bw(r);
          break;
      }
    }
    function AV(r, o, f, h, b) {
      mw(o, h);
      var T = null, N, V;
      switch (o) {
        case "input":
          N = cd(r, f), V = cd(r, h), T = [];
          break;
        case "select":
          N = Nf(r, f), V = Nf(r, h), T = [];
          break;
        case "textarea":
          N = vv(r, f), V = vv(r, h), T = [];
          break;
        default:
          N = f, V = h, typeof N.onClick != "function" && typeof V.onClick == "function" && bw(r);
          break;
      }
      Eh(o, V);
      var Z, se, le = null;
      for (Z in N)
        if (!(V.hasOwnProperty(Z) || !N.hasOwnProperty(Z) || N[Z] == null))
          if (Z === Rp) {
            var Te = N[Z];
            for (se in Te)
              Te.hasOwnProperty(se) && (le || (le = {}), le[se] = "");
          } else Z === xy || Z === Tp || Z === pw || Z === Ld || Z === AM || (de.hasOwnProperty(Z) ? T || (T = []) : (T = T || []).push(Z, null));
      for (Z in V) {
        var xe = V[Z], Ae = N != null ? N[Z] : void 0;
        if (!(!V.hasOwnProperty(Z) || xe === Ae || xe == null && Ae == null))
          if (Z === Rp)
            if (xe && Object.freeze(xe), Ae) {
              for (se in Ae)
                Ae.hasOwnProperty(se) && (!xe || !xe.hasOwnProperty(se)) && (le || (le = {}), le[se] = "");
              for (se in xe)
                xe.hasOwnProperty(se) && Ae[se] !== xe[se] && (le || (le = {}), le[se] = xe[se]);
            } else
              le || (T || (T = []), T.push(Z, le)), le = xe;
          else if (Z === xy) {
            var ze = xe ? xe[hw] : void 0, qe = Ae ? Ae[hw] : void 0;
            ze != null && qe !== ze && (T = T || []).push(Z, ze);
          } else Z === Tp ? (typeof xe == "string" || typeof xe == "number") && (T = T || []).push(Z, "" + xe) : Z === pw || Z === Ld || (de.hasOwnProperty(Z) ? (xe != null && (typeof xe != "function" && gw(Z, xe), Z === "onScroll" && eo("scroll", r)), !T && Ae !== xe && (T = [])) : (T = T || []).push(Z, xe));
      }
      return le && (ZE(le, V[Rp]), (T = T || []).push(Rp, le)), T;
    }
    function $V(r, o, f, h, b) {
      f === "input" && b.type === "radio" && b.name != null && ee(r, b);
      var T = Jl(f, h), N = Jl(f, b);
      switch (NV(r, o, T, N), f) {
        case "input":
          ye(r, b);
          break;
        case "textarea":
          YC(r, b);
          break;
        case "select":
          Sh(r, b);
          break;
      }
    }
    function jV(r) {
      {
        var o = r.toLowerCase();
        return $f.hasOwnProperty(o) && $f[o] || null;
      }
    }
    function zV(r, o, f, h, b, T, N) {
      var V, Z;
      switch (V = Jl(o, f), mw(o, f), o) {
        case "dialog":
          eo("cancel", r), eo("close", r);
          break;
        case "iframe":
        case "object":
        case "embed":
          eo("load", r);
          break;
        case "video":
        case "audio":
          for (var se = 0; se < Cy.length; se++)
            eo(Cy[se], r);
          break;
        case "source":
          eo("error", r);
          break;
        case "img":
        case "image":
        case "link":
          eo("error", r), eo("load", r);
          break;
        case "details":
          eo("toggle", r);
          break;
        case "input":
          Za(r, f), eo("invalid", r);
          break;
        case "option":
          er(r, f);
          break;
        case "select":
          ec(r, f), eo("invalid", r);
          break;
        case "textarea":
          yv(r, f), eo("invalid", r);
          break;
      }
      Eh(o, f);
      {
        Z = /* @__PURE__ */ new Set();
        for (var le = r.attributes, Te = 0; Te < le.length; Te++) {
          var xe = le[Te].name.toLowerCase();
          switch (xe) {
            case "value":
              break;
            case "checked":
              break;
            case "selected":
              break;
            default:
              Z.add(le[Te].name);
          }
        }
      }
      var Ae = null;
      for (var ze in f)
        if (f.hasOwnProperty(ze)) {
          var qe = f[ze];
          if (ze === Tp)
            typeof qe == "string" ? r.textContent !== qe && (f[Ld] !== !0 && yw(r.textContent, qe, T, N), Ae = [Tp, qe]) : typeof qe == "number" && r.textContent !== "" + qe && (f[Ld] !== !0 && yw(r.textContent, qe, T, N), Ae = [Tp, "" + qe]);
          else if (de.hasOwnProperty(ze))
            qe != null && (typeof qe != "function" && gw(ze, qe), ze === "onScroll" && eo("scroll", r));
          else if (N && // Convince Flow we've calculated it (it's DEV-only in this method.)
          typeof V == "boolean") {
            var Dt = void 0, ln = At(ze);
            if (f[Ld] !== !0) {
              if (!(ze === pw || ze === Ld || // Controlled attributes are not validated
              // TODO: Only ignore them on controlled tags.
              ze === "value" || ze === "checked" || ze === "selected")) {
                if (ze === xy) {
                  var Jt = r.innerHTML, Qn = qe ? qe[hw] : void 0;
                  if (Qn != null) {
                    var Un = zM(r, Qn);
                    Un !== Jt && Ey(ze, Jt, Un);
                  }
                } else if (ze === Rp) {
                  if (Z.delete(ze), jM) {
                    var Ie = QE(qe);
                    Dt = r.getAttribute("style"), Ie !== Dt && Ey(ze, Dt, Ie);
                  }
                } else if (V && !j)
                  Z.delete(ze.toLowerCase()), Dt = Ct(r, ze, qe), qe !== Dt && Ey(ze, Dt, qe);
                else if (!bt(ze, ln, V) && !Et(ze, qe, ln, V)) {
                  var Ke = !1;
                  if (ln !== null)
                    Z.delete(ln.attributeName), Dt = dr(r, ze, qe, ln);
                  else {
                    var De = h;
                    if (De === dl && (De = Sv(o)), De === dl)
                      Z.delete(ze.toLowerCase());
                    else {
                      var ft = jV(ze);
                      ft !== null && ft !== ze && (Ke = !0, Z.delete(ft)), Z.delete(ze);
                    }
                    Dt = Ct(r, ze, qe);
                  }
                  var $t = j;
                  !$t && qe !== Dt && !Ke && Ey(ze, Dt, qe);
                }
              }
            }
          }
        }
      switch (N && // $FlowFixMe - Should be inferred as not undefined.
      Z.size > 0 && f[Ld] !== !0 && $M(Z), o) {
        case "input":
          Ja(r), $e(r, f, !0);
          break;
        case "textarea":
          Ja(r), XC(r);
          break;
        case "select":
        case "option":
          break;
        default:
          typeof f.onClick == "function" && bw(r);
          break;
      }
      return Ae;
    }
    function HV(r, o, f) {
      var h = r.nodeValue !== o;
      return h;
    }
    function OT(r, o) {
      {
        if (ja)
          return;
        ja = !0, d("Did not expect server HTML to contain a <%s> in <%s>.", o.nodeName.toLowerCase(), r.nodeName.toLowerCase());
      }
    }
    function kT(r, o) {
      {
        if (ja)
          return;
        ja = !0, d('Did not expect server HTML to contain the text node "%s" in <%s>.', o.nodeValue, r.nodeName.toLowerCase());
      }
    }
    function PT(r, o, f) {
      {
        if (ja)
          return;
        ja = !0, d("Expected server HTML to contain a matching <%s> in <%s>.", o, r.nodeName.toLowerCase());
      }
    }
    function MT(r, o) {
      {
        if (o === "" || ja)
          return;
        ja = !0, d('Expected server HTML to contain a matching text node for "%s" in <%s>.', o, r.nodeName.toLowerCase());
      }
    }
    function VV(r, o, f) {
      switch (o) {
        case "input":
          Ve(r, f);
          return;
        case "textarea":
          qE(r, f);
          return;
        case "select":
          gv(r, f);
          return;
      }
    }
    var Ty = function() {
    }, Ry = function() {
    };
    {
      var BV = ["address", "applet", "area", "article", "aside", "base", "basefont", "bgsound", "blockquote", "body", "br", "button", "caption", "center", "col", "colgroup", "dd", "details", "dir", "div", "dl", "dt", "embed", "fieldset", "figcaption", "figure", "footer", "form", "frame", "frameset", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "iframe", "img", "input", "isindex", "li", "link", "listing", "main", "marquee", "menu", "menuitem", "meta", "nav", "noembed", "noframes", "noscript", "object", "ol", "p", "param", "plaintext", "pre", "script", "section", "select", "source", "style", "summary", "table", "tbody", "td", "template", "textarea", "tfoot", "th", "thead", "title", "tr", "track", "ul", "wbr", "xmp"], VM = [
        "applet",
        "caption",
        "html",
        "table",
        "td",
        "th",
        "marquee",
        "object",
        "template",
        // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
        // TODO: Distinguish by namespace here -- for <title>, including it here
        // errs on the side of fewer warnings
        "foreignObject",
        "desc",
        "title"
      ], UV = VM.concat(["button"]), GV = ["dd", "dt", "li", "option", "optgroup", "p", "rp", "rt"], BM = {
        current: null,
        formTag: null,
        aTagInScope: null,
        buttonTagInScope: null,
        nobrTagInScope: null,
        pTagInButtonScope: null,
        listItemTagAutoclosing: null,
        dlItemTagAutoclosing: null
      };
      Ry = function(r, o) {
        var f = Rn({}, r || BM), h = {
          tag: o
        };
        return VM.indexOf(o) !== -1 && (f.aTagInScope = null, f.buttonTagInScope = null, f.nobrTagInScope = null), UV.indexOf(o) !== -1 && (f.pTagInButtonScope = null), BV.indexOf(o) !== -1 && o !== "address" && o !== "div" && o !== "p" && (f.listItemTagAutoclosing = null, f.dlItemTagAutoclosing = null), f.current = h, o === "form" && (f.formTag = h), o === "a" && (f.aTagInScope = h), o === "button" && (f.buttonTagInScope = h), o === "nobr" && (f.nobrTagInScope = h), o === "p" && (f.pTagInButtonScope = h), o === "li" && (f.listItemTagAutoclosing = h), (o === "dd" || o === "dt") && (f.dlItemTagAutoclosing = h), f;
      };
      var WV = function(r, o) {
        switch (o) {
          case "select":
            return r === "option" || r === "optgroup" || r === "#text";
          case "optgroup":
            return r === "option" || r === "#text";
          case "option":
            return r === "#text";
          case "tr":
            return r === "th" || r === "td" || r === "style" || r === "script" || r === "template";
          case "tbody":
          case "thead":
          case "tfoot":
            return r === "tr" || r === "style" || r === "script" || r === "template";
          case "colgroup":
            return r === "col" || r === "template";
          case "table":
            return r === "caption" || r === "colgroup" || r === "tbody" || r === "tfoot" || r === "thead" || r === "style" || r === "script" || r === "template";
          case "head":
            return r === "base" || r === "basefont" || r === "bgsound" || r === "link" || r === "meta" || r === "title" || r === "noscript" || r === "noframes" || r === "style" || r === "script" || r === "template";
          case "html":
            return r === "head" || r === "body" || r === "frameset";
          case "frameset":
            return r === "frame";
          case "#document":
            return r === "html";
        }
        switch (r) {
          case "h1":
          case "h2":
          case "h3":
          case "h4":
          case "h5":
          case "h6":
            return o !== "h1" && o !== "h2" && o !== "h3" && o !== "h4" && o !== "h5" && o !== "h6";
          case "rp":
          case "rt":
            return GV.indexOf(o) === -1;
          case "body":
          case "caption":
          case "col":
          case "colgroup":
          case "frameset":
          case "frame":
          case "head":
          case "html":
          case "tbody":
          case "td":
          case "tfoot":
          case "th":
          case "thead":
          case "tr":
            return o == null;
        }
        return !0;
      }, qV = function(r, o) {
        switch (r) {
          case "address":
          case "article":
          case "aside":
          case "blockquote":
          case "center":
          case "details":
          case "dialog":
          case "dir":
          case "div":
          case "dl":
          case "fieldset":
          case "figcaption":
          case "figure":
          case "footer":
          case "header":
          case "hgroup":
          case "main":
          case "menu":
          case "nav":
          case "ol":
          case "p":
          case "section":
          case "summary":
          case "ul":
          case "pre":
          case "listing":
          case "table":
          case "hr":
          case "xmp":
          case "h1":
          case "h2":
          case "h3":
          case "h4":
          case "h5":
          case "h6":
            return o.pTagInButtonScope;
          case "form":
            return o.formTag || o.pTagInButtonScope;
          case "li":
            return o.listItemTagAutoclosing;
          case "dd":
          case "dt":
            return o.dlItemTagAutoclosing;
          case "button":
            return o.buttonTagInScope;
          case "a":
            return o.aTagInScope;
          case "nobr":
            return o.nobrTagInScope;
        }
        return null;
      }, UM = {};
      Ty = function(r, o, f) {
        f = f || BM;
        var h = f.current, b = h && h.tag;
        o != null && (r != null && d("validateDOMNesting: when childText is passed, childTag should be null"), r = "#text");
        var T = WV(r, b) ? null : h, N = T ? null : qV(r, f), V = T || N;
        if (V) {
          var Z = V.tag, se = !!T + "|" + r + "|" + Z;
          if (!UM[se]) {
            UM[se] = !0;
            var le = r, Te = "";
            if (r === "#text" ? /\S/.test(o) ? le = "Text nodes" : (le = "Whitespace text nodes", Te = " Make sure you don't have any extra whitespace between tags on each line of your source code.") : le = "<" + r + ">", T) {
              var xe = "";
              Z === "table" && r === "tr" && (xe += " Add a <tbody>, <thead> or <tfoot> to your code to match the DOM tree generated by the browser."), d("validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s", le, Z, Te, xe);
            } else
              d("validateDOMNesting(...): %s cannot appear as a descendant of <%s>.", le, Z);
          }
        }
      };
    }
    var Cw = "suppressHydrationWarning", Sw = "$", ww = "/$", Oy = "$?", ky = "$!", KV = "style", IT = null, DT = null;
    function YV(r) {
      var o, f, h = r.nodeType;
      switch (h) {
        case pl:
        case xv: {
          o = h === pl ? "#document" : "#fragment";
          var b = r.documentElement;
          f = b ? b.namespaceURI : wv(null, "");
          break;
        }
        default: {
          var T = h === go ? r.parentNode : r, N = T.namespaceURI || null;
          o = T.tagName, f = wv(N, o);
          break;
        }
      }
      {
        var V = o.toLowerCase(), Z = Ry(null, V);
        return {
          namespace: f,
          ancestorInfo: Z
        };
      }
    }
    function XV(r, o, f) {
      {
        var h = r, b = wv(h.namespace, o), T = Ry(h.ancestorInfo, o);
        return {
          namespace: b,
          ancestorInfo: T
        };
      }
    }
    function Kue(r) {
      return r;
    }
    function QV(r) {
      IT = wo(), DT = dV();
      var o = null;
      return Fo(!1), o;
    }
    function JV(r) {
      fV(DT), Fo(IT), IT = null, DT = null;
    }
    function ZV(r, o, f, h, b) {
      var T;
      {
        var N = h;
        if (Ty(r, null, N.ancestorInfo), typeof o.children == "string" || typeof o.children == "number") {
          var V = "" + o.children, Z = Ry(N.ancestorInfo, r);
          Ty(null, V, Z);
        }
        T = N.namespace;
      }
      var se = LV(r, o, f, T);
      return Iy(b, se), zT(se, o), se;
    }
    function eB(r, o) {
      r.appendChild(o);
    }
    function tB(r, o, f, h, b) {
      switch (_V(r, o, f, h), o) {
        case "button":
        case "input":
        case "select":
        case "textarea":
          return !!f.autoFocus;
        case "img":
          return !0;
        default:
          return !1;
      }
    }
    function nB(r, o, f, h, b, T) {
      {
        var N = T;
        if (typeof h.children != typeof f.children && (typeof h.children == "string" || typeof h.children == "number")) {
          var V = "" + h.children, Z = Ry(N.ancestorInfo, o);
          Ty(null, V, Z);
        }
      }
      return AV(r, o, f, h);
    }
    function NT(r, o) {
      return r === "textarea" || r === "noscript" || typeof o.children == "string" || typeof o.children == "number" || typeof o.dangerouslySetInnerHTML == "object" && o.dangerouslySetInnerHTML !== null && o.dangerouslySetInnerHTML.__html != null;
    }
    function rB(r, o, f, h) {
      {
        var b = f;
        Ty(null, r, b.ancestorInfo);
      }
      var T = FV(r, o);
      return Iy(h, T), T;
    }
    function oB() {
      var r = window.event;
      return r === void 0 ? Fa : vm(r.type);
    }
    var LT = typeof setTimeout == "function" ? setTimeout : void 0, iB = typeof clearTimeout == "function" ? clearTimeout : void 0, FT = -1, GM = typeof Promise == "function" ? Promise : void 0, aB = typeof queueMicrotask == "function" ? queueMicrotask : typeof GM < "u" ? function(r) {
      return GM.resolve(null).then(r).catch(sB);
    } : LT;
    function sB(r) {
      setTimeout(function() {
        throw r;
      });
    }
    function lB(r, o, f, h) {
      switch (o) {
        case "button":
        case "input":
        case "select":
        case "textarea":
          f.autoFocus && r.focus();
          return;
        case "img": {
          f.src && (r.src = f.src);
          return;
        }
      }
    }
    function uB(r, o, f, h, b, T) {
      $V(r, o, f, h, b), zT(r, b);
    }
    function WM(r) {
      dd(r, "");
    }
    function cB(r, o, f) {
      r.nodeValue = f;
    }
    function dB(r, o) {
      r.appendChild(o);
    }
    function fB(r, o) {
      var f;
      r.nodeType === go ? (f = r.parentNode, f.insertBefore(o, r)) : (f = r, f.appendChild(o));
      var h = r._reactRootContainer;
      h == null && f.onclick === null && bw(f);
    }
    function pB(r, o, f) {
      r.insertBefore(o, f);
    }
    function hB(r, o, f) {
      r.nodeType === go ? r.parentNode.insertBefore(o, f) : r.insertBefore(o, f);
    }
    function mB(r, o) {
      r.removeChild(o);
    }
    function gB(r, o) {
      r.nodeType === go ? r.parentNode.removeChild(o) : r.removeChild(o);
    }
    function _T(r, o) {
      var f = o, h = 0;
      do {
        var b = f.nextSibling;
        if (r.removeChild(f), b && b.nodeType === go) {
          var T = b.data;
          if (T === ww)
            if (h === 0) {
              r.removeChild(b), Sc(o);
              return;
            } else
              h--;
          else (T === Sw || T === Oy || T === ky) && h++;
        }
        f = b;
      } while (f);
      Sc(o);
    }
    function vB(r, o) {
      r.nodeType === go ? _T(r.parentNode, o) : r.nodeType === Hi && _T(r, o), Sc(r);
    }
    function yB(r) {
      r = r;
      var o = r.style;
      typeof o.setProperty == "function" ? o.setProperty("display", "none", "important") : o.display = "none";
    }
    function bB(r) {
      r.nodeValue = "";
    }
    function CB(r, o) {
      r = r;
      var f = o[KV], h = f != null && f.hasOwnProperty("display") ? f.display : null;
      r.style.display = xh("display", h);
    }
    function SB(r, o) {
      r.nodeValue = o;
    }
    function wB(r) {
      r.nodeType === Hi ? r.textContent = "" : r.nodeType === pl && r.documentElement && r.removeChild(r.documentElement);
    }
    function xB(r, o, f) {
      return r.nodeType !== Hi || o.toLowerCase() !== r.nodeName.toLowerCase() ? null : r;
    }
    function EB(r, o) {
      return o === "" || r.nodeType !== fl ? null : r;
    }
    function TB(r) {
      return r.nodeType !== go ? null : r;
    }
    function qM(r) {
      return r.data === Oy;
    }
    function AT(r) {
      return r.data === ky;
    }
    function RB(r) {
      var o = r.nextSibling && r.nextSibling.dataset, f, h, b;
      return o && (f = o.dgst, h = o.msg, b = o.stck), {
        message: h,
        digest: f,
        stack: b
      };
    }
    function OB(r, o) {
      r._reactRetry = o;
    }
    function xw(r) {
      for (; r != null; r = r.nextSibling) {
        var o = r.nodeType;
        if (o === Hi || o === fl)
          break;
        if (o === go) {
          var f = r.data;
          if (f === Sw || f === ky || f === Oy)
            break;
          if (f === ww)
            return null;
        }
      }
      return r;
    }
    function Py(r) {
      return xw(r.nextSibling);
    }
    function kB(r) {
      return xw(r.firstChild);
    }
    function PB(r) {
      return xw(r.firstChild);
    }
    function MB(r) {
      return xw(r.nextSibling);
    }
    function IB(r, o, f, h, b, T, N) {
      Iy(T, r), zT(r, f);
      var V;
      {
        var Z = b;
        V = Z.namespace;
      }
      var se = (T.mode & Ln) !== nn;
      return zV(r, o, f, V, h, se, N);
    }
    function DB(r, o, f, h) {
      return Iy(f, r), f.mode & Ln, HV(r, o);
    }
    function NB(r, o) {
      Iy(o, r);
    }
    function LB(r) {
      for (var o = r.nextSibling, f = 0; o; ) {
        if (o.nodeType === go) {
          var h = o.data;
          if (h === ww) {
            if (f === 0)
              return Py(o);
            f--;
          } else (h === Sw || h === ky || h === Oy) && f++;
        }
        o = o.nextSibling;
      }
      return null;
    }
    function KM(r) {
      for (var o = r.previousSibling, f = 0; o; ) {
        if (o.nodeType === go) {
          var h = o.data;
          if (h === Sw || h === ky || h === Oy) {
            if (f === 0)
              return o;
            f--;
          } else h === ww && f++;
        }
        o = o.previousSibling;
      }
      return null;
    }
    function FB(r) {
      Sc(r);
    }
    function _B(r) {
      Sc(r);
    }
    function AB(r) {
      return r !== "head" && r !== "body";
    }
    function $B(r, o, f, h) {
      var b = !0;
      yw(o.nodeValue, f, h, b);
    }
    function jB(r, o, f, h, b, T) {
      if (o[Cw] !== !0) {
        var N = !0;
        yw(h.nodeValue, b, T, N);
      }
    }
    function zB(r, o) {
      o.nodeType === Hi ? OT(r, o) : o.nodeType === go || kT(r, o);
    }
    function HB(r, o) {
      {
        var f = r.parentNode;
        f !== null && (o.nodeType === Hi ? OT(f, o) : o.nodeType === go || kT(f, o));
      }
    }
    function VB(r, o, f, h, b) {
      (b || o[Cw] !== !0) && (h.nodeType === Hi ? OT(f, h) : h.nodeType === go || kT(f, h));
    }
    function BB(r, o, f) {
      PT(r, o);
    }
    function UB(r, o) {
      MT(r, o);
    }
    function GB(r, o, f) {
      {
        var h = r.parentNode;
        h !== null && PT(h, o);
      }
    }
    function WB(r, o) {
      {
        var f = r.parentNode;
        f !== null && MT(f, o);
      }
    }
    function qB(r, o, f, h, b, T) {
      (T || o[Cw] !== !0) && PT(f, h);
    }
    function KB(r, o, f, h, b) {
      (b || o[Cw] !== !0) && MT(f, h);
    }
    function YB(r) {
      d("An error occurred during hydration. The server HTML was replaced with client content in <%s>.", r.nodeName.toLowerCase());
    }
    function XB(r) {
      Sy(r);
    }
    var Im = Math.random().toString(36).slice(2), Dm = "__reactFiber$" + Im, $T = "__reactProps$" + Im, My = "__reactContainer$" + Im, jT = "__reactEvents$" + Im, QB = "__reactListeners$" + Im, JB = "__reactHandles$" + Im;
    function ZB(r) {
      delete r[Dm], delete r[$T], delete r[jT], delete r[QB], delete r[JB];
    }
    function Iy(r, o) {
      o[Dm] = r;
    }
    function Ew(r, o) {
      o[My] = r;
    }
    function YM(r) {
      r[My] = null;
    }
    function Dy(r) {
      return !!r[My];
    }
    function Op(r) {
      var o = r[Dm];
      if (o)
        return o;
      for (var f = r.parentNode; f; ) {
        if (o = f[My] || f[Dm], o) {
          var h = o.alternate;
          if (o.child !== null || h !== null && h.child !== null)
            for (var b = KM(r); b !== null; ) {
              var T = b[Dm];
              if (T)
                return T;
              b = KM(b);
            }
          return o;
        }
        r = f, f = r.parentNode;
      }
      return null;
    }
    function Fd(r) {
      var o = r[Dm] || r[My];
      return o && (o.tag === R || o.tag === O || o.tag === D || o.tag === C) ? o : null;
    }
    function Nm(r) {
      if (r.tag === R || r.tag === O)
        return r.stateNode;
      throw new Error("getNodeFromInstance: Invalid argument.");
    }
    function Tw(r) {
      return r[$T] || null;
    }
    function zT(r, o) {
      r[$T] = o;
    }
    function eU(r) {
      var o = r[jT];
      return o === void 0 && (o = r[jT] = /* @__PURE__ */ new Set()), o;
    }
    var XM = {}, QM = n.ReactDebugCurrentFrame;
    function Rw(r) {
      if (r) {
        var o = r._owner, f = ll(r.type, r._source, o ? o.type : null);
        QM.setExtraStackFrame(f);
      } else
        QM.setExtraStackFrame(null);
    }
    function El(r, o, f, h, b) {
      {
        var T = Function.call.bind(ue);
        for (var N in r)
          if (T(r, N)) {
            var V = void 0;
            try {
              if (typeof r[N] != "function") {
                var Z = Error((h || "React class") + ": " + f + " type `" + N + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof r[N] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                throw Z.name = "Invariant Violation", Z;
              }
              V = r[N](o, N, h, f, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
            } catch (se) {
              V = se;
            }
            V && !(V instanceof Error) && (Rw(b), d("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", h || "React class", f, N, typeof V), Rw(null)), V instanceof Error && !(V.message in XM) && (XM[V.message] = !0, Rw(b), d("Failed %s type: %s", f, V.message), Rw(null));
          }
      }
    }
    var HT = [], Ow;
    Ow = [];
    var Oc = -1;
    function _d(r) {
      return {
        current: r
      };
    }
    function Ji(r, o) {
      if (Oc < 0) {
        d("Unexpected pop.");
        return;
      }
      o !== Ow[Oc] && d("Unexpected Fiber popped."), r.current = HT[Oc], HT[Oc] = null, Ow[Oc] = null, Oc--;
    }
    function Zi(r, o, f) {
      Oc++, HT[Oc] = r.current, Ow[Oc] = f, r.current = o;
    }
    var VT;
    VT = {};
    var as = {};
    Object.freeze(as);
    var kc = _d(as), yu = _d(!1), BT = as;
    function Lm(r, o, f) {
      return f && bu(o) ? BT : kc.current;
    }
    function JM(r, o, f) {
      {
        var h = r.stateNode;
        h.__reactInternalMemoizedUnmaskedChildContext = o, h.__reactInternalMemoizedMaskedChildContext = f;
      }
    }
    function Fm(r, o) {
      {
        var f = r.type, h = f.contextTypes;
        if (!h)
          return as;
        var b = r.stateNode;
        if (b && b.__reactInternalMemoizedUnmaskedChildContext === o)
          return b.__reactInternalMemoizedMaskedChildContext;
        var T = {};
        for (var N in h)
          T[N] = o[N];
        {
          var V = Sn(r) || "Unknown";
          El(h, T, "context", V);
        }
        return b && JM(r, o, T), T;
      }
    }
    function kw() {
      return yu.current;
    }
    function bu(r) {
      {
        var o = r.childContextTypes;
        return o != null;
      }
    }
    function Pw(r) {
      Ji(yu, r), Ji(kc, r);
    }
    function UT(r) {
      Ji(yu, r), Ji(kc, r);
    }
    function ZM(r, o, f) {
      {
        if (kc.current !== as)
          throw new Error("Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue.");
        Zi(kc, o, r), Zi(yu, f, r);
      }
    }
    function eI(r, o, f) {
      {
        var h = r.stateNode, b = o.childContextTypes;
        if (typeof h.getChildContext != "function") {
          {
            var T = Sn(r) || "Unknown";
            VT[T] || (VT[T] = !0, d("%s.childContextTypes is specified but there is no getChildContext() method on the instance. You can either define getChildContext() on %s or remove childContextTypes from it.", T, T));
          }
          return f;
        }
        var N = h.getChildContext();
        for (var V in N)
          if (!(V in b))
            throw new Error((Sn(r) || "Unknown") + '.getChildContext(): key "' + V + '" is not defined in childContextTypes.');
        {
          var Z = Sn(r) || "Unknown";
          El(b, N, "child context", Z);
        }
        return Rn({}, f, N);
      }
    }
    function Mw(r) {
      {
        var o = r.stateNode, f = o && o.__reactInternalMemoizedMergedChildContext || as;
        return BT = kc.current, Zi(kc, f, r), Zi(yu, yu.current, r), !0;
      }
    }
    function tI(r, o, f) {
      {
        var h = r.stateNode;
        if (!h)
          throw new Error("Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue.");
        if (f) {
          var b = eI(r, o, BT);
          h.__reactInternalMemoizedMergedChildContext = b, Ji(yu, r), Ji(kc, r), Zi(kc, b, r), Zi(yu, f, r);
        } else
          Ji(yu, r), Zi(yu, f, r);
      }
    }
    function tU(r) {
      {
        if (!sc(r) || r.tag !== v)
          throw new Error("Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue.");
        var o = r;
        do {
          switch (o.tag) {
            case C:
              return o.stateNode.context;
            case v: {
              var f = o.type;
              if (bu(f))
                return o.stateNode.__reactInternalMemoizedMergedChildContext;
              break;
            }
          }
          o = o.return;
        } while (o !== null);
        throw new Error("Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue.");
      }
    }
    var Ad = 0, Iw = 1, Pc = null, GT = !1, WT = !1;
    function nI(r) {
      Pc === null ? Pc = [r] : Pc.push(r);
    }
    function nU(r) {
      GT = !0, nI(r);
    }
    function rI() {
      GT && $d();
    }
    function $d() {
      if (!WT && Pc !== null) {
        WT = !0;
        var r = 0, o = Aa();
        try {
          var f = !0, h = Pc;
          for (So(Ei); r < h.length; r++) {
            var b = h[r];
            do
              b = b(f);
            while (b !== null);
          }
          Pc = null, GT = !1;
        } catch (T) {
          throw Pc !== null && (Pc = Pc.slice(r + 1)), Fv(Wf, $d), T;
        } finally {
          So(o), WT = !1;
        }
      }
      return null;
    }
    var _m = [], Am = 0, Dw = null, Nw = 0, $s = [], js = 0, kp = null, Mc = 1, Ic = "";
    function rU(r) {
      return Mp(), (r.flags & ks) !== tn;
    }
    function oU(r) {
      return Mp(), Nw;
    }
    function iU() {
      var r = Ic, o = Mc, f = o & ~aU(o);
      return f.toString(32) + r;
    }
    function Pp(r, o) {
      Mp(), _m[Am++] = Nw, _m[Am++] = Dw, Dw = r, Nw = o;
    }
    function oI(r, o, f) {
      Mp(), $s[js++] = Mc, $s[js++] = Ic, $s[js++] = kp, kp = r;
      var h = Mc, b = Ic, T = Lw(h) - 1, N = h & ~(1 << T), V = f + 1, Z = Lw(o) + T;
      if (Z > 30) {
        var se = T - T % 5, le = (1 << se) - 1, Te = (N & le).toString(32), xe = N >> se, Ae = T - se, ze = Lw(o) + Ae, qe = V << Ae, Dt = qe | xe, ln = Te + b;
        Mc = 1 << ze | Dt, Ic = ln;
      } else {
        var Jt = V << T, Qn = Jt | N, Un = b;
        Mc = 1 << Z | Qn, Ic = Un;
      }
    }
    function qT(r) {
      Mp();
      var o = r.return;
      if (o !== null) {
        var f = 1, h = 0;
        Pp(r, f), oI(r, f, h);
      }
    }
    function Lw(r) {
      return 32 - bo(r);
    }
    function aU(r) {
      return 1 << Lw(r) - 1;
    }
    function KT(r) {
      for (; r === Dw; )
        Dw = _m[--Am], _m[Am] = null, Nw = _m[--Am], _m[Am] = null;
      for (; r === kp; )
        kp = $s[--js], $s[js] = null, Ic = $s[--js], $s[js] = null, Mc = $s[--js], $s[js] = null;
    }
    function sU() {
      return Mp(), kp !== null ? {
        id: Mc,
        overflow: Ic
      } : null;
    }
    function lU(r, o) {
      Mp(), $s[js++] = Mc, $s[js++] = Ic, $s[js++] = kp, Mc = o.id, Ic = o.overflow, kp = r;
    }
    function Mp() {
      Pi() || d("Expected to be hydrating. This is a bug in React. Please file an issue.");
    }
    var ki = null, zs = null, Tl = !1, Ip = !1, jd = null;
    function uU() {
      Tl && d("We should not be hydrating here. This is a bug in React. Please file a bug.");
    }
    function iI() {
      Ip = !0;
    }
    function cU() {
      return Ip;
    }
    function dU(r) {
      var o = r.stateNode.containerInfo;
      return zs = PB(o), ki = r, Tl = !0, jd = null, Ip = !1, !0;
    }
    function fU(r, o, f) {
      return zs = MB(o), ki = r, Tl = !0, jd = null, Ip = !1, f !== null && lU(r, f), !0;
    }
    function aI(r, o) {
      switch (r.tag) {
        case C: {
          zB(r.stateNode.containerInfo, o);
          break;
        }
        case R: {
          var f = (r.mode & Ln) !== nn;
          VB(
            r.type,
            r.memoizedProps,
            r.stateNode,
            o,
            // TODO: Delete this argument when we remove the legacy root API.
            f
          );
          break;
        }
        case D: {
          var h = r.memoizedState;
          h.dehydrated !== null && HB(h.dehydrated, o);
          break;
        }
      }
    }
    function sI(r, o) {
      aI(r, o);
      var f = g4();
      f.stateNode = o, f.return = r;
      var h = r.deletions;
      h === null ? (r.deletions = [f], r.flags |= Ma) : h.push(f);
    }
    function YT(r, o) {
      {
        if (Ip)
          return;
        switch (r.tag) {
          case C: {
            var f = r.stateNode.containerInfo;
            switch (o.tag) {
              case R:
                var h = o.type;
                o.pendingProps, BB(f, h);
                break;
              case O:
                var b = o.pendingProps;
                UB(f, b);
                break;
            }
            break;
          }
          case R: {
            var T = r.type, N = r.memoizedProps, V = r.stateNode;
            switch (o.tag) {
              case R: {
                var Z = o.type, se = o.pendingProps, le = (r.mode & Ln) !== nn;
                qB(
                  T,
                  N,
                  V,
                  Z,
                  se,
                  // TODO: Delete this argument when we remove the legacy root API.
                  le
                );
                break;
              }
              case O: {
                var Te = o.pendingProps, xe = (r.mode & Ln) !== nn;
                KB(
                  T,
                  N,
                  V,
                  Te,
                  // TODO: Delete this argument when we remove the legacy root API.
                  xe
                );
                break;
              }
            }
            break;
          }
          case D: {
            var Ae = r.memoizedState, ze = Ae.dehydrated;
            if (ze !== null) switch (o.tag) {
              case R:
                var qe = o.type;
                o.pendingProps, GB(ze, qe);
                break;
              case O:
                var Dt = o.pendingProps;
                WB(ze, Dt);
                break;
            }
            break;
          }
          default:
            return;
        }
      }
    }
    function lI(r, o) {
      o.flags = o.flags & ~Bi | Qr, YT(r, o);
    }
    function uI(r, o) {
      switch (r.tag) {
        case R: {
          var f = r.type;
          r.pendingProps;
          var h = xB(o, f);
          return h !== null ? (r.stateNode = h, ki = r, zs = kB(h), !0) : !1;
        }
        case O: {
          var b = r.pendingProps, T = EB(o, b);
          return T !== null ? (r.stateNode = T, ki = r, zs = null, !0) : !1;
        }
        case D: {
          var N = TB(o);
          if (N !== null) {
            var V = {
              dehydrated: N,
              treeContext: sU(),
              retryLane: qi
            };
            r.memoizedState = V;
            var Z = v4(N);
            return Z.return = r, r.child = Z, ki = r, zs = null, !0;
          }
          return !1;
        }
        default:
          return !1;
      }
    }
    function XT(r) {
      return (r.mode & Ln) !== nn && (r.flags & Zt) === tn;
    }
    function QT(r) {
      throw new Error("Hydration failed because the initial UI does not match what was rendered on the server.");
    }
    function JT(r) {
      if (Tl) {
        var o = zs;
        if (!o) {
          XT(r) && (YT(ki, r), QT()), lI(ki, r), Tl = !1, ki = r;
          return;
        }
        var f = o;
        if (!uI(r, o)) {
          XT(r) && (YT(ki, r), QT()), o = Py(f);
          var h = ki;
          if (!o || !uI(r, o)) {
            lI(ki, r), Tl = !1, ki = r;
            return;
          }
          sI(h, f);
        }
      }
    }
    function pU(r, o, f) {
      var h = r.stateNode, b = !Ip, T = IB(h, r.type, r.memoizedProps, o, f, r, b);
      return r.updateQueue = T, T !== null;
    }
    function hU(r) {
      var o = r.stateNode, f = r.memoizedProps, h = DB(o, f, r);
      if (h) {
        var b = ki;
        if (b !== null)
          switch (b.tag) {
            case C: {
              var T = b.stateNode.containerInfo, N = (b.mode & Ln) !== nn;
              $B(
                T,
                o,
                f,
                // TODO: Delete this argument when we remove the legacy root API.
                N
              );
              break;
            }
            case R: {
              var V = b.type, Z = b.memoizedProps, se = b.stateNode, le = (b.mode & Ln) !== nn;
              jB(
                V,
                Z,
                se,
                o,
                f,
                // TODO: Delete this argument when we remove the legacy root API.
                le
              );
              break;
            }
          }
      }
      return h;
    }
    function mU(r) {
      var o = r.memoizedState, f = o !== null ? o.dehydrated : null;
      if (!f)
        throw new Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.");
      NB(f, r);
    }
    function gU(r) {
      var o = r.memoizedState, f = o !== null ? o.dehydrated : null;
      if (!f)
        throw new Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.");
      return LB(f);
    }
    function cI(r) {
      for (var o = r.return; o !== null && o.tag !== R && o.tag !== C && o.tag !== D; )
        o = o.return;
      ki = o;
    }
    function Fw(r) {
      if (r !== ki)
        return !1;
      if (!Tl)
        return cI(r), Tl = !0, !1;
      if (r.tag !== C && (r.tag !== R || AB(r.type) && !NT(r.type, r.memoizedProps))) {
        var o = zs;
        if (o)
          if (XT(r))
            dI(r), QT();
          else
            for (; o; )
              sI(r, o), o = Py(o);
      }
      return cI(r), r.tag === D ? zs = gU(r) : zs = ki ? Py(r.stateNode) : null, !0;
    }
    function vU() {
      return Tl && zs !== null;
    }
    function dI(r) {
      for (var o = zs; o; )
        aI(r, o), o = Py(o);
    }
    function $m() {
      ki = null, zs = null, Tl = !1, Ip = !1;
    }
    function fI() {
      jd !== null && (iN(jd), jd = null);
    }
    function Pi() {
      return Tl;
    }
    function ZT(r) {
      jd === null ? jd = [r] : jd.push(r);
    }
    var yU = n.ReactCurrentBatchConfig, bU = null;
    function CU() {
      return yU.transition;
    }
    var Rl = {
      recordUnsafeLifecycleWarnings: function(r, o) {
      },
      flushPendingUnsafeLifecycleWarnings: function() {
      },
      recordLegacyContextWarning: function(r, o) {
      },
      flushLegacyContextWarning: function() {
      },
      discardPendingWarnings: function() {
      }
    };
    {
      var SU = function(r) {
        for (var o = null, f = r; f !== null; )
          f.mode & Tr && (o = f), f = f.return;
        return o;
      }, Dp = function(r) {
        var o = [];
        return r.forEach(function(f) {
          o.push(f);
        }), o.sort().join(", ");
      }, Ny = [], Ly = [], Fy = [], _y = [], Ay = [], $y = [], Np = /* @__PURE__ */ new Set();
      Rl.recordUnsafeLifecycleWarnings = function(r, o) {
        Np.has(r.type) || (typeof o.componentWillMount == "function" && // Don't warn about react-lifecycles-compat polyfilled components.
        o.componentWillMount.__suppressDeprecationWarning !== !0 && Ny.push(r), r.mode & Tr && typeof o.UNSAFE_componentWillMount == "function" && Ly.push(r), typeof o.componentWillReceiveProps == "function" && o.componentWillReceiveProps.__suppressDeprecationWarning !== !0 && Fy.push(r), r.mode & Tr && typeof o.UNSAFE_componentWillReceiveProps == "function" && _y.push(r), typeof o.componentWillUpdate == "function" && o.componentWillUpdate.__suppressDeprecationWarning !== !0 && Ay.push(r), r.mode & Tr && typeof o.UNSAFE_componentWillUpdate == "function" && $y.push(r));
      }, Rl.flushPendingUnsafeLifecycleWarnings = function() {
        var r = /* @__PURE__ */ new Set();
        Ny.length > 0 && (Ny.forEach(function(xe) {
          r.add(Sn(xe) || "Component"), Np.add(xe.type);
        }), Ny = []);
        var o = /* @__PURE__ */ new Set();
        Ly.length > 0 && (Ly.forEach(function(xe) {
          o.add(Sn(xe) || "Component"), Np.add(xe.type);
        }), Ly = []);
        var f = /* @__PURE__ */ new Set();
        Fy.length > 0 && (Fy.forEach(function(xe) {
          f.add(Sn(xe) || "Component"), Np.add(xe.type);
        }), Fy = []);
        var h = /* @__PURE__ */ new Set();
        _y.length > 0 && (_y.forEach(function(xe) {
          h.add(Sn(xe) || "Component"), Np.add(xe.type);
        }), _y = []);
        var b = /* @__PURE__ */ new Set();
        Ay.length > 0 && (Ay.forEach(function(xe) {
          b.add(Sn(xe) || "Component"), Np.add(xe.type);
        }), Ay = []);
        var T = /* @__PURE__ */ new Set();
        if ($y.length > 0 && ($y.forEach(function(xe) {
          T.add(Sn(xe) || "Component"), Np.add(xe.type);
        }), $y = []), o.size > 0) {
          var N = Dp(o);
          d(`Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move code with side effects to componentDidMount, and set initial state in the constructor.

Please update the following components: %s`, N);
        }
        if (h.size > 0) {
          var V = Dp(h);
          d(`Using UNSAFE_componentWillReceiveProps in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move data fetching code or side effects to componentDidUpdate.
* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state

Please update the following components: %s`, V);
        }
        if (T.size > 0) {
          var Z = Dp(T);
          d(`Using UNSAFE_componentWillUpdate in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move data fetching code or side effects to componentDidUpdate.

Please update the following components: %s`, Z);
        }
        if (r.size > 0) {
          var se = Dp(r);
          u(`componentWillMount has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move code with side effects to componentDidMount, and set initial state in the constructor.
* Rename componentWillMount to UNSAFE_componentWillMount to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run \`npx react-codemod rename-unsafe-lifecycles\` in your project source folder.

Please update the following components: %s`, se);
        }
        if (f.size > 0) {
          var le = Dp(f);
          u(`componentWillReceiveProps has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move data fetching code or side effects to componentDidUpdate.
* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state
* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run \`npx react-codemod rename-unsafe-lifecycles\` in your project source folder.

Please update the following components: %s`, le);
        }
        if (b.size > 0) {
          var Te = Dp(b);
          u(`componentWillUpdate has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move data fetching code or side effects to componentDidUpdate.
* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run \`npx react-codemod rename-unsafe-lifecycles\` in your project source folder.

Please update the following components: %s`, Te);
        }
      };
      var _w = /* @__PURE__ */ new Map(), pI = /* @__PURE__ */ new Set();
      Rl.recordLegacyContextWarning = function(r, o) {
        var f = SU(r);
        if (f === null) {
          d("Expected to find a StrictMode component in a strict mode tree. This error is likely caused by a bug in React. Please file an issue.");
          return;
        }
        if (!pI.has(r.type)) {
          var h = _w.get(f);
          (r.type.contextTypes != null || r.type.childContextTypes != null || o !== null && typeof o.getChildContext == "function") && (h === void 0 && (h = [], _w.set(f, h)), h.push(r));
        }
      }, Rl.flushLegacyContextWarning = function() {
        _w.forEach(function(r, o) {
          if (r.length !== 0) {
            var f = r[0], h = /* @__PURE__ */ new Set();
            r.forEach(function(T) {
              h.add(Sn(T) || "Component"), pI.add(T.type);
            });
            var b = Dp(h);
            try {
              wr(f), d(`Legacy context API has been detected within a strict-mode tree.

The old API will be supported in all 16.x releases, but applications using it should migrate to the new version.

Please update the following components: %s

Learn more about this warning here: https://reactjs.org/link/legacy-context`, b);
            } finally {
              Br();
            }
          }
        });
      }, Rl.discardPendingWarnings = function() {
        Ny = [], Ly = [], Fy = [], _y = [], Ay = [], $y = [], _w = /* @__PURE__ */ new Map();
      };
    }
    var e1, t1, n1, r1, o1, hI = function(r, o) {
    };
    e1 = !1, t1 = !1, n1 = {}, r1 = {}, o1 = {}, hI = function(r, o) {
      if (!(r === null || typeof r != "object") && !(!r._store || r._store.validated || r.key != null)) {
        if (typeof r._store != "object")
          throw new Error("React Component in warnForMissingKey should have a _store. This error is likely caused by a bug in React. Please file an issue.");
        r._store.validated = !0;
        var f = Sn(o) || "Component";
        r1[f] || (r1[f] = !0, d('Each child in a list should have a unique "key" prop. See https://reactjs.org/link/warning-keys for more information.'));
      }
    };
    function wU(r) {
      return r.prototype && r.prototype.isReactComponent;
    }
    function jy(r, o, f) {
      var h = f.ref;
      if (h !== null && typeof h != "function" && typeof h != "object") {
        if ((r.mode & Tr || ie) && // We warn in ReactElement.js if owner and self are equal for string refs
        // because these cannot be automatically converted to an arrow function
        // using a codemod. Therefore, we don't have to warn about string refs again.
        !(f._owner && f._self && f._owner.stateNode !== f._self) && // Will already throw with "Function components cannot have string refs"
        !(f._owner && f._owner.tag !== v) && // Will already warn with "Function components cannot be given refs"
        !(typeof f.type == "function" && !wU(f.type)) && // Will already throw with "Element ref was specified as a string (someStringRef) but no owner was set"
        f._owner) {
          var b = Sn(r) || "Component";
          n1[b] || (d('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. We recommend using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', b, h), n1[b] = !0);
        }
        if (f._owner) {
          var T = f._owner, N;
          if (T) {
            var V = T;
            if (V.tag !== v)
              throw new Error("Function components cannot have string refs. We recommend using useRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref");
            N = V.stateNode;
          }
          if (!N)
            throw new Error("Missing owner for string ref " + h + ". This error is likely caused by a bug in React. Please file an issue.");
          var Z = N;
          rt(h, "ref");
          var se = "" + h;
          if (o !== null && o.ref !== null && typeof o.ref == "function" && o.ref._stringRef === se)
            return o.ref;
          var le = function(Te) {
            var xe = Z.refs;
            Te === null ? delete xe[se] : xe[se] = Te;
          };
          return le._stringRef = se, le;
        } else {
          if (typeof h != "string")
            throw new Error("Expected ref to be a function, a string, an object returned by React.createRef(), or null.");
          if (!f._owner)
            throw new Error("Element ref was specified as a string (" + h + `) but no owner was set. This could happen for one of the following reasons:
1. You may be adding a ref to a function component
2. You may be adding a ref to a component that was not created inside a component's render method
3. You have multiple copies of React loaded
See https://reactjs.org/link/refs-must-have-owner for more information.`);
        }
      }
      return h;
    }
    function Aw(r, o) {
      var f = Object.prototype.toString.call(o);
      throw new Error("Objects are not valid as a React child (found: " + (f === "[object Object]" ? "object with keys {" + Object.keys(o).join(", ") + "}" : f) + "). If you meant to render a collection of children, use an array instead.");
    }
    function $w(r) {
      {
        var o = Sn(r) || "Component";
        if (o1[o])
          return;
        o1[o] = !0, d("Functions are not valid as a React child. This may happen if you return a Component instead of <Component /> from render. Or maybe you meant to call this function rather than return it.");
      }
    }
    function mI(r) {
      var o = r._payload, f = r._init;
      return f(o);
    }
    function gI(r) {
      function o(Ie, Ke) {
        if (r) {
          var De = Ie.deletions;
          De === null ? (Ie.deletions = [Ke], Ie.flags |= Ma) : De.push(Ke);
        }
      }
      function f(Ie, Ke) {
        if (!r)
          return null;
        for (var De = Ke; De !== null; )
          o(Ie, De), De = De.sibling;
        return null;
      }
      function h(Ie, Ke) {
        for (var De = /* @__PURE__ */ new Map(), ft = Ke; ft !== null; )
          ft.key !== null ? De.set(ft.key, ft) : De.set(ft.index, ft), ft = ft.sibling;
        return De;
      }
      function b(Ie, Ke) {
        var De = Vp(Ie, Ke);
        return De.index = 0, De.sibling = null, De;
      }
      function T(Ie, Ke, De) {
        if (Ie.index = De, !r)
          return Ie.flags |= ks, Ke;
        var ft = Ie.alternate;
        if (ft !== null) {
          var $t = ft.index;
          return $t < Ke ? (Ie.flags |= Qr, Ke) : $t;
        } else
          return Ie.flags |= Qr, Ke;
      }
      function N(Ie) {
        return r && Ie.alternate === null && (Ie.flags |= Qr), Ie;
      }
      function V(Ie, Ke, De, ft) {
        if (Ke === null || Ke.tag !== O) {
          var $t = ZR(De, Ie.mode, ft);
          return $t.return = Ie, $t;
        } else {
          var Nt = b(Ke, De);
          return Nt.return = Ie, Nt;
        }
      }
      function Z(Ie, Ke, De, ft) {
        var $t = De.type;
        if ($t === zn)
          return le(Ie, Ke, De.props.children, ft, De.key);
        if (Ke !== null && (Ke.elementType === $t || // Keep this check inline so it only runs on the false path:
        SN(Ke, De) || // Lazy types should reconcile their resolved type.
        // We need to do this after the Hot Reloading check above,
        // because hot reloading has different semantics than prod because
        // it doesn't resuspend. So we can't let the call below suspend.
        typeof $t == "object" && $t !== null && $t.$$typeof === Le && mI($t) === Ke.type)) {
          var Nt = b(Ke, De.props);
          return Nt.ref = jy(Ie, Ke, De), Nt.return = Ie, Nt._debugSource = De._source, Nt._debugOwner = De._owner, Nt;
        }
        var gn = JR(De, Ie.mode, ft);
        return gn.ref = jy(Ie, Ke, De), gn.return = Ie, gn;
      }
      function se(Ie, Ke, De, ft) {
        if (Ke === null || Ke.tag !== w || Ke.stateNode.containerInfo !== De.containerInfo || Ke.stateNode.implementation !== De.implementation) {
          var $t = eO(De, Ie.mode, ft);
          return $t.return = Ie, $t;
        } else {
          var Nt = b(Ke, De.children || []);
          return Nt.return = Ie, Nt;
        }
      }
      function le(Ie, Ke, De, ft, $t) {
        if (Ke === null || Ke.tag !== E) {
          var Nt = Xd(De, Ie.mode, ft, $t);
          return Nt.return = Ie, Nt;
        } else {
          var gn = b(Ke, De);
          return gn.return = Ie, gn;
        }
      }
      function Te(Ie, Ke, De) {
        if (typeof Ke == "string" && Ke !== "" || typeof Ke == "number") {
          var ft = ZR("" + Ke, Ie.mode, De);
          return ft.return = Ie, ft;
        }
        if (typeof Ke == "object" && Ke !== null) {
          switch (Ke.$$typeof) {
            case en: {
              var $t = JR(Ke, Ie.mode, De);
              return $t.ref = jy(Ie, null, Ke), $t.return = Ie, $t;
            }
            case on: {
              var Nt = eO(Ke, Ie.mode, De);
              return Nt.return = Ie, Nt;
            }
            case Le: {
              var gn = Ke._payload, On = Ke._init;
              return Te(Ie, On(gn), De);
            }
          }
          if (Dn(Ke) || xn(Ke)) {
            var Or = Xd(Ke, Ie.mode, De, null);
            return Or.return = Ie, Or;
          }
          Aw(Ie, Ke);
        }
        return typeof Ke == "function" && $w(Ie), null;
      }
      function xe(Ie, Ke, De, ft) {
        var $t = Ke !== null ? Ke.key : null;
        if (typeof De == "string" && De !== "" || typeof De == "number")
          return $t !== null ? null : V(Ie, Ke, "" + De, ft);
        if (typeof De == "object" && De !== null) {
          switch (De.$$typeof) {
            case en:
              return De.key === $t ? Z(Ie, Ke, De, ft) : null;
            case on:
              return De.key === $t ? se(Ie, Ke, De, ft) : null;
            case Le: {
              var Nt = De._payload, gn = De._init;
              return xe(Ie, Ke, gn(Nt), ft);
            }
          }
          if (Dn(De) || xn(De))
            return $t !== null ? null : le(Ie, Ke, De, ft, null);
          Aw(Ie, De);
        }
        return typeof De == "function" && $w(Ie), null;
      }
      function Ae(Ie, Ke, De, ft, $t) {
        if (typeof ft == "string" && ft !== "" || typeof ft == "number") {
          var Nt = Ie.get(De) || null;
          return V(Ke, Nt, "" + ft, $t);
        }
        if (typeof ft == "object" && ft !== null) {
          switch (ft.$$typeof) {
            case en: {
              var gn = Ie.get(ft.key === null ? De : ft.key) || null;
              return Z(Ke, gn, ft, $t);
            }
            case on: {
              var On = Ie.get(ft.key === null ? De : ft.key) || null;
              return se(Ke, On, ft, $t);
            }
            case Le:
              var Or = ft._payload, lr = ft._init;
              return Ae(Ie, Ke, De, lr(Or), $t);
          }
          if (Dn(ft) || xn(ft)) {
            var _o = Ie.get(De) || null;
            return le(Ke, _o, ft, $t, null);
          }
          Aw(Ke, ft);
        }
        return typeof ft == "function" && $w(Ke), null;
      }
      function ze(Ie, Ke, De) {
        {
          if (typeof Ie != "object" || Ie === null)
            return Ke;
          switch (Ie.$$typeof) {
            case en:
            case on:
              hI(Ie, De);
              var ft = Ie.key;
              if (typeof ft != "string")
                break;
              if (Ke === null) {
                Ke = /* @__PURE__ */ new Set(), Ke.add(ft);
                break;
              }
              if (!Ke.has(ft)) {
                Ke.add(ft);
                break;
              }
              d("Encountered two children with the same key, `%s`. Keys should be unique so that components maintain their identity across updates. Non-unique keys may cause children to be duplicated and/or omitted — the behavior is unsupported and could change in a future version.", ft);
              break;
            case Le:
              var $t = Ie._payload, Nt = Ie._init;
              ze(Nt($t), Ke, De);
              break;
          }
        }
        return Ke;
      }
      function qe(Ie, Ke, De, ft) {
        for (var $t = null, Nt = 0; Nt < De.length; Nt++) {
          var gn = De[Nt];
          $t = ze(gn, $t, Ie);
        }
        for (var On = null, Or = null, lr = Ke, _o = 0, ur = 0, Eo = null; lr !== null && ur < De.length; ur++) {
          lr.index > ur ? (Eo = lr, lr = null) : Eo = lr.sibling;
          var ta = xe(Ie, lr, De[ur], ft);
          if (ta === null) {
            lr === null && (lr = Eo);
            break;
          }
          r && lr && ta.alternate === null && o(Ie, lr), _o = T(ta, _o, ur), Or === null ? On = ta : Or.sibling = ta, Or = ta, lr = Eo;
        }
        if (ur === De.length) {
          if (f(Ie, lr), Pi()) {
            var _i = ur;
            Pp(Ie, _i);
          }
          return On;
        }
        if (lr === null) {
          for (; ur < De.length; ur++) {
            var ls = Te(Ie, De[ur], ft);
            ls !== null && (_o = T(ls, _o, ur), Or === null ? On = ls : Or.sibling = ls, Or = ls);
          }
          if (Pi()) {
            var ya = ur;
            Pp(Ie, ya);
          }
          return On;
        }
        for (var ba = h(Ie, lr); ur < De.length; ur++) {
          var na = Ae(ba, Ie, ur, De[ur], ft);
          na !== null && (r && na.alternate !== null && ba.delete(na.key === null ? ur : na.key), _o = T(na, _o, ur), Or === null ? On = na : Or.sibling = na, Or = na);
        }
        if (r && ba.forEach(function(rg) {
          return o(Ie, rg);
        }), Pi()) {
          var $c = ur;
          Pp(Ie, $c);
        }
        return On;
      }
      function Dt(Ie, Ke, De, ft) {
        var $t = xn(De);
        if (typeof $t != "function")
          throw new Error("An object is not an iterable. This error is likely caused by a bug in React. Please file an issue.");
        {
          typeof Symbol == "function" && // $FlowFixMe Flow doesn't know about toStringTag
          De[Symbol.toStringTag] === "Generator" && (t1 || d("Using Generators as children is unsupported and will likely yield unexpected results because enumerating a generator mutates it. You may convert it to an array with `Array.from()` or the `[...spread]` operator before rendering. Keep in mind you might need to polyfill these features for older browsers."), t1 = !0), De.entries === $t && (e1 || d("Using Maps as children is not supported. Use an array of keyed ReactElements instead."), e1 = !0);
          var Nt = $t.call(De);
          if (Nt)
            for (var gn = null, On = Nt.next(); !On.done; On = Nt.next()) {
              var Or = On.value;
              gn = ze(Or, gn, Ie);
            }
        }
        var lr = $t.call(De);
        if (lr == null)
          throw new Error("An iterable object provided no iterator.");
        for (var _o = null, ur = null, Eo = Ke, ta = 0, _i = 0, ls = null, ya = lr.next(); Eo !== null && !ya.done; _i++, ya = lr.next()) {
          Eo.index > _i ? (ls = Eo, Eo = null) : ls = Eo.sibling;
          var ba = xe(Ie, Eo, ya.value, ft);
          if (ba === null) {
            Eo === null && (Eo = ls);
            break;
          }
          r && Eo && ba.alternate === null && o(Ie, Eo), ta = T(ba, ta, _i), ur === null ? _o = ba : ur.sibling = ba, ur = ba, Eo = ls;
        }
        if (ya.done) {
          if (f(Ie, Eo), Pi()) {
            var na = _i;
            Pp(Ie, na);
          }
          return _o;
        }
        if (Eo === null) {
          for (; !ya.done; _i++, ya = lr.next()) {
            var $c = Te(Ie, ya.value, ft);
            $c !== null && (ta = T($c, ta, _i), ur === null ? _o = $c : ur.sibling = $c, ur = $c);
          }
          if (Pi()) {
            var rg = _i;
            Pp(Ie, rg);
          }
          return _o;
        }
        for (var vb = h(Ie, Eo); !ya.done; _i++, ya = lr.next()) {
          var Ou = Ae(vb, Ie, _i, ya.value, ft);
          Ou !== null && (r && Ou.alternate !== null && vb.delete(Ou.key === null ? _i : Ou.key), ta = T(Ou, ta, _i), ur === null ? _o = Ou : ur.sibling = Ou, ur = Ou);
        }
        if (r && vb.forEach(function(K4) {
          return o(Ie, K4);
        }), Pi()) {
          var q4 = _i;
          Pp(Ie, q4);
        }
        return _o;
      }
      function ln(Ie, Ke, De, ft) {
        if (Ke !== null && Ke.tag === O) {
          f(Ie, Ke.sibling);
          var $t = b(Ke, De);
          return $t.return = Ie, $t;
        }
        f(Ie, Ke);
        var Nt = ZR(De, Ie.mode, ft);
        return Nt.return = Ie, Nt;
      }
      function Jt(Ie, Ke, De, ft) {
        for (var $t = De.key, Nt = Ke; Nt !== null; ) {
          if (Nt.key === $t) {
            var gn = De.type;
            if (gn === zn) {
              if (Nt.tag === E) {
                f(Ie, Nt.sibling);
                var On = b(Nt, De.props.children);
                return On.return = Ie, On._debugSource = De._source, On._debugOwner = De._owner, On;
              }
            } else if (Nt.elementType === gn || // Keep this check inline so it only runs on the false path:
            SN(Nt, De) || // Lazy types should reconcile their resolved type.
            // We need to do this after the Hot Reloading check above,
            // because hot reloading has different semantics than prod because
            // it doesn't resuspend. So we can't let the call below suspend.
            typeof gn == "object" && gn !== null && gn.$$typeof === Le && mI(gn) === Nt.type) {
              f(Ie, Nt.sibling);
              var Or = b(Nt, De.props);
              return Or.ref = jy(Ie, Nt, De), Or.return = Ie, Or._debugSource = De._source, Or._debugOwner = De._owner, Or;
            }
            f(Ie, Nt);
            break;
          } else
            o(Ie, Nt);
          Nt = Nt.sibling;
        }
        if (De.type === zn) {
          var lr = Xd(De.props.children, Ie.mode, ft, De.key);
          return lr.return = Ie, lr;
        } else {
          var _o = JR(De, Ie.mode, ft);
          return _o.ref = jy(Ie, Ke, De), _o.return = Ie, _o;
        }
      }
      function Qn(Ie, Ke, De, ft) {
        for (var $t = De.key, Nt = Ke; Nt !== null; ) {
          if (Nt.key === $t)
            if (Nt.tag === w && Nt.stateNode.containerInfo === De.containerInfo && Nt.stateNode.implementation === De.implementation) {
              f(Ie, Nt.sibling);
              var gn = b(Nt, De.children || []);
              return gn.return = Ie, gn;
            } else {
              f(Ie, Nt);
              break;
            }
          else
            o(Ie, Nt);
          Nt = Nt.sibling;
        }
        var On = eO(De, Ie.mode, ft);
        return On.return = Ie, On;
      }
      function Un(Ie, Ke, De, ft) {
        var $t = typeof De == "object" && De !== null && De.type === zn && De.key === null;
        if ($t && (De = De.props.children), typeof De == "object" && De !== null) {
          switch (De.$$typeof) {
            case en:
              return N(Jt(Ie, Ke, De, ft));
            case on:
              return N(Qn(Ie, Ke, De, ft));
            case Le:
              var Nt = De._payload, gn = De._init;
              return Un(Ie, Ke, gn(Nt), ft);
          }
          if (Dn(De))
            return qe(Ie, Ke, De, ft);
          if (xn(De))
            return Dt(Ie, Ke, De, ft);
          Aw(Ie, De);
        }
        return typeof De == "string" && De !== "" || typeof De == "number" ? N(ln(Ie, Ke, "" + De, ft)) : (typeof De == "function" && $w(Ie), f(Ie, Ke));
      }
      return Un;
    }
    var jm = gI(!0), vI = gI(!1);
    function xU(r, o) {
      if (r !== null && o.child !== r.child)
        throw new Error("Resuming work not yet implemented.");
      if (o.child !== null) {
        var f = o.child, h = Vp(f, f.pendingProps);
        for (o.child = h, h.return = o; f.sibling !== null; )
          f = f.sibling, h = h.sibling = Vp(f, f.pendingProps), h.return = o;
        h.sibling = null;
      }
    }
    function EU(r, o) {
      for (var f = r.child; f !== null; )
        d4(f, o), f = f.sibling;
    }
    var i1 = _d(null), a1;
    a1 = {};
    var jw = null, zm = null, s1 = null, zw = !1;
    function Hw() {
      jw = null, zm = null, s1 = null, zw = !1;
    }
    function yI() {
      zw = !0;
    }
    function bI() {
      zw = !1;
    }
    function CI(r, o, f) {
      Zi(i1, o._currentValue, r), o._currentValue = f, o._currentRenderer !== void 0 && o._currentRenderer !== null && o._currentRenderer !== a1 && d("Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported."), o._currentRenderer = a1;
    }
    function l1(r, o) {
      var f = i1.current;
      Ji(i1, o), r._currentValue = f;
    }
    function u1(r, o, f) {
      for (var h = r; h !== null; ) {
        var b = h.alternate;
        if (Cc(h.childLanes, o) ? b !== null && !Cc(b.childLanes, o) && (b.childLanes = kn(b.childLanes, o)) : (h.childLanes = kn(h.childLanes, o), b !== null && (b.childLanes = kn(b.childLanes, o))), h === f)
          break;
        h = h.return;
      }
      h !== f && d("Expected to find the propagation root when scheduling context work. This error is likely caused by a bug in React. Please file an issue.");
    }
    function TU(r, o, f) {
      RU(r, o, f);
    }
    function RU(r, o, f) {
      var h = r.child;
      for (h !== null && (h.return = r); h !== null; ) {
        var b = void 0, T = h.dependencies;
        if (T !== null) {
          b = h.child;
          for (var N = T.firstContext; N !== null; ) {
            if (N.context === o) {
              if (h.tag === v) {
                var V = ap(f), Z = Dc(Lr, V);
                Z.tag = Bw;
                var se = h.updateQueue;
                if (se !== null) {
                  var le = se.shared, Te = le.pending;
                  Te === null ? Z.next = Z : (Z.next = Te.next, Te.next = Z), le.pending = Z;
                }
              }
              h.lanes = kn(h.lanes, f);
              var xe = h.alternate;
              xe !== null && (xe.lanes = kn(xe.lanes, f)), u1(h.return, f, r), T.lanes = kn(T.lanes, f);
              break;
            }
            N = N.next;
          }
        } else if (h.tag === F)
          b = h.type === r.type ? null : h.child;
        else if (h.tag === I) {
          var Ae = h.return;
          if (Ae === null)
            throw new Error("We just came from a parent so we must have had a parent. This is a bug in React.");
          Ae.lanes = kn(Ae.lanes, f);
          var ze = Ae.alternate;
          ze !== null && (ze.lanes = kn(ze.lanes, f)), u1(Ae, f, r), b = h.sibling;
        } else
          b = h.child;
        if (b !== null)
          b.return = h;
        else
          for (b = h; b !== null; ) {
            if (b === r) {
              b = null;
              break;
            }
            var qe = b.sibling;
            if (qe !== null) {
              qe.return = b.return, b = qe;
              break;
            }
            b = b.return;
          }
        h = b;
      }
    }
    function Hm(r, o) {
      jw = r, zm = null, s1 = null;
      var f = r.dependencies;
      if (f !== null) {
        var h = f.firstContext;
        h !== null && (Ki(f.lanes, o) && eb(), f.firstContext = null);
      }
    }
    function Bo(r) {
      zw && d("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
      var o = r._currentValue;
      if (s1 !== r) {
        var f = {
          context: r,
          memoizedValue: o,
          next: null
        };
        if (zm === null) {
          if (jw === null)
            throw new Error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
          zm = f, jw.dependencies = {
            lanes: at,
            firstContext: f
          };
        } else
          zm = zm.next = f;
      }
      return o;
    }
    var Lp = null;
    function c1(r) {
      Lp === null ? Lp = [r] : Lp.push(r);
    }
    function OU() {
      if (Lp !== null) {
        for (var r = 0; r < Lp.length; r++) {
          var o = Lp[r], f = o.interleaved;
          if (f !== null) {
            o.interleaved = null;
            var h = f.next, b = o.pending;
            if (b !== null) {
              var T = b.next;
              b.next = h, f.next = T;
            }
            o.pending = f;
          }
        }
        Lp = null;
      }
    }
    function SI(r, o, f, h) {
      var b = o.interleaved;
      return b === null ? (f.next = f, c1(o)) : (f.next = b.next, b.next = f), o.interleaved = f, Vw(r, h);
    }
    function kU(r, o, f, h) {
      var b = o.interleaved;
      b === null ? (f.next = f, c1(o)) : (f.next = b.next, b.next = f), o.interleaved = f;
    }
    function PU(r, o, f, h) {
      var b = o.interleaved;
      return b === null ? (f.next = f, c1(o)) : (f.next = b.next, b.next = f), o.interleaved = f, Vw(r, h);
    }
    function za(r, o) {
      return Vw(r, o);
    }
    var MU = Vw;
    function Vw(r, o) {
      r.lanes = kn(r.lanes, o);
      var f = r.alternate;
      f !== null && (f.lanes = kn(f.lanes, o)), f === null && (r.flags & (Qr | Bi)) !== tn && vN(r);
      for (var h = r, b = r.return; b !== null; )
        b.childLanes = kn(b.childLanes, o), f = b.alternate, f !== null ? f.childLanes = kn(f.childLanes, o) : (b.flags & (Qr | Bi)) !== tn && vN(r), h = b, b = b.return;
      if (h.tag === C) {
        var T = h.stateNode;
        return T;
      } else
        return null;
    }
    var wI = 0, xI = 1, Bw = 2, d1 = 3, Uw = !1, f1, Gw;
    f1 = !1, Gw = null;
    function p1(r) {
      var o = {
        baseState: r.memoizedState,
        firstBaseUpdate: null,
        lastBaseUpdate: null,
        shared: {
          pending: null,
          interleaved: null,
          lanes: at
        },
        effects: null
      };
      r.updateQueue = o;
    }
    function EI(r, o) {
      var f = o.updateQueue, h = r.updateQueue;
      if (f === h) {
        var b = {
          baseState: h.baseState,
          firstBaseUpdate: h.firstBaseUpdate,
          lastBaseUpdate: h.lastBaseUpdate,
          shared: h.shared,
          effects: h.effects
        };
        o.updateQueue = b;
      }
    }
    function Dc(r, o) {
      var f = {
        eventTime: r,
        lane: o,
        tag: wI,
        payload: null,
        callback: null,
        next: null
      };
      return f;
    }
    function zd(r, o, f) {
      var h = r.updateQueue;
      if (h === null)
        return null;
      var b = h.shared;
      if (Gw === b && !f1 && (d("An update (setState, replaceState, or forceUpdate) was scheduled from inside an update function. Update functions should be pure, with zero side-effects. Consider using componentDidUpdate or a callback."), f1 = !0), kG()) {
        var T = b.pending;
        return T === null ? o.next = o : (o.next = T.next, T.next = o), b.pending = o, MU(r, f);
      } else
        return PU(r, b, o, f);
    }
    function Ww(r, o, f) {
      var h = o.updateQueue;
      if (h !== null) {
        var b = h.shared;
        if (Jv(f)) {
          var T = b.lanes;
          T = ey(T, r.pendingLanes);
          var N = kn(T, f);
          b.lanes = N, pm(r, N);
        }
      }
    }
    function h1(r, o) {
      var f = r.updateQueue, h = r.alternate;
      if (h !== null) {
        var b = h.updateQueue;
        if (f === b) {
          var T = null, N = null, V = f.firstBaseUpdate;
          if (V !== null) {
            var Z = V;
            do {
              var se = {
                eventTime: Z.eventTime,
                lane: Z.lane,
                tag: Z.tag,
                payload: Z.payload,
                callback: Z.callback,
                next: null
              };
              N === null ? T = N = se : (N.next = se, N = se), Z = Z.next;
            } while (Z !== null);
            N === null ? T = N = o : (N.next = o, N = o);
          } else
            T = N = o;
          f = {
            baseState: b.baseState,
            firstBaseUpdate: T,
            lastBaseUpdate: N,
            shared: b.shared,
            effects: b.effects
          }, r.updateQueue = f;
          return;
        }
      }
      var le = f.lastBaseUpdate;
      le === null ? f.firstBaseUpdate = o : le.next = o, f.lastBaseUpdate = o;
    }
    function IU(r, o, f, h, b, T) {
      switch (f.tag) {
        case xI: {
          var N = f.payload;
          if (typeof N == "function") {
            yI();
            var V = N.call(T, h, b);
            {
              if (r.mode & Tr) {
                Jr(!0);
                try {
                  N.call(T, h, b);
                } finally {
                  Jr(!1);
                }
              }
              bI();
            }
            return V;
          }
          return N;
        }
        case d1:
          r.flags = r.flags & ~jo | Zt;
        case wI: {
          var Z = f.payload, se;
          if (typeof Z == "function") {
            yI(), se = Z.call(T, h, b);
            {
              if (r.mode & Tr) {
                Jr(!0);
                try {
                  Z.call(T, h, b);
                } finally {
                  Jr(!1);
                }
              }
              bI();
            }
          } else
            se = Z;
          return se == null ? h : Rn({}, h, se);
        }
        case Bw:
          return Uw = !0, h;
      }
      return h;
    }
    function qw(r, o, f, h) {
      var b = r.updateQueue;
      Uw = !1, Gw = b.shared;
      var T = b.firstBaseUpdate, N = b.lastBaseUpdate, V = b.shared.pending;
      if (V !== null) {
        b.shared.pending = null;
        var Z = V, se = Z.next;
        Z.next = null, N === null ? T = se : N.next = se, N = Z;
        var le = r.alternate;
        if (le !== null) {
          var Te = le.updateQueue, xe = Te.lastBaseUpdate;
          xe !== N && (xe === null ? Te.firstBaseUpdate = se : xe.next = se, Te.lastBaseUpdate = Z);
        }
      }
      if (T !== null) {
        var Ae = b.baseState, ze = at, qe = null, Dt = null, ln = null, Jt = T;
        do {
          var Qn = Jt.lane, Un = Jt.eventTime;
          if (Cc(h, Qn)) {
            if (ln !== null) {
              var Ke = {
                eventTime: Un,
                // This update is going to be committed so we never want uncommit
                // it. Using NoLane works because 0 is a subset of all bitmasks, so
                // this will never be skipped by the check above.
                lane: nr,
                tag: Jt.tag,
                payload: Jt.payload,
                callback: Jt.callback,
                next: null
              };
              ln = ln.next = Ke;
            }
            Ae = IU(r, b, Jt, Ae, o, f);
            var De = Jt.callback;
            if (De !== null && // If the update was already committed, we should not queue its
            // callback again.
            Jt.lane !== nr) {
              r.flags |= jr;
              var ft = b.effects;
              ft === null ? b.effects = [Jt] : ft.push(Jt);
            }
          } else {
            var Ie = {
              eventTime: Un,
              lane: Qn,
              tag: Jt.tag,
              payload: Jt.payload,
              callback: Jt.callback,
              next: null
            };
            ln === null ? (Dt = ln = Ie, qe = Ae) : ln = ln.next = Ie, ze = kn(ze, Qn);
          }
          if (Jt = Jt.next, Jt === null) {
            if (V = b.shared.pending, V === null)
              break;
            var $t = V, Nt = $t.next;
            $t.next = null, Jt = Nt, b.lastBaseUpdate = $t, b.shared.pending = null;
          }
        } while (!0);
        ln === null && (qe = Ae), b.baseState = qe, b.firstBaseUpdate = Dt, b.lastBaseUpdate = ln;
        var gn = b.shared.interleaved;
        if (gn !== null) {
          var On = gn;
          do
            ze = kn(ze, On.lane), On = On.next;
          while (On !== gn);
        } else T === null && (b.shared.lanes = at);
        fb(ze), r.lanes = ze, r.memoizedState = Ae;
      }
      Gw = null;
    }
    function DU(r, o) {
      if (typeof r != "function")
        throw new Error("Invalid argument passed as callback. Expected a function. Instead " + ("received: " + r));
      r.call(o);
    }
    function TI() {
      Uw = !1;
    }
    function Kw() {
      return Uw;
    }
    function RI(r, o, f) {
      var h = o.effects;
      if (o.effects = null, h !== null)
        for (var b = 0; b < h.length; b++) {
          var T = h[b], N = T.callback;
          N !== null && (T.callback = null, DU(N, f));
        }
    }
    var zy = {}, Hd = _d(zy), Hy = _d(zy), Yw = _d(zy);
    function Xw(r) {
      if (r === zy)
        throw new Error("Expected host context to exist. This error is likely caused by a bug in React. Please file an issue.");
      return r;
    }
    function OI() {
      var r = Xw(Yw.current);
      return r;
    }
    function m1(r, o) {
      Zi(Yw, o, r), Zi(Hy, r, r), Zi(Hd, zy, r);
      var f = YV(o);
      Ji(Hd, r), Zi(Hd, f, r);
    }
    function Vm(r) {
      Ji(Hd, r), Ji(Hy, r), Ji(Yw, r);
    }
    function g1() {
      var r = Xw(Hd.current);
      return r;
    }
    function kI(r) {
      Xw(Yw.current);
      var o = Xw(Hd.current), f = XV(o, r.type);
      o !== f && (Zi(Hy, r, r), Zi(Hd, f, r));
    }
    function v1(r) {
      Hy.current === r && (Ji(Hd, r), Ji(Hy, r));
    }
    var NU = 0, PI = 1, MI = 1, Vy = 2, Ol = _d(NU);
    function y1(r, o) {
      return (r & o) !== 0;
    }
    function Bm(r) {
      return r & PI;
    }
    function b1(r, o) {
      return r & PI | o;
    }
    function LU(r, o) {
      return r | o;
    }
    function Vd(r, o) {
      Zi(Ol, o, r);
    }
    function Um(r) {
      Ji(Ol, r);
    }
    function FU(r, o) {
      var f = r.memoizedState;
      return f !== null ? f.dehydrated !== null : (r.memoizedProps, !0);
    }
    function Qw(r) {
      for (var o = r; o !== null; ) {
        if (o.tag === D) {
          var f = o.memoizedState;
          if (f !== null) {
            var h = f.dehydrated;
            if (h === null || qM(h) || AT(h))
              return o;
          }
        } else if (o.tag === U && // revealOrder undefined can't be trusted because it don't
        // keep track of whether it suspended or not.
        o.memoizedProps.revealOrder !== void 0) {
          var b = (o.flags & Zt) !== tn;
          if (b)
            return o;
        } else if (o.child !== null) {
          o.child.return = o, o = o.child;
          continue;
        }
        if (o === r)
          return null;
        for (; o.sibling === null; ) {
          if (o.return === null || o.return === r)
            return null;
          o = o.return;
        }
        o.sibling.return = o.return, o = o.sibling;
      }
      return null;
    }
    var Ha = (
      /*   */
      0
    ), Jo = (
      /* */
      1
    ), Cu = (
      /*  */
      2
    ), Zo = (
      /*    */
      4
    ), Mi = (
      /*   */
      8
    ), C1 = [];
    function S1() {
      for (var r = 0; r < C1.length; r++) {
        var o = C1[r];
        o._workInProgressVersionPrimary = null;
      }
      C1.length = 0;
    }
    function _U(r, o) {
      var f = o._getVersion, h = f(o._source);
      r.mutableSourceEagerHydrationData == null ? r.mutableSourceEagerHydrationData = [o, h] : r.mutableSourceEagerHydrationData.push(o, h);
    }
    var _t = n.ReactCurrentDispatcher, By = n.ReactCurrentBatchConfig, w1, Gm;
    w1 = /* @__PURE__ */ new Set();
    var Fp = at, Rr = null, ei = null, ti = null, Jw = !1, Uy = !1, Gy = 0, AU = 0, $U = 25, Je = null, Hs = null, Bd = -1, x1 = !1;
    function pr() {
      {
        var r = Je;
        Hs === null ? Hs = [r] : Hs.push(r);
      }
    }
    function kt() {
      {
        var r = Je;
        Hs !== null && (Bd++, Hs[Bd] !== r && jU(r));
      }
    }
    function Wm(r) {
      r != null && !Dn(r) && d("%s received a final argument that is not an array (instead, received `%s`). When specified, the final argument must be an array.", Je, typeof r);
    }
    function jU(r) {
      {
        var o = Sn(Rr);
        if (!w1.has(o) && (w1.add(o), Hs !== null)) {
          for (var f = "", h = 30, b = 0; b <= Bd; b++) {
            for (var T = Hs[b], N = b === Bd ? r : T, V = b + 1 + ". " + T; V.length < h; )
              V += " ";
            V += N + `
`, f += V;
          }
          d(`React has detected a change in the order of Hooks called by %s. This will lead to bugs and errors if not fixed. For more information, read the Rules of Hooks: https://reactjs.org/link/rules-of-hooks

   Previous render            Next render
   ------------------------------------------------------
%s   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
`, o, f);
        }
      }
    }
    function ea() {
      throw new Error(`Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:
1. You might have mismatching versions of React and the renderer (such as React DOM)
2. You might be breaking the Rules of Hooks
3. You might have more than one copy of React in the same app
See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.`);
    }
    function E1(r, o) {
      if (x1)
        return !1;
      if (o === null)
        return d("%s received a final argument during this render, but not during the previous render. Even though the final argument is optional, its type cannot change between renders.", Je), !1;
      r.length !== o.length && d(`The final argument passed to %s changed size between renders. The order and size of this array must remain constant.

Previous: %s
Incoming: %s`, Je, "[" + o.join(", ") + "]", "[" + r.join(", ") + "]");
      for (var f = 0; f < o.length && f < r.length; f++)
        if (!ut(r[f], o[f]))
          return !1;
      return !0;
    }
    function qm(r, o, f, h, b, T) {
      Fp = T, Rr = o, Hs = r !== null ? r._debugHookTypes : null, Bd = -1, x1 = r !== null && r.type !== o.type, o.memoizedState = null, o.updateQueue = null, o.lanes = at, r !== null && r.memoizedState !== null ? _t.current = JI : Hs !== null ? _t.current = QI : _t.current = XI;
      var N = f(h, b);
      if (Uy) {
        var V = 0;
        do {
          if (Uy = !1, Gy = 0, V >= $U)
            throw new Error("Too many re-renders. React limits the number of renders to prevent an infinite loop.");
          V += 1, x1 = !1, ei = null, ti = null, o.updateQueue = null, Bd = -1, _t.current = ZI, N = f(h, b);
        } while (Uy);
      }
      _t.current = dx, o._debugHookTypes = Hs;
      var Z = ei !== null && ei.next !== null;
      if (Fp = at, Rr = null, ei = null, ti = null, Je = null, Hs = null, Bd = -1, r !== null && (r.flags & yo) !== (o.flags & yo) && // Disable this warning in legacy mode, because legacy Suspense is weird
      // and creates false positives. To make this work in legacy mode, we'd
      // need to mark fibers that commit in an incomplete state, somehow. For
      // now I'll disable the warning that most of the bugs that would trigger
      // it are either exclusive to concurrent mode or exist in both.
      (r.mode & Ln) !== nn && d("Internal React error: Expected static flag was missing. Please notify the React team."), Jw = !1, Z)
        throw new Error("Rendered fewer hooks than expected. This may be caused by an accidental early return statement.");
      return N;
    }
    function Km() {
      var r = Gy !== 0;
      return Gy = 0, r;
    }
    function II(r, o, f) {
      o.updateQueue = r.updateQueue, (o.mode & ar) !== nn ? o.flags &= -50333701 : o.flags &= -2053, r.lanes = sp(r.lanes, f);
    }
    function DI() {
      if (_t.current = dx, Jw) {
        for (var r = Rr.memoizedState; r !== null; ) {
          var o = r.queue;
          o !== null && (o.pending = null), r = r.next;
        }
        Jw = !1;
      }
      Fp = at, Rr = null, ei = null, ti = null, Hs = null, Bd = -1, Je = null, GI = !1, Uy = !1, Gy = 0;
    }
    function Su() {
      var r = {
        memoizedState: null,
        baseState: null,
        baseQueue: null,
        queue: null,
        next: null
      };
      return ti === null ? Rr.memoizedState = ti = r : ti = ti.next = r, ti;
    }
    function Vs() {
      var r;
      if (ei === null) {
        var o = Rr.alternate;
        o !== null ? r = o.memoizedState : r = null;
      } else
        r = ei.next;
      var f;
      if (ti === null ? f = Rr.memoizedState : f = ti.next, f !== null)
        ti = f, f = ti.next, ei = r;
      else {
        if (r === null)
          throw new Error("Rendered more hooks than during the previous render.");
        ei = r;
        var h = {
          memoizedState: ei.memoizedState,
          baseState: ei.baseState,
          baseQueue: ei.baseQueue,
          queue: ei.queue,
          next: null
        };
        ti === null ? Rr.memoizedState = ti = h : ti = ti.next = h;
      }
      return ti;
    }
    function NI() {
      return {
        lastEffect: null,
        stores: null
      };
    }
    function T1(r, o) {
      return typeof o == "function" ? o(r) : o;
    }
    function R1(r, o, f) {
      var h = Su(), b;
      f !== void 0 ? b = f(o) : b = o, h.memoizedState = h.baseState = b;
      var T = {
        pending: null,
        interleaved: null,
        lanes: at,
        dispatch: null,
        lastRenderedReducer: r,
        lastRenderedState: b
      };
      h.queue = T;
      var N = T.dispatch = BU.bind(null, Rr, T);
      return [h.memoizedState, N];
    }
    function O1(r, o, f) {
      var h = Vs(), b = h.queue;
      if (b === null)
        throw new Error("Should have a queue. This is likely a bug in React. Please file an issue.");
      b.lastRenderedReducer = r;
      var T = ei, N = T.baseQueue, V = b.pending;
      if (V !== null) {
        if (N !== null) {
          var Z = N.next, se = V.next;
          N.next = se, V.next = Z;
        }
        T.baseQueue !== N && d("Internal error: Expected work-in-progress queue to be a clone. This is a bug in React."), T.baseQueue = N = V, b.pending = null;
      }
      if (N !== null) {
        var le = N.next, Te = T.baseState, xe = null, Ae = null, ze = null, qe = le;
        do {
          var Dt = qe.lane;
          if (Cc(Fp, Dt)) {
            if (ze !== null) {
              var Jt = {
                // This update is going to be committed so we never want uncommit
                // it. Using NoLane works because 0 is a subset of all bitmasks, so
                // this will never be skipped by the check above.
                lane: nr,
                action: qe.action,
                hasEagerState: qe.hasEagerState,
                eagerState: qe.eagerState,
                next: null
              };
              ze = ze.next = Jt;
            }
            if (qe.hasEagerState)
              Te = qe.eagerState;
            else {
              var Qn = qe.action;
              Te = r(Te, Qn);
            }
          } else {
            var ln = {
              lane: Dt,
              action: qe.action,
              hasEagerState: qe.hasEagerState,
              eagerState: qe.eagerState,
              next: null
            };
            ze === null ? (Ae = ze = ln, xe = Te) : ze = ze.next = ln, Rr.lanes = kn(Rr.lanes, Dt), fb(Dt);
          }
          qe = qe.next;
        } while (qe !== null && qe !== le);
        ze === null ? xe = Te : ze.next = Ae, ut(Te, h.memoizedState) || eb(), h.memoizedState = Te, h.baseState = xe, h.baseQueue = ze, b.lastRenderedState = Te;
      }
      var Un = b.interleaved;
      if (Un !== null) {
        var Ie = Un;
        do {
          var Ke = Ie.lane;
          Rr.lanes = kn(Rr.lanes, Ke), fb(Ke), Ie = Ie.next;
        } while (Ie !== Un);
      } else N === null && (b.lanes = at);
      var De = b.dispatch;
      return [h.memoizedState, De];
    }
    function k1(r, o, f) {
      var h = Vs(), b = h.queue;
      if (b === null)
        throw new Error("Should have a queue. This is likely a bug in React. Please file an issue.");
      b.lastRenderedReducer = r;
      var T = b.dispatch, N = b.pending, V = h.memoizedState;
      if (N !== null) {
        b.pending = null;
        var Z = N.next, se = Z;
        do {
          var le = se.action;
          V = r(V, le), se = se.next;
        } while (se !== Z);
        ut(V, h.memoizedState) || eb(), h.memoizedState = V, h.baseQueue === null && (h.baseState = V), b.lastRenderedState = V;
      }
      return [V, T];
    }
    function Yue(r, o, f) {
    }
    function Xue(r, o, f) {
    }
    function P1(r, o, f) {
      var h = Rr, b = Su(), T, N = Pi();
      if (N) {
        if (f === void 0)
          throw new Error("Missing getServerSnapshot, which is required for server-rendered content. Will revert to client rendering.");
        T = f(), Gm || T !== f() && (d("The result of getServerSnapshot should be cached to avoid an infinite loop"), Gm = !0);
      } else {
        if (T = o(), !Gm) {
          var V = o();
          ut(T, V) || (d("The result of getSnapshot should be cached to avoid an infinite loop"), Gm = !0);
        }
        var Z = Mx();
        if (Z === null)
          throw new Error("Expected a work-in-progress root. This is a bug in React. Please file an issue.");
        dm(Z, Fp) || LI(h, o, T);
      }
      b.memoizedState = T;
      var se = {
        value: T,
        getSnapshot: o
      };
      return b.queue = se, rx(_I.bind(null, h, se, r), [r]), h.flags |= Vi, Wy(Jo | Mi, FI.bind(null, h, se, T, o), void 0, null), T;
    }
    function Zw(r, o, f) {
      var h = Rr, b = Vs(), T = o();
      if (!Gm) {
        var N = o();
        ut(T, N) || (d("The result of getSnapshot should be cached to avoid an infinite loop"), Gm = !0);
      }
      var V = b.memoizedState, Z = !ut(V, T);
      Z && (b.memoizedState = T, eb());
      var se = b.queue;
      if (Ky(_I.bind(null, h, se, r), [r]), se.getSnapshot !== o || Z || // Check if the susbcribe function changed. We can save some memory by
      // checking whether we scheduled a subscription effect above.
      ti !== null && ti.memoizedState.tag & Jo) {
        h.flags |= Vi, Wy(Jo | Mi, FI.bind(null, h, se, T, o), void 0, null);
        var le = Mx();
        if (le === null)
          throw new Error("Expected a work-in-progress root. This is a bug in React. Please file an issue.");
        dm(le, Fp) || LI(h, o, T);
      }
      return T;
    }
    function LI(r, o, f) {
      r.flags |= Cd;
      var h = {
        getSnapshot: o,
        value: f
      }, b = Rr.updateQueue;
      if (b === null)
        b = NI(), Rr.updateQueue = b, b.stores = [h];
      else {
        var T = b.stores;
        T === null ? b.stores = [h] : T.push(h);
      }
    }
    function FI(r, o, f, h) {
      o.value = f, o.getSnapshot = h, AI(o) && $I(r);
    }
    function _I(r, o, f) {
      var h = function() {
        AI(o) && $I(r);
      };
      return f(h);
    }
    function AI(r) {
      var o = r.getSnapshot, f = r.value;
      try {
        var h = o();
        return !ut(f, h);
      } catch {
        return !0;
      }
    }
    function $I(r) {
      var o = za(r, hn);
      o !== null && ii(o, r, hn, Lr);
    }
    function ex(r) {
      var o = Su();
      typeof r == "function" && (r = r()), o.memoizedState = o.baseState = r;
      var f = {
        pending: null,
        interleaved: null,
        lanes: at,
        dispatch: null,
        lastRenderedReducer: T1,
        lastRenderedState: r
      };
      o.queue = f;
      var h = f.dispatch = UU.bind(null, Rr, f);
      return [o.memoizedState, h];
    }
    function M1(r) {
      return O1(T1);
    }
    function I1(r) {
      return k1(T1);
    }
    function Wy(r, o, f, h) {
      var b = {
        tag: r,
        create: o,
        destroy: f,
        deps: h,
        // Circular
        next: null
      }, T = Rr.updateQueue;
      if (T === null)
        T = NI(), Rr.updateQueue = T, T.lastEffect = b.next = b;
      else {
        var N = T.lastEffect;
        if (N === null)
          T.lastEffect = b.next = b;
        else {
          var V = N.next;
          N.next = b, b.next = V, T.lastEffect = b;
        }
      }
      return b;
    }
    function D1(r) {
      var o = Su();
      {
        var f = {
          current: r
        };
        return o.memoizedState = f, f;
      }
    }
    function tx(r) {
      var o = Vs();
      return o.memoizedState;
    }
    function qy(r, o, f, h) {
      var b = Su(), T = h === void 0 ? null : h;
      Rr.flags |= r, b.memoizedState = Wy(Jo | o, f, void 0, T);
    }
    function nx(r, o, f, h) {
      var b = Vs(), T = h === void 0 ? null : h, N = void 0;
      if (ei !== null) {
        var V = ei.memoizedState;
        if (N = V.destroy, T !== null) {
          var Z = V.deps;
          if (E1(T, Z)) {
            b.memoizedState = Wy(o, f, N, T);
            return;
          }
        }
      }
      Rr.flags |= r, b.memoizedState = Wy(Jo | o, f, N, T);
    }
    function rx(r, o) {
      return (Rr.mode & ar) !== nn ? qy(Ps | Vi | $h, Mi, r, o) : qy(Vi | $h, Mi, r, o);
    }
    function Ky(r, o) {
      return nx(Vi, Mi, r, o);
    }
    function N1(r, o) {
      return qy(Kn, Cu, r, o);
    }
    function ox(r, o) {
      return nx(Kn, Cu, r, o);
    }
    function L1(r, o) {
      var f = Kn;
      return f |= ml, (Rr.mode & ar) !== nn && (f |= nu), qy(f, Zo, r, o);
    }
    function ix(r, o) {
      return nx(Kn, Zo, r, o);
    }
    function jI(r, o) {
      if (typeof o == "function") {
        var f = o, h = r();
        return f(h), function() {
          f(null);
        };
      } else if (o != null) {
        var b = o;
        b.hasOwnProperty("current") || d("Expected useImperativeHandle() first argument to either be a ref callback or React.createRef() object. Instead received: %s.", "an object with keys {" + Object.keys(b).join(", ") + "}");
        var T = r();
        return b.current = T, function() {
          b.current = null;
        };
      }
    }
    function F1(r, o, f) {
      typeof o != "function" && d("Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.", o !== null ? typeof o : "null");
      var h = f != null ? f.concat([r]) : null, b = Kn;
      return b |= ml, (Rr.mode & ar) !== nn && (b |= nu), qy(b, Zo, jI.bind(null, o, r), h);
    }
    function ax(r, o, f) {
      typeof o != "function" && d("Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.", o !== null ? typeof o : "null");
      var h = f != null ? f.concat([r]) : null;
      return nx(Kn, Zo, jI.bind(null, o, r), h);
    }
    function zU(r, o) {
    }
    var sx = zU;
    function _1(r, o) {
      var f = Su(), h = o === void 0 ? null : o;
      return f.memoizedState = [r, h], r;
    }
    function lx(r, o) {
      var f = Vs(), h = o === void 0 ? null : o, b = f.memoizedState;
      if (b !== null && h !== null) {
        var T = b[1];
        if (E1(h, T))
          return b[0];
      }
      return f.memoizedState = [r, h], r;
    }
    function A1(r, o) {
      var f = Su(), h = o === void 0 ? null : o, b = r();
      return f.memoizedState = [b, h], b;
    }
    function ux(r, o) {
      var f = Vs(), h = o === void 0 ? null : o, b = f.memoizedState;
      if (b !== null && h !== null) {
        var T = b[1];
        if (E1(h, T))
          return b[0];
      }
      var N = r();
      return f.memoizedState = [N, h], N;
    }
    function $1(r) {
      var o = Su();
      return o.memoizedState = r, r;
    }
    function zI(r) {
      var o = Vs(), f = ei, h = f.memoizedState;
      return VI(o, h, r);
    }
    function HI(r) {
      var o = Vs();
      if (ei === null)
        return o.memoizedState = r, r;
      var f = ei.memoizedState;
      return VI(o, f, r);
    }
    function VI(r, o, f) {
      var h = !Xv(Fp);
      if (h) {
        if (!ut(f, o)) {
          var b = Zv();
          Rr.lanes = kn(Rr.lanes, b), fb(b), r.baseState = !0;
        }
        return o;
      } else
        return r.baseState && (r.baseState = !1, eb()), r.memoizedState = f, f;
    }
    function HU(r, o, f) {
      var h = Aa();
      So(zS(h, Ns)), r(!0);
      var b = By.transition;
      By.transition = {};
      var T = By.transition;
      By.transition._updatedFibers = /* @__PURE__ */ new Set();
      try {
        r(!1), o();
      } finally {
        if (So(h), By.transition = b, b === null && T._updatedFibers) {
          var N = T._updatedFibers.size;
          N > 10 && u("Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table."), T._updatedFibers.clear();
        }
      }
    }
    function j1() {
      var r = ex(!1), o = r[0], f = r[1], h = HU.bind(null, f), b = Su();
      return b.memoizedState = h, [o, h];
    }
    function BI() {
      var r = M1(), o = r[0], f = Vs(), h = f.memoizedState;
      return [o, h];
    }
    function UI() {
      var r = I1(), o = r[0], f = Vs(), h = f.memoizedState;
      return [o, h];
    }
    var GI = !1;
    function VU() {
      return GI;
    }
    function z1() {
      var r = Su(), o = Mx(), f = o.identifierPrefix, h;
      if (Pi()) {
        var b = iU();
        h = ":" + f + "R" + b;
        var T = Gy++;
        T > 0 && (h += "H" + T.toString(32)), h += ":";
      } else {
        var N = AU++;
        h = ":" + f + "r" + N.toString(32) + ":";
      }
      return r.memoizedState = h, h;
    }
    function cx() {
      var r = Vs(), o = r.memoizedState;
      return o;
    }
    function BU(r, o, f) {
      typeof arguments[3] == "function" && d("State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect().");
      var h = Kd(r), b = {
        lane: h,
        action: f,
        hasEagerState: !1,
        eagerState: null,
        next: null
      };
      if (WI(r))
        qI(o, b);
      else {
        var T = SI(r, o, b, h);
        if (T !== null) {
          var N = va();
          ii(T, r, h, N), KI(T, o, h);
        }
      }
      YI(r, h);
    }
    function UU(r, o, f) {
      typeof arguments[3] == "function" && d("State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect().");
      var h = Kd(r), b = {
        lane: h,
        action: f,
        hasEagerState: !1,
        eagerState: null,
        next: null
      };
      if (WI(r))
        qI(o, b);
      else {
        var T = r.alternate;
        if (r.lanes === at && (T === null || T.lanes === at)) {
          var N = o.lastRenderedReducer;
          if (N !== null) {
            var V;
            V = _t.current, _t.current = kl;
            try {
              var Z = o.lastRenderedState, se = N(Z, f);
              if (b.hasEagerState = !0, b.eagerState = se, ut(se, Z)) {
                kU(r, o, b, h);
                return;
              }
            } catch {
            } finally {
              _t.current = V;
            }
          }
        }
        var le = SI(r, o, b, h);
        if (le !== null) {
          var Te = va();
          ii(le, r, h, Te), KI(le, o, h);
        }
      }
      YI(r, h);
    }
    function WI(r) {
      var o = r.alternate;
      return r === Rr || o !== null && o === Rr;
    }
    function qI(r, o) {
      Uy = Jw = !0;
      var f = r.pending;
      f === null ? o.next = o : (o.next = f.next, f.next = o), r.pending = o;
    }
    function KI(r, o, f) {
      if (Jv(f)) {
        var h = o.lanes;
        h = ey(h, r.pendingLanes);
        var b = kn(h, f);
        o.lanes = b, pm(r, b);
      }
    }
    function YI(r, o, f) {
      Qf(r, o);
    }
    var dx = {
      readContext: Bo,
      useCallback: ea,
      useContext: ea,
      useEffect: ea,
      useImperativeHandle: ea,
      useInsertionEffect: ea,
      useLayoutEffect: ea,
      useMemo: ea,
      useReducer: ea,
      useRef: ea,
      useState: ea,
      useDebugValue: ea,
      useDeferredValue: ea,
      useTransition: ea,
      useMutableSource: ea,
      useSyncExternalStore: ea,
      useId: ea,
      unstable_isNewReconciler: ne
    }, XI = null, QI = null, JI = null, ZI = null, wu = null, kl = null, fx = null;
    {
      var H1 = function() {
        d("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
      }, En = function() {
        d("Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. You can only call Hooks at the top level of your React function. For more information, see https://reactjs.org/link/rules-of-hooks");
      };
      XI = {
        readContext: function(r) {
          return Bo(r);
        },
        useCallback: function(r, o) {
          return Je = "useCallback", pr(), Wm(o), _1(r, o);
        },
        useContext: function(r) {
          return Je = "useContext", pr(), Bo(r);
        },
        useEffect: function(r, o) {
          return Je = "useEffect", pr(), Wm(o), rx(r, o);
        },
        useImperativeHandle: function(r, o, f) {
          return Je = "useImperativeHandle", pr(), Wm(f), F1(r, o, f);
        },
        useInsertionEffect: function(r, o) {
          return Je = "useInsertionEffect", pr(), Wm(o), N1(r, o);
        },
        useLayoutEffect: function(r, o) {
          return Je = "useLayoutEffect", pr(), Wm(o), L1(r, o);
        },
        useMemo: function(r, o) {
          Je = "useMemo", pr(), Wm(o);
          var f = _t.current;
          _t.current = wu;
          try {
            return A1(r, o);
          } finally {
            _t.current = f;
          }
        },
        useReducer: function(r, o, f) {
          Je = "useReducer", pr();
          var h = _t.current;
          _t.current = wu;
          try {
            return R1(r, o, f);
          } finally {
            _t.current = h;
          }
        },
        useRef: function(r) {
          return Je = "useRef", pr(), D1(r);
        },
        useState: function(r) {
          Je = "useState", pr();
          var o = _t.current;
          _t.current = wu;
          try {
            return ex(r);
          } finally {
            _t.current = o;
          }
        },
        useDebugValue: function(r, o) {
          return Je = "useDebugValue", pr(), void 0;
        },
        useDeferredValue: function(r) {
          return Je = "useDeferredValue", pr(), $1(r);
        },
        useTransition: function() {
          return Je = "useTransition", pr(), j1();
        },
        useMutableSource: function(r, o, f) {
          return Je = "useMutableSource", pr(), void 0;
        },
        useSyncExternalStore: function(r, o, f) {
          return Je = "useSyncExternalStore", pr(), P1(r, o, f);
        },
        useId: function() {
          return Je = "useId", pr(), z1();
        },
        unstable_isNewReconciler: ne
      }, QI = {
        readContext: function(r) {
          return Bo(r);
        },
        useCallback: function(r, o) {
          return Je = "useCallback", kt(), _1(r, o);
        },
        useContext: function(r) {
          return Je = "useContext", kt(), Bo(r);
        },
        useEffect: function(r, o) {
          return Je = "useEffect", kt(), rx(r, o);
        },
        useImperativeHandle: function(r, o, f) {
          return Je = "useImperativeHandle", kt(), F1(r, o, f);
        },
        useInsertionEffect: function(r, o) {
          return Je = "useInsertionEffect", kt(), N1(r, o);
        },
        useLayoutEffect: function(r, o) {
          return Je = "useLayoutEffect", kt(), L1(r, o);
        },
        useMemo: function(r, o) {
          Je = "useMemo", kt();
          var f = _t.current;
          _t.current = wu;
          try {
            return A1(r, o);
          } finally {
            _t.current = f;
          }
        },
        useReducer: function(r, o, f) {
          Je = "useReducer", kt();
          var h = _t.current;
          _t.current = wu;
          try {
            return R1(r, o, f);
          } finally {
            _t.current = h;
          }
        },
        useRef: function(r) {
          return Je = "useRef", kt(), D1(r);
        },
        useState: function(r) {
          Je = "useState", kt();
          var o = _t.current;
          _t.current = wu;
          try {
            return ex(r);
          } finally {
            _t.current = o;
          }
        },
        useDebugValue: function(r, o) {
          return Je = "useDebugValue", kt(), void 0;
        },
        useDeferredValue: function(r) {
          return Je = "useDeferredValue", kt(), $1(r);
        },
        useTransition: function() {
          return Je = "useTransition", kt(), j1();
        },
        useMutableSource: function(r, o, f) {
          return Je = "useMutableSource", kt(), void 0;
        },
        useSyncExternalStore: function(r, o, f) {
          return Je = "useSyncExternalStore", kt(), P1(r, o, f);
        },
        useId: function() {
          return Je = "useId", kt(), z1();
        },
        unstable_isNewReconciler: ne
      }, JI = {
        readContext: function(r) {
          return Bo(r);
        },
        useCallback: function(r, o) {
          return Je = "useCallback", kt(), lx(r, o);
        },
        useContext: function(r) {
          return Je = "useContext", kt(), Bo(r);
        },
        useEffect: function(r, o) {
          return Je = "useEffect", kt(), Ky(r, o);
        },
        useImperativeHandle: function(r, o, f) {
          return Je = "useImperativeHandle", kt(), ax(r, o, f);
        },
        useInsertionEffect: function(r, o) {
          return Je = "useInsertionEffect", kt(), ox(r, o);
        },
        useLayoutEffect: function(r, o) {
          return Je = "useLayoutEffect", kt(), ix(r, o);
        },
        useMemo: function(r, o) {
          Je = "useMemo", kt();
          var f = _t.current;
          _t.current = kl;
          try {
            return ux(r, o);
          } finally {
            _t.current = f;
          }
        },
        useReducer: function(r, o, f) {
          Je = "useReducer", kt();
          var h = _t.current;
          _t.current = kl;
          try {
            return O1(r, o, f);
          } finally {
            _t.current = h;
          }
        },
        useRef: function(r) {
          return Je = "useRef", kt(), tx();
        },
        useState: function(r) {
          Je = "useState", kt();
          var o = _t.current;
          _t.current = kl;
          try {
            return M1(r);
          } finally {
            _t.current = o;
          }
        },
        useDebugValue: function(r, o) {
          return Je = "useDebugValue", kt(), sx();
        },
        useDeferredValue: function(r) {
          return Je = "useDeferredValue", kt(), zI(r);
        },
        useTransition: function() {
          return Je = "useTransition", kt(), BI();
        },
        useMutableSource: function(r, o, f) {
          return Je = "useMutableSource", kt(), void 0;
        },
        useSyncExternalStore: function(r, o, f) {
          return Je = "useSyncExternalStore", kt(), Zw(r, o);
        },
        useId: function() {
          return Je = "useId", kt(), cx();
        },
        unstable_isNewReconciler: ne
      }, ZI = {
        readContext: function(r) {
          return Bo(r);
        },
        useCallback: function(r, o) {
          return Je = "useCallback", kt(), lx(r, o);
        },
        useContext: function(r) {
          return Je = "useContext", kt(), Bo(r);
        },
        useEffect: function(r, o) {
          return Je = "useEffect", kt(), Ky(r, o);
        },
        useImperativeHandle: function(r, o, f) {
          return Je = "useImperativeHandle", kt(), ax(r, o, f);
        },
        useInsertionEffect: function(r, o) {
          return Je = "useInsertionEffect", kt(), ox(r, o);
        },
        useLayoutEffect: function(r, o) {
          return Je = "useLayoutEffect", kt(), ix(r, o);
        },
        useMemo: function(r, o) {
          Je = "useMemo", kt();
          var f = _t.current;
          _t.current = fx;
          try {
            return ux(r, o);
          } finally {
            _t.current = f;
          }
        },
        useReducer: function(r, o, f) {
          Je = "useReducer", kt();
          var h = _t.current;
          _t.current = fx;
          try {
            return k1(r, o, f);
          } finally {
            _t.current = h;
          }
        },
        useRef: function(r) {
          return Je = "useRef", kt(), tx();
        },
        useState: function(r) {
          Je = "useState", kt();
          var o = _t.current;
          _t.current = fx;
          try {
            return I1(r);
          } finally {
            _t.current = o;
          }
        },
        useDebugValue: function(r, o) {
          return Je = "useDebugValue", kt(), sx();
        },
        useDeferredValue: function(r) {
          return Je = "useDeferredValue", kt(), HI(r);
        },
        useTransition: function() {
          return Je = "useTransition", kt(), UI();
        },
        useMutableSource: function(r, o, f) {
          return Je = "useMutableSource", kt(), void 0;
        },
        useSyncExternalStore: function(r, o, f) {
          return Je = "useSyncExternalStore", kt(), Zw(r, o);
        },
        useId: function() {
          return Je = "useId", kt(), cx();
        },
        unstable_isNewReconciler: ne
      }, wu = {
        readContext: function(r) {
          return H1(), Bo(r);
        },
        useCallback: function(r, o) {
          return Je = "useCallback", En(), pr(), _1(r, o);
        },
        useContext: function(r) {
          return Je = "useContext", En(), pr(), Bo(r);
        },
        useEffect: function(r, o) {
          return Je = "useEffect", En(), pr(), rx(r, o);
        },
        useImperativeHandle: function(r, o, f) {
          return Je = "useImperativeHandle", En(), pr(), F1(r, o, f);
        },
        useInsertionEffect: function(r, o) {
          return Je = "useInsertionEffect", En(), pr(), N1(r, o);
        },
        useLayoutEffect: function(r, o) {
          return Je = "useLayoutEffect", En(), pr(), L1(r, o);
        },
        useMemo: function(r, o) {
          Je = "useMemo", En(), pr();
          var f = _t.current;
          _t.current = wu;
          try {
            return A1(r, o);
          } finally {
            _t.current = f;
          }
        },
        useReducer: function(r, o, f) {
          Je = "useReducer", En(), pr();
          var h = _t.current;
          _t.current = wu;
          try {
            return R1(r, o, f);
          } finally {
            _t.current = h;
          }
        },
        useRef: function(r) {
          return Je = "useRef", En(), pr(), D1(r);
        },
        useState: function(r) {
          Je = "useState", En(), pr();
          var o = _t.current;
          _t.current = wu;
          try {
            return ex(r);
          } finally {
            _t.current = o;
          }
        },
        useDebugValue: function(r, o) {
          return Je = "useDebugValue", En(), pr(), void 0;
        },
        useDeferredValue: function(r) {
          return Je = "useDeferredValue", En(), pr(), $1(r);
        },
        useTransition: function() {
          return Je = "useTransition", En(), pr(), j1();
        },
        useMutableSource: function(r, o, f) {
          return Je = "useMutableSource", En(), pr(), void 0;
        },
        useSyncExternalStore: function(r, o, f) {
          return Je = "useSyncExternalStore", En(), pr(), P1(r, o, f);
        },
        useId: function() {
          return Je = "useId", En(), pr(), z1();
        },
        unstable_isNewReconciler: ne
      }, kl = {
        readContext: function(r) {
          return H1(), Bo(r);
        },
        useCallback: function(r, o) {
          return Je = "useCallback", En(), kt(), lx(r, o);
        },
        useContext: function(r) {
          return Je = "useContext", En(), kt(), Bo(r);
        },
        useEffect: function(r, o) {
          return Je = "useEffect", En(), kt(), Ky(r, o);
        },
        useImperativeHandle: function(r, o, f) {
          return Je = "useImperativeHandle", En(), kt(), ax(r, o, f);
        },
        useInsertionEffect: function(r, o) {
          return Je = "useInsertionEffect", En(), kt(), ox(r, o);
        },
        useLayoutEffect: function(r, o) {
          return Je = "useLayoutEffect", En(), kt(), ix(r, o);
        },
        useMemo: function(r, o) {
          Je = "useMemo", En(), kt();
          var f = _t.current;
          _t.current = kl;
          try {
            return ux(r, o);
          } finally {
            _t.current = f;
          }
        },
        useReducer: function(r, o, f) {
          Je = "useReducer", En(), kt();
          var h = _t.current;
          _t.current = kl;
          try {
            return O1(r, o, f);
          } finally {
            _t.current = h;
          }
        },
        useRef: function(r) {
          return Je = "useRef", En(), kt(), tx();
        },
        useState: function(r) {
          Je = "useState", En(), kt();
          var o = _t.current;
          _t.current = kl;
          try {
            return M1(r);
          } finally {
            _t.current = o;
          }
        },
        useDebugValue: function(r, o) {
          return Je = "useDebugValue", En(), kt(), sx();
        },
        useDeferredValue: function(r) {
          return Je = "useDeferredValue", En(), kt(), zI(r);
        },
        useTransition: function() {
          return Je = "useTransition", En(), kt(), BI();
        },
        useMutableSource: function(r, o, f) {
          return Je = "useMutableSource", En(), kt(), void 0;
        },
        useSyncExternalStore: function(r, o, f) {
          return Je = "useSyncExternalStore", En(), kt(), Zw(r, o);
        },
        useId: function() {
          return Je = "useId", En(), kt(), cx();
        },
        unstable_isNewReconciler: ne
      }, fx = {
        readContext: function(r) {
          return H1(), Bo(r);
        },
        useCallback: function(r, o) {
          return Je = "useCallback", En(), kt(), lx(r, o);
        },
        useContext: function(r) {
          return Je = "useContext", En(), kt(), Bo(r);
        },
        useEffect: function(r, o) {
          return Je = "useEffect", En(), kt(), Ky(r, o);
        },
        useImperativeHandle: function(r, o, f) {
          return Je = "useImperativeHandle", En(), kt(), ax(r, o, f);
        },
        useInsertionEffect: function(r, o) {
          return Je = "useInsertionEffect", En(), kt(), ox(r, o);
        },
        useLayoutEffect: function(r, o) {
          return Je = "useLayoutEffect", En(), kt(), ix(r, o);
        },
        useMemo: function(r, o) {
          Je = "useMemo", En(), kt();
          var f = _t.current;
          _t.current = kl;
          try {
            return ux(r, o);
          } finally {
            _t.current = f;
          }
        },
        useReducer: function(r, o, f) {
          Je = "useReducer", En(), kt();
          var h = _t.current;
          _t.current = kl;
          try {
            return k1(r, o, f);
          } finally {
            _t.current = h;
          }
        },
        useRef: function(r) {
          return Je = "useRef", En(), kt(), tx();
        },
        useState: function(r) {
          Je = "useState", En(), kt();
          var o = _t.current;
          _t.current = kl;
          try {
            return I1(r);
          } finally {
            _t.current = o;
          }
        },
        useDebugValue: function(r, o) {
          return Je = "useDebugValue", En(), kt(), sx();
        },
        useDeferredValue: function(r) {
          return Je = "useDeferredValue", En(), kt(), HI(r);
        },
        useTransition: function() {
          return Je = "useTransition", En(), kt(), UI();
        },
        useMutableSource: function(r, o, f) {
          return Je = "useMutableSource", En(), kt(), void 0;
        },
        useSyncExternalStore: function(r, o, f) {
          return Je = "useSyncExternalStore", En(), kt(), Zw(r, o);
        },
        useId: function() {
          return Je = "useId", En(), kt(), cx();
        },
        unstable_isNewReconciler: ne
      };
    }
    var Ud = t.unstable_now, eD = 0, px = -1, Yy = -1, hx = -1, V1 = !1, mx = !1;
    function tD() {
      return V1;
    }
    function GU() {
      mx = !0;
    }
    function WU() {
      V1 = !1, mx = !1;
    }
    function qU() {
      V1 = mx, mx = !1;
    }
    function nD() {
      return eD;
    }
    function rD() {
      eD = Ud();
    }
    function B1(r) {
      Yy = Ud(), r.actualStartTime < 0 && (r.actualStartTime = Ud());
    }
    function oD(r) {
      Yy = -1;
    }
    function gx(r, o) {
      if (Yy >= 0) {
        var f = Ud() - Yy;
        r.actualDuration += f, o && (r.selfBaseDuration = f), Yy = -1;
      }
    }
    function xu(r) {
      if (px >= 0) {
        var o = Ud() - px;
        px = -1;
        for (var f = r.return; f !== null; ) {
          switch (f.tag) {
            case C:
              var h = f.stateNode;
              h.effectDuration += o;
              return;
            case P:
              var b = f.stateNode;
              b.effectDuration += o;
              return;
          }
          f = f.return;
        }
      }
    }
    function U1(r) {
      if (hx >= 0) {
        var o = Ud() - hx;
        hx = -1;
        for (var f = r.return; f !== null; ) {
          switch (f.tag) {
            case C:
              var h = f.stateNode;
              h !== null && (h.passiveEffectDuration += o);
              return;
            case P:
              var b = f.stateNode;
              b !== null && (b.passiveEffectDuration += o);
              return;
          }
          f = f.return;
        }
      }
    }
    function Eu() {
      px = Ud();
    }
    function G1() {
      hx = Ud();
    }
    function W1(r) {
      for (var o = r.child; o; )
        r.actualDuration += o.actualDuration, o = o.sibling;
    }
    function Pl(r, o) {
      if (r && r.defaultProps) {
        var f = Rn({}, o), h = r.defaultProps;
        for (var b in h)
          f[b] === void 0 && (f[b] = h[b]);
        return f;
      }
      return o;
    }
    var q1 = {}, K1, Y1, X1, Q1, J1, iD, vx, Z1, eR, tR, Xy;
    {
      K1 = /* @__PURE__ */ new Set(), Y1 = /* @__PURE__ */ new Set(), X1 = /* @__PURE__ */ new Set(), Q1 = /* @__PURE__ */ new Set(), Z1 = /* @__PURE__ */ new Set(), J1 = /* @__PURE__ */ new Set(), eR = /* @__PURE__ */ new Set(), tR = /* @__PURE__ */ new Set(), Xy = /* @__PURE__ */ new Set();
      var aD = /* @__PURE__ */ new Set();
      vx = function(r, o) {
        if (!(r === null || typeof r == "function")) {
          var f = o + "_" + r;
          aD.has(f) || (aD.add(f), d("%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", o, r));
        }
      }, iD = function(r, o) {
        if (o === void 0) {
          var f = Zn(r) || "Component";
          J1.has(f) || (J1.add(f), d("%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. You have returned undefined.", f));
        }
      }, Object.defineProperty(q1, "_processChildContext", {
        enumerable: !1,
        value: function() {
          throw new Error("_processChildContext is not available in React 16+. This likely means you have multiple copies of React and are attempting to nest a React 15 tree inside a React 16 tree using unstable_renderSubtreeIntoContainer, which isn't supported. Try to make sure you have only one copy of React (and ideally, switch to ReactDOM.createPortal).");
        }
      }), Object.freeze(q1);
    }
    function nR(r, o, f, h) {
      var b = r.memoizedState, T = f(h, b);
      {
        if (r.mode & Tr) {
          Jr(!0);
          try {
            T = f(h, b);
          } finally {
            Jr(!1);
          }
        }
        iD(o, T);
      }
      var N = T == null ? b : Rn({}, b, T);
      if (r.memoizedState = N, r.lanes === at) {
        var V = r.updateQueue;
        V.baseState = N;
      }
    }
    var rR = {
      isMounted: ES,
      enqueueSetState: function(r, o, f) {
        var h = bd(r), b = va(), T = Kd(h), N = Dc(b, T);
        N.payload = o, f != null && (vx(f, "setState"), N.callback = f);
        var V = zd(h, N, T);
        V !== null && (ii(V, h, T, b), Ww(V, h, T)), Qf(h, T);
      },
      enqueueReplaceState: function(r, o, f) {
        var h = bd(r), b = va(), T = Kd(h), N = Dc(b, T);
        N.tag = xI, N.payload = o, f != null && (vx(f, "replaceState"), N.callback = f);
        var V = zd(h, N, T);
        V !== null && (ii(V, h, T, b), Ww(V, h, T)), Qf(h, T);
      },
      enqueueForceUpdate: function(r, o) {
        var f = bd(r), h = va(), b = Kd(f), T = Dc(h, b);
        T.tag = Bw, o != null && (vx(o, "forceUpdate"), T.callback = o);
        var N = zd(f, T, b);
        N !== null && (ii(N, f, b, h), Ww(N, f, b)), Gh(f, b);
      }
    };
    function sD(r, o, f, h, b, T, N) {
      var V = r.stateNode;
      if (typeof V.shouldComponentUpdate == "function") {
        var Z = V.shouldComponentUpdate(h, T, N);
        {
          if (r.mode & Tr) {
            Jr(!0);
            try {
              Z = V.shouldComponentUpdate(h, T, N);
            } finally {
              Jr(!1);
            }
          }
          Z === void 0 && d("%s.shouldComponentUpdate(): Returned undefined instead of a boolean value. Make sure to return true or false.", Zn(o) || "Component");
        }
        return Z;
      }
      return o.prototype && o.prototype.isPureReactComponent ? !qt(f, h) || !qt(b, T) : !0;
    }
    function KU(r, o, f) {
      var h = r.stateNode;
      {
        var b = Zn(o) || "Component", T = h.render;
        T || (o.prototype && typeof o.prototype.render == "function" ? d("%s(...): No `render` method found on the returned component instance: did you accidentally return an object from the constructor?", b) : d("%s(...): No `render` method found on the returned component instance: you may have forgotten to define `render`.", b)), h.getInitialState && !h.getInitialState.isReactClassApproved && !h.state && d("getInitialState was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Did you mean to define a state property instead?", b), h.getDefaultProps && !h.getDefaultProps.isReactClassApproved && d("getDefaultProps was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Use a static property to define defaultProps instead.", b), h.propTypes && d("propTypes was defined as an instance property on %s. Use a static property to define propTypes instead.", b), h.contextType && d("contextType was defined as an instance property on %s. Use a static property to define contextType instead.", b), o.childContextTypes && !Xy.has(o) && // Strict Mode has its own warning for legacy context, so we can skip
        // this one.
        (r.mode & Tr) === nn && (Xy.add(o), d(`%s uses the legacy childContextTypes API which is no longer supported and will be removed in the next major release. Use React.createContext() instead

.Learn more about this warning here: https://reactjs.org/link/legacy-context`, b)), o.contextTypes && !Xy.has(o) && // Strict Mode has its own warning for legacy context, so we can skip
        // this one.
        (r.mode & Tr) === nn && (Xy.add(o), d(`%s uses the legacy contextTypes API which is no longer supported and will be removed in the next major release. Use React.createContext() with static contextType instead.

Learn more about this warning here: https://reactjs.org/link/legacy-context`, b)), h.contextTypes && d("contextTypes was defined as an instance property on %s. Use a static property to define contextTypes instead.", b), o.contextType && o.contextTypes && !eR.has(o) && (eR.add(o), d("%s declares both contextTypes and contextType static properties. The legacy contextTypes property will be ignored.", b)), typeof h.componentShouldUpdate == "function" && d("%s has a method called componentShouldUpdate(). Did you mean shouldComponentUpdate()? The name is phrased as a question because the function is expected to return a value.", b), o.prototype && o.prototype.isPureReactComponent && typeof h.shouldComponentUpdate < "u" && d("%s has a method called shouldComponentUpdate(). shouldComponentUpdate should not be used when extending React.PureComponent. Please extend React.Component if shouldComponentUpdate is used.", Zn(o) || "A pure component"), typeof h.componentDidUnmount == "function" && d("%s has a method called componentDidUnmount(). But there is no such lifecycle method. Did you mean componentWillUnmount()?", b), typeof h.componentDidReceiveProps == "function" && d("%s has a method called componentDidReceiveProps(). But there is no such lifecycle method. If you meant to update the state in response to changing props, use componentWillReceiveProps(). If you meant to fetch data or run side-effects or mutations after React has updated the UI, use componentDidUpdate().", b), typeof h.componentWillRecieveProps == "function" && d("%s has a method called componentWillRecieveProps(). Did you mean componentWillReceiveProps()?", b), typeof h.UNSAFE_componentWillRecieveProps == "function" && d("%s has a method called UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?", b);
        var N = h.props !== f;
        h.props !== void 0 && N && d("%s(...): When calling super() in `%s`, make sure to pass up the same props that your component's constructor was passed.", b, b), h.defaultProps && d("Setting defaultProps as an instance property on %s is not supported and will be ignored. Instead, define defaultProps as a static property on %s.", b, b), typeof h.getSnapshotBeforeUpdate == "function" && typeof h.componentDidUpdate != "function" && !X1.has(o) && (X1.add(o), d("%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). This component defines getSnapshotBeforeUpdate() only.", Zn(o))), typeof h.getDerivedStateFromProps == "function" && d("%s: getDerivedStateFromProps() is defined as an instance method and will be ignored. Instead, declare it as a static method.", b), typeof h.getDerivedStateFromError == "function" && d("%s: getDerivedStateFromError() is defined as an instance method and will be ignored. Instead, declare it as a static method.", b), typeof o.getSnapshotBeforeUpdate == "function" && d("%s: getSnapshotBeforeUpdate() is defined as a static method and will be ignored. Instead, declare it as an instance method.", b);
        var V = h.state;
        V && (typeof V != "object" || Dn(V)) && d("%s.state: must be set to an object or null", b), typeof h.getChildContext == "function" && typeof o.childContextTypes != "object" && d("%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().", b);
      }
    }
    function lD(r, o) {
      o.updater = rR, r.stateNode = o, ac(o, r), o._reactInternalInstance = q1;
    }
    function uD(r, o, f) {
      var h = !1, b = as, T = as, N = o.contextType;
      if ("contextType" in o) {
        var V = (
          // Allow null for conditional declaration
          N === null || N !== void 0 && N.$$typeof === ve && N._context === void 0
        );
        if (!V && !tR.has(o)) {
          tR.add(o);
          var Z = "";
          N === void 0 ? Z = " However, it is set to undefined. This can be caused by a typo or by mixing up named and default imports. This can also happen due to a circular dependency, so try moving the createContext() call to a separate file." : typeof N != "object" ? Z = " However, it is set to a " + typeof N + "." : N.$$typeof === mo ? Z = " Did you accidentally pass the Context.Provider instead?" : N._context !== void 0 ? Z = " Did you accidentally pass the Context.Consumer instead?" : Z = " However, it is set to an object with keys {" + Object.keys(N).join(", ") + "}.", d("%s defines an invalid contextType. contextType should point to the Context object returned by React.createContext().%s", Zn(o) || "Component", Z);
        }
      }
      if (typeof N == "object" && N !== null)
        T = Bo(N);
      else {
        b = Lm(r, o, !0);
        var se = o.contextTypes;
        h = se != null, T = h ? Fm(r, b) : as;
      }
      var le = new o(f, T);
      if (r.mode & Tr) {
        Jr(!0);
        try {
          le = new o(f, T);
        } finally {
          Jr(!1);
        }
      }
      var Te = r.memoizedState = le.state !== null && le.state !== void 0 ? le.state : null;
      lD(r, le);
      {
        if (typeof o.getDerivedStateFromProps == "function" && Te === null) {
          var xe = Zn(o) || "Component";
          Y1.has(xe) || (Y1.add(xe), d("`%s` uses `getDerivedStateFromProps` but its initial state is %s. This is not recommended. Instead, define the initial state by assigning an object to `this.state` in the constructor of `%s`. This ensures that `getDerivedStateFromProps` arguments have a consistent shape.", xe, le.state === null ? "null" : "undefined", xe));
        }
        if (typeof o.getDerivedStateFromProps == "function" || typeof le.getSnapshotBeforeUpdate == "function") {
          var Ae = null, ze = null, qe = null;
          if (typeof le.componentWillMount == "function" && le.componentWillMount.__suppressDeprecationWarning !== !0 ? Ae = "componentWillMount" : typeof le.UNSAFE_componentWillMount == "function" && (Ae = "UNSAFE_componentWillMount"), typeof le.componentWillReceiveProps == "function" && le.componentWillReceiveProps.__suppressDeprecationWarning !== !0 ? ze = "componentWillReceiveProps" : typeof le.UNSAFE_componentWillReceiveProps == "function" && (ze = "UNSAFE_componentWillReceiveProps"), typeof le.componentWillUpdate == "function" && le.componentWillUpdate.__suppressDeprecationWarning !== !0 ? qe = "componentWillUpdate" : typeof le.UNSAFE_componentWillUpdate == "function" && (qe = "UNSAFE_componentWillUpdate"), Ae !== null || ze !== null || qe !== null) {
            var Dt = Zn(o) || "Component", ln = typeof o.getDerivedStateFromProps == "function" ? "getDerivedStateFromProps()" : "getSnapshotBeforeUpdate()";
            Q1.has(Dt) || (Q1.add(Dt), d(`Unsafe legacy lifecycles will not be called for components using new component APIs.

%s uses %s but also contains the following legacy lifecycles:%s%s%s

The above lifecycles should be removed. Learn more about this warning here:
https://reactjs.org/link/unsafe-component-lifecycles`, Dt, ln, Ae !== null ? `
  ` + Ae : "", ze !== null ? `
  ` + ze : "", qe !== null ? `
  ` + qe : ""));
          }
        }
      }
      return h && JM(r, b, T), le;
    }
    function YU(r, o) {
      var f = o.state;
      typeof o.componentWillMount == "function" && o.componentWillMount(), typeof o.UNSAFE_componentWillMount == "function" && o.UNSAFE_componentWillMount(), f !== o.state && (d("%s.componentWillMount(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", Sn(r) || "Component"), rR.enqueueReplaceState(o, o.state, null));
    }
    function cD(r, o, f, h) {
      var b = o.state;
      if (typeof o.componentWillReceiveProps == "function" && o.componentWillReceiveProps(f, h), typeof o.UNSAFE_componentWillReceiveProps == "function" && o.UNSAFE_componentWillReceiveProps(f, h), o.state !== b) {
        {
          var T = Sn(r) || "Component";
          K1.has(T) || (K1.add(T), d("%s.componentWillReceiveProps(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", T));
        }
        rR.enqueueReplaceState(o, o.state, null);
      }
    }
    function oR(r, o, f, h) {
      KU(r, o, f);
      var b = r.stateNode;
      b.props = f, b.state = r.memoizedState, b.refs = {}, p1(r);
      var T = o.contextType;
      if (typeof T == "object" && T !== null)
        b.context = Bo(T);
      else {
        var N = Lm(r, o, !0);
        b.context = Fm(r, N);
      }
      {
        if (b.state === f) {
          var V = Zn(o) || "Component";
          Z1.has(V) || (Z1.add(V), d("%s: It is not recommended to assign props directly to state because updates to props won't be reflected in state. In most cases, it is better to use props directly.", V));
        }
        r.mode & Tr && Rl.recordLegacyContextWarning(r, b), Rl.recordUnsafeLifecycleWarnings(r, b);
      }
      b.state = r.memoizedState;
      var Z = o.getDerivedStateFromProps;
      if (typeof Z == "function" && (nR(r, o, Z, f), b.state = r.memoizedState), typeof o.getDerivedStateFromProps != "function" && typeof b.getSnapshotBeforeUpdate != "function" && (typeof b.UNSAFE_componentWillMount == "function" || typeof b.componentWillMount == "function") && (YU(r, b), qw(r, f, b, h), b.state = r.memoizedState), typeof b.componentDidMount == "function") {
        var se = Kn;
        se |= ml, (r.mode & ar) !== nn && (se |= nu), r.flags |= se;
      }
    }
    function XU(r, o, f, h) {
      var b = r.stateNode, T = r.memoizedProps;
      b.props = T;
      var N = b.context, V = o.contextType, Z = as;
      if (typeof V == "object" && V !== null)
        Z = Bo(V);
      else {
        var se = Lm(r, o, !0);
        Z = Fm(r, se);
      }
      var le = o.getDerivedStateFromProps, Te = typeof le == "function" || typeof b.getSnapshotBeforeUpdate == "function";
      !Te && (typeof b.UNSAFE_componentWillReceiveProps == "function" || typeof b.componentWillReceiveProps == "function") && (T !== f || N !== Z) && cD(r, b, f, Z), TI();
      var xe = r.memoizedState, Ae = b.state = xe;
      if (qw(r, f, b, h), Ae = r.memoizedState, T === f && xe === Ae && !kw() && !Kw()) {
        if (typeof b.componentDidMount == "function") {
          var ze = Kn;
          ze |= ml, (r.mode & ar) !== nn && (ze |= nu), r.flags |= ze;
        }
        return !1;
      }
      typeof le == "function" && (nR(r, o, le, f), Ae = r.memoizedState);
      var qe = Kw() || sD(r, o, T, f, xe, Ae, Z);
      if (qe) {
        if (!Te && (typeof b.UNSAFE_componentWillMount == "function" || typeof b.componentWillMount == "function") && (typeof b.componentWillMount == "function" && b.componentWillMount(), typeof b.UNSAFE_componentWillMount == "function" && b.UNSAFE_componentWillMount()), typeof b.componentDidMount == "function") {
          var Dt = Kn;
          Dt |= ml, (r.mode & ar) !== nn && (Dt |= nu), r.flags |= Dt;
        }
      } else {
        if (typeof b.componentDidMount == "function") {
          var ln = Kn;
          ln |= ml, (r.mode & ar) !== nn && (ln |= nu), r.flags |= ln;
        }
        r.memoizedProps = f, r.memoizedState = Ae;
      }
      return b.props = f, b.state = Ae, b.context = Z, qe;
    }
    function QU(r, o, f, h, b) {
      var T = o.stateNode;
      EI(r, o);
      var N = o.memoizedProps, V = o.type === o.elementType ? N : Pl(o.type, N);
      T.props = V;
      var Z = o.pendingProps, se = T.context, le = f.contextType, Te = as;
      if (typeof le == "object" && le !== null)
        Te = Bo(le);
      else {
        var xe = Lm(o, f, !0);
        Te = Fm(o, xe);
      }
      var Ae = f.getDerivedStateFromProps, ze = typeof Ae == "function" || typeof T.getSnapshotBeforeUpdate == "function";
      !ze && (typeof T.UNSAFE_componentWillReceiveProps == "function" || typeof T.componentWillReceiveProps == "function") && (N !== Z || se !== Te) && cD(o, T, h, Te), TI();
      var qe = o.memoizedState, Dt = T.state = qe;
      if (qw(o, h, T, b), Dt = o.memoizedState, N === Z && qe === Dt && !kw() && !Kw() && !re)
        return typeof T.componentDidUpdate == "function" && (N !== r.memoizedProps || qe !== r.memoizedState) && (o.flags |= Kn), typeof T.getSnapshotBeforeUpdate == "function" && (N !== r.memoizedProps || qe !== r.memoizedState) && (o.flags |= No), !1;
      typeof Ae == "function" && (nR(o, f, Ae, h), Dt = o.memoizedState);
      var ln = Kw() || sD(o, f, V, h, qe, Dt, Te) || // TODO: In some cases, we'll end up checking if context has changed twice,
      // both before and after `shouldComponentUpdate` has been called. Not ideal,
      // but I'm loath to refactor this function. This only happens for memoized
      // components so it's not that common.
      re;
      return ln ? (!ze && (typeof T.UNSAFE_componentWillUpdate == "function" || typeof T.componentWillUpdate == "function") && (typeof T.componentWillUpdate == "function" && T.componentWillUpdate(h, Dt, Te), typeof T.UNSAFE_componentWillUpdate == "function" && T.UNSAFE_componentWillUpdate(h, Dt, Te)), typeof T.componentDidUpdate == "function" && (o.flags |= Kn), typeof T.getSnapshotBeforeUpdate == "function" && (o.flags |= No)) : (typeof T.componentDidUpdate == "function" && (N !== r.memoizedProps || qe !== r.memoizedState) && (o.flags |= Kn), typeof T.getSnapshotBeforeUpdate == "function" && (N !== r.memoizedProps || qe !== r.memoizedState) && (o.flags |= No), o.memoizedProps = h, o.memoizedState = Dt), T.props = h, T.state = Dt, T.context = Te, ln;
    }
    function _p(r, o) {
      return {
        value: r,
        source: o,
        stack: ul(o),
        digest: null
      };
    }
    function iR(r, o, f) {
      return {
        value: r,
        source: null,
        stack: f ?? null,
        digest: o ?? null
      };
    }
    function JU(r, o) {
      return !0;
    }
    function aR(r, o) {
      try {
        var f = JU(r, o);
        if (f === !1)
          return;
        var h = o.value, b = o.source, T = o.stack, N = T !== null ? T : "";
        if (h != null && h._suppressLogging) {
          if (r.tag === v)
            return;
          console.error(h);
        }
        var V = b ? Sn(b) : null, Z = V ? "The above error occurred in the <" + V + "> component:" : "The above error occurred in one of your React components:", se;
        if (r.tag === C)
          se = `Consider adding an error boundary to your tree to customize error handling behavior.
Visit https://reactjs.org/link/error-boundaries to learn more about error boundaries.`;
        else {
          var le = Sn(r) || "Anonymous";
          se = "React will try to recreate this component tree from scratch " + ("using the error boundary you provided, " + le + ".");
        }
        var Te = Z + `
` + N + `

` + ("" + se);
        console.error(Te);
      } catch (xe) {
        setTimeout(function() {
          throw xe;
        });
      }
    }
    var ZU = typeof WeakMap == "function" ? WeakMap : Map;
    function dD(r, o, f) {
      var h = Dc(Lr, f);
      h.tag = d1, h.payload = {
        element: null
      };
      var b = o.value;
      return h.callback = function() {
        GG(b), aR(r, o);
      }, h;
    }
    function sR(r, o, f) {
      var h = Dc(Lr, f);
      h.tag = d1;
      var b = r.type.getDerivedStateFromError;
      if (typeof b == "function") {
        var T = o.value;
        h.payload = function() {
          return b(T);
        }, h.callback = function() {
          wN(r), aR(r, o);
        };
      }
      var N = r.stateNode;
      return N !== null && typeof N.componentDidCatch == "function" && (h.callback = function() {
        wN(r), aR(r, o), typeof b != "function" && BG(this);
        var Z = o.value, se = o.stack;
        this.componentDidCatch(Z, {
          componentStack: se !== null ? se : ""
        }), typeof b != "function" && (Ki(r.lanes, hn) || d("%s: Error boundaries should implement getDerivedStateFromError(). In that method, return a state update to display an error message or fallback UI.", Sn(r) || "Unknown"));
      }), h;
    }
    function fD(r, o, f) {
      var h = r.pingCache, b;
      if (h === null ? (h = r.pingCache = new ZU(), b = /* @__PURE__ */ new Set(), h.set(o, b)) : (b = h.get(o), b === void 0 && (b = /* @__PURE__ */ new Set(), h.set(o, b))), !b.has(f)) {
        b.add(f);
        var T = WG.bind(null, r, o, f);
        Wi && pb(r, f), o.then(T, T);
      }
    }
    function e5(r, o, f, h) {
      var b = r.updateQueue;
      if (b === null) {
        var T = /* @__PURE__ */ new Set();
        T.add(f), r.updateQueue = T;
      } else
        b.add(f);
    }
    function t5(r, o) {
      var f = r.tag;
      if ((r.mode & Ln) === nn && (f === m || f === _ || f === K)) {
        var h = r.alternate;
        h ? (r.updateQueue = h.updateQueue, r.memoizedState = h.memoizedState, r.lanes = h.lanes) : (r.updateQueue = null, r.memoizedState = null);
      }
    }
    function pD(r) {
      var o = r;
      do {
        if (o.tag === D && FU(o))
          return o;
        o = o.return;
      } while (o !== null);
      return null;
    }
    function hD(r, o, f, h, b) {
      if ((r.mode & Ln) === nn) {
        if (r === o)
          r.flags |= jo;
        else {
          if (r.flags |= Zt, f.flags |= Ah, f.flags &= -52805, f.tag === v) {
            var T = f.alternate;
            if (T === null)
              f.tag = H;
            else {
              var N = Dc(Lr, hn);
              N.tag = Bw, zd(f, N, hn);
            }
          }
          f.lanes = kn(f.lanes, hn);
        }
        return r;
      }
      return r.flags |= jo, r.lanes = b, r;
    }
    function n5(r, o, f, h, b) {
      if (f.flags |= Gf, Wi && pb(r, b), h !== null && typeof h == "object" && typeof h.then == "function") {
        var T = h;
        t5(f), Pi() && f.mode & Ln && iI();
        var N = pD(o);
        if (N !== null) {
          N.flags &= ~fi, hD(N, o, f, r, b), N.mode & Ln && fD(r, T, b), e5(N, r, T);
          return;
        } else {
          if (!DS(b)) {
            fD(r, T, b), zR();
            return;
          }
          var V = new Error("A component suspended while responding to synchronous input. This will cause the UI to be replaced with a loading indicator. To fix, updates that suspend should be wrapped with startTransition.");
          h = V;
        }
      } else if (Pi() && f.mode & Ln) {
        iI();
        var Z = pD(o);
        if (Z !== null) {
          (Z.flags & jo) === tn && (Z.flags |= fi), hD(Z, o, f, r, b), ZT(_p(h, f));
          return;
        }
      }
      h = _p(h, f), FG(h);
      var se = o;
      do {
        switch (se.tag) {
          case C: {
            var le = h;
            se.flags |= jo;
            var Te = ap(b);
            se.lanes = kn(se.lanes, Te);
            var xe = dD(se, le, Te);
            h1(se, xe);
            return;
          }
          case v:
            var Ae = h, ze = se.type, qe = se.stateNode;
            if ((se.flags & Zt) === tn && (typeof ze.getDerivedStateFromError == "function" || qe !== null && typeof qe.componentDidCatch == "function" && !pN(qe))) {
              se.flags |= jo;
              var Dt = ap(b);
              se.lanes = kn(se.lanes, Dt);
              var ln = sR(se, Ae, Dt);
              h1(se, ln);
              return;
            }
            break;
        }
        se = se.return;
      } while (se !== null);
    }
    function r5() {
      return null;
    }
    var Qy = n.ReactCurrentOwner, Ml = !1, lR, Jy, uR, cR, dR, Ap, fR, yx, Zy;
    lR = {}, Jy = {}, uR = {}, cR = {}, dR = {}, Ap = !1, fR = {}, yx = {}, Zy = {};
    function ma(r, o, f, h) {
      r === null ? o.child = vI(o, null, f, h) : o.child = jm(o, r.child, f, h);
    }
    function o5(r, o, f, h) {
      o.child = jm(o, r.child, null, h), o.child = jm(o, null, f, h);
    }
    function mD(r, o, f, h, b) {
      if (o.type !== o.elementType) {
        var T = f.propTypes;
        T && El(
          T,
          h,
          // Resolved props
          "prop",
          Zn(f)
        );
      }
      var N = f.render, V = o.ref, Z, se;
      Hm(o, b), da(o);
      {
        if (Qy.current = o, Do(!0), Z = qm(r, o, N, h, V, b), se = Km(), o.mode & Tr) {
          Jr(!0);
          try {
            Z = qm(r, o, N, h, V, b), se = Km();
          } finally {
            Jr(!1);
          }
        }
        Do(!1);
      }
      return fa(), r !== null && !Ml ? (II(r, o, b), Nc(r, o, b)) : (Pi() && se && qT(o), o.flags |= ts, ma(r, o, Z, b), o.child);
    }
    function gD(r, o, f, h, b) {
      if (r === null) {
        var T = f.type;
        if (u4(T) && f.compare === null && // SimpleMemoComponent codepath doesn't resolve outer props either.
        f.defaultProps === void 0) {
          var N = T;
          return N = ng(T), o.tag = K, o.type = N, mR(o, T), vD(r, o, N, h, b);
        }
        {
          var V = T.propTypes;
          if (V && El(
            V,
            h,
            // Resolved props
            "prop",
            Zn(T)
          ), f.defaultProps !== void 0) {
            var Z = Zn(T) || "Unknown";
            Zy[Z] || (d("%s: Support for defaultProps will be removed from memo components in a future major release. Use JavaScript default parameters instead.", Z), Zy[Z] = !0);
          }
        }
        var se = QR(f.type, null, h, o, o.mode, b);
        return se.ref = o.ref, se.return = o, o.child = se, se;
      }
      {
        var le = f.type, Te = le.propTypes;
        Te && El(
          Te,
          h,
          // Resolved props
          "prop",
          Zn(le)
        );
      }
      var xe = r.child, Ae = SR(r, b);
      if (!Ae) {
        var ze = xe.memoizedProps, qe = f.compare;
        if (qe = qe !== null ? qe : qt, qe(ze, h) && r.ref === o.ref)
          return Nc(r, o, b);
      }
      o.flags |= ts;
      var Dt = Vp(xe, h);
      return Dt.ref = o.ref, Dt.return = o, o.child = Dt, Dt;
    }
    function vD(r, o, f, h, b) {
      if (o.type !== o.elementType) {
        var T = o.elementType;
        if (T.$$typeof === Le) {
          var N = T, V = N._payload, Z = N._init;
          try {
            T = Z(V);
          } catch {
            T = null;
          }
          var se = T && T.propTypes;
          se && El(
            se,
            h,
            // Resolved (SimpleMemoComponent has no defaultProps)
            "prop",
            Zn(T)
          );
        }
      }
      if (r !== null) {
        var le = r.memoizedProps;
        if (qt(le, h) && r.ref === o.ref && // Prevent bailout if the implementation changed due to hot reload.
        o.type === r.type)
          if (Ml = !1, o.pendingProps = h = le, SR(r, b))
            (r.flags & Ah) !== tn && (Ml = !0);
          else return o.lanes = r.lanes, Nc(r, o, b);
      }
      return pR(r, o, f, h, b);
    }
    function yD(r, o, f) {
      var h = o.pendingProps, b = h.children, T = r !== null ? r.memoizedState : null;
      if (h.mode === "hidden" || X)
        if ((o.mode & Ln) === nn) {
          var N = {
            baseLanes: at,
            cachePool: null,
            transitions: null
          };
          o.memoizedState = N, Ix(o, f);
        } else if (Ki(f, qi)) {
          var Te = {
            baseLanes: at,
            cachePool: null,
            transitions: null
          };
          o.memoizedState = Te;
          var xe = T !== null ? T.baseLanes : f;
          Ix(o, xe);
        } else {
          var V = null, Z;
          if (T !== null) {
            var se = T.baseLanes;
            Z = kn(se, f);
          } else
            Z = f;
          o.lanes = o.childLanes = qi;
          var le = {
            baseLanes: Z,
            cachePool: V,
            transitions: null
          };
          return o.memoizedState = le, o.updateQueue = null, Ix(o, Z), null;
        }
      else {
        var Ae;
        T !== null ? (Ae = kn(T.baseLanes, f), o.memoizedState = null) : Ae = f, Ix(o, Ae);
      }
      return ma(r, o, b, f), o.child;
    }
    function i5(r, o, f) {
      var h = o.pendingProps;
      return ma(r, o, h, f), o.child;
    }
    function a5(r, o, f) {
      var h = o.pendingProps.children;
      return ma(r, o, h, f), o.child;
    }
    function s5(r, o, f) {
      {
        o.flags |= Kn;
        {
          var h = o.stateNode;
          h.effectDuration = 0, h.passiveEffectDuration = 0;
        }
      }
      var b = o.pendingProps, T = b.children;
      return ma(r, o, T, f), o.child;
    }
    function bD(r, o) {
      var f = o.ref;
      (r === null && f !== null || r !== null && r.ref !== f) && (o.flags |= oo, o.flags |= Sd);
    }
    function pR(r, o, f, h, b) {
      if (o.type !== o.elementType) {
        var T = f.propTypes;
        T && El(
          T,
          h,
          // Resolved props
          "prop",
          Zn(f)
        );
      }
      var N;
      {
        var V = Lm(o, f, !0);
        N = Fm(o, V);
      }
      var Z, se;
      Hm(o, b), da(o);
      {
        if (Qy.current = o, Do(!0), Z = qm(r, o, f, h, N, b), se = Km(), o.mode & Tr) {
          Jr(!0);
          try {
            Z = qm(r, o, f, h, N, b), se = Km();
          } finally {
            Jr(!1);
          }
        }
        Do(!1);
      }
      return fa(), r !== null && !Ml ? (II(r, o, b), Nc(r, o, b)) : (Pi() && se && qT(o), o.flags |= ts, ma(r, o, Z, b), o.child);
    }
    function CD(r, o, f, h, b) {
      {
        switch (E4(o)) {
          case !1: {
            var T = o.stateNode, N = o.type, V = new N(o.memoizedProps, T.context), Z = V.state;
            T.updater.enqueueSetState(T, Z, null);
            break;
          }
          case !0: {
            o.flags |= Zt, o.flags |= jo;
            var se = new Error("Simulated error coming from DevTools"), le = ap(b);
            o.lanes = kn(o.lanes, le);
            var Te = sR(o, _p(se, o), le);
            h1(o, Te);
            break;
          }
        }
        if (o.type !== o.elementType) {
          var xe = f.propTypes;
          xe && El(
            xe,
            h,
            // Resolved props
            "prop",
            Zn(f)
          );
        }
      }
      var Ae;
      bu(f) ? (Ae = !0, Mw(o)) : Ae = !1, Hm(o, b);
      var ze = o.stateNode, qe;
      ze === null ? (Cx(r, o), uD(o, f, h), oR(o, f, h, b), qe = !0) : r === null ? qe = XU(o, f, h, b) : qe = QU(r, o, f, h, b);
      var Dt = hR(r, o, f, qe, Ae, b);
      {
        var ln = o.stateNode;
        qe && ln.props !== h && (Ap || d("It looks like %s is reassigning its own `this.props` while rendering. This is not supported and can lead to confusing bugs.", Sn(o) || "a component"), Ap = !0);
      }
      return Dt;
    }
    function hR(r, o, f, h, b, T) {
      bD(r, o);
      var N = (o.flags & Zt) !== tn;
      if (!h && !N)
        return b && tI(o, f, !1), Nc(r, o, T);
      var V = o.stateNode;
      Qy.current = o;
      var Z;
      if (N && typeof f.getDerivedStateFromError != "function")
        Z = null, oD();
      else {
        da(o);
        {
          if (Do(!0), Z = V.render(), o.mode & Tr) {
            Jr(!0);
            try {
              V.render();
            } finally {
              Jr(!1);
            }
          }
          Do(!1);
        }
        fa();
      }
      return o.flags |= ts, r !== null && N ? o5(r, o, Z, T) : ma(r, o, Z, T), o.memoizedState = V.state, b && tI(o, f, !0), o.child;
    }
    function SD(r) {
      var o = r.stateNode;
      o.pendingContext ? ZM(r, o.pendingContext, o.pendingContext !== o.context) : o.context && ZM(r, o.context, !1), m1(r, o.containerInfo);
    }
    function l5(r, o, f) {
      if (SD(o), r === null)
        throw new Error("Should have a current fiber. This is a bug in React.");
      var h = o.pendingProps, b = o.memoizedState, T = b.element;
      EI(r, o), qw(o, h, null, f);
      var N = o.memoizedState;
      o.stateNode;
      var V = N.element;
      if (b.isDehydrated) {
        var Z = {
          element: V,
          isDehydrated: !1,
          cache: N.cache,
          pendingSuspenseBoundaries: N.pendingSuspenseBoundaries,
          transitions: N.transitions
        }, se = o.updateQueue;
        if (se.baseState = Z, o.memoizedState = Z, o.flags & fi) {
          var le = _p(new Error("There was an error while hydrating. Because the error happened outside of a Suspense boundary, the entire root will switch to client rendering."), o);
          return wD(r, o, V, f, le);
        } else if (V !== T) {
          var Te = _p(new Error("This root received an early update, before anything was able hydrate. Switched the entire root to client rendering."), o);
          return wD(r, o, V, f, Te);
        } else {
          dU(o);
          var xe = vI(o, null, V, f);
          o.child = xe;
          for (var Ae = xe; Ae; )
            Ae.flags = Ae.flags & ~Qr | Bi, Ae = Ae.sibling;
        }
      } else {
        if ($m(), V === T)
          return Nc(r, o, f);
        ma(r, o, V, f);
      }
      return o.child;
    }
    function wD(r, o, f, h, b) {
      return $m(), ZT(b), o.flags |= fi, ma(r, o, f, h), o.child;
    }
    function u5(r, o, f) {
      kI(o), r === null && JT(o);
      var h = o.type, b = o.pendingProps, T = r !== null ? r.memoizedProps : null, N = b.children, V = NT(h, b);
      return V ? N = null : T !== null && NT(h, T) && (o.flags |= Ia), bD(r, o), ma(r, o, N, f), o.child;
    }
    function c5(r, o) {
      return r === null && JT(o), null;
    }
    function d5(r, o, f, h) {
      Cx(r, o);
      var b = o.pendingProps, T = f, N = T._payload, V = T._init, Z = V(N);
      o.type = Z;
      var se = o.tag = c4(Z), le = Pl(Z, b), Te;
      switch (se) {
        case m:
          return mR(o, Z), o.type = Z = ng(Z), Te = pR(null, o, Z, le, h), Te;
        case v:
          return o.type = Z = GR(Z), Te = CD(null, o, Z, le, h), Te;
        case _:
          return o.type = Z = WR(Z), Te = mD(null, o, Z, le, h), Te;
        case z: {
          if (o.type !== o.elementType) {
            var xe = Z.propTypes;
            xe && El(
              xe,
              le,
              // Resolved for outer only
              "prop",
              Zn(Z)
            );
          }
          return Te = gD(
            null,
            o,
            Z,
            Pl(Z.type, le),
            // The inner type can have defaults too
            h
          ), Te;
        }
      }
      var Ae = "";
      throw Z !== null && typeof Z == "object" && Z.$$typeof === Le && (Ae = " Did you wrap a component in React.lazy() more than once?"), new Error("Element type is invalid. Received a promise that resolves to: " + Z + ". " + ("Lazy element type must resolve to a class or function." + Ae));
    }
    function f5(r, o, f, h, b) {
      Cx(r, o), o.tag = v;
      var T;
      return bu(f) ? (T = !0, Mw(o)) : T = !1, Hm(o, b), uD(o, f, h), oR(o, f, h, b), hR(null, o, f, !0, T, b);
    }
    function p5(r, o, f, h) {
      Cx(r, o);
      var b = o.pendingProps, T;
      {
        var N = Lm(o, f, !1);
        T = Fm(o, N);
      }
      Hm(o, h);
      var V, Z;
      da(o);
      {
        if (f.prototype && typeof f.prototype.render == "function") {
          var se = Zn(f) || "Unknown";
          lR[se] || (d("The <%s /> component appears to have a render method, but doesn't extend React.Component. This is likely to cause errors. Change %s to extend React.Component instead.", se, se), lR[se] = !0);
        }
        o.mode & Tr && Rl.recordLegacyContextWarning(o, null), Do(!0), Qy.current = o, V = qm(null, o, f, b, T, h), Z = Km(), Do(!1);
      }
      if (fa(), o.flags |= ts, typeof V == "object" && V !== null && typeof V.render == "function" && V.$$typeof === void 0) {
        var le = Zn(f) || "Unknown";
        Jy[le] || (d("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", le, le, le), Jy[le] = !0);
      }
      if (
        // Run these checks in production only if the flag is off.
        // Eventually we'll delete this branch altogether.
        typeof V == "object" && V !== null && typeof V.render == "function" && V.$$typeof === void 0
      ) {
        {
          var Te = Zn(f) || "Unknown";
          Jy[Te] || (d("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", Te, Te, Te), Jy[Te] = !0);
        }
        o.tag = v, o.memoizedState = null, o.updateQueue = null;
        var xe = !1;
        return bu(f) ? (xe = !0, Mw(o)) : xe = !1, o.memoizedState = V.state !== null && V.state !== void 0 ? V.state : null, p1(o), lD(o, V), oR(o, f, b, h), hR(null, o, f, !0, xe, h);
      } else {
        if (o.tag = m, o.mode & Tr) {
          Jr(!0);
          try {
            V = qm(null, o, f, b, T, h), Z = Km();
          } finally {
            Jr(!1);
          }
        }
        return Pi() && Z && qT(o), ma(null, o, V, h), mR(o, f), o.child;
      }
    }
    function mR(r, o) {
      {
        if (o && o.childContextTypes && d("%s(...): childContextTypes cannot be defined on a function component.", o.displayName || o.name || "Component"), r.ref !== null) {
          var f = "", h = wi();
          h && (f += `

Check the render method of \`` + h + "`.");
          var b = h || "", T = r._debugSource;
          T && (b = T.fileName + ":" + T.lineNumber), dR[b] || (dR[b] = !0, d("Function components cannot be given refs. Attempts to access this ref will fail. Did you mean to use React.forwardRef()?%s", f));
        }
        if (o.defaultProps !== void 0) {
          var N = Zn(o) || "Unknown";
          Zy[N] || (d("%s: Support for defaultProps will be removed from function components in a future major release. Use JavaScript default parameters instead.", N), Zy[N] = !0);
        }
        if (typeof o.getDerivedStateFromProps == "function") {
          var V = Zn(o) || "Unknown";
          cR[V] || (d("%s: Function components do not support getDerivedStateFromProps.", V), cR[V] = !0);
        }
        if (typeof o.contextType == "object" && o.contextType !== null) {
          var Z = Zn(o) || "Unknown";
          uR[Z] || (d("%s: Function components do not support contextType.", Z), uR[Z] = !0);
        }
      }
    }
    var gR = {
      dehydrated: null,
      treeContext: null,
      retryLane: nr
    };
    function vR(r) {
      return {
        baseLanes: r,
        cachePool: r5(),
        transitions: null
      };
    }
    function h5(r, o) {
      var f = null;
      return {
        baseLanes: kn(r.baseLanes, o),
        cachePool: f,
        transitions: r.transitions
      };
    }
    function m5(r, o, f, h) {
      if (o !== null) {
        var b = o.memoizedState;
        if (b === null)
          return !1;
      }
      return y1(r, Vy);
    }
    function g5(r, o) {
      return sp(r.childLanes, o);
    }
    function xD(r, o, f) {
      var h = o.pendingProps;
      T4(o) && (o.flags |= Zt);
      var b = Ol.current, T = !1, N = (o.flags & Zt) !== tn;
      if (N || m5(b, r) ? (T = !0, o.flags &= ~Zt) : (r === null || r.memoizedState !== null) && (b = LU(b, MI)), b = Bm(b), Vd(o, b), r === null) {
        JT(o);
        var V = o.memoizedState;
        if (V !== null) {
          var Z = V.dehydrated;
          if (Z !== null)
            return S5(o, Z);
        }
        var se = h.children, le = h.fallback;
        if (T) {
          var Te = v5(o, se, le, f), xe = o.child;
          return xe.memoizedState = vR(f), o.memoizedState = gR, Te;
        } else
          return yR(o, se);
      } else {
        var Ae = r.memoizedState;
        if (Ae !== null) {
          var ze = Ae.dehydrated;
          if (ze !== null)
            return w5(r, o, N, h, ze, Ae, f);
        }
        if (T) {
          var qe = h.fallback, Dt = h.children, ln = b5(r, o, Dt, qe, f), Jt = o.child, Qn = r.child.memoizedState;
          return Jt.memoizedState = Qn === null ? vR(f) : h5(Qn, f), Jt.childLanes = g5(r, f), o.memoizedState = gR, ln;
        } else {
          var Un = h.children, Ie = y5(r, o, Un, f);
          return o.memoizedState = null, Ie;
        }
      }
    }
    function yR(r, o, f) {
      var h = r.mode, b = {
        mode: "visible",
        children: o
      }, T = bR(b, h);
      return T.return = r, r.child = T, T;
    }
    function v5(r, o, f, h) {
      var b = r.mode, T = r.child, N = {
        mode: "hidden",
        children: o
      }, V, Z;
      return (b & Ln) === nn && T !== null ? (V = T, V.childLanes = at, V.pendingProps = N, r.mode & ir && (V.actualDuration = 0, V.actualStartTime = -1, V.selfBaseDuration = 0, V.treeBaseDuration = 0), Z = Xd(f, b, h, null)) : (V = bR(N, b), Z = Xd(f, b, h, null)), V.return = r, Z.return = r, V.sibling = Z, r.child = V, Z;
    }
    function bR(r, o, f) {
      return EN(r, o, at, null);
    }
    function ED(r, o) {
      return Vp(r, o);
    }
    function y5(r, o, f, h) {
      var b = r.child, T = b.sibling, N = ED(b, {
        mode: "visible",
        children: f
      });
      if ((o.mode & Ln) === nn && (N.lanes = h), N.return = o, N.sibling = null, T !== null) {
        var V = o.deletions;
        V === null ? (o.deletions = [T], o.flags |= Ma) : V.push(T);
      }
      return o.child = N, N;
    }
    function b5(r, o, f, h, b) {
      var T = o.mode, N = r.child, V = N.sibling, Z = {
        mode: "hidden",
        children: f
      }, se;
      if (
        // In legacy mode, we commit the primary tree as if it successfully
        // completed, even though it's in an inconsistent state.
        (T & Ln) === nn && // Make sure we're on the second pass, i.e. the primary child fragment was
        // already cloned. In legacy mode, the only case where this isn't true is
        // when DevTools forces us to display a fallback; we skip the first render
        // pass entirely and go straight to rendering the fallback. (In Concurrent
        // Mode, SuspenseList can also trigger this scenario, but this is a legacy-
        // only codepath.)
        o.child !== N
      ) {
        var le = o.child;
        se = le, se.childLanes = at, se.pendingProps = Z, o.mode & ir && (se.actualDuration = 0, se.actualStartTime = -1, se.selfBaseDuration = N.selfBaseDuration, se.treeBaseDuration = N.treeBaseDuration), o.deletions = null;
      } else
        se = ED(N, Z), se.subtreeFlags = N.subtreeFlags & yo;
      var Te;
      return V !== null ? Te = Vp(V, h) : (Te = Xd(h, T, b, null), Te.flags |= Qr), Te.return = o, se.return = o, se.sibling = Te, o.child = se, Te;
    }
    function bx(r, o, f, h) {
      h !== null && ZT(h), jm(o, r.child, null, f);
      var b = o.pendingProps, T = b.children, N = yR(o, T);
      return N.flags |= Qr, o.memoizedState = null, N;
    }
    function C5(r, o, f, h, b) {
      var T = o.mode, N = {
        mode: "visible",
        children: f
      }, V = bR(N, T), Z = Xd(h, T, b, null);
      return Z.flags |= Qr, V.return = o, Z.return = o, V.sibling = Z, o.child = V, (o.mode & Ln) !== nn && jm(o, r.child, null, b), Z;
    }
    function S5(r, o, f) {
      return (r.mode & Ln) === nn ? (d("Cannot hydrate Suspense in legacy mode. Switch from ReactDOM.hydrate(element, container) to ReactDOMClient.hydrateRoot(container, <App />).render(element) or remove the Suspense components from the server rendered components."), r.lanes = hn) : AT(o) ? r.lanes = pi : r.lanes = qi, null;
    }
    function w5(r, o, f, h, b, T, N) {
      if (f)
        if (o.flags & fi) {
          o.flags &= ~fi;
          var Ie = iR(new Error("There was an error while hydrating this Suspense boundary. Switched to client rendering."));
          return bx(r, o, N, Ie);
        } else {
          if (o.memoizedState !== null)
            return o.child = r.child, o.flags |= Zt, null;
          var Ke = h.children, De = h.fallback, ft = C5(r, o, Ke, De, N), $t = o.child;
          return $t.memoizedState = vR(N), o.memoizedState = gR, ft;
        }
      else {
        if (uU(), (o.mode & Ln) === nn)
          return bx(
            r,
            o,
            N,
            // TODO: When we delete legacy mode, we should make this error argument
            // required — every concurrent mode path that causes hydration to
            // de-opt to client rendering should have an error message.
            null
          );
        if (AT(b)) {
          var V, Z, se;
          {
            var le = RB(b);
            V = le.digest, Z = le.message, se = le.stack;
          }
          var Te;
          Z ? Te = new Error(Z) : Te = new Error("The server could not finish this Suspense boundary, likely due to an error during server rendering. Switched to client rendering.");
          var xe = iR(Te, V, se);
          return bx(r, o, N, xe);
        }
        var Ae = Ki(N, r.childLanes);
        if (Ml || Ae) {
          var ze = Mx();
          if (ze !== null) {
            var qe = ny(ze, N);
            if (qe !== nr && qe !== T.retryLane) {
              T.retryLane = qe;
              var Dt = Lr;
              za(r, qe), ii(ze, r, qe, Dt);
            }
          }
          zR();
          var ln = iR(new Error("This Suspense boundary received an update before it finished hydrating. This caused the boundary to switch to client rendering. The usual way to fix this is to wrap the original update in startTransition."));
          return bx(r, o, N, ln);
        } else if (qM(b)) {
          o.flags |= Zt, o.child = r.child;
          var Jt = qG.bind(null, r);
          return OB(b, Jt), null;
        } else {
          fU(o, b, T.treeContext);
          var Qn = h.children, Un = yR(o, Qn);
          return Un.flags |= Bi, Un;
        }
      }
    }
    function TD(r, o, f) {
      r.lanes = kn(r.lanes, o);
      var h = r.alternate;
      h !== null && (h.lanes = kn(h.lanes, o)), u1(r.return, o, f);
    }
    function x5(r, o, f) {
      for (var h = o; h !== null; ) {
        if (h.tag === D) {
          var b = h.memoizedState;
          b !== null && TD(h, f, r);
        } else if (h.tag === U)
          TD(h, f, r);
        else if (h.child !== null) {
          h.child.return = h, h = h.child;
          continue;
        }
        if (h === r)
          return;
        for (; h.sibling === null; ) {
          if (h.return === null || h.return === r)
            return;
          h = h.return;
        }
        h.sibling.return = h.return, h = h.sibling;
      }
    }
    function E5(r) {
      for (var o = r, f = null; o !== null; ) {
        var h = o.alternate;
        h !== null && Qw(h) === null && (f = o), o = o.sibling;
      }
      return f;
    }
    function T5(r) {
      if (r !== void 0 && r !== "forwards" && r !== "backwards" && r !== "together" && !fR[r])
        if (fR[r] = !0, typeof r == "string")
          switch (r.toLowerCase()) {
            case "together":
            case "forwards":
            case "backwards": {
              d('"%s" is not a valid value for revealOrder on <SuspenseList />. Use lowercase "%s" instead.', r, r.toLowerCase());
              break;
            }
            case "forward":
            case "backward": {
              d('"%s" is not a valid value for revealOrder on <SuspenseList />. React uses the -s suffix in the spelling. Use "%ss" instead.', r, r.toLowerCase());
              break;
            }
            default:
              d('"%s" is not a supported revealOrder on <SuspenseList />. Did you mean "together", "forwards" or "backwards"?', r);
              break;
          }
        else
          d('%s is not a supported value for revealOrder on <SuspenseList />. Did you mean "together", "forwards" or "backwards"?', r);
    }
    function R5(r, o) {
      r !== void 0 && !yx[r] && (r !== "collapsed" && r !== "hidden" ? (yx[r] = !0, d('"%s" is not a supported value for tail on <SuspenseList />. Did you mean "collapsed" or "hidden"?', r)) : o !== "forwards" && o !== "backwards" && (yx[r] = !0, d('<SuspenseList tail="%s" /> is only valid if revealOrder is "forwards" or "backwards". Did you mean to specify revealOrder="forwards"?', r)));
    }
    function RD(r, o) {
      {
        var f = Dn(r), h = !f && typeof xn(r) == "function";
        if (f || h) {
          var b = f ? "array" : "iterable";
          return d("A nested %s was passed to row #%s in <SuspenseList />. Wrap it in an additional SuspenseList to configure its revealOrder: <SuspenseList revealOrder=...> ... <SuspenseList revealOrder=...>{%s}</SuspenseList> ... </SuspenseList>", b, o, b), !1;
        }
      }
      return !0;
    }
    function O5(r, o) {
      if ((o === "forwards" || o === "backwards") && r !== void 0 && r !== null && r !== !1)
        if (Dn(r)) {
          for (var f = 0; f < r.length; f++)
            if (!RD(r[f], f))
              return;
        } else {
          var h = xn(r);
          if (typeof h == "function") {
            var b = h.call(r);
            if (b)
              for (var T = b.next(), N = 0; !T.done; T = b.next()) {
                if (!RD(T.value, N))
                  return;
                N++;
              }
          } else
            d('A single row was passed to a <SuspenseList revealOrder="%s" />. This is not useful since it needs multiple rows. Did you mean to pass multiple children or an array?', o);
        }
    }
    function CR(r, o, f, h, b) {
      var T = r.memoizedState;
      T === null ? r.memoizedState = {
        isBackwards: o,
        rendering: null,
        renderingStartTime: 0,
        last: h,
        tail: f,
        tailMode: b
      } : (T.isBackwards = o, T.rendering = null, T.renderingStartTime = 0, T.last = h, T.tail = f, T.tailMode = b);
    }
    function OD(r, o, f) {
      var h = o.pendingProps, b = h.revealOrder, T = h.tail, N = h.children;
      T5(b), R5(T, b), O5(N, b), ma(r, o, N, f);
      var V = Ol.current, Z = y1(V, Vy);
      if (Z)
        V = b1(V, Vy), o.flags |= Zt;
      else {
        var se = r !== null && (r.flags & Zt) !== tn;
        se && x5(o, o.child, f), V = Bm(V);
      }
      if (Vd(o, V), (o.mode & Ln) === nn)
        o.memoizedState = null;
      else
        switch (b) {
          case "forwards": {
            var le = E5(o.child), Te;
            le === null ? (Te = o.child, o.child = null) : (Te = le.sibling, le.sibling = null), CR(
              o,
              !1,
              // isBackwards
              Te,
              le,
              T
            );
            break;
          }
          case "backwards": {
            var xe = null, Ae = o.child;
            for (o.child = null; Ae !== null; ) {
              var ze = Ae.alternate;
              if (ze !== null && Qw(ze) === null) {
                o.child = Ae;
                break;
              }
              var qe = Ae.sibling;
              Ae.sibling = xe, xe = Ae, Ae = qe;
            }
            CR(
              o,
              !0,
              // isBackwards
              xe,
              null,
              // last
              T
            );
            break;
          }
          case "together": {
            CR(
              o,
              !1,
              // isBackwards
              null,
              // tail
              null,
              // last
              void 0
            );
            break;
          }
          default:
            o.memoizedState = null;
        }
      return o.child;
    }
    function k5(r, o, f) {
      m1(o, o.stateNode.containerInfo);
      var h = o.pendingProps;
      return r === null ? o.child = jm(o, null, h, f) : ma(r, o, h, f), o.child;
    }
    var kD = !1;
    function P5(r, o, f) {
      var h = o.type, b = h._context, T = o.pendingProps, N = o.memoizedProps, V = T.value;
      {
        "value" in T || kD || (kD = !0, d("The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?"));
        var Z = o.type.propTypes;
        Z && El(Z, T, "prop", "Context.Provider");
      }
      if (CI(o, b, V), N !== null) {
        var se = N.value;
        if (ut(se, V)) {
          if (N.children === T.children && !kw())
            return Nc(r, o, f);
        } else
          TU(o, b, f);
      }
      var le = T.children;
      return ma(r, o, le, f), o.child;
    }
    var PD = !1;
    function M5(r, o, f) {
      var h = o.type;
      h._context === void 0 ? h !== h.Consumer && (PD || (PD = !0, d("Rendering <Context> directly is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?"))) : h = h._context;
      var b = o.pendingProps, T = b.children;
      typeof T != "function" && d("A context consumer was rendered with multiple children, or a child that isn't a function. A context consumer expects a single child that is a function. If you did pass a function, make sure there is no trailing or leading whitespace around it."), Hm(o, f);
      var N = Bo(h);
      da(o);
      var V;
      return Qy.current = o, Do(!0), V = T(N), Do(!1), fa(), o.flags |= ts, ma(r, o, V, f), o.child;
    }
    function eb() {
      Ml = !0;
    }
    function Cx(r, o) {
      (o.mode & Ln) === nn && r !== null && (r.alternate = null, o.alternate = null, o.flags |= Qr);
    }
    function Nc(r, o, f) {
      return r !== null && (o.dependencies = r.dependencies), oD(), fb(o.lanes), Ki(f, o.childLanes) ? (xU(r, o), o.child) : null;
    }
    function I5(r, o, f) {
      {
        var h = o.return;
        if (h === null)
          throw new Error("Cannot swap the root fiber.");
        if (r.alternate = null, o.alternate = null, f.index = o.index, f.sibling = o.sibling, f.return = o.return, f.ref = o.ref, o === h.child)
          h.child = f;
        else {
          var b = h.child;
          if (b === null)
            throw new Error("Expected parent to have a child.");
          for (; b.sibling !== o; )
            if (b = b.sibling, b === null)
              throw new Error("Expected to find the previous sibling.");
          b.sibling = f;
        }
        var T = h.deletions;
        return T === null ? (h.deletions = [r], h.flags |= Ma) : T.push(r), f.flags |= Qr, f;
      }
    }
    function SR(r, o) {
      var f = r.lanes;
      return !!Ki(f, o);
    }
    function D5(r, o, f) {
      switch (o.tag) {
        case C:
          SD(o), o.stateNode, $m();
          break;
        case R:
          kI(o);
          break;
        case v: {
          var h = o.type;
          bu(h) && Mw(o);
          break;
        }
        case w:
          m1(o, o.stateNode.containerInfo);
          break;
        case F: {
          var b = o.memoizedProps.value, T = o.type._context;
          CI(o, T, b);
          break;
        }
        case P:
          {
            var N = Ki(f, o.childLanes);
            N && (o.flags |= Kn);
            {
              var V = o.stateNode;
              V.effectDuration = 0, V.passiveEffectDuration = 0;
            }
          }
          break;
        case D: {
          var Z = o.memoizedState;
          if (Z !== null) {
            if (Z.dehydrated !== null)
              return Vd(o, Bm(Ol.current)), o.flags |= Zt, null;
            var se = o.child, le = se.childLanes;
            if (Ki(f, le))
              return xD(r, o, f);
            Vd(o, Bm(Ol.current));
            var Te = Nc(r, o, f);
            return Te !== null ? Te.sibling : null;
          } else
            Vd(o, Bm(Ol.current));
          break;
        }
        case U: {
          var xe = (r.flags & Zt) !== tn, Ae = Ki(f, o.childLanes);
          if (xe) {
            if (Ae)
              return OD(r, o, f);
            o.flags |= Zt;
          }
          var ze = o.memoizedState;
          if (ze !== null && (ze.rendering = null, ze.tail = null, ze.lastEffect = null), Vd(o, Ol.current), Ae)
            break;
          return null;
        }
        case Y:
        case te:
          return o.lanes = at, yD(r, o, f);
      }
      return Nc(r, o, f);
    }
    function MD(r, o, f) {
      if (o._debugNeedsRemount && r !== null)
        return I5(r, o, QR(o.type, o.key, o.pendingProps, o._debugOwner || null, o.mode, o.lanes));
      if (r !== null) {
        var h = r.memoizedProps, b = o.pendingProps;
        if (h !== b || kw() || // Force a re-render if the implementation changed due to hot reload:
        o.type !== r.type)
          Ml = !0;
        else {
          var T = SR(r, f);
          if (!T && // If this is the second pass of an error or suspense boundary, there
          // may not be work scheduled on `current`, so we check for this flag.
          (o.flags & Zt) === tn)
            return Ml = !1, D5(r, o, f);
          (r.flags & Ah) !== tn ? Ml = !0 : Ml = !1;
        }
      } else if (Ml = !1, Pi() && rU(o)) {
        var N = o.index, V = oU();
        oI(o, V, N);
      }
      switch (o.lanes = at, o.tag) {
        case y:
          return p5(r, o, o.type, f);
        case Q: {
          var Z = o.elementType;
          return d5(r, o, Z, f);
        }
        case m: {
          var se = o.type, le = o.pendingProps, Te = o.elementType === se ? le : Pl(se, le);
          return pR(r, o, se, Te, f);
        }
        case v: {
          var xe = o.type, Ae = o.pendingProps, ze = o.elementType === xe ? Ae : Pl(xe, Ae);
          return CD(r, o, xe, ze, f);
        }
        case C:
          return l5(r, o, f);
        case R:
          return u5(r, o, f);
        case O:
          return c5(r, o);
        case D:
          return xD(r, o, f);
        case w:
          return k5(r, o, f);
        case _: {
          var qe = o.type, Dt = o.pendingProps, ln = o.elementType === qe ? Dt : Pl(qe, Dt);
          return mD(r, o, qe, ln, f);
        }
        case E:
          return i5(r, o, f);
        case k:
          return a5(r, o, f);
        case P:
          return s5(r, o, f);
        case F:
          return P5(r, o, f);
        case L:
          return M5(r, o, f);
        case z: {
          var Jt = o.type, Qn = o.pendingProps, Un = Pl(Jt, Qn);
          if (o.type !== o.elementType) {
            var Ie = Jt.propTypes;
            Ie && El(
              Ie,
              Un,
              // Resolved for outer only
              "prop",
              Zn(Jt)
            );
          }
          return Un = Pl(Jt.type, Un), gD(r, o, Jt, Un, f);
        }
        case K:
          return vD(r, o, o.type, o.pendingProps, f);
        case H: {
          var Ke = o.type, De = o.pendingProps, ft = o.elementType === Ke ? De : Pl(Ke, De);
          return f5(r, o, Ke, ft, f);
        }
        case U:
          return OD(r, o, f);
        case G:
          break;
        case Y:
          return yD(r, o, f);
      }
      throw new Error("Unknown unit of work tag (" + o.tag + "). This error is likely caused by a bug in React. Please file an issue.");
    }
    function Ym(r) {
      r.flags |= Kn;
    }
    function ID(r) {
      r.flags |= oo, r.flags |= Sd;
    }
    var DD, wR, ND, LD;
    DD = function(r, o, f, h) {
      for (var b = o.child; b !== null; ) {
        if (b.tag === R || b.tag === O)
          eB(r, b.stateNode);
        else if (b.tag !== w) {
          if (b.child !== null) {
            b.child.return = b, b = b.child;
            continue;
          }
        }
        if (b === o)
          return;
        for (; b.sibling === null; ) {
          if (b.return === null || b.return === o)
            return;
          b = b.return;
        }
        b.sibling.return = b.return, b = b.sibling;
      }
    }, wR = function(r, o) {
    }, ND = function(r, o, f, h, b) {
      var T = r.memoizedProps;
      if (T !== h) {
        var N = o.stateNode, V = g1(), Z = nB(N, f, T, h, b, V);
        o.updateQueue = Z, Z && Ym(o);
      }
    }, LD = function(r, o, f, h) {
      f !== h && Ym(o);
    };
    function tb(r, o) {
      if (!Pi())
        switch (r.tailMode) {
          case "hidden": {
            for (var f = r.tail, h = null; f !== null; )
              f.alternate !== null && (h = f), f = f.sibling;
            h === null ? r.tail = null : h.sibling = null;
            break;
          }
          case "collapsed": {
            for (var b = r.tail, T = null; b !== null; )
              b.alternate !== null && (T = b), b = b.sibling;
            T === null ? !o && r.tail !== null ? r.tail.sibling = null : r.tail = null : T.sibling = null;
            break;
          }
        }
    }
    function Ii(r) {
      var o = r.alternate !== null && r.alternate.child === r.child, f = at, h = tn;
      if (o) {
        if ((r.mode & ir) !== nn) {
          for (var Z = r.selfBaseDuration, se = r.child; se !== null; )
            f = kn(f, kn(se.lanes, se.childLanes)), h |= se.subtreeFlags & yo, h |= se.flags & yo, Z += se.treeBaseDuration, se = se.sibling;
          r.treeBaseDuration = Z;
        } else
          for (var le = r.child; le !== null; )
            f = kn(f, kn(le.lanes, le.childLanes)), h |= le.subtreeFlags & yo, h |= le.flags & yo, le.return = r, le = le.sibling;
        r.subtreeFlags |= h;
      } else {
        if ((r.mode & ir) !== nn) {
          for (var b = r.actualDuration, T = r.selfBaseDuration, N = r.child; N !== null; )
            f = kn(f, kn(N.lanes, N.childLanes)), h |= N.subtreeFlags, h |= N.flags, b += N.actualDuration, T += N.treeBaseDuration, N = N.sibling;
          r.actualDuration = b, r.treeBaseDuration = T;
        } else
          for (var V = r.child; V !== null; )
            f = kn(f, kn(V.lanes, V.childLanes)), h |= V.subtreeFlags, h |= V.flags, V.return = r, V = V.sibling;
        r.subtreeFlags |= h;
      }
      return r.childLanes = f, o;
    }
    function N5(r, o, f) {
      if (vU() && (o.mode & Ln) !== nn && (o.flags & Zt) === tn)
        return dI(o), $m(), o.flags |= fi | Gf | jo, !1;
      var h = Fw(o);
      if (f !== null && f.dehydrated !== null)
        if (r === null) {
          if (!h)
            throw new Error("A dehydrated suspense component was completed without a hydrated node. This is probably a bug in React.");
          if (mU(o), Ii(o), (o.mode & ir) !== nn) {
            var b = f !== null;
            if (b) {
              var T = o.child;
              T !== null && (o.treeBaseDuration -= T.treeBaseDuration);
            }
          }
          return !1;
        } else {
          if ($m(), (o.flags & Zt) === tn && (o.memoizedState = null), o.flags |= Kn, Ii(o), (o.mode & ir) !== nn) {
            var N = f !== null;
            if (N) {
              var V = o.child;
              V !== null && (o.treeBaseDuration -= V.treeBaseDuration);
            }
          }
          return !1;
        }
      else
        return fI(), !0;
    }
    function FD(r, o, f) {
      var h = o.pendingProps;
      switch (KT(o), o.tag) {
        case y:
        case Q:
        case K:
        case m:
        case _:
        case E:
        case k:
        case P:
        case L:
        case z:
          return Ii(o), null;
        case v: {
          var b = o.type;
          return bu(b) && Pw(o), Ii(o), null;
        }
        case C: {
          var T = o.stateNode;
          if (Vm(o), UT(o), S1(), T.pendingContext && (T.context = T.pendingContext, T.pendingContext = null), r === null || r.child === null) {
            var N = Fw(o);
            if (N)
              Ym(o);
            else if (r !== null) {
              var V = r.memoizedState;
              // Check if this is a client root
              (!V.isDehydrated || // Check if we reverted to client rendering (e.g. due to an error)
              (o.flags & fi) !== tn) && (o.flags |= No, fI());
            }
          }
          return wR(r, o), Ii(o), null;
        }
        case R: {
          v1(o);
          var Z = OI(), se = o.type;
          if (r !== null && o.stateNode != null)
            ND(r, o, se, h, Z), r.ref !== o.ref && ID(o);
          else {
            if (!h) {
              if (o.stateNode === null)
                throw new Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
              return Ii(o), null;
            }
            var le = g1(), Te = Fw(o);
            if (Te)
              pU(o, Z, le) && Ym(o);
            else {
              var xe = ZV(se, h, Z, le, o);
              DD(xe, o, !1, !1), o.stateNode = xe, tB(xe, se, h, Z) && Ym(o);
            }
            o.ref !== null && ID(o);
          }
          return Ii(o), null;
        }
        case O: {
          var Ae = h;
          if (r && o.stateNode != null) {
            var ze = r.memoizedProps;
            LD(r, o, ze, Ae);
          } else {
            if (typeof Ae != "string" && o.stateNode === null)
              throw new Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
            var qe = OI(), Dt = g1(), ln = Fw(o);
            ln ? hU(o) && Ym(o) : o.stateNode = rB(Ae, qe, Dt, o);
          }
          return Ii(o), null;
        }
        case D: {
          Um(o);
          var Jt = o.memoizedState;
          if (r === null || r.memoizedState !== null && r.memoizedState.dehydrated !== null) {
            var Qn = N5(r, o, Jt);
            if (!Qn)
              return o.flags & jo ? o : null;
          }
          if ((o.flags & Zt) !== tn)
            return o.lanes = f, (o.mode & ir) !== nn && W1(o), o;
          var Un = Jt !== null, Ie = r !== null && r.memoizedState !== null;
          if (Un !== Ie && Un) {
            var Ke = o.child;
            if (Ke.flags |= vo, (o.mode & Ln) !== nn) {
              var De = r === null && (o.memoizedProps.unstable_avoidThisFallback !== !0 || !0);
              De || y1(Ol.current, MI) ? LG() : zR();
            }
          }
          var ft = o.updateQueue;
          if (ft !== null && (o.flags |= Kn), Ii(o), (o.mode & ir) !== nn && Un) {
            var $t = o.child;
            $t !== null && (o.treeBaseDuration -= $t.treeBaseDuration);
          }
          return null;
        }
        case w:
          return Vm(o), wR(r, o), r === null && XB(o.stateNode.containerInfo), Ii(o), null;
        case F:
          var Nt = o.type._context;
          return l1(Nt, o), Ii(o), null;
        case H: {
          var gn = o.type;
          return bu(gn) && Pw(o), Ii(o), null;
        }
        case U: {
          Um(o);
          var On = o.memoizedState;
          if (On === null)
            return Ii(o), null;
          var Or = (o.flags & Zt) !== tn, lr = On.rendering;
          if (lr === null)
            if (Or)
              tb(On, !1);
            else {
              var _o = _G() && (r === null || (r.flags & Zt) === tn);
              if (!_o)
                for (var ur = o.child; ur !== null; ) {
                  var Eo = Qw(ur);
                  if (Eo !== null) {
                    Or = !0, o.flags |= Zt, tb(On, !1);
                    var ta = Eo.updateQueue;
                    return ta !== null && (o.updateQueue = ta, o.flags |= Kn), o.subtreeFlags = tn, EU(o, f), Vd(o, b1(Ol.current, Vy)), o.child;
                  }
                  ur = ur.sibling;
                }
              On.tail !== null && Lo() > nN() && (o.flags |= Zt, Or = !0, tb(On, !1), o.lanes = qv);
            }
          else {
            if (!Or) {
              var _i = Qw(lr);
              if (_i !== null) {
                o.flags |= Zt, Or = !0;
                var ls = _i.updateQueue;
                if (ls !== null && (o.updateQueue = ls, o.flags |= Kn), tb(On, !0), On.tail === null && On.tailMode === "hidden" && !lr.alternate && !Pi())
                  return Ii(o), null;
              } else // The time it took to render last row is greater than the remaining
              // time we have to render. So rendering one more row would likely
              // exceed it.
              Lo() * 2 - On.renderingStartTime > nN() && f !== qi && (o.flags |= Zt, Or = !0, tb(On, !1), o.lanes = qv);
            }
            if (On.isBackwards)
              lr.sibling = o.child, o.child = lr;
            else {
              var ya = On.last;
              ya !== null ? ya.sibling = lr : o.child = lr, On.last = lr;
            }
          }
          if (On.tail !== null) {
            var ba = On.tail;
            On.rendering = ba, On.tail = ba.sibling, On.renderingStartTime = Lo(), ba.sibling = null;
            var na = Ol.current;
            return Or ? na = b1(na, Vy) : na = Bm(na), Vd(o, na), ba;
          }
          return Ii(o), null;
        }
        case G:
          break;
        case Y:
        case te: {
          jR(o);
          var $c = o.memoizedState, rg = $c !== null;
          if (r !== null) {
            var vb = r.memoizedState, Ou = vb !== null;
            Ou !== rg && // LegacyHidden doesn't do any hiding — it only pre-renders.
            !X && (o.flags |= vo);
          }
          return !rg || (o.mode & Ln) === nn ? Ii(o) : Ki(Ru, qi) && (Ii(o), o.subtreeFlags & (Qr | Kn) && (o.flags |= vo)), null;
        }
        case B:
          return null;
        case W:
          return null;
      }
      throw new Error("Unknown unit of work tag (" + o.tag + "). This error is likely caused by a bug in React. Please file an issue.");
    }
    function L5(r, o, f) {
      switch (KT(o), o.tag) {
        case v: {
          var h = o.type;
          bu(h) && Pw(o);
          var b = o.flags;
          return b & jo ? (o.flags = b & ~jo | Zt, (o.mode & ir) !== nn && W1(o), o) : null;
        }
        case C: {
          o.stateNode, Vm(o), UT(o), S1();
          var T = o.flags;
          return (T & jo) !== tn && (T & Zt) === tn ? (o.flags = T & ~jo | Zt, o) : null;
        }
        case R:
          return v1(o), null;
        case D: {
          Um(o);
          var N = o.memoizedState;
          if (N !== null && N.dehydrated !== null) {
            if (o.alternate === null)
              throw new Error("Threw in newly mounted dehydrated component. This is likely a bug in React. Please file an issue.");
            $m();
          }
          var V = o.flags;
          return V & jo ? (o.flags = V & ~jo | Zt, (o.mode & ir) !== nn && W1(o), o) : null;
        }
        case U:
          return Um(o), null;
        case w:
          return Vm(o), null;
        case F:
          var Z = o.type._context;
          return l1(Z, o), null;
        case Y:
        case te:
          return jR(o), null;
        case B:
          return null;
        default:
          return null;
      }
    }
    function _D(r, o, f) {
      switch (KT(o), o.tag) {
        case v: {
          var h = o.type.childContextTypes;
          h != null && Pw(o);
          break;
        }
        case C: {
          o.stateNode, Vm(o), UT(o), S1();
          break;
        }
        case R: {
          v1(o);
          break;
        }
        case w:
          Vm(o);
          break;
        case D:
          Um(o);
          break;
        case U:
          Um(o);
          break;
        case F:
          var b = o.type._context;
          l1(b, o);
          break;
        case Y:
        case te:
          jR(o);
          break;
      }
    }
    var AD = null;
    AD = /* @__PURE__ */ new Set();
    var Sx = !1, Di = !1, F5 = typeof WeakSet == "function" ? WeakSet : Set, Kt = null, Xm = null, Qm = null;
    function _5(r) {
      tu(null, function() {
        throw r;
      }), Uf();
    }
    var A5 = function(r, o) {
      if (o.props = r.memoizedProps, o.state = r.memoizedState, r.mode & ir)
        try {
          Eu(), o.componentWillUnmount();
        } finally {
          xu(r);
        }
      else
        o.componentWillUnmount();
    };
    function $D(r, o) {
      try {
        Gd(Zo, r);
      } catch (f) {
        Ur(r, o, f);
      }
    }
    function xR(r, o, f) {
      try {
        A5(r, f);
      } catch (h) {
        Ur(r, o, h);
      }
    }
    function $5(r, o, f) {
      try {
        f.componentDidMount();
      } catch (h) {
        Ur(r, o, h);
      }
    }
    function jD(r, o) {
      try {
        HD(r);
      } catch (f) {
        Ur(r, o, f);
      }
    }
    function Jm(r, o) {
      var f = r.ref;
      if (f !== null)
        if (typeof f == "function") {
          var h;
          try {
            if (ce && me && r.mode & ir)
              try {
                Eu(), h = f(null);
              } finally {
                xu(r);
              }
            else
              h = f(null);
          } catch (b) {
            Ur(r, o, b);
          }
          typeof h == "function" && d("Unexpected return value from a callback ref in %s. A callback ref should not return a function.", Sn(r));
        } else
          f.current = null;
    }
    function wx(r, o, f) {
      try {
        f();
      } catch (h) {
        Ur(r, o, h);
      }
    }
    var zD = !1;
    function j5(r, o) {
      QV(r.containerInfo), Kt = o, z5();
      var f = zD;
      return zD = !1, f;
    }
    function z5() {
      for (; Kt !== null; ) {
        var r = Kt, o = r.child;
        (r.subtreeFlags & ru) !== tn && o !== null ? (o.return = r, Kt = o) : H5();
      }
    }
    function H5() {
      for (; Kt !== null; ) {
        var r = Kt;
        wr(r);
        try {
          V5(r);
        } catch (f) {
          Ur(r, r.return, f);
        }
        Br();
        var o = r.sibling;
        if (o !== null) {
          o.return = r.return, Kt = o;
          return;
        }
        Kt = r.return;
      }
    }
    function V5(r) {
      var o = r.alternate, f = r.flags;
      if ((f & No) !== tn) {
        switch (wr(r), r.tag) {
          case m:
          case _:
          case K:
            break;
          case v: {
            if (o !== null) {
              var h = o.memoizedProps, b = o.memoizedState, T = r.stateNode;
              r.type === r.elementType && !Ap && (T.props !== r.memoizedProps && d("Expected %s props to match memoized props before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", Sn(r) || "instance"), T.state !== r.memoizedState && d("Expected %s state to match memoized state before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", Sn(r) || "instance"));
              var N = T.getSnapshotBeforeUpdate(r.elementType === r.type ? h : Pl(r.type, h), b);
              {
                var V = AD;
                N === void 0 && !V.has(r.type) && (V.add(r.type), d("%s.getSnapshotBeforeUpdate(): A snapshot value (or null) must be returned. You have returned undefined.", Sn(r)));
              }
              T.__reactInternalSnapshotBeforeUpdate = N;
            }
            break;
          }
          case C: {
            {
              var Z = r.stateNode;
              wB(Z.containerInfo);
            }
            break;
          }
          case R:
          case O:
          case w:
          case H:
            break;
          default:
            throw new Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
        }
        Br();
      }
    }
    function Il(r, o, f) {
      var h = o.updateQueue, b = h !== null ? h.lastEffect : null;
      if (b !== null) {
        var T = b.next, N = T;
        do {
          if ((N.tag & r) === r) {
            var V = N.destroy;
            N.destroy = void 0, V !== void 0 && ((r & Mi) !== Ha ? yl(o) : (r & Zo) !== Ha && qf(o), (r & Cu) !== Ha && hb(!0), wx(o, f, V), (r & Cu) !== Ha && hb(!1), (r & Mi) !== Ha ? su() : (r & Zo) !== Ha && Gv());
          }
          N = N.next;
        } while (N !== T);
      }
    }
    function Gd(r, o) {
      var f = o.updateQueue, h = f !== null ? f.lastEffect : null;
      if (h !== null) {
        var b = h.next, T = b;
        do {
          if ((T.tag & r) === r) {
            (r & Mi) !== Ha ? Uv(o) : (r & Zo) !== Ha && Bh(o);
            var N = T.create;
            (r & Cu) !== Ha && hb(!0), T.destroy = N(), (r & Cu) !== Ha && hb(!1), (r & Mi) !== Ha ? OS() : (r & Zo) !== Ha && kS();
            {
              var V = T.destroy;
              if (V !== void 0 && typeof V != "function") {
                var Z = void 0;
                (T.tag & Zo) !== tn ? Z = "useLayoutEffect" : (T.tag & Cu) !== tn ? Z = "useInsertionEffect" : Z = "useEffect";
                var se = void 0;
                V === null ? se = " You returned null. If your effect does not require clean up, return undefined (or nothing)." : typeof V.then == "function" ? se = `

It looks like you wrote ` + Z + `(async () => ...) or returned a Promise. Instead, write the async function inside your effect and call it immediately:

` + Z + `(() => {
  async function fetchData() {
    // You can await here
    const response = await MyAPI.getData(someId);
    // ...
  }
  fetchData();
}, [someId]); // Or [] if effect doesn't need props or state

Learn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching` : se = " You returned: " + V, d("%s must not return anything besides a function, which is used for clean-up.%s", Z, se);
              }
            }
          }
          T = T.next;
        } while (T !== b);
      }
    }
    function B5(r, o) {
      if ((o.flags & Kn) !== tn)
        switch (o.tag) {
          case P: {
            var f = o.stateNode.passiveEffectDuration, h = o.memoizedProps, b = h.id, T = h.onPostCommit, N = nD(), V = o.alternate === null ? "mount" : "update";
            tD() && (V = "nested-update"), typeof T == "function" && T(b, V, f, N);
            var Z = o.return;
            e: for (; Z !== null; ) {
              switch (Z.tag) {
                case C:
                  var se = Z.stateNode;
                  se.passiveEffectDuration += f;
                  break e;
                case P:
                  var le = Z.stateNode;
                  le.passiveEffectDuration += f;
                  break e;
              }
              Z = Z.return;
            }
            break;
          }
        }
    }
    function U5(r, o, f, h) {
      if ((f.flags & iu) !== tn)
        switch (f.tag) {
          case m:
          case _:
          case K: {
            if (!Di)
              if (f.mode & ir)
                try {
                  Eu(), Gd(Zo | Jo, f);
                } finally {
                  xu(f);
                }
              else
                Gd(Zo | Jo, f);
            break;
          }
          case v: {
            var b = f.stateNode;
            if (f.flags & Kn && !Di)
              if (o === null)
                if (f.type === f.elementType && !Ap && (b.props !== f.memoizedProps && d("Expected %s props to match memoized props before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", Sn(f) || "instance"), b.state !== f.memoizedState && d("Expected %s state to match memoized state before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", Sn(f) || "instance")), f.mode & ir)
                  try {
                    Eu(), b.componentDidMount();
                  } finally {
                    xu(f);
                  }
                else
                  b.componentDidMount();
              else {
                var T = f.elementType === f.type ? o.memoizedProps : Pl(f.type, o.memoizedProps), N = o.memoizedState;
                if (f.type === f.elementType && !Ap && (b.props !== f.memoizedProps && d("Expected %s props to match memoized props before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", Sn(f) || "instance"), b.state !== f.memoizedState && d("Expected %s state to match memoized state before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", Sn(f) || "instance")), f.mode & ir)
                  try {
                    Eu(), b.componentDidUpdate(T, N, b.__reactInternalSnapshotBeforeUpdate);
                  } finally {
                    xu(f);
                  }
                else
                  b.componentDidUpdate(T, N, b.__reactInternalSnapshotBeforeUpdate);
              }
            var V = f.updateQueue;
            V !== null && (f.type === f.elementType && !Ap && (b.props !== f.memoizedProps && d("Expected %s props to match memoized props before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", Sn(f) || "instance"), b.state !== f.memoizedState && d("Expected %s state to match memoized state before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", Sn(f) || "instance")), RI(f, V, b));
            break;
          }
          case C: {
            var Z = f.updateQueue;
            if (Z !== null) {
              var se = null;
              if (f.child !== null)
                switch (f.child.tag) {
                  case R:
                    se = f.child.stateNode;
                    break;
                  case v:
                    se = f.child.stateNode;
                    break;
                }
              RI(f, Z, se);
            }
            break;
          }
          case R: {
            var le = f.stateNode;
            if (o === null && f.flags & Kn) {
              var Te = f.type, xe = f.memoizedProps;
              lB(le, Te, xe);
            }
            break;
          }
          case O:
            break;
          case w:
            break;
          case P: {
            {
              var Ae = f.memoizedProps, ze = Ae.onCommit, qe = Ae.onRender, Dt = f.stateNode.effectDuration, ln = nD(), Jt = o === null ? "mount" : "update";
              tD() && (Jt = "nested-update"), typeof qe == "function" && qe(f.memoizedProps.id, Jt, f.actualDuration, f.treeBaseDuration, f.actualStartTime, ln);
              {
                typeof ze == "function" && ze(f.memoizedProps.id, Jt, Dt, ln), HG(f);
                var Qn = f.return;
                e: for (; Qn !== null; ) {
                  switch (Qn.tag) {
                    case C:
                      var Un = Qn.stateNode;
                      Un.effectDuration += Dt;
                      break e;
                    case P:
                      var Ie = Qn.stateNode;
                      Ie.effectDuration += Dt;
                      break e;
                  }
                  Qn = Qn.return;
                }
              }
            }
            break;
          }
          case D: {
            J5(r, f);
            break;
          }
          case U:
          case H:
          case G:
          case Y:
          case te:
          case W:
            break;
          default:
            throw new Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
        }
      Di || f.flags & oo && HD(f);
    }
    function G5(r) {
      switch (r.tag) {
        case m:
        case _:
        case K: {
          if (r.mode & ir)
            try {
              Eu(), $D(r, r.return);
            } finally {
              xu(r);
            }
          else
            $D(r, r.return);
          break;
        }
        case v: {
          var o = r.stateNode;
          typeof o.componentDidMount == "function" && $5(r, r.return, o), jD(r, r.return);
          break;
        }
        case R: {
          jD(r, r.return);
          break;
        }
      }
    }
    function W5(r, o) {
      for (var f = null, h = r; ; ) {
        if (h.tag === R) {
          if (f === null) {
            f = h;
            try {
              var b = h.stateNode;
              o ? yB(b) : CB(h.stateNode, h.memoizedProps);
            } catch (N) {
              Ur(r, r.return, N);
            }
          }
        } else if (h.tag === O) {
          if (f === null)
            try {
              var T = h.stateNode;
              o ? bB(T) : SB(T, h.memoizedProps);
            } catch (N) {
              Ur(r, r.return, N);
            }
        } else if (!((h.tag === Y || h.tag === te) && h.memoizedState !== null && h !== r)) {
          if (h.child !== null) {
            h.child.return = h, h = h.child;
            continue;
          }
        }
        if (h === r)
          return;
        for (; h.sibling === null; ) {
          if (h.return === null || h.return === r)
            return;
          f === h && (f = null), h = h.return;
        }
        f === h && (f = null), h.sibling.return = h.return, h = h.sibling;
      }
    }
    function HD(r) {
      var o = r.ref;
      if (o !== null) {
        var f = r.stateNode, h;
        switch (r.tag) {
          case R:
            h = f;
            break;
          default:
            h = f;
        }
        if (typeof o == "function") {
          var b;
          if (r.mode & ir)
            try {
              Eu(), b = o(h);
            } finally {
              xu(r);
            }
          else
            b = o(h);
          typeof b == "function" && d("Unexpected return value from a callback ref in %s. A callback ref should not return a function.", Sn(r));
        } else
          o.hasOwnProperty("current") || d("Unexpected ref object provided for %s. Use either a ref-setter function or React.createRef().", Sn(r)), o.current = h;
      }
    }
    function q5(r) {
      var o = r.alternate;
      o !== null && (o.return = null), r.return = null;
    }
    function VD(r) {
      var o = r.alternate;
      o !== null && (r.alternate = null, VD(o));
      {
        if (r.child = null, r.deletions = null, r.sibling = null, r.tag === R) {
          var f = r.stateNode;
          f !== null && ZB(f);
        }
        r.stateNode = null, r._debugOwner = null, r.return = null, r.dependencies = null, r.memoizedProps = null, r.memoizedState = null, r.pendingProps = null, r.stateNode = null, r.updateQueue = null;
      }
    }
    function K5(r) {
      for (var o = r.return; o !== null; ) {
        if (BD(o))
          return o;
        o = o.return;
      }
      throw new Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
    }
    function BD(r) {
      return r.tag === R || r.tag === C || r.tag === w;
    }
    function UD(r) {
      var o = r;
      e: for (; ; ) {
        for (; o.sibling === null; ) {
          if (o.return === null || BD(o.return))
            return null;
          o = o.return;
        }
        for (o.sibling.return = o.return, o = o.sibling; o.tag !== R && o.tag !== O && o.tag !== I; ) {
          if (o.flags & Qr || o.child === null || o.tag === w)
            continue e;
          o.child.return = o, o = o.child;
        }
        if (!(o.flags & Qr))
          return o.stateNode;
      }
    }
    function Y5(r) {
      var o = K5(r);
      switch (o.tag) {
        case R: {
          var f = o.stateNode;
          o.flags & Ia && (WM(f), o.flags &= ~Ia);
          var h = UD(r);
          TR(r, h, f);
          break;
        }
        case C:
        case w: {
          var b = o.stateNode.containerInfo, T = UD(r);
          ER(r, T, b);
          break;
        }
        default:
          throw new Error("Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue.");
      }
    }
    function ER(r, o, f) {
      var h = r.tag, b = h === R || h === O;
      if (b) {
        var T = r.stateNode;
        o ? hB(f, T, o) : fB(f, T);
      } else if (h !== w) {
        var N = r.child;
        if (N !== null) {
          ER(N, o, f);
          for (var V = N.sibling; V !== null; )
            ER(V, o, f), V = V.sibling;
        }
      }
    }
    function TR(r, o, f) {
      var h = r.tag, b = h === R || h === O;
      if (b) {
        var T = r.stateNode;
        o ? pB(f, T, o) : dB(f, T);
      } else if (h !== w) {
        var N = r.child;
        if (N !== null) {
          TR(N, o, f);
          for (var V = N.sibling; V !== null; )
            TR(V, o, f), V = V.sibling;
        }
      }
    }
    var Ni = null, Dl = !1;
    function X5(r, o, f) {
      {
        var h = o;
        e: for (; h !== null; ) {
          switch (h.tag) {
            case R: {
              Ni = h.stateNode, Dl = !1;
              break e;
            }
            case C: {
              Ni = h.stateNode.containerInfo, Dl = !0;
              break e;
            }
            case w: {
              Ni = h.stateNode.containerInfo, Dl = !0;
              break e;
            }
          }
          h = h.return;
        }
        if (Ni === null)
          throw new Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
        GD(r, o, f), Ni = null, Dl = !1;
      }
      q5(f);
    }
    function Wd(r, o, f) {
      for (var h = f.child; h !== null; )
        GD(r, o, h), h = h.sibling;
    }
    function GD(r, o, f) {
      switch (Hv(f), f.tag) {
        case R:
          Di || Jm(f, o);
        case O: {
          {
            var h = Ni, b = Dl;
            Ni = null, Wd(r, o, f), Ni = h, Dl = b, Ni !== null && (Dl ? gB(Ni, f.stateNode) : mB(Ni, f.stateNode));
          }
          return;
        }
        case I: {
          Ni !== null && (Dl ? vB(Ni, f.stateNode) : _T(Ni, f.stateNode));
          return;
        }
        case w: {
          {
            var T = Ni, N = Dl;
            Ni = f.stateNode.containerInfo, Dl = !0, Wd(r, o, f), Ni = T, Dl = N;
          }
          return;
        }
        case m:
        case _:
        case z:
        case K: {
          if (!Di) {
            var V = f.updateQueue;
            if (V !== null) {
              var Z = V.lastEffect;
              if (Z !== null) {
                var se = Z.next, le = se;
                do {
                  var Te = le, xe = Te.destroy, Ae = Te.tag;
                  xe !== void 0 && ((Ae & Cu) !== Ha ? wx(f, o, xe) : (Ae & Zo) !== Ha && (qf(f), f.mode & ir ? (Eu(), wx(f, o, xe), xu(f)) : wx(f, o, xe), Gv())), le = le.next;
                } while (le !== se);
              }
            }
          }
          Wd(r, o, f);
          return;
        }
        case v: {
          if (!Di) {
            Jm(f, o);
            var ze = f.stateNode;
            typeof ze.componentWillUnmount == "function" && xR(f, o, ze);
          }
          Wd(r, o, f);
          return;
        }
        case G: {
          Wd(r, o, f);
          return;
        }
        case Y: {
          if (
            // TODO: Remove this dead flag
            f.mode & Ln
          ) {
            var qe = Di;
            Di = qe || f.memoizedState !== null, Wd(r, o, f), Di = qe;
          } else
            Wd(r, o, f);
          break;
        }
        default: {
          Wd(r, o, f);
          return;
        }
      }
    }
    function Q5(r) {
      r.memoizedState;
    }
    function J5(r, o) {
      var f = o.memoizedState;
      if (f === null) {
        var h = o.alternate;
        if (h !== null) {
          var b = h.memoizedState;
          if (b !== null) {
            var T = b.dehydrated;
            T !== null && _B(T);
          }
        }
      }
    }
    function WD(r) {
      var o = r.updateQueue;
      if (o !== null) {
        r.updateQueue = null;
        var f = r.stateNode;
        f === null && (f = r.stateNode = new F5()), o.forEach(function(h) {
          var b = KG.bind(null, r, h);
          if (!f.has(h)) {
            if (f.add(h), Wi)
              if (Xm !== null && Qm !== null)
                pb(Qm, Xm);
              else
                throw Error("Expected finished root and lanes to be set. This is a bug in React.");
            h.then(b, b);
          }
        });
      }
    }
    function Z5(r, o, f) {
      Xm = f, Qm = r, wr(o), qD(o, r), wr(o), Xm = null, Qm = null;
    }
    function Nl(r, o, f) {
      var h = o.deletions;
      if (h !== null)
        for (var b = 0; b < h.length; b++) {
          var T = h[b];
          try {
            X5(r, o, T);
          } catch (Z) {
            Ur(T, o, Z);
          }
        }
      var N = Kl();
      if (o.subtreeFlags & ou)
        for (var V = o.child; V !== null; )
          wr(V), qD(V, r), V = V.sibling;
      wr(N);
    }
    function qD(r, o, f) {
      var h = r.alternate, b = r.flags;
      switch (r.tag) {
        case m:
        case _:
        case z:
        case K: {
          if (Nl(o, r), Tu(r), b & Kn) {
            try {
              Il(Cu | Jo, r, r.return), Gd(Cu | Jo, r);
            } catch (gn) {
              Ur(r, r.return, gn);
            }
            if (r.mode & ir) {
              try {
                Eu(), Il(Zo | Jo, r, r.return);
              } catch (gn) {
                Ur(r, r.return, gn);
              }
              xu(r);
            } else
              try {
                Il(Zo | Jo, r, r.return);
              } catch (gn) {
                Ur(r, r.return, gn);
              }
          }
          return;
        }
        case v: {
          Nl(o, r), Tu(r), b & oo && h !== null && Jm(h, h.return);
          return;
        }
        case R: {
          Nl(o, r), Tu(r), b & oo && h !== null && Jm(h, h.return);
          {
            if (r.flags & Ia) {
              var T = r.stateNode;
              try {
                WM(T);
              } catch (gn) {
                Ur(r, r.return, gn);
              }
            }
            if (b & Kn) {
              var N = r.stateNode;
              if (N != null) {
                var V = r.memoizedProps, Z = h !== null ? h.memoizedProps : V, se = r.type, le = r.updateQueue;
                if (r.updateQueue = null, le !== null)
                  try {
                    uB(N, le, se, Z, V, r);
                  } catch (gn) {
                    Ur(r, r.return, gn);
                  }
              }
            }
          }
          return;
        }
        case O: {
          if (Nl(o, r), Tu(r), b & Kn) {
            if (r.stateNode === null)
              throw new Error("This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue.");
            var Te = r.stateNode, xe = r.memoizedProps, Ae = h !== null ? h.memoizedProps : xe;
            try {
              cB(Te, Ae, xe);
            } catch (gn) {
              Ur(r, r.return, gn);
            }
          }
          return;
        }
        case C: {
          if (Nl(o, r), Tu(r), b & Kn && h !== null) {
            var ze = h.memoizedState;
            if (ze.isDehydrated)
              try {
                FB(o.containerInfo);
              } catch (gn) {
                Ur(r, r.return, gn);
              }
          }
          return;
        }
        case w: {
          Nl(o, r), Tu(r);
          return;
        }
        case D: {
          Nl(o, r), Tu(r);
          var qe = r.child;
          if (qe.flags & vo) {
            var Dt = qe.stateNode, ln = qe.memoizedState, Jt = ln !== null;
            if (Dt.isHidden = Jt, Jt) {
              var Qn = qe.alternate !== null && qe.alternate.memoizedState !== null;
              Qn || NG();
            }
          }
          if (b & Kn) {
            try {
              Q5(r);
            } catch (gn) {
              Ur(r, r.return, gn);
            }
            WD(r);
          }
          return;
        }
        case Y: {
          var Un = h !== null && h.memoizedState !== null;
          if (
            // TODO: Remove this dead flag
            r.mode & Ln
          ) {
            var Ie = Di;
            Di = Ie || Un, Nl(o, r), Di = Ie;
          } else
            Nl(o, r);
          if (Tu(r), b & vo) {
            var Ke = r.stateNode, De = r.memoizedState, ft = De !== null, $t = r;
            if (Ke.isHidden = ft, ft && !Un && ($t.mode & Ln) !== nn) {
              Kt = $t;
              for (var Nt = $t.child; Nt !== null; )
                Kt = Nt, tG(Nt), Nt = Nt.sibling;
            }
            W5($t, ft);
          }
          return;
        }
        case U: {
          Nl(o, r), Tu(r), b & Kn && WD(r);
          return;
        }
        case G:
          return;
        default: {
          Nl(o, r), Tu(r);
          return;
        }
      }
    }
    function Tu(r) {
      var o = r.flags;
      if (o & Qr) {
        try {
          Y5(r);
        } catch (f) {
          Ur(r, r.return, f);
        }
        r.flags &= ~Qr;
      }
      o & Bi && (r.flags &= ~Bi);
    }
    function eG(r, o, f) {
      Xm = f, Qm = o, Kt = r, KD(r, o, f), Xm = null, Qm = null;
    }
    function KD(r, o, f) {
      for (var h = (r.mode & Ln) !== nn; Kt !== null; ) {
        var b = Kt, T = b.child;
        if (b.tag === Y && h) {
          var N = b.memoizedState !== null, V = N || Sx;
          if (V) {
            RR(r, o, f);
            continue;
          } else {
            var Z = b.alternate, se = Z !== null && Z.memoizedState !== null, le = se || Di, Te = Sx, xe = Di;
            Sx = V, Di = le, Di && !xe && (Kt = b, nG(b));
            for (var Ae = T; Ae !== null; )
              Kt = Ae, KD(
                Ae,
                // New root; bubble back up to here and stop.
                o,
                f
              ), Ae = Ae.sibling;
            Kt = b, Sx = Te, Di = xe, RR(r, o, f);
            continue;
          }
        }
        (b.subtreeFlags & iu) !== tn && T !== null ? (T.return = b, Kt = T) : RR(r, o, f);
      }
    }
    function RR(r, o, f) {
      for (; Kt !== null; ) {
        var h = Kt;
        if ((h.flags & iu) !== tn) {
          var b = h.alternate;
          wr(h);
          try {
            U5(o, b, h, f);
          } catch (N) {
            Ur(h, h.return, N);
          }
          Br();
        }
        if (h === r) {
          Kt = null;
          return;
        }
        var T = h.sibling;
        if (T !== null) {
          T.return = h.return, Kt = T;
          return;
        }
        Kt = h.return;
      }
    }
    function tG(r) {
      for (; Kt !== null; ) {
        var o = Kt, f = o.child;
        switch (o.tag) {
          case m:
          case _:
          case z:
          case K: {
            if (o.mode & ir)
              try {
                Eu(), Il(Zo, o, o.return);
              } finally {
                xu(o);
              }
            else
              Il(Zo, o, o.return);
            break;
          }
          case v: {
            Jm(o, o.return);
            var h = o.stateNode;
            typeof h.componentWillUnmount == "function" && xR(o, o.return, h);
            break;
          }
          case R: {
            Jm(o, o.return);
            break;
          }
          case Y: {
            var b = o.memoizedState !== null;
            if (b) {
              YD(r);
              continue;
            }
            break;
          }
        }
        f !== null ? (f.return = o, Kt = f) : YD(r);
      }
    }
    function YD(r) {
      for (; Kt !== null; ) {
        var o = Kt;
        if (o === r) {
          Kt = null;
          return;
        }
        var f = o.sibling;
        if (f !== null) {
          f.return = o.return, Kt = f;
          return;
        }
        Kt = o.return;
      }
    }
    function nG(r) {
      for (; Kt !== null; ) {
        var o = Kt, f = o.child;
        if (o.tag === Y) {
          var h = o.memoizedState !== null;
          if (h) {
            XD(r);
            continue;
          }
        }
        f !== null ? (f.return = o, Kt = f) : XD(r);
      }
    }
    function XD(r) {
      for (; Kt !== null; ) {
        var o = Kt;
        wr(o);
        try {
          G5(o);
        } catch (h) {
          Ur(o, o.return, h);
        }
        if (Br(), o === r) {
          Kt = null;
          return;
        }
        var f = o.sibling;
        if (f !== null) {
          f.return = o.return, Kt = f;
          return;
        }
        Kt = o.return;
      }
    }
    function rG(r, o, f, h) {
      Kt = o, oG(o, r, f, h);
    }
    function oG(r, o, f, h) {
      for (; Kt !== null; ) {
        var b = Kt, T = b.child;
        (b.subtreeFlags & gl) !== tn && T !== null ? (T.return = b, Kt = T) : iG(r, o, f, h);
      }
    }
    function iG(r, o, f, h) {
      for (; Kt !== null; ) {
        var b = Kt;
        if ((b.flags & Vi) !== tn) {
          wr(b);
          try {
            aG(o, b, f, h);
          } catch (N) {
            Ur(b, b.return, N);
          }
          Br();
        }
        if (b === r) {
          Kt = null;
          return;
        }
        var T = b.sibling;
        if (T !== null) {
          T.return = b.return, Kt = T;
          return;
        }
        Kt = b.return;
      }
    }
    function aG(r, o, f, h) {
      switch (o.tag) {
        case m:
        case _:
        case K: {
          if (o.mode & ir) {
            G1();
            try {
              Gd(Mi | Jo, o);
            } finally {
              U1(o);
            }
          } else
            Gd(Mi | Jo, o);
          break;
        }
      }
    }
    function sG(r) {
      Kt = r, lG();
    }
    function lG() {
      for (; Kt !== null; ) {
        var r = Kt, o = r.child;
        if ((Kt.flags & Ma) !== tn) {
          var f = r.deletions;
          if (f !== null) {
            for (var h = 0; h < f.length; h++) {
              var b = f[h];
              Kt = b, dG(b, r);
            }
            {
              var T = r.alternate;
              if (T !== null) {
                var N = T.child;
                if (N !== null) {
                  T.child = null;
                  do {
                    var V = N.sibling;
                    N.sibling = null, N = V;
                  } while (N !== null);
                }
              }
            }
            Kt = r;
          }
        }
        (r.subtreeFlags & gl) !== tn && o !== null ? (o.return = r, Kt = o) : uG();
      }
    }
    function uG() {
      for (; Kt !== null; ) {
        var r = Kt;
        (r.flags & Vi) !== tn && (wr(r), cG(r), Br());
        var o = r.sibling;
        if (o !== null) {
          o.return = r.return, Kt = o;
          return;
        }
        Kt = r.return;
      }
    }
    function cG(r) {
      switch (r.tag) {
        case m:
        case _:
        case K: {
          r.mode & ir ? (G1(), Il(Mi | Jo, r, r.return), U1(r)) : Il(Mi | Jo, r, r.return);
          break;
        }
      }
    }
    function dG(r, o) {
      for (; Kt !== null; ) {
        var f = Kt;
        wr(f), pG(f, o), Br();
        var h = f.child;
        h !== null ? (h.return = f, Kt = h) : fG(r);
      }
    }
    function fG(r) {
      for (; Kt !== null; ) {
        var o = Kt, f = o.sibling, h = o.return;
        if (VD(o), o === r) {
          Kt = null;
          return;
        }
        if (f !== null) {
          f.return = h, Kt = f;
          return;
        }
        Kt = h;
      }
    }
    function pG(r, o) {
      switch (r.tag) {
        case m:
        case _:
        case K: {
          r.mode & ir ? (G1(), Il(Mi, r, o), U1(r)) : Il(Mi, r, o);
          break;
        }
      }
    }
    function hG(r) {
      switch (r.tag) {
        case m:
        case _:
        case K: {
          try {
            Gd(Zo | Jo, r);
          } catch (f) {
            Ur(r, r.return, f);
          }
          break;
        }
        case v: {
          var o = r.stateNode;
          try {
            o.componentDidMount();
          } catch (f) {
            Ur(r, r.return, f);
          }
          break;
        }
      }
    }
    function mG(r) {
      switch (r.tag) {
        case m:
        case _:
        case K: {
          try {
            Gd(Mi | Jo, r);
          } catch (o) {
            Ur(r, r.return, o);
          }
          break;
        }
      }
    }
    function gG(r) {
      switch (r.tag) {
        case m:
        case _:
        case K: {
          try {
            Il(Zo | Jo, r, r.return);
          } catch (f) {
            Ur(r, r.return, f);
          }
          break;
        }
        case v: {
          var o = r.stateNode;
          typeof o.componentWillUnmount == "function" && xR(r, r.return, o);
          break;
        }
      }
    }
    function vG(r) {
      switch (r.tag) {
        case m:
        case _:
        case K:
          try {
            Il(Mi | Jo, r, r.return);
          } catch (o) {
            Ur(r, r.return, o);
          }
      }
    }
    if (typeof Symbol == "function" && Symbol.for) {
      var nb = Symbol.for;
      nb("selector.component"), nb("selector.has_pseudo_class"), nb("selector.role"), nb("selector.test_id"), nb("selector.text");
    }
    var yG = [];
    function bG() {
      yG.forEach(function(r) {
        return r();
      });
    }
    var CG = n.ReactCurrentActQueue;
    function SG(r) {
      {
        var o = (
          // $FlowExpectedError – Flow doesn't know about IS_REACT_ACT_ENVIRONMENT global
          typeof IS_REACT_ACT_ENVIRONMENT < "u" ? IS_REACT_ACT_ENVIRONMENT : void 0
        ), f = typeof jest < "u";
        return f && o !== !1;
      }
    }
    function QD() {
      {
        var r = (
          // $FlowExpectedError – Flow doesn't know about IS_REACT_ACT_ENVIRONMENT global
          typeof IS_REACT_ACT_ENVIRONMENT < "u" ? IS_REACT_ACT_ENVIRONMENT : void 0
        );
        return !r && CG.current !== null && d("The current testing environment is not configured to support act(...)"), r;
      }
    }
    var wG = Math.ceil, OR = n.ReactCurrentDispatcher, kR = n.ReactCurrentOwner, Li = n.ReactCurrentBatchConfig, Ll = n.ReactCurrentActQueue, ni = (
      /*             */
      0
    ), JD = (
      /*               */
      1
    ), Fi = (
      /*                */
      2
    ), Bs = (
      /*                */
      4
    ), Lc = 0, rb = 1, $p = 2, xx = 3, ob = 4, ZD = 5, PR = 6, Xn = ni, ga = null, po = null, ri = at, Ru = at, MR = _d(at), oi = Lc, ib = null, Ex = at, ab = at, Tx = at, sb = null, Va = null, IR = 0, eN = 500, tN = 1 / 0, xG = 500, Fc = null;
    function lb() {
      tN = Lo() + xG;
    }
    function nN() {
      return tN;
    }
    var Rx = !1, DR = null, Zm = null, jp = !1, qd = null, ub = at, NR = [], LR = null, EG = 50, cb = 0, FR = null, _R = !1, Ox = !1, TG = 50, eg = 0, kx = null, db = Lr, Px = at, rN = !1;
    function Mx() {
      return ga;
    }
    function va() {
      return (Xn & (Fi | Bs)) !== ni ? Lo() : (db !== Lr || (db = Lo()), db);
    }
    function Kd(r) {
      var o = r.mode;
      if ((o & Ln) === nn)
        return hn;
      if ((Xn & Fi) !== ni && ri !== at)
        return ap(ri);
      var f = CU() !== bU;
      if (f) {
        if (Li.transition !== null) {
          var h = Li.transition;
          h._updatedFibers || (h._updatedFibers = /* @__PURE__ */ new Set()), h._updatedFibers.add(r);
        }
        return Px === nr && (Px = Zv()), Px;
      }
      var b = Aa();
      if (b !== nr)
        return b;
      var T = oB();
      return T;
    }
    function RG(r) {
      var o = r.mode;
      return (o & Ln) === nn ? hn : LS();
    }
    function ii(r, o, f, h) {
      XG(), rN && d("useInsertionEffect must not schedule updates."), _R && (Ox = !0), Td(r, f, h), (Xn & Fi) !== at && r === ga ? ZG(o) : (Wi && up(r, o, f), e4(o), r === ga && ((Xn & Fi) === ni && (ab = kn(ab, f)), oi === ob && Yd(r, ri)), Ba(r, h), f === hn && Xn === ni && (o.mode & Ln) === nn && // Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.
      !Ll.isBatchingLegacy && (lb(), rI()));
    }
    function OG(r, o, f) {
      var h = r.current;
      h.lanes = o, Td(r, o, f), Ba(r, f);
    }
    function kG(r) {
      return (
        // TODO: Remove outdated deferRenderPhaseUpdateToNextBatch experiment. We
        // decided not to enable it.
        (Xn & Fi) !== ni
      );
    }
    function Ba(r, o) {
      var f = r.callbackNode;
      um(r, o);
      var h = lm(r, r === ga ? ri : at);
      if (h === at) {
        f !== null && bN(f), r.callbackNode = null, r.callbackPriority = nr;
        return;
      }
      var b = cu(h), T = r.callbackPriority;
      if (T === b && // Special case related to `act`. If the currently scheduled task is a
      // Scheduler task, rather than an `act` task, cancel it and re-scheduled
      // on the `act` queue.
      !(Ll.current !== null && f !== BR)) {
        f == null && T !== hn && d("Expected scheduled callback to exist. This error is likely caused by a bug in React. Please file an issue.");
        return;
      }
      f != null && bN(f);
      var N;
      if (b === hn)
        r.tag === Ad ? (Ll.isBatchingLegacy !== null && (Ll.didScheduleLegacyUpdate = !0), nU(aN.bind(null, r))) : nI(aN.bind(null, r)), Ll.current !== null ? Ll.current.push($d) : aB(function() {
          (Xn & (Fi | Bs)) === ni && $d();
        }), N = null;
      else {
        var V;
        switch (HS(h)) {
          case Ei:
            V = Wf;
            break;
          case Ns:
            V = au;
            break;
          case Fa:
            V = vl;
            break;
          case _a:
            V = lc;
            break;
          default:
            V = vl;
            break;
        }
        N = UR(V, oN.bind(null, r));
      }
      r.callbackPriority = b, r.callbackNode = N;
    }
    function oN(r, o) {
      if (WU(), db = Lr, Px = at, (Xn & (Fi | Bs)) !== ni)
        throw new Error("Should not already be working.");
      var f = r.callbackNode, h = Ac();
      if (h && r.callbackNode !== f)
        return null;
      var b = lm(r, r === ga ? ri : at);
      if (b === at)
        return null;
      var T = !dm(r, b) && !NS(r, b) && !o, N = T ? $G(r, b) : Dx(r, b);
      if (N !== Lc) {
        if (N === $p) {
          var V = cm(r);
          V !== at && (b = V, N = AR(r, V));
        }
        if (N === rb) {
          var Z = ib;
          throw zp(r, at), Yd(r, b), Ba(r, Lo()), Z;
        }
        if (N === PR)
          Yd(r, b);
        else {
          var se = !dm(r, b), le = r.current.alternate;
          if (se && !MG(le)) {
            if (N = Dx(r, b), N === $p) {
              var Te = cm(r);
              Te !== at && (b = Te, N = AR(r, Te));
            }
            if (N === rb) {
              var xe = ib;
              throw zp(r, at), Yd(r, b), Ba(r, Lo()), xe;
            }
          }
          r.finishedWork = le, r.finishedLanes = b, PG(r, N, b);
        }
      }
      return Ba(r, Lo()), r.callbackNode === f ? oN.bind(null, r) : null;
    }
    function AR(r, o) {
      var f = sb;
      if (hm(r)) {
        var h = zp(r, o);
        h.flags |= fi, YB(r.containerInfo);
      }
      var b = Dx(r, o);
      if (b !== $p) {
        var T = Va;
        Va = f, T !== null && iN(T);
      }
      return b;
    }
    function iN(r) {
      Va === null ? Va = r : Va.push.apply(Va, r);
    }
    function PG(r, o, f) {
      switch (o) {
        case Lc:
        case rb:
          throw new Error("Root did not complete. This is a bug in React.");
        case $p: {
          Hp(r, Va, Fc);
          break;
        }
        case xx: {
          if (Yd(r, f), bc(f) && // do not delay if we're inside an act() scope
          !CN()) {
            var h = IR + eN - Lo();
            if (h > 10) {
              var b = lm(r, at);
              if (b !== at)
                break;
              var T = r.suspendedLanes;
              if (!Cc(T, f)) {
                va(), fm(r, T);
                break;
              }
              r.timeoutHandle = LT(Hp.bind(null, r, Va, Fc), h);
              break;
            }
          }
          Hp(r, Va, Fc);
          break;
        }
        case ob: {
          if (Yd(r, f), Qv(f))
            break;
          if (!CN()) {
            var N = rs(r, f), V = N, Z = Lo() - V, se = YG(Z) - Z;
            if (se > 10) {
              r.timeoutHandle = LT(Hp.bind(null, r, Va, Fc), se);
              break;
            }
          }
          Hp(r, Va, Fc);
          break;
        }
        case ZD: {
          Hp(r, Va, Fc);
          break;
        }
        default:
          throw new Error("Unknown root exit status.");
      }
    }
    function MG(r) {
      for (var o = r; ; ) {
        if (o.flags & Cd) {
          var f = o.updateQueue;
          if (f !== null) {
            var h = f.stores;
            if (h !== null)
              for (var b = 0; b < h.length; b++) {
                var T = h[b], N = T.getSnapshot, V = T.value;
                try {
                  if (!ut(N(), V))
                    return !1;
                } catch {
                  return !1;
                }
              }
          }
        }
        var Z = o.child;
        if (o.subtreeFlags & Cd && Z !== null) {
          Z.return = o, o = Z;
          continue;
        }
        if (o === r)
          return !0;
        for (; o.sibling === null; ) {
          if (o.return === null || o.return === r)
            return !0;
          o = o.return;
        }
        o.sibling.return = o.return, o = o.sibling;
      }
      return !0;
    }
    function Yd(r, o) {
      o = sp(o, Tx), o = sp(o, ab), AS(r, o);
    }
    function aN(r) {
      if (qU(), (Xn & (Fi | Bs)) !== ni)
        throw new Error("Should not already be working.");
      Ac();
      var o = lm(r, at);
      if (!Ki(o, hn))
        return Ba(r, Lo()), null;
      var f = Dx(r, o);
      if (r.tag !== Ad && f === $p) {
        var h = cm(r);
        h !== at && (o = h, f = AR(r, h));
      }
      if (f === rb) {
        var b = ib;
        throw zp(r, at), Yd(r, o), Ba(r, Lo()), b;
      }
      if (f === PR)
        throw new Error("Root did not complete. This is a bug in React.");
      var T = r.current.alternate;
      return r.finishedWork = T, r.finishedLanes = o, Hp(r, Va, Fc), Ba(r, Lo()), null;
    }
    function IG(r, o) {
      o !== at && (pm(r, kn(o, hn)), Ba(r, Lo()), (Xn & (Fi | Bs)) === ni && (lb(), $d()));
    }
    function $R(r, o) {
      var f = Xn;
      Xn |= JD;
      try {
        return r(o);
      } finally {
        Xn = f, Xn === ni && // Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.
        !Ll.isBatchingLegacy && (lb(), rI());
      }
    }
    function DG(r, o, f, h, b) {
      var T = Aa(), N = Li.transition;
      try {
        return Li.transition = null, So(Ei), r(o, f, h, b);
      } finally {
        So(T), Li.transition = N, Xn === ni && lb();
      }
    }
    function _c(r) {
      qd !== null && qd.tag === Ad && (Xn & (Fi | Bs)) === ni && Ac();
      var o = Xn;
      Xn |= JD;
      var f = Li.transition, h = Aa();
      try {
        return Li.transition = null, So(Ei), r ? r() : void 0;
      } finally {
        So(h), Li.transition = f, Xn = o, (Xn & (Fi | Bs)) === ni && $d();
      }
    }
    function sN() {
      return (Xn & (Fi | Bs)) !== ni;
    }
    function Ix(r, o) {
      Zi(MR, Ru, r), Ru = kn(Ru, o);
    }
    function jR(r) {
      Ru = MR.current, Ji(MR, r);
    }
    function zp(r, o) {
      r.finishedWork = null, r.finishedLanes = at;
      var f = r.timeoutHandle;
      if (f !== FT && (r.timeoutHandle = FT, iB(f)), po !== null)
        for (var h = po.return; h !== null; ) {
          var b = h.alternate;
          _D(b, h), h = h.return;
        }
      ga = r;
      var T = Vp(r.current, null);
      return po = T, ri = Ru = o, oi = Lc, ib = null, Ex = at, ab = at, Tx = at, sb = null, Va = null, OU(), Rl.discardPendingWarnings(), T;
    }
    function lN(r, o) {
      do {
        var f = po;
        try {
          if (Hw(), DI(), Br(), kR.current = null, f === null || f.return === null) {
            oi = rb, ib = o, po = null;
            return;
          }
          if (ce && f.mode & ir && gx(f, !0), fe)
            if (fa(), o !== null && typeof o == "object" && typeof o.then == "function") {
              var h = o;
              Ds(f, h, ri);
            } else
              Kf(f, o, ri);
          n5(r, f.return, f, o, ri), fN(f);
        } catch (b) {
          o = b, po === f && f !== null ? (f = f.return, po = f) : f = po;
          continue;
        }
        return;
      } while (!0);
    }
    function uN() {
      var r = OR.current;
      return OR.current = dx, r === null ? dx : r;
    }
    function cN(r) {
      OR.current = r;
    }
    function NG() {
      IR = Lo();
    }
    function fb(r) {
      Ex = kn(r, Ex);
    }
    function LG() {
      oi === Lc && (oi = xx);
    }
    function zR() {
      (oi === Lc || oi === xx || oi === $p) && (oi = ob), ga !== null && (ip(Ex) || ip(ab)) && Yd(ga, ri);
    }
    function FG(r) {
      oi !== ob && (oi = $p), sb === null ? sb = [r] : sb.push(r);
    }
    function _G() {
      return oi === Lc;
    }
    function Dx(r, o) {
      var f = Xn;
      Xn |= Fi;
      var h = uN();
      if (ga !== r || ri !== o) {
        if (Wi) {
          var b = r.memoizedUpdaters;
          b.size > 0 && (pb(r, ri), b.clear()), $S(r, o);
        }
        Fc = ry(), zp(r, o);
      }
      fc(o);
      do
        try {
          AG();
          break;
        } catch (T) {
          lN(r, T);
        }
      while (!0);
      if (Hw(), Xn = f, cN(h), po !== null)
        throw new Error("Cannot commit an incomplete root. This error is likely caused by a bug in React. Please file an issue.");
      return Uh(), ga = null, ri = at, oi;
    }
    function AG() {
      for (; po !== null; )
        dN(po);
    }
    function $G(r, o) {
      var f = Xn;
      Xn |= Fi;
      var h = uN();
      if (ga !== r || ri !== o) {
        if (Wi) {
          var b = r.memoizedUpdaters;
          b.size > 0 && (pb(r, ri), b.clear()), $S(r, o);
        }
        Fc = ry(), lb(), zp(r, o);
      }
      fc(o);
      do
        try {
          jG();
          break;
        } catch (T) {
          lN(r, T);
        }
      while (!0);
      return Hw(), cN(h), Xn = f, po !== null ? (PS(), Lc) : (Uh(), ga = null, ri = at, oi);
    }
    function jG() {
      for (; po !== null && !_v(); )
        dN(po);
    }
    function dN(r) {
      var o = r.alternate;
      wr(r);
      var f;
      (r.mode & ir) !== nn ? (B1(r), f = HR(o, r, Ru), gx(r, !0)) : f = HR(o, r, Ru), Br(), r.memoizedProps = r.pendingProps, f === null ? fN(r) : po = f, kR.current = null;
    }
    function fN(r) {
      var o = r;
      do {
        var f = o.alternate, h = o.return;
        if ((o.flags & Gf) === tn) {
          wr(o);
          var b = void 0;
          if ((o.mode & ir) === nn ? b = FD(f, o, Ru) : (B1(o), b = FD(f, o, Ru), gx(o, !1)), Br(), b !== null) {
            po = b;
            return;
          }
        } else {
          var T = L5(f, o);
          if (T !== null) {
            T.flags &= xS, po = T;
            return;
          }
          if ((o.mode & ir) !== nn) {
            gx(o, !1);
            for (var N = o.actualDuration, V = o.child; V !== null; )
              N += V.actualDuration, V = V.sibling;
            o.actualDuration = N;
          }
          if (h !== null)
            h.flags |= Gf, h.subtreeFlags = tn, h.deletions = null;
          else {
            oi = PR, po = null;
            return;
          }
        }
        var Z = o.sibling;
        if (Z !== null) {
          po = Z;
          return;
        }
        o = h, po = o;
      } while (o !== null);
      oi === Lc && (oi = ZD);
    }
    function Hp(r, o, f) {
      var h = Aa(), b = Li.transition;
      try {
        Li.transition = null, So(Ei), zG(r, o, f, h);
      } finally {
        Li.transition = b, So(h);
      }
      return null;
    }
    function zG(r, o, f, h) {
      do
        Ac();
      while (qd !== null);
      if (QG(), (Xn & (Fi | Bs)) !== ni)
        throw new Error("Should not already be working.");
      var b = r.finishedWork, T = r.finishedLanes;
      if (Vv(T), b === null)
        return Bv(), null;
      if (T === at && d("root.finishedLanes should not be empty during a commit. This is a bug in React."), r.finishedWork = null, r.finishedLanes = at, b === r.current)
        throw new Error("Cannot commit the same tree as before. This error is likely caused by a bug in React. Please file an issue.");
      r.callbackNode = null, r.callbackPriority = nr;
      var N = kn(b.lanes, b.childLanes);
      ty(r, N), r === ga && (ga = null, po = null, ri = at), ((b.subtreeFlags & gl) !== tn || (b.flags & gl) !== tn) && (jp || (jp = !0, LR = f, UR(vl, function() {
        return Ac(), null;
      })));
      var V = (b.subtreeFlags & (ru | ou | iu | gl)) !== tn, Z = (b.flags & (ru | ou | iu | gl)) !== tn;
      if (V || Z) {
        var se = Li.transition;
        Li.transition = null;
        var le = Aa();
        So(Ei);
        var Te = Xn;
        Xn |= Bs, kR.current = null, j5(r, b), rD(), Z5(r, b, T), JV(r.containerInfo), r.current = b, Yf(T), eG(b, r, T), Xf(), Av(), Xn = Te, So(le), Li.transition = se;
      } else
        r.current = b, rD();
      var xe = jp;
      if (jp ? (jp = !1, qd = r, ub = T) : (eg = 0, kx = null), N = r.pendingLanes, N === at && (Zm = null), xe || gN(r.current, !1), jv(b.stateNode, h), Wi && r.memoizedUpdaters.clear(), bG(), Ba(r, Lo()), o !== null)
        for (var Ae = r.onRecoverableError, ze = 0; ze < o.length; ze++) {
          var qe = o[ze], Dt = qe.stack, ln = qe.digest;
          Ae(qe.value, {
            componentStack: Dt,
            digest: ln
          });
        }
      if (Rx) {
        Rx = !1;
        var Jt = DR;
        throw DR = null, Jt;
      }
      return Ki(ub, hn) && r.tag !== Ad && Ac(), N = r.pendingLanes, Ki(N, hn) ? (GU(), r === FR ? cb++ : (cb = 0, FR = r)) : cb = 0, $d(), Bv(), null;
    }
    function Ac() {
      if (qd !== null) {
        var r = HS(ub), o = dp(Fa, r), f = Li.transition, h = Aa();
        try {
          return Li.transition = null, So(o), VG();
        } finally {
          So(h), Li.transition = f;
        }
      }
      return !1;
    }
    function HG(r) {
      NR.push(r), jp || (jp = !0, UR(vl, function() {
        return Ac(), null;
      }));
    }
    function VG() {
      if (qd === null)
        return !1;
      var r = LR;
      LR = null;
      var o = qd, f = ub;
      if (qd = null, ub = at, (Xn & (Fi | Bs)) !== ni)
        throw new Error("Cannot flush passive effects while already rendering.");
      _R = !0, Ox = !1, dc(f);
      var h = Xn;
      Xn |= Bs, sG(o.current), rG(o, o.current, f, r);
      {
        var b = NR;
        NR = [];
        for (var T = 0; T < b.length; T++) {
          var N = b[T];
          B5(o, N);
        }
      }
      Wv(), gN(o.current, !0), Xn = h, $d(), Ox ? o === kx ? eg++ : (eg = 0, kx = o) : eg = 0, _R = !1, Ox = !1, zv(o);
      {
        var V = o.current.stateNode;
        V.effectDuration = 0, V.passiveEffectDuration = 0;
      }
      return !0;
    }
    function pN(r) {
      return Zm !== null && Zm.has(r);
    }
    function BG(r) {
      Zm === null ? Zm = /* @__PURE__ */ new Set([r]) : Zm.add(r);
    }
    function UG(r) {
      Rx || (Rx = !0, DR = r);
    }
    var GG = UG;
    function hN(r, o, f) {
      var h = _p(f, o), b = dD(r, h, hn), T = zd(r, b, hn), N = va();
      T !== null && (Td(T, hn, N), Ba(T, N));
    }
    function Ur(r, o, f) {
      if (_5(f), hb(!1), r.tag === C) {
        hN(r, r, f);
        return;
      }
      var h = null;
      for (h = o; h !== null; ) {
        if (h.tag === C) {
          hN(h, r, f);
          return;
        } else if (h.tag === v) {
          var b = h.type, T = h.stateNode;
          if (typeof b.getDerivedStateFromError == "function" || typeof T.componentDidCatch == "function" && !pN(T)) {
            var N = _p(f, r), V = sR(h, N, hn), Z = zd(h, V, hn), se = va();
            Z !== null && (Td(Z, hn, se), Ba(Z, se));
            return;
          }
        }
        h = h.return;
      }
      d(`Internal React error: Attempted to capture a commit phase error inside a detached tree. This indicates a bug in React. Likely causes include deleting the same fiber more than once, committing an already-finished tree, or an inconsistent return pointer.

Error message:

%s`, f);
    }
    function WG(r, o, f) {
      var h = r.pingCache;
      h !== null && h.delete(o);
      var b = va();
      fm(r, f), t4(r), ga === r && Cc(ri, f) && (oi === ob || oi === xx && bc(ri) && Lo() - IR < eN ? zp(r, at) : Tx = kn(Tx, f)), Ba(r, b);
    }
    function mN(r, o) {
      o === nr && (o = RG(r));
      var f = va(), h = za(r, o);
      h !== null && (Td(h, o, f), Ba(h, f));
    }
    function qG(r) {
      var o = r.memoizedState, f = nr;
      o !== null && (f = o.retryLane), mN(r, f);
    }
    function KG(r, o) {
      var f = nr, h;
      switch (r.tag) {
        case D:
          h = r.stateNode;
          var b = r.memoizedState;
          b !== null && (f = b.retryLane);
          break;
        case U:
          h = r.stateNode;
          break;
        default:
          throw new Error("Pinged unknown suspense boundary type. This is probably a bug in React.");
      }
      h !== null && h.delete(o), mN(r, f);
    }
    function YG(r) {
      return r < 120 ? 120 : r < 480 ? 480 : r < 1080 ? 1080 : r < 1920 ? 1920 : r < 3e3 ? 3e3 : r < 4320 ? 4320 : wG(r / 1960) * 1960;
    }
    function XG() {
      if (cb > EG)
        throw cb = 0, FR = null, new Error("Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops.");
      eg > TG && (eg = 0, kx = null, d("Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render."));
    }
    function QG() {
      Rl.flushLegacyContextWarning(), Rl.flushPendingUnsafeLifecycleWarnings();
    }
    function gN(r, o) {
      wr(r), Nx(r, nu, gG), o && Nx(r, Ps, vG), Nx(r, nu, hG), o && Nx(r, Ps, mG), Br();
    }
    function Nx(r, o, f) {
      for (var h = r, b = null; h !== null; ) {
        var T = h.subtreeFlags & o;
        h !== b && h.child !== null && T !== tn ? h = h.child : ((h.flags & o) !== tn && f(h), h.sibling !== null ? h = h.sibling : h = b = h.return);
      }
    }
    var Lx = null;
    function vN(r) {
      {
        if ((Xn & Fi) !== ni || !(r.mode & Ln))
          return;
        var o = r.tag;
        if (o !== y && o !== C && o !== v && o !== m && o !== _ && o !== z && o !== K)
          return;
        var f = Sn(r) || "ReactComponent";
        if (Lx !== null) {
          if (Lx.has(f))
            return;
          Lx.add(f);
        } else
          Lx = /* @__PURE__ */ new Set([f]);
        var h = qo;
        try {
          wr(r), d("Can't perform a React state update on a component that hasn't mounted yet. This indicates that you have a side-effect in your render function that asynchronously later calls tries to update the component. Move this work to useEffect instead.");
        } finally {
          h ? wr(r) : Br();
        }
      }
    }
    var HR;
    {
      var JG = null;
      HR = function(r, o, f) {
        var h = TN(JG, o);
        try {
          return MD(r, o, f);
        } catch (T) {
          if (cU() || T !== null && typeof T == "object" && typeof T.then == "function")
            throw T;
          if (Hw(), DI(), _D(r, o), TN(o, h), o.mode & ir && B1(o), tu(null, MD, null, r, o, f), hl()) {
            var b = Uf();
            typeof b == "object" && b !== null && b._suppressLogging && typeof T == "object" && T !== null && !T._suppressLogging && (T._suppressLogging = !0);
          }
          throw T;
        }
      };
    }
    var yN = !1, VR;
    VR = /* @__PURE__ */ new Set();
    function ZG(r) {
      if (ws && !VU())
        switch (r.tag) {
          case m:
          case _:
          case K: {
            var o = po && Sn(po) || "Unknown", f = o;
            if (!VR.has(f)) {
              VR.add(f);
              var h = Sn(r) || "Unknown";
              d("Cannot update a component (`%s`) while rendering a different component (`%s`). To locate the bad setState() call inside `%s`, follow the stack trace as described in https://reactjs.org/link/setstate-in-render", h, o, o);
            }
            break;
          }
          case v: {
            yN || (d("Cannot update during an existing state transition (such as within `render`). Render methods should be a pure function of props and state."), yN = !0);
            break;
          }
        }
    }
    function pb(r, o) {
      if (Wi) {
        var f = r.memoizedUpdaters;
        f.forEach(function(h) {
          up(r, h, o);
        });
      }
    }
    var BR = {};
    function UR(r, o) {
      {
        var f = Ll.current;
        return f !== null ? (f.push(o), BR) : Fv(r, o);
      }
    }
    function bN(r) {
      if (r !== BR)
        return TS(r);
    }
    function CN() {
      return Ll.current !== null;
    }
    function e4(r) {
      {
        if (r.mode & Ln) {
          if (!QD())
            return;
        } else if (!SG() || Xn !== ni || r.tag !== m && r.tag !== _ && r.tag !== K)
          return;
        if (Ll.current === null) {
          var o = qo;
          try {
            wr(r), d(`An update to %s inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act`, Sn(r));
          } finally {
            o ? wr(r) : Br();
          }
        }
      }
    }
    function t4(r) {
      r.tag !== Ad && QD() && Ll.current === null && d(`A suspended resource finished loading inside a test, but the event was not wrapped in act(...).

When testing, code that resolves suspended data should be wrapped into act(...):

act(() => {
  /* finish loading suspended data */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act`);
    }
    function hb(r) {
      rN = r;
    }
    var Us = null, tg = null, n4 = function(r) {
      Us = r;
    };
    function ng(r) {
      {
        if (Us === null)
          return r;
        var o = Us(r);
        return o === void 0 ? r : o.current;
      }
    }
    function GR(r) {
      return ng(r);
    }
    function WR(r) {
      {
        if (Us === null)
          return r;
        var o = Us(r);
        if (o === void 0) {
          if (r != null && typeof r.render == "function") {
            var f = ng(r.render);
            if (r.render !== f) {
              var h = {
                $$typeof: We,
                render: f
              };
              return r.displayName !== void 0 && (h.displayName = r.displayName), h;
            }
          }
          return r;
        }
        return o.current;
      }
    }
    function SN(r, o) {
      {
        if (Us === null)
          return !1;
        var f = r.elementType, h = o.type, b = !1, T = typeof h == "object" && h !== null ? h.$$typeof : null;
        switch (r.tag) {
          case v: {
            typeof h == "function" && (b = !0);
            break;
          }
          case m: {
            (typeof h == "function" || T === Le) && (b = !0);
            break;
          }
          case _: {
            (T === We || T === Le) && (b = !0);
            break;
          }
          case z:
          case K: {
            (T === mn || T === Le) && (b = !0);
            break;
          }
          default:
            return !1;
        }
        if (b) {
          var N = Us(f);
          if (N !== void 0 && N === Us(h))
            return !0;
        }
        return !1;
      }
    }
    function wN(r) {
      {
        if (Us === null || typeof WeakSet != "function")
          return;
        tg === null && (tg = /* @__PURE__ */ new WeakSet()), tg.add(r);
      }
    }
    var r4 = function(r, o) {
      {
        if (Us === null)
          return;
        var f = o.staleFamilies, h = o.updatedFamilies;
        Ac(), _c(function() {
          qR(r.current, h, f);
        });
      }
    }, o4 = function(r, o) {
      {
        if (r.context !== as)
          return;
        Ac(), _c(function() {
          mb(o, r, null, null);
        });
      }
    };
    function qR(r, o, f) {
      {
        var h = r.alternate, b = r.child, T = r.sibling, N = r.tag, V = r.type, Z = null;
        switch (N) {
          case m:
          case K:
          case v:
            Z = V;
            break;
          case _:
            Z = V.render;
            break;
        }
        if (Us === null)
          throw new Error("Expected resolveFamily to be set during hot reload.");
        var se = !1, le = !1;
        if (Z !== null) {
          var Te = Us(Z);
          Te !== void 0 && (f.has(Te) ? le = !0 : o.has(Te) && (N === v ? le = !0 : se = !0));
        }
        if (tg !== null && (tg.has(r) || h !== null && tg.has(h)) && (le = !0), le && (r._debugNeedsRemount = !0), le || se) {
          var xe = za(r, hn);
          xe !== null && ii(xe, r, hn, Lr);
        }
        b !== null && !le && qR(b, o, f), T !== null && qR(T, o, f);
      }
    }
    var i4 = function(r, o) {
      {
        var f = /* @__PURE__ */ new Set(), h = new Set(o.map(function(b) {
          return b.current;
        }));
        return KR(r.current, h, f), f;
      }
    };
    function KR(r, o, f) {
      {
        var h = r.child, b = r.sibling, T = r.tag, N = r.type, V = null;
        switch (T) {
          case m:
          case K:
          case v:
            V = N;
            break;
          case _:
            V = N.render;
            break;
        }
        var Z = !1;
        V !== null && o.has(V) && (Z = !0), Z ? a4(r, f) : h !== null && KR(h, o, f), b !== null && KR(b, o, f);
      }
    }
    function a4(r, o) {
      {
        var f = s4(r, o);
        if (f)
          return;
        for (var h = r; ; ) {
          switch (h.tag) {
            case R:
              o.add(h.stateNode);
              return;
            case w:
              o.add(h.stateNode.containerInfo);
              return;
            case C:
              o.add(h.stateNode.containerInfo);
              return;
          }
          if (h.return === null)
            throw new Error("Expected to reach root first.");
          h = h.return;
        }
      }
    }
    function s4(r, o) {
      for (var f = r, h = !1; ; ) {
        if (f.tag === R)
          h = !0, o.add(f.stateNode);
        else if (f.child !== null) {
          f.child.return = f, f = f.child;
          continue;
        }
        if (f === r)
          return h;
        for (; f.sibling === null; ) {
          if (f.return === null || f.return === r)
            return h;
          f = f.return;
        }
        f.sibling.return = f.return, f = f.sibling;
      }
      return !1;
    }
    var YR;
    {
      YR = !1;
      try {
        var xN = Object.preventExtensions({});
      } catch {
        YR = !0;
      }
    }
    function l4(r, o, f, h) {
      this.tag = r, this.key = f, this.elementType = null, this.type = null, this.stateNode = null, this.return = null, this.child = null, this.sibling = null, this.index = 0, this.ref = null, this.pendingProps = o, this.memoizedProps = null, this.updateQueue = null, this.memoizedState = null, this.dependencies = null, this.mode = h, this.flags = tn, this.subtreeFlags = tn, this.deletions = null, this.lanes = at, this.childLanes = at, this.alternate = null, this.actualDuration = Number.NaN, this.actualStartTime = Number.NaN, this.selfBaseDuration = Number.NaN, this.treeBaseDuration = Number.NaN, this.actualDuration = 0, this.actualStartTime = -1, this.selfBaseDuration = 0, this.treeBaseDuration = 0, this._debugSource = null, this._debugOwner = null, this._debugNeedsRemount = !1, this._debugHookTypes = null, !YR && typeof Object.preventExtensions == "function" && Object.preventExtensions(this);
    }
    var ss = function(r, o, f, h) {
      return new l4(r, o, f, h);
    };
    function XR(r) {
      var o = r.prototype;
      return !!(o && o.isReactComponent);
    }
    function u4(r) {
      return typeof r == "function" && !XR(r) && r.defaultProps === void 0;
    }
    function c4(r) {
      if (typeof r == "function")
        return XR(r) ? v : m;
      if (r != null) {
        var o = r.$$typeof;
        if (o === We)
          return _;
        if (o === mn)
          return z;
      }
      return y;
    }
    function Vp(r, o) {
      var f = r.alternate;
      f === null ? (f = ss(r.tag, o, r.key, r.mode), f.elementType = r.elementType, f.type = r.type, f.stateNode = r.stateNode, f._debugSource = r._debugSource, f._debugOwner = r._debugOwner, f._debugHookTypes = r._debugHookTypes, f.alternate = r, r.alternate = f) : (f.pendingProps = o, f.type = r.type, f.flags = tn, f.subtreeFlags = tn, f.deletions = null, f.actualDuration = 0, f.actualStartTime = -1), f.flags = r.flags & yo, f.childLanes = r.childLanes, f.lanes = r.lanes, f.child = r.child, f.memoizedProps = r.memoizedProps, f.memoizedState = r.memoizedState, f.updateQueue = r.updateQueue;
      var h = r.dependencies;
      switch (f.dependencies = h === null ? null : {
        lanes: h.lanes,
        firstContext: h.firstContext
      }, f.sibling = r.sibling, f.index = r.index, f.ref = r.ref, f.selfBaseDuration = r.selfBaseDuration, f.treeBaseDuration = r.treeBaseDuration, f._debugNeedsRemount = r._debugNeedsRemount, f.tag) {
        case y:
        case m:
        case K:
          f.type = ng(r.type);
          break;
        case v:
          f.type = GR(r.type);
          break;
        case _:
          f.type = WR(r.type);
          break;
      }
      return f;
    }
    function d4(r, o) {
      r.flags &= yo | Qr;
      var f = r.alternate;
      if (f === null)
        r.childLanes = at, r.lanes = o, r.child = null, r.subtreeFlags = tn, r.memoizedProps = null, r.memoizedState = null, r.updateQueue = null, r.dependencies = null, r.stateNode = null, r.selfBaseDuration = 0, r.treeBaseDuration = 0;
      else {
        r.childLanes = f.childLanes, r.lanes = f.lanes, r.child = f.child, r.subtreeFlags = tn, r.deletions = null, r.memoizedProps = f.memoizedProps, r.memoizedState = f.memoizedState, r.updateQueue = f.updateQueue, r.type = f.type;
        var h = f.dependencies;
        r.dependencies = h === null ? null : {
          lanes: h.lanes,
          firstContext: h.firstContext
        }, r.selfBaseDuration = f.selfBaseDuration, r.treeBaseDuration = f.treeBaseDuration;
      }
      return r;
    }
    function f4(r, o, f) {
      var h;
      return r === Iw ? (h = Ln, o === !0 && (h |= Tr, h |= ar)) : h = nn, Wi && (h |= ir), ss(C, null, null, h);
    }
    function QR(r, o, f, h, b, T) {
      var N = y, V = r;
      if (typeof r == "function")
        XR(r) ? (N = v, V = GR(V)) : V = ng(V);
      else if (typeof r == "string")
        N = R;
      else
        e: switch (r) {
          case zn:
            return Xd(f.children, b, T, o);
          case Ar:
            N = k, b |= Tr, (b & Ln) !== nn && (b |= ar);
            break;
          case ro:
            return p4(f, b, T, o);
          case pt:
            return h4(f, b, T, o);
          case Ot:
            return m4(f, b, T, o);
          case Gt:
            return EN(f, b, T, o);
          case Bt:
          case ke:
          case Qt:
          case Hn:
          case Ze:
          default: {
            if (typeof r == "object" && r !== null)
              switch (r.$$typeof) {
                case mo:
                  N = F;
                  break e;
                case ve:
                  N = L;
                  break e;
                case We:
                  N = _, V = WR(V);
                  break e;
                case mn:
                  N = z;
                  break e;
                case Le:
                  N = Q, V = null;
                  break e;
              }
            var Z = "";
            {
              (r === void 0 || typeof r == "object" && r !== null && Object.keys(r).length === 0) && (Z += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.");
              var se = h ? Sn(h) : null;
              se && (Z += `

Check the render method of \`` + se + "`.");
            }
            throw new Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) " + ("but got: " + (r == null ? r : typeof r) + "." + Z));
          }
        }
      var le = ss(N, f, o, b);
      return le.elementType = r, le.type = V, le.lanes = T, le._debugOwner = h, le;
    }
    function JR(r, o, f) {
      var h = null;
      h = r._owner;
      var b = r.type, T = r.key, N = r.props, V = QR(b, T, N, h, o, f);
      return V._debugSource = r._source, V._debugOwner = r._owner, V;
    }
    function Xd(r, o, f, h) {
      var b = ss(E, r, h, o);
      return b.lanes = f, b;
    }
    function p4(r, o, f, h) {
      typeof r.id != "string" && d('Profiler must specify an "id" of type `string` as a prop. Received the type `%s` instead.', typeof r.id);
      var b = ss(P, r, h, o | ir);
      return b.elementType = ro, b.lanes = f, b.stateNode = {
        effectDuration: 0,
        passiveEffectDuration: 0
      }, b;
    }
    function h4(r, o, f, h) {
      var b = ss(D, r, h, o);
      return b.elementType = pt, b.lanes = f, b;
    }
    function m4(r, o, f, h) {
      var b = ss(U, r, h, o);
      return b.elementType = Ot, b.lanes = f, b;
    }
    function EN(r, o, f, h) {
      var b = ss(Y, r, h, o);
      b.elementType = Gt, b.lanes = f;
      var T = {
        isHidden: !1
      };
      return b.stateNode = T, b;
    }
    function ZR(r, o, f) {
      var h = ss(O, r, null, o);
      return h.lanes = f, h;
    }
    function g4() {
      var r = ss(R, null, null, nn);
      return r.elementType = "DELETED", r;
    }
    function v4(r) {
      var o = ss(I, null, null, nn);
      return o.stateNode = r, o;
    }
    function eO(r, o, f) {
      var h = r.children !== null ? r.children : [], b = ss(w, h, r.key, o);
      return b.lanes = f, b.stateNode = {
        containerInfo: r.containerInfo,
        pendingChildren: null,
        // Used by persistent updates
        implementation: r.implementation
      }, b;
    }
    function TN(r, o) {
      return r === null && (r = ss(y, null, null, nn)), r.tag = o.tag, r.key = o.key, r.elementType = o.elementType, r.type = o.type, r.stateNode = o.stateNode, r.return = o.return, r.child = o.child, r.sibling = o.sibling, r.index = o.index, r.ref = o.ref, r.pendingProps = o.pendingProps, r.memoizedProps = o.memoizedProps, r.updateQueue = o.updateQueue, r.memoizedState = o.memoizedState, r.dependencies = o.dependencies, r.mode = o.mode, r.flags = o.flags, r.subtreeFlags = o.subtreeFlags, r.deletions = o.deletions, r.lanes = o.lanes, r.childLanes = o.childLanes, r.alternate = o.alternate, r.actualDuration = o.actualDuration, r.actualStartTime = o.actualStartTime, r.selfBaseDuration = o.selfBaseDuration, r.treeBaseDuration = o.treeBaseDuration, r._debugSource = o._debugSource, r._debugOwner = o._debugOwner, r._debugNeedsRemount = o._debugNeedsRemount, r._debugHookTypes = o._debugHookTypes, r;
    }
    function y4(r, o, f, h, b) {
      this.tag = o, this.containerInfo = r, this.pendingChildren = null, this.current = null, this.pingCache = null, this.finishedWork = null, this.timeoutHandle = FT, this.context = null, this.pendingContext = null, this.callbackNode = null, this.callbackPriority = nr, this.eventTimes = lp(at), this.expirationTimes = lp(Lr), this.pendingLanes = at, this.suspendedLanes = at, this.pingedLanes = at, this.expiredLanes = at, this.mutableReadLanes = at, this.finishedLanes = at, this.entangledLanes = at, this.entanglements = lp(at), this.identifierPrefix = h, this.onRecoverableError = b, this.mutableSourceEagerHydrationData = null, this.effectDuration = 0, this.passiveEffectDuration = 0;
      {
        this.memoizedUpdaters = /* @__PURE__ */ new Set();
        for (var T = this.pendingUpdatersLaneMap = [], N = 0; N < pc; N++)
          T.push(/* @__PURE__ */ new Set());
      }
      switch (o) {
        case Iw:
          this._debugRootType = f ? "hydrateRoot()" : "createRoot()";
          break;
        case Ad:
          this._debugRootType = f ? "hydrate()" : "render()";
          break;
      }
    }
    function RN(r, o, f, h, b, T, N, V, Z, se) {
      var le = new y4(r, o, f, V, Z), Te = f4(o, T);
      le.current = Te, Te.stateNode = le;
      {
        var xe = {
          element: h,
          isDehydrated: f,
          cache: null,
          // not enabled yet
          transitions: null,
          pendingSuspenseBoundaries: null
        };
        Te.memoizedState = xe;
      }
      return p1(Te), le;
    }
    var tO = "18.3.1";
    function b4(r, o, f) {
      var h = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : null;
      return Ne(h), {
        // This tag allow us to uniquely identify this as a React Portal
        $$typeof: on,
        key: h == null ? null : "" + h,
        children: r,
        containerInfo: o,
        implementation: f
      };
    }
    var nO, rO;
    nO = !1, rO = {};
    function ON(r) {
      if (!r)
        return as;
      var o = bd(r), f = tU(o);
      if (o.tag === v) {
        var h = o.type;
        if (bu(h))
          return eI(o, h, f);
      }
      return f;
    }
    function C4(r, o) {
      {
        var f = bd(r);
        if (f === void 0) {
          if (typeof r.render == "function")
            throw new Error("Unable to find node on an unmounted component.");
          var h = Object.keys(r).join(",");
          throw new Error("Argument appears to not be a ReactComponent. Keys: " + h);
        }
        var b = Ui(f);
        if (b === null)
          return null;
        if (b.mode & Tr) {
          var T = Sn(f) || "Component";
          if (!rO[T]) {
            rO[T] = !0;
            var N = qo;
            try {
              wr(b), f.mode & Tr ? d("%s is deprecated in StrictMode. %s was passed an instance of %s which is inside StrictMode. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node", o, o, T) : d("%s is deprecated in StrictMode. %s was passed an instance of %s which renders StrictMode children. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node", o, o, T);
            } finally {
              N ? wr(N) : Br();
            }
          }
        }
        return b.stateNode;
      }
    }
    function kN(r, o, f, h, b, T, N, V) {
      var Z = !1, se = null;
      return RN(r, o, Z, se, f, h, b, T, N);
    }
    function PN(r, o, f, h, b, T, N, V, Z, se) {
      var le = !0, Te = RN(f, h, le, r, b, T, N, V, Z);
      Te.context = ON(null);
      var xe = Te.current, Ae = va(), ze = Kd(xe), qe = Dc(Ae, ze);
      return qe.callback = o ?? null, zd(xe, qe, ze), OG(Te, ze, Ae), Te;
    }
    function mb(r, o, f, h) {
      $v(o, r);
      var b = o.current, T = va(), N = Kd(b);
      Zr(N);
      var V = ON(f);
      o.context === null ? o.context = V : o.pendingContext = V, ws && qo !== null && !nO && (nO = !0, d(`Render methods should be a pure function of props and state; triggering nested component updates from render is not allowed. If necessary, trigger nested updates in componentDidUpdate.

Check the render method of %s.`, Sn(qo) || "Unknown"));
      var Z = Dc(T, N);
      Z.payload = {
        element: r
      }, h = h === void 0 ? null : h, h !== null && (typeof h != "function" && d("render(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", h), Z.callback = h);
      var se = zd(b, Z, N);
      return se !== null && (ii(se, b, N, T), Ww(se, b, N)), N;
    }
    function Fx(r) {
      var o = r.current;
      if (!o.child)
        return null;
      switch (o.child.tag) {
        case R:
          return o.child.stateNode;
        default:
          return o.child.stateNode;
      }
    }
    function S4(r) {
      switch (r.tag) {
        case C: {
          var o = r.stateNode;
          if (hm(o)) {
            var f = IS(o);
            IG(o, f);
          }
          break;
        }
        case D: {
          _c(function() {
            var b = za(r, hn);
            if (b !== null) {
              var T = va();
              ii(b, r, hn, T);
            }
          });
          var h = hn;
          oO(r, h);
          break;
        }
      }
    }
    function MN(r, o) {
      var f = r.memoizedState;
      f !== null && f.dehydrated !== null && (f.retryLane = _S(f.retryLane, o));
    }
    function oO(r, o) {
      MN(r, o);
      var f = r.alternate;
      f && MN(f, o);
    }
    function w4(r) {
      if (r.tag === D) {
        var o = np, f = za(r, o);
        if (f !== null) {
          var h = va();
          ii(f, r, o, h);
        }
        oO(r, o);
      }
    }
    function x4(r) {
      if (r.tag === D) {
        var o = Kd(r), f = za(r, o);
        if (f !== null) {
          var h = va();
          ii(f, r, o, h);
        }
        oO(r, o);
      }
    }
    function IN(r) {
      var o = qr(r);
      return o === null ? null : o.stateNode;
    }
    var DN = function(r) {
      return null;
    };
    function E4(r) {
      return DN(r);
    }
    var NN = function(r) {
      return !1;
    };
    function T4(r) {
      return NN(r);
    }
    var LN = null, FN = null, _N = null, AN = null, $N = null, jN = null, zN = null, HN = null, VN = null;
    {
      var BN = function(r, o, f) {
        var h = o[f], b = Dn(r) ? r.slice() : Rn({}, r);
        return f + 1 === o.length ? (Dn(b) ? b.splice(h, 1) : delete b[h], b) : (b[h] = BN(r[h], o, f + 1), b);
      }, UN = function(r, o) {
        return BN(r, o, 0);
      }, GN = function(r, o, f, h) {
        var b = o[h], T = Dn(r) ? r.slice() : Rn({}, r);
        if (h + 1 === o.length) {
          var N = f[h];
          T[N] = T[b], Dn(T) ? T.splice(b, 1) : delete T[b];
        } else
          T[b] = GN(
            // $FlowFixMe number or string is fine here
            r[b],
            o,
            f,
            h + 1
          );
        return T;
      }, WN = function(r, o, f) {
        if (o.length !== f.length) {
          u("copyWithRename() expects paths of the same length");
          return;
        } else
          for (var h = 0; h < f.length - 1; h++)
            if (o[h] !== f[h]) {
              u("copyWithRename() expects paths to be the same except for the deepest key");
              return;
            }
        return GN(r, o, f, 0);
      }, qN = function(r, o, f, h) {
        if (f >= o.length)
          return h;
        var b = o[f], T = Dn(r) ? r.slice() : Rn({}, r);
        return T[b] = qN(r[b], o, f + 1, h), T;
      }, KN = function(r, o, f) {
        return qN(r, o, 0, f);
      }, iO = function(r, o) {
        for (var f = r.memoizedState; f !== null && o > 0; )
          f = f.next, o--;
        return f;
      };
      LN = function(r, o, f, h) {
        var b = iO(r, o);
        if (b !== null) {
          var T = KN(b.memoizedState, f, h);
          b.memoizedState = T, b.baseState = T, r.memoizedProps = Rn({}, r.memoizedProps);
          var N = za(r, hn);
          N !== null && ii(N, r, hn, Lr);
        }
      }, FN = function(r, o, f) {
        var h = iO(r, o);
        if (h !== null) {
          var b = UN(h.memoizedState, f);
          h.memoizedState = b, h.baseState = b, r.memoizedProps = Rn({}, r.memoizedProps);
          var T = za(r, hn);
          T !== null && ii(T, r, hn, Lr);
        }
      }, _N = function(r, o, f, h) {
        var b = iO(r, o);
        if (b !== null) {
          var T = WN(b.memoizedState, f, h);
          b.memoizedState = T, b.baseState = T, r.memoizedProps = Rn({}, r.memoizedProps);
          var N = za(r, hn);
          N !== null && ii(N, r, hn, Lr);
        }
      }, AN = function(r, o, f) {
        r.pendingProps = KN(r.memoizedProps, o, f), r.alternate && (r.alternate.pendingProps = r.pendingProps);
        var h = za(r, hn);
        h !== null && ii(h, r, hn, Lr);
      }, $N = function(r, o) {
        r.pendingProps = UN(r.memoizedProps, o), r.alternate && (r.alternate.pendingProps = r.pendingProps);
        var f = za(r, hn);
        f !== null && ii(f, r, hn, Lr);
      }, jN = function(r, o, f) {
        r.pendingProps = WN(r.memoizedProps, o, f), r.alternate && (r.alternate.pendingProps = r.pendingProps);
        var h = za(r, hn);
        h !== null && ii(h, r, hn, Lr);
      }, zN = function(r) {
        var o = za(r, hn);
        o !== null && ii(o, r, hn, Lr);
      }, HN = function(r) {
        DN = r;
      }, VN = function(r) {
        NN = r;
      };
    }
    function R4(r) {
      var o = Ui(r);
      return o === null ? null : o.stateNode;
    }
    function O4(r) {
      return null;
    }
    function k4() {
      return qo;
    }
    function P4(r) {
      var o = r.findFiberByHostInstance, f = n.ReactCurrentDispatcher;
      return wd({
        bundleType: r.bundleType,
        version: r.version,
        rendererPackageName: r.rendererPackageName,
        rendererConfig: r.rendererConfig,
        overrideHookState: LN,
        overrideHookStateDeletePath: FN,
        overrideHookStateRenamePath: _N,
        overrideProps: AN,
        overridePropsDeletePath: $N,
        overridePropsRenamePath: jN,
        setErrorHandler: HN,
        setSuspenseHandler: VN,
        scheduleUpdate: zN,
        currentDispatcherRef: f,
        findHostInstanceByFiber: R4,
        findFiberByHostInstance: o || O4,
        // React Refresh
        findHostInstancesForRefresh: i4,
        scheduleRefresh: r4,
        scheduleRoot: o4,
        setRefreshHandler: n4,
        // Enables DevTools to append owner stacks to error messages in DEV mode.
        getCurrentFiber: k4,
        // Enables DevTools to detect reconciler version rather than renderer version
        // which may not match for third party renderers.
        reconcilerVersion: tO
      });
    }
    var YN = typeof reportError == "function" ? (
      // In modern browsers, reportError will dispatch an error event,
      // emulating an uncaught JavaScript error.
      reportError
    ) : function(r) {
      console.error(r);
    };
    function aO(r) {
      this._internalRoot = r;
    }
    _x.prototype.render = aO.prototype.render = function(r) {
      var o = this._internalRoot;
      if (o === null)
        throw new Error("Cannot update an unmounted root.");
      {
        typeof arguments[1] == "function" ? d("render(...): does not support the second callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().") : Ax(arguments[1]) ? d("You passed a container to the second argument of root.render(...). You don't need to pass it again since you already passed it to create the root.") : typeof arguments[1] < "u" && d("You passed a second argument to root.render(...) but it only accepts one argument.");
        var f = o.containerInfo;
        if (f.nodeType !== go) {
          var h = IN(o.current);
          h && h.parentNode !== f && d("render(...): It looks like the React-rendered content of the root container was removed without using React. This is not supported and will cause errors. Instead, call root.unmount() to empty a root's container.");
        }
      }
      mb(r, o, null, null);
    }, _x.prototype.unmount = aO.prototype.unmount = function() {
      typeof arguments[0] == "function" && d("unmount(...): does not support a callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().");
      var r = this._internalRoot;
      if (r !== null) {
        this._internalRoot = null;
        var o = r.containerInfo;
        sN() && d("Attempted to synchronously unmount a root while React was already rendering. React cannot finish unmounting the root until the current render has completed, which may lead to a race condition."), _c(function() {
          mb(null, r, null, null);
        }), YM(o);
      }
    };
    function M4(r, o) {
      if (!Ax(r))
        throw new Error("createRoot(...): Target container is not a DOM element.");
      XN(r);
      var f = !1, h = !1, b = "", T = YN;
      o != null && (o.hydrate ? u("hydrate through createRoot is deprecated. Use ReactDOMClient.hydrateRoot(container, <App />) instead.") : typeof o == "object" && o !== null && o.$$typeof === en && d(`You passed a JSX element to createRoot. You probably meant to call root.render instead. Example usage:

  let root = createRoot(domContainer);
  root.render(<App />);`), o.unstable_strictMode === !0 && (f = !0), o.identifierPrefix !== void 0 && (b = o.identifierPrefix), o.onRecoverableError !== void 0 && (T = o.onRecoverableError), o.transitionCallbacks !== void 0 && o.transitionCallbacks);
      var N = kN(r, Iw, null, f, h, b, T);
      Ew(N.current, r);
      var V = r.nodeType === go ? r.parentNode : r;
      return Sy(V), new aO(N);
    }
    function _x(r) {
      this._internalRoot = r;
    }
    function I4(r) {
      r && WS(r);
    }
    _x.prototype.unstable_scheduleHydration = I4;
    function D4(r, o, f) {
      if (!Ax(r))
        throw new Error("hydrateRoot(...): Target container is not a DOM element.");
      XN(r), o === void 0 && d("Must provide initial children as second argument to hydrateRoot. Example usage: hydrateRoot(domContainer, <App />)");
      var h = f ?? null, b = f != null && f.hydratedSources || null, T = !1, N = !1, V = "", Z = YN;
      f != null && (f.unstable_strictMode === !0 && (T = !0), f.identifierPrefix !== void 0 && (V = f.identifierPrefix), f.onRecoverableError !== void 0 && (Z = f.onRecoverableError));
      var se = PN(o, null, r, Iw, h, T, N, V, Z);
      if (Ew(se.current, r), Sy(r), b)
        for (var le = 0; le < b.length; le++) {
          var Te = b[le];
          _U(se, Te);
        }
      return new _x(se);
    }
    function Ax(r) {
      return !!(r && (r.nodeType === Hi || r.nodeType === pl || r.nodeType === xv));
    }
    function gb(r) {
      return !!(r && (r.nodeType === Hi || r.nodeType === pl || r.nodeType === xv || r.nodeType === go && r.nodeValue === " react-mount-point-unstable "));
    }
    function XN(r) {
      r.nodeType === Hi && r.tagName && r.tagName.toUpperCase() === "BODY" && d("createRoot(): Creating roots directly with document.body is discouraged, since its children are often manipulated by third-party scripts and browser extensions. This may lead to subtle reconciliation issues. Try using a container element created for your app."), Dy(r) && (r._reactRootContainer ? d("You are calling ReactDOMClient.createRoot() on a container that was previously passed to ReactDOM.render(). This is not supported.") : d("You are calling ReactDOMClient.createRoot() on a container that has already been passed to createRoot() before. Instead, call root.render() on the existing root instead if you want to update it."));
    }
    var N4 = n.ReactCurrentOwner, QN;
    QN = function(r) {
      if (r._reactRootContainer && r.nodeType !== go) {
        var o = IN(r._reactRootContainer.current);
        o && o.parentNode !== r && d("render(...): It looks like the React-rendered content of this container was removed without using React. This is not supported and will cause errors. Instead, call ReactDOM.unmountComponentAtNode to empty a container.");
      }
      var f = !!r._reactRootContainer, h = sO(r), b = !!(h && Fd(h));
      b && !f && d("render(...): Replacing React-rendered children with a new root component. If you intended to update the children of this node, you should instead have the existing children update their state and render the new components instead of calling ReactDOM.render."), r.nodeType === Hi && r.tagName && r.tagName.toUpperCase() === "BODY" && d("render(): Rendering components directly into document.body is discouraged, since its children are often manipulated by third-party scripts and browser extensions. This may lead to subtle reconciliation issues. Try rendering into a container element created for your app.");
    };
    function sO(r) {
      return r ? r.nodeType === pl ? r.documentElement : r.firstChild : null;
    }
    function JN() {
    }
    function L4(r, o, f, h, b) {
      if (b) {
        if (typeof h == "function") {
          var T = h;
          h = function() {
            var xe = Fx(N);
            T.call(xe);
          };
        }
        var N = PN(
          o,
          h,
          r,
          Ad,
          null,
          // hydrationCallbacks
          !1,
          // isStrictMode
          !1,
          // concurrentUpdatesByDefaultOverride,
          "",
          // identifierPrefix
          JN
        );
        r._reactRootContainer = N, Ew(N.current, r);
        var V = r.nodeType === go ? r.parentNode : r;
        return Sy(V), _c(), N;
      } else {
        for (var Z; Z = r.lastChild; )
          r.removeChild(Z);
        if (typeof h == "function") {
          var se = h;
          h = function() {
            var xe = Fx(le);
            se.call(xe);
          };
        }
        var le = kN(
          r,
          Ad,
          null,
          // hydrationCallbacks
          !1,
          // isStrictMode
          !1,
          // concurrentUpdatesByDefaultOverride,
          "",
          // identifierPrefix
          JN
        );
        r._reactRootContainer = le, Ew(le.current, r);
        var Te = r.nodeType === go ? r.parentNode : r;
        return Sy(Te), _c(function() {
          mb(o, le, f, h);
        }), le;
      }
    }
    function F4(r, o) {
      r !== null && typeof r != "function" && d("%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", o, r);
    }
    function $x(r, o, f, h, b) {
      QN(f), F4(b === void 0 ? null : b, "render");
      var T = f._reactRootContainer, N;
      if (!T)
        N = L4(f, o, r, b, h);
      else {
        if (N = T, typeof b == "function") {
          var V = b;
          b = function() {
            var Z = Fx(N);
            V.call(Z);
          };
        }
        mb(o, N, r, b);
      }
      return Fx(N);
    }
    var ZN = !1;
    function _4(r) {
      {
        ZN || (ZN = !0, d("findDOMNode is deprecated and will be removed in the next major release. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node"));
        var o = N4.current;
        if (o !== null && o.stateNode !== null) {
          var f = o.stateNode._warnedAboutRefsInRender;
          f || d("%s is accessing findDOMNode inside its render(). render() should be a pure function of props and state. It should never access something that requires stale data from the previous render, such as refs. Move this logic to componentDidMount and componentDidUpdate instead.", Zn(o.type) || "A component"), o.stateNode._warnedAboutRefsInRender = !0;
        }
      }
      return r == null ? null : r.nodeType === Hi ? r : C4(r, "findDOMNode");
    }
    function A4(r, o, f) {
      if (d("ReactDOM.hydrate is no longer supported in React 18. Use hydrateRoot instead. Until you switch to the new API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot"), !gb(o))
        throw new Error("Target container is not a DOM element.");
      {
        var h = Dy(o) && o._reactRootContainer === void 0;
        h && d("You are calling ReactDOM.hydrate() on a container that was previously passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call hydrateRoot(container, element)?");
      }
      return $x(null, r, o, !0, f);
    }
    function $4(r, o, f) {
      if (d("ReactDOM.render is no longer supported in React 18. Use createRoot instead. Until you switch to the new API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot"), !gb(o))
        throw new Error("Target container is not a DOM element.");
      {
        var h = Dy(o) && o._reactRootContainer === void 0;
        h && d("You are calling ReactDOM.render() on a container that was previously passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call root.render(element)?");
      }
      return $x(null, r, o, !1, f);
    }
    function j4(r, o, f, h) {
      if (d("ReactDOM.unstable_renderSubtreeIntoContainer() is no longer supported in React 18. Consider using a portal instead. Until you switch to the createRoot API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot"), !gb(f))
        throw new Error("Target container is not a DOM element.");
      if (r == null || !oT(r))
        throw new Error("parentComponent must be a valid React Component");
      return $x(r, o, f, !1, h);
    }
    var eL = !1;
    function z4(r) {
      if (eL || (eL = !0, d("unmountComponentAtNode is deprecated and will be removed in the next major release. Switch to the createRoot API. Learn more: https://reactjs.org/link/switch-to-createroot")), !gb(r))
        throw new Error("unmountComponentAtNode(...): Target container is not a DOM element.");
      {
        var o = Dy(r) && r._reactRootContainer === void 0;
        o && d("You are calling ReactDOM.unmountComponentAtNode() on a container that was previously passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call root.unmount()?");
      }
      if (r._reactRootContainer) {
        {
          var f = sO(r), h = f && !Fd(f);
          h && d("unmountComponentAtNode(): The node you're attempting to unmount was rendered by another copy of React.");
        }
        return _c(function() {
          $x(null, null, r, !1, function() {
            r._reactRootContainer = null, YM(r);
          });
        }), !0;
      } else {
        {
          var b = sO(r), T = !!(b && Fd(b)), N = r.nodeType === Hi && gb(r.parentNode) && !!r.parentNode._reactRootContainer;
          T && d("unmountComponentAtNode(): The node you're attempting to unmount was rendered by React and is not a top-level container. %s", N ? "You may have accidentally passed in a React root node instead of its container." : "Instead, have the parent component update its state and rerender in order to remove this component.");
        }
        return !1;
      }
    }
    hi(S4), Rd(w4), VS(x4), pp(Aa), oy(jS), (typeof Map != "function" || // $FlowIssue Flow incorrectly thinks Map has no prototype
    Map.prototype == null || typeof Map.prototype.forEach != "function" || typeof Set != "function" || // $FlowIssue Flow incorrectly thinks Set has no prototype
    Set.prototype == null || typeof Set.prototype.clear != "function" || typeof Set.prototype.forEach != "function") && d("React depends on Map and Set built-in types. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"), Ih(VV), rT($R, DG, _c);
    function H4(r, o) {
      var f = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
      if (!Ax(o))
        throw new Error("Target container is not a DOM element.");
      return b4(r, o, null, f);
    }
    function V4(r, o, f, h) {
      return j4(r, o, f, h);
    }
    var lO = {
      usingClientEntryPoint: !1,
      // Keep in sync with ReactTestUtils.js.
      // This is an array for better minification.
      Events: [Fd, Nm, Tw, md, Dh, $R]
    };
    function B4(r, o) {
      return lO.usingClientEntryPoint || d('You are importing createRoot from "react-dom" which is not supported. You should instead import it from "react-dom/client".'), M4(r, o);
    }
    function U4(r, o, f) {
      return lO.usingClientEntryPoint || d('You are importing hydrateRoot from "react-dom" which is not supported. You should instead import it from "react-dom/client".'), D4(r, o, f);
    }
    function G4(r) {
      return sN() && d("flushSync was called from inside a lifecycle method. React cannot flush when React is already rendering. Consider moving this call to a scheduler task or micro task."), _c(r);
    }
    var W4 = P4({
      findFiberByHostInstance: Op,
      bundleType: 1,
      version: tO,
      rendererPackageName: "react-dom"
    });
    if (!W4 && Re && window.top === window.self && (navigator.userAgent.indexOf("Chrome") > -1 && navigator.userAgent.indexOf("Edge") === -1 || navigator.userAgent.indexOf("Firefox") > -1)) {
      var tL = window.location.protocol;
      /^(https?|file):$/.test(tL) && console.info("%cDownload the React DevTools for a better development experience: https://reactjs.org/link/react-devtools" + (tL === "file:" ? `
You might need to use a local HTTP server (instead of file://): https://reactjs.org/link/react-devtools-faq` : ""), "font-weight:bold");
    }
    Ga.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = lO, Ga.createPortal = H4, Ga.createRoot = B4, Ga.findDOMNode = _4, Ga.flushSync = G4, Ga.hydrate = A4, Ga.hydrateRoot = U4, Ga.render = $4, Ga.unmountComponentAtNode = z4, Ga.unstable_batchedUpdates = $R, Ga.unstable_renderSubtreeIntoContainer = V4, Ga.version = tO, typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
  }()), Ga;
}
function r$() {
  if (!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ > "u" || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE != "function")) {
    if (process.env.NODE_ENV !== "production")
      throw new Error("^_^");
    try {
      __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(r$);
    } catch (e) {
      console.error(e);
    }
  }
}
process.env.NODE_ENV === "production" ? (r$(), QO.exports = o3()) : QO.exports = i3();
var nE = QO.exports;
const Hx = /* @__PURE__ */ Jk(nE);
var Cb = nE;
if (process.env.NODE_ENV === "production")
  Lb.createRoot = Cb.createRoot, Lb.hydrateRoot = Cb.hydrateRoot;
else {
  var Vx = Cb.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
  Lb.createRoot = function(e, t) {
    Vx.usingClientEntryPoint = !0;
    try {
      return Cb.createRoot(e, t);
    } finally {
      Vx.usingClientEntryPoint = !1;
    }
  }, Lb.hydrateRoot = function(e, t, n) {
    Vx.usingClientEntryPoint = !0;
    try {
      return Cb.hydrateRoot(e, t, n);
    } finally {
      Vx.usingClientEntryPoint = !1;
    }
  };
}
var rE = class {
  constructor() {
    this.listeners = /* @__PURE__ */ new Set(), this.subscribe = this.subscribe.bind(this);
  }
  subscribe(e) {
    return this.listeners.add(e), this.onSubscribe(), () => {
      this.listeners.delete(e), this.onUnsubscribe();
    };
  }
  hasListeners() {
    return this.listeners.size > 0;
  }
  onSubscribe() {
  }
  onUnsubscribe() {
  }
}, a3 = {
  // We need the wrapper function syntax below instead of direct references to
  // global setTimeout etc.
  //
  // BAD: `setTimeout: setTimeout`
  // GOOD: `setTimeout: (cb, delay) => setTimeout(cb, delay)`
  //
  // If we use direct references here, then anything that wants to spy on or
  // replace the global setTimeout (like tests) won't work since we'll already
  // have a hard reference to the original implementation at the time when this
  // file was imported.
  setTimeout: (e, t) => setTimeout(e, t),
  clearTimeout: (e) => clearTimeout(e),
  setInterval: (e, t) => setInterval(e, t),
  clearInterval: (e) => clearInterval(e)
}, Iu, Qp, qA, s3 = (qA = class {
  constructor() {
    // We cannot have TimeoutManager<T> as we must instantiate it with a concrete
    // type at app boot; and if we leave that type, then any new timer provider
    // would need to support ReturnType<typeof setTimeout>, which is infeasible.
    //
    // We settle for type safety for the TimeoutProvider type, and accept that
    // this class is unsafe internally to allow for extension.
    rr(this, Iu, a3);
    rr(this, Qp, !1);
  }
  setTimeoutProvider(e) {
    process.env.NODE_ENV !== "production" && Xe(this, Qp) && e !== Xe(this, Iu) && console.error(
      "[timeoutManager]: Switching provider after calls to previous provider might result in unexpected behavior.",
      { previous: Xe(this, Iu), provider: e }
    ), wn(this, Iu, e), process.env.NODE_ENV !== "production" && wn(this, Qp, !1);
  }
  setTimeout(e, t) {
    return process.env.NODE_ENV !== "production" && wn(this, Qp, !0), Xe(this, Iu).setTimeout(e, t);
  }
  clearTimeout(e) {
    Xe(this, Iu).clearTimeout(e);
  }
  setInterval(e, t) {
    return process.env.NODE_ENV !== "production" && wn(this, Qp, !0), Xe(this, Iu).setInterval(e, t);
  }
  clearInterval(e) {
    Xe(this, Iu).clearInterval(e);
  }
}, Iu = new WeakMap(), Qp = new WeakMap(), qA), JO = new s3();
function l3(e) {
  setTimeout(e, 0);
}
var oE = typeof window > "u" || "Deno" in globalThis;
function Fl() {
}
function u3(e, t) {
  return typeof e == "function" ? e(t) : e;
}
function c3(e) {
  return typeof e == "number" && e >= 0 && e !== 1 / 0;
}
function d3(e, t) {
  return Math.max(e + (t || 0) - Date.now(), 0);
}
function ZO(e, t) {
  return typeof e == "function" ? e(t) : e;
}
function f3(e, t) {
  return typeof e == "function" ? e(t) : e;
}
function fL(e, t) {
  const {
    type: n = "all",
    exact: i,
    fetchStatus: s,
    predicate: u,
    queryKey: d,
    stale: p
  } = e;
  if (d) {
    if (i) {
      if (t.queryHash !== Zk(d, t.options))
        return !1;
    } else if (!Qb(t.queryKey, d))
      return !1;
  }
  if (n !== "all") {
    const m = t.isActive();
    if (n === "active" && !m || n === "inactive" && m)
      return !1;
  }
  return !(typeof p == "boolean" && t.isStale() !== p || s && s !== t.state.fetchStatus || u && !u(t));
}
function pL(e, t) {
  const { exact: n, status: i, predicate: s, mutationKey: u } = e;
  if (u) {
    if (!t.options.mutationKey)
      return !1;
    if (n) {
      if (Xb(t.options.mutationKey) !== Xb(u))
        return !1;
    } else if (!Qb(t.options.mutationKey, u))
      return !1;
  }
  return !(i && t.state.status !== i || s && !s(t));
}
function Zk(e, t) {
  return ((t == null ? void 0 : t.queryKeyHashFn) || Xb)(e);
}
function Xb(e) {
  return JSON.stringify(
    e,
    (t, n) => tk(n) ? Object.keys(n).sort().reduce((i, s) => (i[s] = n[s], i), {}) : n
  );
}
function Qb(e, t) {
  return e === t ? !0 : typeof e != typeof t ? !1 : e && t && typeof e == "object" && typeof t == "object" ? Object.keys(t).every((n) => Qb(e[n], t[n])) : !1;
}
var p3 = Object.prototype.hasOwnProperty;
function ek(e, t) {
  if (e === t)
    return e;
  const n = hL(e) && hL(t);
  if (!n && !(tk(e) && tk(t))) return t;
  const s = (n ? e : Object.keys(e)).length, u = n ? t : Object.keys(t), d = u.length, p = n ? new Array(d) : {};
  let m = 0;
  for (let v = 0; v < d; v++) {
    const y = n ? v : u[v], C = e[y], w = t[y];
    if (C === w) {
      p[y] = C, (n ? v < s : p3.call(e, y)) && m++;
      continue;
    }
    if (C === null || w === null || typeof C != "object" || typeof w != "object") {
      p[y] = w;
      continue;
    }
    const R = ek(C, w);
    p[y] = R, R === C && m++;
  }
  return s === d && m === s ? e : p;
}
function hL(e) {
  return Array.isArray(e) && e.length === Object.keys(e).length;
}
function tk(e) {
  if (!mL(e))
    return !1;
  const t = e.constructor;
  if (t === void 0)
    return !0;
  const n = t.prototype;
  return !(!mL(n) || !n.hasOwnProperty("isPrototypeOf") || Object.getPrototypeOf(e) !== Object.prototype);
}
function mL(e) {
  return Object.prototype.toString.call(e) === "[object Object]";
}
function h3(e) {
  return new Promise((t) => {
    JO.setTimeout(t, e);
  });
}
function m3(e, t, n) {
  if (typeof n.structuralSharing == "function")
    return n.structuralSharing(e, t);
  if (n.structuralSharing !== !1) {
    if (process.env.NODE_ENV !== "production")
      try {
        return ek(e, t);
      } catch (i) {
        throw console.error(
          `Structural sharing requires data to be JSON serializable. To fix this, turn off structuralSharing or return JSON-serializable data from your queryFn. [${n.queryHash}]: ${i}`
        ), i;
      }
    return ek(e, t);
  }
  return t;
}
function g3(e, t, n = 0) {
  const i = [...e, t];
  return n && i.length > n ? i.slice(1) : i;
}
function v3(e, t, n = 0) {
  const i = [t, ...e];
  return n && i.length > n ? i.slice(0, -1) : i;
}
var C0 = Symbol();
function o$(e, t) {
  return process.env.NODE_ENV !== "production" && e.queryFn === C0 && console.error(
    `Attempted to invoke queryFn when set to skipToken. This is likely a configuration error. Query hash: '${e.queryHash}'`
  ), !e.queryFn && (t != null && t.initialPromise) ? () => t.initialPromise : !e.queryFn || e.queryFn === C0 ? () => Promise.reject(new Error(`Missing queryFn: '${e.queryHash}'`)) : e.queryFn;
}
var Jp, af, Ig, KA, y3 = (KA = class extends rE {
  constructor() {
    super();
    rr(this, Jp);
    rr(this, af);
    rr(this, Ig);
    wn(this, Ig, (t) => {
      if (!oE && window.addEventListener) {
        const n = () => t();
        return window.addEventListener("visibilitychange", n, !1), () => {
          window.removeEventListener("visibilitychange", n);
        };
      }
    });
  }
  onSubscribe() {
    Xe(this, af) || this.setEventListener(Xe(this, Ig));
  }
  onUnsubscribe() {
    var t;
    this.hasListeners() || ((t = Xe(this, af)) == null || t.call(this), wn(this, af, void 0));
  }
  setEventListener(t) {
    var n;
    wn(this, Ig, t), (n = Xe(this, af)) == null || n.call(this), wn(this, af, t((i) => {
      typeof i == "boolean" ? this.setFocused(i) : this.onFocus();
    }));
  }
  setFocused(t) {
    Xe(this, Jp) !== t && (wn(this, Jp, t), this.onFocus());
  }
  onFocus() {
    const t = this.isFocused();
    this.listeners.forEach((n) => {
      n(t);
    });
  }
  isFocused() {
    var t;
    return typeof Xe(this, Jp) == "boolean" ? Xe(this, Jp) : ((t = globalThis.document) == null ? void 0 : t.visibilityState) !== "hidden";
  }
}, Jp = new WeakMap(), af = new WeakMap(), Ig = new WeakMap(), KA), i$ = new y3();
function b3() {
  let e, t;
  const n = new Promise((s, u) => {
    e = s, t = u;
  });
  n.status = "pending", n.catch(() => {
  });
  function i(s) {
    Object.assign(n, s), delete n.resolve, delete n.reject;
  }
  return n.resolve = (s) => {
    i({
      status: "fulfilled",
      value: s
    }), e(s);
  }, n.reject = (s) => {
    i({
      status: "rejected",
      reason: s
    }), t(s);
  }, n;
}
var C3 = l3;
function S3() {
  let e = [], t = 0, n = (p) => {
    p();
  }, i = (p) => {
    p();
  }, s = C3;
  const u = (p) => {
    t ? e.push(p) : s(() => {
      n(p);
    });
  }, d = () => {
    const p = e;
    e = [], p.length && s(() => {
      i(() => {
        p.forEach((m) => {
          n(m);
        });
      });
    });
  };
  return {
    batch: (p) => {
      let m;
      t++;
      try {
        m = p();
      } finally {
        t--, t || d();
      }
      return m;
    },
    /**
     * All calls to the wrapped function will be batched.
     */
    batchCalls: (p) => (...m) => {
      u(() => {
        p(...m);
      });
    },
    schedule: u,
    /**
     * Use this method to set a custom notify function.
     * This can be used to for example wrap notifications with `React.act` while running tests.
     */
    setNotifyFunction: (p) => {
      n = p;
    },
    /**
     * Use this method to set a custom function to batch notifications together into a single tick.
     * By default React Query will use the batch function provided by ReactDOM or React Native.
     */
    setBatchNotifyFunction: (p) => {
      i = p;
    },
    setScheduler: (p) => {
      s = p;
    }
  };
}
var wa = S3(), Dg, sf, Ng, YA, w3 = (YA = class extends rE {
  constructor() {
    super();
    rr(this, Dg, !0);
    rr(this, sf);
    rr(this, Ng);
    wn(this, Ng, (t) => {
      if (!oE && window.addEventListener) {
        const n = () => t(!0), i = () => t(!1);
        return window.addEventListener("online", n, !1), window.addEventListener("offline", i, !1), () => {
          window.removeEventListener("online", n), window.removeEventListener("offline", i);
        };
      }
    });
  }
  onSubscribe() {
    Xe(this, sf) || this.setEventListener(Xe(this, Ng));
  }
  onUnsubscribe() {
    var t;
    this.hasListeners() || ((t = Xe(this, sf)) == null || t.call(this), wn(this, sf, void 0));
  }
  setEventListener(t) {
    var n;
    wn(this, Ng, t), (n = Xe(this, sf)) == null || n.call(this), wn(this, sf, t(this.setOnline.bind(this)));
  }
  setOnline(t) {
    Xe(this, Dg) !== t && (wn(this, Dg, t), this.listeners.forEach((i) => {
      i(t);
    }));
  }
  isOnline() {
    return Xe(this, Dg);
  }
}, Dg = new WeakMap(), sf = new WeakMap(), Ng = new WeakMap(), YA), S0 = new w3();
function x3(e) {
  return Math.min(1e3 * 2 ** e, 3e4);
}
function a$(e) {
  return (e ?? "online") === "online" ? S0.isOnline() : !0;
}
var nk = class extends Error {
  constructor(e) {
    super("CancelledError"), this.revert = e == null ? void 0 : e.revert, this.silent = e == null ? void 0 : e.silent;
  }
};
function s$(e) {
  let t = !1, n = 0, i;
  const s = b3(), u = () => s.status !== "pending", d = (E) => {
    var k;
    if (!u()) {
      const L = new nk(E);
      w(L), (k = e.onCancel) == null || k.call(e, L);
    }
  }, p = () => {
    t = !0;
  }, m = () => {
    t = !1;
  }, v = () => i$.isFocused() && (e.networkMode === "always" || S0.isOnline()) && e.canRun(), y = () => a$(e.networkMode) && e.canRun(), C = (E) => {
    u() || (i == null || i(), s.resolve(E));
  }, w = (E) => {
    u() || (i == null || i(), s.reject(E));
  }, R = () => new Promise((E) => {
    var k;
    i = (L) => {
      (u() || v()) && E(L);
    }, (k = e.onPause) == null || k.call(e);
  }).then(() => {
    var E;
    i = void 0, u() || (E = e.onContinue) == null || E.call(e);
  }), O = () => {
    if (u())
      return;
    let E;
    const k = n === 0 ? e.initialPromise : void 0;
    try {
      E = k ?? e.fn();
    } catch (L) {
      E = Promise.reject(L);
    }
    Promise.resolve(E).then(C).catch((L) => {
      var z;
      if (u())
        return;
      const F = e.retry ?? (oE ? 0 : 3), _ = e.retryDelay ?? x3, P = typeof _ == "function" ? _(n, L) : _, D = F === !0 || typeof F == "number" && n < F || typeof F == "function" && F(n, L);
      if (t || !D) {
        w(L);
        return;
      }
      n++, (z = e.onFail) == null || z.call(e, n, L), h3(P).then(() => v() ? void 0 : R()).then(() => {
        t ? w(L) : O();
      });
    });
  };
  return {
    promise: s,
    status: () => s.status,
    cancel: d,
    continue: () => (i == null || i(), s),
    cancelRetry: p,
    continueRetry: m,
    canStart: y,
    start: () => (y() ? O() : R().then(O), s)
  };
}
var Zp, XA, l$ = (XA = class {
  constructor() {
    rr(this, Zp);
  }
  destroy() {
    this.clearGcTimeout();
  }
  scheduleGc() {
    this.clearGcTimeout(), c3(this.gcTime) && wn(this, Zp, JO.setTimeout(() => {
      this.optionalRemove();
    }, this.gcTime));
  }
  updateGcTime(e) {
    this.gcTime = Math.max(
      this.gcTime || 0,
      e ?? (oE ? 1 / 0 : 5 * 60 * 1e3)
    );
  }
  clearGcTimeout() {
    Xe(this, Zp) && (JO.clearTimeout(Xe(this, Zp)), wn(this, Zp, void 0));
  }
}, Zp = new WeakMap(), XA), eh, Lg, Ks, th, gi, bC, nh, $l, Hc, QA, E3 = (QA = class extends l$ {
  constructor(t) {
    super();
    rr(this, $l);
    rr(this, eh);
    rr(this, Lg);
    rr(this, Ks);
    rr(this, th);
    rr(this, gi);
    rr(this, bC);
    rr(this, nh);
    wn(this, nh, !1), wn(this, bC, t.defaultOptions), this.setOptions(t.options), this.observers = [], wn(this, th, t.client), wn(this, Ks, Xe(this, th).getQueryCache()), this.queryKey = t.queryKey, this.queryHash = t.queryHash, wn(this, eh, gL(this.options)), this.state = t.state ?? Xe(this, eh), this.scheduleGc();
  }
  get meta() {
    return this.options.meta;
  }
  get promise() {
    var t;
    return (t = Xe(this, gi)) == null ? void 0 : t.promise;
  }
  setOptions(t) {
    if (this.options = { ...Xe(this, bC), ...t }, this.updateGcTime(this.options.gcTime), this.state && this.state.data === void 0) {
      const n = gL(this.options);
      n.data !== void 0 && (this.setData(n.data, {
        updatedAt: n.dataUpdatedAt,
        manual: !0
      }), wn(this, eh, n));
    }
  }
  optionalRemove() {
    !this.observers.length && this.state.fetchStatus === "idle" && Xe(this, Ks).remove(this);
  }
  setData(t, n) {
    const i = m3(this.state.data, t, this.options);
    return ra(this, $l, Hc).call(this, {
      data: i,
      type: "success",
      dataUpdatedAt: n == null ? void 0 : n.updatedAt,
      manual: n == null ? void 0 : n.manual
    }), i;
  }
  setState(t, n) {
    ra(this, $l, Hc).call(this, { type: "setState", state: t, setStateOptions: n });
  }
  cancel(t) {
    var i, s;
    const n = (i = Xe(this, gi)) == null ? void 0 : i.promise;
    return (s = Xe(this, gi)) == null || s.cancel(t), n ? n.then(Fl).catch(Fl) : Promise.resolve();
  }
  destroy() {
    super.destroy(), this.cancel({ silent: !0 });
  }
  reset() {
    this.destroy(), this.setState(Xe(this, eh));
  }
  isActive() {
    return this.observers.some(
      (t) => f3(t.options.enabled, this) !== !1
    );
  }
  isDisabled() {
    return this.getObserversCount() > 0 ? !this.isActive() : this.options.queryFn === C0 || this.state.dataUpdateCount + this.state.errorUpdateCount === 0;
  }
  isStatic() {
    return this.getObserversCount() > 0 ? this.observers.some(
      (t) => ZO(t.options.staleTime, this) === "static"
    ) : !1;
  }
  isStale() {
    return this.getObserversCount() > 0 ? this.observers.some(
      (t) => t.getCurrentResult().isStale
    ) : this.state.data === void 0 || this.state.isInvalidated;
  }
  isStaleByTime(t = 0) {
    return this.state.data === void 0 ? !0 : t === "static" ? !1 : this.state.isInvalidated ? !0 : !d3(this.state.dataUpdatedAt, t);
  }
  onFocus() {
    var n;
    const t = this.observers.find((i) => i.shouldFetchOnWindowFocus());
    t == null || t.refetch({ cancelRefetch: !1 }), (n = Xe(this, gi)) == null || n.continue();
  }
  onOnline() {
    var n;
    const t = this.observers.find((i) => i.shouldFetchOnReconnect());
    t == null || t.refetch({ cancelRefetch: !1 }), (n = Xe(this, gi)) == null || n.continue();
  }
  addObserver(t) {
    this.observers.includes(t) || (this.observers.push(t), this.clearGcTimeout(), Xe(this, Ks).notify({ type: "observerAdded", query: this, observer: t }));
  }
  removeObserver(t) {
    this.observers.includes(t) && (this.observers = this.observers.filter((n) => n !== t), this.observers.length || (Xe(this, gi) && (Xe(this, nh) ? Xe(this, gi).cancel({ revert: !0 }) : Xe(this, gi).cancelRetry()), this.scheduleGc()), Xe(this, Ks).notify({ type: "observerRemoved", query: this, observer: t }));
  }
  getObserversCount() {
    return this.observers.length;
  }
  invalidate() {
    this.state.isInvalidated || ra(this, $l, Hc).call(this, { type: "invalidate" });
  }
  async fetch(t, n) {
    var m, v, y, C, w, R, O, E, k, L, F, _;
    if (this.state.fetchStatus !== "idle" && // If the promise in the retyer is already rejected, we have to definitely
    // re-start the fetch; there is a chance that the query is still in a
    // pending state when that happens
    ((m = Xe(this, gi)) == null ? void 0 : m.status()) !== "rejected") {
      if (this.state.data !== void 0 && (n != null && n.cancelRefetch))
        this.cancel({ silent: !0 });
      else if (Xe(this, gi))
        return Xe(this, gi).continueRetry(), Xe(this, gi).promise;
    }
    if (t && this.setOptions(t), !this.options.queryFn) {
      const P = this.observers.find((D) => D.options.queryFn);
      P && this.setOptions(P.options);
    }
    process.env.NODE_ENV !== "production" && (Array.isArray(this.options.queryKey) || console.error(
      "As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']"
    ));
    const i = new AbortController(), s = (P) => {
      Object.defineProperty(P, "signal", {
        enumerable: !0,
        get: () => (wn(this, nh, !0), i.signal)
      });
    }, u = () => {
      const P = o$(this.options, n), z = (() => {
        const K = {
          client: Xe(this, th),
          queryKey: this.queryKey,
          meta: this.meta
        };
        return s(K), K;
      })();
      return wn(this, nh, !1), this.options.persister ? this.options.persister(
        P,
        z,
        this
      ) : P(z);
    }, p = (() => {
      const P = {
        fetchOptions: n,
        options: this.options,
        queryKey: this.queryKey,
        client: Xe(this, th),
        state: this.state,
        fetchFn: u
      };
      return s(P), P;
    })();
    (v = this.options.behavior) == null || v.onFetch(p, this), wn(this, Lg, this.state), (this.state.fetchStatus === "idle" || this.state.fetchMeta !== ((y = p.fetchOptions) == null ? void 0 : y.meta)) && ra(this, $l, Hc).call(this, { type: "fetch", meta: (C = p.fetchOptions) == null ? void 0 : C.meta }), wn(this, gi, s$({
      initialPromise: n == null ? void 0 : n.initialPromise,
      fn: p.fetchFn,
      onCancel: (P) => {
        P instanceof nk && P.revert && this.setState({
          ...Xe(this, Lg),
          fetchStatus: "idle"
        }), i.abort();
      },
      onFail: (P, D) => {
        ra(this, $l, Hc).call(this, { type: "failed", failureCount: P, error: D });
      },
      onPause: () => {
        ra(this, $l, Hc).call(this, { type: "pause" });
      },
      onContinue: () => {
        ra(this, $l, Hc).call(this, { type: "continue" });
      },
      retry: p.options.retry,
      retryDelay: p.options.retryDelay,
      networkMode: p.options.networkMode,
      canRun: () => !0
    }));
    try {
      const P = await Xe(this, gi).start();
      if (P === void 0)
        throw process.env.NODE_ENV !== "production" && console.error(
          `Query data cannot be undefined. Please make sure to return a value other than undefined from your query function. Affected query key: ${this.queryHash}`
        ), new Error(`${this.queryHash} data is undefined`);
      return this.setData(P), (R = (w = Xe(this, Ks).config).onSuccess) == null || R.call(w, P, this), (E = (O = Xe(this, Ks).config).onSettled) == null || E.call(
        O,
        P,
        this.state.error,
        this
      ), P;
    } catch (P) {
      if (P instanceof nk) {
        if (P.silent)
          return Xe(this, gi).promise;
        if (P.revert) {
          if (this.state.data === void 0)
            throw P;
          return this.state.data;
        }
      }
      throw ra(this, $l, Hc).call(this, {
        type: "error",
        error: P
      }), (L = (k = Xe(this, Ks).config).onError) == null || L.call(
        k,
        P,
        this
      ), (_ = (F = Xe(this, Ks).config).onSettled) == null || _.call(
        F,
        this.state.data,
        P,
        this
      ), P;
    } finally {
      this.scheduleGc();
    }
  }
}, eh = new WeakMap(), Lg = new WeakMap(), Ks = new WeakMap(), th = new WeakMap(), gi = new WeakMap(), bC = new WeakMap(), nh = new WeakMap(), $l = new WeakSet(), Hc = function(t) {
  const n = (i) => {
    switch (t.type) {
      case "failed":
        return {
          ...i,
          fetchFailureCount: t.failureCount,
          fetchFailureReason: t.error
        };
      case "pause":
        return {
          ...i,
          fetchStatus: "paused"
        };
      case "continue":
        return {
          ...i,
          fetchStatus: "fetching"
        };
      case "fetch":
        return {
          ...i,
          ...T3(i.data, this.options),
          fetchMeta: t.meta ?? null
        };
      case "success":
        const s = {
          ...i,
          data: t.data,
          dataUpdateCount: i.dataUpdateCount + 1,
          dataUpdatedAt: t.dataUpdatedAt ?? Date.now(),
          error: null,
          isInvalidated: !1,
          status: "success",
          ...!t.manual && {
            fetchStatus: "idle",
            fetchFailureCount: 0,
            fetchFailureReason: null
          }
        };
        return wn(this, Lg, t.manual ? s : void 0), s;
      case "error":
        const u = t.error;
        return {
          ...i,
          error: u,
          errorUpdateCount: i.errorUpdateCount + 1,
          errorUpdatedAt: Date.now(),
          fetchFailureCount: i.fetchFailureCount + 1,
          fetchFailureReason: u,
          fetchStatus: "idle",
          status: "error"
        };
      case "invalidate":
        return {
          ...i,
          isInvalidated: !0
        };
      case "setState":
        return {
          ...i,
          ...t.state
        };
    }
  };
  this.state = n(this.state), wa.batch(() => {
    this.observers.forEach((i) => {
      i.onQueryUpdate();
    }), Xe(this, Ks).notify({ query: this, type: "updated", action: t });
  });
}, QA);
function T3(e, t) {
  return {
    fetchFailureCount: 0,
    fetchFailureReason: null,
    fetchStatus: a$(t.networkMode) ? "fetching" : "paused",
    ...e === void 0 && {
      error: null,
      status: "pending"
    }
  };
}
function gL(e) {
  const t = typeof e.initialData == "function" ? e.initialData() : e.initialData, n = t !== void 0, i = n ? typeof e.initialDataUpdatedAt == "function" ? e.initialDataUpdatedAt() : e.initialDataUpdatedAt : 0;
  return {
    data: t,
    dataUpdateCount: 0,
    dataUpdatedAt: n ? i ?? Date.now() : 0,
    error: null,
    errorUpdateCount: 0,
    errorUpdatedAt: 0,
    fetchFailureCount: 0,
    fetchFailureReason: null,
    fetchMeta: null,
    isInvalidated: !1,
    status: n ? "success" : "pending",
    fetchStatus: "idle"
  };
}
function vL(e) {
  return {
    onFetch: (t, n) => {
      var y, C, w, R, O;
      const i = t.options, s = (w = (C = (y = t.fetchOptions) == null ? void 0 : y.meta) == null ? void 0 : C.fetchMore) == null ? void 0 : w.direction, u = ((R = t.state.data) == null ? void 0 : R.pages) || [], d = ((O = t.state.data) == null ? void 0 : O.pageParams) || [];
      let p = { pages: [], pageParams: [] }, m = 0;
      const v = async () => {
        let E = !1;
        const k = (_) => {
          Object.defineProperty(_, "signal", {
            enumerable: !0,
            get: () => (t.signal.aborted ? E = !0 : t.signal.addEventListener("abort", () => {
              E = !0;
            }), t.signal)
          });
        }, L = o$(t.options, t.fetchOptions), F = async (_, P, D) => {
          if (E)
            return Promise.reject();
          if (P == null && _.pages.length)
            return Promise.resolve(_);
          const K = (() => {
            const U = {
              client: t.client,
              queryKey: t.queryKey,
              pageParam: P,
              direction: D ? "backward" : "forward",
              meta: t.options.meta
            };
            return k(U), U;
          })(), Q = await L(K), { maxPages: H } = t.options, I = D ? v3 : g3;
          return {
            pages: I(_.pages, Q, H),
            pageParams: I(_.pageParams, P, H)
          };
        };
        if (s && u.length) {
          const _ = s === "backward", P = _ ? R3 : yL, D = {
            pages: u,
            pageParams: d
          }, z = P(i, D);
          p = await F(D, z, _);
        } else {
          const _ = e ?? u.length;
          do {
            const P = m === 0 ? d[0] ?? i.initialPageParam : yL(i, p);
            if (m > 0 && P == null)
              break;
            p = await F(p, P), m++;
          } while (m < _);
        }
        return p;
      };
      t.options.persister ? t.fetchFn = () => {
        var E, k;
        return (k = (E = t.options).persister) == null ? void 0 : k.call(
          E,
          v,
          {
            client: t.client,
            queryKey: t.queryKey,
            meta: t.options.meta,
            signal: t.signal
          },
          n
        );
      } : t.fetchFn = v;
    }
  };
}
function yL(e, { pages: t, pageParams: n }) {
  const i = t.length - 1;
  return t.length > 0 ? e.getNextPageParam(
    t[i],
    t,
    n[i],
    n
  ) : void 0;
}
function R3(e, { pages: t, pageParams: n }) {
  var i;
  return t.length > 0 ? (i = e.getPreviousPageParam) == null ? void 0 : i.call(e, t[0], t, n[0], n) : void 0;
}
var CC, Du, Ca, rh, Nu, Zd, JA, O3 = (JA = class extends l$ {
  constructor(t) {
    super();
    rr(this, Nu);
    rr(this, CC);
    rr(this, Du);
    rr(this, Ca);
    rr(this, rh);
    wn(this, CC, t.client), this.mutationId = t.mutationId, wn(this, Ca, t.mutationCache), wn(this, Du, []), this.state = t.state || k3(), this.setOptions(t.options), this.scheduleGc();
  }
  setOptions(t) {
    this.options = t, this.updateGcTime(this.options.gcTime);
  }
  get meta() {
    return this.options.meta;
  }
  addObserver(t) {
    Xe(this, Du).includes(t) || (Xe(this, Du).push(t), this.clearGcTimeout(), Xe(this, Ca).notify({
      type: "observerAdded",
      mutation: this,
      observer: t
    }));
  }
  removeObserver(t) {
    wn(this, Du, Xe(this, Du).filter((n) => n !== t)), this.scheduleGc(), Xe(this, Ca).notify({
      type: "observerRemoved",
      mutation: this,
      observer: t
    });
  }
  optionalRemove() {
    Xe(this, Du).length || (this.state.status === "pending" ? this.scheduleGc() : Xe(this, Ca).remove(this));
  }
  continue() {
    var t;
    return ((t = Xe(this, rh)) == null ? void 0 : t.continue()) ?? // continuing a mutation assumes that variables are set, mutation must have been dehydrated before
    this.execute(this.state.variables);
  }
  async execute(t) {
    var d, p, m, v, y, C, w, R, O, E, k, L, F, _, P, D, z, K, Q, H;
    const n = () => {
      ra(this, Nu, Zd).call(this, { type: "continue" });
    }, i = {
      client: Xe(this, CC),
      meta: this.options.meta,
      mutationKey: this.options.mutationKey
    };
    wn(this, rh, s$({
      fn: () => this.options.mutationFn ? this.options.mutationFn(t, i) : Promise.reject(new Error("No mutationFn found")),
      onFail: (I, U) => {
        ra(this, Nu, Zd).call(this, { type: "failed", failureCount: I, error: U });
      },
      onPause: () => {
        ra(this, Nu, Zd).call(this, { type: "pause" });
      },
      onContinue: n,
      retry: this.options.retry ?? 0,
      retryDelay: this.options.retryDelay,
      networkMode: this.options.networkMode,
      canRun: () => Xe(this, Ca).canRun(this)
    }));
    const s = this.state.status === "pending", u = !Xe(this, rh).canStart();
    try {
      if (s)
        n();
      else {
        ra(this, Nu, Zd).call(this, { type: "pending", variables: t, isPaused: u }), await ((p = (d = Xe(this, Ca).config).onMutate) == null ? void 0 : p.call(
          d,
          t,
          this,
          i
        ));
        const U = await ((v = (m = this.options).onMutate) == null ? void 0 : v.call(
          m,
          t,
          i
        ));
        U !== this.state.context && ra(this, Nu, Zd).call(this, {
          type: "pending",
          context: U,
          variables: t,
          isPaused: u
        });
      }
      const I = await Xe(this, rh).start();
      return await ((C = (y = Xe(this, Ca).config).onSuccess) == null ? void 0 : C.call(
        y,
        I,
        t,
        this.state.context,
        this,
        i
      )), await ((R = (w = this.options).onSuccess) == null ? void 0 : R.call(
        w,
        I,
        t,
        this.state.context,
        i
      )), await ((E = (O = Xe(this, Ca).config).onSettled) == null ? void 0 : E.call(
        O,
        I,
        null,
        this.state.variables,
        this.state.context,
        this,
        i
      )), await ((L = (k = this.options).onSettled) == null ? void 0 : L.call(
        k,
        I,
        null,
        t,
        this.state.context,
        i
      )), ra(this, Nu, Zd).call(this, { type: "success", data: I }), I;
    } catch (I) {
      try {
        throw await ((_ = (F = Xe(this, Ca).config).onError) == null ? void 0 : _.call(
          F,
          I,
          t,
          this.state.context,
          this,
          i
        )), await ((D = (P = this.options).onError) == null ? void 0 : D.call(
          P,
          I,
          t,
          this.state.context,
          i
        )), await ((K = (z = Xe(this, Ca).config).onSettled) == null ? void 0 : K.call(
          z,
          void 0,
          I,
          this.state.variables,
          this.state.context,
          this,
          i
        )), await ((H = (Q = this.options).onSettled) == null ? void 0 : H.call(
          Q,
          void 0,
          I,
          t,
          this.state.context,
          i
        )), I;
      } finally {
        ra(this, Nu, Zd).call(this, { type: "error", error: I });
      }
    } finally {
      Xe(this, Ca).runNext(this);
    }
  }
}, CC = new WeakMap(), Du = new WeakMap(), Ca = new WeakMap(), rh = new WeakMap(), Nu = new WeakSet(), Zd = function(t) {
  const n = (i) => {
    switch (t.type) {
      case "failed":
        return {
          ...i,
          failureCount: t.failureCount,
          failureReason: t.error
        };
      case "pause":
        return {
          ...i,
          isPaused: !0
        };
      case "continue":
        return {
          ...i,
          isPaused: !1
        };
      case "pending":
        return {
          ...i,
          context: t.context,
          data: void 0,
          failureCount: 0,
          failureReason: null,
          error: null,
          isPaused: t.isPaused,
          status: "pending",
          variables: t.variables,
          submittedAt: Date.now()
        };
      case "success":
        return {
          ...i,
          data: t.data,
          failureCount: 0,
          failureReason: null,
          error: null,
          status: "success",
          isPaused: !1
        };
      case "error":
        return {
          ...i,
          data: void 0,
          error: t.error,
          failureCount: i.failureCount + 1,
          failureReason: t.error,
          isPaused: !1,
          status: "error"
        };
    }
  };
  this.state = n(this.state), wa.batch(() => {
    Xe(this, Du).forEach((i) => {
      i.onMutationUpdate(t);
    }), Xe(this, Ca).notify({
      mutation: this,
      type: "updated",
      action: t
    });
  });
}, JA);
function k3() {
  return {
    context: void 0,
    data: void 0,
    error: null,
    failureCount: 0,
    failureReason: null,
    isPaused: !1,
    status: "idle",
    variables: void 0,
    submittedAt: 0
  };
}
var Bc, jl, SC, ZA, P3 = (ZA = class extends rE {
  constructor(t = {}) {
    super();
    rr(this, Bc);
    rr(this, jl);
    rr(this, SC);
    this.config = t, wn(this, Bc, /* @__PURE__ */ new Set()), wn(this, jl, /* @__PURE__ */ new Map()), wn(this, SC, 0);
  }
  build(t, n, i) {
    const s = new O3({
      client: t,
      mutationCache: this,
      mutationId: ++jx(this, SC)._,
      options: t.defaultMutationOptions(n),
      state: i
    });
    return this.add(s), s;
  }
  add(t) {
    Xe(this, Bc).add(t);
    const n = Bx(t);
    if (typeof n == "string") {
      const i = Xe(this, jl).get(n);
      i ? i.push(t) : Xe(this, jl).set(n, [t]);
    }
    this.notify({ type: "added", mutation: t });
  }
  remove(t) {
    if (Xe(this, Bc).delete(t)) {
      const n = Bx(t);
      if (typeof n == "string") {
        const i = Xe(this, jl).get(n);
        if (i)
          if (i.length > 1) {
            const s = i.indexOf(t);
            s !== -1 && i.splice(s, 1);
          } else i[0] === t && Xe(this, jl).delete(n);
      }
    }
    this.notify({ type: "removed", mutation: t });
  }
  canRun(t) {
    const n = Bx(t);
    if (typeof n == "string") {
      const i = Xe(this, jl).get(n), s = i == null ? void 0 : i.find(
        (u) => u.state.status === "pending"
      );
      return !s || s === t;
    } else
      return !0;
  }
  runNext(t) {
    var i;
    const n = Bx(t);
    if (typeof n == "string") {
      const s = (i = Xe(this, jl).get(n)) == null ? void 0 : i.find((u) => u !== t && u.state.isPaused);
      return (s == null ? void 0 : s.continue()) ?? Promise.resolve();
    } else
      return Promise.resolve();
  }
  clear() {
    wa.batch(() => {
      Xe(this, Bc).forEach((t) => {
        this.notify({ type: "removed", mutation: t });
      }), Xe(this, Bc).clear(), Xe(this, jl).clear();
    });
  }
  getAll() {
    return Array.from(Xe(this, Bc));
  }
  find(t) {
    const n = { exact: !0, ...t };
    return this.getAll().find(
      (i) => pL(n, i)
    );
  }
  findAll(t = {}) {
    return this.getAll().filter((n) => pL(t, n));
  }
  notify(t) {
    wa.batch(() => {
      this.listeners.forEach((n) => {
        n(t);
      });
    });
  }
  resumePausedMutations() {
    const t = this.getAll().filter((n) => n.state.isPaused);
    return wa.batch(
      () => Promise.all(
        t.map((n) => n.continue().catch(Fl))
      )
    );
  }
}, Bc = new WeakMap(), jl = new WeakMap(), SC = new WeakMap(), ZA);
function Bx(e) {
  var t;
  return (t = e.options.scope) == null ? void 0 : t.id;
}
var Lu, e$, M3 = (e$ = class extends rE {
  constructor(t = {}) {
    super();
    rr(this, Lu);
    this.config = t, wn(this, Lu, /* @__PURE__ */ new Map());
  }
  build(t, n, i) {
    const s = n.queryKey, u = n.queryHash ?? Zk(s, n);
    let d = this.get(u);
    return d || (d = new E3({
      client: t,
      queryKey: s,
      queryHash: u,
      options: t.defaultQueryOptions(n),
      state: i,
      defaultOptions: t.getQueryDefaults(s)
    }), this.add(d)), d;
  }
  add(t) {
    Xe(this, Lu).has(t.queryHash) || (Xe(this, Lu).set(t.queryHash, t), this.notify({
      type: "added",
      query: t
    }));
  }
  remove(t) {
    const n = Xe(this, Lu).get(t.queryHash);
    n && (t.destroy(), n === t && Xe(this, Lu).delete(t.queryHash), this.notify({ type: "removed", query: t }));
  }
  clear() {
    wa.batch(() => {
      this.getAll().forEach((t) => {
        this.remove(t);
      });
    });
  }
  get(t) {
    return Xe(this, Lu).get(t);
  }
  getAll() {
    return [...Xe(this, Lu).values()];
  }
  find(t) {
    const n = { exact: !0, ...t };
    return this.getAll().find(
      (i) => fL(n, i)
    );
  }
  findAll(t = {}) {
    const n = this.getAll();
    return Object.keys(t).length > 0 ? n.filter((i) => fL(t, i)) : n;
  }
  notify(t) {
    wa.batch(() => {
      this.listeners.forEach((n) => {
        n(t);
      });
    });
  }
  onFocus() {
    wa.batch(() => {
      this.getAll().forEach((t) => {
        t.onFocus();
      });
    });
  }
  onOnline() {
    wa.batch(() => {
      this.getAll().forEach((t) => {
        t.onOnline();
      });
    });
  }
}, Lu = new WeakMap(), e$), Oo, lf, uf, Fg, _g, cf, Ag, $g, t$, I3 = (t$ = class {
  constructor(e = {}) {
    rr(this, Oo);
    rr(this, lf);
    rr(this, uf);
    rr(this, Fg);
    rr(this, _g);
    rr(this, cf);
    rr(this, Ag);
    rr(this, $g);
    wn(this, Oo, e.queryCache || new M3()), wn(this, lf, e.mutationCache || new P3()), wn(this, uf, e.defaultOptions || {}), wn(this, Fg, /* @__PURE__ */ new Map()), wn(this, _g, /* @__PURE__ */ new Map()), wn(this, cf, 0);
  }
  mount() {
    jx(this, cf)._++, Xe(this, cf) === 1 && (wn(this, Ag, i$.subscribe(async (e) => {
      e && (await this.resumePausedMutations(), Xe(this, Oo).onFocus());
    })), wn(this, $g, S0.subscribe(async (e) => {
      e && (await this.resumePausedMutations(), Xe(this, Oo).onOnline());
    })));
  }
  unmount() {
    var e, t;
    jx(this, cf)._--, Xe(this, cf) === 0 && ((e = Xe(this, Ag)) == null || e.call(this), wn(this, Ag, void 0), (t = Xe(this, $g)) == null || t.call(this), wn(this, $g, void 0));
  }
  isFetching(e) {
    return Xe(this, Oo).findAll({ ...e, fetchStatus: "fetching" }).length;
  }
  isMutating(e) {
    return Xe(this, lf).findAll({ ...e, status: "pending" }).length;
  }
  /**
   * Imperative (non-reactive) way to retrieve data for a QueryKey.
   * Should only be used in callbacks or functions where reading the latest data is necessary, e.g. for optimistic updates.
   *
   * Hint: Do not use this function inside a component, because it won't receive updates.
   * Use `useQuery` to create a `QueryObserver` that subscribes to changes.
   */
  getQueryData(e) {
    var n;
    const t = this.defaultQueryOptions({ queryKey: e });
    return (n = Xe(this, Oo).get(t.queryHash)) == null ? void 0 : n.state.data;
  }
  ensureQueryData(e) {
    const t = this.defaultQueryOptions(e), n = Xe(this, Oo).build(this, t), i = n.state.data;
    return i === void 0 ? this.fetchQuery(e) : (e.revalidateIfStale && n.isStaleByTime(ZO(t.staleTime, n)) && this.prefetchQuery(t), Promise.resolve(i));
  }
  getQueriesData(e) {
    return Xe(this, Oo).findAll(e).map(({ queryKey: t, state: n }) => {
      const i = n.data;
      return [t, i];
    });
  }
  setQueryData(e, t, n) {
    const i = this.defaultQueryOptions({ queryKey: e }), s = Xe(this, Oo).get(
      i.queryHash
    ), u = s == null ? void 0 : s.state.data, d = u3(t, u);
    if (d !== void 0)
      return Xe(this, Oo).build(this, i).setData(d, { ...n, manual: !0 });
  }
  setQueriesData(e, t, n) {
    return wa.batch(
      () => Xe(this, Oo).findAll(e).map(({ queryKey: i }) => [
        i,
        this.setQueryData(i, t, n)
      ])
    );
  }
  getQueryState(e) {
    var n;
    const t = this.defaultQueryOptions({ queryKey: e });
    return (n = Xe(this, Oo).get(
      t.queryHash
    )) == null ? void 0 : n.state;
  }
  removeQueries(e) {
    const t = Xe(this, Oo);
    wa.batch(() => {
      t.findAll(e).forEach((n) => {
        t.remove(n);
      });
    });
  }
  resetQueries(e, t) {
    const n = Xe(this, Oo);
    return wa.batch(() => (n.findAll(e).forEach((i) => {
      i.reset();
    }), this.refetchQueries(
      {
        type: "active",
        ...e
      },
      t
    )));
  }
  cancelQueries(e, t = {}) {
    const n = { revert: !0, ...t }, i = wa.batch(
      () => Xe(this, Oo).findAll(e).map((s) => s.cancel(n))
    );
    return Promise.all(i).then(Fl).catch(Fl);
  }
  invalidateQueries(e, t = {}) {
    return wa.batch(() => (Xe(this, Oo).findAll(e).forEach((n) => {
      n.invalidate();
    }), (e == null ? void 0 : e.refetchType) === "none" ? Promise.resolve() : this.refetchQueries(
      {
        ...e,
        type: (e == null ? void 0 : e.refetchType) ?? (e == null ? void 0 : e.type) ?? "active"
      },
      t
    )));
  }
  refetchQueries(e, t = {}) {
    const n = {
      ...t,
      cancelRefetch: t.cancelRefetch ?? !0
    }, i = wa.batch(
      () => Xe(this, Oo).findAll(e).filter((s) => !s.isDisabled() && !s.isStatic()).map((s) => {
        let u = s.fetch(void 0, n);
        return n.throwOnError || (u = u.catch(Fl)), s.state.fetchStatus === "paused" ? Promise.resolve() : u;
      })
    );
    return Promise.all(i).then(Fl);
  }
  fetchQuery(e) {
    const t = this.defaultQueryOptions(e);
    t.retry === void 0 && (t.retry = !1);
    const n = Xe(this, Oo).build(this, t);
    return n.isStaleByTime(
      ZO(t.staleTime, n)
    ) ? n.fetch(t) : Promise.resolve(n.state.data);
  }
  prefetchQuery(e) {
    return this.fetchQuery(e).then(Fl).catch(Fl);
  }
  fetchInfiniteQuery(e) {
    return e.behavior = vL(e.pages), this.fetchQuery(e);
  }
  prefetchInfiniteQuery(e) {
    return this.fetchInfiniteQuery(e).then(Fl).catch(Fl);
  }
  ensureInfiniteQueryData(e) {
    return e.behavior = vL(e.pages), this.ensureQueryData(e);
  }
  resumePausedMutations() {
    return S0.isOnline() ? Xe(this, lf).resumePausedMutations() : Promise.resolve();
  }
  getQueryCache() {
    return Xe(this, Oo);
  }
  getMutationCache() {
    return Xe(this, lf);
  }
  getDefaultOptions() {
    return Xe(this, uf);
  }
  setDefaultOptions(e) {
    wn(this, uf, e);
  }
  setQueryDefaults(e, t) {
    Xe(this, Fg).set(Xb(e), {
      queryKey: e,
      defaultOptions: t
    });
  }
  getQueryDefaults(e) {
    const t = [...Xe(this, Fg).values()], n = {};
    return t.forEach((i) => {
      Qb(e, i.queryKey) && Object.assign(n, i.defaultOptions);
    }), n;
  }
  setMutationDefaults(e, t) {
    Xe(this, _g).set(Xb(e), {
      mutationKey: e,
      defaultOptions: t
    });
  }
  getMutationDefaults(e) {
    const t = [...Xe(this, _g).values()], n = {};
    return t.forEach((i) => {
      Qb(e, i.mutationKey) && Object.assign(n, i.defaultOptions);
    }), n;
  }
  defaultQueryOptions(e) {
    if (e._defaulted)
      return e;
    const t = {
      ...Xe(this, uf).queries,
      ...this.getQueryDefaults(e.queryKey),
      ...e,
      _defaulted: !0
    };
    return t.queryHash || (t.queryHash = Zk(
      t.queryKey,
      t
    )), t.refetchOnReconnect === void 0 && (t.refetchOnReconnect = t.networkMode !== "always"), t.throwOnError === void 0 && (t.throwOnError = !!t.suspense), !t.networkMode && t.persister && (t.networkMode = "offlineFirst"), t.queryFn === C0 && (t.enabled = !1), t;
  }
  defaultMutationOptions(e) {
    return e != null && e._defaulted ? e : {
      ...Xe(this, uf).mutations,
      ...(e == null ? void 0 : e.mutationKey) && this.getMutationDefaults(e.mutationKey),
      ...e,
      _defaulted: !0
    };
  }
  clear() {
    Xe(this, Oo).clear(), Xe(this, lf).clear();
  }
}, Oo = new WeakMap(), lf = new WeakMap(), uf = new WeakMap(), Fg = new WeakMap(), _g = new WeakMap(), cf = new WeakMap(), Ag = new WeakMap(), $g = new WeakMap(), t$), D3 = S.createContext(
  void 0
), N3 = ({
  client: e,
  children: t
}) => (S.useEffect(() => (e.mount(), () => {
  e.unmount();
}), [e]), /* @__PURE__ */ A.jsx(D3.Provider, { value: e, children: t }));
const Jb = {
  black: "#000",
  white: "#fff"
}, og = {
  300: "#e57373",
  400: "#ef5350",
  500: "#f44336",
  700: "#d32f2f",
  800: "#c62828"
}, ig = {
  50: "#f3e5f5",
  200: "#ce93d8",
  300: "#ba68c8",
  400: "#ab47bc",
  500: "#9c27b0",
  700: "#7b1fa2"
}, ag = {
  50: "#e3f2fd",
  200: "#90caf9",
  400: "#42a5f5",
  700: "#1976d2",
  800: "#1565c0"
}, sg = {
  300: "#4fc3f7",
  400: "#29b6f6",
  500: "#03a9f4",
  700: "#0288d1",
  900: "#01579b"
}, lg = {
  300: "#81c784",
  400: "#66bb6a",
  500: "#4caf50",
  700: "#388e3c",
  800: "#2e7d32",
  900: "#1b5e20"
}, Sb = {
  300: "#ffb74d",
  400: "#ffa726",
  500: "#ff9800",
  700: "#f57c00",
  900: "#e65100"
}, L3 = {
  50: "#fafafa",
  100: "#f5f5f5",
  200: "#eeeeee",
  300: "#e0e0e0",
  400: "#bdbdbd",
  500: "#9e9e9e",
  600: "#757575",
  700: "#616161",
  800: "#424242",
  900: "#212121",
  A100: "#f5f5f5",
  A200: "#eeeeee",
  A400: "#bdbdbd",
  A700: "#616161"
};
function Bu(e, ...t) {
  const n = new URL(`https://mui.com/production-error/?code=${e}`);
  return t.forEach((i) => n.searchParams.append("args[]", i)), `Minified MUI error #${e}; visit ${n} for the full message.`;
}
const ju = "$$material";
function J() {
  return J = Object.assign ? Object.assign.bind() : function(e) {
    for (var t = 1; t < arguments.length; t++) {
      var n = arguments[t];
      for (var i in n) ({}).hasOwnProperty.call(n, i) && (e[i] = n[i]);
    }
    return e;
  }, J.apply(null, arguments);
}
function F3(e) {
  if (e.sheet)
    return e.sheet;
  for (var t = 0; t < document.styleSheets.length; t++)
    if (document.styleSheets[t].ownerNode === e)
      return document.styleSheets[t];
}
function _3(e) {
  var t = document.createElement("style");
  return t.setAttribute("data-emotion", e.key), e.nonce !== void 0 && t.setAttribute("nonce", e.nonce), t.appendChild(document.createTextNode("")), t.setAttribute("data-s", ""), t;
}
var A3 = /* @__PURE__ */ function() {
  function e(n) {
    var i = this;
    this._insertTag = function(s) {
      var u;
      i.tags.length === 0 ? i.insertionPoint ? u = i.insertionPoint.nextSibling : i.prepend ? u = i.container.firstChild : u = i.before : u = i.tags[i.tags.length - 1].nextSibling, i.container.insertBefore(s, u), i.tags.push(s);
    }, this.isSpeedy = n.speedy === void 0 ? !0 : n.speedy, this.tags = [], this.ctr = 0, this.nonce = n.nonce, this.key = n.key, this.container = n.container, this.prepend = n.prepend, this.insertionPoint = n.insertionPoint, this.before = null;
  }
  var t = e.prototype;
  return t.hydrate = function(i) {
    i.forEach(this._insertTag);
  }, t.insert = function(i) {
    this.ctr % (this.isSpeedy ? 65e3 : 1) === 0 && this._insertTag(_3(this));
    var s = this.tags[this.tags.length - 1];
    if (this.isSpeedy) {
      var u = F3(s);
      try {
        u.insertRule(i, u.cssRules.length);
      } catch {
      }
    } else
      s.appendChild(document.createTextNode(i));
    this.ctr++;
  }, t.flush = function() {
    this.tags.forEach(function(i) {
      var s;
      return (s = i.parentNode) == null ? void 0 : s.removeChild(i);
    }), this.tags = [], this.ctr = 0;
  }, e;
}(), oa = "-ms-", w0 = "-moz-", gr = "-webkit-", u$ = "comm", eP = "rule", tP = "decl", $3 = "@import", c$ = "@keyframes", j3 = "@layer", z3 = Math.abs, iE = String.fromCharCode, H3 = Object.assign;
function V3(e, t) {
  return Ai(e, 0) ^ 45 ? (((t << 2 ^ Ai(e, 0)) << 2 ^ Ai(e, 1)) << 2 ^ Ai(e, 2)) << 2 ^ Ai(e, 3) : 0;
}
function d$(e) {
  return e.trim();
}
function B3(e, t) {
  return (e = t.exec(e)) ? e[0] : e;
}
function yr(e, t, n) {
  return e.replace(t, n);
}
function rk(e, t) {
  return e.indexOf(t);
}
function Ai(e, t) {
  return e.charCodeAt(t) | 0;
}
function Zb(e, t, n) {
  return e.slice(t, n);
}
function Fu(e) {
  return e.length;
}
function nP(e) {
  return e.length;
}
function Ux(e, t) {
  return t.push(e), e;
}
function U3(e, t) {
  return e.map(t).join("");
}
var aE = 1, jg = 1, f$ = 0, Ka = 0, Uo = 0, Zg = "";
function sE(e, t, n, i, s, u, d) {
  return { value: e, root: t, parent: n, type: i, props: s, children: u, line: aE, column: jg, length: d, return: "" };
}
function wb(e, t) {
  return H3(sE("", null, null, "", null, null, 0), e, { length: -e.length }, t);
}
function G3() {
  return Uo;
}
function W3() {
  return Uo = Ka > 0 ? Ai(Zg, --Ka) : 0, jg--, Uo === 10 && (jg = 1, aE--), Uo;
}
function hs() {
  return Uo = Ka < f$ ? Ai(Zg, Ka++) : 0, jg++, Uo === 10 && (jg = 1, aE++), Uo;
}
function zu() {
  return Ai(Zg, Ka);
}
function a0() {
  return Ka;
}
function wC(e, t) {
  return Zb(Zg, e, t);
}
function eC(e) {
  switch (e) {
    case 0:
    case 9:
    case 10:
    case 13:
    case 32:
      return 5;
    case 33:
    case 43:
    case 44:
    case 47:
    case 62:
    case 64:
    case 126:
    case 59:
    case 123:
    case 125:
      return 4;
    case 58:
      return 3;
    case 34:
    case 39:
    case 40:
    case 91:
      return 2;
    case 41:
    case 93:
      return 1;
  }
  return 0;
}
function p$(e) {
  return aE = jg = 1, f$ = Fu(Zg = e), Ka = 0, [];
}
function h$(e) {
  return Zg = "", e;
}
function s0(e) {
  return d$(wC(Ka - 1, ok(e === 91 ? e + 2 : e === 40 ? e + 1 : e)));
}
function q3(e) {
  for (; (Uo = zu()) && Uo < 33; )
    hs();
  return eC(e) > 2 || eC(Uo) > 3 ? "" : " ";
}
function K3(e, t) {
  for (; --t && hs() && !(Uo < 48 || Uo > 102 || Uo > 57 && Uo < 65 || Uo > 70 && Uo < 97); )
    ;
  return wC(e, a0() + (t < 6 && zu() == 32 && hs() == 32));
}
function ok(e) {
  for (; hs(); )
    switch (Uo) {
      case e:
        return Ka;
      case 34:
      case 39:
        e !== 34 && e !== 39 && ok(Uo);
        break;
      case 40:
        e === 41 && ok(e);
        break;
      case 92:
        hs();
        break;
    }
  return Ka;
}
function Y3(e, t) {
  for (; hs() && e + Uo !== 57; )
    if (e + Uo === 84 && zu() === 47)
      break;
  return "/*" + wC(t, Ka - 1) + "*" + iE(e === 47 ? e : hs());
}
function X3(e) {
  for (; !eC(zu()); )
    hs();
  return wC(e, Ka);
}
function Q3(e) {
  return h$(l0("", null, null, null, [""], e = p$(e), 0, [0], e));
}
function l0(e, t, n, i, s, u, d, p, m) {
  for (var v = 0, y = 0, C = d, w = 0, R = 0, O = 0, E = 1, k = 1, L = 1, F = 0, _ = "", P = s, D = u, z = i, K = _; k; )
    switch (O = F, F = hs()) {
      case 40:
        if (O != 108 && Ai(K, C - 1) == 58) {
          rk(K += yr(s0(F), "&", "&\f"), "&\f") != -1 && (L = -1);
          break;
        }
      case 34:
      case 39:
      case 91:
        K += s0(F);
        break;
      case 9:
      case 10:
      case 13:
      case 32:
        K += q3(O);
        break;
      case 92:
        K += K3(a0() - 1, 7);
        continue;
      case 47:
        switch (zu()) {
          case 42:
          case 47:
            Ux(J3(Y3(hs(), a0()), t, n), m);
            break;
          default:
            K += "/";
        }
        break;
      case 123 * E:
        p[v++] = Fu(K) * L;
      case 125 * E:
      case 59:
      case 0:
        switch (F) {
          case 0:
          case 125:
            k = 0;
          case 59 + y:
            L == -1 && (K = yr(K, /\f/g, "")), R > 0 && Fu(K) - C && Ux(R > 32 ? CL(K + ";", i, n, C - 1) : CL(yr(K, " ", "") + ";", i, n, C - 2), m);
            break;
          case 59:
            K += ";";
          default:
            if (Ux(z = bL(K, t, n, v, y, s, p, _, P = [], D = [], C), u), F === 123)
              if (y === 0)
                l0(K, t, z, z, P, u, C, p, D);
              else
                switch (w === 99 && Ai(K, 3) === 110 ? 100 : w) {
                  case 100:
                  case 108:
                  case 109:
                  case 115:
                    l0(e, z, z, i && Ux(bL(e, z, z, 0, 0, s, p, _, s, P = [], C), D), s, D, C, p, i ? P : D);
                    break;
                  default:
                    l0(K, z, z, z, [""], D, 0, p, D);
                }
        }
        v = y = R = 0, E = L = 1, _ = K = "", C = d;
        break;
      case 58:
        C = 1 + Fu(K), R = O;
      default:
        if (E < 1) {
          if (F == 123)
            --E;
          else if (F == 125 && E++ == 0 && W3() == 125)
            continue;
        }
        switch (K += iE(F), F * E) {
          case 38:
            L = y > 0 ? 1 : (K += "\f", -1);
            break;
          case 44:
            p[v++] = (Fu(K) - 1) * L, L = 1;
            break;
          case 64:
            zu() === 45 && (K += s0(hs())), w = zu(), y = C = Fu(_ = K += X3(a0())), F++;
            break;
          case 45:
            O === 45 && Fu(K) == 2 && (E = 0);
        }
    }
  return u;
}
function bL(e, t, n, i, s, u, d, p, m, v, y) {
  for (var C = s - 1, w = s === 0 ? u : [""], R = nP(w), O = 0, E = 0, k = 0; O < i; ++O)
    for (var L = 0, F = Zb(e, C + 1, C = z3(E = d[O])), _ = e; L < R; ++L)
      (_ = d$(E > 0 ? w[L] + " " + F : yr(F, /&\f/g, w[L]))) && (m[k++] = _);
  return sE(e, t, n, s === 0 ? eP : p, m, v, y);
}
function J3(e, t, n) {
  return sE(e, t, n, u$, iE(G3()), Zb(e, 2, -2), 0);
}
function CL(e, t, n, i) {
  return sE(e, t, n, tP, Zb(e, 0, i), Zb(e, i + 1, -1), i);
}
function Og(e, t) {
  for (var n = "", i = nP(e), s = 0; s < i; s++)
    n += t(e[s], s, e, t) || "";
  return n;
}
function Z3(e, t, n, i) {
  switch (e.type) {
    case j3:
      if (e.children.length) break;
    case $3:
    case tP:
      return e.return = e.return || e.value;
    case u$:
      return "";
    case c$:
      return e.return = e.value + "{" + Og(e.children, i) + "}";
    case eP:
      e.value = e.props.join(",");
  }
  return Fu(n = Og(e.children, i)) ? e.return = e.value + "{" + n + "}" : "";
}
function eW(e) {
  var t = nP(e);
  return function(n, i, s, u) {
    for (var d = "", p = 0; p < t; p++)
      d += e[p](n, i, s, u) || "";
    return d;
  };
}
function tW(e) {
  return function(t) {
    t.root || (t = t.return) && e(t);
  };
}
function m$(e) {
  var t = /* @__PURE__ */ Object.create(null);
  return function(n) {
    return t[n] === void 0 && (t[n] = e(n)), t[n];
  };
}
var nW = function(t, n, i) {
  for (var s = 0, u = 0; s = u, u = zu(), s === 38 && u === 12 && (n[i] = 1), !eC(u); )
    hs();
  return wC(t, Ka);
}, rW = function(t, n) {
  var i = -1, s = 44;
  do
    switch (eC(s)) {
      case 0:
        s === 38 && zu() === 12 && (n[i] = 1), t[i] += nW(Ka - 1, n, i);
        break;
      case 2:
        t[i] += s0(s);
        break;
      case 4:
        if (s === 44) {
          t[++i] = zu() === 58 ? "&\f" : "", n[i] = t[i].length;
          break;
        }
      default:
        t[i] += iE(s);
    }
  while (s = hs());
  return t;
}, oW = function(t, n) {
  return h$(rW(p$(t), n));
}, SL = /* @__PURE__ */ new WeakMap(), iW = function(t) {
  if (!(t.type !== "rule" || !t.parent || // positive .length indicates that this rule contains pseudo
  // negative .length indicates that this rule has been already prefixed
  t.length < 1)) {
    for (var n = t.value, i = t.parent, s = t.column === i.column && t.line === i.line; i.type !== "rule"; )
      if (i = i.parent, !i) return;
    if (!(t.props.length === 1 && n.charCodeAt(0) !== 58 && !SL.get(i)) && !s) {
      SL.set(t, !0);
      for (var u = [], d = oW(n, u), p = i.props, m = 0, v = 0; m < d.length; m++)
        for (var y = 0; y < p.length; y++, v++)
          t.props[v] = u[m] ? d[m].replace(/&\f/g, p[y]) : p[y] + " " + d[m];
    }
  }
}, aW = function(t) {
  if (t.type === "decl") {
    var n = t.value;
    // charcode for l
    n.charCodeAt(0) === 108 && // charcode for b
    n.charCodeAt(2) === 98 && (t.return = "", t.value = "");
  }
};
function g$(e, t) {
  switch (V3(e, t)) {
    case 5103:
      return gr + "print-" + e + e;
    case 5737:
    case 4201:
    case 3177:
    case 3433:
    case 1641:
    case 4457:
    case 2921:
    case 5572:
    case 6356:
    case 5844:
    case 3191:
    case 6645:
    case 3005:
    case 6391:
    case 5879:
    case 5623:
    case 6135:
    case 4599:
    case 4855:
    case 4215:
    case 6389:
    case 5109:
    case 5365:
    case 5621:
    case 3829:
      return gr + e + e;
    case 5349:
    case 4246:
    case 4810:
    case 6968:
    case 2756:
      return gr + e + w0 + e + oa + e + e;
    case 6828:
    case 4268:
      return gr + e + oa + e + e;
    case 6165:
      return gr + e + oa + "flex-" + e + e;
    case 5187:
      return gr + e + yr(e, /(\w+).+(:[^]+)/, gr + "box-$1$2" + oa + "flex-$1$2") + e;
    case 5443:
      return gr + e + oa + "flex-item-" + yr(e, /flex-|-self/, "") + e;
    case 4675:
      return gr + e + oa + "flex-line-pack" + yr(e, /align-content|flex-|-self/, "") + e;
    case 5548:
      return gr + e + oa + yr(e, "shrink", "negative") + e;
    case 5292:
      return gr + e + oa + yr(e, "basis", "preferred-size") + e;
    case 6060:
      return gr + "box-" + yr(e, "-grow", "") + gr + e + oa + yr(e, "grow", "positive") + e;
    case 4554:
      return gr + yr(e, /([^-])(transform)/g, "$1" + gr + "$2") + e;
    case 6187:
      return yr(yr(yr(e, /(zoom-|grab)/, gr + "$1"), /(image-set)/, gr + "$1"), e, "") + e;
    case 5495:
    case 3959:
      return yr(e, /(image-set\([^]*)/, gr + "$1$`$1");
    case 4968:
      return yr(yr(e, /(.+:)(flex-)?(.*)/, gr + "box-pack:$3" + oa + "flex-pack:$3"), /s.+-b[^;]+/, "justify") + gr + e + e;
    case 4095:
    case 3583:
    case 4068:
    case 2532:
      return yr(e, /(.+)-inline(.+)/, gr + "$1$2") + e;
    case 8116:
    case 7059:
    case 5753:
    case 5535:
    case 5445:
    case 5701:
    case 4933:
    case 4677:
    case 5533:
    case 5789:
    case 5021:
    case 4765:
      if (Fu(e) - 1 - t > 6) switch (Ai(e, t + 1)) {
        case 109:
          if (Ai(e, t + 4) !== 45) break;
        case 102:
          return yr(e, /(.+:)(.+)-([^]+)/, "$1" + gr + "$2-$3$1" + w0 + (Ai(e, t + 3) == 108 ? "$3" : "$2-$3")) + e;
        case 115:
          return ~rk(e, "stretch") ? g$(yr(e, "stretch", "fill-available"), t) + e : e;
      }
      break;
    case 4949:
      if (Ai(e, t + 1) !== 115) break;
    case 6444:
      switch (Ai(e, Fu(e) - 3 - (~rk(e, "!important") && 10))) {
        case 107:
          return yr(e, ":", ":" + gr) + e;
        case 101:
          return yr(e, /(.+:)([^;!]+)(;|!.+)?/, "$1" + gr + (Ai(e, 14) === 45 ? "inline-" : "") + "box$3$1" + gr + "$2$3$1" + oa + "$2box$3") + e;
      }
      break;
    case 5936:
      switch (Ai(e, t + 11)) {
        case 114:
          return gr + e + oa + yr(e, /[svh]\w+-[tblr]{2}/, "tb") + e;
        case 108:
          return gr + e + oa + yr(e, /[svh]\w+-[tblr]{2}/, "tb-rl") + e;
        case 45:
          return gr + e + oa + yr(e, /[svh]\w+-[tblr]{2}/, "lr") + e;
      }
      return gr + e + oa + e + e;
  }
  return e;
}
var sW = function(t, n, i, s) {
  if (t.length > -1 && !t.return) switch (t.type) {
    case tP:
      t.return = g$(t.value, t.length);
      break;
    case c$:
      return Og([wb(t, {
        value: yr(t.value, "@", "@" + gr)
      })], s);
    case eP:
      if (t.length) return U3(t.props, function(u) {
        switch (B3(u, /(::plac\w+|:read-\w+)/)) {
          case ":read-only":
          case ":read-write":
            return Og([wb(t, {
              props: [yr(u, /:(read-\w+)/, ":" + w0 + "$1")]
            })], s);
          case "::placeholder":
            return Og([wb(t, {
              props: [yr(u, /:(plac\w+)/, ":" + gr + "input-$1")]
            }), wb(t, {
              props: [yr(u, /:(plac\w+)/, ":" + w0 + "$1")]
            }), wb(t, {
              props: [yr(u, /:(plac\w+)/, oa + "input-$1")]
            })], s);
        }
        return "";
      });
  }
}, lW = [sW], uW = function(t) {
  var n = t.key;
  if (n === "css") {
    var i = document.querySelectorAll("style[data-emotion]:not([data-s])");
    Array.prototype.forEach.call(i, function(E) {
      var k = E.getAttribute("data-emotion");
      k.indexOf(" ") !== -1 && (document.head.appendChild(E), E.setAttribute("data-s", ""));
    });
  }
  var s = t.stylisPlugins || lW, u = {}, d, p = [];
  d = t.container || document.head, Array.prototype.forEach.call(
    // this means we will ignore elements which don't have a space in them which
    // means that the style elements we're looking at are only Emotion 11 server-rendered style elements
    document.querySelectorAll('style[data-emotion^="' + n + ' "]'),
    function(E) {
      for (var k = E.getAttribute("data-emotion").split(" "), L = 1; L < k.length; L++)
        u[k[L]] = !0;
      p.push(E);
    }
  );
  var m, v = [iW, aW];
  {
    var y, C = [Z3, tW(function(E) {
      y.insert(E);
    })], w = eW(v.concat(s, C)), R = function(k) {
      return Og(Q3(k), w);
    };
    m = function(k, L, F, _) {
      y = F, R(k ? k + "{" + L.styles + "}" : L.styles), _ && (O.inserted[L.name] = !0);
    };
  }
  var O = {
    key: n,
    sheet: new A3({
      key: n,
      container: d,
      nonce: t.nonce,
      speedy: t.speedy,
      prepend: t.prepend,
      insertionPoint: t.insertionPoint
    }),
    nonce: t.nonce,
    inserted: u,
    registered: {},
    insert: m
  };
  return O.sheet.hydrate(p), O;
}, ik = { exports: {} }, kr = {};
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var wL;
function cW() {
  if (wL) return kr;
  wL = 1;
  var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, n = e ? Symbol.for("react.portal") : 60106, i = e ? Symbol.for("react.fragment") : 60107, s = e ? Symbol.for("react.strict_mode") : 60108, u = e ? Symbol.for("react.profiler") : 60114, d = e ? Symbol.for("react.provider") : 60109, p = e ? Symbol.for("react.context") : 60110, m = e ? Symbol.for("react.async_mode") : 60111, v = e ? Symbol.for("react.concurrent_mode") : 60111, y = e ? Symbol.for("react.forward_ref") : 60112, C = e ? Symbol.for("react.suspense") : 60113, w = e ? Symbol.for("react.suspense_list") : 60120, R = e ? Symbol.for("react.memo") : 60115, O = e ? Symbol.for("react.lazy") : 60116, E = e ? Symbol.for("react.block") : 60121, k = e ? Symbol.for("react.fundamental") : 60117, L = e ? Symbol.for("react.responder") : 60118, F = e ? Symbol.for("react.scope") : 60119;
  function _(D) {
    if (typeof D == "object" && D !== null) {
      var z = D.$$typeof;
      switch (z) {
        case t:
          switch (D = D.type, D) {
            case m:
            case v:
            case i:
            case u:
            case s:
            case C:
              return D;
            default:
              switch (D = D && D.$$typeof, D) {
                case p:
                case y:
                case O:
                case R:
                case d:
                  return D;
                default:
                  return z;
              }
          }
        case n:
          return z;
      }
    }
  }
  function P(D) {
    return _(D) === v;
  }
  return kr.AsyncMode = m, kr.ConcurrentMode = v, kr.ContextConsumer = p, kr.ContextProvider = d, kr.Element = t, kr.ForwardRef = y, kr.Fragment = i, kr.Lazy = O, kr.Memo = R, kr.Portal = n, kr.Profiler = u, kr.StrictMode = s, kr.Suspense = C, kr.isAsyncMode = function(D) {
    return P(D) || _(D) === m;
  }, kr.isConcurrentMode = P, kr.isContextConsumer = function(D) {
    return _(D) === p;
  }, kr.isContextProvider = function(D) {
    return _(D) === d;
  }, kr.isElement = function(D) {
    return typeof D == "object" && D !== null && D.$$typeof === t;
  }, kr.isForwardRef = function(D) {
    return _(D) === y;
  }, kr.isFragment = function(D) {
    return _(D) === i;
  }, kr.isLazy = function(D) {
    return _(D) === O;
  }, kr.isMemo = function(D) {
    return _(D) === R;
  }, kr.isPortal = function(D) {
    return _(D) === n;
  }, kr.isProfiler = function(D) {
    return _(D) === u;
  }, kr.isStrictMode = function(D) {
    return _(D) === s;
  }, kr.isSuspense = function(D) {
    return _(D) === C;
  }, kr.isValidElementType = function(D) {
    return typeof D == "string" || typeof D == "function" || D === i || D === v || D === u || D === s || D === C || D === w || typeof D == "object" && D !== null && (D.$$typeof === O || D.$$typeof === R || D.$$typeof === d || D.$$typeof === p || D.$$typeof === y || D.$$typeof === k || D.$$typeof === L || D.$$typeof === F || D.$$typeof === E);
  }, kr.typeOf = _, kr;
}
var Pr = {};
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var xL;
function dW() {
  return xL || (xL = 1, process.env.NODE_ENV !== "production" && function() {
    var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, n = e ? Symbol.for("react.portal") : 60106, i = e ? Symbol.for("react.fragment") : 60107, s = e ? Symbol.for("react.strict_mode") : 60108, u = e ? Symbol.for("react.profiler") : 60114, d = e ? Symbol.for("react.provider") : 60109, p = e ? Symbol.for("react.context") : 60110, m = e ? Symbol.for("react.async_mode") : 60111, v = e ? Symbol.for("react.concurrent_mode") : 60111, y = e ? Symbol.for("react.forward_ref") : 60112, C = e ? Symbol.for("react.suspense") : 60113, w = e ? Symbol.for("react.suspense_list") : 60120, R = e ? Symbol.for("react.memo") : 60115, O = e ? Symbol.for("react.lazy") : 60116, E = e ? Symbol.for("react.block") : 60121, k = e ? Symbol.for("react.fundamental") : 60117, L = e ? Symbol.for("react.responder") : 60118, F = e ? Symbol.for("react.scope") : 60119;
    function _(ue) {
      return typeof ue == "string" || typeof ue == "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
      ue === i || ue === v || ue === u || ue === s || ue === C || ue === w || typeof ue == "object" && ue !== null && (ue.$$typeof === O || ue.$$typeof === R || ue.$$typeof === d || ue.$$typeof === p || ue.$$typeof === y || ue.$$typeof === k || ue.$$typeof === L || ue.$$typeof === F || ue.$$typeof === E);
    }
    function P(ue) {
      if (typeof ue == "object" && ue !== null) {
        var we = ue.$$typeof;
        switch (we) {
          case t:
            var _e = ue.type;
            switch (_e) {
              case m:
              case v:
              case i:
              case u:
              case s:
              case C:
                return _e;
              default:
                var He = _e && _e.$$typeof;
                switch (He) {
                  case p:
                  case y:
                  case O:
                  case R:
                  case d:
                    return He;
                  default:
                    return we;
                }
            }
          case n:
            return we;
        }
      }
    }
    var D = m, z = v, K = p, Q = d, H = t, I = y, U = i, G = O, Y = R, te = n, B = u, W = s, q = C, ne = !1;
    function re(ue) {
      return ne || (ne = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.")), X(ue) || P(ue) === m;
    }
    function X(ue) {
      return P(ue) === v;
    }
    function j(ue) {
      return P(ue) === p;
    }
    function ie(ue) {
      return P(ue) === d;
    }
    function fe(ue) {
      return typeof ue == "object" && ue !== null && ue.$$typeof === t;
    }
    function ce(ue) {
      return P(ue) === y;
    }
    function me(ue) {
      return P(ue) === i;
    }
    function ge(ue) {
      return P(ue) === O;
    }
    function de(ue) {
      return P(ue) === R;
    }
    function pe(ue) {
      return P(ue) === n;
    }
    function be(ue) {
      return P(ue) === u;
    }
    function Ce(ue) {
      return P(ue) === s;
    }
    function Re(ue) {
      return P(ue) === C;
    }
    Pr.AsyncMode = D, Pr.ConcurrentMode = z, Pr.ContextConsumer = K, Pr.ContextProvider = Q, Pr.Element = H, Pr.ForwardRef = I, Pr.Fragment = U, Pr.Lazy = G, Pr.Memo = Y, Pr.Portal = te, Pr.Profiler = B, Pr.StrictMode = W, Pr.Suspense = q, Pr.isAsyncMode = re, Pr.isConcurrentMode = X, Pr.isContextConsumer = j, Pr.isContextProvider = ie, Pr.isElement = fe, Pr.isForwardRef = ce, Pr.isFragment = me, Pr.isLazy = ge, Pr.isMemo = de, Pr.isPortal = pe, Pr.isProfiler = be, Pr.isStrictMode = Ce, Pr.isSuspense = Re, Pr.isValidElementType = _, Pr.typeOf = P;
  }()), Pr;
}
process.env.NODE_ENV === "production" ? ik.exports = cW() : ik.exports = dW();
var fW = ik.exports, v$ = fW, pW = {
  $$typeof: !0,
  render: !0,
  defaultProps: !0,
  displayName: !0,
  propTypes: !0
}, hW = {
  $$typeof: !0,
  compare: !0,
  defaultProps: !0,
  displayName: !0,
  propTypes: !0,
  type: !0
}, y$ = {};
y$[v$.ForwardRef] = pW;
y$[v$.Memo] = hW;
var mW = !0;
function b$(e, t, n) {
  var i = "";
  return n.split(" ").forEach(function(s) {
    e[s] !== void 0 ? t.push(e[s] + ";") : s && (i += s + " ");
  }), i;
}
var rP = function(t, n, i) {
  var s = t.key + "-" + n.name;
  // we only need to add the styles to the registered cache if the
  // class name could be used further down
  // the tree but if it's a string tag, we know it won't
  // so we don't have to add it to registered cache.
  // this improves memory usage since we can avoid storing the whole style string
  (i === !1 || // we need to always store it if we're in compat mode and
  // in node since emotion-server relies on whether a style is in
  // the registered cache to know whether a style is global or not
  // also, note that this check will be dead code eliminated in the browser
  mW === !1) && t.registered[s] === void 0 && (t.registered[s] = n.styles);
}, oP = function(t, n, i) {
  rP(t, n, i);
  var s = t.key + "-" + n.name;
  if (t.inserted[n.name] === void 0) {
    var u = n;
    do
      t.insert(n === u ? "." + s : "", u, t.sheet, !0), u = u.next;
    while (u !== void 0);
  }
};
function gW(e) {
  for (var t = 0, n, i = 0, s = e.length; s >= 4; ++i, s -= 4)
    n = e.charCodeAt(i) & 255 | (e.charCodeAt(++i) & 255) << 8 | (e.charCodeAt(++i) & 255) << 16 | (e.charCodeAt(++i) & 255) << 24, n = /* Math.imul(k, m): */
    (n & 65535) * 1540483477 + ((n >>> 16) * 59797 << 16), n ^= /* k >>> r: */
    n >>> 24, t = /* Math.imul(k, m): */
    (n & 65535) * 1540483477 + ((n >>> 16) * 59797 << 16) ^ /* Math.imul(h, m): */
    (t & 65535) * 1540483477 + ((t >>> 16) * 59797 << 16);
  switch (s) {
    case 3:
      t ^= (e.charCodeAt(i + 2) & 255) << 16;
    case 2:
      t ^= (e.charCodeAt(i + 1) & 255) << 8;
    case 1:
      t ^= e.charCodeAt(i) & 255, t = /* Math.imul(h, m): */
      (t & 65535) * 1540483477 + ((t >>> 16) * 59797 << 16);
  }
  return t ^= t >>> 13, t = /* Math.imul(h, m): */
  (t & 65535) * 1540483477 + ((t >>> 16) * 59797 << 16), ((t ^ t >>> 15) >>> 0).toString(36);
}
var vW = {
  animationIterationCount: 1,
  aspectRatio: 1,
  borderImageOutset: 1,
  borderImageSlice: 1,
  borderImageWidth: 1,
  boxFlex: 1,
  boxFlexGroup: 1,
  boxOrdinalGroup: 1,
  columnCount: 1,
  columns: 1,
  flex: 1,
  flexGrow: 1,
  flexPositive: 1,
  flexShrink: 1,
  flexNegative: 1,
  flexOrder: 1,
  gridRow: 1,
  gridRowEnd: 1,
  gridRowSpan: 1,
  gridRowStart: 1,
  gridColumn: 1,
  gridColumnEnd: 1,
  gridColumnSpan: 1,
  gridColumnStart: 1,
  msGridRow: 1,
  msGridRowSpan: 1,
  msGridColumn: 1,
  msGridColumnSpan: 1,
  fontWeight: 1,
  lineHeight: 1,
  opacity: 1,
  order: 1,
  orphans: 1,
  scale: 1,
  tabSize: 1,
  widows: 1,
  zIndex: 1,
  zoom: 1,
  WebkitLineClamp: 1,
  // SVG-related properties
  fillOpacity: 1,
  floodOpacity: 1,
  stopOpacity: 1,
  strokeDasharray: 1,
  strokeDashoffset: 1,
  strokeMiterlimit: 1,
  strokeOpacity: 1,
  strokeWidth: 1
}, yW = /[A-Z]|^ms/g, bW = /_EMO_([^_]+?)_([^]*?)_EMO_/g, C$ = function(t) {
  return t.charCodeAt(1) === 45;
}, EL = function(t) {
  return t != null && typeof t != "boolean";
}, fO = /* @__PURE__ */ m$(function(e) {
  return C$(e) ? e : e.replace(yW, "-$&").toLowerCase();
}), TL = function(t, n) {
  switch (t) {
    case "animation":
    case "animationName":
      if (typeof n == "string")
        return n.replace(bW, function(i, s, u) {
          return _u = {
            name: s,
            styles: u,
            next: _u
          }, s;
        });
  }
  return vW[t] !== 1 && !C$(t) && typeof n == "number" && n !== 0 ? n + "px" : n;
};
function tC(e, t, n) {
  if (n == null)
    return "";
  var i = n;
  if (i.__emotion_styles !== void 0)
    return i;
  switch (typeof n) {
    case "boolean":
      return "";
    case "object": {
      var s = n;
      if (s.anim === 1)
        return _u = {
          name: s.name,
          styles: s.styles,
          next: _u
        }, s.name;
      var u = n;
      if (u.styles !== void 0) {
        var d = u.next;
        if (d !== void 0)
          for (; d !== void 0; )
            _u = {
              name: d.name,
              styles: d.styles,
              next: _u
            }, d = d.next;
        var p = u.styles + ";";
        return p;
      }
      return CW(e, t, n);
    }
    case "function": {
      if (e !== void 0) {
        var m = _u, v = n(e);
        return _u = m, tC(e, t, v);
      }
      break;
    }
  }
  var y = n;
  if (t == null)
    return y;
  var C = t[y];
  return C !== void 0 ? C : y;
}
function CW(e, t, n) {
  var i = "";
  if (Array.isArray(n))
    for (var s = 0; s < n.length; s++)
      i += tC(e, t, n[s]) + ";";
  else
    for (var u in n) {
      var d = n[u];
      if (typeof d != "object") {
        var p = d;
        t != null && t[p] !== void 0 ? i += u + "{" + t[p] + "}" : EL(p) && (i += fO(u) + ":" + TL(u, p) + ";");
      } else if (Array.isArray(d) && typeof d[0] == "string" && (t == null || t[d[0]] === void 0))
        for (var m = 0; m < d.length; m++)
          EL(d[m]) && (i += fO(u) + ":" + TL(u, d[m]) + ";");
      else {
        var v = tC(e, t, d);
        switch (u) {
          case "animation":
          case "animationName": {
            i += fO(u) + ":" + v + ";";
            break;
          }
          default:
            i += u + "{" + v + "}";
        }
      }
    }
  return i;
}
var RL = /label:\s*([^\s;{]+)\s*(;|$)/g, _u;
function xC(e, t, n) {
  if (e.length === 1 && typeof e[0] == "object" && e[0] !== null && e[0].styles !== void 0)
    return e[0];
  var i = !0, s = "";
  _u = void 0;
  var u = e[0];
  if (u == null || u.raw === void 0)
    i = !1, s += tC(n, t, u);
  else {
    var d = u;
    s += d[0];
  }
  for (var p = 1; p < e.length; p++)
    if (s += tC(n, t, e[p]), i) {
      var m = u;
      s += m[p];
    }
  RL.lastIndex = 0;
  for (var v = "", y; (y = RL.exec(s)) !== null; )
    v += "-" + y[1];
  var C = gW(s) + v;
  return {
    name: C,
    styles: s,
    next: _u
  };
}
var SW = function(t) {
  return t();
}, S$ = b0.useInsertionEffect ? b0.useInsertionEffect : !1, w$ = S$ || SW, OL = S$ || S.useLayoutEffect, x$ = /* @__PURE__ */ S.createContext(
  // we're doing this to avoid preconstruct's dead code elimination in this one case
  // because this module is primarily intended for the browser and node
  // but it's also required in react native and similar environments sometimes
  // and we could have a special build just for that
  // but this is much easier and the native packages
  // might use a different theme context in the future anyway
  typeof HTMLElement < "u" ? /* @__PURE__ */ uW({
    key: "css"
  }) : null
);
x$.Provider;
var iP = function(t) {
  return /* @__PURE__ */ S.forwardRef(function(n, i) {
    var s = S.useContext(x$);
    return t(n, s, i);
  });
}, EC = /* @__PURE__ */ S.createContext({}), aP = {}.hasOwnProperty, ak = "__EMOTION_TYPE_PLEASE_DO_NOT_USE__", wW = function(t, n) {
  var i = {};
  for (var s in n)
    aP.call(n, s) && (i[s] = n[s]);
  return i[ak] = t, i;
}, xW = function(t) {
  var n = t.cache, i = t.serialized, s = t.isStringTag;
  return rP(n, i, s), w$(function() {
    return oP(n, i, s);
  }), null;
}, EW = /* @__PURE__ */ iP(function(e, t, n) {
  var i = e.css;
  typeof i == "string" && t.registered[i] !== void 0 && (i = t.registered[i]);
  var s = e[ak], u = [i], d = "";
  typeof e.className == "string" ? d = b$(t.registered, u, e.className) : e.className != null && (d = e.className + " ");
  var p = xC(u, void 0, S.useContext(EC));
  d += t.key + "-" + p.name;
  var m = {};
  for (var v in e)
    aP.call(e, v) && v !== "css" && v !== ak && (m[v] = e[v]);
  return m.className = d, n && (m.ref = n), /* @__PURE__ */ S.createElement(S.Fragment, null, /* @__PURE__ */ S.createElement(xW, {
    cache: t,
    serialized: p,
    isStringTag: typeof s == "string"
  }), /* @__PURE__ */ S.createElement(s, m));
}), TW = EW, kL = function(t, n) {
  var i = arguments;
  if (n == null || !aP.call(n, "css"))
    return S.createElement.apply(void 0, i);
  var s = i.length, u = new Array(s);
  u[0] = TW, u[1] = wW(t, n);
  for (var d = 2; d < s; d++)
    u[d] = i[d];
  return S.createElement.apply(null, u);
};
(function(e) {
  var t;
  t || (t = e.JSX || (e.JSX = {}));
})(kL || (kL = {}));
var RW = /* @__PURE__ */ iP(function(e, t) {
  var n = e.styles, i = xC([n], void 0, S.useContext(EC)), s = S.useRef();
  return OL(function() {
    var u = t.key + "-global", d = new t.sheet.constructor({
      key: u,
      nonce: t.sheet.nonce,
      container: t.sheet.container,
      speedy: t.sheet.isSpeedy
    }), p = !1, m = document.querySelector('style[data-emotion="' + u + " " + i.name + '"]');
    return t.sheet.tags.length && (d.before = t.sheet.tags[0]), m !== null && (p = !0, m.setAttribute("data-emotion", u), d.hydrate([m])), s.current = [d, p], function() {
      d.flush();
    };
  }, [t]), OL(function() {
    var u = s.current, d = u[0], p = u[1];
    if (p) {
      u[1] = !1;
      return;
    }
    if (i.next !== void 0 && oP(t, i.next, !0), d.tags.length) {
      var m = d.tags[d.tags.length - 1].nextElementSibling;
      d.before = m, d.flush();
    }
    t.insert("", i, d, !1);
  }, [t, i.name]), null;
});
function wf() {
  for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
    t[n] = arguments[n];
  return xC(t);
}
function Ku() {
  var e = wf.apply(void 0, arguments), t = "animation-" + e.name;
  return {
    name: t,
    styles: "@keyframes " + t + "{" + e.styles + "}",
    anim: 1,
    toString: function() {
      return "_EMO_" + this.name + "_" + this.styles + "_EMO_";
    }
  };
}
var OW = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|disableRemotePlayback|download|draggable|encType|enterKeyHint|fetchpriority|fetchPriority|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|popover|popoverTarget|popoverTargetAction|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/, kW = /* @__PURE__ */ m$(
  function(e) {
    return OW.test(e) || e.charCodeAt(0) === 111 && e.charCodeAt(1) === 110 && e.charCodeAt(2) < 91;
  }
  /* Z+1 */
), PW = kW, MW = function(t) {
  return t !== "theme";
}, PL = function(t) {
  return typeof t == "string" && // 96 is one less than the char code
  // for "a" so this is checking that
  // it's a lowercase character
  t.charCodeAt(0) > 96 ? PW : MW;
}, ML = function(t, n, i) {
  var s;
  if (n) {
    var u = n.shouldForwardProp;
    s = t.__emotion_forwardProp && u ? function(d) {
      return t.__emotion_forwardProp(d) && u(d);
    } : u;
  }
  return typeof s != "function" && i && (s = t.__emotion_forwardProp), s;
}, IW = function(t) {
  var n = t.cache, i = t.serialized, s = t.isStringTag;
  return rP(n, i, s), w$(function() {
    return oP(n, i, s);
  }), null;
}, DW = function e(t, n) {
  var i = t.__emotion_real === t, s = i && t.__emotion_base || t, u, d;
  n !== void 0 && (u = n.label, d = n.target);
  var p = ML(t, n, i), m = p || PL(s), v = !m("as");
  return function() {
    var y = arguments, C = i && t.__emotion_styles !== void 0 ? t.__emotion_styles.slice(0) : [];
    if (u !== void 0 && C.push("label:" + u + ";"), y[0] == null || y[0].raw === void 0)
      C.push.apply(C, y);
    else {
      var w = y[0];
      C.push(w[0]);
      for (var R = y.length, O = 1; O < R; O++)
        C.push(y[O], w[O]);
    }
    var E = iP(function(k, L, F) {
      var _ = v && k.as || s, P = "", D = [], z = k;
      if (k.theme == null) {
        z = {};
        for (var K in k)
          z[K] = k[K];
        z.theme = S.useContext(EC);
      }
      typeof k.className == "string" ? P = b$(L.registered, D, k.className) : k.className != null && (P = k.className + " ");
      var Q = xC(C.concat(D), L.registered, z);
      P += L.key + "-" + Q.name, d !== void 0 && (P += " " + d);
      var H = v && p === void 0 ? PL(_) : m, I = {};
      for (var U in k)
        v && U === "as" || H(U) && (I[U] = k[U]);
      return I.className = P, F && (I.ref = F), /* @__PURE__ */ S.createElement(S.Fragment, null, /* @__PURE__ */ S.createElement(IW, {
        cache: L,
        serialized: Q,
        isStringTag: typeof _ == "string"
      }), /* @__PURE__ */ S.createElement(_, I));
    });
    return E.displayName = u !== void 0 ? u : "Styled(" + (typeof s == "string" ? s : s.displayName || s.name || "Component") + ")", E.defaultProps = t.defaultProps, E.__emotion_real = E, E.__emotion_base = s, E.__emotion_styles = C, E.__emotion_forwardProp = p, Object.defineProperty(E, "toString", {
      value: function() {
        return "." + d;
      }
    }), E.withComponent = function(k, L) {
      var F = e(k, J({}, n, L, {
        shouldForwardProp: ML(E, L, !0)
      }));
      return F.apply(void 0, C);
    }, E;
  };
}, NW = [
  "a",
  "abbr",
  "address",
  "area",
  "article",
  "aside",
  "audio",
  "b",
  "base",
  "bdi",
  "bdo",
  "big",
  "blockquote",
  "body",
  "br",
  "button",
  "canvas",
  "caption",
  "cite",
  "code",
  "col",
  "colgroup",
  "data",
  "datalist",
  "dd",
  "del",
  "details",
  "dfn",
  "dialog",
  "div",
  "dl",
  "dt",
  "em",
  "embed",
  "fieldset",
  "figcaption",
  "figure",
  "footer",
  "form",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "head",
  "header",
  "hgroup",
  "hr",
  "html",
  "i",
  "iframe",
  "img",
  "input",
  "ins",
  "kbd",
  "keygen",
  "label",
  "legend",
  "li",
  "link",
  "main",
  "map",
  "mark",
  "marquee",
  "menu",
  "menuitem",
  "meta",
  "meter",
  "nav",
  "noscript",
  "object",
  "ol",
  "optgroup",
  "option",
  "output",
  "p",
  "param",
  "picture",
  "pre",
  "progress",
  "q",
  "rp",
  "rt",
  "ruby",
  "s",
  "samp",
  "script",
  "section",
  "select",
  "small",
  "source",
  "span",
  "strong",
  "style",
  "sub",
  "summary",
  "sup",
  "table",
  "tbody",
  "td",
  "textarea",
  "tfoot",
  "th",
  "thead",
  "time",
  "title",
  "tr",
  "track",
  "u",
  "ul",
  "var",
  "video",
  "wbr",
  // SVG
  "circle",
  "clipPath",
  "defs",
  "ellipse",
  "foreignObject",
  "g",
  "image",
  "line",
  "linearGradient",
  "mask",
  "path",
  "pattern",
  "polygon",
  "polyline",
  "radialGradient",
  "rect",
  "stop",
  "svg",
  "text",
  "tspan"
], sk = DW.bind(null);
NW.forEach(function(e) {
  sk[e] = sk(e);
});
var lk = { exports: {} }, Gx = { exports: {} }, Mr = {};
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var IL;
function LW() {
  if (IL) return Mr;
  IL = 1;
  var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, n = e ? Symbol.for("react.portal") : 60106, i = e ? Symbol.for("react.fragment") : 60107, s = e ? Symbol.for("react.strict_mode") : 60108, u = e ? Symbol.for("react.profiler") : 60114, d = e ? Symbol.for("react.provider") : 60109, p = e ? Symbol.for("react.context") : 60110, m = e ? Symbol.for("react.async_mode") : 60111, v = e ? Symbol.for("react.concurrent_mode") : 60111, y = e ? Symbol.for("react.forward_ref") : 60112, C = e ? Symbol.for("react.suspense") : 60113, w = e ? Symbol.for("react.suspense_list") : 60120, R = e ? Symbol.for("react.memo") : 60115, O = e ? Symbol.for("react.lazy") : 60116, E = e ? Symbol.for("react.block") : 60121, k = e ? Symbol.for("react.fundamental") : 60117, L = e ? Symbol.for("react.responder") : 60118, F = e ? Symbol.for("react.scope") : 60119;
  function _(D) {
    if (typeof D == "object" && D !== null) {
      var z = D.$$typeof;
      switch (z) {
        case t:
          switch (D = D.type, D) {
            case m:
            case v:
            case i:
            case u:
            case s:
            case C:
              return D;
            default:
              switch (D = D && D.$$typeof, D) {
                case p:
                case y:
                case O:
                case R:
                case d:
                  return D;
                default:
                  return z;
              }
          }
        case n:
          return z;
      }
    }
  }
  function P(D) {
    return _(D) === v;
  }
  return Mr.AsyncMode = m, Mr.ConcurrentMode = v, Mr.ContextConsumer = p, Mr.ContextProvider = d, Mr.Element = t, Mr.ForwardRef = y, Mr.Fragment = i, Mr.Lazy = O, Mr.Memo = R, Mr.Portal = n, Mr.Profiler = u, Mr.StrictMode = s, Mr.Suspense = C, Mr.isAsyncMode = function(D) {
    return P(D) || _(D) === m;
  }, Mr.isConcurrentMode = P, Mr.isContextConsumer = function(D) {
    return _(D) === p;
  }, Mr.isContextProvider = function(D) {
    return _(D) === d;
  }, Mr.isElement = function(D) {
    return typeof D == "object" && D !== null && D.$$typeof === t;
  }, Mr.isForwardRef = function(D) {
    return _(D) === y;
  }, Mr.isFragment = function(D) {
    return _(D) === i;
  }, Mr.isLazy = function(D) {
    return _(D) === O;
  }, Mr.isMemo = function(D) {
    return _(D) === R;
  }, Mr.isPortal = function(D) {
    return _(D) === n;
  }, Mr.isProfiler = function(D) {
    return _(D) === u;
  }, Mr.isStrictMode = function(D) {
    return _(D) === s;
  }, Mr.isSuspense = function(D) {
    return _(D) === C;
  }, Mr.isValidElementType = function(D) {
    return typeof D == "string" || typeof D == "function" || D === i || D === v || D === u || D === s || D === C || D === w || typeof D == "object" && D !== null && (D.$$typeof === O || D.$$typeof === R || D.$$typeof === d || D.$$typeof === p || D.$$typeof === y || D.$$typeof === k || D.$$typeof === L || D.$$typeof === F || D.$$typeof === E);
  }, Mr.typeOf = _, Mr;
}
var Ir = {};
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var DL;
function FW() {
  return DL || (DL = 1, process.env.NODE_ENV !== "production" && function() {
    var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, n = e ? Symbol.for("react.portal") : 60106, i = e ? Symbol.for("react.fragment") : 60107, s = e ? Symbol.for("react.strict_mode") : 60108, u = e ? Symbol.for("react.profiler") : 60114, d = e ? Symbol.for("react.provider") : 60109, p = e ? Symbol.for("react.context") : 60110, m = e ? Symbol.for("react.async_mode") : 60111, v = e ? Symbol.for("react.concurrent_mode") : 60111, y = e ? Symbol.for("react.forward_ref") : 60112, C = e ? Symbol.for("react.suspense") : 60113, w = e ? Symbol.for("react.suspense_list") : 60120, R = e ? Symbol.for("react.memo") : 60115, O = e ? Symbol.for("react.lazy") : 60116, E = e ? Symbol.for("react.block") : 60121, k = e ? Symbol.for("react.fundamental") : 60117, L = e ? Symbol.for("react.responder") : 60118, F = e ? Symbol.for("react.scope") : 60119;
    function _(ue) {
      return typeof ue == "string" || typeof ue == "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
      ue === i || ue === v || ue === u || ue === s || ue === C || ue === w || typeof ue == "object" && ue !== null && (ue.$$typeof === O || ue.$$typeof === R || ue.$$typeof === d || ue.$$typeof === p || ue.$$typeof === y || ue.$$typeof === k || ue.$$typeof === L || ue.$$typeof === F || ue.$$typeof === E);
    }
    function P(ue) {
      if (typeof ue == "object" && ue !== null) {
        var we = ue.$$typeof;
        switch (we) {
          case t:
            var _e = ue.type;
            switch (_e) {
              case m:
              case v:
              case i:
              case u:
              case s:
              case C:
                return _e;
              default:
                var He = _e && _e.$$typeof;
                switch (He) {
                  case p:
                  case y:
                  case O:
                  case R:
                  case d:
                    return He;
                  default:
                    return we;
                }
            }
          case n:
            return we;
        }
      }
    }
    var D = m, z = v, K = p, Q = d, H = t, I = y, U = i, G = O, Y = R, te = n, B = u, W = s, q = C, ne = !1;
    function re(ue) {
      return ne || (ne = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.")), X(ue) || P(ue) === m;
    }
    function X(ue) {
      return P(ue) === v;
    }
    function j(ue) {
      return P(ue) === p;
    }
    function ie(ue) {
      return P(ue) === d;
    }
    function fe(ue) {
      return typeof ue == "object" && ue !== null && ue.$$typeof === t;
    }
    function ce(ue) {
      return P(ue) === y;
    }
    function me(ue) {
      return P(ue) === i;
    }
    function ge(ue) {
      return P(ue) === O;
    }
    function de(ue) {
      return P(ue) === R;
    }
    function pe(ue) {
      return P(ue) === n;
    }
    function be(ue) {
      return P(ue) === u;
    }
    function Ce(ue) {
      return P(ue) === s;
    }
    function Re(ue) {
      return P(ue) === C;
    }
    Ir.AsyncMode = D, Ir.ConcurrentMode = z, Ir.ContextConsumer = K, Ir.ContextProvider = Q, Ir.Element = H, Ir.ForwardRef = I, Ir.Fragment = U, Ir.Lazy = G, Ir.Memo = Y, Ir.Portal = te, Ir.Profiler = B, Ir.StrictMode = W, Ir.Suspense = q, Ir.isAsyncMode = re, Ir.isConcurrentMode = X, Ir.isContextConsumer = j, Ir.isContextProvider = ie, Ir.isElement = fe, Ir.isForwardRef = ce, Ir.isFragment = me, Ir.isLazy = ge, Ir.isMemo = de, Ir.isPortal = pe, Ir.isProfiler = be, Ir.isStrictMode = Ce, Ir.isSuspense = Re, Ir.isValidElementType = _, Ir.typeOf = P;
  }()), Ir;
}
var NL;
function E$() {
  return NL || (NL = 1, process.env.NODE_ENV === "production" ? Gx.exports = LW() : Gx.exports = FW()), Gx.exports;
}
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
var pO, LL;
function _W() {
  if (LL) return pO;
  LL = 1;
  var e = Object.getOwnPropertySymbols, t = Object.prototype.hasOwnProperty, n = Object.prototype.propertyIsEnumerable;
  function i(u) {
    if (u == null)
      throw new TypeError("Object.assign cannot be called with null or undefined");
    return Object(u);
  }
  function s() {
    try {
      if (!Object.assign)
        return !1;
      var u = new String("abc");
      if (u[5] = "de", Object.getOwnPropertyNames(u)[0] === "5")
        return !1;
      for (var d = {}, p = 0; p < 10; p++)
        d["_" + String.fromCharCode(p)] = p;
      var m = Object.getOwnPropertyNames(d).map(function(y) {
        return d[y];
      });
      if (m.join("") !== "0123456789")
        return !1;
      var v = {};
      return "abcdefghijklmnopqrst".split("").forEach(function(y) {
        v[y] = y;
      }), Object.keys(Object.assign({}, v)).join("") === "abcdefghijklmnopqrst";
    } catch {
      return !1;
    }
  }
  return pO = s() ? Object.assign : function(u, d) {
    for (var p, m = i(u), v, y = 1; y < arguments.length; y++) {
      p = Object(arguments[y]);
      for (var C in p)
        t.call(p, C) && (m[C] = p[C]);
      if (e) {
        v = e(p);
        for (var w = 0; w < v.length; w++)
          n.call(p, v[w]) && (m[v[w]] = p[v[w]]);
      }
    }
    return m;
  }, pO;
}
var hO, FL;
function sP() {
  if (FL) return hO;
  FL = 1;
  var e = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
  return hO = e, hO;
}
var mO, _L;
function T$() {
  return _L || (_L = 1, mO = Function.call.bind(Object.prototype.hasOwnProperty)), mO;
}
var gO, AL;
function AW() {
  if (AL) return gO;
  AL = 1;
  var e = function() {
  };
  if (process.env.NODE_ENV !== "production") {
    var t = sP(), n = {}, i = T$();
    e = function(u) {
      var d = "Warning: " + u;
      typeof console < "u" && console.error(d);
      try {
        throw new Error(d);
      } catch {
      }
    };
  }
  function s(u, d, p, m, v) {
    if (process.env.NODE_ENV !== "production") {
      for (var y in u)
        if (i(u, y)) {
          var C;
          try {
            if (typeof u[y] != "function") {
              var w = Error(
                (m || "React class") + ": " + p + " type `" + y + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof u[y] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`."
              );
              throw w.name = "Invariant Violation", w;
            }
            C = u[y](d, y, m, p, null, t);
          } catch (O) {
            C = O;
          }
          if (C && !(C instanceof Error) && e(
            (m || "React class") + ": type specification of " + p + " `" + y + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof C + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."
          ), C instanceof Error && !(C.message in n)) {
            n[C.message] = !0;
            var R = v ? v() : "";
            e(
              "Failed " + p + " type: " + C.message + (R ?? "")
            );
          }
        }
    }
  }
  return s.resetWarningCache = function() {
    process.env.NODE_ENV !== "production" && (n = {});
  }, gO = s, gO;
}
var vO, $L;
function $W() {
  if ($L) return vO;
  $L = 1;
  var e = E$(), t = _W(), n = sP(), i = T$(), s = AW(), u = function() {
  };
  process.env.NODE_ENV !== "production" && (u = function(p) {
    var m = "Warning: " + p;
    typeof console < "u" && console.error(m);
    try {
      throw new Error(m);
    } catch {
    }
  });
  function d() {
    return null;
  }
  return vO = function(p, m) {
    var v = typeof Symbol == "function" && Symbol.iterator, y = "@@iterator";
    function C(X) {
      var j = X && (v && X[v] || X[y]);
      if (typeof j == "function")
        return j;
    }
    var w = "<<anonymous>>", R = {
      array: L("array"),
      bigint: L("bigint"),
      bool: L("boolean"),
      func: L("function"),
      number: L("number"),
      object: L("object"),
      string: L("string"),
      symbol: L("symbol"),
      any: F(),
      arrayOf: _,
      element: P(),
      elementType: D(),
      instanceOf: z,
      node: I(),
      objectOf: Q,
      oneOf: K,
      oneOfType: H,
      shape: G,
      exact: Y
    };
    function O(X, j) {
      return X === j ? X !== 0 || 1 / X === 1 / j : X !== X && j !== j;
    }
    function E(X, j) {
      this.message = X, this.data = j && typeof j == "object" ? j : {}, this.stack = "";
    }
    E.prototype = Error.prototype;
    function k(X) {
      if (process.env.NODE_ENV !== "production")
        var j = {}, ie = 0;
      function fe(me, ge, de, pe, be, Ce, Re) {
        if (pe = pe || w, Ce = Ce || de, Re !== n) {
          if (m) {
            var ue = new Error(
              "Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types"
            );
            throw ue.name = "Invariant Violation", ue;
          } else if (process.env.NODE_ENV !== "production" && typeof console < "u") {
            var we = pe + ":" + de;
            !j[we] && // Avoid spamming the console because they are often not actionable except for lib authors
            ie < 3 && (u(
              "You are manually calling a React.PropTypes validation function for the `" + Ce + "` prop on `" + pe + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."
            ), j[we] = !0, ie++);
          }
        }
        return ge[de] == null ? me ? ge[de] === null ? new E("The " + be + " `" + Ce + "` is marked as required " + ("in `" + pe + "`, but its value is `null`.")) : new E("The " + be + " `" + Ce + "` is marked as required in " + ("`" + pe + "`, but its value is `undefined`.")) : null : X(ge, de, pe, be, Ce);
      }
      var ce = fe.bind(null, !1);
      return ce.isRequired = fe.bind(null, !0), ce;
    }
    function L(X) {
      function j(ie, fe, ce, me, ge, de) {
        var pe = ie[fe], be = W(pe);
        if (be !== X) {
          var Ce = q(pe);
          return new E(
            "Invalid " + me + " `" + ge + "` of type " + ("`" + Ce + "` supplied to `" + ce + "`, expected ") + ("`" + X + "`."),
            { expectedType: X }
          );
        }
        return null;
      }
      return k(j);
    }
    function F() {
      return k(d);
    }
    function _(X) {
      function j(ie, fe, ce, me, ge) {
        if (typeof X != "function")
          return new E("Property `" + ge + "` of component `" + ce + "` has invalid PropType notation inside arrayOf.");
        var de = ie[fe];
        if (!Array.isArray(de)) {
          var pe = W(de);
          return new E("Invalid " + me + " `" + ge + "` of type " + ("`" + pe + "` supplied to `" + ce + "`, expected an array."));
        }
        for (var be = 0; be < de.length; be++) {
          var Ce = X(de, be, ce, me, ge + "[" + be + "]", n);
          if (Ce instanceof Error)
            return Ce;
        }
        return null;
      }
      return k(j);
    }
    function P() {
      function X(j, ie, fe, ce, me) {
        var ge = j[ie];
        if (!p(ge)) {
          var de = W(ge);
          return new E("Invalid " + ce + " `" + me + "` of type " + ("`" + de + "` supplied to `" + fe + "`, expected a single ReactElement."));
        }
        return null;
      }
      return k(X);
    }
    function D() {
      function X(j, ie, fe, ce, me) {
        var ge = j[ie];
        if (!e.isValidElementType(ge)) {
          var de = W(ge);
          return new E("Invalid " + ce + " `" + me + "` of type " + ("`" + de + "` supplied to `" + fe + "`, expected a single ReactElement type."));
        }
        return null;
      }
      return k(X);
    }
    function z(X) {
      function j(ie, fe, ce, me, ge) {
        if (!(ie[fe] instanceof X)) {
          var de = X.name || w, pe = re(ie[fe]);
          return new E("Invalid " + me + " `" + ge + "` of type " + ("`" + pe + "` supplied to `" + ce + "`, expected ") + ("instance of `" + de + "`."));
        }
        return null;
      }
      return k(j);
    }
    function K(X) {
      if (!Array.isArray(X))
        return process.env.NODE_ENV !== "production" && (arguments.length > 1 ? u(
          "Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z])."
        ) : u("Invalid argument supplied to oneOf, expected an array.")), d;
      function j(ie, fe, ce, me, ge) {
        for (var de = ie[fe], pe = 0; pe < X.length; pe++)
          if (O(de, X[pe]))
            return null;
        var be = JSON.stringify(X, function(Re, ue) {
          var we = q(ue);
          return we === "symbol" ? String(ue) : ue;
        });
        return new E("Invalid " + me + " `" + ge + "` of value `" + String(de) + "` " + ("supplied to `" + ce + "`, expected one of " + be + "."));
      }
      return k(j);
    }
    function Q(X) {
      function j(ie, fe, ce, me, ge) {
        if (typeof X != "function")
          return new E("Property `" + ge + "` of component `" + ce + "` has invalid PropType notation inside objectOf.");
        var de = ie[fe], pe = W(de);
        if (pe !== "object")
          return new E("Invalid " + me + " `" + ge + "` of type " + ("`" + pe + "` supplied to `" + ce + "`, expected an object."));
        for (var be in de)
          if (i(de, be)) {
            var Ce = X(de, be, ce, me, ge + "." + be, n);
            if (Ce instanceof Error)
              return Ce;
          }
        return null;
      }
      return k(j);
    }
    function H(X) {
      if (!Array.isArray(X))
        return process.env.NODE_ENV !== "production" && u("Invalid argument supplied to oneOfType, expected an instance of array."), d;
      for (var j = 0; j < X.length; j++) {
        var ie = X[j];
        if (typeof ie != "function")
          return u(
            "Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + ne(ie) + " at index " + j + "."
          ), d;
      }
      function fe(ce, me, ge, de, pe) {
        for (var be = [], Ce = 0; Ce < X.length; Ce++) {
          var Re = X[Ce], ue = Re(ce, me, ge, de, pe, n);
          if (ue == null)
            return null;
          ue.data && i(ue.data, "expectedType") && be.push(ue.data.expectedType);
        }
        var we = be.length > 0 ? ", expected one of type [" + be.join(", ") + "]" : "";
        return new E("Invalid " + de + " `" + pe + "` supplied to " + ("`" + ge + "`" + we + "."));
      }
      return k(fe);
    }
    function I() {
      function X(j, ie, fe, ce, me) {
        return te(j[ie]) ? null : new E("Invalid " + ce + " `" + me + "` supplied to " + ("`" + fe + "`, expected a ReactNode."));
      }
      return k(X);
    }
    function U(X, j, ie, fe, ce) {
      return new E(
        (X || "React class") + ": " + j + " type `" + ie + "." + fe + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + ce + "`."
      );
    }
    function G(X) {
      function j(ie, fe, ce, me, ge) {
        var de = ie[fe], pe = W(de);
        if (pe !== "object")
          return new E("Invalid " + me + " `" + ge + "` of type `" + pe + "` " + ("supplied to `" + ce + "`, expected `object`."));
        for (var be in X) {
          var Ce = X[be];
          if (typeof Ce != "function")
            return U(ce, me, ge, be, q(Ce));
          var Re = Ce(de, be, ce, me, ge + "." + be, n);
          if (Re)
            return Re;
        }
        return null;
      }
      return k(j);
    }
    function Y(X) {
      function j(ie, fe, ce, me, ge) {
        var de = ie[fe], pe = W(de);
        if (pe !== "object")
          return new E("Invalid " + me + " `" + ge + "` of type `" + pe + "` " + ("supplied to `" + ce + "`, expected `object`."));
        var be = t({}, ie[fe], X);
        for (var Ce in be) {
          var Re = X[Ce];
          if (i(X, Ce) && typeof Re != "function")
            return U(ce, me, ge, Ce, q(Re));
          if (!Re)
            return new E(
              "Invalid " + me + " `" + ge + "` key `" + Ce + "` supplied to `" + ce + "`.\nBad object: " + JSON.stringify(ie[fe], null, "  ") + `
Valid keys: ` + JSON.stringify(Object.keys(X), null, "  ")
            );
          var ue = Re(de, Ce, ce, me, ge + "." + Ce, n);
          if (ue)
            return ue;
        }
        return null;
      }
      return k(j);
    }
    function te(X) {
      switch (typeof X) {
        case "number":
        case "string":
        case "undefined":
          return !0;
        case "boolean":
          return !X;
        case "object":
          if (Array.isArray(X))
            return X.every(te);
          if (X === null || p(X))
            return !0;
          var j = C(X);
          if (j) {
            var ie = j.call(X), fe;
            if (j !== X.entries) {
              for (; !(fe = ie.next()).done; )
                if (!te(fe.value))
                  return !1;
            } else
              for (; !(fe = ie.next()).done; ) {
                var ce = fe.value;
                if (ce && !te(ce[1]))
                  return !1;
              }
          } else
            return !1;
          return !0;
        default:
          return !1;
      }
    }
    function B(X, j) {
      return X === "symbol" ? !0 : j ? j["@@toStringTag"] === "Symbol" || typeof Symbol == "function" && j instanceof Symbol : !1;
    }
    function W(X) {
      var j = typeof X;
      return Array.isArray(X) ? "array" : X instanceof RegExp ? "object" : B(j, X) ? "symbol" : j;
    }
    function q(X) {
      if (typeof X > "u" || X === null)
        return "" + X;
      var j = W(X);
      if (j === "object") {
        if (X instanceof Date)
          return "date";
        if (X instanceof RegExp)
          return "regexp";
      }
      return j;
    }
    function ne(X) {
      var j = q(X);
      switch (j) {
        case "array":
        case "object":
          return "an " + j;
        case "boolean":
        case "date":
        case "regexp":
          return "a " + j;
        default:
          return j;
      }
    }
    function re(X) {
      return !X.constructor || !X.constructor.name ? w : X.constructor.name;
    }
    return R.checkPropTypes = s, R.resetWarningCache = s.resetWarningCache, R.PropTypes = R, R;
  }, vO;
}
var yO, jL;
function jW() {
  if (jL) return yO;
  jL = 1;
  var e = sP();
  function t() {
  }
  function n() {
  }
  return n.resetWarningCache = t, yO = function() {
    function i(d, p, m, v, y, C) {
      if (C !== e) {
        var w = new Error(
          "Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types"
        );
        throw w.name = "Invariant Violation", w;
      }
    }
    i.isRequired = i;
    function s() {
      return i;
    }
    var u = {
      array: i,
      bigint: i,
      bool: i,
      func: i,
      number: i,
      object: i,
      string: i,
      symbol: i,
      any: i,
      arrayOf: s,
      element: i,
      elementType: i,
      instanceOf: s,
      node: i,
      objectOf: s,
      oneOf: s,
      oneOfType: s,
      shape: s,
      exact: s,
      checkPropTypes: n,
      resetWarningCache: t
    };
    return u.PropTypes = u, u;
  }, yO;
}
if (process.env.NODE_ENV !== "production") {
  var zW = E$(), HW = !0;
  lk.exports = $W()(zW.isElement, HW);
} else
  lk.exports = jW()();
var VW = lk.exports;
const a = /* @__PURE__ */ Jk(VW);
function BW(e) {
  return e == null || Object.keys(e).length === 0;
}
function lP(e) {
  const {
    styles: t,
    defaultTheme: n = {}
  } = e, i = typeof t == "function" ? (s) => t(BW(s) ? n : s) : t;
  return /* @__PURE__ */ A.jsx(RW, {
    styles: i
  });
}
process.env.NODE_ENV !== "production" && (lP.propTypes = {
  defaultTheme: a.object,
  styles: a.oneOfType([a.array, a.string, a.object, a.func])
});
/**
 * @mui/styled-engine v6.5.0
 *
 * @license MIT
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function R$(e, t) {
  const n = sk(e, t);
  return process.env.NODE_ENV !== "production" ? (...i) => {
    const s = typeof e == "string" ? `"${e}"` : "component";
    return i.length === 0 ? console.error([`MUI: Seems like you called \`styled(${s})()\` without a \`style\` argument.`, 'You must provide a `styles` argument: `styled("div")(styleYouForgotToPass)`.'].join(`
`)) : i.some((u) => u === void 0) && console.error(`MUI: the styled(${s})(...args) API requires all its args to be defined.`), n(...i);
  } : n;
}
function UW(e, t) {
  Array.isArray(e.__emotion_styles) && (e.__emotion_styles = t(e.__emotion_styles));
}
const zL = [];
function ff(e) {
  return zL[0] = e, xC(zL);
}
var uk = { exports: {} }, zr = {};
/**
 * @license React
 * react-is.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var HL;
function GW() {
  if (HL) return zr;
  HL = 1;
  var e = Symbol.for("react.transitional.element"), t = Symbol.for("react.portal"), n = Symbol.for("react.fragment"), i = Symbol.for("react.strict_mode"), s = Symbol.for("react.profiler"), u = Symbol.for("react.consumer"), d = Symbol.for("react.context"), p = Symbol.for("react.forward_ref"), m = Symbol.for("react.suspense"), v = Symbol.for("react.suspense_list"), y = Symbol.for("react.memo"), C = Symbol.for("react.lazy"), w = Symbol.for("react.view_transition"), R = Symbol.for("react.client.reference");
  function O(E) {
    if (typeof E == "object" && E !== null) {
      var k = E.$$typeof;
      switch (k) {
        case e:
          switch (E = E.type, E) {
            case n:
            case s:
            case i:
            case m:
            case v:
            case w:
              return E;
            default:
              switch (E = E && E.$$typeof, E) {
                case d:
                case p:
                case C:
                case y:
                  return E;
                case u:
                  return E;
                default:
                  return k;
              }
          }
        case t:
          return k;
      }
    }
  }
  return zr.ContextConsumer = u, zr.ContextProvider = d, zr.Element = e, zr.ForwardRef = p, zr.Fragment = n, zr.Lazy = C, zr.Memo = y, zr.Portal = t, zr.Profiler = s, zr.StrictMode = i, zr.Suspense = m, zr.SuspenseList = v, zr.isContextConsumer = function(E) {
    return O(E) === u;
  }, zr.isContextProvider = function(E) {
    return O(E) === d;
  }, zr.isElement = function(E) {
    return typeof E == "object" && E !== null && E.$$typeof === e;
  }, zr.isForwardRef = function(E) {
    return O(E) === p;
  }, zr.isFragment = function(E) {
    return O(E) === n;
  }, zr.isLazy = function(E) {
    return O(E) === C;
  }, zr.isMemo = function(E) {
    return O(E) === y;
  }, zr.isPortal = function(E) {
    return O(E) === t;
  }, zr.isProfiler = function(E) {
    return O(E) === s;
  }, zr.isStrictMode = function(E) {
    return O(E) === i;
  }, zr.isSuspense = function(E) {
    return O(E) === m;
  }, zr.isSuspenseList = function(E) {
    return O(E) === v;
  }, zr.isValidElementType = function(E) {
    return typeof E == "string" || typeof E == "function" || E === n || E === s || E === i || E === m || E === v || typeof E == "object" && E !== null && (E.$$typeof === C || E.$$typeof === y || E.$$typeof === d || E.$$typeof === u || E.$$typeof === p || E.$$typeof === R || E.getModuleId !== void 0);
  }, zr.typeOf = O, zr;
}
var Hr = {};
/**
 * @license React
 * react-is.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var VL;
function WW() {
  return VL || (VL = 1, process.env.NODE_ENV !== "production" && function() {
    function e(E) {
      if (typeof E == "object" && E !== null) {
        var k = E.$$typeof;
        switch (k) {
          case t:
            switch (E = E.type, E) {
              case i:
              case u:
              case s:
              case v:
              case y:
              case R:
                return E;
              default:
                switch (E = E && E.$$typeof, E) {
                  case p:
                  case m:
                  case w:
                  case C:
                    return E;
                  case d:
                    return E;
                  default:
                    return k;
                }
            }
          case n:
            return k;
        }
      }
    }
    var t = Symbol.for("react.transitional.element"), n = Symbol.for("react.portal"), i = Symbol.for("react.fragment"), s = Symbol.for("react.strict_mode"), u = Symbol.for("react.profiler"), d = Symbol.for("react.consumer"), p = Symbol.for("react.context"), m = Symbol.for("react.forward_ref"), v = Symbol.for("react.suspense"), y = Symbol.for("react.suspense_list"), C = Symbol.for("react.memo"), w = Symbol.for("react.lazy"), R = Symbol.for("react.view_transition"), O = Symbol.for("react.client.reference");
    Hr.ContextConsumer = d, Hr.ContextProvider = p, Hr.Element = t, Hr.ForwardRef = m, Hr.Fragment = i, Hr.Lazy = w, Hr.Memo = C, Hr.Portal = n, Hr.Profiler = u, Hr.StrictMode = s, Hr.Suspense = v, Hr.SuspenseList = y, Hr.isContextConsumer = function(E) {
      return e(E) === d;
    }, Hr.isContextProvider = function(E) {
      return e(E) === p;
    }, Hr.isElement = function(E) {
      return typeof E == "object" && E !== null && E.$$typeof === t;
    }, Hr.isForwardRef = function(E) {
      return e(E) === m;
    }, Hr.isFragment = function(E) {
      return e(E) === i;
    }, Hr.isLazy = function(E) {
      return e(E) === w;
    }, Hr.isMemo = function(E) {
      return e(E) === C;
    }, Hr.isPortal = function(E) {
      return e(E) === n;
    }, Hr.isProfiler = function(E) {
      return e(E) === u;
    }, Hr.isStrictMode = function(E) {
      return e(E) === s;
    }, Hr.isSuspense = function(E) {
      return e(E) === v;
    }, Hr.isSuspenseList = function(E) {
      return e(E) === y;
    }, Hr.isValidElementType = function(E) {
      return typeof E == "string" || typeof E == "function" || E === i || E === u || E === s || E === v || E === y || typeof E == "object" && E !== null && (E.$$typeof === w || E.$$typeof === C || E.$$typeof === p || E.$$typeof === d || E.$$typeof === m || E.$$typeof === O || E.getModuleId !== void 0);
    }, Hr.typeOf = e;
  }()), Hr;
}
process.env.NODE_ENV === "production" ? uk.exports = GW() : uk.exports = WW();
var gf = uk.exports;
function Au(e) {
  if (typeof e != "object" || e === null)
    return !1;
  const t = Object.getPrototypeOf(e);
  return (t === null || t === Object.prototype || Object.getPrototypeOf(t) === null) && !(Symbol.toStringTag in e) && !(Symbol.iterator in e);
}
function O$(e) {
  if (/* @__PURE__ */ S.isValidElement(e) || gf.isValidElementType(e) || !Au(e))
    return e;
  const t = {};
  return Object.keys(e).forEach((n) => {
    t[n] = O$(e[n]);
  }), t;
}
function aa(e, t, n = {
  clone: !0
}) {
  const i = n.clone ? {
    ...e
  } : e;
  return Au(e) && Au(t) && Object.keys(t).forEach((s) => {
    /* @__PURE__ */ S.isValidElement(t[s]) || gf.isValidElementType(t[s]) ? i[s] = t[s] : Au(t[s]) && // Avoid prototype pollution
    Object.prototype.hasOwnProperty.call(e, s) && Au(e[s]) ? i[s] = aa(e[s], t[s], n) : n.clone ? i[s] = Au(t[s]) ? O$(t[s]) : t[s] : i[s] = t[s];
  }), i;
}
const qW = (e) => {
  const t = Object.keys(e).map((n) => ({
    key: n,
    val: e[n]
  })) || [];
  return t.sort((n, i) => n.val - i.val), t.reduce((n, i) => ({
    ...n,
    [i.key]: i.val
  }), {});
};
function KW(e) {
  const {
    // The breakpoint **start** at this value.
    // For instance with the first breakpoint xs: [xs, sm).
    values: t = {
      xs: 0,
      // phone
      sm: 600,
      // tablet
      md: 900,
      // small laptop
      lg: 1200,
      // desktop
      xl: 1536
      // large screen
    },
    unit: n = "px",
    step: i = 5,
    ...s
  } = e, u = qW(t), d = Object.keys(u);
  function p(w) {
    return `@media (min-width:${typeof t[w] == "number" ? t[w] : w}${n})`;
  }
  function m(w) {
    return `@media (max-width:${(typeof t[w] == "number" ? t[w] : w) - i / 100}${n})`;
  }
  function v(w, R) {
    const O = d.indexOf(R);
    return `@media (min-width:${typeof t[w] == "number" ? t[w] : w}${n}) and (max-width:${(O !== -1 && typeof t[d[O]] == "number" ? t[d[O]] : R) - i / 100}${n})`;
  }
  function y(w) {
    return d.indexOf(w) + 1 < d.length ? v(w, d[d.indexOf(w) + 1]) : p(w);
  }
  function C(w) {
    const R = d.indexOf(w);
    return R === 0 ? p(d[1]) : R === d.length - 1 ? m(d[R]) : v(w, d[d.indexOf(w) + 1]).replace("@media", "@media not all and");
  }
  return {
    keys: d,
    values: u,
    up: p,
    down: m,
    between: v,
    only: y,
    not: C,
    unit: n,
    ...s
  };
}
function BL(e, t) {
  if (!e.containerQueries)
    return t;
  const n = Object.keys(t).filter((i) => i.startsWith("@container")).sort((i, s) => {
    var d, p;
    const u = /min-width:\s*([0-9.]+)/;
    return +(((d = i.match(u)) == null ? void 0 : d[1]) || 0) - +(((p = s.match(u)) == null ? void 0 : p[1]) || 0);
  });
  return n.length ? n.reduce((i, s) => {
    const u = t[s];
    return delete i[s], i[s] = u, i;
  }, {
    ...t
  }) : t;
}
function YW(e, t) {
  return t === "@" || t.startsWith("@") && (e.some((n) => t.startsWith(`@${n}`)) || !!t.match(/^@\d/));
}
function XW(e, t) {
  const n = t.match(/^@([^/]+)?\/?(.+)?$/);
  if (!n) {
    if (process.env.NODE_ENV !== "production")
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The provided shorthand ${`(${t})`} is invalid. The format should be \`@<breakpoint | number>\` or \`@<breakpoint | number>/<container>\`.
For example, \`@sm\` or \`@600\` or \`@40rem/sidebar\`.` : Bu(18, `(${t})`));
    return null;
  }
  const [, i, s] = n, u = Number.isNaN(+i) ? i || 0 : +i;
  return e.containerQueries(s).up(u);
}
function QW(e) {
  const t = (u, d) => u.replace("@media", d ? `@container ${d}` : "@container");
  function n(u, d) {
    u.up = (...p) => t(e.breakpoints.up(...p), d), u.down = (...p) => t(e.breakpoints.down(...p), d), u.between = (...p) => t(e.breakpoints.between(...p), d), u.only = (...p) => t(e.breakpoints.only(...p), d), u.not = (...p) => {
      const m = t(e.breakpoints.not(...p), d);
      return m.includes("not all and") ? m.replace("not all and ", "").replace("min-width:", "width<").replace("max-width:", "width>").replace("and", "or") : m;
    };
  }
  const i = {}, s = (u) => (n(i, u), i);
  return n(s), {
    ...e,
    containerQueries: s
  };
}
const JW = {
  borderRadius: 4
}, xf = process.env.NODE_ENV !== "production" ? a.oneOfType([a.number, a.string, a.object, a.array]) : {};
function Bb(e, t) {
  return t ? aa(e, t, {
    clone: !1
    // No need to clone deep, it's way faster.
  }) : e;
}
const lE = {
  xs: 0,
  // phone
  sm: 600,
  // tablet
  md: 900,
  // small laptop
  lg: 1200,
  // desktop
  xl: 1536
  // large screen
}, UL = {
  // Sorted ASC by size. That's important.
  // It can't be configured as it's used statically for propTypes.
  keys: ["xs", "sm", "md", "lg", "xl"],
  up: (e) => `@media (min-width:${lE[e]}px)`
}, ZW = {
  containerQueries: (e) => ({
    up: (t) => {
      let n = typeof t == "number" ? t : lE[t] || t;
      return typeof n == "number" && (n = `${n}px`), e ? `@container ${e} (min-width:${n})` : `@container (min-width:${n})`;
    }
  })
};
function qc(e, t, n) {
  const i = e.theme || {};
  if (Array.isArray(t)) {
    const u = i.breakpoints || UL;
    return t.reduce((d, p, m) => (d[u.up(u.keys[m])] = n(t[m]), d), {});
  }
  if (typeof t == "object") {
    const u = i.breakpoints || UL;
    return Object.keys(t).reduce((d, p) => {
      if (YW(u.keys, p)) {
        const m = XW(i.containerQueries ? i : ZW, p);
        m && (d[m] = n(t[p], p));
      } else if (Object.keys(u.values || lE).includes(p)) {
        const m = u.up(p);
        d[m] = n(t[p], p);
      } else {
        const m = p;
        d[m] = t[m];
      }
      return d;
    }, {});
  }
  return n(t);
}
function e6(e = {}) {
  var n;
  return ((n = e.keys) == null ? void 0 : n.reduce((i, s) => {
    const u = e.up(s);
    return i[u] = {}, i;
  }, {})) || {};
}
function GL(e, t) {
  return e.reduce((n, i) => {
    const s = n[i];
    return (!s || Object.keys(s).length === 0) && delete n[i], n;
  }, t);
}
function Be(e) {
  if (typeof e != "string")
    throw new Error(process.env.NODE_ENV !== "production" ? "MUI: `capitalize(string)` expects a string argument." : Bu(7));
  return e.charAt(0).toUpperCase() + e.slice(1);
}
function uE(e, t, n = !0) {
  if (!t || typeof t != "string")
    return null;
  if (e && e.vars && n) {
    const i = `vars.${t}`.split(".").reduce((s, u) => s && s[u] ? s[u] : null, e);
    if (i != null)
      return i;
  }
  return t.split(".").reduce((i, s) => i && i[s] != null ? i[s] : null, e);
}
function x0(e, t, n, i = n) {
  let s;
  return typeof e == "function" ? s = e(n) : Array.isArray(e) ? s = e[n] || i : s = uE(e, n) || i, t && (s = t(s, i, e)), s;
}
function $o(e) {
  const {
    prop: t,
    cssProperty: n = e.prop,
    themeKey: i,
    transform: s
  } = e, u = (d) => {
    if (d[t] == null)
      return null;
    const p = d[t], m = d.theme, v = uE(m, i) || {};
    return qc(d, p, (C) => {
      let w = x0(v, s, C);
      return C === w && typeof C == "string" && (w = x0(v, s, `${t}${C === "default" ? "" : Be(C)}`, C)), n === !1 ? w : {
        [n]: w
      };
    });
  };
  return u.propTypes = process.env.NODE_ENV !== "production" ? {
    [t]: xf
  } : {}, u.filterProps = [t], u;
}
function t6(e) {
  const t = {};
  return (n) => (t[n] === void 0 && (t[n] = e(n)), t[n]);
}
const n6 = {
  m: "margin",
  p: "padding"
}, r6 = {
  t: "Top",
  r: "Right",
  b: "Bottom",
  l: "Left",
  x: ["Left", "Right"],
  y: ["Top", "Bottom"]
}, WL = {
  marginX: "mx",
  marginY: "my",
  paddingX: "px",
  paddingY: "py"
}, o6 = t6((e) => {
  if (e.length > 2)
    if (WL[e])
      e = WL[e];
    else
      return [e];
  const [t, n] = e.split(""), i = n6[t], s = r6[n] || "";
  return Array.isArray(s) ? s.map((u) => i + u) : [i + s];
}), cE = ["m", "mt", "mr", "mb", "ml", "mx", "my", "margin", "marginTop", "marginRight", "marginBottom", "marginLeft", "marginX", "marginY", "marginInline", "marginInlineStart", "marginInlineEnd", "marginBlock", "marginBlockStart", "marginBlockEnd"], dE = ["p", "pt", "pr", "pb", "pl", "px", "py", "padding", "paddingTop", "paddingRight", "paddingBottom", "paddingLeft", "paddingX", "paddingY", "paddingInline", "paddingInlineStart", "paddingInlineEnd", "paddingBlock", "paddingBlockStart", "paddingBlockEnd"], i6 = [...cE, ...dE];
function TC(e, t, n, i) {
  const s = uE(e, t, !0) ?? n;
  return typeof s == "number" || typeof s == "string" ? (u) => typeof u == "string" ? u : (process.env.NODE_ENV !== "production" && typeof u != "number" && console.error(`MUI: Expected ${i} argument to be a number or a string, got ${u}.`), typeof s == "string" ? `calc(${u} * ${s})` : s * u) : Array.isArray(s) ? (u) => {
    if (typeof u == "string")
      return u;
    const d = Math.abs(u);
    process.env.NODE_ENV !== "production" && (Number.isInteger(d) ? d > s.length - 1 && console.error([`MUI: The value provided (${d}) overflows.`, `The supported values are: ${JSON.stringify(s)}.`, `${d} > ${s.length - 1}, you need to add the missing values.`].join(`
`)) : console.error([`MUI: The \`theme.${t}\` array type cannot be combined with non integer values.You should either use an integer value that can be used as index, or define the \`theme.${t}\` as a number.`].join(`
`)));
    const p = s[d];
    return u >= 0 ? p : typeof p == "number" ? -p : `-${p}`;
  } : typeof s == "function" ? s : (process.env.NODE_ENV !== "production" && console.error([`MUI: The \`theme.${t}\` value (${s}) is invalid.`, "It should be a number, an array or a function."].join(`
`)), () => {
  });
}
function uP(e) {
  return TC(e, "spacing", 8, "spacing");
}
function RC(e, t) {
  return typeof t == "string" || t == null ? t : e(t);
}
function a6(e, t) {
  return (n) => e.reduce((i, s) => (i[s] = RC(t, n), i), {});
}
function s6(e, t, n, i) {
  if (!t.includes(n))
    return null;
  const s = o6(n), u = a6(s, i), d = e[n];
  return qc(e, d, u);
}
function k$(e, t) {
  const n = uP(e.theme);
  return Object.keys(e).map((i) => s6(e, t, i, n)).reduce(Bb, {});
}
function To(e) {
  return k$(e, cE);
}
To.propTypes = process.env.NODE_ENV !== "production" ? cE.reduce((e, t) => (e[t] = xf, e), {}) : {};
To.filterProps = cE;
function Ro(e) {
  return k$(e, dE);
}
Ro.propTypes = process.env.NODE_ENV !== "production" ? dE.reduce((e, t) => (e[t] = xf, e), {}) : {};
Ro.filterProps = dE;
process.env.NODE_ENV !== "production" && i6.reduce((e, t) => (e[t] = xf, e), {});
function P$(e = 8, t = uP({
  spacing: e
})) {
  if (e.mui)
    return e;
  const n = (...i) => (process.env.NODE_ENV !== "production" && (i.length <= 4 || console.error(`MUI: Too many arguments provided, expected between 0 and 4, got ${i.length}`)), (i.length === 0 ? [1] : i).map((u) => {
    const d = t(u);
    return typeof d == "number" ? `${d}px` : d;
  }).join(" "));
  return n.mui = !0, n;
}
function fE(...e) {
  const t = e.reduce((i, s) => (s.filterProps.forEach((u) => {
    i[u] = s;
  }), i), {}), n = (i) => Object.keys(i).reduce((s, u) => t[u] ? Bb(s, t[u](i)) : s, {});
  return n.propTypes = process.env.NODE_ENV !== "production" ? e.reduce((i, s) => Object.assign(i, s.propTypes), {}) : {}, n.filterProps = e.reduce((i, s) => i.concat(s.filterProps), []), n;
}
function Xs(e) {
  return typeof e != "number" ? e : `${e}px solid`;
}
function il(e, t) {
  return $o({
    prop: e,
    themeKey: "borders",
    transform: t
  });
}
const l6 = il("border", Xs), u6 = il("borderTop", Xs), c6 = il("borderRight", Xs), d6 = il("borderBottom", Xs), f6 = il("borderLeft", Xs), p6 = il("borderColor"), h6 = il("borderTopColor"), m6 = il("borderRightColor"), g6 = il("borderBottomColor"), v6 = il("borderLeftColor"), y6 = il("outline", Xs), b6 = il("outlineColor"), pE = (e) => {
  if (e.borderRadius !== void 0 && e.borderRadius !== null) {
    const t = TC(e.theme, "shape.borderRadius", 4, "borderRadius"), n = (i) => ({
      borderRadius: RC(t, i)
    });
    return qc(e, e.borderRadius, n);
  }
  return null;
};
pE.propTypes = process.env.NODE_ENV !== "production" ? {
  borderRadius: xf
} : {};
pE.filterProps = ["borderRadius"];
fE(l6, u6, c6, d6, f6, p6, h6, m6, g6, v6, pE, y6, b6);
const hE = (e) => {
  if (e.gap !== void 0 && e.gap !== null) {
    const t = TC(e.theme, "spacing", 8, "gap"), n = (i) => ({
      gap: RC(t, i)
    });
    return qc(e, e.gap, n);
  }
  return null;
};
hE.propTypes = process.env.NODE_ENV !== "production" ? {
  gap: xf
} : {};
hE.filterProps = ["gap"];
const mE = (e) => {
  if (e.columnGap !== void 0 && e.columnGap !== null) {
    const t = TC(e.theme, "spacing", 8, "columnGap"), n = (i) => ({
      columnGap: RC(t, i)
    });
    return qc(e, e.columnGap, n);
  }
  return null;
};
mE.propTypes = process.env.NODE_ENV !== "production" ? {
  columnGap: xf
} : {};
mE.filterProps = ["columnGap"];
const gE = (e) => {
  if (e.rowGap !== void 0 && e.rowGap !== null) {
    const t = TC(e.theme, "spacing", 8, "rowGap"), n = (i) => ({
      rowGap: RC(t, i)
    });
    return qc(e, e.rowGap, n);
  }
  return null;
};
gE.propTypes = process.env.NODE_ENV !== "production" ? {
  rowGap: xf
} : {};
gE.filterProps = ["rowGap"];
const C6 = $o({
  prop: "gridColumn"
}), S6 = $o({
  prop: "gridRow"
}), w6 = $o({
  prop: "gridAutoFlow"
}), x6 = $o({
  prop: "gridAutoColumns"
}), E6 = $o({
  prop: "gridAutoRows"
}), T6 = $o({
  prop: "gridTemplateColumns"
}), R6 = $o({
  prop: "gridTemplateRows"
}), O6 = $o({
  prop: "gridTemplateAreas"
}), k6 = $o({
  prop: "gridArea"
});
fE(hE, mE, gE, C6, S6, w6, x6, E6, T6, R6, O6, k6);
function kg(e, t) {
  return t === "grey" ? t : e;
}
const P6 = $o({
  prop: "color",
  themeKey: "palette",
  transform: kg
}), M6 = $o({
  prop: "bgcolor",
  cssProperty: "backgroundColor",
  themeKey: "palette",
  transform: kg
}), I6 = $o({
  prop: "backgroundColor",
  themeKey: "palette",
  transform: kg
});
fE(P6, M6, I6);
function fs(e) {
  return e <= 1 && e !== 0 ? `${e * 100}%` : e;
}
const D6 = $o({
  prop: "width",
  transform: fs
}), cP = (e) => {
  if (e.maxWidth !== void 0 && e.maxWidth !== null) {
    const t = (n) => {
      var s, u, d, p, m;
      const i = ((d = (u = (s = e.theme) == null ? void 0 : s.breakpoints) == null ? void 0 : u.values) == null ? void 0 : d[n]) || lE[n];
      return i ? ((m = (p = e.theme) == null ? void 0 : p.breakpoints) == null ? void 0 : m.unit) !== "px" ? {
        maxWidth: `${i}${e.theme.breakpoints.unit}`
      } : {
        maxWidth: i
      } : {
        maxWidth: fs(n)
      };
    };
    return qc(e, e.maxWidth, t);
  }
  return null;
};
cP.filterProps = ["maxWidth"];
const N6 = $o({
  prop: "minWidth",
  transform: fs
}), L6 = $o({
  prop: "height",
  transform: fs
}), F6 = $o({
  prop: "maxHeight",
  transform: fs
}), _6 = $o({
  prop: "minHeight",
  transform: fs
});
$o({
  prop: "size",
  cssProperty: "width",
  transform: fs
});
$o({
  prop: "size",
  cssProperty: "height",
  transform: fs
});
const A6 = $o({
  prop: "boxSizing"
});
fE(D6, cP, N6, L6, F6, _6, A6);
const OC = {
  // borders
  border: {
    themeKey: "borders",
    transform: Xs
  },
  borderTop: {
    themeKey: "borders",
    transform: Xs
  },
  borderRight: {
    themeKey: "borders",
    transform: Xs
  },
  borderBottom: {
    themeKey: "borders",
    transform: Xs
  },
  borderLeft: {
    themeKey: "borders",
    transform: Xs
  },
  borderColor: {
    themeKey: "palette"
  },
  borderTopColor: {
    themeKey: "palette"
  },
  borderRightColor: {
    themeKey: "palette"
  },
  borderBottomColor: {
    themeKey: "palette"
  },
  borderLeftColor: {
    themeKey: "palette"
  },
  outline: {
    themeKey: "borders",
    transform: Xs
  },
  outlineColor: {
    themeKey: "palette"
  },
  borderRadius: {
    themeKey: "shape.borderRadius",
    style: pE
  },
  // palette
  color: {
    themeKey: "palette",
    transform: kg
  },
  bgcolor: {
    themeKey: "palette",
    cssProperty: "backgroundColor",
    transform: kg
  },
  backgroundColor: {
    themeKey: "palette",
    transform: kg
  },
  // spacing
  p: {
    style: Ro
  },
  pt: {
    style: Ro
  },
  pr: {
    style: Ro
  },
  pb: {
    style: Ro
  },
  pl: {
    style: Ro
  },
  px: {
    style: Ro
  },
  py: {
    style: Ro
  },
  padding: {
    style: Ro
  },
  paddingTop: {
    style: Ro
  },
  paddingRight: {
    style: Ro
  },
  paddingBottom: {
    style: Ro
  },
  paddingLeft: {
    style: Ro
  },
  paddingX: {
    style: Ro
  },
  paddingY: {
    style: Ro
  },
  paddingInline: {
    style: Ro
  },
  paddingInlineStart: {
    style: Ro
  },
  paddingInlineEnd: {
    style: Ro
  },
  paddingBlock: {
    style: Ro
  },
  paddingBlockStart: {
    style: Ro
  },
  paddingBlockEnd: {
    style: Ro
  },
  m: {
    style: To
  },
  mt: {
    style: To
  },
  mr: {
    style: To
  },
  mb: {
    style: To
  },
  ml: {
    style: To
  },
  mx: {
    style: To
  },
  my: {
    style: To
  },
  margin: {
    style: To
  },
  marginTop: {
    style: To
  },
  marginRight: {
    style: To
  },
  marginBottom: {
    style: To
  },
  marginLeft: {
    style: To
  },
  marginX: {
    style: To
  },
  marginY: {
    style: To
  },
  marginInline: {
    style: To
  },
  marginInlineStart: {
    style: To
  },
  marginInlineEnd: {
    style: To
  },
  marginBlock: {
    style: To
  },
  marginBlockStart: {
    style: To
  },
  marginBlockEnd: {
    style: To
  },
  // display
  displayPrint: {
    cssProperty: !1,
    transform: (e) => ({
      "@media print": {
        display: e
      }
    })
  },
  display: {},
  overflow: {},
  textOverflow: {},
  visibility: {},
  whiteSpace: {},
  // flexbox
  flexBasis: {},
  flexDirection: {},
  flexWrap: {},
  justifyContent: {},
  alignItems: {},
  alignContent: {},
  order: {},
  flex: {},
  flexGrow: {},
  flexShrink: {},
  alignSelf: {},
  justifyItems: {},
  justifySelf: {},
  // grid
  gap: {
    style: hE
  },
  rowGap: {
    style: gE
  },
  columnGap: {
    style: mE
  },
  gridColumn: {},
  gridRow: {},
  gridAutoFlow: {},
  gridAutoColumns: {},
  gridAutoRows: {},
  gridTemplateColumns: {},
  gridTemplateRows: {},
  gridTemplateAreas: {},
  gridArea: {},
  // positions
  position: {},
  zIndex: {
    themeKey: "zIndex"
  },
  top: {},
  right: {},
  bottom: {},
  left: {},
  // shadows
  boxShadow: {
    themeKey: "shadows"
  },
  // sizing
  width: {
    transform: fs
  },
  maxWidth: {
    style: cP
  },
  minWidth: {
    transform: fs
  },
  height: {
    transform: fs
  },
  maxHeight: {
    transform: fs
  },
  minHeight: {
    transform: fs
  },
  boxSizing: {},
  // typography
  font: {
    themeKey: "font"
  },
  fontFamily: {
    themeKey: "typography"
  },
  fontSize: {
    themeKey: "typography"
  },
  fontStyle: {
    themeKey: "typography"
  },
  fontWeight: {
    themeKey: "typography"
  },
  letterSpacing: {},
  textTransform: {},
  lineHeight: {},
  textAlign: {},
  typography: {
    cssProperty: !1,
    themeKey: "typography"
  }
};
function $6(...e) {
  const t = e.reduce((i, s) => i.concat(Object.keys(s)), []), n = new Set(t);
  return e.every((i) => n.size === Object.keys(i).length);
}
function j6(e, t) {
  return typeof e == "function" ? e(t) : e;
}
function z6() {
  function e(n, i, s, u) {
    const d = {
      [n]: i,
      theme: s
    }, p = u[n];
    if (!p)
      return {
        [n]: i
      };
    const {
      cssProperty: m = n,
      themeKey: v,
      transform: y,
      style: C
    } = p;
    if (i == null)
      return null;
    if (v === "typography" && i === "inherit")
      return {
        [n]: i
      };
    const w = uE(s, v) || {};
    return C ? C(d) : qc(d, i, (O) => {
      let E = x0(w, y, O);
      return O === E && typeof O == "string" && (E = x0(w, y, `${n}${O === "default" ? "" : Be(O)}`, O)), m === !1 ? E : {
        [m]: E
      };
    });
  }
  function t(n) {
    const {
      sx: i,
      theme: s = {},
      nested: u
    } = n || {};
    if (!i)
      return null;
    const d = s.unstable_sxConfig ?? OC;
    function p(m) {
      let v = m;
      if (typeof m == "function")
        v = m(s);
      else if (typeof m != "object")
        return m;
      if (!v)
        return null;
      const y = e6(s.breakpoints), C = Object.keys(y);
      let w = y;
      return Object.keys(v).forEach((R) => {
        const O = j6(v[R], s);
        if (O != null)
          if (typeof O == "object")
            if (d[R])
              w = Bb(w, e(R, O, s, d));
            else {
              const E = qc({
                theme: s
              }, O, (k) => ({
                [R]: k
              }));
              $6(E, O) ? w[R] = t({
                sx: O,
                theme: s,
                nested: !0
              }) : w = Bb(w, E);
            }
          else
            w = Bb(w, e(R, O, s, d));
      }), !u && s.modularCssLayers ? {
        "@layer sx": BL(s, GL(C, w))
      } : BL(s, GL(C, w));
    }
    return Array.isArray(i) ? i.map(p) : p(i);
  }
  return t;
}
const vf = z6();
vf.filterProps = ["sx"];
function H6(e, t) {
  var i;
  const n = this;
  if (n.vars) {
    if (!((i = n.colorSchemes) != null && i[e]) || typeof n.getColorSchemeSelector != "function")
      return {};
    let s = n.getColorSchemeSelector(e);
    return s === "&" ? t : ((s.includes("data-") || s.includes(".")) && (s = `*:where(${s.replace(/\s*&$/, "")}) &`), {
      [s]: t
    });
  }
  return n.palette.mode === e ? t : {};
}
function vE(e = {}, ...t) {
  const {
    breakpoints: n = {},
    palette: i = {},
    spacing: s,
    shape: u = {},
    ...d
  } = e, p = KW(n), m = P$(s);
  let v = aa({
    breakpoints: p,
    direction: "ltr",
    components: {},
    // Inject component definitions.
    palette: {
      mode: "light",
      ...i
    },
    spacing: m,
    shape: {
      ...JW,
      ...u
    }
  }, d);
  return v = QW(v), v.applyStyles = H6, v = t.reduce((y, C) => aa(y, C), v), v.unstable_sxConfig = {
    ...OC,
    ...d == null ? void 0 : d.unstable_sxConfig
  }, v.unstable_sx = function(C) {
    return vf({
      sx: C,
      theme: this
    });
  }, v;
}
function V6(e) {
  return Object.keys(e).length === 0;
}
function dP(e = null) {
  const t = S.useContext(EC);
  return !t || V6(t) ? e : t;
}
const B6 = vE();
function yE(e = B6) {
  return dP(e);
}
function bO(e) {
  const t = ff(e);
  return e !== t && t.styles ? (t.styles.match(/^@layer\s+[^{]*$/) || (t.styles = `@layer global{${t.styles}}`), t) : e;
}
function fP({
  styles: e,
  themeId: t,
  defaultTheme: n = {}
}) {
  const i = yE(n), s = t && i[t] || i;
  let u = typeof e == "function" ? e(s) : e;
  return s.modularCssLayers && (Array.isArray(u) ? u = u.map((d) => bO(typeof d == "function" ? d(s) : d)) : u = bO(u)), /* @__PURE__ */ A.jsx(lP, {
    styles: u
  });
}
process.env.NODE_ENV !== "production" && (fP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  defaultTheme: a.object,
  /**
   * @ignore
   */
  styles: a.oneOfType([a.array, a.func, a.number, a.object, a.string, a.bool]),
  /**
   * @ignore
   */
  themeId: a.string
});
const U6 = (e) => {
  var i;
  const t = {
    systemProps: {},
    otherProps: {}
  }, n = ((i = e == null ? void 0 : e.theme) == null ? void 0 : i.unstable_sxConfig) ?? OC;
  return Object.keys(e).forEach((s) => {
    n[s] ? t.systemProps[s] = e[s] : t.otherProps[s] = e[s];
  }), t;
};
function M$(e) {
  const {
    sx: t,
    ...n
  } = e, {
    systemProps: i,
    otherProps: s
  } = U6(n);
  let u;
  return Array.isArray(t) ? u = [i, ...t] : typeof t == "function" ? u = (...d) => {
    const p = t(...d);
    return Au(p) ? {
      ...i,
      ...p
    } : i;
  } : u = {
    ...i,
    ...t
  }, {
    ...s,
    sx: u
  };
}
const qL = (e) => e, G6 = () => {
  let e = qL;
  return {
    configure(t) {
      e = t;
    },
    generate(t) {
      return e(t);
    },
    reset() {
      e = qL;
    }
  };
}, I$ = G6();
function D$(e) {
  var t, n, i = "";
  if (typeof e == "string" || typeof e == "number") i += e;
  else if (typeof e == "object") if (Array.isArray(e)) {
    var s = e.length;
    for (t = 0; t < s; t++) e[t] && (n = D$(e[t])) && (i && (i += " "), i += n);
  } else for (n in e) e[n] && (i && (i += " "), i += n);
  return i;
}
function nt() {
  for (var e, t, n = 0, i = "", s = arguments.length; n < s; n++) (e = arguments[n]) && (t = D$(e)) && (i && (i += " "), i += t);
  return i;
}
function W6(e = {}) {
  const {
    themeId: t,
    defaultTheme: n,
    defaultClassName: i = "MuiBox-root",
    generateClassName: s
  } = e, u = R$("div", {
    shouldForwardProp: (p) => p !== "theme" && p !== "sx" && p !== "as"
  })(vf);
  return /* @__PURE__ */ S.forwardRef(function(m, v) {
    const y = yE(n), {
      className: C,
      component: w = "div",
      ...R
    } = M$(m);
    return /* @__PURE__ */ A.jsx(u, {
      as: w,
      ref: v,
      className: nt(C, s ? s(i) : i),
      theme: t && y[t] || y,
      ...R
    });
  });
}
const q6 = {
  active: "active",
  checked: "checked",
  completed: "completed",
  disabled: "disabled",
  error: "error",
  expanded: "expanded",
  focused: "focused",
  focusVisible: "focusVisible",
  open: "open",
  readOnly: "readOnly",
  required: "required",
  selected: "selected"
};
function yn(e, t, n = "Mui") {
  const i = q6[t];
  return i ? `${n}-${i}` : `${I$.generate(e)}-${t}`;
}
function bn(e, t, n = "Mui") {
  const i = {};
  return t.forEach((s) => {
    i[s] = yn(e, s, n);
  }), i;
}
function N$(e, t = "") {
  return e.displayName || e.name || t;
}
function KL(e, t, n) {
  const i = N$(t);
  return e.displayName || (i !== "" ? `${n}(${i})` : n);
}
function K6(e) {
  if (e != null) {
    if (typeof e == "string")
      return e;
    if (typeof e == "function")
      return N$(e, "Component");
    if (typeof e == "object")
      switch (e.$$typeof) {
        case gf.ForwardRef:
          return KL(e, e.render, "ForwardRef");
        case gf.Memo:
          return KL(e, e.type, "memo");
        default:
          return;
      }
  }
}
function L$(e) {
  const {
    variants: t,
    ...n
  } = e, i = {
    variants: t,
    style: ff(n),
    isProcessed: !0
  };
  return i.style === n || t && t.forEach((s) => {
    typeof s.style != "function" && (s.style = ff(s.style));
  }), i;
}
const Y6 = vE();
function CO(e) {
  return e !== "ownerState" && e !== "theme" && e !== "sx" && e !== "as";
}
function Yp(e, t) {
  return t && e && typeof e == "object" && e.styles && !e.styles.startsWith("@layer") && (e.styles = `@layer ${t}{${String(e.styles)}}`), e;
}
function X6(e) {
  return e ? (t, n) => n[e] : null;
}
function Q6(e, t, n) {
  e.theme = eq(e.theme) ? n : e.theme[t] || e.theme;
}
function u0(e, t, n) {
  const i = typeof t == "function" ? t(e) : t;
  if (Array.isArray(i))
    return i.flatMap((s) => u0(e, s, n));
  if (Array.isArray(i == null ? void 0 : i.variants)) {
    let s;
    if (i.isProcessed)
      s = n ? Yp(i.style, n) : i.style;
    else {
      const {
        variants: u,
        ...d
      } = i;
      s = n ? Yp(ff(d), n) : d;
    }
    return F$(e, i.variants, [s], n);
  }
  return i != null && i.isProcessed ? n ? Yp(ff(i.style), n) : i.style : n ? Yp(ff(i), n) : i;
}
function F$(e, t, n = [], i = void 0) {
  var u;
  let s;
  e: for (let d = 0; d < t.length; d += 1) {
    const p = t[d];
    if (typeof p.props == "function") {
      if (s ?? (s = {
        ...e,
        ...e.ownerState,
        ownerState: e.ownerState
      }), !p.props(s))
        continue;
    } else
      for (const m in p.props)
        if (e[m] !== p.props[m] && ((u = e.ownerState) == null ? void 0 : u[m]) !== p.props[m])
          continue e;
    typeof p.style == "function" ? (s ?? (s = {
      ...e,
      ...e.ownerState,
      ownerState: e.ownerState
    }), n.push(i ? Yp(ff(p.style(s)), i) : p.style(s))) : n.push(i ? Yp(ff(p.style), i) : p.style);
  }
  return n;
}
function _$(e = {}) {
  const {
    themeId: t,
    defaultTheme: n = Y6,
    rootShouldForwardProp: i = CO,
    slotShouldForwardProp: s = CO
  } = e;
  function u(p) {
    Q6(p, t, n);
  }
  return (p, m = {}) => {
    UW(p, (z) => z.filter((K) => K !== vf));
    const {
      name: v,
      slot: y,
      skipVariantsResolver: C,
      skipSx: w,
      // TODO v6: remove `lowercaseFirstLetter()` in the next major release
      // For more details: https://github.com/mui/material-ui/pull/37908
      overridesResolver: R = X6(A$(y)),
      ...O
    } = m, E = v && v.startsWith("Mui") || y ? "components" : "custom", k = C !== void 0 ? C : (
      // TODO v6: remove `Root` in the next major release
      // For more details: https://github.com/mui/material-ui/pull/37908
      y && y !== "Root" && y !== "root" || !1
    ), L = w || !1;
    let F = CO;
    y === "Root" || y === "root" ? F = i : y ? F = s : tq(p) && (F = void 0);
    const _ = R$(p, {
      shouldForwardProp: F,
      label: Z6(v, y),
      ...O
    }), P = (z) => {
      if (z.__emotion_real === z)
        return z;
      if (typeof z == "function")
        return function(Q) {
          return u0(Q, z, Q.theme.modularCssLayers ? E : void 0);
        };
      if (Au(z)) {
        const K = L$(z);
        return function(H) {
          return K.variants ? u0(H, K, H.theme.modularCssLayers ? E : void 0) : H.theme.modularCssLayers ? Yp(K.style, E) : K.style;
        };
      }
      return z;
    }, D = (...z) => {
      const K = [], Q = z.map(P), H = [];
      if (K.push(u), v && R && H.push(function(Y) {
        var q, ne;
        const B = (ne = (q = Y.theme.components) == null ? void 0 : q[v]) == null ? void 0 : ne.styleOverrides;
        if (!B)
          return null;
        const W = {};
        for (const re in B)
          W[re] = u0(Y, B[re], Y.theme.modularCssLayers ? "theme" : void 0);
        return R(Y, W);
      }), v && !k && H.push(function(Y) {
        var W, q;
        const te = Y.theme, B = (q = (W = te == null ? void 0 : te.components) == null ? void 0 : W[v]) == null ? void 0 : q.variants;
        return B ? F$(Y, B, [], Y.theme.modularCssLayers ? "theme" : void 0) : null;
      }), L || H.push(vf), Array.isArray(Q[0])) {
        const G = Q.shift(), Y = new Array(K.length).fill(""), te = new Array(H.length).fill("");
        let B;
        B = [...Y, ...G, ...te], B.raw = [...Y, ...G.raw, ...te], K.unshift(B);
      }
      const I = [...K, ...Q, ...H], U = _(...I);
      return p.muiName && (U.muiName = p.muiName), process.env.NODE_ENV !== "production" && (U.displayName = J6(v, y, p)), U;
    };
    return _.withConfig && (D.withConfig = _.withConfig), D;
  };
}
function J6(e, t, n) {
  return e ? `${e}${Be(t || "")}` : `Styled(${K6(n)})`;
}
function Z6(e, t) {
  let n;
  return process.env.NODE_ENV !== "production" && e && (n = `${e}-${A$(t || "Root")}`), n;
}
function eq(e) {
  for (const t in e)
    return !1;
  return !0;
}
function tq(e) {
  return typeof e == "string" && // 96 is one less than the char code
  // for "a" so this is checking that
  // it's a lowercase character
  e.charCodeAt(0) > 96;
}
function A$(e) {
  return e && e.charAt(0).toLowerCase() + e.slice(1);
}
const _r = _$();
function zg(e, t) {
  const n = {
    ...t
  };
  for (const i in e)
    if (Object.prototype.hasOwnProperty.call(e, i)) {
      const s = i;
      if (s === "components" || s === "slots")
        n[s] = {
          ...e[s],
          ...n[s]
        };
      else if (s === "componentsProps" || s === "slotProps") {
        const u = e[s], d = t[s];
        if (!d)
          n[s] = u || {};
        else if (!u)
          n[s] = d;
        else {
          n[s] = {
            ...d
          };
          for (const p in u)
            if (Object.prototype.hasOwnProperty.call(u, p)) {
              const m = p;
              n[s][m] = zg(u[m], d[m]);
            }
        }
      } else n[s] === void 0 && (n[s] = e[s]);
    }
  return n;
}
function $$(e) {
  const {
    theme: t,
    name: n,
    props: i
  } = e;
  return !t || !t.components || !t.components[n] || !t.components[n].defaultProps ? i : zg(t.components[n].defaultProps, i);
}
function nq({
  props: e,
  name: t,
  defaultTheme: n,
  themeId: i
}) {
  let s = yE(n);
  return i && (s = s[i] || s), $$({
    theme: s,
    name: t,
    props: e
  });
}
const Fr = typeof window < "u" ? S.useLayoutEffect : S.useEffect;
function rq(e, t = Number.MIN_SAFE_INTEGER, n = Number.MAX_SAFE_INTEGER) {
  return Math.max(t, Math.min(e, n));
}
function pP(e, t = 0, n = 1) {
  return process.env.NODE_ENV !== "production" && (e < t || e > n) && console.error(`MUI: The value provided ${e} is out of range [${t}, ${n}].`), rq(e, t, n);
}
function oq(e) {
  e = e.slice(1);
  const t = new RegExp(`.{1,${e.length >= 6 ? 2 : 1}}`, "g");
  let n = e.match(t);
  return n && n[0].length === 1 && (n = n.map((i) => i + i)), process.env.NODE_ENV !== "production" && e.length !== e.trim().length && console.error(`MUI: The color: "${e}" is invalid. Make sure the color input doesn't contain leading/trailing space.`), n ? `rgb${n.length === 4 ? "a" : ""}(${n.map((i, s) => s < 3 ? parseInt(i, 16) : Math.round(parseInt(i, 16) / 255 * 1e3) / 1e3).join(", ")})` : "";
}
function Uu(e) {
  if (e.type)
    return e;
  if (e.charAt(0) === "#")
    return Uu(oq(e));
  const t = e.indexOf("("), n = e.substring(0, t);
  if (!["rgb", "rgba", "hsl", "hsla", "color"].includes(n))
    throw new Error(process.env.NODE_ENV !== "production" ? `MUI: Unsupported \`${e}\` color.
The following formats are supported: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().` : Bu(9, e));
  let i = e.substring(t + 1, e.length - 1), s;
  if (n === "color") {
    if (i = i.split(" "), s = i.shift(), i.length === 4 && i[3].charAt(0) === "/" && (i[3] = i[3].slice(1)), !["srgb", "display-p3", "a98-rgb", "prophoto-rgb", "rec-2020"].includes(s))
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: unsupported \`${s}\` color space.
The following color spaces are supported: srgb, display-p3, a98-rgb, prophoto-rgb, rec-2020.` : Bu(10, s));
  } else
    i = i.split(",");
  return i = i.map((u) => parseFloat(u)), {
    type: n,
    values: i,
    colorSpace: s
  };
}
const iq = (e) => {
  const t = Uu(e);
  return t.values.slice(0, 3).map((n, i) => t.type.includes("hsl") && i !== 0 ? `${n}%` : n).join(" ");
}, Fb = (e, t) => {
  try {
    return iq(e);
  } catch {
    return t && process.env.NODE_ENV !== "production" && console.warn(t), e;
  }
};
function kC(e) {
  const {
    type: t,
    colorSpace: n
  } = e;
  let {
    values: i
  } = e;
  return t.includes("rgb") ? i = i.map((s, u) => u < 3 ? parseInt(s, 10) : s) : t.includes("hsl") && (i[1] = `${i[1]}%`, i[2] = `${i[2]}%`), t.includes("color") ? i = `${n} ${i.join(" ")}` : i = `${i.join(", ")}`, `${t}(${i})`;
}
function j$(e) {
  e = Uu(e);
  const {
    values: t
  } = e, n = t[0], i = t[1] / 100, s = t[2] / 100, u = i * Math.min(s, 1 - s), d = (v, y = (v + n / 30) % 12) => s - u * Math.max(Math.min(y - 3, 9 - y, 1), -1);
  let p = "rgb";
  const m = [Math.round(d(0) * 255), Math.round(d(8) * 255), Math.round(d(4) * 255)];
  return e.type === "hsla" && (p += "a", m.push(t[3])), kC({
    type: p,
    values: m
  });
}
function ck(e) {
  e = Uu(e);
  let t = e.type === "hsl" || e.type === "hsla" ? Uu(j$(e)).values : e.values;
  return t = t.map((n) => (e.type !== "color" && (n /= 255), n <= 0.03928 ? n / 12.92 : ((n + 0.055) / 1.055) ** 2.4)), Number((0.2126 * t[0] + 0.7152 * t[1] + 0.0722 * t[2]).toFixed(3));
}
function YL(e, t) {
  const n = ck(e), i = ck(t);
  return (Math.max(n, i) + 0.05) / (Math.min(n, i) + 0.05);
}
function $n(e, t) {
  return e = Uu(e), t = pP(t), (e.type === "rgb" || e.type === "hsl") && (e.type += "a"), e.type === "color" ? e.values[3] = `/${t}` : e.values[3] = t, kC(e);
}
function Wx(e, t, n) {
  try {
    return $n(e, t);
  } catch {
    return e;
  }
}
function yf(e, t) {
  if (e = Uu(e), t = pP(t), e.type.includes("hsl"))
    e.values[2] *= 1 - t;
  else if (e.type.includes("rgb") || e.type.includes("color"))
    for (let n = 0; n < 3; n += 1)
      e.values[n] *= 1 - t;
  return kC(e);
}
function Gr(e, t, n) {
  try {
    return yf(e, t);
  } catch {
    return e;
  }
}
function bf(e, t) {
  if (e = Uu(e), t = pP(t), e.type.includes("hsl"))
    e.values[2] += (100 - e.values[2]) * t;
  else if (e.type.includes("rgb"))
    for (let n = 0; n < 3; n += 1)
      e.values[n] += (255 - e.values[n]) * t;
  else if (e.type.includes("color"))
    for (let n = 0; n < 3; n += 1)
      e.values[n] += (1 - e.values[n]) * t;
  return kC(e);
}
function Wr(e, t, n) {
  try {
    return bf(e, t);
  } catch {
    return e;
  }
}
function aq(e, t = 0.15) {
  return ck(e) > 0.5 ? yf(e, t) : bf(e, t);
}
function qx(e, t, n) {
  try {
    return aq(e, t);
  } catch {
    return e;
  }
}
function Bl(e, t) {
  return process.env.NODE_ENV === "production" ? () => null : function(...i) {
    return e(...i) || t(...i);
  };
}
function sq(e) {
  const {
    prototype: t = {}
  } = e;
  return !!t.isReactComponent;
}
function z$(e, t, n, i, s) {
  const u = e[t], d = s || t;
  if (u == null || // When server-side rendering React doesn't warn either.
  // This is not an accurate check for SSR.
  // This is only in place for Emotion compat.
  // TODO: Revisit once https://github.com/facebook/react/issues/20047 is resolved.
  typeof window > "u")
    return null;
  let p;
  const m = u.type;
  return typeof m == "function" && !sq(m) && (p = "Did you accidentally use a plain function component for an element instead?"), p !== void 0 ? new Error(`Invalid ${i} \`${d}\` supplied to \`${n}\`. Expected an element that can hold a ref. ${p} For more information see https://mui.com/r/caveat-with-refs-guide`) : null;
}
const hh = Bl(a.element, z$);
hh.isRequired = Bl(a.element.isRequired, z$);
function lq(e) {
  const {
    prototype: t = {}
  } = e;
  return !!t.isReactComponent;
}
function uq(e, t, n, i, s) {
  const u = e[t], d = s || t;
  if (u == null || // When server-side rendering React doesn't warn either.
  // This is not an accurate check for SSR.
  // This is only in place for emotion compat.
  // TODO: Revisit once https://github.com/facebook/react/issues/20047 is resolved.
  typeof window > "u")
    return null;
  let p;
  return typeof u == "function" && !lq(u) && (p = "Did you accidentally provide a plain function component instead?"), p !== void 0 ? new Error(`Invalid ${i} \`${d}\` supplied to \`${n}\`. Expected an element type that can hold a ref. ${p} For more information see https://mui.com/r/caveat-with-refs-guide`) : null;
}
const hP = Bl(a.elementType, uq), cq = "exact-prop: ​";
function PC(e) {
  return process.env.NODE_ENV === "production" ? e : {
    ...e,
    [cq]: (t) => {
      const n = Object.keys(t).filter((i) => !e.hasOwnProperty(i));
      return n.length > 0 ? new Error(`The following props are not supported: ${n.map((i) => `\`${i}\``).join(", ")}. Please remove them.`) : null;
    }
  };
}
function Ul(e, t, n, i, s) {
  if (process.env.NODE_ENV === "production")
    return null;
  const u = e[t], d = s || t;
  return u == null ? null : u && u.nodeType !== 1 ? new Error(`Invalid ${i} \`${d}\` supplied to \`${n}\`. Expected an HTMLElement.`) : null;
}
const Ea = a.oneOfType([a.func, a.object]);
function XL(...e) {
  return e.reduce((t, n) => n == null ? t : function(...s) {
    t.apply(this, s), n.apply(this, s);
  }, () => {
  });
}
function bE(e, t = 166) {
  let n;
  function i(...s) {
    const u = () => {
      e.apply(this, s);
    };
    clearTimeout(n), n = setTimeout(u, t);
  }
  return i.clear = () => {
    clearTimeout(n);
  }, i;
}
function SO(e, t) {
  var n, i, s;
  return /* @__PURE__ */ S.isValidElement(e) && t.indexOf(
    // For server components `muiName` is avaialble in element.type._payload.value.muiName
    // relevant info - https://github.com/facebook/react/blob/2807d781a08db8e9873687fccc25c0f12b4fb3d4/packages/react/src/ReactLazy.js#L45
    // eslint-disable-next-line no-underscore-dangle
    e.type.muiName ?? ((s = (i = (n = e.type) == null ? void 0 : n._payload) == null ? void 0 : i.value) == null ? void 0 : s.muiName)
  ) !== -1;
}
function ao(e) {
  return e && e.ownerDocument || document;
}
function nl(e) {
  return ao(e).defaultView || window;
}
function dk(e, t) {
  typeof e == "function" ? e(t) : e && (e.current = t);
}
let QL = 0;
function dq(e) {
  const [t, n] = S.useState(e), i = e || t;
  return S.useEffect(() => {
    t == null && (QL += 1, n(`mui-${QL}`));
  }, [t]), i;
}
const fq = {
  ...b0
}, JL = fq.useId;
function Sr(e) {
  if (JL !== void 0) {
    const t = JL();
    return e ?? t;
  }
  return dq(e);
}
function H$(e, t, n, i, s) {
  if (process.env.NODE_ENV === "production")
    return null;
  const u = s || t;
  return typeof e[t] < "u" ? new Error(`The prop \`${u}\` is not supported. Please remove it.`) : null;
}
function oh({
  controlled: e,
  default: t,
  name: n,
  state: i = "value"
}) {
  const {
    current: s
  } = S.useRef(e !== void 0), [u, d] = S.useState(t), p = s ? e : u;
  if (process.env.NODE_ENV !== "production") {
    S.useEffect(() => {
      s !== (e !== void 0) && console.error([`MUI: A component is changing the ${s ? "" : "un"}controlled ${i} state of ${n} to be ${s ? "un" : ""}controlled.`, "Elements should not switch from uncontrolled to controlled (or vice versa).", `Decide between using a controlled or uncontrolled ${n} element for the lifetime of the component.`, "The nature of the state is determined during the first render. It's considered controlled if the value is not `undefined`.", "More info: https://fb.me/react-controlled-components"].join(`
`));
    }, [i, n, e]);
    const {
      current: v
    } = S.useRef(t);
    S.useEffect(() => {
      !s && !Object.is(v, t) && console.error([`MUI: A component is changing the default ${i} state of an uncontrolled ${n} after being initialized. To suppress this warning opt to use a controlled ${n}.`].join(`
`));
    }, [JSON.stringify(t)]);
  }
  const m = S.useCallback((v) => {
    s || d(v);
  }, []);
  return [p, m];
}
function Nn(e) {
  const t = S.useRef(e);
  return Fr(() => {
    t.current = e;
  }), S.useRef((...n) => (
    // @ts-expect-error hide `this`
    (0, t.current)(...n)
  )).current;
}
function Vr(...e) {
  const t = S.useRef(void 0), n = S.useCallback((i) => {
    const s = e.map((u) => {
      if (u == null)
        return null;
      if (typeof u == "function") {
        const d = u, p = d(i);
        return typeof p == "function" ? p : () => {
          d(null);
        };
      }
      return u.current = i, () => {
        u.current = null;
      };
    });
    return () => {
      s.forEach((u) => u == null ? void 0 : u());
    };
  }, e);
  return S.useMemo(() => e.every((i) => i == null) ? null : (i) => {
    t.current && (t.current(), t.current = void 0), i != null && (t.current = n(i));
  }, e);
}
const ZL = {};
function al(e, t) {
  const n = S.useRef(ZL);
  return n.current === ZL && (n.current = e(t)), n;
}
const pq = [];
function mP(e) {
  S.useEffect(e, pq);
}
class CE {
  constructor() {
    ku(this, "currentId", null);
    ku(this, "clear", () => {
      this.currentId !== null && (clearTimeout(this.currentId), this.currentId = null);
    });
    ku(this, "disposeEffect", () => this.clear);
  }
  static create() {
    return new CE();
  }
  /**
   * Executes `fn` after `delay`, clearing any previously scheduled call.
   */
  start(t, n) {
    this.clear(), this.currentId = setTimeout(() => {
      this.currentId = null, n();
    }, t);
  }
}
function ps() {
  const e = al(CE.create).current;
  return mP(e.disposeEffect), e;
}
function E0(e) {
  try {
    return e.matches(":focus-visible");
  } catch {
    process.env.NODE_ENV !== "production" && !/jsdom/.test(window.navigator.userAgent) && console.warn(["MUI: The `:focus-visible` pseudo class is not supported in this browser.", "Some components rely on this feature to work properly."].join(`
`));
  }
  return !1;
}
function V$(e = window) {
  const t = e.document.documentElement.clientWidth;
  return e.innerWidth - t;
}
const gP = (e) => {
  const t = S.useRef({});
  return S.useEffect(() => {
    t.current = e;
  }), t.current;
};
function hq(e) {
  const t = typeof e;
  switch (t) {
    case "number":
      return Number.isNaN(e) ? "NaN" : Number.isFinite(e) ? e !== Math.floor(e) ? "float" : "number" : "Infinity";
    case "object":
      return e === null ? "null" : e.constructor.name;
    default:
      return t;
  }
}
function B$(e, t, n, i) {
  const s = e[t];
  if (s == null || !Number.isInteger(s)) {
    const u = hq(s);
    return new RangeError(`Invalid ${i} \`${t}\` of type \`${u}\` supplied to \`${n}\`, expected \`integer\`.`);
  }
  return null;
}
function U$(e, t, ...n) {
  return e[t] === void 0 ? null : B$(e, t, ...n);
}
function fk() {
  return null;
}
U$.isRequired = B$;
fk.isRequired = fk;
const Pg = process.env.NODE_ENV === "production" ? fk : U$;
function yt(e, t, n = void 0) {
  const i = {};
  for (const s in e) {
    const u = e[s];
    let d = "", p = !0;
    for (let m = 0; m < u.length; m += 1) {
      const v = u[m];
      v && (d += (p === !0 ? "" : " ") + t(v), p = !1, n && n[v] && (d += " " + n[v]));
    }
    i[s] = d;
  }
  return i;
}
function mq(e) {
  return typeof e == "string";
}
function G$(e, t, n) {
  return e === void 0 || mq(e) ? t : {
    ...t,
    ownerState: {
      ...t.ownerState,
      ...n
    }
  };
}
function W$(e, t = []) {
  if (e === void 0)
    return {};
  const n = {};
  return Object.keys(e).filter((i) => i.match(/^on[A-Z]/) && typeof e[i] == "function" && !t.includes(i)).forEach((i) => {
    n[i] = e[i];
  }), n;
}
function eF(e) {
  if (e === void 0)
    return {};
  const t = {};
  return Object.keys(e).filter((n) => !(n.match(/^on[A-Z]/) && typeof e[n] == "function")).forEach((n) => {
    t[n] = e[n];
  }), t;
}
function q$(e) {
  const {
    getSlotProps: t,
    additionalProps: n,
    externalSlotProps: i,
    externalForwardedProps: s,
    className: u
  } = e;
  if (!t) {
    const R = nt(n == null ? void 0 : n.className, u, s == null ? void 0 : s.className, i == null ? void 0 : i.className), O = {
      ...n == null ? void 0 : n.style,
      ...s == null ? void 0 : s.style,
      ...i == null ? void 0 : i.style
    }, E = {
      ...n,
      ...s,
      ...i
    };
    return R.length > 0 && (E.className = R), Object.keys(O).length > 0 && (E.style = O), {
      props: E,
      internalRef: void 0
    };
  }
  const d = W$({
    ...s,
    ...i
  }), p = eF(i), m = eF(s), v = t(d), y = nt(v == null ? void 0 : v.className, n == null ? void 0 : n.className, u, s == null ? void 0 : s.className, i == null ? void 0 : i.className), C = {
    ...v == null ? void 0 : v.style,
    ...n == null ? void 0 : n.style,
    ...s == null ? void 0 : s.style,
    ...i == null ? void 0 : i.style
  }, w = {
    ...v,
    ...n,
    ...m,
    ...p
  };
  return y.length > 0 && (w.className = y), Object.keys(C).length > 0 && (w.style = C), {
    props: w,
    internalRef: v.ref
  };
}
function K$(e, t, n) {
  return typeof e == "function" ? e(t, n) : e;
}
function Hg(e) {
  var C;
  const {
    elementType: t,
    externalSlotProps: n,
    ownerState: i,
    skipResolvingSlotProps: s = !1,
    ...u
  } = e, d = s ? {} : K$(n, i), {
    props: p,
    internalRef: m
  } = q$({
    ...u,
    externalSlotProps: d
  }), v = Vr(m, d == null ? void 0 : d.ref, (C = e.additionalProps) == null ? void 0 : C.ref);
  return G$(t, {
    ...p,
    ref: v
  }, i);
}
function mh(e) {
  var t;
  return parseInt(S.version, 10) >= 19 ? ((t = e == null ? void 0 : e.props) == null ? void 0 : t.ref) || null : (e == null ? void 0 : e.ref) || null;
}
const vP = /* @__PURE__ */ S.createContext(null);
process.env.NODE_ENV !== "production" && (vP.displayName = "ThemeContext");
function yP() {
  const e = S.useContext(vP);
  return process.env.NODE_ENV !== "production" && S.useDebugValue(e), e;
}
const gq = typeof Symbol == "function" && Symbol.for, vq = gq ? Symbol.for("mui.nested") : "__THEME_NESTED__";
function yq(e, t) {
  if (typeof t == "function") {
    const n = t(e);
    return process.env.NODE_ENV !== "production" && (n || console.error(["MUI: You should return an object from your theme function, i.e.", "<ThemeProvider theme={() => ({})} />"].join(`
`))), n;
  }
  return {
    ...e,
    ...t
  };
}
function T0(e) {
  const {
    children: t,
    theme: n
  } = e, i = yP();
  process.env.NODE_ENV !== "production" && i === null && typeof n == "function" && console.error(["MUI: You are providing a theme function prop to the ThemeProvider component:", "<ThemeProvider theme={outerTheme => outerTheme} />", "", "However, no outer theme is present.", "Make sure a theme is already injected higher in the React tree or provide a theme object."].join(`
`));
  const s = S.useMemo(() => {
    const u = i === null ? {
      ...n
    } : yq(i, n);
    return u != null && (u[vq] = i !== null), u;
  }, [n, i]);
  return /* @__PURE__ */ A.jsx(vP.Provider, {
    value: s,
    children: t
  });
}
process.env.NODE_ENV !== "production" && (T0.propTypes = {
  /**
   * Your component tree.
   */
  children: a.node,
  /**
   * A theme object. You can provide a function to extend the outer theme.
   */
  theme: a.oneOfType([a.object, a.func]).isRequired
});
process.env.NODE_ENV !== "production" && process.env.NODE_ENV !== "production" && (T0.propTypes = PC(T0.propTypes));
const Y$ = /* @__PURE__ */ S.createContext();
function X$({
  value: e,
  ...t
}) {
  return /* @__PURE__ */ A.jsx(Y$.Provider, {
    value: e ?? !0,
    ...t
  });
}
process.env.NODE_ENV !== "production" && (X$.propTypes = {
  children: a.node,
  value: a.bool
});
const ji = () => S.useContext(Y$) ?? !1, Q$ = /* @__PURE__ */ S.createContext(void 0);
function J$({
  value: e,
  children: t
}) {
  return /* @__PURE__ */ A.jsx(Q$.Provider, {
    value: e,
    children: t
  });
}
process.env.NODE_ENV !== "production" && (J$.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  children: a.node,
  /**
   * @ignore
   */
  value: a.object
});
function bq(e) {
  const {
    theme: t,
    name: n,
    props: i
  } = e;
  if (!t || !t.components || !t.components[n])
    return i;
  const s = t.components[n];
  return s.defaultProps ? zg(s.defaultProps, i) : !s.styleOverrides && !s.variants ? zg(s, i) : i;
}
function Cq({
  props: e,
  name: t
}) {
  const n = S.useContext(Q$);
  return bq({
    props: e,
    name: t,
    theme: {
      components: n
    }
  });
}
function Sq(e) {
  const t = dP(), n = Sr() || "", {
    modularCssLayers: i
  } = e;
  let s = "mui.global, mui.components, mui.theme, mui.custom, mui.sx";
  return !i || t !== null ? s = "" : typeof i == "string" ? s = i.replace(/mui(?!\.)/g, s) : s = `@layer ${s};`, Fr(() => {
    var p, m;
    const u = document.querySelector("head");
    if (!u)
      return;
    const d = u.firstChild;
    if (s) {
      if (d && ((p = d.hasAttribute) != null && p.call(d, "data-mui-layer-order")) && d.getAttribute("data-mui-layer-order") === n)
        return;
      const v = document.createElement("style");
      v.setAttribute("data-mui-layer-order", n), v.textContent = s, u.prepend(v);
    } else
      (m = u.querySelector(`style[data-mui-layer-order="${n}"]`)) == null || m.remove();
  }, [s, n]), s ? /* @__PURE__ */ A.jsx(fP, {
    styles: s
  }) : null;
}
const tF = {};
function nF(e, t, n, i = !1) {
  return S.useMemo(() => {
    const s = e && t[e] || t;
    if (typeof n == "function") {
      const u = n(s), d = e ? {
        ...t,
        [e]: u
      } : u;
      return i ? () => d : d;
    }
    return e ? {
      ...t,
      [e]: n
    } : {
      ...t,
      ...n
    };
  }, [e, t, n, i]);
}
function nC(e) {
  const {
    children: t,
    theme: n,
    themeId: i
  } = e, s = dP(tF), u = yP() || tF;
  process.env.NODE_ENV !== "production" && (s === null && typeof n == "function" || i && s && !s[i] && typeof n == "function") && console.error(["MUI: You are providing a theme function prop to the ThemeProvider component:", "<ThemeProvider theme={outerTheme => outerTheme} />", "", "However, no outer theme is present.", "Make sure a theme is already injected higher in the React tree or provide a theme object."].join(`
`));
  const d = nF(i, s, n), p = nF(i, u, n, !0), m = (i ? d[i] : d).direction === "rtl", v = Sq(d);
  return /* @__PURE__ */ A.jsx(T0, {
    theme: p,
    children: /* @__PURE__ */ A.jsx(EC.Provider, {
      value: d,
      children: /* @__PURE__ */ A.jsx(X$, {
        value: m,
        children: /* @__PURE__ */ A.jsxs(J$, {
          value: i ? d[i].components : d.components,
          children: [v, t]
        })
      })
    })
  });
}
process.env.NODE_ENV !== "production" && (nC.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Your component tree.
   */
  children: a.node,
  /**
   * A theme object. You can provide a function to extend the outer theme.
   */
  theme: a.oneOfType([a.func, a.object]).isRequired,
  /**
   * The design system's unique id for getting the corresponded theme when there are multiple design systems.
   */
  themeId: a.string
});
process.env.NODE_ENV !== "production" && process.env.NODE_ENV !== "production" && (nC.propTypes = PC(nC.propTypes));
const rF = {
  theme: void 0
};
function wq(e) {
  let t, n;
  return function(s) {
    let u = t;
    return (u === void 0 || s.theme !== n) && (rF.theme = s.theme, u = L$(e(rF)), t = u, n = s.theme), u;
  };
}
const bP = "mode", CP = "color-scheme", xq = "data-color-scheme";
function Eq(e) {
  const {
    defaultMode: t = "system",
    defaultLightColorScheme: n = "light",
    defaultDarkColorScheme: i = "dark",
    modeStorageKey: s = bP,
    colorSchemeStorageKey: u = CP,
    attribute: d = xq,
    colorSchemeNode: p = "document.documentElement",
    nonce: m
  } = e || {};
  let v = "", y = d;
  if (d === "class" && (y = ".%s"), d === "data" && (y = "[data-%s]"), y.startsWith(".")) {
    const w = y.substring(1);
    v += `${p}.classList.remove('${w}'.replace('%s', light), '${w}'.replace('%s', dark));
      ${p}.classList.add('${w}'.replace('%s', colorScheme));`;
  }
  const C = y.match(/\[([^\]]+)\]/);
  if (C) {
    const [w, R] = C[1].split("=");
    R || (v += `${p}.removeAttribute('${w}'.replace('%s', light));
      ${p}.removeAttribute('${w}'.replace('%s', dark));`), v += `
      ${p}.setAttribute('${w}'.replace('%s', colorScheme), ${R ? `${R}.replace('%s', colorScheme)` : '""'});`;
  } else
    v += `${p}.setAttribute('${y}', colorScheme);`;
  return /* @__PURE__ */ A.jsx("script", {
    suppressHydrationWarning: !0,
    nonce: typeof window > "u" ? m : "",
    dangerouslySetInnerHTML: {
      __html: `(function() {
try {
  let colorScheme = '';
  const mode = localStorage.getItem('${s}') || '${t}';
  const dark = localStorage.getItem('${u}-dark') || '${i}';
  const light = localStorage.getItem('${u}-light') || '${n}';
  if (mode === 'system') {
    // handle system mode
    const mql = window.matchMedia('(prefers-color-scheme: dark)');
    if (mql.matches) {
      colorScheme = dark
    } else {
      colorScheme = light
    }
  }
  if (mode === 'light') {
    colorScheme = light;
  }
  if (mode === 'dark') {
    colorScheme = dark;
  }
  if (colorScheme) {
    ${v}
  }
} catch(e){}})();`
    }
  }, "mui-color-scheme-init");
}
function Tq() {
}
const Rq = ({
  key: e,
  storageWindow: t
}) => (!t && typeof window < "u" && (t = window), {
  get(n) {
    if (typeof window > "u")
      return;
    if (!t)
      return n;
    let i;
    try {
      i = t.localStorage.getItem(e);
    } catch {
    }
    return i || n;
  },
  set: (n) => {
    if (t)
      try {
        t.localStorage.setItem(e, n);
      } catch {
      }
  },
  subscribe: (n) => {
    if (!t)
      return Tq;
    const i = (s) => {
      const u = s.newValue;
      s.key === e && n(u);
    };
    return t.addEventListener("storage", i), () => {
      t.removeEventListener("storage", i);
    };
  }
});
function wO() {
}
function oF(e) {
  if (typeof window < "u" && typeof window.matchMedia == "function" && e === "system")
    return window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";
}
function Z$(e, t) {
  if (e.mode === "light" || e.mode === "system" && e.systemMode === "light")
    return t("light");
  if (e.mode === "dark" || e.mode === "system" && e.systemMode === "dark")
    return t("dark");
}
function Oq(e) {
  return Z$(e, (t) => {
    if (t === "light")
      return e.lightColorScheme;
    if (t === "dark")
      return e.darkColorScheme;
  });
}
function kq(e) {
  const {
    defaultMode: t = "light",
    defaultLightColorScheme: n,
    defaultDarkColorScheme: i,
    supportedColorSchemes: s = [],
    modeStorageKey: u = bP,
    colorSchemeStorageKey: d = CP,
    storageWindow: p = typeof window > "u" ? void 0 : window,
    storageManager: m = Rq,
    noSsr: v = !1
  } = e, y = s.join(","), C = s.length > 1, w = S.useMemo(() => m == null ? void 0 : m({
    key: u,
    storageWindow: p
  }), [m, u, p]), R = S.useMemo(() => m == null ? void 0 : m({
    key: `${d}-light`,
    storageWindow: p
  }), [m, d, p]), O = S.useMemo(() => m == null ? void 0 : m({
    key: `${d}-dark`,
    storageWindow: p
  }), [m, d, p]), [E, k] = S.useState(() => {
    const Q = (w == null ? void 0 : w.get(t)) || t, H = (R == null ? void 0 : R.get(n)) || n, I = (O == null ? void 0 : O.get(i)) || i;
    return {
      mode: Q,
      systemMode: oF(Q),
      lightColorScheme: H,
      darkColorScheme: I
    };
  }), [L, F] = S.useState(v || !C);
  S.useEffect(() => {
    F(!0);
  }, []);
  const _ = Oq(E), P = S.useCallback((Q) => {
    k((H) => {
      if (Q === H.mode)
        return H;
      const I = Q ?? t;
      return w == null || w.set(I), {
        ...H,
        mode: I,
        systemMode: oF(I)
      };
    });
  }, [w, t]), D = S.useCallback((Q) => {
    Q ? typeof Q == "string" ? Q && !y.includes(Q) ? console.error(`\`${Q}\` does not exist in \`theme.colorSchemes\`.`) : k((H) => {
      const I = {
        ...H
      };
      return Z$(H, (U) => {
        U === "light" && (R == null || R.set(Q), I.lightColorScheme = Q), U === "dark" && (O == null || O.set(Q), I.darkColorScheme = Q);
      }), I;
    }) : k((H) => {
      const I = {
        ...H
      }, U = Q.light === null ? n : Q.light, G = Q.dark === null ? i : Q.dark;
      return U && (y.includes(U) ? (I.lightColorScheme = U, R == null || R.set(U)) : console.error(`\`${U}\` does not exist in \`theme.colorSchemes\`.`)), G && (y.includes(G) ? (I.darkColorScheme = G, O == null || O.set(G)) : console.error(`\`${G}\` does not exist in \`theme.colorSchemes\`.`)), I;
    }) : k((H) => (R == null || R.set(n), O == null || O.set(i), {
      ...H,
      lightColorScheme: n,
      darkColorScheme: i
    }));
  }, [y, R, O, n, i]), z = S.useCallback((Q) => {
    E.mode === "system" && k((H) => {
      const I = Q != null && Q.matches ? "dark" : "light";
      return H.systemMode === I ? H : {
        ...H,
        systemMode: I
      };
    });
  }, [E.mode]), K = S.useRef(z);
  return K.current = z, S.useEffect(() => {
    if (typeof window.matchMedia != "function" || !C)
      return;
    const Q = (...I) => K.current(...I), H = window.matchMedia("(prefers-color-scheme: dark)");
    return H.addListener(Q), Q(H), () => {
      H.removeListener(Q);
    };
  }, [C]), S.useEffect(() => {
    if (C) {
      const Q = (w == null ? void 0 : w.subscribe((U) => {
        (!U || ["light", "dark", "system"].includes(U)) && P(U || t);
      })) || wO, H = (R == null ? void 0 : R.subscribe((U) => {
        (!U || y.match(U)) && D({
          light: U
        });
      })) || wO, I = (O == null ? void 0 : O.subscribe((U) => {
        (!U || y.match(U)) && D({
          dark: U
        });
      })) || wO;
      return () => {
        Q(), H(), I();
      };
    }
  }, [D, P, y, t, p, C, w, R, O]), {
    ...E,
    mode: L ? E.mode : void 0,
    systemMode: L ? E.systemMode : void 0,
    colorScheme: L ? _ : void 0,
    setMode: P,
    setColorScheme: D
  };
}
const Pq = "*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}";
function Mq(e) {
  const {
    themeId: t,
    /**
     * This `theme` object needs to follow a certain structure to
     * be used correctly by the finel `CssVarsProvider`. It should have a
     * `colorSchemes` key with the light and dark (and any other) palette.
     * It should also ideally have a vars object created using `prepareCssVars`.
     */
    theme: n = {},
    modeStorageKey: i = bP,
    colorSchemeStorageKey: s = CP,
    disableTransitionOnChange: u = !1,
    defaultColorScheme: d,
    resolveTheme: p
  } = e, m = {
    allColorSchemes: [],
    colorScheme: void 0,
    darkColorScheme: void 0,
    lightColorScheme: void 0,
    mode: void 0,
    setColorScheme: () => {
    },
    setMode: () => {
    },
    systemMode: void 0
  }, v = /* @__PURE__ */ S.createContext(void 0);
  process.env.NODE_ENV !== "production" && (v.displayName = "ColorSchemeContext");
  const y = () => S.useContext(v) || m, C = {}, w = {};
  function R(L) {
    var ct, Tt, Rt, Lt;
    const {
      children: F,
      theme: _,
      modeStorageKey: P = i,
      colorSchemeStorageKey: D = s,
      disableTransitionOnChange: z = u,
      storageManager: K,
      storageWindow: Q = typeof window > "u" ? void 0 : window,
      documentNode: H = typeof document > "u" ? void 0 : document,
      colorSchemeNode: I = typeof document > "u" ? void 0 : document.documentElement,
      disableNestedContext: U = !1,
      disableStyleSheetGeneration: G = !1,
      defaultMode: Y = "system",
      noSsr: te
    } = L, B = S.useRef(!1), W = yP(), q = S.useContext(v), ne = !!q && !U, re = S.useMemo(() => _ || (typeof n == "function" ? n() : n), [_]), X = re[t], j = X || re, {
      colorSchemes: ie = C,
      components: fe = w,
      cssVarPrefix: ce
    } = j, me = Object.keys(ie).filter((vt) => !!ie[vt]).join(","), ge = S.useMemo(() => me.split(","), [me]), de = typeof d == "string" ? d : d.light, pe = typeof d == "string" ? d : d.dark, be = ie[de] && ie[pe] ? Y : ((Tt = (ct = ie[j.defaultColorScheme]) == null ? void 0 : ct.palette) == null ? void 0 : Tt.mode) || ((Rt = j.palette) == null ? void 0 : Rt.mode), {
      mode: Ce,
      setMode: Re,
      systemMode: ue,
      lightColorScheme: we,
      darkColorScheme: _e,
      colorScheme: He,
      setColorScheme: et
    } = kq({
      supportedColorSchemes: ge,
      defaultLightColorScheme: de,
      defaultDarkColorScheme: pe,
      modeStorageKey: P,
      colorSchemeStorageKey: D,
      defaultMode: be,
      storageManager: K,
      storageWindow: Q,
      noSsr: te
    });
    let Ne = Ce, rt = He;
    ne && (Ne = q.mode, rt = q.colorScheme);
    const it = S.useMemo(() => {
      var Me;
      const vt = rt || j.defaultColorScheme, Qe = ((Me = j.generateThemeVars) == null ? void 0 : Me.call(j)) || j.vars, Oe = {
        ...j,
        components: fe,
        colorSchemes: ie,
        cssVarPrefix: ce,
        vars: Qe
      };
      if (typeof Oe.generateSpacing == "function" && (Oe.spacing = Oe.generateSpacing()), vt) {
        const ht = ie[vt];
        ht && typeof ht == "object" && Object.keys(ht).forEach((xt) => {
          ht[xt] && typeof ht[xt] == "object" ? Oe[xt] = {
            ...Oe[xt],
            ...ht[xt]
          } : Oe[xt] = ht[xt];
        });
      }
      return p ? p(Oe) : Oe;
    }, [j, rt, fe, ie, ce]), wt = j.colorSchemeSelector;
    Fr(() => {
      if (rt && I && wt && wt !== "media") {
        const vt = wt;
        let Qe = wt;
        if (vt === "class" && (Qe = ".%s"), vt === "data" && (Qe = "[data-%s]"), vt != null && vt.startsWith("data-") && !vt.includes("%s") && (Qe = `[${vt}="%s"]`), Qe.startsWith("."))
          I.classList.remove(...ge.map((Oe) => Qe.substring(1).replace("%s", Oe))), I.classList.add(Qe.substring(1).replace("%s", rt));
        else {
          const Oe = Qe.replace("%s", rt).match(/\[([^\]]+)\]/);
          if (Oe) {
            const [Me, ht] = Oe[1].split("=");
            ht || ge.forEach((xt) => {
              I.removeAttribute(Me.replace(rt, xt));
            }), I.setAttribute(Me, ht ? ht.replace(/"|'/g, "") : "");
          } else
            I.setAttribute(Qe, rt);
        }
      }
    }, [rt, wt, I, ge]), S.useEffect(() => {
      let vt;
      if (z && B.current && H) {
        const Qe = H.createElement("style");
        Qe.appendChild(H.createTextNode(Pq)), H.head.appendChild(Qe), window.getComputedStyle(H.body), vt = setTimeout(() => {
          H.head.removeChild(Qe);
        }, 1);
      }
      return () => {
        clearTimeout(vt);
      };
    }, [rt, z, H]), S.useEffect(() => (B.current = !0, () => {
      B.current = !1;
    }), []);
    const gt = S.useMemo(() => ({
      allColorSchemes: ge,
      colorScheme: rt,
      darkColorScheme: _e,
      lightColorScheme: we,
      mode: Ne,
      setColorScheme: et,
      setMode: process.env.NODE_ENV === "production" ? Re : (vt) => {
        it.colorSchemeSelector === "media" && console.error(["MUI: The `setMode` function has no effect if `colorSchemeSelector` is `media` (`media` is the default value).", "To toggle the mode manually, please configure `colorSchemeSelector` to use a class or data attribute.", "To learn more, visit https://mui.com/material-ui/customization/css-theme-variables/configuration/#toggling-dark-mode-manually"].join(`
`)), Re(vt);
      },
      systemMode: ue
    }), [ge, rt, _e, we, Ne, et, Re, ue, it.colorSchemeSelector]);
    let ot = !0;
    (G || j.cssVariables === !1 || ne && (W == null ? void 0 : W.cssVarPrefix) === ce) && (ot = !1);
    const jt = /* @__PURE__ */ A.jsxs(S.Fragment, {
      children: [/* @__PURE__ */ A.jsx(nC, {
        themeId: X ? t : void 0,
        theme: it,
        children: F
      }), ot && /* @__PURE__ */ A.jsx(lP, {
        styles: ((Lt = it.generateStyleSheets) == null ? void 0 : Lt.call(it)) || []
      })]
    });
    return ne ? jt : /* @__PURE__ */ A.jsx(v.Provider, {
      value: gt,
      children: jt
    });
  }
  process.env.NODE_ENV !== "production" && (R.propTypes = {
    /**
     * The component tree.
     */
    children: a.node,
    /**
     * The node used to attach the color-scheme attribute
     */
    colorSchemeNode: a.any,
    /**
     * localStorage key used to store `colorScheme`
     */
    colorSchemeStorageKey: a.string,
    /**
     * The default mode when the storage is empty,
     * require the theme to have `colorSchemes` with light and dark.
     */
    defaultMode: a.string,
    /**
     * If `true`, the provider creates its own context and generate stylesheet as if it is a root `CssVarsProvider`.
     */
    disableNestedContext: a.bool,
    /**
     * If `true`, the style sheet won't be generated.
     *
     * This is useful for controlling nested CssVarsProvider behavior.
     */
    disableStyleSheetGeneration: a.bool,
    /**
     * Disable CSS transitions when switching between modes or color schemes.
     */
    disableTransitionOnChange: a.bool,
    /**
     * The document to attach the attribute to.
     */
    documentNode: a.any,
    /**
     * The key in the local storage used to store current color scheme.
     */
    modeStorageKey: a.string,
    /**
     * If `true`, the mode will be the same value as the storage without an extra rerendering after the hydration.
     * You should use this option in conjuction with `InitColorSchemeScript` component.
     */
    noSsr: a.bool,
    /**
     * The storage manager to be used for storing the mode and color scheme
     * @default using `window.localStorage`
     */
    storageManager: a.func,
    /**
     * The window that attaches the 'storage' event listener.
     * @default window
     */
    storageWindow: a.any,
    /**
     * The calculated theme object that will be passed through context.
     */
    theme: a.object
  });
  const O = typeof d == "string" ? d : d.light, E = typeof d == "string" ? d : d.dark;
  return {
    CssVarsProvider: R,
    useColorScheme: y,
    getInitColorSchemeScript: (L) => Eq({
      colorSchemeStorageKey: s,
      defaultLightColorScheme: O,
      defaultDarkColorScheme: E,
      modeStorageKey: i,
      ...L
    })
  };
}
function Iq(e = "") {
  function t(...i) {
    if (!i.length)
      return "";
    const s = i[0];
    return typeof s == "string" && !s.match(/(#|\(|\)|(-?(\d*\.)?\d+)(px|em|%|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc))|^(-?(\d*\.)?\d+)$|(\d+ \d+ \d+)/) ? `, var(--${e ? `${e}-` : ""}${s}${t(...i.slice(1))})` : `, ${s}`;
  }
  return (i, ...s) => `var(--${e ? `${e}-` : ""}${i}${t(...s)})`;
}
const iF = (e, t, n, i = []) => {
  let s = e;
  t.forEach((u, d) => {
    d === t.length - 1 ? Array.isArray(s) ? s[Number(u)] = n : s && typeof s == "object" && (s[u] = n) : s && typeof s == "object" && (s[u] || (s[u] = i.includes(u) ? [] : {}), s = s[u]);
  });
}, Dq = (e, t, n) => {
  function i(s, u = [], d = []) {
    Object.entries(s).forEach(([p, m]) => {
      (!n || n && !n([...u, p])) && m != null && (typeof m == "object" && Object.keys(m).length > 0 ? i(m, [...u, p], Array.isArray(m) ? [...d, p] : d) : t([...u, p], m, d));
    });
  }
  i(e);
}, Nq = (e, t) => typeof t == "number" ? ["lineHeight", "fontWeight", "opacity", "zIndex"].some((i) => e.includes(i)) || e[e.length - 1].toLowerCase().includes("opacity") ? t : `${t}px` : t;
function xO(e, t) {
  const {
    prefix: n,
    shouldSkipGeneratingVar: i
  } = t || {}, s = {}, u = {}, d = {};
  return Dq(
    e,
    (p, m, v) => {
      if ((typeof m == "string" || typeof m == "number") && (!i || !i(p, m))) {
        const y = `--${n ? `${n}-` : ""}${p.join("-")}`, C = Nq(p, m);
        Object.assign(s, {
          [y]: C
        }), iF(u, p, `var(${y})`, v), iF(d, p, `var(${y}, ${C})`, v);
      }
    },
    (p) => p[0] === "vars"
    // skip 'vars/*' paths
  ), {
    css: s,
    vars: u,
    varsWithDefaults: d
  };
}
function Lq(e, t = {}) {
  const {
    getSelector: n = k,
    disableCssColorScheme: i,
    colorSchemeSelector: s
  } = t, {
    colorSchemes: u = {},
    components: d,
    defaultColorScheme: p = "light",
    ...m
  } = e, {
    vars: v,
    css: y,
    varsWithDefaults: C
  } = xO(m, t);
  let w = C;
  const R = {}, {
    [p]: O,
    ...E
  } = u;
  if (Object.entries(E || {}).forEach(([_, P]) => {
    const {
      vars: D,
      css: z,
      varsWithDefaults: K
    } = xO(P, t);
    w = aa(w, K), R[_] = {
      css: z,
      vars: D
    };
  }), O) {
    const {
      css: _,
      vars: P,
      varsWithDefaults: D
    } = xO(O, t);
    w = aa(w, D), R[p] = {
      css: _,
      vars: P
    };
  }
  function k(_, P) {
    var z, K;
    let D = s;
    if (s === "class" && (D = ".%s"), s === "data" && (D = "[data-%s]"), s != null && s.startsWith("data-") && !s.includes("%s") && (D = `[${s}="%s"]`), _) {
      if (D === "media")
        return e.defaultColorScheme === _ ? ":root" : {
          [`@media (prefers-color-scheme: ${((K = (z = u[_]) == null ? void 0 : z.palette) == null ? void 0 : K.mode) || _})`]: {
            ":root": P
          }
        };
      if (D)
        return e.defaultColorScheme === _ ? `:root, ${D.replace("%s", String(_))}` : D.replace("%s", String(_));
    }
    return ":root";
  }
  return {
    vars: w,
    generateThemeVars: () => {
      let _ = {
        ...v
      };
      return Object.entries(R).forEach(([, {
        vars: P
      }]) => {
        _ = aa(_, P);
      }), _;
    },
    generateStyleSheets: () => {
      var Q, H;
      const _ = [], P = e.defaultColorScheme || "light";
      function D(I, U) {
        Object.keys(U).length && _.push(typeof I == "string" ? {
          [I]: {
            ...U
          }
        } : I);
      }
      D(n(void 0, {
        ...y
      }), y);
      const {
        [P]: z,
        ...K
      } = R;
      if (z) {
        const {
          css: I
        } = z, U = (H = (Q = u[P]) == null ? void 0 : Q.palette) == null ? void 0 : H.mode, G = !i && U ? {
          colorScheme: U,
          ...I
        } : {
          ...I
        };
        D(n(P, {
          ...G
        }), G);
      }
      return Object.entries(K).forEach(([I, {
        css: U
      }]) => {
        var te, B;
        const G = (B = (te = u[I]) == null ? void 0 : te.palette) == null ? void 0 : B.mode, Y = !i && G ? {
          colorScheme: G,
          ...U
        } : {
          ...U
        };
        D(n(I, {
          ...Y
        }), Y);
      }), _;
    }
  };
}
function Fq(e) {
  return function(n) {
    return e === "media" ? (process.env.NODE_ENV !== "production" && n !== "light" && n !== "dark" && console.error(`MUI: @media (prefers-color-scheme) supports only 'light' or 'dark', but receive '${n}'.`), `@media (prefers-color-scheme: ${n})`) : e ? e.startsWith("data-") && !e.includes("%s") ? `[${e}="${n}"] &` : e === "class" ? `.${n} &` : e === "data" ? `[data-${n}] &` : `${e.replace("%s", n)} &` : "&";
  };
}
const _q = vE(), Aq = _r("div", {
  name: "MuiContainer",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[`maxWidth${Be(String(n.maxWidth))}`], n.fixed && t.fixed, n.disableGutters && t.disableGutters];
  }
}), $q = (e) => nq({
  props: e,
  name: "MuiContainer",
  defaultTheme: _q
}), jq = (e, t) => {
  const n = (m) => yn(t, m), {
    classes: i,
    fixed: s,
    disableGutters: u,
    maxWidth: d
  } = e, p = {
    root: ["root", d && `maxWidth${Be(String(d))}`, s && "fixed", u && "disableGutters"]
  };
  return yt(p, n, i);
};
function zq(e = {}) {
  const {
    // This will allow adding custom styled fn (for example for custom sx style function)
    createStyledComponent: t = Aq,
    useThemeProps: n = $q,
    componentName: i = "MuiContainer"
  } = e, s = t(({
    theme: d,
    ownerState: p
  }) => ({
    width: "100%",
    marginLeft: "auto",
    boxSizing: "border-box",
    marginRight: "auto",
    ...!p.disableGutters && {
      paddingLeft: d.spacing(2),
      paddingRight: d.spacing(2),
      // @ts-ignore module augmentation fails if custom breakpoints are used
      [d.breakpoints.up("sm")]: {
        paddingLeft: d.spacing(3),
        paddingRight: d.spacing(3)
      }
    }
  }), ({
    theme: d,
    ownerState: p
  }) => p.fixed && Object.keys(d.breakpoints.values).reduce((m, v) => {
    const y = v, C = d.breakpoints.values[y];
    return C !== 0 && (m[d.breakpoints.up(y)] = {
      maxWidth: `${C}${d.breakpoints.unit}`
    }), m;
  }, {}), ({
    theme: d,
    ownerState: p
  }) => ({
    // @ts-ignore module augmentation fails if custom breakpoints are used
    ...p.maxWidth === "xs" && {
      // @ts-ignore module augmentation fails if custom breakpoints are used
      [d.breakpoints.up("xs")]: {
        // @ts-ignore module augmentation fails if custom breakpoints are used
        maxWidth: Math.max(d.breakpoints.values.xs, 444)
      }
    },
    ...p.maxWidth && // @ts-ignore module augmentation fails if custom breakpoints are used
    p.maxWidth !== "xs" && {
      // @ts-ignore module augmentation fails if custom breakpoints are used
      [d.breakpoints.up(p.maxWidth)]: {
        // @ts-ignore module augmentation fails if custom breakpoints are used
        maxWidth: `${d.breakpoints.values[p.maxWidth]}${d.breakpoints.unit}`
      }
    }
  })), u = /* @__PURE__ */ S.forwardRef(function(p, m) {
    const v = n(p), {
      className: y,
      component: C = "div",
      disableGutters: w = !1,
      fixed: R = !1,
      maxWidth: O = "lg",
      classes: E,
      ...k
    } = v, L = {
      ...v,
      component: C,
      disableGutters: w,
      fixed: R,
      maxWidth: O
    }, F = jq(L, i);
    return (
      // @ts-ignore theme is injected by the styled util
      /* @__PURE__ */ A.jsx(s, {
        as: C,
        ownerState: L,
        className: nt(F.root, y),
        ref: m,
        ...k
      })
    );
  });
  return process.env.NODE_ENV !== "production" && (u.propTypes = {
    children: a.node,
    classes: a.object,
    className: a.string,
    component: a.elementType,
    disableGutters: a.bool,
    fixed: a.bool,
    maxWidth: a.oneOfType([a.oneOf(["xs", "sm", "md", "lg", "xl", !1]), a.string]),
    sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
  }), u;
}
function ej() {
  return {
    // The colors used to style the text.
    text: {
      // The most important text.
      primary: "rgba(0, 0, 0, 0.87)",
      // Secondary text.
      secondary: "rgba(0, 0, 0, 0.6)",
      // Disabled text have even lower visual prominence.
      disabled: "rgba(0, 0, 0, 0.38)"
    },
    // The color used to divide different elements.
    divider: "rgba(0, 0, 0, 0.12)",
    // The background colors used to style the surfaces.
    // Consistency between these values is important.
    background: {
      paper: Jb.white,
      default: Jb.white
    },
    // The colors used to style the action elements.
    action: {
      // The color of an active action like an icon button.
      active: "rgba(0, 0, 0, 0.54)",
      // The color of an hovered action.
      hover: "rgba(0, 0, 0, 0.04)",
      hoverOpacity: 0.04,
      // The color of a selected action.
      selected: "rgba(0, 0, 0, 0.08)",
      selectedOpacity: 0.08,
      // The color of a disabled action.
      disabled: "rgba(0, 0, 0, 0.26)",
      // The background color of a disabled action.
      disabledBackground: "rgba(0, 0, 0, 0.12)",
      disabledOpacity: 0.38,
      focus: "rgba(0, 0, 0, 0.12)",
      focusOpacity: 0.12,
      activatedOpacity: 0.12
    }
  };
}
const Hq = ej();
function tj() {
  return {
    text: {
      primary: Jb.white,
      secondary: "rgba(255, 255, 255, 0.7)",
      disabled: "rgba(255, 255, 255, 0.5)",
      icon: "rgba(255, 255, 255, 0.5)"
    },
    divider: "rgba(255, 255, 255, 0.12)",
    background: {
      paper: "#121212",
      default: "#121212"
    },
    action: {
      active: Jb.white,
      hover: "rgba(255, 255, 255, 0.08)",
      hoverOpacity: 0.08,
      selected: "rgba(255, 255, 255, 0.16)",
      selectedOpacity: 0.16,
      disabled: "rgba(255, 255, 255, 0.3)",
      disabledBackground: "rgba(255, 255, 255, 0.12)",
      disabledOpacity: 0.38,
      focus: "rgba(255, 255, 255, 0.12)",
      focusOpacity: 0.12,
      activatedOpacity: 0.24
    }
  };
}
const aF = tj();
function sF(e, t, n, i) {
  const s = i.light || i, u = i.dark || i * 1.5;
  e[t] || (e.hasOwnProperty(n) ? e[t] = e[n] : t === "light" ? e.light = bf(e.main, s) : t === "dark" && (e.dark = yf(e.main, u)));
}
function Vq(e = "light") {
  return e === "dark" ? {
    main: ag[200],
    light: ag[50],
    dark: ag[400]
  } : {
    main: ag[700],
    light: ag[400],
    dark: ag[800]
  };
}
function Bq(e = "light") {
  return e === "dark" ? {
    main: ig[200],
    light: ig[50],
    dark: ig[400]
  } : {
    main: ig[500],
    light: ig[300],
    dark: ig[700]
  };
}
function Uq(e = "light") {
  return e === "dark" ? {
    main: og[500],
    light: og[300],
    dark: og[700]
  } : {
    main: og[700],
    light: og[400],
    dark: og[800]
  };
}
function Gq(e = "light") {
  return e === "dark" ? {
    main: sg[400],
    light: sg[300],
    dark: sg[700]
  } : {
    main: sg[700],
    light: sg[500],
    dark: sg[900]
  };
}
function Wq(e = "light") {
  return e === "dark" ? {
    main: lg[400],
    light: lg[300],
    dark: lg[700]
  } : {
    main: lg[800],
    light: lg[500],
    dark: lg[900]
  };
}
function qq(e = "light") {
  return e === "dark" ? {
    main: Sb[400],
    light: Sb[300],
    dark: Sb[700]
  } : {
    main: "#ed6c02",
    // closest to orange[800] that pass 3:1.
    light: Sb[500],
    dark: Sb[900]
  };
}
function SP(e) {
  const {
    mode: t = "light",
    contrastThreshold: n = 3,
    tonalOffset: i = 0.2,
    ...s
  } = e, u = e.primary || Vq(t), d = e.secondary || Bq(t), p = e.error || Uq(t), m = e.info || Gq(t), v = e.success || Wq(t), y = e.warning || qq(t);
  function C(E) {
    const k = YL(E, aF.text.primary) >= n ? aF.text.primary : Hq.text.primary;
    if (process.env.NODE_ENV !== "production") {
      const L = YL(E, k);
      L < 3 && console.error([`MUI: The contrast ratio of ${L}:1 for ${k} on ${E}`, "falls below the WCAG recommended absolute minimum contrast ratio of 3:1.", "https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast"].join(`
`));
    }
    return k;
  }
  const w = ({
    color: E,
    name: k,
    mainShade: L = 500,
    lightShade: F = 300,
    darkShade: _ = 700
  }) => {
    if (E = {
      ...E
    }, !E.main && E[L] && (E.main = E[L]), !E.hasOwnProperty("main"))
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The color${k ? ` (${k})` : ""} provided to augmentColor(color) is invalid.
The color object needs to have a \`main\` property or a \`${L}\` property.` : Bu(11, k ? ` (${k})` : "", L));
    if (typeof E.main != "string")
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The color${k ? ` (${k})` : ""} provided to augmentColor(color) is invalid.
\`color.main\` should be a string, but \`${JSON.stringify(E.main)}\` was provided instead.

Did you intend to use one of the following approaches?

import { green } from "@mui/material/colors";

const theme1 = createTheme({ palette: {
  primary: green,
} });

const theme2 = createTheme({ palette: {
  primary: { main: green[500] },
} });` : Bu(12, k ? ` (${k})` : "", JSON.stringify(E.main)));
    return sF(E, "light", F, i), sF(E, "dark", _, i), E.contrastText || (E.contrastText = C(E.main)), E;
  };
  let R;
  return t === "light" ? R = ej() : t === "dark" && (R = tj()), process.env.NODE_ENV !== "production" && (R || console.error(`MUI: The palette mode \`${t}\` is not supported.`)), aa({
    // A collection of common colors.
    common: {
      ...Jb
    },
    // prevent mutable object.
    // The palette mode, can be light or dark.
    mode: t,
    // The colors used to represent primary interface elements for a user.
    primary: w({
      color: u,
      name: "primary"
    }),
    // The colors used to represent secondary interface elements for a user.
    secondary: w({
      color: d,
      name: "secondary",
      mainShade: "A400",
      lightShade: "A200",
      darkShade: "A700"
    }),
    // The colors used to represent interface elements that the user should be made aware of.
    error: w({
      color: p,
      name: "error"
    }),
    // The colors used to represent potentially dangerous actions or important messages.
    warning: w({
      color: y,
      name: "warning"
    }),
    // The colors used to present information to the user that is neutral and not necessarily important.
    info: w({
      color: m,
      name: "info"
    }),
    // The colors used to indicate the successful completion of an action that user triggered.
    success: w({
      color: v,
      name: "success"
    }),
    // The grey colors.
    grey: L3,
    // Used by `getContrastText()` to maximize the contrast between
    // the background and the text.
    contrastThreshold: n,
    // Takes a background color and returns the text color that maximizes the contrast.
    getContrastText: C,
    // Generate a rich color object.
    augmentColor: w,
    // Used by the functions below to shift a color's luminance by approximately
    // two indexes within its tonal palette.
    // E.g., shift from Red 500 to Red 300 or Red 700.
    tonalOffset: i,
    // The light and dark mode object.
    ...R
  }, s);
}
function Kq(e) {
  const t = {};
  return Object.entries(e).forEach((i) => {
    const [s, u] = i;
    typeof u == "object" && (t[s] = `${u.fontStyle ? `${u.fontStyle} ` : ""}${u.fontVariant ? `${u.fontVariant} ` : ""}${u.fontWeight ? `${u.fontWeight} ` : ""}${u.fontStretch ? `${u.fontStretch} ` : ""}${u.fontSize || ""}${u.lineHeight ? `/${u.lineHeight} ` : ""}${u.fontFamily || ""}`);
  }), t;
}
function Yq(e, t) {
  return {
    toolbar: {
      minHeight: 56,
      [e.up("xs")]: {
        "@media (orientation: landscape)": {
          minHeight: 48
        }
      },
      [e.up("sm")]: {
        minHeight: 64
      }
    },
    ...t
  };
}
function Xq(e) {
  return Math.round(e * 1e5) / 1e5;
}
const lF = {
  textTransform: "uppercase"
}, uF = '"Roboto", "Helvetica", "Arial", sans-serif';
function nj(e, t) {
  const {
    fontFamily: n = uF,
    // The default font size of the Material Specification.
    fontSize: i = 14,
    // px
    fontWeightLight: s = 300,
    fontWeightRegular: u = 400,
    fontWeightMedium: d = 500,
    fontWeightBold: p = 700,
    // Tell MUI what's the font-size on the html element.
    // 16px is the default font-size used by browsers.
    htmlFontSize: m = 16,
    // Apply the CSS properties to all the variants.
    allVariants: v,
    pxToRem: y,
    ...C
  } = typeof t == "function" ? t(e) : t;
  process.env.NODE_ENV !== "production" && (typeof i != "number" && console.error("MUI: `fontSize` is required to be a number."), typeof m != "number" && console.error("MUI: `htmlFontSize` is required to be a number."));
  const w = i / 14, R = y || ((k) => `${k / m * w}rem`), O = (k, L, F, _, P) => ({
    fontFamily: n,
    fontWeight: k,
    fontSize: R(L),
    // Unitless following https://meyerweb.com/eric/thoughts/2006/02/08/unitless-line-heights/
    lineHeight: F,
    // The letter spacing was designed for the Roboto font-family. Using the same letter-spacing
    // across font-families can cause issues with the kerning.
    ...n === uF ? {
      letterSpacing: `${Xq(_ / L)}em`
    } : {},
    ...P,
    ...v
  }), E = {
    h1: O(s, 96, 1.167, -1.5),
    h2: O(s, 60, 1.2, -0.5),
    h3: O(u, 48, 1.167, 0),
    h4: O(u, 34, 1.235, 0.25),
    h5: O(u, 24, 1.334, 0),
    h6: O(d, 20, 1.6, 0.15),
    subtitle1: O(u, 16, 1.75, 0.15),
    subtitle2: O(d, 14, 1.57, 0.1),
    body1: O(u, 16, 1.5, 0.15),
    body2: O(u, 14, 1.43, 0.15),
    button: O(d, 14, 1.75, 0.4, lF),
    caption: O(u, 12, 1.66, 0.4),
    overline: O(u, 12, 2.66, 1, lF),
    // TODO v6: Remove handling of 'inherit' variant from the theme as it is already handled in Material UI's Typography component. Also, remember to remove the associated types.
    inherit: {
      fontFamily: "inherit",
      fontWeight: "inherit",
      fontSize: "inherit",
      lineHeight: "inherit",
      letterSpacing: "inherit"
    }
  };
  return aa({
    htmlFontSize: m,
    pxToRem: R,
    fontFamily: n,
    fontSize: i,
    fontWeightLight: s,
    fontWeightRegular: u,
    fontWeightMedium: d,
    fontWeightBold: p,
    ...E
  }, C, {
    clone: !1
    // No need to clone deep
  });
}
const Qq = 0.2, Jq = 0.14, Zq = 0.12;
function io(...e) {
  return [`${e[0]}px ${e[1]}px ${e[2]}px ${e[3]}px rgba(0,0,0,${Qq})`, `${e[4]}px ${e[5]}px ${e[6]}px ${e[7]}px rgba(0,0,0,${Jq})`, `${e[8]}px ${e[9]}px ${e[10]}px ${e[11]}px rgba(0,0,0,${Zq})`].join(",");
}
const e8 = ["none", io(0, 2, 1, -1, 0, 1, 1, 0, 0, 1, 3, 0), io(0, 3, 1, -2, 0, 2, 2, 0, 0, 1, 5, 0), io(0, 3, 3, -2, 0, 3, 4, 0, 0, 1, 8, 0), io(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0), io(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0), io(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0), io(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1), io(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2), io(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2), io(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3), io(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3), io(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4), io(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4), io(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4), io(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5), io(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5), io(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5), io(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6), io(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6), io(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7), io(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7), io(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7), io(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8), io(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8)], t8 = {
  // This is the most common easing curve.
  easeInOut: "cubic-bezier(0.4, 0, 0.2, 1)",
  // Objects enter the screen at full velocity from off-screen and
  // slowly decelerate to a resting point.
  easeOut: "cubic-bezier(0.0, 0, 0.2, 1)",
  // Objects leave the screen at full velocity. They do not decelerate when off-screen.
  easeIn: "cubic-bezier(0.4, 0, 1, 1)",
  // The sharp curve is used by objects that may return to the screen at any time.
  sharp: "cubic-bezier(0.4, 0, 0.6, 1)"
}, n8 = {
  shortest: 150,
  shorter: 200,
  short: 250,
  // most basic recommended timing
  standard: 300,
  // this is to be used in complex animations
  complex: 375,
  // recommended when something is entering screen
  enteringScreen: 225,
  // recommended when something is leaving screen
  leavingScreen: 195
};
function cF(e) {
  return `${Math.round(e)}ms`;
}
function r8(e) {
  if (!e)
    return 0;
  const t = e / 36;
  return Math.min(Math.round((4 + 15 * t ** 0.25 + t / 5) * 10), 3e3);
}
function o8(e) {
  const t = {
    ...t8,
    ...e.easing
  }, n = {
    ...n8,
    ...e.duration
  };
  return {
    getAutoHeightDuration: r8,
    create: (s = ["all"], u = {}) => {
      const {
        duration: d = n.standard,
        easing: p = t.easeInOut,
        delay: m = 0,
        ...v
      } = u;
      if (process.env.NODE_ENV !== "production") {
        const y = (w) => typeof w == "string", C = (w) => !Number.isNaN(parseFloat(w));
        !y(s) && !Array.isArray(s) && console.error('MUI: Argument "props" must be a string or Array.'), !C(d) && !y(d) && console.error(`MUI: Argument "duration" must be a number or a string but found ${d}.`), y(p) || console.error('MUI: Argument "easing" must be a string.'), !C(m) && !y(m) && console.error('MUI: Argument "delay" must be a number or a string.'), typeof u != "object" && console.error(["MUI: Secong argument of transition.create must be an object.", "Arguments should be either `create('prop1', options)` or `create(['prop1', 'prop2'], options)`"].join(`
`)), Object.keys(v).length !== 0 && console.error(`MUI: Unrecognized argument(s) [${Object.keys(v).join(",")}].`);
      }
      return (Array.isArray(s) ? s : [s]).map((y) => `${y} ${typeof d == "string" ? d : cF(d)} ${p} ${typeof m == "string" ? m : cF(m)}`).join(",");
    },
    ...e,
    easing: t,
    duration: n
  };
}
const i8 = {
  mobileStepper: 1e3,
  fab: 1050,
  speedDial: 1050,
  appBar: 1100,
  drawer: 1200,
  modal: 1300,
  snackbar: 1400,
  tooltip: 1500
};
function a8(e) {
  return Au(e) || typeof e > "u" || typeof e == "string" || typeof e == "boolean" || typeof e == "number" || Array.isArray(e);
}
function rj(e = {}) {
  const t = {
    ...e
  };
  function n(i) {
    const s = Object.entries(i);
    for (let u = 0; u < s.length; u++) {
      const [d, p] = s[u];
      !a8(p) || d.startsWith("unstable_") ? delete i[d] : Au(p) && (i[d] = {
        ...p
      }, n(i[d]));
    }
  }
  return n(t), `import { unstable_createBreakpoints as createBreakpoints, createTransitions } from '@mui/material/styles';

const theme = ${JSON.stringify(t, null, 2)};

theme.breakpoints = createBreakpoints(theme.breakpoints || {});
theme.transitions = createTransitions(theme.transitions || {});

export default theme;`;
}
function pk(e = {}, ...t) {
  const {
    breakpoints: n,
    mixins: i = {},
    spacing: s,
    palette: u = {},
    transitions: d = {},
    typography: p = {},
    shape: m,
    ...v
  } = e;
  if (e.vars && // The error should throw only for the root theme creation because user is not allowed to use a custom node `vars`.
  // `generateThemeVars` is the closest identifier for checking that the `options` is a result of `createTheme` with CSS variables so that user can create new theme for nested ThemeProvider.
  e.generateThemeVars === void 0)
    throw new Error(process.env.NODE_ENV !== "production" ? "MUI: `vars` is a private field used for CSS variables support.\nPlease use another name or follow the [docs](https://mui.com/material-ui/customization/css-theme-variables/usage/) to enable the feature." : Bu(20));
  const y = SP(u), C = vE(e);
  let w = aa(C, {
    mixins: Yq(C.breakpoints, i),
    palette: y,
    // Don't use [...shadows] until you've verified its transpiled code is not invoking the iterator protocol.
    shadows: e8.slice(),
    typography: nj(y, p),
    transitions: o8(d),
    zIndex: {
      ...i8
    }
  });
  if (w = aa(w, v), w = t.reduce((R, O) => aa(R, O), w), process.env.NODE_ENV !== "production") {
    const R = ["active", "checked", "completed", "disabled", "error", "expanded", "focused", "focusVisible", "required", "selected"], O = (E, k) => {
      let L;
      for (L in E) {
        const F = E[L];
        if (R.includes(L) && Object.keys(F).length > 0) {
          if (process.env.NODE_ENV !== "production") {
            const _ = yn("", L);
            console.error([`MUI: The \`${k}\` component increases the CSS specificity of the \`${L}\` internal state.`, "You can not override it like this: ", JSON.stringify(E, null, 2), "", `Instead, you need to use the '&.${_}' syntax:`, JSON.stringify({
              root: {
                [`&.${_}`]: F
              }
            }, null, 2), "", "https://mui.com/r/state-classes-guide"].join(`
`));
          }
          E[L] = {};
        }
      }
    };
    Object.keys(w.components).forEach((E) => {
      const k = w.components[E].styleOverrides;
      k && E.startsWith("Mui") && O(k, E);
    });
  }
  return w.unstable_sxConfig = {
    ...OC,
    ...v == null ? void 0 : v.unstable_sxConfig
  }, w.unstable_sx = function(O) {
    return vf({
      sx: O,
      theme: this
    });
  }, w.toRuntimeSource = rj, w;
}
function hk(e) {
  let t;
  return e < 1 ? t = 5.11916 * e ** 2 : t = 4.5 * Math.log(e + 1) + 2, Math.round(t * 10) / 1e3;
}
const s8 = [...Array(25)].map((e, t) => {
  if (t === 0)
    return "none";
  const n = hk(t);
  return `linear-gradient(rgba(255 255 255 / ${n}), rgba(255 255 255 / ${n}))`;
});
function oj(e) {
  return {
    inputPlaceholder: e === "dark" ? 0.5 : 0.42,
    inputUnderline: e === "dark" ? 0.7 : 0.42,
    switchTrackDisabled: e === "dark" ? 0.2 : 0.12,
    switchTrack: e === "dark" ? 0.3 : 0.38
  };
}
function ij(e) {
  return e === "dark" ? s8 : [];
}
function l8(e) {
  const {
    palette: t = {
      mode: "light"
    },
    // need to cast to avoid module augmentation test
    opacity: n,
    overlays: i,
    ...s
  } = e, u = SP(t);
  return {
    palette: u,
    opacity: {
      ...oj(u.mode),
      ...n
    },
    overlays: i || ij(u.mode),
    ...s
  };
}
function u8(e) {
  var t;
  return !!e[0].match(/(cssVarPrefix|colorSchemeSelector|modularCssLayers|rootSelector|typography|mixins|breakpoints|direction|transitions)/) || !!e[0].match(/sxConfig$/) || // ends with sxConfig
  e[0] === "palette" && !!((t = e[1]) != null && t.match(/(mode|contrastThreshold|tonalOffset)/));
}
const c8 = (e) => [...[...Array(25)].map((t, n) => `--${e ? `${e}-` : ""}overlays-${n}`), `--${e ? `${e}-` : ""}palette-AppBar-darkBg`, `--${e ? `${e}-` : ""}palette-AppBar-darkColor`], d8 = (e) => (t, n) => {
  const i = e.rootSelector || ":root", s = e.colorSchemeSelector;
  let u = s;
  if (s === "class" && (u = ".%s"), s === "data" && (u = "[data-%s]"), s != null && s.startsWith("data-") && !s.includes("%s") && (u = `[${s}="%s"]`), e.defaultColorScheme === t) {
    if (t === "dark") {
      const d = {};
      return c8(e.cssVarPrefix).forEach((p) => {
        d[p] = n[p], delete n[p];
      }), u === "media" ? {
        [i]: n,
        "@media (prefers-color-scheme: dark)": {
          [i]: d
        }
      } : u ? {
        [u.replace("%s", t)]: d,
        [`${i}, ${u.replace("%s", t)}`]: n
      } : {
        [i]: {
          ...n,
          ...d
        }
      };
    }
    if (u && u !== "media")
      return `${i}, ${u.replace("%s", String(t))}`;
  } else if (t) {
    if (u === "media")
      return {
        [`@media (prefers-color-scheme: ${String(t)})`]: {
          [i]: n
        }
      };
    if (u)
      return u.replace("%s", String(t));
  }
  return i;
};
function f8(e, t) {
  t.forEach((n) => {
    e[n] || (e[n] = {});
  });
}
function Ye(e, t, n) {
  !e[t] && n && (e[t] = n);
}
function _b(e) {
  return typeof e != "string" || !e.startsWith("hsl") ? e : j$(e);
}
function jc(e, t) {
  `${t}Channel` in e || (e[`${t}Channel`] = Fb(_b(e[t]), `MUI: Can't create \`palette.${t}Channel\` because \`palette.${t}\` is not one of these formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().
To suppress this warning, you need to explicitly provide the \`palette.${t}Channel\` as a string (in rgb format, for example "12 12 12") or undefined if you want to remove the channel token.`));
}
function p8(e) {
  return typeof e == "number" ? `${e}px` : typeof e == "string" || typeof e == "function" || Array.isArray(e) ? e : "8px";
}
const Pu = (e) => {
  try {
    return e();
  } catch {
  }
}, h8 = (e = "mui") => Iq(e);
function EO(e, t, n, i) {
  if (!t)
    return;
  t = t === !0 ? {} : t;
  const s = i === "dark" ? "dark" : "light";
  if (!n) {
    e[i] = l8({
      ...t,
      palette: {
        mode: s,
        ...t == null ? void 0 : t.palette
      }
    });
    return;
  }
  const {
    palette: u,
    ...d
  } = pk({
    ...n,
    palette: {
      mode: s,
      ...t == null ? void 0 : t.palette
    }
  });
  return e[i] = {
    ...t,
    palette: u,
    opacity: {
      ...oj(s),
      ...t == null ? void 0 : t.opacity
    },
    overlays: (t == null ? void 0 : t.overlays) || ij(s)
  }, d;
}
function m8(e = {}, ...t) {
  const {
    colorSchemes: n = {
      light: !0
    },
    defaultColorScheme: i,
    disableCssColorScheme: s = !1,
    cssVarPrefix: u = "mui",
    shouldSkipGeneratingVar: d = u8,
    colorSchemeSelector: p = n.light && n.dark ? "media" : void 0,
    rootSelector: m = ":root",
    ...v
  } = e, y = Object.keys(n)[0], C = i || (n.light && y !== "light" ? "light" : y), w = h8(u), {
    [C]: R,
    light: O,
    dark: E,
    ...k
  } = n, L = {
    ...k
  };
  let F = R;
  if ((C === "dark" && !("dark" in n) || C === "light" && !("light" in n)) && (F = !0), !F)
    throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The \`colorSchemes.${C}\` option is either missing or invalid.` : Bu(21, C));
  const _ = EO(L, F, v, C);
  O && !L.light && EO(L, O, void 0, "light"), E && !L.dark && EO(L, E, void 0, "dark");
  let P = {
    defaultColorScheme: C,
    ..._,
    cssVarPrefix: u,
    colorSchemeSelector: p,
    rootSelector: m,
    getCssVar: w,
    colorSchemes: L,
    font: {
      ...Kq(_.typography),
      ..._.font
    },
    spacing: p8(v.spacing)
  };
  Object.keys(P.colorSchemes).forEach((H) => {
    const I = P.colorSchemes[H].palette, U = (G) => {
      const Y = G.split("-"), te = Y[1], B = Y[2];
      return w(G, I[te][B]);
    };
    if (I.mode === "light" && (Ye(I.common, "background", "#fff"), Ye(I.common, "onBackground", "#000")), I.mode === "dark" && (Ye(I.common, "background", "#000"), Ye(I.common, "onBackground", "#fff")), f8(I, ["Alert", "AppBar", "Avatar", "Button", "Chip", "FilledInput", "LinearProgress", "Skeleton", "Slider", "SnackbarContent", "SpeedDialAction", "StepConnector", "StepContent", "Switch", "TableCell", "Tooltip"]), I.mode === "light") {
      Ye(I.Alert, "errorColor", Gr(I.error.light, 0.6)), Ye(I.Alert, "infoColor", Gr(I.info.light, 0.6)), Ye(I.Alert, "successColor", Gr(I.success.light, 0.6)), Ye(I.Alert, "warningColor", Gr(I.warning.light, 0.6)), Ye(I.Alert, "errorFilledBg", U("palette-error-main")), Ye(I.Alert, "infoFilledBg", U("palette-info-main")), Ye(I.Alert, "successFilledBg", U("palette-success-main")), Ye(I.Alert, "warningFilledBg", U("palette-warning-main")), Ye(I.Alert, "errorFilledColor", Pu(() => I.getContrastText(I.error.main))), Ye(I.Alert, "infoFilledColor", Pu(() => I.getContrastText(I.info.main))), Ye(I.Alert, "successFilledColor", Pu(() => I.getContrastText(I.success.main))), Ye(I.Alert, "warningFilledColor", Pu(() => I.getContrastText(I.warning.main))), Ye(I.Alert, "errorStandardBg", Wr(I.error.light, 0.9)), Ye(I.Alert, "infoStandardBg", Wr(I.info.light, 0.9)), Ye(I.Alert, "successStandardBg", Wr(I.success.light, 0.9)), Ye(I.Alert, "warningStandardBg", Wr(I.warning.light, 0.9)), Ye(I.Alert, "errorIconColor", U("palette-error-main")), Ye(I.Alert, "infoIconColor", U("palette-info-main")), Ye(I.Alert, "successIconColor", U("palette-success-main")), Ye(I.Alert, "warningIconColor", U("palette-warning-main")), Ye(I.AppBar, "defaultBg", U("palette-grey-100")), Ye(I.Avatar, "defaultBg", U("palette-grey-400")), Ye(I.Button, "inheritContainedBg", U("palette-grey-300")), Ye(I.Button, "inheritContainedHoverBg", U("palette-grey-A100")), Ye(I.Chip, "defaultBorder", U("palette-grey-400")), Ye(I.Chip, "defaultAvatarColor", U("palette-grey-700")), Ye(I.Chip, "defaultIconColor", U("palette-grey-700")), Ye(I.FilledInput, "bg", "rgba(0, 0, 0, 0.06)"), Ye(I.FilledInput, "hoverBg", "rgba(0, 0, 0, 0.09)"), Ye(I.FilledInput, "disabledBg", "rgba(0, 0, 0, 0.12)"), Ye(I.LinearProgress, "primaryBg", Wr(I.primary.main, 0.62)), Ye(I.LinearProgress, "secondaryBg", Wr(I.secondary.main, 0.62)), Ye(I.LinearProgress, "errorBg", Wr(I.error.main, 0.62)), Ye(I.LinearProgress, "infoBg", Wr(I.info.main, 0.62)), Ye(I.LinearProgress, "successBg", Wr(I.success.main, 0.62)), Ye(I.LinearProgress, "warningBg", Wr(I.warning.main, 0.62)), Ye(I.Skeleton, "bg", `rgba(${U("palette-text-primaryChannel")} / 0.11)`), Ye(I.Slider, "primaryTrack", Wr(I.primary.main, 0.62)), Ye(I.Slider, "secondaryTrack", Wr(I.secondary.main, 0.62)), Ye(I.Slider, "errorTrack", Wr(I.error.main, 0.62)), Ye(I.Slider, "infoTrack", Wr(I.info.main, 0.62)), Ye(I.Slider, "successTrack", Wr(I.success.main, 0.62)), Ye(I.Slider, "warningTrack", Wr(I.warning.main, 0.62));
      const G = qx(I.background.default, 0.8);
      Ye(I.SnackbarContent, "bg", G), Ye(I.SnackbarContent, "color", Pu(() => I.getContrastText(G))), Ye(I.SpeedDialAction, "fabHoverBg", qx(I.background.paper, 0.15)), Ye(I.StepConnector, "border", U("palette-grey-400")), Ye(I.StepContent, "border", U("palette-grey-400")), Ye(I.Switch, "defaultColor", U("palette-common-white")), Ye(I.Switch, "defaultDisabledColor", U("palette-grey-100")), Ye(I.Switch, "primaryDisabledColor", Wr(I.primary.main, 0.62)), Ye(I.Switch, "secondaryDisabledColor", Wr(I.secondary.main, 0.62)), Ye(I.Switch, "errorDisabledColor", Wr(I.error.main, 0.62)), Ye(I.Switch, "infoDisabledColor", Wr(I.info.main, 0.62)), Ye(I.Switch, "successDisabledColor", Wr(I.success.main, 0.62)), Ye(I.Switch, "warningDisabledColor", Wr(I.warning.main, 0.62)), Ye(I.TableCell, "border", Wr(Wx(I.divider, 1), 0.88)), Ye(I.Tooltip, "bg", Wx(I.grey[700], 0.92));
    }
    if (I.mode === "dark") {
      Ye(I.Alert, "errorColor", Wr(I.error.light, 0.6)), Ye(I.Alert, "infoColor", Wr(I.info.light, 0.6)), Ye(I.Alert, "successColor", Wr(I.success.light, 0.6)), Ye(I.Alert, "warningColor", Wr(I.warning.light, 0.6)), Ye(I.Alert, "errorFilledBg", U("palette-error-dark")), Ye(I.Alert, "infoFilledBg", U("palette-info-dark")), Ye(I.Alert, "successFilledBg", U("palette-success-dark")), Ye(I.Alert, "warningFilledBg", U("palette-warning-dark")), Ye(I.Alert, "errorFilledColor", Pu(() => I.getContrastText(I.error.dark))), Ye(I.Alert, "infoFilledColor", Pu(() => I.getContrastText(I.info.dark))), Ye(I.Alert, "successFilledColor", Pu(() => I.getContrastText(I.success.dark))), Ye(I.Alert, "warningFilledColor", Pu(() => I.getContrastText(I.warning.dark))), Ye(I.Alert, "errorStandardBg", Gr(I.error.light, 0.9)), Ye(I.Alert, "infoStandardBg", Gr(I.info.light, 0.9)), Ye(I.Alert, "successStandardBg", Gr(I.success.light, 0.9)), Ye(I.Alert, "warningStandardBg", Gr(I.warning.light, 0.9)), Ye(I.Alert, "errorIconColor", U("palette-error-main")), Ye(I.Alert, "infoIconColor", U("palette-info-main")), Ye(I.Alert, "successIconColor", U("palette-success-main")), Ye(I.Alert, "warningIconColor", U("palette-warning-main")), Ye(I.AppBar, "defaultBg", U("palette-grey-900")), Ye(I.AppBar, "darkBg", U("palette-background-paper")), Ye(I.AppBar, "darkColor", U("palette-text-primary")), Ye(I.Avatar, "defaultBg", U("palette-grey-600")), Ye(I.Button, "inheritContainedBg", U("palette-grey-800")), Ye(I.Button, "inheritContainedHoverBg", U("palette-grey-700")), Ye(I.Chip, "defaultBorder", U("palette-grey-700")), Ye(I.Chip, "defaultAvatarColor", U("palette-grey-300")), Ye(I.Chip, "defaultIconColor", U("palette-grey-300")), Ye(I.FilledInput, "bg", "rgba(255, 255, 255, 0.09)"), Ye(I.FilledInput, "hoverBg", "rgba(255, 255, 255, 0.13)"), Ye(I.FilledInput, "disabledBg", "rgba(255, 255, 255, 0.12)"), Ye(I.LinearProgress, "primaryBg", Gr(I.primary.main, 0.5)), Ye(I.LinearProgress, "secondaryBg", Gr(I.secondary.main, 0.5)), Ye(I.LinearProgress, "errorBg", Gr(I.error.main, 0.5)), Ye(I.LinearProgress, "infoBg", Gr(I.info.main, 0.5)), Ye(I.LinearProgress, "successBg", Gr(I.success.main, 0.5)), Ye(I.LinearProgress, "warningBg", Gr(I.warning.main, 0.5)), Ye(I.Skeleton, "bg", `rgba(${U("palette-text-primaryChannel")} / 0.13)`), Ye(I.Slider, "primaryTrack", Gr(I.primary.main, 0.5)), Ye(I.Slider, "secondaryTrack", Gr(I.secondary.main, 0.5)), Ye(I.Slider, "errorTrack", Gr(I.error.main, 0.5)), Ye(I.Slider, "infoTrack", Gr(I.info.main, 0.5)), Ye(I.Slider, "successTrack", Gr(I.success.main, 0.5)), Ye(I.Slider, "warningTrack", Gr(I.warning.main, 0.5));
      const G = qx(I.background.default, 0.98);
      Ye(I.SnackbarContent, "bg", G), Ye(I.SnackbarContent, "color", Pu(() => I.getContrastText(G))), Ye(I.SpeedDialAction, "fabHoverBg", qx(I.background.paper, 0.15)), Ye(I.StepConnector, "border", U("palette-grey-600")), Ye(I.StepContent, "border", U("palette-grey-600")), Ye(I.Switch, "defaultColor", U("palette-grey-300")), Ye(I.Switch, "defaultDisabledColor", U("palette-grey-600")), Ye(I.Switch, "primaryDisabledColor", Gr(I.primary.main, 0.55)), Ye(I.Switch, "secondaryDisabledColor", Gr(I.secondary.main, 0.55)), Ye(I.Switch, "errorDisabledColor", Gr(I.error.main, 0.55)), Ye(I.Switch, "infoDisabledColor", Gr(I.info.main, 0.55)), Ye(I.Switch, "successDisabledColor", Gr(I.success.main, 0.55)), Ye(I.Switch, "warningDisabledColor", Gr(I.warning.main, 0.55)), Ye(I.TableCell, "border", Gr(Wx(I.divider, 1), 0.68)), Ye(I.Tooltip, "bg", Wx(I.grey[700], 0.92));
    }
    jc(I.background, "default"), jc(I.background, "paper"), jc(I.common, "background"), jc(I.common, "onBackground"), jc(I, "divider"), Object.keys(I).forEach((G) => {
      const Y = I[G];
      G !== "tonalOffset" && Y && typeof Y == "object" && (Y.main && Ye(I[G], "mainChannel", Fb(_b(Y.main))), Y.light && Ye(I[G], "lightChannel", Fb(_b(Y.light))), Y.dark && Ye(I[G], "darkChannel", Fb(_b(Y.dark))), Y.contrastText && Ye(I[G], "contrastTextChannel", Fb(_b(Y.contrastText))), G === "text" && (jc(I[G], "primary"), jc(I[G], "secondary")), G === "action" && (Y.active && jc(I[G], "active"), Y.selected && jc(I[G], "selected")));
    });
  }), P = t.reduce((H, I) => aa(H, I), P);
  const D = {
    prefix: u,
    disableCssColorScheme: s,
    shouldSkipGeneratingVar: d,
    getSelector: d8(P)
  }, {
    vars: z,
    generateThemeVars: K,
    generateStyleSheets: Q
  } = Lq(P, D);
  return P.vars = z, Object.entries(P.colorSchemes[P.defaultColorScheme]).forEach(([H, I]) => {
    P[H] = I;
  }), P.generateThemeVars = K, P.generateStyleSheets = Q, P.generateSpacing = function() {
    return P$(v.spacing, uP(this));
  }, P.getColorSchemeSelector = Fq(p), P.spacing = P.generateSpacing(), P.shouldSkipGeneratingVar = d, P.unstable_sxConfig = {
    ...OC,
    ...v == null ? void 0 : v.unstable_sxConfig
  }, P.unstable_sx = function(I) {
    return vf({
      sx: I,
      theme: this
    });
  }, P.toRuntimeSource = rj, P;
}
function dF(e, t, n) {
  e.colorSchemes && n && (e.colorSchemes[t] = {
    ...n !== !0 && n,
    palette: SP({
      ...n === !0 ? {} : n.palette,
      mode: t
    })
    // cast type to skip module augmentation test
  });
}
function SE(e = {}, ...t) {
  const {
    palette: n,
    cssVariables: i = !1,
    colorSchemes: s = n ? void 0 : {
      light: !0
    },
    defaultColorScheme: u = n == null ? void 0 : n.mode,
    ...d
  } = e, p = u || "light", m = s == null ? void 0 : s[p], v = {
    ...s,
    ...n ? {
      [p]: {
        ...typeof m != "boolean" && m,
        palette: n
      }
    } : void 0
  };
  if (i === !1) {
    if (!("colorSchemes" in e))
      return pk(e, ...t);
    let y = n;
    "palette" in e || v[p] && (v[p] !== !0 ? y = v[p].palette : p === "dark" && (y = {
      mode: "dark"
    }));
    const C = pk({
      ...e,
      palette: y
    }, ...t);
    return C.defaultColorScheme = p, C.colorSchemes = v, C.palette.mode === "light" && (C.colorSchemes.light = {
      ...v.light !== !0 && v.light,
      palette: C.palette
    }, dF(C, "dark", v.dark)), C.palette.mode === "dark" && (C.colorSchemes.dark = {
      ...v.dark !== !0 && v.dark,
      palette: C.palette
    }, dF(C, "light", v.light)), C;
  }
  return !n && !("light" in v) && p === "light" && (v.light = !0), m8({
    ...d,
    colorSchemes: v,
    defaultColorScheme: p,
    ...typeof i != "boolean" && i
  }, ...t);
}
function g8(e) {
  return String(e).match(/[\d.\-+]*\s*(.*)/)[1] || "";
}
function v8(e) {
  return parseFloat(e);
}
const wP = SE();
function ev() {
  const e = yE(wP);
  return process.env.NODE_ENV !== "production" && S.useDebugValue(e), e[ju] || e;
}
function aj(e) {
  return e !== "ownerState" && e !== "theme" && e !== "sx" && e !== "as";
}
const Ya = (e) => aj(e) && e !== "classes", Ue = _$({
  themeId: ju,
  defaultTheme: wP,
  rootShouldForwardProp: Ya
});
function y8({
  theme: e,
  ...t
}) {
  const n = ju in e ? e[ju] : void 0;
  return /* @__PURE__ */ A.jsx(nC, {
    ...t,
    themeId: n ? ju : void 0,
    theme: n || e
  });
}
const Kx = {
  colorSchemeStorageKey: "mui-color-scheme",
  defaultLightColorScheme: "light",
  defaultDarkColorScheme: "dark",
  modeStorageKey: "mui-mode"
}, {
  CssVarsProvider: b8
} = Mq({
  themeId: ju,
  // @ts-ignore ignore module augmentation tests
  theme: () => SE({
    cssVariables: !0
  }),
  colorSchemeStorageKey: Kx.colorSchemeStorageKey,
  modeStorageKey: Kx.modeStorageKey,
  defaultColorScheme: {
    light: Kx.defaultLightColorScheme,
    dark: Kx.defaultDarkColorScheme
  },
  resolveTheme: (e) => {
    const t = {
      ...e,
      typography: nj(e.palette, e.typography)
    };
    return t.unstable_sx = function(i) {
      return vf({
        sx: i,
        theme: this
      });
    }, t;
  }
}), C8 = b8;
function S8({
  theme: e,
  ...t
}) {
  const n = S.useMemo(() => {
    if (typeof e == "function")
      return e;
    const i = ju in e ? e[ju] : e;
    return "colorSchemes" in i ? null : "vars" in i ? e : {
      ...e,
      vars: null
    };
  }, [e]);
  return n ? /* @__PURE__ */ A.jsx(y8, {
    theme: n,
    ...t
  }) : /* @__PURE__ */ A.jsx(C8, {
    theme: e,
    ...t
  });
}
function sj(e) {
  return /* @__PURE__ */ A.jsx(fP, {
    ...e,
    defaultTheme: wP,
    themeId: ju
  });
}
process.env.NODE_ENV !== "production" && (sj.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The styles you want to apply globally.
   */
  styles: a.oneOfType([a.array, a.func, a.number, a.object, a.string, a.bool])
});
function xP(e) {
  return function(n) {
    return (
      // Pigment CSS `globalCss` support callback with theme inside an object but `GlobalStyles` support theme as a callback value.
      /* @__PURE__ */ A.jsx(sj, {
        styles: typeof e == "function" ? (i) => e({
          theme: i,
          ...n
        }) : e
      })
    );
  };
}
function w8() {
  return M$;
}
const rn = wq;
process.env.NODE_ENV !== "production" && (a.node, a.object.isRequired);
function Tn(e) {
  return Cq(e);
}
function x8(e) {
  return yn("MuiSvgIcon", e);
}
bn("MuiSvgIcon", ["root", "colorPrimary", "colorSecondary", "colorAction", "colorError", "colorDisabled", "fontSizeInherit", "fontSizeSmall", "fontSizeMedium", "fontSizeLarge"]);
const E8 = (e) => {
  const {
    color: t,
    fontSize: n,
    classes: i
  } = e, s = {
    root: ["root", t !== "inherit" && `color${Be(t)}`, `fontSize${Be(n)}`]
  };
  return yt(s, x8, i);
}, T8 = Ue("svg", {
  name: "MuiSvgIcon",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.color !== "inherit" && t[`color${Be(n.color)}`], t[`fontSize${Be(n.fontSize)}`]];
  }
})(rn(({
  theme: e
}) => {
  var t, n, i, s, u, d, p, m, v, y, C, w, R, O;
  return {
    userSelect: "none",
    width: "1em",
    height: "1em",
    display: "inline-block",
    flexShrink: 0,
    transition: (s = (t = e.transitions) == null ? void 0 : t.create) == null ? void 0 : s.call(t, "fill", {
      duration: (i = (n = (e.vars ?? e).transitions) == null ? void 0 : n.duration) == null ? void 0 : i.shorter
    }),
    variants: [
      {
        props: (E) => !E.hasSvgAsChild,
        style: {
          // the <svg> will define the property that has `currentColor`
          // for example heroicons uses fill="none" and stroke="currentColor"
          fill: "currentColor"
        }
      },
      {
        props: {
          fontSize: "inherit"
        },
        style: {
          fontSize: "inherit"
        }
      },
      {
        props: {
          fontSize: "small"
        },
        style: {
          fontSize: ((d = (u = e.typography) == null ? void 0 : u.pxToRem) == null ? void 0 : d.call(u, 20)) || "1.25rem"
        }
      },
      {
        props: {
          fontSize: "medium"
        },
        style: {
          fontSize: ((m = (p = e.typography) == null ? void 0 : p.pxToRem) == null ? void 0 : m.call(p, 24)) || "1.5rem"
        }
      },
      {
        props: {
          fontSize: "large"
        },
        style: {
          fontSize: ((y = (v = e.typography) == null ? void 0 : v.pxToRem) == null ? void 0 : y.call(v, 35)) || "2.1875rem"
        }
      },
      // TODO v5 deprecate color prop, v6 remove for sx
      ...Object.entries((e.vars ?? e).palette).filter(([, E]) => E && E.main).map(([E]) => {
        var k, L;
        return {
          props: {
            color: E
          },
          style: {
            color: (L = (k = (e.vars ?? e).palette) == null ? void 0 : k[E]) == null ? void 0 : L.main
          }
        };
      }),
      {
        props: {
          color: "action"
        },
        style: {
          color: (w = (C = (e.vars ?? e).palette) == null ? void 0 : C.action) == null ? void 0 : w.active
        }
      },
      {
        props: {
          color: "disabled"
        },
        style: {
          color: (O = (R = (e.vars ?? e).palette) == null ? void 0 : R.action) == null ? void 0 : O.disabled
        }
      },
      {
        props: {
          color: "inherit"
        },
        style: {
          color: void 0
        }
      }
    ]
  };
})), R0 = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const i = Tn({
    props: t,
    name: "MuiSvgIcon"
  }), {
    children: s,
    className: u,
    color: d = "inherit",
    component: p = "svg",
    fontSize: m = "medium",
    htmlColor: v,
    inheritViewBox: y = !1,
    titleAccess: C,
    viewBox: w = "0 0 24 24",
    ...R
  } = i, O = /* @__PURE__ */ S.isValidElement(s) && s.type === "svg", E = {
    ...i,
    color: d,
    component: p,
    fontSize: m,
    instanceFontSize: t.fontSize,
    inheritViewBox: y,
    viewBox: w,
    hasSvgAsChild: O
  }, k = {};
  y || (k.viewBox = w);
  const L = E8(E);
  return /* @__PURE__ */ A.jsxs(T8, {
    as: p,
    className: nt(L.root, u),
    focusable: "false",
    color: v,
    "aria-hidden": C ? void 0 : !0,
    role: C ? "img" : void 0,
    ref: n,
    ...k,
    ...R,
    ...O && s.props,
    ownerState: E,
    children: [O ? s.props.children : s, C ? /* @__PURE__ */ A.jsx("title", {
      children: C
    }) : null]
  });
});
process.env.NODE_ENV !== "production" && (R0.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Node passed into the SVG element.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * You can use the `htmlColor` prop to apply a color attribute to the SVG element.
   * @default 'inherit'
   */
  color: a.oneOfType([a.oneOf(["inherit", "action", "disabled", "primary", "secondary", "error", "info", "success", "warning"]), a.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.
   * @default 'medium'
   */
  fontSize: a.oneOfType([a.oneOf(["inherit", "large", "medium", "small"]), a.string]),
  /**
   * Applies a color attribute to the SVG element.
   */
  htmlColor: a.string,
  /**
   * If `true`, the root node will inherit the custom `component`'s viewBox and the `viewBox`
   * prop will be ignored.
   * Useful when you want to reference a custom `component` and have `SvgIcon` pass that
   * `component`'s viewBox to the root node.
   * @default false
   */
  inheritViewBox: a.bool,
  /**
   * The shape-rendering attribute. The behavior of the different options is described on the
   * [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering).
   * If you are having issues with blurry icons you should investigate this prop.
   */
  shapeRendering: a.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * Provides a human-readable title for the element that contains it.
   * https://www.w3.org/TR/SVG-access/#Equivalent
   */
  titleAccess: a.string,
  /**
   * Allows you to redefine what the coordinates without units mean inside an SVG element.
   * For example, if the SVG element is 500 (width) by 200 (height),
   * and you pass viewBox="0 0 50 20",
   * this means that the coordinates inside the SVG will go from the top left corner (0,0)
   * to bottom right (50,20) and each unit will be worth 10px.
   * @default '0 0 24 24'
   */
  viewBox: a.string
});
R0.muiName = "SvgIcon";
function Fn(e, t) {
  function n(i, s) {
    return /* @__PURE__ */ A.jsx(R0, {
      "data-testid": `${t}Icon`,
      ref: s,
      ...i,
      children: e
    });
  }
  return process.env.NODE_ENV !== "production" && (n.displayName = `${t}Icon`), n.muiName = R0.muiName, /* @__PURE__ */ S.memo(/* @__PURE__ */ S.forwardRef(n));
}
function lj(e, t) {
  if (!e)
    return t;
  if (typeof e == "function" || typeof t == "function")
    return (s) => {
      const u = typeof t == "function" ? t(s) : t, d = typeof e == "function" ? e({
        ...s,
        ...u
      }) : e, p = nt(s == null ? void 0 : s.className, u == null ? void 0 : u.className, d == null ? void 0 : d.className);
      return {
        ...u,
        ...d,
        ...!!p && {
          className: p
        },
        ...(u == null ? void 0 : u.style) && (d == null ? void 0 : d.style) && {
          style: {
            ...u.style,
            ...d.style
          }
        },
        ...(u == null ? void 0 : u.sx) && (d == null ? void 0 : d.sx) && {
          sx: [...Array.isArray(u.sx) ? u.sx : [u.sx], ...Array.isArray(d.sx) ? d.sx : [d.sx]]
        }
      };
    };
  const n = t, i = nt(n == null ? void 0 : n.className, e == null ? void 0 : e.className);
  return {
    ...t,
    ...e,
    ...!!i && {
      className: i
    },
    ...(n == null ? void 0 : n.style) && (e == null ? void 0 : e.style) && {
      style: {
        ...n.style,
        ...e.style
      }
    },
    ...(n == null ? void 0 : n.sx) && (e == null ? void 0 : e.sx) && {
      sx: [...Array.isArray(n.sx) ? n.sx : [n.sx], ...Array.isArray(e.sx) ? e.sx : [e.sx]]
    }
  };
}
function Xt(e, t) {
  if (e == null) return {};
  var n = {};
  for (var i in e) if ({}.hasOwnProperty.call(e, i)) {
    if (t.indexOf(i) !== -1) continue;
    n[i] = e[i];
  }
  return n;
}
function mk(e, t) {
  return mk = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(n, i) {
    return n.__proto__ = i, n;
  }, mk(e, t);
}
function uj(e, t) {
  e.prototype = Object.create(t.prototype), e.prototype.constructor = e, mk(e, t);
}
const fF = {
  disabled: !1
};
var R8 = process.env.NODE_ENV !== "production" ? a.oneOfType([a.number, a.shape({
  enter: a.number,
  exit: a.number,
  appear: a.number
}).isRequired]) : null;
process.env.NODE_ENV !== "production" && a.oneOfType([a.string, a.shape({
  enter: a.string,
  exit: a.string,
  active: a.string
}), a.shape({
  enter: a.string,
  enterDone: a.string,
  enterActive: a.string,
  exit: a.string,
  exitDone: a.string,
  exitActive: a.string
})]);
const O0 = Cr.createContext(null);
var O8 = function(t) {
  return t.scrollTop;
}, Ab = "unmounted", Up = "exited", Gp = "entering", yg = "entered", gk = "exiting", Yu = /* @__PURE__ */ function(e) {
  uj(t, e);
  function t(i, s) {
    var u;
    u = e.call(this, i, s) || this;
    var d = s, p = d && !d.isMounting ? i.enter : i.appear, m;
    return u.appearStatus = null, i.in ? p ? (m = Up, u.appearStatus = Gp) : m = yg : i.unmountOnExit || i.mountOnEnter ? m = Ab : m = Up, u.state = {
      status: m
    }, u.nextCallback = null, u;
  }
  t.getDerivedStateFromProps = function(s, u) {
    var d = s.in;
    return d && u.status === Ab ? {
      status: Up
    } : null;
  };
  var n = t.prototype;
  return n.componentDidMount = function() {
    this.updateStatus(!0, this.appearStatus);
  }, n.componentDidUpdate = function(s) {
    var u = null;
    if (s !== this.props) {
      var d = this.state.status;
      this.props.in ? d !== Gp && d !== yg && (u = Gp) : (d === Gp || d === yg) && (u = gk);
    }
    this.updateStatus(!1, u);
  }, n.componentWillUnmount = function() {
    this.cancelNextCallback();
  }, n.getTimeouts = function() {
    var s = this.props.timeout, u, d, p;
    return u = d = p = s, s != null && typeof s != "number" && (u = s.exit, d = s.enter, p = s.appear !== void 0 ? s.appear : d), {
      exit: u,
      enter: d,
      appear: p
    };
  }, n.updateStatus = function(s, u) {
    if (s === void 0 && (s = !1), u !== null)
      if (this.cancelNextCallback(), u === Gp) {
        if (this.props.unmountOnExit || this.props.mountOnEnter) {
          var d = this.props.nodeRef ? this.props.nodeRef.current : Hx.findDOMNode(this);
          d && O8(d);
        }
        this.performEnter(s);
      } else
        this.performExit();
    else this.props.unmountOnExit && this.state.status === Up && this.setState({
      status: Ab
    });
  }, n.performEnter = function(s) {
    var u = this, d = this.props.enter, p = this.context ? this.context.isMounting : s, m = this.props.nodeRef ? [p] : [Hx.findDOMNode(this), p], v = m[0], y = m[1], C = this.getTimeouts(), w = p ? C.appear : C.enter;
    if (!s && !d || fF.disabled) {
      this.safeSetState({
        status: yg
      }, function() {
        u.props.onEntered(v);
      });
      return;
    }
    this.props.onEnter(v, y), this.safeSetState({
      status: Gp
    }, function() {
      u.props.onEntering(v, y), u.onTransitionEnd(w, function() {
        u.safeSetState({
          status: yg
        }, function() {
          u.props.onEntered(v, y);
        });
      });
    });
  }, n.performExit = function() {
    var s = this, u = this.props.exit, d = this.getTimeouts(), p = this.props.nodeRef ? void 0 : Hx.findDOMNode(this);
    if (!u || fF.disabled) {
      this.safeSetState({
        status: Up
      }, function() {
        s.props.onExited(p);
      });
      return;
    }
    this.props.onExit(p), this.safeSetState({
      status: gk
    }, function() {
      s.props.onExiting(p), s.onTransitionEnd(d.exit, function() {
        s.safeSetState({
          status: Up
        }, function() {
          s.props.onExited(p);
        });
      });
    });
  }, n.cancelNextCallback = function() {
    this.nextCallback !== null && (this.nextCallback.cancel(), this.nextCallback = null);
  }, n.safeSetState = function(s, u) {
    u = this.setNextCallback(u), this.setState(s, u);
  }, n.setNextCallback = function(s) {
    var u = this, d = !0;
    return this.nextCallback = function(p) {
      d && (d = !1, u.nextCallback = null, s(p));
    }, this.nextCallback.cancel = function() {
      d = !1;
    }, this.nextCallback;
  }, n.onTransitionEnd = function(s, u) {
    this.setNextCallback(u);
    var d = this.props.nodeRef ? this.props.nodeRef.current : Hx.findDOMNode(this), p = s == null && !this.props.addEndListener;
    if (!d || p) {
      setTimeout(this.nextCallback, 0);
      return;
    }
    if (this.props.addEndListener) {
      var m = this.props.nodeRef ? [this.nextCallback] : [d, this.nextCallback], v = m[0], y = m[1];
      this.props.addEndListener(v, y);
    }
    s != null && setTimeout(this.nextCallback, s);
  }, n.render = function() {
    var s = this.state.status;
    if (s === Ab)
      return null;
    var u = this.props, d = u.children;
    u.in, u.mountOnEnter, u.unmountOnExit, u.appear, u.enter, u.exit, u.timeout, u.addEndListener, u.onEnter, u.onEntering, u.onEntered, u.onExit, u.onExiting, u.onExited, u.nodeRef;
    var p = Xt(u, ["children", "in", "mountOnEnter", "unmountOnExit", "appear", "enter", "exit", "timeout", "addEndListener", "onEnter", "onEntering", "onEntered", "onExit", "onExiting", "onExited", "nodeRef"]);
    return (
      // allows for nested Transitions
      /* @__PURE__ */ Cr.createElement(O0.Provider, {
        value: null
      }, typeof d == "function" ? d(s, p) : Cr.cloneElement(Cr.Children.only(d), p))
    );
  }, t;
}(Cr.Component);
Yu.contextType = O0;
Yu.propTypes = process.env.NODE_ENV !== "production" ? {
  /**
   * A React reference to DOM element that need to transition:
   * https://stackoverflow.com/a/51127130/4671932
   *
   *   - When `nodeRef` prop is used, `node` is not passed to callback functions
   *      (e.g. `onEnter`) because user already has direct access to the node.
   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new
   *     `nodeRef` need to be provided to `Transition` with changed `key` prop
   *     (see
   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).
   */
  nodeRef: a.shape({
    current: typeof Element > "u" ? a.any : function(e, t, n, i, s, u) {
      var d = e[t];
      return a.instanceOf(d && "ownerDocument" in d ? d.ownerDocument.defaultView.Element : Element)(e, t, n, i, s, u);
    }
  }),
  /**
   * A `function` child can be used instead of a React element. This function is
   * called with the current transition status (`'entering'`, `'entered'`,
   * `'exiting'`, `'exited'`), which can be used to apply context
   * specific props to a component.
   *
   * ```jsx
   * <Transition in={this.state.in} timeout={150}>
   *   {state => (
   *     <MyComponent className={`fade fade-${state}`} />
   *   )}
   * </Transition>
   * ```
   */
  children: a.oneOfType([a.func.isRequired, a.element.isRequired]).isRequired,
  /**
   * Show the component; triggers the enter or exit states
   */
  in: a.bool,
  /**
   * By default the child component is mounted immediately along with
   * the parent `Transition` component. If you want to "lazy mount" the component on the
   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay
   * mounted, even on "exited", unless you also specify `unmountOnExit`.
   */
  mountOnEnter: a.bool,
  /**
   * By default the child component stays mounted after it reaches the `'exited'` state.
   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.
   */
  unmountOnExit: a.bool,
  /**
   * By default the child component does not perform the enter transition when
   * it first mounts, regardless of the value of `in`. If you want this
   * behavior, set both `appear` and `in` to `true`.
   *
   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop
   * > only adds an additional enter transition. However, in the
   * > `<CSSTransition>` component that first enter transition does result in
   * > additional `.appear-*` classes, that way you can choose to style it
   * > differently.
   */
  appear: a.bool,
  /**
   * Enable or disable enter transitions.
   */
  enter: a.bool,
  /**
   * Enable or disable exit transitions.
   */
  exit: a.bool,
  /**
   * The duration of the transition, in milliseconds.
   * Required unless `addEndListener` is provided.
   *
   * You may specify a single timeout for all transitions:
   *
   * ```jsx
   * timeout={500}
   * ```
   *
   * or individually:
   *
   * ```jsx
   * timeout={{
   *  appear: 500,
   *  enter: 300,
   *  exit: 500,
   * }}
   * ```
   *
   * - `appear` defaults to the value of `enter`
   * - `enter` defaults to `0`
   * - `exit` defaults to `0`
   *
   * @type {number | { enter?: number, exit?: number, appear?: number }}
   */
  timeout: function(t) {
    var n = R8;
    t.addEndListener || (n = n.isRequired);
    for (var i = arguments.length, s = new Array(i > 1 ? i - 1 : 0), u = 1; u < i; u++)
      s[u - 1] = arguments[u];
    return n.apply(void 0, [t].concat(s));
  },
  /**
   * Add a custom transition end trigger. Called with the transitioning
   * DOM node and a `done` callback. Allows for more fine grained transition end
   * logic. Timeouts are still used as a fallback if provided.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * ```jsx
   * addEndListener={(node, done) => {
   *   // use the css transitionend event to mark the finish of a transition
   *   node.addEventListener('transitionend', done, false);
   * }}
   * ```
   */
  addEndListener: a.func,
  /**
   * Callback fired before the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEnter: a.func,
  /**
   * Callback fired after the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntering: a.func,
  /**
   * Callback fired after the "entered" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEntered: a.func,
  /**
   * Callback fired before the "exiting" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExit: a.func,
  /**
   * Callback fired after the "exiting" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExiting: a.func,
  /**
   * Callback fired after the "exited" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExited: a.func
} : {};
function ug() {
}
Yu.defaultProps = {
  in: !1,
  mountOnEnter: !1,
  unmountOnExit: !1,
  appear: !1,
  enter: !0,
  exit: !0,
  onEnter: ug,
  onEntering: ug,
  onEntered: ug,
  onExit: ug,
  onExiting: ug,
  onExited: ug
};
Yu.UNMOUNTED = Ab;
Yu.EXITED = Up;
Yu.ENTERING = Gp;
Yu.ENTERED = yg;
Yu.EXITING = gk;
function k8(e) {
  if (e === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return e;
}
function EP(e, t) {
  var n = function(u) {
    return t && S.isValidElement(u) ? t(u) : u;
  }, i = /* @__PURE__ */ Object.create(null);
  return e && S.Children.map(e, function(s) {
    return s;
  }).forEach(function(s) {
    i[s.key] = n(s);
  }), i;
}
function P8(e, t) {
  e = e || {}, t = t || {};
  function n(y) {
    return y in t ? t[y] : e[y];
  }
  var i = /* @__PURE__ */ Object.create(null), s = [];
  for (var u in e)
    u in t ? s.length && (i[u] = s, s = []) : s.push(u);
  var d, p = {};
  for (var m in t) {
    if (i[m])
      for (d = 0; d < i[m].length; d++) {
        var v = i[m][d];
        p[i[m][d]] = n(v);
      }
    p[m] = n(m);
  }
  for (d = 0; d < s.length; d++)
    p[s[d]] = n(s[d]);
  return p;
}
function Xp(e, t, n) {
  return n[t] != null ? n[t] : e.props[t];
}
function M8(e, t) {
  return EP(e.children, function(n) {
    return S.cloneElement(n, {
      onExited: t.bind(null, n),
      in: !0,
      appear: Xp(n, "appear", e),
      enter: Xp(n, "enter", e),
      exit: Xp(n, "exit", e)
    });
  });
}
function I8(e, t, n) {
  var i = EP(e.children), s = P8(t, i);
  return Object.keys(s).forEach(function(u) {
    var d = s[u];
    if (S.isValidElement(d)) {
      var p = u in t, m = u in i, v = t[u], y = S.isValidElement(v) && !v.props.in;
      m && (!p || y) ? s[u] = S.cloneElement(d, {
        onExited: n.bind(null, d),
        in: !0,
        exit: Xp(d, "exit", e),
        enter: Xp(d, "enter", e)
      }) : !m && p && !y ? s[u] = S.cloneElement(d, {
        in: !1
      }) : m && p && S.isValidElement(v) && (s[u] = S.cloneElement(d, {
        onExited: n.bind(null, d),
        in: v.props.in,
        exit: Xp(d, "exit", e),
        enter: Xp(d, "enter", e)
      }));
    }
  }), s;
}
var D8 = Object.values || function(e) {
  return Object.keys(e).map(function(t) {
    return e[t];
  });
}, N8 = {
  component: "div",
  childFactory: function(t) {
    return t;
  }
}, TP = /* @__PURE__ */ function(e) {
  uj(t, e);
  function t(i, s) {
    var u;
    u = e.call(this, i, s) || this;
    var d = u.handleExited.bind(k8(u));
    return u.state = {
      contextValue: {
        isMounting: !0
      },
      handleExited: d,
      firstRender: !0
    }, u;
  }
  var n = t.prototype;
  return n.componentDidMount = function() {
    this.mounted = !0, this.setState({
      contextValue: {
        isMounting: !1
      }
    });
  }, n.componentWillUnmount = function() {
    this.mounted = !1;
  }, t.getDerivedStateFromProps = function(s, u) {
    var d = u.children, p = u.handleExited, m = u.firstRender;
    return {
      children: m ? M8(s, p) : I8(s, d, p),
      firstRender: !1
    };
  }, n.handleExited = function(s, u) {
    var d = EP(this.props.children);
    s.key in d || (s.props.onExited && s.props.onExited(u), this.mounted && this.setState(function(p) {
      var m = J({}, p.children);
      return delete m[s.key], {
        children: m
      };
    }));
  }, n.render = function() {
    var s = this.props, u = s.component, d = s.childFactory, p = Xt(s, ["component", "childFactory"]), m = this.state.contextValue, v = D8(this.state.children).map(d);
    return delete p.appear, delete p.enter, delete p.exit, u === null ? /* @__PURE__ */ Cr.createElement(O0.Provider, {
      value: m
    }, v) : /* @__PURE__ */ Cr.createElement(O0.Provider, {
      value: m
    }, /* @__PURE__ */ Cr.createElement(u, p, v));
  }, t;
}(Cr.Component);
TP.propTypes = process.env.NODE_ENV !== "production" ? {
  /**
   * `<TransitionGroup>` renders a `<div>` by default. You can change this
   * behavior by providing a `component` prop.
   * If you use React v16+ and would like to avoid a wrapping `<div>` element
   * you can pass in `component={null}`. This is useful if the wrapping div
   * borks your css styles.
   */
  component: a.any,
  /**
   * A set of `<Transition>` components, that are toggled `in` and out as they
   * leave. the `<TransitionGroup>` will inject specific transition props, so
   * remember to spread them through if you are wrapping the `<Transition>` as
   * with our `<Fade>` example.
   *
   * While this component is meant for multiple `Transition` or `CSSTransition`
   * children, sometimes you may want to have a single transition child with
   * content that you want to be transitioned out and in when you change it
   * (e.g. routes, images etc.) In that case you can change the `key` prop of
   * the transition child as you change its content, this will cause
   * `TransitionGroup` to transition the child out and back in.
   */
  children: a.node,
  /**
   * A convenience prop that enables or disables appear animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  appear: a.bool,
  /**
   * A convenience prop that enables or disables enter animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  enter: a.bool,
  /**
   * A convenience prop that enables or disables exit animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  exit: a.bool,
  /**
   * You may need to apply reactive updates to a child as it is exiting.
   * This is generally done by using `cloneElement` however in the case of an exiting
   * child the element has already been removed and not accessible to the consumer.
   *
   * If you do need to update a child as it leaves you can provide a `childFactory`
   * to wrap every child, even the ones that are leaving.
   *
   * @type Function(child: ReactElement) -> ReactElement
   */
  childFactory: a.func
} : {};
TP.defaultProps = N8;
const cj = (e) => e.scrollTop;
function k0(e, t) {
  const {
    timeout: n,
    easing: i,
    style: s = {}
  } = e;
  return {
    duration: s.transitionDuration ?? (typeof n == "number" ? n : n[t.mode] || 0),
    easing: s.transitionTimingFunction ?? (typeof i == "object" ? i[t.mode] : i),
    delay: s.transitionDelay
  };
}
function L8(e) {
  return yn("MuiPaper", e);
}
bn("MuiPaper", ["root", "rounded", "outlined", "elevation", "elevation0", "elevation1", "elevation2", "elevation3", "elevation4", "elevation5", "elevation6", "elevation7", "elevation8", "elevation9", "elevation10", "elevation11", "elevation12", "elevation13", "elevation14", "elevation15", "elevation16", "elevation17", "elevation18", "elevation19", "elevation20", "elevation21", "elevation22", "elevation23", "elevation24"]);
const F8 = (e) => {
  const {
    square: t,
    elevation: n,
    variant: i,
    classes: s
  } = e, u = {
    root: ["root", i, !t && "rounded", i === "elevation" && `elevation${n}`]
  };
  return yt(u, L8, s);
}, _8 = Ue("div", {
  name: "MuiPaper",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[n.variant], !n.square && t.rounded, n.variant === "elevation" && t[`elevation${n.elevation}`]];
  }
})(rn(({
  theme: e
}) => ({
  backgroundColor: (e.vars || e).palette.background.paper,
  color: (e.vars || e).palette.text.primary,
  transition: e.transitions.create("box-shadow"),
  variants: [{
    props: ({
      ownerState: t
    }) => !t.square,
    style: {
      borderRadius: e.shape.borderRadius
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      border: `1px solid ${(e.vars || e).palette.divider}`
    }
  }, {
    props: {
      variant: "elevation"
    },
    style: {
      boxShadow: "var(--Paper-shadow)",
      backgroundImage: "var(--Paper-overlay)"
    }
  }]
}))), bs = /* @__PURE__ */ S.forwardRef(function(t, n) {
  var R;
  const i = Tn({
    props: t,
    name: "MuiPaper"
  }), s = ev(), {
    className: u,
    component: d = "div",
    elevation: p = 1,
    square: m = !1,
    variant: v = "elevation",
    ...y
  } = i, C = {
    ...i,
    component: d,
    elevation: p,
    square: m,
    variant: v
  }, w = F8(C);
  return process.env.NODE_ENV !== "production" && s.shadows[p] === void 0 && console.error([`MUI: The elevation provided <Paper elevation={${p}}> is not available in the theme.`, `Please make sure that \`theme.shadows[${p}]\` is defined.`].join(`
`)), /* @__PURE__ */ A.jsx(_8, {
    as: d,
    ownerState: C,
    className: nt(w.root, u),
    ref: n,
    ...y,
    style: {
      ...v === "elevation" && {
        "--Paper-shadow": (s.vars || s).shadows[p],
        ...s.vars && {
          "--Paper-overlay": (R = s.vars.overlays) == null ? void 0 : R[p]
        },
        ...!s.vars && s.palette.mode === "dark" && {
          "--Paper-overlay": `linear-gradient(${$n("#fff", hk(p))}, ${$n("#fff", hk(p))})`
        }
      },
      ...y.style
    }
  });
});
process.env.NODE_ENV !== "production" && (bs.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * Shadow depth, corresponds to `dp` in the spec.
   * It accepts values between 0 and 24 inclusive.
   * @default 1
   */
  elevation: Bl(Pg, (e) => {
    const {
      elevation: t,
      variant: n
    } = e;
    return t > 0 && n === "outlined" ? new Error(`MUI: Combining \`elevation={${t}}\` with \`variant="${n}"\` has no effect. Either use \`elevation={0}\` or use a different \`variant\`.`) : null;
  }),
  /**
   * If `true`, rounded corners are disabled.
   * @default false
   */
  square: a.bool,
  /**
   * @ignore
   */
  style: a.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The variant to use.
   * @default 'elevation'
   */
  variant: a.oneOfType([a.oneOf(["elevation", "outlined"]), a.string])
});
function vn(e, t) {
  const {
    className: n,
    elementType: i,
    ownerState: s,
    externalForwardedProps: u,
    internalForwardedProps: d,
    shouldForwardComponentProp: p = !1,
    ...m
  } = t, {
    component: v,
    slots: y = {
      [e]: void 0
    },
    slotProps: C = {
      [e]: void 0
    },
    ...w
  } = u, R = y[e] || i, O = K$(C[e], s), {
    props: {
      component: E,
      ...k
    },
    internalRef: L
  } = q$({
    className: n,
    ...m,
    externalForwardedProps: e === "root" ? w : void 0,
    externalSlotProps: O
  }), F = Vr(L, O == null ? void 0 : O.ref, t.ref), _ = e === "root" ? E || v : E, P = G$(R, {
    ...e === "root" && !v && !y[e] && d,
    ...e !== "root" && !y[e] && d,
    ...k,
    ..._ && !p && {
      as: _
    },
    ..._ && p && {
      component: _
    },
    ref: F
  }, s);
  return [R, P];
}
class P0 {
  constructor() {
    ku(this, "mountEffect", () => {
      this.shouldMount && !this.didMount && this.ref.current !== null && (this.didMount = !0, this.mounted.resolve());
    });
    this.ref = {
      current: null
    }, this.mounted = null, this.didMount = !1, this.shouldMount = !1, this.setShouldMount = null;
  }
  /** React ref to the ripple instance */
  /** If the ripple component should be mounted */
  /** Promise that resolves when the ripple component is mounted */
  /** If the ripple component has been mounted */
  /** React state hook setter */
  static create() {
    return new P0();
  }
  static use() {
    const t = al(P0.create).current, [n, i] = S.useState(!1);
    return t.shouldMount = n, t.setShouldMount = i, S.useEffect(t.mountEffect, [n]), t;
  }
  mount() {
    return this.mounted || (this.mounted = $8(), this.shouldMount = !0, this.setShouldMount(this.shouldMount)), this.mounted;
  }
  /* Ripple API */
  start(...t) {
    this.mount().then(() => {
      var n;
      return (n = this.ref.current) == null ? void 0 : n.start(...t);
    });
  }
  stop(...t) {
    this.mount().then(() => {
      var n;
      return (n = this.ref.current) == null ? void 0 : n.stop(...t);
    });
  }
  pulsate(...t) {
    this.mount().then(() => {
      var n;
      return (n = this.ref.current) == null ? void 0 : n.pulsate(...t);
    });
  }
}
function A8() {
  return P0.use();
}
function $8() {
  let e, t;
  const n = new Promise((i, s) => {
    e = i, t = s;
  });
  return n.resolve = e, n.reject = t, n;
}
function dj(e) {
  const {
    className: t,
    classes: n,
    pulsate: i = !1,
    rippleX: s,
    rippleY: u,
    rippleSize: d,
    in: p,
    onExited: m,
    timeout: v
  } = e, [y, C] = S.useState(!1), w = nt(t, n.ripple, n.rippleVisible, i && n.ripplePulsate), R = {
    width: d,
    height: d,
    top: -(d / 2) + u,
    left: -(d / 2) + s
  }, O = nt(n.child, y && n.childLeaving, i && n.childPulsate);
  return !p && !y && C(!0), S.useEffect(() => {
    if (!p && m != null) {
      const E = setTimeout(m, v);
      return () => {
        clearTimeout(E);
      };
    }
  }, [m, p, v]), /* @__PURE__ */ A.jsx("span", {
    className: w,
    style: R,
    children: /* @__PURE__ */ A.jsx("span", {
      className: O
    })
  });
}
process.env.NODE_ENV !== "production" && (dj.propTypes = {
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object.isRequired,
  className: a.string,
  /**
   * @ignore - injected from TransitionGroup
   */
  in: a.bool,
  /**
   * @ignore - injected from TransitionGroup
   */
  onExited: a.func,
  /**
   * If `true`, the ripple pulsates, typically indicating the keyboard focus state of an element.
   */
  pulsate: a.bool,
  /**
   * Diameter of the ripple.
   */
  rippleSize: a.number,
  /**
   * Horizontal position of the ripple center.
   */
  rippleX: a.number,
  /**
   * Vertical position of the ripple center.
   */
  rippleY: a.number,
  /**
   * exit delay
   */
  timeout: a.number.isRequired
});
const Ys = bn("MuiTouchRipple", ["root", "ripple", "rippleVisible", "ripplePulsate", "child", "childLeaving", "childPulsate"]), vk = 550, j8 = 80, z8 = Ku`
  0% {
    transform: scale(0);
    opacity: 0.1;
  }

  100% {
    transform: scale(1);
    opacity: 0.3;
  }
`, H8 = Ku`
  0% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
`, V8 = Ku`
  0% {
    transform: scale(1);
  }

  50% {
    transform: scale(0.92);
  }

  100% {
    transform: scale(1);
  }
`, B8 = Ue("span", {
  name: "MuiTouchRipple",
  slot: "Root"
})({
  overflow: "hidden",
  pointerEvents: "none",
  position: "absolute",
  zIndex: 0,
  top: 0,
  right: 0,
  bottom: 0,
  left: 0,
  borderRadius: "inherit"
}), U8 = Ue(dj, {
  name: "MuiTouchRipple",
  slot: "Ripple"
})`
  opacity: 0;
  position: absolute;

  &.${Ys.rippleVisible} {
    opacity: 0.3;
    transform: scale(1);
    animation-name: ${z8};
    animation-duration: ${vk}ms;
    animation-timing-function: ${({
  theme: e
}) => e.transitions.easing.easeInOut};
  }

  &.${Ys.ripplePulsate} {
    animation-duration: ${({
  theme: e
}) => e.transitions.duration.shorter}ms;
  }

  & .${Ys.child} {
    opacity: 1;
    display: block;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    background-color: currentColor;
  }

  & .${Ys.childLeaving} {
    opacity: 0;
    animation-name: ${H8};
    animation-duration: ${vk}ms;
    animation-timing-function: ${({
  theme: e
}) => e.transitions.easing.easeInOut};
  }

  & .${Ys.childPulsate} {
    position: absolute;
    /* @noflip */
    left: 0px;
    top: 0;
    animation-name: ${V8};
    animation-duration: 2500ms;
    animation-timing-function: ${({
  theme: e
}) => e.transitions.easing.easeInOut};
    animation-iteration-count: infinite;
    animation-delay: 200ms;
  }
`, fj = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const i = Tn({
    props: t,
    name: "MuiTouchRipple"
  }), {
    center: s = !1,
    classes: u = {},
    className: d,
    ...p
  } = i, [m, v] = S.useState([]), y = S.useRef(0), C = S.useRef(null);
  S.useEffect(() => {
    C.current && (C.current(), C.current = null);
  }, [m]);
  const w = S.useRef(!1), R = ps(), O = S.useRef(null), E = S.useRef(null), k = S.useCallback((P) => {
    const {
      pulsate: D,
      rippleX: z,
      rippleY: K,
      rippleSize: Q,
      cb: H
    } = P;
    v((I) => [...I, /* @__PURE__ */ A.jsx(U8, {
      classes: {
        ripple: nt(u.ripple, Ys.ripple),
        rippleVisible: nt(u.rippleVisible, Ys.rippleVisible),
        ripplePulsate: nt(u.ripplePulsate, Ys.ripplePulsate),
        child: nt(u.child, Ys.child),
        childLeaving: nt(u.childLeaving, Ys.childLeaving),
        childPulsate: nt(u.childPulsate, Ys.childPulsate)
      },
      timeout: vk,
      pulsate: D,
      rippleX: z,
      rippleY: K,
      rippleSize: Q
    }, y.current)]), y.current += 1, C.current = H;
  }, [u]), L = S.useCallback((P = {}, D = {}, z = () => {
  }) => {
    const {
      pulsate: K = !1,
      center: Q = s || D.pulsate,
      fakeElement: H = !1
      // For test purposes
    } = D;
    if ((P == null ? void 0 : P.type) === "mousedown" && w.current) {
      w.current = !1;
      return;
    }
    (P == null ? void 0 : P.type) === "touchstart" && (w.current = !0);
    const I = H ? null : E.current, U = I ? I.getBoundingClientRect() : {
      width: 0,
      height: 0,
      left: 0,
      top: 0
    };
    let G, Y, te;
    if (Q || P === void 0 || P.clientX === 0 && P.clientY === 0 || !P.clientX && !P.touches)
      G = Math.round(U.width / 2), Y = Math.round(U.height / 2);
    else {
      const {
        clientX: B,
        clientY: W
      } = P.touches && P.touches.length > 0 ? P.touches[0] : P;
      G = Math.round(B - U.left), Y = Math.round(W - U.top);
    }
    if (Q)
      te = Math.sqrt((2 * U.width ** 2 + U.height ** 2) / 3), te % 2 === 0 && (te += 1);
    else {
      const B = Math.max(Math.abs((I ? I.clientWidth : 0) - G), G) * 2 + 2, W = Math.max(Math.abs((I ? I.clientHeight : 0) - Y), Y) * 2 + 2;
      te = Math.sqrt(B ** 2 + W ** 2);
    }
    P != null && P.touches ? O.current === null && (O.current = () => {
      k({
        pulsate: K,
        rippleX: G,
        rippleY: Y,
        rippleSize: te,
        cb: z
      });
    }, R.start(j8, () => {
      O.current && (O.current(), O.current = null);
    })) : k({
      pulsate: K,
      rippleX: G,
      rippleY: Y,
      rippleSize: te,
      cb: z
    });
  }, [s, k, R]), F = S.useCallback(() => {
    L({}, {
      pulsate: !0
    });
  }, [L]), _ = S.useCallback((P, D) => {
    if (R.clear(), (P == null ? void 0 : P.type) === "touchend" && O.current) {
      O.current(), O.current = null, R.start(0, () => {
        _(P, D);
      });
      return;
    }
    O.current = null, v((z) => z.length > 0 ? z.slice(1) : z), C.current = D;
  }, [R]);
  return S.useImperativeHandle(n, () => ({
    pulsate: F,
    start: L,
    stop: _
  }), [F, L, _]), /* @__PURE__ */ A.jsx(B8, {
    className: nt(Ys.root, u.root, d),
    ref: E,
    ...p,
    children: /* @__PURE__ */ A.jsx(TP, {
      component: null,
      exit: !0,
      children: m
    })
  });
});
process.env.NODE_ENV !== "production" && (fj.propTypes = {
  /**
   * If `true`, the ripple starts at the center of the component
   * rather than at the point of interaction.
   */
  center: a.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string
});
function G8(e) {
  return yn("MuiButtonBase", e);
}
const W8 = bn("MuiButtonBase", ["root", "disabled", "focusVisible"]), q8 = (e) => {
  const {
    disabled: t,
    focusVisible: n,
    focusVisibleClassName: i,
    classes: s
  } = e, d = yt({
    root: ["root", t && "disabled", n && "focusVisible"]
  }, G8, s);
  return n && i && (d.root += ` ${i}`), d;
}, K8 = Ue("button", {
  name: "MuiButtonBase",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({
  display: "inline-flex",
  alignItems: "center",
  justifyContent: "center",
  position: "relative",
  boxSizing: "border-box",
  WebkitTapHighlightColor: "transparent",
  backgroundColor: "transparent",
  // Reset default value
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0,
  border: 0,
  margin: 0,
  // Remove the margin in Safari
  borderRadius: 0,
  padding: 0,
  // Remove the padding in Firefox
  cursor: "pointer",
  userSelect: "none",
  verticalAlign: "middle",
  MozAppearance: "none",
  // Reset
  WebkitAppearance: "none",
  // Reset
  textDecoration: "none",
  // So we take precedent over the style of a native <a /> element.
  color: "inherit",
  "&::-moz-focus-inner": {
    borderStyle: "none"
    // Remove Firefox dotted outline.
  },
  [`&.${W8.disabled}`]: {
    pointerEvents: "none",
    // Disable link interactions
    cursor: "default"
  },
  "@media print": {
    colorAdjust: "exact"
  }
}), Kc = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const i = Tn({
    props: t,
    name: "MuiButtonBase"
  }), {
    action: s,
    centerRipple: u = !1,
    children: d,
    className: p,
    component: m = "button",
    disabled: v = !1,
    disableRipple: y = !1,
    disableTouchRipple: C = !1,
    focusRipple: w = !1,
    focusVisibleClassName: R,
    LinkComponent: O = "a",
    onBlur: E,
    onClick: k,
    onContextMenu: L,
    onDragLeave: F,
    onFocus: _,
    onFocusVisible: P,
    onKeyDown: D,
    onKeyUp: z,
    onMouseDown: K,
    onMouseLeave: Q,
    onMouseUp: H,
    onTouchEnd: I,
    onTouchMove: U,
    onTouchStart: G,
    tabIndex: Y = 0,
    TouchRippleProps: te,
    touchRippleRef: B,
    type: W,
    ...q
  } = i, ne = S.useRef(null), re = A8(), X = Vr(re.ref, B), [j, ie] = S.useState(!1);
  v && j && ie(!1), S.useImperativeHandle(s, () => ({
    focusVisible: () => {
      ie(!0), ne.current.focus();
    }
  }), []);
  const fe = re.shouldMount && !y && !v;
  S.useEffect(() => {
    j && w && !y && re.pulsate();
  }, [y, w, j, re]);
  const ce = zc(re, "start", K, C), me = zc(re, "stop", L, C), ge = zc(re, "stop", F, C), de = zc(re, "stop", H, C), pe = zc(re, "stop", (ot) => {
    j && ot.preventDefault(), Q && Q(ot);
  }, C), be = zc(re, "start", G, C), Ce = zc(re, "stop", I, C), Re = zc(re, "stop", U, C), ue = zc(re, "stop", (ot) => {
    E0(ot.target) || ie(!1), E && E(ot);
  }, !1), we = Nn((ot) => {
    ne.current || (ne.current = ot.currentTarget), E0(ot.target) && (ie(!0), P && P(ot)), _ && _(ot);
  }), _e = () => {
    const ot = ne.current;
    return m && m !== "button" && !(ot.tagName === "A" && ot.href);
  }, He = Nn((ot) => {
    w && !ot.repeat && j && ot.key === " " && re.stop(ot, () => {
      re.start(ot);
    }), ot.target === ot.currentTarget && _e() && ot.key === " " && ot.preventDefault(), D && D(ot), ot.target === ot.currentTarget && _e() && ot.key === "Enter" && !v && (ot.preventDefault(), k && k(ot));
  }), et = Nn((ot) => {
    w && ot.key === " " && j && !ot.defaultPrevented && re.stop(ot, () => {
      re.pulsate(ot);
    }), z && z(ot), k && ot.target === ot.currentTarget && _e() && ot.key === " " && !ot.defaultPrevented && k(ot);
  });
  let Ne = m;
  Ne === "button" && (q.href || q.to) && (Ne = O);
  const rt = {};
  Ne === "button" ? (rt.type = W === void 0 ? "button" : W, rt.disabled = v) : (!q.href && !q.to && (rt.role = "button"), v && (rt["aria-disabled"] = v));
  const it = Vr(n, ne), wt = {
    ...i,
    centerRipple: u,
    component: m,
    disabled: v,
    disableRipple: y,
    disableTouchRipple: C,
    focusRipple: w,
    tabIndex: Y,
    focusVisible: j
  }, gt = q8(wt);
  return /* @__PURE__ */ A.jsxs(K8, {
    as: Ne,
    className: nt(gt.root, p),
    ownerState: wt,
    onBlur: ue,
    onClick: k,
    onContextMenu: me,
    onFocus: we,
    onKeyDown: He,
    onKeyUp: et,
    onMouseDown: ce,
    onMouseLeave: pe,
    onMouseUp: de,
    onDragLeave: ge,
    onTouchEnd: Ce,
    onTouchMove: Re,
    onTouchStart: be,
    ref: it,
    tabIndex: v ? -1 : Y,
    type: W,
    ...rt,
    ...q,
    children: [d, fe ? /* @__PURE__ */ A.jsx(fj, {
      ref: X,
      center: u,
      ...te
    }) : null]
  });
});
function zc(e, t, n, i = !1) {
  return Nn((s) => (n && n(s), i || e[t](s), !0));
}
process.env.NODE_ENV !== "production" && (Kc.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A ref for imperative actions.
   * It currently only supports `focusVisible()` action.
   */
  action: Ea,
  /**
   * If `true`, the ripples are centered.
   * They won't start at the cursor interaction position.
   * @default false
   */
  centerRipple: a.bool,
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: hP,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: a.bool,
  /**
   * If `true`, the ripple effect is disabled.
   *
   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
   * @default false
   */
  disableRipple: a.bool,
  /**
   * If `true`, the touch ripple effect is disabled.
   * @default false
   */
  disableTouchRipple: a.bool,
  /**
   * If `true`, the base button will have a keyboard focus ripple.
   * @default false
   */
  focusRipple: a.bool,
  /**
   * This prop can help identify which element has keyboard focus.
   * The class name will be applied when the element gains the focus through keyboard interaction.
   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).
   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).
   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components
   * if needed.
   */
  focusVisibleClassName: a.string,
  /**
   * @ignore
   */
  href: a.any,
  /**
   * The component used to render a link when the `href` prop is provided.
   * @default 'a'
   */
  LinkComponent: a.elementType,
  /**
   * @ignore
   */
  onBlur: a.func,
  /**
   * @ignore
   */
  onClick: a.func,
  /**
   * @ignore
   */
  onContextMenu: a.func,
  /**
   * @ignore
   */
  onDragLeave: a.func,
  /**
   * @ignore
   */
  onFocus: a.func,
  /**
   * Callback fired when the component is focused with a keyboard.
   * We trigger a `onFocus` callback too.
   */
  onFocusVisible: a.func,
  /**
   * @ignore
   */
  onKeyDown: a.func,
  /**
   * @ignore
   */
  onKeyUp: a.func,
  /**
   * @ignore
   */
  onMouseDown: a.func,
  /**
   * @ignore
   */
  onMouseLeave: a.func,
  /**
   * @ignore
   */
  onMouseUp: a.func,
  /**
   * @ignore
   */
  onTouchEnd: a.func,
  /**
   * @ignore
   */
  onTouchMove: a.func,
  /**
   * @ignore
   */
  onTouchStart: a.func,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * @default 0
   */
  tabIndex: a.number,
  /**
   * Props applied to the `TouchRipple` element.
   */
  TouchRippleProps: a.object,
  /**
   * A ref that points to the `TouchRipple` element.
   */
  touchRippleRef: a.oneOfType([a.func, a.shape({
    current: a.shape({
      pulsate: a.func.isRequired,
      start: a.func.isRequired,
      stop: a.func.isRequired
    })
  })]),
  /**
   * @ignore
   */
  type: a.oneOfType([a.oneOf(["button", "reset", "submit"]), a.string])
});
function Y8(e) {
  return typeof e.main == "string";
}
function X8(e, t = []) {
  if (!Y8(e))
    return !1;
  for (const n of t)
    if (!e.hasOwnProperty(n) || typeof e[n] != "string")
      return !1;
  return !0;
}
function to(e = []) {
  return ([, t]) => t && X8(t, e);
}
function Q8(e) {
  return yn("MuiAlert", e);
}
const pF = bn("MuiAlert", ["root", "action", "icon", "message", "filled", "colorSuccess", "colorInfo", "colorWarning", "colorError", "filledSuccess", "filledInfo", "filledWarning", "filledError", "outlined", "outlinedSuccess", "outlinedInfo", "outlinedWarning", "outlinedError", "standard", "standardSuccess", "standardInfo", "standardWarning", "standardError"]);
function J8(e) {
  return yn("MuiCircularProgress", e);
}
bn("MuiCircularProgress", ["root", "determinate", "indeterminate", "colorPrimary", "colorSecondary", "svg", "circle", "circleDeterminate", "circleIndeterminate", "circleDisableShrink"]);
const Qd = 44, yk = Ku`
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
`, bk = Ku`
  0% {
    stroke-dasharray: 1px, 200px;
    stroke-dashoffset: 0;
  }

  50% {
    stroke-dasharray: 100px, 200px;
    stroke-dashoffset: -15px;
  }

  100% {
    stroke-dasharray: 1px, 200px;
    stroke-dashoffset: -126px;
  }
`, Z8 = typeof yk != "string" ? wf`
        animation: ${yk} 1.4s linear infinite;
      ` : null, e9 = typeof bk != "string" ? wf`
        animation: ${bk} 1.4s ease-in-out infinite;
      ` : null, t9 = (e) => {
  const {
    classes: t,
    variant: n,
    color: i,
    disableShrink: s
  } = e, u = {
    root: ["root", n, `color${Be(i)}`],
    svg: ["svg"],
    circle: ["circle", `circle${Be(n)}`, s && "circleDisableShrink"]
  };
  return yt(u, J8, t);
}, n9 = Ue("span", {
  name: "MuiCircularProgress",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[n.variant], t[`color${Be(n.color)}`]];
  }
})(rn(({
  theme: e
}) => ({
  display: "inline-block",
  variants: [{
    props: {
      variant: "determinate"
    },
    style: {
      transition: e.transitions.create("transform")
    }
  }, {
    props: {
      variant: "indeterminate"
    },
    style: Z8 || {
      animation: `${yk} 1.4s linear infinite`
    }
  }, ...Object.entries(e.palette).filter(to()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      color: (e.vars || e).palette[t].main
    }
  }))]
}))), r9 = Ue("svg", {
  name: "MuiCircularProgress",
  slot: "Svg",
  overridesResolver: (e, t) => t.svg
})({
  display: "block"
  // Keeps the progress centered
}), o9 = Ue("circle", {
  name: "MuiCircularProgress",
  slot: "Circle",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.circle, t[`circle${Be(n.variant)}`], n.disableShrink && t.circleDisableShrink];
  }
})(rn(({
  theme: e
}) => ({
  stroke: "currentColor",
  variants: [{
    props: {
      variant: "determinate"
    },
    style: {
      transition: e.transitions.create("stroke-dashoffset")
    }
  }, {
    props: {
      variant: "indeterminate"
    },
    style: {
      // Some default value that looks fine waiting for the animation to kicks in.
      strokeDasharray: "80px, 200px",
      strokeDashoffset: 0
      // Add the unit to fix a Edge 16 and below bug.
    }
  }, {
    props: ({
      ownerState: t
    }) => t.variant === "indeterminate" && !t.disableShrink,
    style: e9 || {
      // At runtime for Pigment CSS, `bufferAnimation` will be null and the generated keyframe will be used.
      animation: `${bk} 1.4s ease-in-out infinite`
    }
  }]
}))), wE = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const i = Tn({
    props: t,
    name: "MuiCircularProgress"
  }), {
    className: s,
    color: u = "primary",
    disableShrink: d = !1,
    size: p = 40,
    style: m,
    thickness: v = 3.6,
    value: y = 0,
    variant: C = "indeterminate",
    ...w
  } = i, R = {
    ...i,
    color: u,
    disableShrink: d,
    size: p,
    thickness: v,
    value: y,
    variant: C
  }, O = t9(R), E = {}, k = {}, L = {};
  if (C === "determinate") {
    const F = 2 * Math.PI * ((Qd - v) / 2);
    E.strokeDasharray = F.toFixed(3), L["aria-valuenow"] = Math.round(y), E.strokeDashoffset = `${((100 - y) / 100 * F).toFixed(3)}px`, k.transform = "rotate(-90deg)";
  }
  return /* @__PURE__ */ A.jsx(n9, {
    className: nt(O.root, s),
    style: {
      width: p,
      height: p,
      ...k,
      ...m
    },
    ownerState: R,
    ref: n,
    role: "progressbar",
    ...L,
    ...w,
    children: /* @__PURE__ */ A.jsx(r9, {
      className: O.svg,
      ownerState: R,
      viewBox: `${Qd / 2} ${Qd / 2} ${Qd} ${Qd}`,
      children: /* @__PURE__ */ A.jsx(o9, {
        className: O.circle,
        style: E,
        ownerState: R,
        cx: Qd,
        cy: Qd,
        r: (Qd - v) / 2,
        fill: "none",
        strokeWidth: v
      })
    })
  });
});
process.env.NODE_ENV !== "production" && (wE.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: a.oneOfType([a.oneOf(["inherit", "primary", "secondary", "error", "info", "success", "warning"]), a.string]),
  /**
   * If `true`, the shrink animation is disabled.
   * This only works if variant is `indeterminate`.
   * @default false
   */
  disableShrink: Bl(a.bool, (e) => e.disableShrink && e.variant && e.variant !== "indeterminate" ? new Error("MUI: You have provided the `disableShrink` prop with a variant other than `indeterminate`. This will have no effect.") : null),
  /**
   * The size of the component.
   * If using a number, the pixel unit is assumed.
   * If using a string, you need to provide the CSS unit, for example '3rem'.
   * @default 40
   */
  size: a.oneOfType([a.number, a.string]),
  /**
   * @ignore
   */
  style: a.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The thickness of the circle.
   * @default 3.6
   */
  thickness: a.number,
  /**
   * The value of the progress indicator for the determinate variant.
   * Value between 0 and 100.
   * @default 0
   */
  value: a.number,
  /**
   * The variant to use.
   * Use indeterminate when there is no progress value.
   * @default 'indeterminate'
   */
  variant: a.oneOf(["determinate", "indeterminate"])
});
function i9(e) {
  return yn("MuiIconButton", e);
}
const hF = bn("MuiIconButton", ["root", "disabled", "colorInherit", "colorPrimary", "colorSecondary", "colorError", "colorInfo", "colorSuccess", "colorWarning", "edgeStart", "edgeEnd", "sizeSmall", "sizeMedium", "sizeLarge", "loading", "loadingIndicator", "loadingWrapper"]), a9 = (e) => {
  const {
    classes: t,
    disabled: n,
    color: i,
    edge: s,
    size: u,
    loading: d
  } = e, p = {
    root: ["root", d && "loading", n && "disabled", i !== "default" && `color${Be(i)}`, s && `edge${Be(s)}`, `size${Be(u)}`],
    loadingIndicator: ["loadingIndicator"],
    loadingWrapper: ["loadingWrapper"]
  };
  return yt(p, i9, t);
}, s9 = Ue(Kc, {
  name: "MuiIconButton",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.loading && t.loading, n.color !== "default" && t[`color${Be(n.color)}`], n.edge && t[`edge${Be(n.edge)}`], t[`size${Be(n.size)}`]];
  }
})(rn(({
  theme: e
}) => ({
  textAlign: "center",
  flex: "0 0 auto",
  fontSize: e.typography.pxToRem(24),
  padding: 8,
  borderRadius: "50%",
  color: (e.vars || e).palette.action.active,
  transition: e.transitions.create("background-color", {
    duration: e.transitions.duration.shortest
  }),
  variants: [{
    props: (t) => !t.disableRipple,
    style: {
      "--IconButton-hoverBg": e.vars ? `rgba(${e.vars.palette.action.activeChannel} / ${e.vars.palette.action.hoverOpacity})` : $n(e.palette.action.active, e.palette.action.hoverOpacity),
      "&:hover": {
        backgroundColor: "var(--IconButton-hoverBg)",
        // Reset on touch devices, it doesn't add specificity
        "@media (hover: none)": {
          backgroundColor: "transparent"
        }
      }
    }
  }, {
    props: {
      edge: "start"
    },
    style: {
      marginLeft: -12
    }
  }, {
    props: {
      edge: "start",
      size: "small"
    },
    style: {
      marginLeft: -3
    }
  }, {
    props: {
      edge: "end"
    },
    style: {
      marginRight: -12
    }
  }, {
    props: {
      edge: "end",
      size: "small"
    },
    style: {
      marginRight: -3
    }
  }]
})), rn(({
  theme: e
}) => ({
  variants: [{
    props: {
      color: "inherit"
    },
    style: {
      color: "inherit"
    }
  }, ...Object.entries(e.palette).filter(to()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      color: (e.vars || e).palette[t].main
    }
  })), ...Object.entries(e.palette).filter(to()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      "--IconButton-hoverBg": e.vars ? `rgba(${(e.vars || e).palette[t].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : $n((e.vars || e).palette[t].main, e.palette.action.hoverOpacity)
    }
  })), {
    props: {
      size: "small"
    },
    style: {
      padding: 5,
      fontSize: e.typography.pxToRem(18)
    }
  }, {
    props: {
      size: "large"
    },
    style: {
      padding: 12,
      fontSize: e.typography.pxToRem(28)
    }
  }],
  [`&.${hF.disabled}`]: {
    backgroundColor: "transparent",
    color: (e.vars || e).palette.action.disabled
  },
  [`&.${hF.loading}`]: {
    color: "transparent"
  }
}))), l9 = Ue("span", {
  name: "MuiIconButton",
  slot: "LoadingIndicator",
  overridesResolver: (e, t) => t.loadingIndicator
})(({
  theme: e
}) => ({
  display: "none",
  position: "absolute",
  visibility: "visible",
  top: "50%",
  left: "50%",
  transform: "translate(-50%, -50%)",
  color: (e.vars || e).palette.action.disabled,
  variants: [{
    props: {
      loading: !0
    },
    style: {
      display: "flex"
    }
  }]
})), Uc = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const i = Tn({
    props: t,
    name: "MuiIconButton"
  }), {
    edge: s = !1,
    children: u,
    className: d,
    color: p = "default",
    disabled: m = !1,
    disableFocusRipple: v = !1,
    size: y = "medium",
    id: C,
    loading: w = null,
    loadingIndicator: R,
    ...O
  } = i, E = Sr(C), k = R ?? /* @__PURE__ */ A.jsx(wE, {
    "aria-labelledby": E,
    color: "inherit",
    size: 16
  }), L = {
    ...i,
    edge: s,
    color: p,
    disabled: m,
    disableFocusRipple: v,
    loading: w,
    loadingIndicator: k,
    size: y
  }, F = a9(L);
  return /* @__PURE__ */ A.jsxs(s9, {
    id: w ? E : C,
    className: nt(F.root, d),
    centerRipple: !0,
    focusRipple: !v,
    disabled: m || w,
    ref: n,
    ...O,
    ownerState: L,
    children: [typeof w == "boolean" && // use plain HTML span to minimize the runtime overhead
    /* @__PURE__ */ A.jsx("span", {
      className: F.loadingWrapper,
      style: {
        display: "contents"
      },
      children: /* @__PURE__ */ A.jsx(l9, {
        className: F.loadingIndicator,
        ownerState: L,
        children: w && k
      })
    }), u]
  });
});
process.env.NODE_ENV !== "production" && (Uc.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The icon to display.
   */
  children: Bl(a.node, (e) => S.Children.toArray(e.children).some((n) => /* @__PURE__ */ S.isValidElement(n) && n.props.onClick) ? new Error(["MUI: You are providing an onClick event listener to a child of a button element.", "Prefer applying it to the IconButton directly.", "This guarantees that the whole <button> will be responsive to click events."].join(`
`)) : null),
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'default'
   */
  color: a.oneOfType([a.oneOf(["inherit", "default", "primary", "secondary", "error", "info", "success", "warning"]), a.string]),
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: a.bool,
  /**
   * If `true`, the  keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: a.bool,
  /**
   * If `true`, the ripple effect is disabled.
   *
   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
   * @default false
   */
  disableRipple: a.bool,
  /**
   * If given, uses a negative margin to counteract the padding on one
   * side (this is often helpful for aligning the left or right
   * side of the icon with content above or below, without ruining the border
   * size and shape).
   * @default false
   */
  edge: a.oneOf(["end", "start", !1]),
  /**
   * @ignore
   */
  id: a.string,
  /**
   * If `true`, the loading indicator is visible and the button is disabled.
   * If `true | false`, the loading wrapper is always rendered before the children to prevent [Google Translation Crash](https://github.com/mui/material-ui/issues/27853).
   * @default null
   */
  loading: a.bool,
  /**
   * Element placed before the children if the button is in loading state.
   * The node should contain an element with `role="progressbar"` with an accessible name.
   * By default, it renders a `CircularProgress` that is labeled by the button itself.
   * @default <CircularProgress color="inherit" size={16} />
   */
  loadingIndicator: a.node,
  /**
   * The size of the component.
   * `small` is equivalent to the dense button styling.
   * @default 'medium'
   */
  size: a.oneOfType([a.oneOf(["small", "medium", "large"]), a.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
const u9 = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z"
}), "SuccessOutlined"), c9 = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z"
}), "ReportProblemOutlined"), d9 = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
}), "ErrorOutline"), f9 = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20, 12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10, 10 0 0,0 12,2M11,17H13V11H11V17Z"
}), "InfoOutlined"), pj = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
}), "Close"), p9 = (e) => {
  const {
    variant: t,
    color: n,
    severity: i,
    classes: s
  } = e, u = {
    root: ["root", `color${Be(n || i)}`, `${t}${Be(n || i)}`, `${t}`],
    icon: ["icon"],
    message: ["message"],
    action: ["action"]
  };
  return yt(u, Q8, s);
}, h9 = Ue(bs, {
  name: "MuiAlert",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[n.variant], t[`${n.variant}${Be(n.color || n.severity)}`]];
  }
})(rn(({
  theme: e
}) => {
  const t = e.palette.mode === "light" ? yf : bf, n = e.palette.mode === "light" ? bf : yf;
  return {
    ...e.typography.body2,
    backgroundColor: "transparent",
    display: "flex",
    padding: "6px 16px",
    variants: [...Object.entries(e.palette).filter(to(["light"])).map(([i]) => ({
      props: {
        colorSeverity: i,
        variant: "standard"
      },
      style: {
        color: e.vars ? e.vars.palette.Alert[`${i}Color`] : t(e.palette[i].light, 0.6),
        backgroundColor: e.vars ? e.vars.palette.Alert[`${i}StandardBg`] : n(e.palette[i].light, 0.9),
        [`& .${pF.icon}`]: e.vars ? {
          color: e.vars.palette.Alert[`${i}IconColor`]
        } : {
          color: e.palette[i].main
        }
      }
    })), ...Object.entries(e.palette).filter(to(["light"])).map(([i]) => ({
      props: {
        colorSeverity: i,
        variant: "outlined"
      },
      style: {
        color: e.vars ? e.vars.palette.Alert[`${i}Color`] : t(e.palette[i].light, 0.6),
        border: `1px solid ${(e.vars || e).palette[i].light}`,
        [`& .${pF.icon}`]: e.vars ? {
          color: e.vars.palette.Alert[`${i}IconColor`]
        } : {
          color: e.palette[i].main
        }
      }
    })), ...Object.entries(e.palette).filter(to(["dark"])).map(([i]) => ({
      props: {
        colorSeverity: i,
        variant: "filled"
      },
      style: {
        fontWeight: e.typography.fontWeightMedium,
        ...e.vars ? {
          color: e.vars.palette.Alert[`${i}FilledColor`],
          backgroundColor: e.vars.palette.Alert[`${i}FilledBg`]
        } : {
          backgroundColor: e.palette.mode === "dark" ? e.palette[i].dark : e.palette[i].main,
          color: e.palette.getContrastText(e.palette[i].main)
        }
      }
    }))]
  };
})), m9 = Ue("div", {
  name: "MuiAlert",
  slot: "Icon",
  overridesResolver: (e, t) => t.icon
})({
  marginRight: 12,
  padding: "7px 0",
  display: "flex",
  fontSize: 22,
  opacity: 0.9
}), g9 = Ue("div", {
  name: "MuiAlert",
  slot: "Message",
  overridesResolver: (e, t) => t.message
})({
  padding: "8px 0",
  minWidth: 0,
  overflow: "auto"
}), v9 = Ue("div", {
  name: "MuiAlert",
  slot: "Action",
  overridesResolver: (e, t) => t.action
})({
  display: "flex",
  alignItems: "flex-start",
  padding: "4px 0 0 16px",
  marginLeft: "auto",
  marginRight: -8
}), mF = {
  success: /* @__PURE__ */ A.jsx(u9, {
    fontSize: "inherit"
  }),
  warning: /* @__PURE__ */ A.jsx(c9, {
    fontSize: "inherit"
  }),
  error: /* @__PURE__ */ A.jsx(d9, {
    fontSize: "inherit"
  }),
  info: /* @__PURE__ */ A.jsx(f9, {
    fontSize: "inherit"
  })
}, hj = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const i = Tn({
    props: t,
    name: "MuiAlert"
  }), {
    action: s,
    children: u,
    className: d,
    closeText: p = "Close",
    color: m,
    components: v = {},
    componentsProps: y = {},
    icon: C,
    iconMapping: w = mF,
    onClose: R,
    role: O = "alert",
    severity: E = "success",
    slotProps: k = {},
    slots: L = {},
    variant: F = "standard",
    ..._
  } = i, P = {
    ...i,
    color: m,
    severity: E,
    variant: F,
    colorSeverity: m || E
  }, D = p9(P), z = {
    slots: {
      closeButton: v.CloseButton,
      closeIcon: v.CloseIcon,
      ...L
    },
    slotProps: {
      ...y,
      ...k
    }
  }, [K, Q] = vn("root", {
    ref: n,
    shouldForwardComponentProp: !0,
    className: nt(D.root, d),
    elementType: h9,
    externalForwardedProps: {
      ...z,
      ..._
    },
    ownerState: P,
    additionalProps: {
      role: O,
      elevation: 0
    }
  }), [H, I] = vn("icon", {
    className: D.icon,
    elementType: m9,
    externalForwardedProps: z,
    ownerState: P
  }), [U, G] = vn("message", {
    className: D.message,
    elementType: g9,
    externalForwardedProps: z,
    ownerState: P
  }), [Y, te] = vn("action", {
    className: D.action,
    elementType: v9,
    externalForwardedProps: z,
    ownerState: P
  }), [B, W] = vn("closeButton", {
    elementType: Uc,
    externalForwardedProps: z,
    ownerState: P
  }), [q, ne] = vn("closeIcon", {
    elementType: pj,
    externalForwardedProps: z,
    ownerState: P
  });
  return /* @__PURE__ */ A.jsxs(K, {
    ...Q,
    children: [C !== !1 ? /* @__PURE__ */ A.jsx(H, {
      ...I,
      children: C || w[E] || mF[E]
    }) : null, /* @__PURE__ */ A.jsx(U, {
      ...G,
      children: u
    }), s != null ? /* @__PURE__ */ A.jsx(Y, {
      ...te,
      children: s
    }) : null, s == null && R ? /* @__PURE__ */ A.jsx(Y, {
      ...te,
      children: /* @__PURE__ */ A.jsx(B, {
        size: "small",
        "aria-label": p,
        title: p,
        color: "inherit",
        onClick: R,
        ...W,
        children: /* @__PURE__ */ A.jsx(q, {
          fontSize: "small",
          ...ne
        })
      })
    }) : null]
  });
});
process.env.NODE_ENV !== "production" && (hj.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The action to display. It renders after the message, at the end of the alert.
   */
  action: a.node,
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * Override the default label for the *close popup* icon button.
   *
   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).
   * @default 'Close'
   */
  closeText: a.string,
  /**
   * The color of the component. Unless provided, the value is taken from the `severity` prop.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   */
  color: a.oneOfType([a.oneOf(["error", "info", "success", "warning"]), a.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: a.shape({
    CloseButton: a.elementType,
    CloseIcon: a.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: a.shape({
    closeButton: a.object,
    closeIcon: a.object
  }),
  /**
   * Override the icon displayed before the children.
   * Unless provided, the icon is mapped to the value of the `severity` prop.
   * Set to `false` to remove the `icon`.
   */
  icon: a.node,
  /**
   * The component maps the `severity` prop to a range of different icons,
   * for instance success to `<SuccessOutlined>`.
   * If you wish to change this mapping, you can provide your own.
   * Alternatively, you can use the `icon` prop to override the icon displayed.
   */
  iconMapping: a.shape({
    error: a.node,
    info: a.node,
    success: a.node,
    warning: a.node
  }),
  /**
   * Callback fired when the component requests to be closed.
   * When provided and no `action` prop is set, a close icon button is displayed that triggers the callback when clicked.
   * @param {React.SyntheticEvent} event The event source of the callback.
   */
  onClose: a.func,
  /**
   * The ARIA role attribute of the element.
   * @default 'alert'
   */
  role: a.string,
  /**
   * The severity of the alert. This defines the color and icon used.
   * @default 'success'
   */
  severity: a.oneOfType([a.oneOf(["error", "info", "success", "warning"]), a.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    action: a.oneOfType([a.func, a.object]),
    closeButton: a.oneOfType([a.func, a.object]),
    closeIcon: a.oneOfType([a.func, a.object]),
    icon: a.oneOfType([a.func, a.object]),
    message: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    action: a.elementType,
    closeButton: a.elementType,
    closeIcon: a.elementType,
    icon: a.elementType,
    message: a.elementType,
    root: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The variant to use.
   * @default 'standard'
   */
  variant: a.oneOfType([a.oneOf(["filled", "outlined", "standard"]), a.string])
});
function y9(e) {
  return yn("MuiTypography", e);
}
const gF = bn("MuiTypography", ["root", "h1", "h2", "h3", "h4", "h5", "h6", "subtitle1", "subtitle2", "body1", "body2", "inherit", "button", "caption", "overline", "alignLeft", "alignRight", "alignCenter", "alignJustify", "noWrap", "gutterBottom", "paragraph"]), b9 = {
  primary: !0,
  secondary: !0,
  error: !0,
  info: !0,
  success: !0,
  warning: !0,
  textPrimary: !0,
  textSecondary: !0,
  textDisabled: !0
}, C9 = w8(), S9 = (e) => {
  const {
    align: t,
    gutterBottom: n,
    noWrap: i,
    paragraph: s,
    variant: u,
    classes: d
  } = e, p = {
    root: ["root", u, e.align !== "inherit" && `align${Be(t)}`, n && "gutterBottom", i && "noWrap", s && "paragraph"]
  };
  return yt(p, y9, d);
}, w9 = Ue("span", {
  name: "MuiTypography",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.variant && t[n.variant], n.align !== "inherit" && t[`align${Be(n.align)}`], n.noWrap && t.noWrap, n.gutterBottom && t.gutterBottom, n.paragraph && t.paragraph];
  }
})(rn(({
  theme: e
}) => {
  var t;
  return {
    margin: 0,
    variants: [{
      props: {
        variant: "inherit"
      },
      style: {
        // Some elements, like <button> on Chrome have default font that doesn't inherit, reset this.
        font: "inherit",
        lineHeight: "inherit",
        letterSpacing: "inherit"
      }
    }, ...Object.entries(e.typography).filter(([n, i]) => n !== "inherit" && i && typeof i == "object").map(([n, i]) => ({
      props: {
        variant: n
      },
      style: i
    })), ...Object.entries(e.palette).filter(to()).map(([n]) => ({
      props: {
        color: n
      },
      style: {
        color: (e.vars || e).palette[n].main
      }
    })), ...Object.entries(((t = e.palette) == null ? void 0 : t.text) || {}).filter(([, n]) => typeof n == "string").map(([n]) => ({
      props: {
        color: `text${Be(n)}`
      },
      style: {
        color: (e.vars || e).palette.text[n]
      }
    })), {
      props: ({
        ownerState: n
      }) => n.align !== "inherit",
      style: {
        textAlign: "var(--Typography-textAlign)"
      }
    }, {
      props: ({
        ownerState: n
      }) => n.noWrap,
      style: {
        overflow: "hidden",
        textOverflow: "ellipsis",
        whiteSpace: "nowrap"
      }
    }, {
      props: ({
        ownerState: n
      }) => n.gutterBottom,
      style: {
        marginBottom: "0.35em"
      }
    }, {
      props: ({
        ownerState: n
      }) => n.paragraph,
      style: {
        marginBottom: 16
      }
    }]
  };
})), vF = {
  h1: "h1",
  h2: "h2",
  h3: "h3",
  h4: "h4",
  h5: "h5",
  h6: "h6",
  subtitle1: "h6",
  subtitle2: "h6",
  body1: "p",
  body2: "p",
  inherit: "p"
}, bi = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const {
    color: i,
    ...s
  } = Tn({
    props: t,
    name: "MuiTypography"
  }), u = !b9[i], d = C9({
    ...s,
    ...u && {
      color: i
    }
  }), {
    align: p = "inherit",
    className: m,
    component: v,
    gutterBottom: y = !1,
    noWrap: C = !1,
    paragraph: w = !1,
    variant: R = "body1",
    variantMapping: O = vF,
    ...E
  } = d, k = {
    ...d,
    align: p,
    color: i,
    className: m,
    component: v,
    gutterBottom: y,
    noWrap: C,
    paragraph: w,
    variant: R,
    variantMapping: O
  }, L = v || (w ? "p" : O[R] || vF[R]) || "span", F = S9(k);
  return /* @__PURE__ */ A.jsx(w9, {
    as: L,
    ref: n,
    className: nt(F.root, m),
    ...E,
    ownerState: k,
    style: {
      ...p !== "inherit" && {
        "--Typography-textAlign": p
      },
      ...E.style
    }
  });
});
process.env.NODE_ENV !== "production" && (bi.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Set the text-align on the component.
   * @default 'inherit'
   */
  align: a.oneOf(["center", "inherit", "justify", "left", "right"]),
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   */
  color: a.oneOfType([a.oneOf(["primary", "secondary", "success", "error", "info", "warning", "textPrimary", "textSecondary", "textDisabled"]), a.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * If `true`, the text will have a bottom margin.
   * @default false
   */
  gutterBottom: a.bool,
  /**
   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.
   *
   * Note that text overflow can only happen with block or inline-block level elements
   * (the element needs to have a width in order to overflow).
   * @default false
   */
  noWrap: a.bool,
  /**
   * If `true`, the element will be a paragraph element.
   * @default false
   * @deprecated Use the `component` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  paragraph: a.bool,
  /**
   * @ignore
   */
  style: a.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * Applies the theme typography styles.
   * @default 'body1'
   */
  variant: a.oneOfType([a.oneOf(["body1", "body2", "button", "caption", "h1", "h2", "h3", "h4", "h5", "h6", "inherit", "overline", "subtitle1", "subtitle2"]), a.string]),
  /**
   * The component maps the variant prop to a range of different HTML element types.
   * For instance, subtitle1 to `<h6>`.
   * If you wish to change that mapping, you can provide your own.
   * Alternatively, you can use the `component` prop.
   * @default {
   *   h1: 'h1',
   *   h2: 'h2',
   *   h3: 'h3',
   *   h4: 'h4',
   *   h5: 'h5',
   *   h6: 'h6',
   *   subtitle1: 'h6',
   *   subtitle2: 'h6',
   *   body1: 'p',
   *   body2: 'p',
   *   inherit: 'p',
   * }
   */
  variantMapping: a.object
});
function x9(e) {
  return yn("MuiAppBar", e);
}
bn("MuiAppBar", ["root", "positionFixed", "positionAbsolute", "positionSticky", "positionStatic", "positionRelative", "colorDefault", "colorPrimary", "colorSecondary", "colorInherit", "colorTransparent", "colorError", "colorInfo", "colorSuccess", "colorWarning"]);
const E9 = (e) => {
  const {
    color: t,
    position: n,
    classes: i
  } = e, s = {
    root: ["root", `color${Be(t)}`, `position${Be(n)}`]
  };
  return yt(s, x9, i);
}, yF = (e, t) => e ? `${e == null ? void 0 : e.replace(")", "")}, ${t})` : t, T9 = Ue(bs, {
  name: "MuiAppBar",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[`position${Be(n.position)}`], t[`color${Be(n.color)}`]];
  }
})(rn(({
  theme: e
}) => ({
  display: "flex",
  flexDirection: "column",
  width: "100%",
  boxSizing: "border-box",
  // Prevent padding issue with the Modal and fixed positioned AppBar.
  flexShrink: 0,
  variants: [{
    props: {
      position: "fixed"
    },
    style: {
      position: "fixed",
      zIndex: (e.vars || e).zIndex.appBar,
      top: 0,
      left: "auto",
      right: 0,
      "@media print": {
        // Prevent the app bar to be visible on each printed page.
        position: "absolute"
      }
    }
  }, {
    props: {
      position: "absolute"
    },
    style: {
      position: "absolute",
      zIndex: (e.vars || e).zIndex.appBar,
      top: 0,
      left: "auto",
      right: 0
    }
  }, {
    props: {
      position: "sticky"
    },
    style: {
      position: "sticky",
      zIndex: (e.vars || e).zIndex.appBar,
      top: 0,
      left: "auto",
      right: 0
    }
  }, {
    props: {
      position: "static"
    },
    style: {
      position: "static"
    }
  }, {
    props: {
      position: "relative"
    },
    style: {
      position: "relative"
    }
  }, {
    props: {
      color: "inherit"
    },
    style: {
      "--AppBar-color": "inherit"
    }
  }, {
    props: {
      color: "default"
    },
    style: {
      "--AppBar-background": e.vars ? e.vars.palette.AppBar.defaultBg : e.palette.grey[100],
      "--AppBar-color": e.vars ? e.vars.palette.text.primary : e.palette.getContrastText(e.palette.grey[100]),
      ...e.applyStyles("dark", {
        "--AppBar-background": e.vars ? e.vars.palette.AppBar.defaultBg : e.palette.grey[900],
        "--AppBar-color": e.vars ? e.vars.palette.text.primary : e.palette.getContrastText(e.palette.grey[900])
      })
    }
  }, ...Object.entries(e.palette).filter(to(["contrastText"])).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      "--AppBar-background": (e.vars ?? e).palette[t].main,
      "--AppBar-color": (e.vars ?? e).palette[t].contrastText
    }
  })), {
    props: (t) => t.enableColorOnDark === !0 && !["inherit", "transparent"].includes(t.color),
    style: {
      backgroundColor: "var(--AppBar-background)",
      color: "var(--AppBar-color)"
    }
  }, {
    props: (t) => t.enableColorOnDark === !1 && !["inherit", "transparent"].includes(t.color),
    style: {
      backgroundColor: "var(--AppBar-background)",
      color: "var(--AppBar-color)",
      ...e.applyStyles("dark", {
        backgroundColor: e.vars ? yF(e.vars.palette.AppBar.darkBg, "var(--AppBar-background)") : null,
        color: e.vars ? yF(e.vars.palette.AppBar.darkColor, "var(--AppBar-color)") : null
      })
    }
  }, {
    props: {
      color: "transparent"
    },
    style: {
      "--AppBar-background": "transparent",
      "--AppBar-color": "inherit",
      backgroundColor: "var(--AppBar-background)",
      color: "var(--AppBar-color)",
      ...e.applyStyles("dark", {
        backgroundImage: "none"
      })
    }
  }]
}))), mj = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const i = Tn({
    props: t,
    name: "MuiAppBar"
  }), {
    className: s,
    color: u = "primary",
    enableColorOnDark: d = !1,
    position: p = "fixed",
    ...m
  } = i, v = {
    ...i,
    color: u,
    position: p,
    enableColorOnDark: d
  }, y = E9(v);
  return /* @__PURE__ */ A.jsx(T9, {
    square: !0,
    component: "header",
    ownerState: v,
    elevation: 4,
    className: nt(y.root, s, p === "fixed" && "mui-fixed"),
    ref: n,
    ...m
  });
});
process.env.NODE_ENV !== "production" && (mj.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: a.oneOfType([a.oneOf(["default", "inherit", "primary", "secondary", "transparent", "error", "info", "success", "warning"]), a.string]),
  /**
   * If true, the `color` prop is applied in dark mode.
   * @default false
   */
  enableColorOnDark: a.bool,
  /**
   * The positioning type. The behavior of the different options is described
   * [in the MDN web docs](https://developer.mozilla.org/en-US/docs/Web/CSS/position).
   * Note: `sticky` is not universally supported and will fall back to `static` when unavailable.
   * @default 'fixed'
   */
  position: a.oneOf(["absolute", "fixed", "relative", "static", "sticky"]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
function bF(e) {
  return e.normalize("NFD").replace(/[\u0300-\u036f]/g, "");
}
function gj(e = {}) {
  const {
    ignoreAccents: t = !0,
    ignoreCase: n = !0,
    limit: i,
    matchFrom: s = "any",
    stringify: u,
    trim: d = !1
  } = e;
  return (p, {
    inputValue: m,
    getOptionLabel: v
  }) => {
    let y = d ? m.trim() : m;
    n && (y = y.toLowerCase()), t && (y = bF(y));
    const C = y ? p.filter((w) => {
      let R = (u || v)(w);
      return n && (R = R.toLowerCase()), t && (R = bF(R)), s === "start" ? R.startsWith(y) : R.includes(y);
    }) : p;
    return typeof i == "number" ? C.slice(0, i) : C;
  };
}
const R9 = gj(), CF = 5, O9 = (e) => {
  var t;
  return e.current !== null && ((t = e.current.parentElement) == null ? void 0 : t.contains(document.activeElement));
}, k9 = [];
function SF(e, t, n) {
  if (t || e == null)
    return "";
  const i = n(e);
  return typeof i == "string" ? i : "";
}
function P9(e) {
  const {
    // eslint-disable-next-line @typescript-eslint/naming-convention
    unstable_isActiveElementInListbox: t = O9,
    // eslint-disable-next-line @typescript-eslint/naming-convention
    unstable_classNamePrefix: n = "Mui",
    autoComplete: i = !1,
    autoHighlight: s = !1,
    autoSelect: u = !1,
    blurOnSelect: d = !1,
    clearOnBlur: p = !e.freeSolo,
    clearOnEscape: m = !1,
    componentName: v = "useAutocomplete",
    defaultValue: y = e.multiple ? k9 : null,
    disableClearable: C = !1,
    disableCloseOnSelect: w = !1,
    disabled: R,
    disabledItemsFocusable: O = !1,
    disableListWrap: E = !1,
    filterOptions: k = R9,
    filterSelectedOptions: L = !1,
    freeSolo: F = !1,
    getOptionDisabled: _,
    getOptionKey: P,
    getOptionLabel: D = (Le) => Le.label ?? Le,
    groupBy: z,
    handleHomeEndKeys: K = !e.freeSolo,
    id: Q,
    includeInputInList: H = !1,
    inputValue: I,
    isOptionEqualToValue: U = (Le, ke) => Le === ke,
    multiple: G = !1,
    onChange: Y,
    onClose: te,
    onHighlightChange: B,
    onInputChange: W,
    onOpen: q,
    open: ne,
    openOnFocus: re = !1,
    options: X,
    readOnly: j = !1,
    selectOnFocus: ie = !e.freeSolo,
    value: fe
  } = e, ce = Sr(Q);
  let me = D;
  me = (Le) => {
    const ke = D(Le);
    if (typeof ke != "string") {
      if (process.env.NODE_ENV !== "production") {
        const Ze = ke === void 0 ? "undefined" : `${typeof ke} (${ke})`;
        console.error(`MUI: The \`getOptionLabel\` method of ${v} returned ${Ze} instead of a string for ${JSON.stringify(Le)}.`);
      }
      return String(ke);
    }
    return ke;
  };
  const ge = S.useRef(!1), de = S.useRef(!0), pe = S.useRef(null), be = S.useRef(null), [Ce, Re] = S.useState(null), [ue, we] = S.useState(-1), _e = s ? 0 : -1, He = S.useRef(_e), et = S.useRef(SF(y ?? fe, G, me)).current, [Ne, rt] = oh({
    controlled: fe,
    default: y,
    name: v
  }), [it, wt] = oh({
    controlled: I,
    default: et,
    name: v,
    state: "inputValue"
  }), [gt, ot] = S.useState(!1), jt = S.useCallback((Le, ke, Ze) => {
    if (!(G ? Ne.length < ke.length : ke !== null) && !p)
      return;
    const Bt = SF(ke, G, me);
    it !== Bt && (wt(Bt), W && W(Le, Bt, Ze));
  }, [me, it, G, W, wt, p, Ne]), [ct, Tt] = oh({
    controlled: ne,
    default: !1,
    name: v,
    state: "open"
  }), [Rt, Lt] = S.useState(!0), vt = !G && Ne != null && it === me(Ne), Qe = ct && !j, Oe = Qe ? k(
    X.filter((Le) => !(L && (G ? Ne : [Ne]).some((ke) => ke !== null && U(Le, ke)))),
    // we use the empty string to manipulate `filterOptions` to not filter any options
    // i.e. the filter predicate always returns true
    {
      inputValue: vt && Rt ? "" : it,
      getOptionLabel: me
    }
  ) : [], Me = gP({
    filteredOptions: Oe,
    value: Ne,
    inputValue: it
  });
  S.useEffect(() => {
    const Le = Ne !== Me.value;
    gt && !Le || F && !Le || jt(null, Ne, "reset");
  }, [Ne, jt, gt, Me.value, F]);
  const ht = ct && Oe.length > 0 && !j, xt = Nn((Le) => {
    Le === -1 ? pe.current.focus() : Ce.querySelector(`[data-tag-index="${Le}"]`).focus();
  });
  S.useEffect(() => {
    G && ue > Ne.length - 1 && (we(-1), xt(-1));
  }, [Ne, G, ue, xt]);
  function zt(Le, ke) {
    if (!be.current || Le < 0 || Le >= Oe.length)
      return -1;
    let Ze = Le;
    for (; ; ) {
      const Gt = be.current.querySelector(`[data-option-index="${Ze}"]`), Bt = O ? !1 : !Gt || Gt.disabled || Gt.getAttribute("aria-disabled") === "true";
      if (Gt && Gt.hasAttribute("tabindex") && !Bt)
        return Ze;
      if (ke === "next" ? Ze = (Ze + 1) % Oe.length : Ze = (Ze - 1 + Oe.length) % Oe.length, Ze === Le)
        return -1;
    }
  }
  const bt = Nn(({
    event: Le,
    index: ke,
    reason: Ze
  }) => {
    if (He.current = ke, ke === -1 ? pe.current.removeAttribute("aria-activedescendant") : pe.current.setAttribute("aria-activedescendant", `${ce}-option-${ke}`), B && ["mouse", "keyboard", "touch"].includes(Ze) && B(Le, ke === -1 ? null : Oe[ke], Ze), !be.current)
      return;
    const Gt = be.current.querySelector(`[role="option"].${n}-focused`);
    Gt && (Gt.classList.remove(`${n}-focused`), Gt.classList.remove(`${n}-focusVisible`));
    let Bt = be.current;
    if (be.current.getAttribute("role") !== "listbox" && (Bt = be.current.parentElement.querySelector('[role="listbox"]')), !Bt)
      return;
    if (ke === -1) {
      Bt.scrollTop = 0;
      return;
    }
    const Qt = be.current.querySelector(`[data-option-index="${ke}"]`);
    if (Qt && (Qt.classList.add(`${n}-focused`), Ze === "keyboard" && Qt.classList.add(`${n}-focusVisible`), Bt.scrollHeight > Bt.clientHeight && Ze !== "mouse" && Ze !== "touch")) {
      const Hn = Qt, Nr = Bt.clientHeight + Bt.scrollTop, Wo = Hn.offsetTop + Hn.offsetHeight;
      Wo > Nr ? Bt.scrollTop = Wo - Bt.clientHeight : Hn.offsetTop - Hn.offsetHeight * (z ? 1.3 : 0) < Bt.scrollTop && (Bt.scrollTop = Hn.offsetTop - Hn.offsetHeight * (z ? 1.3 : 0));
    }
  }), Ge = Nn(({
    event: Le,
    diff: ke,
    direction: Ze = "next",
    reason: Gt
  }) => {
    if (!Qe)
      return;
    const Qt = zt((() => {
      const Hn = Oe.length - 1;
      if (ke === "reset")
        return _e;
      if (ke === "start")
        return 0;
      if (ke === "end")
        return Hn;
      const Nr = He.current + ke;
      return Nr < 0 ? Nr === -1 && H ? -1 : E && He.current !== -1 || Math.abs(ke) > 1 ? 0 : Hn : Nr > Hn ? Nr === Hn + 1 && H ? -1 : E || Math.abs(ke) > 1 ? Hn : 0 : Nr;
    })(), Ze);
    if (bt({
      index: Qt,
      reason: Gt,
      event: Le
    }), i && ke !== "reset")
      if (Qt === -1)
        pe.current.value = it;
      else {
        const Hn = me(Oe[Qt]);
        pe.current.value = Hn, Hn.toLowerCase().indexOf(it.toLowerCase()) === 0 && it.length > 0 && pe.current.setSelectionRange(it.length, Hn.length);
      }
  }), Et = () => {
    const Le = (ke, Ze) => {
      const Gt = ke ? me(ke) : "", Bt = Ze ? me(Ze) : "";
      return Gt === Bt;
    };
    if (He.current !== -1 && Me.filteredOptions && Me.filteredOptions.length !== Oe.length && Me.inputValue === it && (G ? Ne.length === Me.value.length && Me.value.every((ke, Ze) => me(Ne[Ze]) === me(ke)) : Le(Me.value, Ne))) {
      const ke = Me.filteredOptions[He.current];
      if (ke)
        return Oe.findIndex((Ze) => me(Ze) === me(ke));
    }
    return -1;
  }, At = S.useCallback(() => {
    if (!Qe)
      return;
    const Le = Et();
    if (Le !== -1) {
      He.current = Le;
      return;
    }
    const ke = G ? Ne[0] : Ne;
    if (Oe.length === 0 || ke == null) {
      Ge({
        diff: "reset"
      });
      return;
    }
    if (be.current) {
      if (ke != null) {
        const Ze = Oe[He.current];
        if (G && Ze && Ne.findIndex((Bt) => U(Ze, Bt)) !== -1)
          return;
        const Gt = Oe.findIndex((Bt) => U(Bt, ke));
        Gt === -1 ? Ge({
          diff: "reset"
        }) : bt({
          index: Gt
        });
        return;
      }
      if (He.current >= Oe.length - 1) {
        bt({
          index: Oe.length - 1
        });
        return;
      }
      bt({
        index: He.current
      });
    }
  }, [
    // Only sync the highlighted index when the option switch between empty and not
    Oe.length,
    // Don't sync the highlighted index with the value when multiple
    // eslint-disable-next-line react-hooks/exhaustive-deps
    G ? !1 : Ne,
    L,
    Ge,
    bt,
    Qe,
    it,
    G
  ]), pn = Nn((Le) => {
    dk(be, Le), Le && At();
  });
  process.env.NODE_ENV !== "production" && S.useEffect(() => {
    (!pe.current || pe.current.nodeName !== "INPUT") && (pe.current && pe.current.nodeName === "TEXTAREA" ? console.warn([`A textarea element was provided to ${v} where input was expected.`, "This is not a supported scenario but it may work under certain conditions.", "A textarea keyboard navigation may conflict with Autocomplete controls (for example enter and arrow keys).", "Make sure to test keyboard navigation and add custom event handlers if necessary."].join(`
`)) : console.error([`MUI: Unable to find the input element. It was resolved to ${pe.current} while an HTMLInputElement was expected.`, `Instead, ${v} expects an input element.`, "", v === "useAutocomplete" ? "Make sure you have bound getInputProps correctly and that the normal ref/effect resolutions order is guaranteed." : "Make sure you have customized the input component correctly."].join(`
`)));
  }, [v]), S.useEffect(() => {
    At();
  }, [At]);
  const fn = (Le) => {
    ct || (Tt(!0), Lt(!0), q && q(Le));
  }, hr = (Le, ke) => {
    ct && (Tt(!1), te && te(Le, ke));
  }, qn = (Le, ke, Ze, Gt) => {
    if (G) {
      if (Ne.length === ke.length && Ne.every((Bt, Qt) => Bt === ke[Qt]))
        return;
    } else if (Ne === ke)
      return;
    Y && Y(Le, ke, Ze, Gt), rt(ke);
  }, Dr = S.useRef(!1), mr = (Le, ke, Ze = "selectOption", Gt = "options") => {
    let Bt = Ze, Qt = ke;
    if (G) {
      if (Qt = Array.isArray(Ne) ? Ne.slice() : [], process.env.NODE_ENV !== "production") {
        const Nr = Qt.filter((Wo) => U(ke, Wo));
        Nr.length > 1 && console.error([`MUI: The \`isOptionEqualToValue\` method of ${v} does not handle the arguments correctly.`, `The component expects a single value to match a given option but found ${Nr.length} matches.`].join(`
`));
      }
      const Hn = Qt.findIndex((Nr) => U(ke, Nr));
      Hn === -1 ? Qt.push(ke) : Gt !== "freeSolo" && (Qt.splice(Hn, 1), Bt = "removeOption");
    }
    jt(Le, Qt, Bt), qn(Le, Qt, Bt, {
      option: ke
    }), !w && (!Le || !Le.ctrlKey && !Le.metaKey) && hr(Le, Bt), (d === !0 || d === "touch" && Dr.current || d === "mouse" && !Dr.current) && pe.current.blur();
  };
  function Po(Le, ke) {
    if (Le === -1)
      return -1;
    let Ze = Le;
    for (; ; ) {
      if (ke === "next" && Ze === Ne.length || ke === "previous" && Ze === -1)
        return -1;
      const Gt = Ce.querySelector(`[data-tag-index="${Ze}"]`);
      if (!Gt || !Gt.hasAttribute("tabindex") || Gt.disabled || Gt.getAttribute("aria-disabled") === "true")
        Ze += ke === "next" ? 1 : -1;
      else
        return Ze;
    }
  }
  const Mo = (Le, ke) => {
    if (!G)
      return;
    it === "" && hr(Le, "toggleInput");
    let Ze = ue;
    ue === -1 ? it === "" && ke === "previous" && (Ze = Ne.length - 1) : (Ze += ke === "next" ? 1 : -1, Ze < 0 && (Ze = 0), Ze === Ne.length && (Ze = -1)), Ze = Po(Ze, ke), we(Ze), xt(Ze);
  }, Ut = (Le) => {
    ge.current = !0, wt(""), W && W(Le, "", "clear"), qn(Le, G ? [] : null, "clear");
  }, dr = (Le) => (ke) => {
    if (Le.onKeyDown && Le.onKeyDown(ke), !ke.defaultMuiPrevented && (ue !== -1 && !["ArrowLeft", "ArrowRight"].includes(ke.key) && (we(-1), xt(-1)), ke.which !== 229))
      switch (ke.key) {
        case "Home":
          Qe && K && (ke.preventDefault(), Ge({
            diff: "start",
            direction: "next",
            reason: "keyboard",
            event: ke
          }));
          break;
        case "End":
          Qe && K && (ke.preventDefault(), Ge({
            diff: "end",
            direction: "previous",
            reason: "keyboard",
            event: ke
          }));
          break;
        case "PageUp":
          ke.preventDefault(), Ge({
            diff: -CF,
            direction: "previous",
            reason: "keyboard",
            event: ke
          }), fn(ke);
          break;
        case "PageDown":
          ke.preventDefault(), Ge({
            diff: CF,
            direction: "next",
            reason: "keyboard",
            event: ke
          }), fn(ke);
          break;
        case "ArrowDown":
          ke.preventDefault(), Ge({
            diff: 1,
            direction: "next",
            reason: "keyboard",
            event: ke
          }), fn(ke);
          break;
        case "ArrowUp":
          ke.preventDefault(), Ge({
            diff: -1,
            direction: "previous",
            reason: "keyboard",
            event: ke
          }), fn(ke);
          break;
        case "ArrowLeft":
          Mo(ke, "previous");
          break;
        case "ArrowRight":
          Mo(ke, "next");
          break;
        case "Enter":
          if (He.current !== -1 && Qe) {
            const Ze = Oe[He.current], Gt = _ ? _(Ze) : !1;
            if (ke.preventDefault(), Gt)
              return;
            mr(ke, Ze, "selectOption"), i && pe.current.setSelectionRange(pe.current.value.length, pe.current.value.length);
          } else F && it !== "" && vt === !1 && (G && ke.preventDefault(), mr(ke, it, "createOption", "freeSolo"));
          break;
        case "Escape":
          Qe ? (ke.preventDefault(), ke.stopPropagation(), hr(ke, "escape")) : m && (it !== "" || G && Ne.length > 0) && (ke.preventDefault(), ke.stopPropagation(), Ut(ke));
          break;
        case "Backspace":
          if (G && !j && it === "" && Ne.length > 0) {
            const Ze = ue === -1 ? Ne.length - 1 : ue, Gt = Ne.slice();
            Gt.splice(Ze, 1), qn(ke, Gt, "removeOption", {
              option: Ne[Ze]
            });
          }
          break;
        case "Delete":
          if (G && !j && it === "" && Ne.length > 0 && ue !== -1) {
            const Ze = ue, Gt = Ne.slice();
            Gt.splice(Ze, 1), qn(ke, Gt, "removeOption", {
              option: Ne[Ze]
            });
          }
          break;
      }
  }, Ct = (Le) => {
    ot(!0), re && !ge.current && fn(Le);
  }, St = (Le) => {
    if (t(be)) {
      pe.current.focus();
      return;
    }
    ot(!1), de.current = !0, ge.current = !1, u && He.current !== -1 && Qe ? mr(Le, Oe[He.current], "blur") : u && F && it !== "" ? mr(Le, it, "blur", "freeSolo") : p && jt(Le, Ne, "blur"), hr(Le, "blur");
  }, en = (Le) => {
    const ke = Le.target.value;
    it !== ke && (wt(ke), Lt(!1), W && W(Le, ke, "input")), ke === "" ? !C && !G && qn(Le, null, "clear") : fn(Le);
  }, on = (Le) => {
    const ke = Number(Le.currentTarget.getAttribute("data-option-index"));
    He.current !== ke && bt({
      event: Le,
      index: ke,
      reason: "mouse"
    });
  }, zn = (Le) => {
    bt({
      event: Le,
      index: Number(Le.currentTarget.getAttribute("data-option-index")),
      reason: "touch"
    }), Dr.current = !0;
  }, Ar = (Le) => {
    const ke = Number(Le.currentTarget.getAttribute("data-option-index"));
    mr(Le, Oe[ke], "selectOption"), Dr.current = !1;
  }, ro = (Le) => (ke) => {
    const Ze = Ne.slice();
    Ze.splice(Le, 1), qn(ke, Ze, "removeOption", {
      option: Ne[Le]
    });
  }, mo = (Le) => {
    ct ? hr(Le, "toggleInput") : fn(Le);
  }, ve = (Le) => {
    Le.currentTarget.contains(Le.target) && Le.target.getAttribute("id") !== ce && Le.preventDefault();
  }, We = (Le) => {
    Le.currentTarget.contains(Le.target) && (pe.current.focus(), ie && de.current && pe.current.selectionEnd - pe.current.selectionStart === 0 && pe.current.select(), de.current = !1);
  }, pt = (Le) => {
    !R && (it === "" || !ct) && mo(Le);
  };
  let Ot = F && it.length > 0;
  Ot = Ot || (G ? Ne.length > 0 : Ne !== null);
  let mn = Oe;
  if (z) {
    const Le = /* @__PURE__ */ new Map();
    let ke = !1;
    mn = Oe.reduce((Ze, Gt, Bt) => {
      const Qt = z(Gt);
      return Ze.length > 0 && Ze[Ze.length - 1].group === Qt ? Ze[Ze.length - 1].options.push(Gt) : (process.env.NODE_ENV !== "production" && (Le.get(Qt) && !ke && (console.warn(`MUI: The options provided combined with the \`groupBy\` method of ${v} returns duplicated headers.`, "You can solve the issue by sorting the options with the output of `groupBy`."), ke = !0), Le.set(Qt, !0)), Ze.push({
        key: Bt,
        index: Bt,
        group: Qt,
        options: [Gt]
      })), Ze;
    }, []);
  }
  return R && gt && St(), {
    getRootProps: (Le = {}) => ({
      ...Le,
      onKeyDown: dr(Le),
      onMouseDown: ve,
      onClick: We
    }),
    getInputLabelProps: () => ({
      id: `${ce}-label`,
      htmlFor: ce
    }),
    getInputProps: () => ({
      id: ce,
      value: it,
      onBlur: St,
      onFocus: Ct,
      onChange: en,
      onMouseDown: pt,
      // if open then this is handled imperatively so don't let react override
      // only have an opinion about this when closed
      "aria-activedescendant": Qe ? "" : null,
      "aria-autocomplete": i ? "both" : "list",
      "aria-controls": ht ? `${ce}-listbox` : void 0,
      "aria-expanded": ht,
      // Disable browser's suggestion that might overlap with the popup.
      // Handle autocomplete but not autofill.
      autoComplete: "off",
      ref: pe,
      autoCapitalize: "none",
      spellCheck: "false",
      role: "combobox",
      disabled: R
    }),
    getClearProps: () => ({
      tabIndex: -1,
      type: "button",
      onClick: Ut
    }),
    getPopupIndicatorProps: () => ({
      tabIndex: -1,
      type: "button",
      onClick: mo
    }),
    getTagProps: ({
      index: Le
    }) => ({
      key: Le,
      "data-tag-index": Le,
      tabIndex: -1,
      ...!j && {
        onDelete: ro(Le)
      }
    }),
    getListboxProps: () => ({
      role: "listbox",
      id: `${ce}-listbox`,
      "aria-labelledby": `${ce}-label`,
      ref: pn,
      onMouseDown: (Le) => {
        Le.preventDefault();
      }
    }),
    getOptionProps: ({
      index: Le,
      option: ke
    }) => {
      const Ze = (G ? Ne : [Ne]).some((Bt) => Bt != null && U(ke, Bt)), Gt = _ ? _(ke) : !1;
      return {
        key: (P == null ? void 0 : P(ke)) ?? me(ke),
        tabIndex: -1,
        role: "option",
        id: `${ce}-option-${Le}`,
        onMouseMove: on,
        onClick: Ar,
        onTouchStart: zn,
        "data-option-index": Le,
        "aria-disabled": Gt,
        "aria-selected": Ze
      };
    },
    id: ce,
    inputValue: it,
    value: Ne,
    dirty: Ot,
    expanded: Qe && Ce,
    popupOpen: Qe,
    focused: gt || ue !== -1,
    anchorEl: Ce,
    setAnchorEl: Re,
    focusedTag: ue,
    groupedOptions: mn
  };
}
var Wa = "top", rl = "bottom", ol = "right", qa = "left", RP = "auto", MC = [Wa, rl, ol, qa], Vg = "start", rC = "end", M9 = "clippingParents", vj = "viewport", xb = "popper", I9 = "reference", wF = /* @__PURE__ */ MC.reduce(function(e, t) {
  return e.concat([t + "-" + Vg, t + "-" + rC]);
}, []), yj = /* @__PURE__ */ [].concat(MC, [RP]).reduce(function(e, t) {
  return e.concat([t, t + "-" + Vg, t + "-" + rC]);
}, []), D9 = "beforeRead", N9 = "read", L9 = "afterRead", F9 = "beforeMain", _9 = "main", A9 = "afterMain", $9 = "beforeWrite", j9 = "write", z9 = "afterWrite", H9 = [D9, N9, L9, F9, _9, A9, $9, j9, z9];
function Gu(e) {
  return e ? (e.nodeName || "").toLowerCase() : null;
}
function ys(e) {
  if (e == null)
    return window;
  if (e.toString() !== "[object Window]") {
    var t = e.ownerDocument;
    return t && t.defaultView || window;
  }
  return e;
}
function ch(e) {
  var t = ys(e).Element;
  return e instanceof t || e instanceof Element;
}
function Zs(e) {
  var t = ys(e).HTMLElement;
  return e instanceof t || e instanceof HTMLElement;
}
function OP(e) {
  if (typeof ShadowRoot > "u")
    return !1;
  var t = ys(e).ShadowRoot;
  return e instanceof t || e instanceof ShadowRoot;
}
function V9(e) {
  var t = e.state;
  Object.keys(t.elements).forEach(function(n) {
    var i = t.styles[n] || {}, s = t.attributes[n] || {}, u = t.elements[n];
    !Zs(u) || !Gu(u) || (Object.assign(u.style, i), Object.keys(s).forEach(function(d) {
      var p = s[d];
      p === !1 ? u.removeAttribute(d) : u.setAttribute(d, p === !0 ? "" : p);
    }));
  });
}
function B9(e) {
  var t = e.state, n = {
    popper: {
      position: t.options.strategy,
      left: "0",
      top: "0",
      margin: "0"
    },
    arrow: {
      position: "absolute"
    },
    reference: {}
  };
  return Object.assign(t.elements.popper.style, n.popper), t.styles = n, t.elements.arrow && Object.assign(t.elements.arrow.style, n.arrow), function() {
    Object.keys(t.elements).forEach(function(i) {
      var s = t.elements[i], u = t.attributes[i] || {}, d = Object.keys(t.styles.hasOwnProperty(i) ? t.styles[i] : n[i]), p = d.reduce(function(m, v) {
        return m[v] = "", m;
      }, {});
      !Zs(s) || !Gu(s) || (Object.assign(s.style, p), Object.keys(u).forEach(function(m) {
        s.removeAttribute(m);
      }));
    });
  };
}
const U9 = {
  name: "applyStyles",
  enabled: !0,
  phase: "write",
  fn: V9,
  effect: B9,
  requires: ["computeStyles"]
};
function Hu(e) {
  return e.split("-")[0];
}
var ih = Math.max, M0 = Math.min, Bg = Math.round;
function Ck() {
  var e = navigator.userAgentData;
  return e != null && e.brands && Array.isArray(e.brands) ? e.brands.map(function(t) {
    return t.brand + "/" + t.version;
  }).join(" ") : navigator.userAgent;
}
function bj() {
  return !/^((?!chrome|android).)*safari/i.test(Ck());
}
function Ug(e, t, n) {
  t === void 0 && (t = !1), n === void 0 && (n = !1);
  var i = e.getBoundingClientRect(), s = 1, u = 1;
  t && Zs(e) && (s = e.offsetWidth > 0 && Bg(i.width) / e.offsetWidth || 1, u = e.offsetHeight > 0 && Bg(i.height) / e.offsetHeight || 1);
  var d = ch(e) ? ys(e) : window, p = d.visualViewport, m = !bj() && n, v = (i.left + (m && p ? p.offsetLeft : 0)) / s, y = (i.top + (m && p ? p.offsetTop : 0)) / u, C = i.width / s, w = i.height / u;
  return {
    width: C,
    height: w,
    top: y,
    right: v + C,
    bottom: y + w,
    left: v,
    x: v,
    y
  };
}
function kP(e) {
  var t = Ug(e), n = e.offsetWidth, i = e.offsetHeight;
  return Math.abs(t.width - n) <= 1 && (n = t.width), Math.abs(t.height - i) <= 1 && (i = t.height), {
    x: e.offsetLeft,
    y: e.offsetTop,
    width: n,
    height: i
  };
}
function Cj(e, t) {
  var n = t.getRootNode && t.getRootNode();
  if (e.contains(t))
    return !0;
  if (n && OP(n)) {
    var i = t;
    do {
      if (i && e.isSameNode(i))
        return !0;
      i = i.parentNode || i.host;
    } while (i);
  }
  return !1;
}
function Yc(e) {
  return ys(e).getComputedStyle(e);
}
function G9(e) {
  return ["table", "td", "th"].indexOf(Gu(e)) >= 0;
}
function Ef(e) {
  return ((ch(e) ? e.ownerDocument : (
    // $FlowFixMe[prop-missing]
    e.document
  )) || window.document).documentElement;
}
function xE(e) {
  return Gu(e) === "html" ? e : (
    // this is a quicker (but less type safe) way to save quite some bytes from the bundle
    // $FlowFixMe[incompatible-return]
    // $FlowFixMe[prop-missing]
    e.assignedSlot || // step into the shadow DOM of the parent of a slotted node
    e.parentNode || // DOM Element detected
    (OP(e) ? e.host : null) || // ShadowRoot detected
    // $FlowFixMe[incompatible-call]: HTMLElement is a Node
    Ef(e)
  );
}
function xF(e) {
  return !Zs(e) || // https://github.com/popperjs/popper-core/issues/837
  Yc(e).position === "fixed" ? null : e.offsetParent;
}
function W9(e) {
  var t = /firefox/i.test(Ck()), n = /Trident/i.test(Ck());
  if (n && Zs(e)) {
    var i = Yc(e);
    if (i.position === "fixed")
      return null;
  }
  var s = xE(e);
  for (OP(s) && (s = s.host); Zs(s) && ["html", "body"].indexOf(Gu(s)) < 0; ) {
    var u = Yc(s);
    if (u.transform !== "none" || u.perspective !== "none" || u.contain === "paint" || ["transform", "perspective"].indexOf(u.willChange) !== -1 || t && u.willChange === "filter" || t && u.filter && u.filter !== "none")
      return s;
    s = s.parentNode;
  }
  return null;
}
function IC(e) {
  for (var t = ys(e), n = xF(e); n && G9(n) && Yc(n).position === "static"; )
    n = xF(n);
  return n && (Gu(n) === "html" || Gu(n) === "body" && Yc(n).position === "static") ? t : n || W9(e) || t;
}
function PP(e) {
  return ["top", "bottom"].indexOf(e) >= 0 ? "x" : "y";
}
function Ub(e, t, n) {
  return ih(e, M0(t, n));
}
function q9(e, t, n) {
  var i = Ub(e, t, n);
  return i > n ? n : i;
}
function Sj() {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0
  };
}
function wj(e) {
  return Object.assign({}, Sj(), e);
}
function xj(e, t) {
  return t.reduce(function(n, i) {
    return n[i] = e, n;
  }, {});
}
var K9 = function(t, n) {
  return t = typeof t == "function" ? t(Object.assign({}, n.rects, {
    placement: n.placement
  })) : t, wj(typeof t != "number" ? t : xj(t, MC));
};
function Y9(e) {
  var t, n = e.state, i = e.name, s = e.options, u = n.elements.arrow, d = n.modifiersData.popperOffsets, p = Hu(n.placement), m = PP(p), v = [qa, ol].indexOf(p) >= 0, y = v ? "height" : "width";
  if (!(!u || !d)) {
    var C = K9(s.padding, n), w = kP(u), R = m === "y" ? Wa : qa, O = m === "y" ? rl : ol, E = n.rects.reference[y] + n.rects.reference[m] - d[m] - n.rects.popper[y], k = d[m] - n.rects.reference[m], L = IC(u), F = L ? m === "y" ? L.clientHeight || 0 : L.clientWidth || 0 : 0, _ = E / 2 - k / 2, P = C[R], D = F - w[y] - C[O], z = F / 2 - w[y] / 2 + _, K = Ub(P, z, D), Q = m;
    n.modifiersData[i] = (t = {}, t[Q] = K, t.centerOffset = K - z, t);
  }
}
function X9(e) {
  var t = e.state, n = e.options, i = n.element, s = i === void 0 ? "[data-popper-arrow]" : i;
  s != null && (typeof s == "string" && (s = t.elements.popper.querySelector(s), !s) || Cj(t.elements.popper, s) && (t.elements.arrow = s));
}
const Q9 = {
  name: "arrow",
  enabled: !0,
  phase: "main",
  fn: Y9,
  effect: X9,
  requires: ["popperOffsets"],
  requiresIfExists: ["preventOverflow"]
};
function Gg(e) {
  return e.split("-")[1];
}
var J9 = {
  top: "auto",
  right: "auto",
  bottom: "auto",
  left: "auto"
};
function Z9(e, t) {
  var n = e.x, i = e.y, s = t.devicePixelRatio || 1;
  return {
    x: Bg(n * s) / s || 0,
    y: Bg(i * s) / s || 0
  };
}
function EF(e) {
  var t, n = e.popper, i = e.popperRect, s = e.placement, u = e.variation, d = e.offsets, p = e.position, m = e.gpuAcceleration, v = e.adaptive, y = e.roundOffsets, C = e.isFixed, w = d.x, R = w === void 0 ? 0 : w, O = d.y, E = O === void 0 ? 0 : O, k = typeof y == "function" ? y({
    x: R,
    y: E
  }) : {
    x: R,
    y: E
  };
  R = k.x, E = k.y;
  var L = d.hasOwnProperty("x"), F = d.hasOwnProperty("y"), _ = qa, P = Wa, D = window;
  if (v) {
    var z = IC(n), K = "clientHeight", Q = "clientWidth";
    if (z === ys(n) && (z = Ef(n), Yc(z).position !== "static" && p === "absolute" && (K = "scrollHeight", Q = "scrollWidth")), z = z, s === Wa || (s === qa || s === ol) && u === rC) {
      P = rl;
      var H = C && z === D && D.visualViewport ? D.visualViewport.height : (
        // $FlowFixMe[prop-missing]
        z[K]
      );
      E -= H - i.height, E *= m ? 1 : -1;
    }
    if (s === qa || (s === Wa || s === rl) && u === rC) {
      _ = ol;
      var I = C && z === D && D.visualViewport ? D.visualViewport.width : (
        // $FlowFixMe[prop-missing]
        z[Q]
      );
      R -= I - i.width, R *= m ? 1 : -1;
    }
  }
  var U = Object.assign({
    position: p
  }, v && J9), G = y === !0 ? Z9({
    x: R,
    y: E
  }, ys(n)) : {
    x: R,
    y: E
  };
  if (R = G.x, E = G.y, m) {
    var Y;
    return Object.assign({}, U, (Y = {}, Y[P] = F ? "0" : "", Y[_] = L ? "0" : "", Y.transform = (D.devicePixelRatio || 1) <= 1 ? "translate(" + R + "px, " + E + "px)" : "translate3d(" + R + "px, " + E + "px, 0)", Y));
  }
  return Object.assign({}, U, (t = {}, t[P] = F ? E + "px" : "", t[_] = L ? R + "px" : "", t.transform = "", t));
}
function e7(e) {
  var t = e.state, n = e.options, i = n.gpuAcceleration, s = i === void 0 ? !0 : i, u = n.adaptive, d = u === void 0 ? !0 : u, p = n.roundOffsets, m = p === void 0 ? !0 : p, v = {
    placement: Hu(t.placement),
    variation: Gg(t.placement),
    popper: t.elements.popper,
    popperRect: t.rects.popper,
    gpuAcceleration: s,
    isFixed: t.options.strategy === "fixed"
  };
  t.modifiersData.popperOffsets != null && (t.styles.popper = Object.assign({}, t.styles.popper, EF(Object.assign({}, v, {
    offsets: t.modifiersData.popperOffsets,
    position: t.options.strategy,
    adaptive: d,
    roundOffsets: m
  })))), t.modifiersData.arrow != null && (t.styles.arrow = Object.assign({}, t.styles.arrow, EF(Object.assign({}, v, {
    offsets: t.modifiersData.arrow,
    position: "absolute",
    adaptive: !1,
    roundOffsets: m
  })))), t.attributes.popper = Object.assign({}, t.attributes.popper, {
    "data-popper-placement": t.placement
  });
}
const t7 = {
  name: "computeStyles",
  enabled: !0,
  phase: "beforeWrite",
  fn: e7,
  data: {}
};
var Yx = {
  passive: !0
};
function n7(e) {
  var t = e.state, n = e.instance, i = e.options, s = i.scroll, u = s === void 0 ? !0 : s, d = i.resize, p = d === void 0 ? !0 : d, m = ys(t.elements.popper), v = [].concat(t.scrollParents.reference, t.scrollParents.popper);
  return u && v.forEach(function(y) {
    y.addEventListener("scroll", n.update, Yx);
  }), p && m.addEventListener("resize", n.update, Yx), function() {
    u && v.forEach(function(y) {
      y.removeEventListener("scroll", n.update, Yx);
    }), p && m.removeEventListener("resize", n.update, Yx);
  };
}
const r7 = {
  name: "eventListeners",
  enabled: !0,
  phase: "write",
  fn: function() {
  },
  effect: n7,
  data: {}
};
var o7 = {
  left: "right",
  right: "left",
  bottom: "top",
  top: "bottom"
};
function c0(e) {
  return e.replace(/left|right|bottom|top/g, function(t) {
    return o7[t];
  });
}
var i7 = {
  start: "end",
  end: "start"
};
function TF(e) {
  return e.replace(/start|end/g, function(t) {
    return i7[t];
  });
}
function MP(e) {
  var t = ys(e), n = t.pageXOffset, i = t.pageYOffset;
  return {
    scrollLeft: n,
    scrollTop: i
  };
}
function IP(e) {
  return Ug(Ef(e)).left + MP(e).scrollLeft;
}
function a7(e, t) {
  var n = ys(e), i = Ef(e), s = n.visualViewport, u = i.clientWidth, d = i.clientHeight, p = 0, m = 0;
  if (s) {
    u = s.width, d = s.height;
    var v = bj();
    (v || !v && t === "fixed") && (p = s.offsetLeft, m = s.offsetTop);
  }
  return {
    width: u,
    height: d,
    x: p + IP(e),
    y: m
  };
}
function s7(e) {
  var t, n = Ef(e), i = MP(e), s = (t = e.ownerDocument) == null ? void 0 : t.body, u = ih(n.scrollWidth, n.clientWidth, s ? s.scrollWidth : 0, s ? s.clientWidth : 0), d = ih(n.scrollHeight, n.clientHeight, s ? s.scrollHeight : 0, s ? s.clientHeight : 0), p = -i.scrollLeft + IP(e), m = -i.scrollTop;
  return Yc(s || n).direction === "rtl" && (p += ih(n.clientWidth, s ? s.clientWidth : 0) - u), {
    width: u,
    height: d,
    x: p,
    y: m
  };
}
function DP(e) {
  var t = Yc(e), n = t.overflow, i = t.overflowX, s = t.overflowY;
  return /auto|scroll|overlay|hidden/.test(n + s + i);
}
function Ej(e) {
  return ["html", "body", "#document"].indexOf(Gu(e)) >= 0 ? e.ownerDocument.body : Zs(e) && DP(e) ? e : Ej(xE(e));
}
function Gb(e, t) {
  var n;
  t === void 0 && (t = []);
  var i = Ej(e), s = i === ((n = e.ownerDocument) == null ? void 0 : n.body), u = ys(i), d = s ? [u].concat(u.visualViewport || [], DP(i) ? i : []) : i, p = t.concat(d);
  return s ? p : (
    // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here
    p.concat(Gb(xE(d)))
  );
}
function Sk(e) {
  return Object.assign({}, e, {
    left: e.x,
    top: e.y,
    right: e.x + e.width,
    bottom: e.y + e.height
  });
}
function l7(e, t) {
  var n = Ug(e, !1, t === "fixed");
  return n.top = n.top + e.clientTop, n.left = n.left + e.clientLeft, n.bottom = n.top + e.clientHeight, n.right = n.left + e.clientWidth, n.width = e.clientWidth, n.height = e.clientHeight, n.x = n.left, n.y = n.top, n;
}
function RF(e, t, n) {
  return t === vj ? Sk(a7(e, n)) : ch(t) ? l7(t, n) : Sk(s7(Ef(e)));
}
function u7(e) {
  var t = Gb(xE(e)), n = ["absolute", "fixed"].indexOf(Yc(e).position) >= 0, i = n && Zs(e) ? IC(e) : e;
  return ch(i) ? t.filter(function(s) {
    return ch(s) && Cj(s, i) && Gu(s) !== "body";
  }) : [];
}
function c7(e, t, n, i) {
  var s = t === "clippingParents" ? u7(e) : [].concat(t), u = [].concat(s, [n]), d = u[0], p = u.reduce(function(m, v) {
    var y = RF(e, v, i);
    return m.top = ih(y.top, m.top), m.right = M0(y.right, m.right), m.bottom = M0(y.bottom, m.bottom), m.left = ih(y.left, m.left), m;
  }, RF(e, d, i));
  return p.width = p.right - p.left, p.height = p.bottom - p.top, p.x = p.left, p.y = p.top, p;
}
function Tj(e) {
  var t = e.reference, n = e.element, i = e.placement, s = i ? Hu(i) : null, u = i ? Gg(i) : null, d = t.x + t.width / 2 - n.width / 2, p = t.y + t.height / 2 - n.height / 2, m;
  switch (s) {
    case Wa:
      m = {
        x: d,
        y: t.y - n.height
      };
      break;
    case rl:
      m = {
        x: d,
        y: t.y + t.height
      };
      break;
    case ol:
      m = {
        x: t.x + t.width,
        y: p
      };
      break;
    case qa:
      m = {
        x: t.x - n.width,
        y: p
      };
      break;
    default:
      m = {
        x: t.x,
        y: t.y
      };
  }
  var v = s ? PP(s) : null;
  if (v != null) {
    var y = v === "y" ? "height" : "width";
    switch (u) {
      case Vg:
        m[v] = m[v] - (t[y] / 2 - n[y] / 2);
        break;
      case rC:
        m[v] = m[v] + (t[y] / 2 - n[y] / 2);
        break;
    }
  }
  return m;
}
function oC(e, t) {
  t === void 0 && (t = {});
  var n = t, i = n.placement, s = i === void 0 ? e.placement : i, u = n.strategy, d = u === void 0 ? e.strategy : u, p = n.boundary, m = p === void 0 ? M9 : p, v = n.rootBoundary, y = v === void 0 ? vj : v, C = n.elementContext, w = C === void 0 ? xb : C, R = n.altBoundary, O = R === void 0 ? !1 : R, E = n.padding, k = E === void 0 ? 0 : E, L = wj(typeof k != "number" ? k : xj(k, MC)), F = w === xb ? I9 : xb, _ = e.rects.popper, P = e.elements[O ? F : w], D = c7(ch(P) ? P : P.contextElement || Ef(e.elements.popper), m, y, d), z = Ug(e.elements.reference), K = Tj({
    reference: z,
    element: _,
    placement: s
  }), Q = Sk(Object.assign({}, _, K)), H = w === xb ? Q : z, I = {
    top: D.top - H.top + L.top,
    bottom: H.bottom - D.bottom + L.bottom,
    left: D.left - H.left + L.left,
    right: H.right - D.right + L.right
  }, U = e.modifiersData.offset;
  if (w === xb && U) {
    var G = U[s];
    Object.keys(I).forEach(function(Y) {
      var te = [ol, rl].indexOf(Y) >= 0 ? 1 : -1, B = [Wa, rl].indexOf(Y) >= 0 ? "y" : "x";
      I[Y] += G[B] * te;
    });
  }
  return I;
}
function d7(e, t) {
  t === void 0 && (t = {});
  var n = t, i = n.placement, s = n.boundary, u = n.rootBoundary, d = n.padding, p = n.flipVariations, m = n.allowedAutoPlacements, v = m === void 0 ? yj : m, y = Gg(i), C = y ? p ? wF : wF.filter(function(O) {
    return Gg(O) === y;
  }) : MC, w = C.filter(function(O) {
    return v.indexOf(O) >= 0;
  });
  w.length === 0 && (w = C);
  var R = w.reduce(function(O, E) {
    return O[E] = oC(e, {
      placement: E,
      boundary: s,
      rootBoundary: u,
      padding: d
    })[Hu(E)], O;
  }, {});
  return Object.keys(R).sort(function(O, E) {
    return R[O] - R[E];
  });
}
function f7(e) {
  if (Hu(e) === RP)
    return [];
  var t = c0(e);
  return [TF(e), t, TF(t)];
}
function p7(e) {
  var t = e.state, n = e.options, i = e.name;
  if (!t.modifiersData[i]._skip) {
    for (var s = n.mainAxis, u = s === void 0 ? !0 : s, d = n.altAxis, p = d === void 0 ? !0 : d, m = n.fallbackPlacements, v = n.padding, y = n.boundary, C = n.rootBoundary, w = n.altBoundary, R = n.flipVariations, O = R === void 0 ? !0 : R, E = n.allowedAutoPlacements, k = t.options.placement, L = Hu(k), F = L === k, _ = m || (F || !O ? [c0(k)] : f7(k)), P = [k].concat(_).reduce(function(ce, me) {
      return ce.concat(Hu(me) === RP ? d7(t, {
        placement: me,
        boundary: y,
        rootBoundary: C,
        padding: v,
        flipVariations: O,
        allowedAutoPlacements: E
      }) : me);
    }, []), D = t.rects.reference, z = t.rects.popper, K = /* @__PURE__ */ new Map(), Q = !0, H = P[0], I = 0; I < P.length; I++) {
      var U = P[I], G = Hu(U), Y = Gg(U) === Vg, te = [Wa, rl].indexOf(G) >= 0, B = te ? "width" : "height", W = oC(t, {
        placement: U,
        boundary: y,
        rootBoundary: C,
        altBoundary: w,
        padding: v
      }), q = te ? Y ? ol : qa : Y ? rl : Wa;
      D[B] > z[B] && (q = c0(q));
      var ne = c0(q), re = [];
      if (u && re.push(W[G] <= 0), p && re.push(W[q] <= 0, W[ne] <= 0), re.every(function(ce) {
        return ce;
      })) {
        H = U, Q = !1;
        break;
      }
      K.set(U, re);
    }
    if (Q)
      for (var X = O ? 3 : 1, j = function(me) {
        var ge = P.find(function(de) {
          var pe = K.get(de);
          if (pe)
            return pe.slice(0, me).every(function(be) {
              return be;
            });
        });
        if (ge)
          return H = ge, "break";
      }, ie = X; ie > 0; ie--) {
        var fe = j(ie);
        if (fe === "break") break;
      }
    t.placement !== H && (t.modifiersData[i]._skip = !0, t.placement = H, t.reset = !0);
  }
}
const h7 = {
  name: "flip",
  enabled: !0,
  phase: "main",
  fn: p7,
  requiresIfExists: ["offset"],
  data: {
    _skip: !1
  }
};
function OF(e, t, n) {
  return n === void 0 && (n = {
    x: 0,
    y: 0
  }), {
    top: e.top - t.height - n.y,
    right: e.right - t.width + n.x,
    bottom: e.bottom - t.height + n.y,
    left: e.left - t.width - n.x
  };
}
function kF(e) {
  return [Wa, ol, rl, qa].some(function(t) {
    return e[t] >= 0;
  });
}
function m7(e) {
  var t = e.state, n = e.name, i = t.rects.reference, s = t.rects.popper, u = t.modifiersData.preventOverflow, d = oC(t, {
    elementContext: "reference"
  }), p = oC(t, {
    altBoundary: !0
  }), m = OF(d, i), v = OF(p, s, u), y = kF(m), C = kF(v);
  t.modifiersData[n] = {
    referenceClippingOffsets: m,
    popperEscapeOffsets: v,
    isReferenceHidden: y,
    hasPopperEscaped: C
  }, t.attributes.popper = Object.assign({}, t.attributes.popper, {
    "data-popper-reference-hidden": y,
    "data-popper-escaped": C
  });
}
const g7 = {
  name: "hide",
  enabled: !0,
  phase: "main",
  requiresIfExists: ["preventOverflow"],
  fn: m7
};
function v7(e, t, n) {
  var i = Hu(e), s = [qa, Wa].indexOf(i) >= 0 ? -1 : 1, u = typeof n == "function" ? n(Object.assign({}, t, {
    placement: e
  })) : n, d = u[0], p = u[1];
  return d = d || 0, p = (p || 0) * s, [qa, ol].indexOf(i) >= 0 ? {
    x: p,
    y: d
  } : {
    x: d,
    y: p
  };
}
function y7(e) {
  var t = e.state, n = e.options, i = e.name, s = n.offset, u = s === void 0 ? [0, 0] : s, d = yj.reduce(function(y, C) {
    return y[C] = v7(C, t.rects, u), y;
  }, {}), p = d[t.placement], m = p.x, v = p.y;
  t.modifiersData.popperOffsets != null && (t.modifiersData.popperOffsets.x += m, t.modifiersData.popperOffsets.y += v), t.modifiersData[i] = d;
}
const b7 = {
  name: "offset",
  enabled: !0,
  phase: "main",
  requires: ["popperOffsets"],
  fn: y7
};
function C7(e) {
  var t = e.state, n = e.name;
  t.modifiersData[n] = Tj({
    reference: t.rects.reference,
    element: t.rects.popper,
    placement: t.placement
  });
}
const S7 = {
  name: "popperOffsets",
  enabled: !0,
  phase: "read",
  fn: C7,
  data: {}
};
function w7(e) {
  return e === "x" ? "y" : "x";
}
function x7(e) {
  var t = e.state, n = e.options, i = e.name, s = n.mainAxis, u = s === void 0 ? !0 : s, d = n.altAxis, p = d === void 0 ? !1 : d, m = n.boundary, v = n.rootBoundary, y = n.altBoundary, C = n.padding, w = n.tether, R = w === void 0 ? !0 : w, O = n.tetherOffset, E = O === void 0 ? 0 : O, k = oC(t, {
    boundary: m,
    rootBoundary: v,
    padding: C,
    altBoundary: y
  }), L = Hu(t.placement), F = Gg(t.placement), _ = !F, P = PP(L), D = w7(P), z = t.modifiersData.popperOffsets, K = t.rects.reference, Q = t.rects.popper, H = typeof E == "function" ? E(Object.assign({}, t.rects, {
    placement: t.placement
  })) : E, I = typeof H == "number" ? {
    mainAxis: H,
    altAxis: H
  } : Object.assign({
    mainAxis: 0,
    altAxis: 0
  }, H), U = t.modifiersData.offset ? t.modifiersData.offset[t.placement] : null, G = {
    x: 0,
    y: 0
  };
  if (z) {
    if (u) {
      var Y, te = P === "y" ? Wa : qa, B = P === "y" ? rl : ol, W = P === "y" ? "height" : "width", q = z[P], ne = q + k[te], re = q - k[B], X = R ? -Q[W] / 2 : 0, j = F === Vg ? K[W] : Q[W], ie = F === Vg ? -Q[W] : -K[W], fe = t.elements.arrow, ce = R && fe ? kP(fe) : {
        width: 0,
        height: 0
      }, me = t.modifiersData["arrow#persistent"] ? t.modifiersData["arrow#persistent"].padding : Sj(), ge = me[te], de = me[B], pe = Ub(0, K[W], ce[W]), be = _ ? K[W] / 2 - X - pe - ge - I.mainAxis : j - pe - ge - I.mainAxis, Ce = _ ? -K[W] / 2 + X + pe + de + I.mainAxis : ie + pe + de + I.mainAxis, Re = t.elements.arrow && IC(t.elements.arrow), ue = Re ? P === "y" ? Re.clientTop || 0 : Re.clientLeft || 0 : 0, we = (Y = U == null ? void 0 : U[P]) != null ? Y : 0, _e = q + be - we - ue, He = q + Ce - we, et = Ub(R ? M0(ne, _e) : ne, q, R ? ih(re, He) : re);
      z[P] = et, G[P] = et - q;
    }
    if (p) {
      var Ne, rt = P === "x" ? Wa : qa, it = P === "x" ? rl : ol, wt = z[D], gt = D === "y" ? "height" : "width", ot = wt + k[rt], jt = wt - k[it], ct = [Wa, qa].indexOf(L) !== -1, Tt = (Ne = U == null ? void 0 : U[D]) != null ? Ne : 0, Rt = ct ? ot : wt - K[gt] - Q[gt] - Tt + I.altAxis, Lt = ct ? wt + K[gt] + Q[gt] - Tt - I.altAxis : jt, vt = R && ct ? q9(Rt, wt, Lt) : Ub(R ? Rt : ot, wt, R ? Lt : jt);
      z[D] = vt, G[D] = vt - wt;
    }
    t.modifiersData[i] = G;
  }
}
const E7 = {
  name: "preventOverflow",
  enabled: !0,
  phase: "main",
  fn: x7,
  requiresIfExists: ["offset"]
};
function T7(e) {
  return {
    scrollLeft: e.scrollLeft,
    scrollTop: e.scrollTop
  };
}
function R7(e) {
  return e === ys(e) || !Zs(e) ? MP(e) : T7(e);
}
function O7(e) {
  var t = e.getBoundingClientRect(), n = Bg(t.width) / e.offsetWidth || 1, i = Bg(t.height) / e.offsetHeight || 1;
  return n !== 1 || i !== 1;
}
function k7(e, t, n) {
  n === void 0 && (n = !1);
  var i = Zs(t), s = Zs(t) && O7(t), u = Ef(t), d = Ug(e, s, n), p = {
    scrollLeft: 0,
    scrollTop: 0
  }, m = {
    x: 0,
    y: 0
  };
  return (i || !i && !n) && ((Gu(t) !== "body" || // https://github.com/popperjs/popper-core/issues/1078
  DP(u)) && (p = R7(t)), Zs(t) ? (m = Ug(t, !0), m.x += t.clientLeft, m.y += t.clientTop) : u && (m.x = IP(u))), {
    x: d.left + p.scrollLeft - m.x,
    y: d.top + p.scrollTop - m.y,
    width: d.width,
    height: d.height
  };
}
function P7(e) {
  var t = /* @__PURE__ */ new Map(), n = /* @__PURE__ */ new Set(), i = [];
  e.forEach(function(u) {
    t.set(u.name, u);
  });
  function s(u) {
    n.add(u.name);
    var d = [].concat(u.requires || [], u.requiresIfExists || []);
    d.forEach(function(p) {
      if (!n.has(p)) {
        var m = t.get(p);
        m && s(m);
      }
    }), i.push(u);
  }
  return e.forEach(function(u) {
    n.has(u.name) || s(u);
  }), i;
}
function M7(e) {
  var t = P7(e);
  return H9.reduce(function(n, i) {
    return n.concat(t.filter(function(s) {
      return s.phase === i;
    }));
  }, []);
}
function I7(e) {
  var t;
  return function() {
    return t || (t = new Promise(function(n) {
      Promise.resolve().then(function() {
        t = void 0, n(e());
      });
    })), t;
  };
}
function D7(e) {
  var t = e.reduce(function(n, i) {
    var s = n[i.name];
    return n[i.name] = s ? Object.assign({}, s, i, {
      options: Object.assign({}, s.options, i.options),
      data: Object.assign({}, s.data, i.data)
    }) : i, n;
  }, {});
  return Object.keys(t).map(function(n) {
    return t[n];
  });
}
var PF = {
  placement: "bottom",
  modifiers: [],
  strategy: "absolute"
};
function MF() {
  for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
    t[n] = arguments[n];
  return !t.some(function(i) {
    return !(i && typeof i.getBoundingClientRect == "function");
  });
}
function N7(e) {
  e === void 0 && (e = {});
  var t = e, n = t.defaultModifiers, i = n === void 0 ? [] : n, s = t.defaultOptions, u = s === void 0 ? PF : s;
  return function(p, m, v) {
    v === void 0 && (v = u);
    var y = {
      placement: "bottom",
      orderedModifiers: [],
      options: Object.assign({}, PF, u),
      modifiersData: {},
      elements: {
        reference: p,
        popper: m
      },
      attributes: {},
      styles: {}
    }, C = [], w = !1, R = {
      state: y,
      setOptions: function(L) {
        var F = typeof L == "function" ? L(y.options) : L;
        E(), y.options = Object.assign({}, u, y.options, F), y.scrollParents = {
          reference: ch(p) ? Gb(p) : p.contextElement ? Gb(p.contextElement) : [],
          popper: Gb(m)
        };
        var _ = M7(D7([].concat(i, y.options.modifiers)));
        return y.orderedModifiers = _.filter(function(P) {
          return P.enabled;
        }), O(), R.update();
      },
      // Sync update – it will always be executed, even if not necessary. This
      // is useful for low frequency updates where sync behavior simplifies the
      // logic.
      // For high frequency updates (e.g. `resize` and `scroll` events), always
      // prefer the async Popper#update method
      forceUpdate: function() {
        if (!w) {
          var L = y.elements, F = L.reference, _ = L.popper;
          if (MF(F, _)) {
            y.rects = {
              reference: k7(F, IC(_), y.options.strategy === "fixed"),
              popper: kP(_)
            }, y.reset = !1, y.placement = y.options.placement, y.orderedModifiers.forEach(function(I) {
              return y.modifiersData[I.name] = Object.assign({}, I.data);
            });
            for (var P = 0; P < y.orderedModifiers.length; P++) {
              if (y.reset === !0) {
                y.reset = !1, P = -1;
                continue;
              }
              var D = y.orderedModifiers[P], z = D.fn, K = D.options, Q = K === void 0 ? {} : K, H = D.name;
              typeof z == "function" && (y = z({
                state: y,
                options: Q,
                name: H,
                instance: R
              }) || y);
            }
          }
        }
      },
      // Async and optimistically optimized update – it will not be executed if
      // not necessary (debounced to run at most once-per-tick)
      update: I7(function() {
        return new Promise(function(k) {
          R.forceUpdate(), k(y);
        });
      }),
      destroy: function() {
        E(), w = !0;
      }
    };
    if (!MF(p, m))
      return R;
    R.setOptions(v).then(function(k) {
      !w && v.onFirstUpdate && v.onFirstUpdate(k);
    });
    function O() {
      y.orderedModifiers.forEach(function(k) {
        var L = k.name, F = k.options, _ = F === void 0 ? {} : F, P = k.effect;
        if (typeof P == "function") {
          var D = P({
            state: y,
            name: L,
            instance: R,
            options: _
          }), z = function() {
          };
          C.push(D || z);
        }
      });
    }
    function E() {
      C.forEach(function(k) {
        return k();
      }), C = [];
    }
    return R;
  };
}
var L7 = [r7, S7, t7, U9, b7, h7, E7, Q9, g7], F7 = /* @__PURE__ */ N7({
  defaultModifiers: L7
});
function _7(e) {
  return typeof e == "function" ? e() : e;
}
const iC = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const {
    children: i,
    container: s,
    disablePortal: u = !1
  } = t, [d, p] = S.useState(null), m = Vr(/* @__PURE__ */ S.isValidElement(i) ? mh(i) : null, n);
  if (Fr(() => {
    u || p(_7(s) || document.body);
  }, [s, u]), Fr(() => {
    if (d && !u)
      return dk(n, d), () => {
        dk(n, null);
      };
  }, [n, d, u]), u) {
    if (/* @__PURE__ */ S.isValidElement(i)) {
      const v = {
        ref: m
      };
      return /* @__PURE__ */ S.cloneElement(i, v);
    }
    return i;
  }
  return d && /* @__PURE__ */ nE.createPortal(i, d);
});
process.env.NODE_ENV !== "production" && (iC.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The children to render into the `container`.
   */
  children: a.node,
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: a.oneOfType([Ul, a.func]),
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: a.bool
});
process.env.NODE_ENV !== "production" && (iC.propTypes = PC(iC.propTypes));
function A7(e) {
  return yn("MuiPopper", e);
}
bn("MuiPopper", ["root"]);
function $7(e, t) {
  if (t === "ltr")
    return e;
  switch (e) {
    case "bottom-end":
      return "bottom-start";
    case "bottom-start":
      return "bottom-end";
    case "top-end":
      return "top-start";
    case "top-start":
      return "top-end";
    default:
      return e;
  }
}
function I0(e) {
  return typeof e == "function" ? e() : e;
}
function EE(e) {
  return e.nodeType !== void 0;
}
function j7(e) {
  return !EE(e);
}
const z7 = (e) => {
  const {
    classes: t
  } = e;
  return yt({
    root: ["root"]
  }, A7, t);
}, H7 = {}, V7 = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const {
    anchorEl: i,
    children: s,
    direction: u,
    disablePortal: d,
    modifiers: p,
    open: m,
    placement: v,
    popperOptions: y,
    popperRef: C,
    slotProps: w = {},
    slots: R = {},
    TransitionProps: O,
    // @ts-ignore internal logic
    ownerState: E,
    // prevent from spreading to DOM, it can come from the parent component e.g. Select.
    ...k
  } = t, L = S.useRef(null), F = Vr(L, n), _ = S.useRef(null), P = Vr(_, C), D = S.useRef(P);
  Fr(() => {
    D.current = P;
  }, [P]), S.useImperativeHandle(C, () => _.current, []);
  const z = $7(v, u), [K, Q] = S.useState(z), [H, I] = S.useState(I0(i));
  S.useEffect(() => {
    _.current && _.current.forceUpdate();
  }), S.useEffect(() => {
    i && I(I0(i));
  }, [i]), Fr(() => {
    if (!H || !m)
      return;
    const B = (ne) => {
      Q(ne.placement);
    };
    if (process.env.NODE_ENV !== "production" && H && EE(H) && H.nodeType === 1) {
      const ne = H.getBoundingClientRect();
      process.env.NODE_ENV !== "test" && ne.top === 0 && ne.left === 0 && ne.right === 0 && ne.bottom === 0 && console.warn(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
    }
    let W = [{
      name: "preventOverflow",
      options: {
        altBoundary: d
      }
    }, {
      name: "flip",
      options: {
        altBoundary: d
      }
    }, {
      name: "onUpdate",
      enabled: !0,
      phase: "afterWrite",
      fn: ({
        state: ne
      }) => {
        B(ne);
      }
    }];
    p != null && (W = W.concat(p)), y && y.modifiers != null && (W = W.concat(y.modifiers));
    const q = F7(H, L.current, {
      placement: z,
      ...y,
      modifiers: W
    });
    return D.current(q), () => {
      q.destroy(), D.current(null);
    };
  }, [H, d, p, m, y, z]);
  const U = {
    placement: K
  };
  O !== null && (U.TransitionProps = O);
  const G = z7(t), Y = R.root ?? "div", te = Hg({
    elementType: Y,
    externalSlotProps: w.root,
    externalForwardedProps: k,
    additionalProps: {
      role: "tooltip",
      ref: F
    },
    ownerState: t,
    className: G.root
  });
  return /* @__PURE__ */ A.jsx(Y, {
    ...te,
    children: typeof s == "function" ? s(U) : s
  });
}), Rj = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const {
    anchorEl: i,
    children: s,
    container: u,
    direction: d = "ltr",
    disablePortal: p = !1,
    keepMounted: m = !1,
    modifiers: v,
    open: y,
    placement: C = "bottom",
    popperOptions: w = H7,
    popperRef: R,
    style: O,
    transition: E = !1,
    slotProps: k = {},
    slots: L = {},
    ...F
  } = t, [_, P] = S.useState(!0), D = () => {
    P(!1);
  }, z = () => {
    P(!0);
  };
  if (!m && !y && (!E || _))
    return null;
  let K;
  if (u)
    K = u;
  else if (i) {
    const I = I0(i);
    K = I && EE(I) ? ao(I).body : ao(null).body;
  }
  const Q = !y && m && (!E || _) ? "none" : void 0, H = E ? {
    in: y,
    onEnter: D,
    onExited: z
  } : void 0;
  return /* @__PURE__ */ A.jsx(iC, {
    disablePortal: p,
    container: K,
    children: /* @__PURE__ */ A.jsx(V7, {
      anchorEl: i,
      direction: d,
      disablePortal: p,
      modifiers: v,
      ref: n,
      open: E ? !_ : y,
      placement: C,
      popperOptions: w,
      popperRef: R,
      slotProps: k,
      slots: L,
      ...F,
      style: {
        // Prevents scroll issue, waiting for Popper.js to add this style once initiated.
        position: "fixed",
        // Fix Popper.js display issue
        top: 0,
        left: 0,
        display: Q,
        ...O
      },
      TransitionProps: H,
      children: s
    })
  });
});
process.env.NODE_ENV !== "production" && (Rj.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * An HTML element, [virtualElement](https://popper.js.org/docs/v2/virtual-elements/),
   * or a function that returns either.
   * It's used to set the position of the popper.
   * The return value will passed as the reference object of the Popper instance.
   */
  anchorEl: Bl(a.oneOfType([Ul, a.object, a.func]), (e) => {
    if (e.open) {
      const t = I0(e.anchorEl);
      if (t && EE(t) && t.nodeType === 1) {
        const n = t.getBoundingClientRect();
        if (process.env.NODE_ENV !== "test" && n.top === 0 && n.left === 0 && n.right === 0 && n.bottom === 0)
          return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
      } else if (!t || typeof t.getBoundingClientRect != "function" || j7(t) && t.contextElement != null && t.contextElement.nodeType !== 1)
        return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", "It should be an HTML element instance or a virtualElement ", "(https://popper.js.org/docs/v2/virtual-elements/)."].join(`
`));
    }
    return null;
  }),
  /**
   * Popper render function or node.
   */
  children: a.oneOfType([a.node, a.func]),
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: a.oneOfType([Ul, a.func]),
  /**
   * Direction of the text.
   * @default 'ltr'
   */
  direction: a.oneOf(["ltr", "rtl"]),
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: a.bool,
  /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Popper.
   * @default false
   */
  keepMounted: a.bool,
  /**
   * Popper.js is based on a "plugin-like" architecture,
   * most of its features are fully encapsulated "modifiers".
   *
   * A modifier is a function that is called each time Popper.js needs to
   * compute the position of the popper.
   * For this reason, modifiers should be very performant to avoid bottlenecks.
   * To learn how to create a modifier, [read the modifiers documentation](https://popper.js.org/docs/v2/modifiers/).
   */
  modifiers: a.arrayOf(a.shape({
    data: a.object,
    effect: a.func,
    enabled: a.bool,
    fn: a.func,
    name: a.any,
    options: a.object,
    phase: a.oneOf(["afterMain", "afterRead", "afterWrite", "beforeMain", "beforeRead", "beforeWrite", "main", "read", "write"]),
    requires: a.arrayOf(a.string),
    requiresIfExists: a.arrayOf(a.string)
  })),
  /**
   * If `true`, the component is shown.
   */
  open: a.bool.isRequired,
  /**
   * Popper placement.
   * @default 'bottom'
   */
  placement: a.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  /**
   * Options provided to the [`Popper.js`](https://popper.js.org/docs/v2/constructors/#options) instance.
   * @default {}
   */
  popperOptions: a.shape({
    modifiers: a.array,
    onFirstUpdate: a.func,
    placement: a.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
    strategy: a.oneOf(["absolute", "fixed"])
  }),
  /**
   * A ref that points to the used popper instance.
   */
  popperRef: Ea,
  /**
   * The props used for each slot inside the Popper.
   * @default {}
   */
  slotProps: a.shape({
    root: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside the Popper.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: a.shape({
    root: a.elementType
  }),
  /**
   * Help supporting a react-transition-group/Transition component.
   * @default false
   */
  transition: a.bool
});
const B7 = Ue(Rj, {
  name: "MuiPopper",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({}), Tf = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const i = ji(), s = Tn({
    props: t,
    name: "MuiPopper"
  }), {
    anchorEl: u,
    component: d,
    components: p,
    componentsProps: m,
    container: v,
    disablePortal: y,
    keepMounted: C,
    modifiers: w,
    open: R,
    placement: O,
    popperOptions: E,
    popperRef: k,
    transition: L,
    slots: F,
    slotProps: _,
    ...P
  } = s, D = (F == null ? void 0 : F.root) ?? (p == null ? void 0 : p.Root), z = {
    anchorEl: u,
    container: v,
    disablePortal: y,
    keepMounted: C,
    modifiers: w,
    open: R,
    placement: O,
    popperOptions: E,
    popperRef: k,
    transition: L,
    ...P
  };
  return /* @__PURE__ */ A.jsx(B7, {
    as: d,
    direction: i ? "rtl" : "ltr",
    slots: {
      root: D
    },
    slotProps: _ ?? m,
    ...z,
    ref: n
  });
});
process.env.NODE_ENV !== "production" && (Tf.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * An HTML element, [virtualElement](https://popper.js.org/docs/v2/virtual-elements/),
   * or a function that returns either.
   * It's used to set the position of the popper.
   * The return value will passed as the reference object of the Popper instance.
   */
  anchorEl: a.oneOfType([Ul, a.object, a.func]),
  /**
   * Popper render function or node.
   */
  children: a.oneOfType([a.node, a.func]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * The components used for each slot inside the Popper.
   * Either a string to use a HTML element or a component.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in v7. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/).
   * @default {}
   */
  components: a.shape({
    Root: a.elementType
  }),
  /**
   * The props used for each slot inside the Popper.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/).
   * @default {}
   */
  componentsProps: a.shape({
    root: a.oneOfType([a.func, a.object])
  }),
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: a.oneOfType([Ul, a.func]),
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: a.bool,
  /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Popper.
   * @default false
   */
  keepMounted: a.bool,
  /**
   * Popper.js is based on a "plugin-like" architecture,
   * most of its features are fully encapsulated "modifiers".
   *
   * A modifier is a function that is called each time Popper.js needs to
   * compute the position of the popper.
   * For this reason, modifiers should be very performant to avoid bottlenecks.
   * To learn how to create a modifier, [read the modifiers documentation](https://popper.js.org/docs/v2/modifiers/).
   */
  modifiers: a.arrayOf(a.shape({
    data: a.object,
    effect: a.func,
    enabled: a.bool,
    fn: a.func,
    name: a.any,
    options: a.object,
    phase: a.oneOf(["afterMain", "afterRead", "afterWrite", "beforeMain", "beforeRead", "beforeWrite", "main", "read", "write"]),
    requires: a.arrayOf(a.string),
    requiresIfExists: a.arrayOf(a.string)
  })),
  /**
   * If `true`, the component is shown.
   */
  open: a.bool.isRequired,
  /**
   * Popper placement.
   * @default 'bottom'
   */
  placement: a.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  /**
   * Options provided to the [`Popper.js`](https://popper.js.org/docs/v2/constructors/#options) instance.
   * @default {}
   */
  popperOptions: a.shape({
    modifiers: a.array,
    onFirstUpdate: a.func,
    placement: a.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
    strategy: a.oneOf(["absolute", "fixed"])
  }),
  /**
   * A ref that points to the used popper instance.
   */
  popperRef: Ea,
  /**
   * The props used for each slot inside the Popper.
   * @default {}
   */
  slotProps: a.shape({
    root: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside the Popper.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: a.shape({
    root: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * Help supporting a react-transition-group/Transition component.
   * @default false
   */
  transition: a.bool
});
function U7(e) {
  return yn("MuiListSubheader", e);
}
bn("MuiListSubheader", ["root", "colorPrimary", "colorInherit", "gutters", "inset", "sticky"]);
const G7 = (e) => {
  const {
    classes: t,
    color: n,
    disableGutters: i,
    inset: s,
    disableSticky: u
  } = e, d = {
    root: ["root", n !== "default" && `color${Be(n)}`, !i && "gutters", s && "inset", !u && "sticky"]
  };
  return yt(d, U7, t);
}, W7 = Ue("li", {
  name: "MuiListSubheader",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.color !== "default" && t[`color${Be(n.color)}`], !n.disableGutters && t.gutters, n.inset && t.inset, !n.disableSticky && t.sticky];
  }
})(rn(({
  theme: e
}) => ({
  boxSizing: "border-box",
  lineHeight: "48px",
  listStyle: "none",
  color: (e.vars || e).palette.text.secondary,
  fontFamily: e.typography.fontFamily,
  fontWeight: e.typography.fontWeightMedium,
  fontSize: e.typography.pxToRem(14),
  variants: [{
    props: {
      color: "primary"
    },
    style: {
      color: (e.vars || e).palette.primary.main
    }
  }, {
    props: {
      color: "inherit"
    },
    style: {
      color: "inherit"
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.disableGutters,
    style: {
      paddingLeft: 16,
      paddingRight: 16
    }
  }, {
    props: ({
      ownerState: t
    }) => t.inset,
    style: {
      paddingLeft: 72
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.disableSticky,
    style: {
      position: "sticky",
      top: 0,
      zIndex: 1,
      backgroundColor: (e.vars || e).palette.background.paper
    }
  }]
}))), D0 = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const i = Tn({
    props: t,
    name: "MuiListSubheader"
  }), {
    className: s,
    color: u = "default",
    component: d = "li",
    disableGutters: p = !1,
    disableSticky: m = !1,
    inset: v = !1,
    ...y
  } = i, C = {
    ...i,
    color: u,
    component: d,
    disableGutters: p,
    disableSticky: m,
    inset: v
  }, w = G7(C);
  return /* @__PURE__ */ A.jsx(W7, {
    as: d,
    className: nt(w.root, s),
    ref: n,
    ownerState: C,
    ...y
  });
});
D0 && (D0.muiSkipListHighlight = !0);
process.env.NODE_ENV !== "production" && (D0.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component. It supports those theme colors that make sense for this component.
   * @default 'default'
   */
  color: a.oneOf(["default", "inherit", "primary"]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * If `true`, the List Subheader will not have gutters.
   * @default false
   */
  disableGutters: a.bool,
  /**
   * If `true`, the List Subheader will not stick to the top during scroll.
   * @default false
   */
  disableSticky: a.bool,
  /**
   * If `true`, the List Subheader is indented.
   * @default false
   */
  inset: a.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
const q7 = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z"
}), "Cancel");
function K7(e) {
  return yn("MuiChip", e);
}
const Jn = bn("MuiChip", ["root", "sizeSmall", "sizeMedium", "colorDefault", "colorError", "colorInfo", "colorPrimary", "colorSecondary", "colorSuccess", "colorWarning", "disabled", "clickable", "clickableColorPrimary", "clickableColorSecondary", "deletable", "deletableColorPrimary", "deletableColorSecondary", "outlined", "filled", "outlinedPrimary", "outlinedSecondary", "filledPrimary", "filledSecondary", "avatar", "avatarSmall", "avatarMedium", "avatarColorPrimary", "avatarColorSecondary", "icon", "iconSmall", "iconMedium", "iconColorPrimary", "iconColorSecondary", "label", "labelSmall", "labelMedium", "deleteIcon", "deleteIconSmall", "deleteIconMedium", "deleteIconColorPrimary", "deleteIconColorSecondary", "deleteIconOutlinedColorPrimary", "deleteIconOutlinedColorSecondary", "deleteIconFilledColorPrimary", "deleteIconFilledColorSecondary", "focusVisible"]), Y7 = (e) => {
  const {
    classes: t,
    disabled: n,
    size: i,
    color: s,
    iconColor: u,
    onDelete: d,
    clickable: p,
    variant: m
  } = e, v = {
    root: ["root", m, n && "disabled", `size${Be(i)}`, `color${Be(s)}`, p && "clickable", p && `clickableColor${Be(s)}`, d && "deletable", d && `deletableColor${Be(s)}`, `${m}${Be(s)}`],
    label: ["label", `label${Be(i)}`],
    avatar: ["avatar", `avatar${Be(i)}`, `avatarColor${Be(s)}`],
    icon: ["icon", `icon${Be(i)}`, `iconColor${Be(u)}`],
    deleteIcon: ["deleteIcon", `deleteIcon${Be(i)}`, `deleteIconColor${Be(s)}`, `deleteIcon${Be(m)}Color${Be(s)}`]
  };
  return yt(v, K7, t);
}, X7 = Ue("div", {
  name: "MuiChip",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e, {
      color: i,
      iconColor: s,
      clickable: u,
      onDelete: d,
      size: p,
      variant: m
    } = n;
    return [{
      [`& .${Jn.avatar}`]: t.avatar
    }, {
      [`& .${Jn.avatar}`]: t[`avatar${Be(p)}`]
    }, {
      [`& .${Jn.avatar}`]: t[`avatarColor${Be(i)}`]
    }, {
      [`& .${Jn.icon}`]: t.icon
    }, {
      [`& .${Jn.icon}`]: t[`icon${Be(p)}`]
    }, {
      [`& .${Jn.icon}`]: t[`iconColor${Be(s)}`]
    }, {
      [`& .${Jn.deleteIcon}`]: t.deleteIcon
    }, {
      [`& .${Jn.deleteIcon}`]: t[`deleteIcon${Be(p)}`]
    }, {
      [`& .${Jn.deleteIcon}`]: t[`deleteIconColor${Be(i)}`]
    }, {
      [`& .${Jn.deleteIcon}`]: t[`deleteIcon${Be(m)}Color${Be(i)}`]
    }, t.root, t[`size${Be(p)}`], t[`color${Be(i)}`], u && t.clickable, u && i !== "default" && t[`clickableColor${Be(i)})`], d && t.deletable, d && i !== "default" && t[`deletableColor${Be(i)}`], t[m], t[`${m}${Be(i)}`]];
  }
})(rn(({
  theme: e
}) => {
  const t = e.palette.mode === "light" ? e.palette.grey[700] : e.palette.grey[300];
  return {
    maxWidth: "100%",
    fontFamily: e.typography.fontFamily,
    fontSize: e.typography.pxToRem(13),
    display: "inline-flex",
    alignItems: "center",
    justifyContent: "center",
    height: 32,
    color: (e.vars || e).palette.text.primary,
    backgroundColor: (e.vars || e).palette.action.selected,
    borderRadius: 32 / 2,
    whiteSpace: "nowrap",
    transition: e.transitions.create(["background-color", "box-shadow"]),
    // reset cursor explicitly in case ButtonBase is used
    cursor: "unset",
    // We disable the focus ring for mouse, touch and keyboard users.
    outline: 0,
    textDecoration: "none",
    border: 0,
    // Remove `button` border
    padding: 0,
    // Remove `button` padding
    verticalAlign: "middle",
    boxSizing: "border-box",
    [`&.${Jn.disabled}`]: {
      opacity: (e.vars || e).palette.action.disabledOpacity,
      pointerEvents: "none"
    },
    [`& .${Jn.avatar}`]: {
      marginLeft: 5,
      marginRight: -6,
      width: 24,
      height: 24,
      color: e.vars ? e.vars.palette.Chip.defaultAvatarColor : t,
      fontSize: e.typography.pxToRem(12)
    },
    [`& .${Jn.avatarColorPrimary}`]: {
      color: (e.vars || e).palette.primary.contrastText,
      backgroundColor: (e.vars || e).palette.primary.dark
    },
    [`& .${Jn.avatarColorSecondary}`]: {
      color: (e.vars || e).palette.secondary.contrastText,
      backgroundColor: (e.vars || e).palette.secondary.dark
    },
    [`& .${Jn.avatarSmall}`]: {
      marginLeft: 4,
      marginRight: -4,
      width: 18,
      height: 18,
      fontSize: e.typography.pxToRem(10)
    },
    [`& .${Jn.icon}`]: {
      marginLeft: 5,
      marginRight: -6
    },
    [`& .${Jn.deleteIcon}`]: {
      WebkitTapHighlightColor: "transparent",
      color: e.vars ? `rgba(${e.vars.palette.text.primaryChannel} / 0.26)` : $n(e.palette.text.primary, 0.26),
      fontSize: 22,
      cursor: "pointer",
      margin: "0 5px 0 -6px",
      "&:hover": {
        color: e.vars ? `rgba(${e.vars.palette.text.primaryChannel} / 0.4)` : $n(e.palette.text.primary, 0.4)
      }
    },
    variants: [{
      props: {
        size: "small"
      },
      style: {
        height: 24,
        [`& .${Jn.icon}`]: {
          fontSize: 18,
          marginLeft: 4,
          marginRight: -4
        },
        [`& .${Jn.deleteIcon}`]: {
          fontSize: 16,
          marginRight: 4,
          marginLeft: -4
        }
      }
    }, ...Object.entries(e.palette).filter(to(["contrastText"])).map(([n]) => ({
      props: {
        color: n
      },
      style: {
        backgroundColor: (e.vars || e).palette[n].main,
        color: (e.vars || e).palette[n].contrastText,
        [`& .${Jn.deleteIcon}`]: {
          color: e.vars ? `rgba(${e.vars.palette[n].contrastTextChannel} / 0.7)` : $n(e.palette[n].contrastText, 0.7),
          "&:hover, &:active": {
            color: (e.vars || e).palette[n].contrastText
          }
        }
      }
    })), {
      props: (n) => n.iconColor === n.color,
      style: {
        [`& .${Jn.icon}`]: {
          color: e.vars ? e.vars.palette.Chip.defaultIconColor : t
        }
      }
    }, {
      props: (n) => n.iconColor === n.color && n.color !== "default",
      style: {
        [`& .${Jn.icon}`]: {
          color: "inherit"
        }
      }
    }, {
      props: {
        onDelete: !0
      },
      style: {
        [`&.${Jn.focusVisible}`]: {
          backgroundColor: e.vars ? `rgba(${e.vars.palette.action.selectedChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.focusOpacity}))` : $n(e.palette.action.selected, e.palette.action.selectedOpacity + e.palette.action.focusOpacity)
        }
      }
    }, ...Object.entries(e.palette).filter(to(["dark"])).map(([n]) => ({
      props: {
        color: n,
        onDelete: !0
      },
      style: {
        [`&.${Jn.focusVisible}`]: {
          background: (e.vars || e).palette[n].dark
        }
      }
    })), {
      props: {
        clickable: !0
      },
      style: {
        userSelect: "none",
        WebkitTapHighlightColor: "transparent",
        cursor: "pointer",
        "&:hover": {
          backgroundColor: e.vars ? `rgba(${e.vars.palette.action.selectedChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.hoverOpacity}))` : $n(e.palette.action.selected, e.palette.action.selectedOpacity + e.palette.action.hoverOpacity)
        },
        [`&.${Jn.focusVisible}`]: {
          backgroundColor: e.vars ? `rgba(${e.vars.palette.action.selectedChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.focusOpacity}))` : $n(e.palette.action.selected, e.palette.action.selectedOpacity + e.palette.action.focusOpacity)
        },
        "&:active": {
          boxShadow: (e.vars || e).shadows[1]
        }
      }
    }, ...Object.entries(e.palette).filter(to(["dark"])).map(([n]) => ({
      props: {
        color: n,
        clickable: !0
      },
      style: {
        [`&:hover, &.${Jn.focusVisible}`]: {
          backgroundColor: (e.vars || e).palette[n].dark
        }
      }
    })), {
      props: {
        variant: "outlined"
      },
      style: {
        backgroundColor: "transparent",
        border: e.vars ? `1px solid ${e.vars.palette.Chip.defaultBorder}` : `1px solid ${e.palette.mode === "light" ? e.palette.grey[400] : e.palette.grey[700]}`,
        [`&.${Jn.clickable}:hover`]: {
          backgroundColor: (e.vars || e).palette.action.hover
        },
        [`&.${Jn.focusVisible}`]: {
          backgroundColor: (e.vars || e).palette.action.focus
        },
        [`& .${Jn.avatar}`]: {
          marginLeft: 4
        },
        [`& .${Jn.avatarSmall}`]: {
          marginLeft: 2
        },
        [`& .${Jn.icon}`]: {
          marginLeft: 4
        },
        [`& .${Jn.iconSmall}`]: {
          marginLeft: 2
        },
        [`& .${Jn.deleteIcon}`]: {
          marginRight: 5
        },
        [`& .${Jn.deleteIconSmall}`]: {
          marginRight: 3
        }
      }
    }, ...Object.entries(e.palette).filter(to()).map(([n]) => ({
      props: {
        variant: "outlined",
        color: n
      },
      style: {
        color: (e.vars || e).palette[n].main,
        border: `1px solid ${e.vars ? `rgba(${e.vars.palette[n].mainChannel} / 0.7)` : $n(e.palette[n].main, 0.7)}`,
        [`&.${Jn.clickable}:hover`]: {
          backgroundColor: e.vars ? `rgba(${e.vars.palette[n].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : $n(e.palette[n].main, e.palette.action.hoverOpacity)
        },
        [`&.${Jn.focusVisible}`]: {
          backgroundColor: e.vars ? `rgba(${e.vars.palette[n].mainChannel} / ${e.vars.palette.action.focusOpacity})` : $n(e.palette[n].main, e.palette.action.focusOpacity)
        },
        [`& .${Jn.deleteIcon}`]: {
          color: e.vars ? `rgba(${e.vars.palette[n].mainChannel} / 0.7)` : $n(e.palette[n].main, 0.7),
          "&:hover, &:active": {
            color: (e.vars || e).palette[n].main
          }
        }
      }
    }))]
  };
})), Q7 = Ue("span", {
  name: "MuiChip",
  slot: "Label",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e, {
      size: i
    } = n;
    return [t.label, t[`label${Be(i)}`]];
  }
})({
  overflow: "hidden",
  textOverflow: "ellipsis",
  paddingLeft: 12,
  paddingRight: 12,
  whiteSpace: "nowrap",
  variants: [{
    props: {
      variant: "outlined"
    },
    style: {
      paddingLeft: 11,
      paddingRight: 11
    }
  }, {
    props: {
      size: "small"
    },
    style: {
      paddingLeft: 8,
      paddingRight: 8
    }
  }, {
    props: {
      size: "small",
      variant: "outlined"
    },
    style: {
      paddingLeft: 7,
      paddingRight: 7
    }
  }]
});
function IF(e) {
  return e.key === "Backspace" || e.key === "Delete";
}
const NP = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const i = Tn({
    props: t,
    name: "MuiChip"
  }), {
    avatar: s,
    className: u,
    clickable: d,
    color: p = "default",
    component: m,
    deleteIcon: v,
    disabled: y = !1,
    icon: C,
    label: w,
    onClick: R,
    onDelete: O,
    onKeyDown: E,
    onKeyUp: k,
    size: L = "medium",
    variant: F = "filled",
    tabIndex: _,
    skipFocusWhenDisabled: P = !1,
    // TODO v6: Rename to `focusableWhenDisabled`.
    ...D
  } = i, z = S.useRef(null), K = Vr(z, n), Q = (re) => {
    re.stopPropagation(), O && O(re);
  }, H = (re) => {
    re.currentTarget === re.target && IF(re) && re.preventDefault(), E && E(re);
  }, I = (re) => {
    re.currentTarget === re.target && O && IF(re) && O(re), k && k(re);
  }, U = d !== !1 && R ? !0 : d, G = U || O ? Kc : m || "div", Y = {
    ...i,
    component: G,
    disabled: y,
    size: L,
    color: p,
    iconColor: /* @__PURE__ */ S.isValidElement(C) && C.props.color || p,
    onDelete: !!O,
    clickable: U,
    variant: F
  }, te = Y7(Y), B = G === Kc ? {
    component: m || "div",
    focusVisibleClassName: te.focusVisible,
    ...O && {
      disableRipple: !0
    }
  } : {};
  let W = null;
  O && (W = v && /* @__PURE__ */ S.isValidElement(v) ? /* @__PURE__ */ S.cloneElement(v, {
    className: nt(v.props.className, te.deleteIcon),
    onClick: Q
  }) : /* @__PURE__ */ A.jsx(q7, {
    className: nt(te.deleteIcon),
    onClick: Q
  }));
  let q = null;
  s && /* @__PURE__ */ S.isValidElement(s) && (q = /* @__PURE__ */ S.cloneElement(s, {
    className: nt(te.avatar, s.props.className)
  }));
  let ne = null;
  return C && /* @__PURE__ */ S.isValidElement(C) && (ne = /* @__PURE__ */ S.cloneElement(C, {
    className: nt(te.icon, C.props.className)
  })), process.env.NODE_ENV !== "production" && q && ne && console.error("MUI: The Chip component can not handle the avatar and the icon prop at the same time. Pick one."), /* @__PURE__ */ A.jsxs(X7, {
    as: G,
    className: nt(te.root, u),
    disabled: U && y ? !0 : void 0,
    onClick: R,
    onKeyDown: H,
    onKeyUp: I,
    ref: K,
    tabIndex: P && y ? -1 : _,
    ownerState: Y,
    ...B,
    ...D,
    children: [q || ne, /* @__PURE__ */ A.jsx(Q7, {
      className: nt(te.label),
      ownerState: Y,
      children: w
    }), W]
  });
});
process.env.NODE_ENV !== "production" && (NP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The Avatar element to display.
   */
  avatar: a.element,
  /**
   * This prop isn't supported.
   * Use the `component` prop if you need to change the children structure.
   */
  children: H$,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * If `true`, the chip will appear clickable, and will raise when pressed,
   * even if the onClick prop is not defined.
   * If `false`, the chip will not appear clickable, even if onClick prop is defined.
   * This can be used, for example,
   * along with the component prop to indicate an anchor Chip is clickable.
   * Note: this controls the UI and does not affect the onClick event.
   */
  clickable: a.bool,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'default'
   */
  color: a.oneOfType([a.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), a.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * Override the default delete icon element. Shown only if `onDelete` is set.
   */
  deleteIcon: a.element,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: a.bool,
  /**
   * Icon element.
   */
  icon: a.element,
  /**
   * The content of the component.
   */
  label: a.node,
  /**
   * @ignore
   */
  onClick: a.func,
  /**
   * Callback fired when the delete icon is clicked.
   * If set, the delete icon will be shown.
   */
  onDelete: a.func,
  /**
   * @ignore
   */
  onKeyDown: a.func,
  /**
   * @ignore
   */
  onKeyUp: a.func,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: a.oneOfType([a.oneOf(["medium", "small"]), a.string]),
  /**
   * If `true`, allows the disabled chip to escape focus.
   * If `false`, allows the disabled chip to receive focus.
   * @default false
   */
  skipFocusWhenDisabled: a.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * @ignore
   */
  tabIndex: a.number,
  /**
   * The variant to use.
   * @default 'filled'
   */
  variant: a.oneOfType([a.oneOf(["filled", "outlined"]), a.string])
});
function Xx(e) {
  return parseInt(e, 10) || 0;
}
const J7 = {
  shadow: {
    // Visibility needed to hide the extra text area on iPads
    visibility: "hidden",
    // Remove from the content flow
    position: "absolute",
    // Ignore the scrollbar width
    overflow: "hidden",
    height: 0,
    top: 0,
    left: 0,
    // Create a new layer, increase the isolation of the computed values
    transform: "translateZ(0)"
  }
};
function Z7(e) {
  for (const t in e)
    return !1;
  return !0;
}
function DF(e) {
  return Z7(e) || e.outerHeightStyle === 0 && !e.overflowing;
}
const Oj = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const {
    onChange: i,
    maxRows: s,
    minRows: u = 1,
    style: d,
    value: p,
    ...m
  } = t, {
    current: v
  } = S.useRef(p != null), y = S.useRef(null), C = Vr(n, y), w = S.useRef(null), R = S.useRef(null), O = S.useCallback(() => {
    const _ = y.current, P = R.current;
    if (!_ || !P)
      return;
    const z = nl(_).getComputedStyle(_);
    if (z.width === "0px")
      return {
        outerHeightStyle: 0,
        overflowing: !1
      };
    P.style.width = z.width, P.value = _.value || t.placeholder || "x", P.value.slice(-1) === `
` && (P.value += " ");
    const K = z.boxSizing, Q = Xx(z.paddingBottom) + Xx(z.paddingTop), H = Xx(z.borderBottomWidth) + Xx(z.borderTopWidth), I = P.scrollHeight;
    P.value = "x";
    const U = P.scrollHeight;
    let G = I;
    u && (G = Math.max(Number(u) * U, G)), s && (G = Math.min(Number(s) * U, G)), G = Math.max(G, U);
    const Y = G + (K === "border-box" ? Q + H : 0), te = Math.abs(G - I) <= 1;
    return {
      outerHeightStyle: Y,
      overflowing: te
    };
  }, [s, u, t.placeholder]), E = Nn(() => {
    const _ = y.current, P = O();
    if (!_ || !P || DF(P))
      return !1;
    const D = P.outerHeightStyle;
    return w.current != null && w.current !== D;
  }), k = S.useCallback(() => {
    const _ = y.current, P = O();
    if (!_ || !P || DF(P))
      return;
    const D = P.outerHeightStyle;
    w.current !== D && (w.current = D, _.style.height = `${D}px`), _.style.overflow = P.overflowing ? "hidden" : "";
  }, [O]), L = S.useRef(-1);
  Fr(() => {
    const _ = bE(k), P = y == null ? void 0 : y.current;
    if (!P)
      return;
    const D = nl(P);
    D.addEventListener("resize", _);
    let z;
    return typeof ResizeObserver < "u" && (z = new ResizeObserver(() => {
      E() && (z.unobserve(P), cancelAnimationFrame(L.current), k(), L.current = requestAnimationFrame(() => {
        z.observe(P);
      }));
    }), z.observe(P)), () => {
      _.clear(), cancelAnimationFrame(L.current), D.removeEventListener("resize", _), z && z.disconnect();
    };
  }, [O, k, E]), Fr(() => {
    k();
  });
  const F = (_) => {
    v || k(), i && i(_);
  };
  return /* @__PURE__ */ A.jsxs(S.Fragment, {
    children: [/* @__PURE__ */ A.jsx("textarea", {
      value: p,
      onChange: F,
      ref: C,
      rows: u,
      style: d,
      ...m
    }), /* @__PURE__ */ A.jsx("textarea", {
      "aria-hidden": !0,
      className: t.className,
      readOnly: !0,
      ref: R,
      tabIndex: -1,
      style: {
        ...J7.shadow,
        ...d,
        paddingTop: 0,
        paddingBottom: 0
      }
    })]
  });
});
process.env.NODE_ENV !== "production" && (Oj.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  className: a.string,
  /**
   * Maximum number of rows to display.
   */
  maxRows: a.oneOfType([a.number, a.string]),
  /**
   * Minimum number of rows to display.
   * @default 1
   */
  minRows: a.oneOfType([a.number, a.string]),
  /**
   * @ignore
   */
  onChange: a.func,
  /**
   * @ignore
   */
  placeholder: a.string,
  /**
   * @ignore
   */
  style: a.object,
  /**
   * @ignore
   */
  value: a.oneOfType([a.arrayOf(a.string), a.number, a.string])
});
function wk(e) {
  return typeof e == "string";
}
function gh({
  props: e,
  states: t,
  muiFormControl: n
}) {
  return t.reduce((i, s) => (i[s] = e[s], n && typeof e[s] > "u" && (i[s] = n[s]), i), {});
}
const DC = /* @__PURE__ */ S.createContext(void 0);
process.env.NODE_ENV !== "production" && (DC.displayName = "FormControlContext");
function Xc() {
  return S.useContext(DC);
}
function NF(e) {
  return e != null && !(Array.isArray(e) && e.length === 0);
}
function N0(e, t = !1) {
  return e && (NF(e.value) && e.value !== "" || t && NF(e.defaultValue) && e.defaultValue !== "");
}
function eK(e) {
  return e.startAdornment;
}
function tK(e) {
  return yn("MuiInputBase", e);
}
const yi = bn("MuiInputBase", ["root", "formControl", "focused", "disabled", "adornedStart", "adornedEnd", "error", "sizeSmall", "multiline", "colorSecondary", "fullWidth", "hiddenLabel", "readOnly", "input", "inputSizeSmall", "inputMultiline", "inputTypeSearch", "inputAdornedStart", "inputAdornedEnd", "inputHiddenLabel"]);
var LF;
const TE = (e, t) => {
  const {
    ownerState: n
  } = e;
  return [t.root, n.formControl && t.formControl, n.startAdornment && t.adornedStart, n.endAdornment && t.adornedEnd, n.error && t.error, n.size === "small" && t.sizeSmall, n.multiline && t.multiline, n.color && t[`color${Be(n.color)}`], n.fullWidth && t.fullWidth, n.hiddenLabel && t.hiddenLabel];
}, RE = (e, t) => {
  const {
    ownerState: n
  } = e;
  return [t.input, n.size === "small" && t.inputSizeSmall, n.multiline && t.inputMultiline, n.type === "search" && t.inputTypeSearch, n.startAdornment && t.inputAdornedStart, n.endAdornment && t.inputAdornedEnd, n.hiddenLabel && t.inputHiddenLabel];
}, nK = (e) => {
  const {
    classes: t,
    color: n,
    disabled: i,
    error: s,
    endAdornment: u,
    focused: d,
    formControl: p,
    fullWidth: m,
    hiddenLabel: v,
    multiline: y,
    readOnly: C,
    size: w,
    startAdornment: R,
    type: O
  } = e, E = {
    root: ["root", `color${Be(n)}`, i && "disabled", s && "error", m && "fullWidth", d && "focused", p && "formControl", w && w !== "medium" && `size${Be(w)}`, y && "multiline", R && "adornedStart", u && "adornedEnd", v && "hiddenLabel", C && "readOnly"],
    input: ["input", i && "disabled", O === "search" && "inputTypeSearch", y && "inputMultiline", w === "small" && "inputSizeSmall", v && "inputHiddenLabel", R && "inputAdornedStart", u && "inputAdornedEnd", C && "readOnly"]
  };
  return yt(E, tK, t);
}, OE = Ue("div", {
  name: "MuiInputBase",
  slot: "Root",
  overridesResolver: TE
})(rn(({
  theme: e
}) => ({
  ...e.typography.body1,
  color: (e.vars || e).palette.text.primary,
  lineHeight: "1.4375em",
  // 23px
  boxSizing: "border-box",
  // Prevent padding issue with fullWidth.
  position: "relative",
  cursor: "text",
  display: "inline-flex",
  alignItems: "center",
  [`&.${yi.disabled}`]: {
    color: (e.vars || e).palette.text.disabled,
    cursor: "default"
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.multiline,
    style: {
      padding: "4px 0 5px"
    }
  }, {
    props: ({
      ownerState: t,
      size: n
    }) => t.multiline && n === "small",
    style: {
      paddingTop: 1
    }
  }, {
    props: ({
      ownerState: t
    }) => t.fullWidth,
    style: {
      width: "100%"
    }
  }]
}))), kE = Ue("input", {
  name: "MuiInputBase",
  slot: "Input",
  overridesResolver: RE
})(rn(({
  theme: e
}) => {
  const t = e.palette.mode === "light", n = {
    color: "currentColor",
    ...e.vars ? {
      opacity: e.vars.opacity.inputPlaceholder
    } : {
      opacity: t ? 0.42 : 0.5
    },
    transition: e.transitions.create("opacity", {
      duration: e.transitions.duration.shorter
    })
  }, i = {
    opacity: "0 !important"
  }, s = e.vars ? {
    opacity: e.vars.opacity.inputPlaceholder
  } : {
    opacity: t ? 0.42 : 0.5
  };
  return {
    font: "inherit",
    letterSpacing: "inherit",
    color: "currentColor",
    padding: "4px 0 5px",
    border: 0,
    boxSizing: "content-box",
    background: "none",
    height: "1.4375em",
    // Reset 23pxthe native input line-height
    margin: 0,
    // Reset for Safari
    WebkitTapHighlightColor: "transparent",
    display: "block",
    // Make the flex item shrink with Firefox
    minWidth: 0,
    width: "100%",
    "&::-webkit-input-placeholder": n,
    "&::-moz-placeholder": n,
    // Firefox 19+
    "&::-ms-input-placeholder": n,
    // Edge
    "&:focus": {
      outline: 0
    },
    // Reset Firefox invalid required input style
    "&:invalid": {
      boxShadow: "none"
    },
    "&::-webkit-search-decoration": {
      // Remove the padding when type=search.
      WebkitAppearance: "none"
    },
    // Show and hide the placeholder logic
    [`label[data-shrink=false] + .${yi.formControl} &`]: {
      "&::-webkit-input-placeholder": i,
      "&::-moz-placeholder": i,
      // Firefox 19+
      "&::-ms-input-placeholder": i,
      // Edge
      "&:focus::-webkit-input-placeholder": s,
      "&:focus::-moz-placeholder": s,
      // Firefox 19+
      "&:focus::-ms-input-placeholder": s
      // Edge
    },
    [`&.${yi.disabled}`]: {
      opacity: 1,
      // Reset iOS opacity
      WebkitTextFillColor: (e.vars || e).palette.text.disabled
      // Fix opacity Safari bug
    },
    variants: [{
      props: ({
        ownerState: u
      }) => !u.disableInjectingGlobalStyles,
      style: {
        animationName: "mui-auto-fill-cancel",
        animationDuration: "10ms",
        "&:-webkit-autofill": {
          animationDuration: "5000s",
          animationName: "mui-auto-fill"
        }
      }
    }, {
      props: {
        size: "small"
      },
      style: {
        paddingTop: 1
      }
    }, {
      props: ({
        ownerState: u
      }) => u.multiline,
      style: {
        height: "auto",
        resize: "none",
        padding: 0,
        paddingTop: 0
      }
    }, {
      props: {
        type: "search"
      },
      style: {
        MozAppearance: "textfield"
        // Improve type search style.
      }
    }]
  };
})), FF = xP({
  "@keyframes mui-auto-fill": {
    from: {
      display: "block"
    }
  },
  "@keyframes mui-auto-fill-cancel": {
    from: {
      display: "block"
    }
  }
}), vh = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const i = Tn({
    props: t,
    name: "MuiInputBase"
  }), {
    "aria-describedby": s,
    autoComplete: u,
    autoFocus: d,
    className: p,
    color: m,
    components: v = {},
    componentsProps: y = {},
    defaultValue: C,
    disabled: w,
    disableInjectingGlobalStyles: R,
    endAdornment: O,
    error: E,
    fullWidth: k = !1,
    id: L,
    inputComponent: F = "input",
    inputProps: _ = {},
    inputRef: P,
    margin: D,
    maxRows: z,
    minRows: K,
    multiline: Q = !1,
    name: H,
    onBlur: I,
    onChange: U,
    onClick: G,
    onFocus: Y,
    onKeyDown: te,
    onKeyUp: B,
    placeholder: W,
    readOnly: q,
    renderSuffix: ne,
    rows: re,
    size: X,
    slotProps: j = {},
    slots: ie = {},
    startAdornment: fe,
    type: ce = "text",
    value: me,
    ...ge
  } = i, de = _.value != null ? _.value : me, {
    current: pe
  } = S.useRef(de != null), be = S.useRef(), Ce = S.useCallback((Me) => {
    process.env.NODE_ENV !== "production" && Me && Me.nodeName !== "INPUT" && !Me.focus && console.error(["MUI: You have provided a `inputComponent` to the input component", "that does not correctly handle the `ref` prop.", "Make sure the `ref` prop is called with a HTMLInputElement."].join(`
`));
  }, []), Re = Vr(be, P, _.ref, Ce), [ue, we] = S.useState(!1), _e = Xc();
  process.env.NODE_ENV !== "production" && S.useEffect(() => {
    if (_e)
      return _e.registerEffect();
  }, [_e]);
  const He = gh({
    props: i,
    muiFormControl: _e,
    states: ["color", "disabled", "error", "hiddenLabel", "size", "required", "filled"]
  });
  He.focused = _e ? _e.focused : ue, S.useEffect(() => {
    !_e && w && ue && (we(!1), I && I());
  }, [_e, w, ue, I]);
  const et = _e && _e.onFilled, Ne = _e && _e.onEmpty, rt = S.useCallback((Me) => {
    N0(Me) ? et && et() : Ne && Ne();
  }, [et, Ne]);
  Fr(() => {
    pe && rt({
      value: de
    });
  }, [de, rt, pe]);
  const it = (Me) => {
    Y && Y(Me), _.onFocus && _.onFocus(Me), _e && _e.onFocus ? _e.onFocus(Me) : we(!0);
  }, wt = (Me) => {
    I && I(Me), _.onBlur && _.onBlur(Me), _e && _e.onBlur ? _e.onBlur(Me) : we(!1);
  }, gt = (Me, ...ht) => {
    if (!pe) {
      const xt = Me.target || be.current;
      if (xt == null)
        throw new Error(process.env.NODE_ENV !== "production" ? "MUI: Expected valid input target. Did you use a custom `inputComponent` and forget to forward refs? See https://mui.com/r/input-component-ref-interface for more info." : Bu(1));
      rt({
        value: xt.value
      });
    }
    _.onChange && _.onChange(Me, ...ht), U && U(Me, ...ht);
  };
  S.useEffect(() => {
    rt(be.current);
  }, []);
  const ot = (Me) => {
    be.current && Me.currentTarget === Me.target && be.current.focus(), G && G(Me);
  };
  let jt = F, ct = _;
  Q && jt === "input" && (re ? (process.env.NODE_ENV !== "production" && (K || z) && console.warn("MUI: You can not use the `minRows` or `maxRows` props when the input `rows` prop is set."), ct = {
    type: void 0,
    minRows: re,
    maxRows: re,
    ...ct
  }) : ct = {
    type: void 0,
    maxRows: z,
    minRows: K,
    ...ct
  }, jt = Oj);
  const Tt = (Me) => {
    rt(Me.animationName === "mui-auto-fill-cancel" ? be.current : {
      value: "x"
    });
  };
  S.useEffect(() => {
    _e && _e.setAdornedStart(!!fe);
  }, [_e, fe]);
  const Rt = {
    ...i,
    color: He.color || "primary",
    disabled: He.disabled,
    endAdornment: O,
    error: He.error,
    focused: He.focused,
    formControl: _e,
    fullWidth: k,
    hiddenLabel: He.hiddenLabel,
    multiline: Q,
    size: He.size,
    startAdornment: fe,
    type: ce
  }, Lt = nK(Rt), vt = ie.root || v.Root || OE, Qe = j.root || y.root || {}, Oe = ie.input || v.Input || kE;
  return ct = {
    ...ct,
    ...j.input ?? y.input
  }, /* @__PURE__ */ A.jsxs(S.Fragment, {
    children: [!R && typeof FF == "function" && // For Emotion/Styled-components, InputGlobalStyles will be a function
    // For Pigment CSS, this has no effect because the InputGlobalStyles will be null.
    (LF || (LF = /* @__PURE__ */ A.jsx(FF, {}))), /* @__PURE__ */ A.jsxs(vt, {
      ...Qe,
      ref: n,
      onClick: ot,
      ...ge,
      ...!wk(vt) && {
        ownerState: {
          ...Rt,
          ...Qe.ownerState
        }
      },
      className: nt(Lt.root, Qe.className, p, q && "MuiInputBase-readOnly"),
      children: [fe, /* @__PURE__ */ A.jsx(DC.Provider, {
        value: null,
        children: /* @__PURE__ */ A.jsx(Oe, {
          "aria-invalid": He.error,
          "aria-describedby": s,
          autoComplete: u,
          autoFocus: d,
          defaultValue: C,
          disabled: He.disabled,
          id: L,
          onAnimationStart: Tt,
          name: H,
          placeholder: W,
          readOnly: q,
          required: He.required,
          rows: re,
          value: de,
          onKeyDown: te,
          onKeyUp: B,
          type: ce,
          ...ct,
          ...!wk(Oe) && {
            as: jt,
            ownerState: {
              ...Rt,
              ...ct.ownerState
            }
          },
          ref: Re,
          className: nt(Lt.input, ct.className, q && "MuiInputBase-readOnly"),
          onBlur: wt,
          onChange: gt,
          onFocus: it
        })
      }), O, ne ? ne({
        ...He,
        startAdornment: fe
      }) : null]
    })]
  });
});
process.env.NODE_ENV !== "production" && (vh.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  "aria-describedby": a.string,
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: a.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: a.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: a.oneOfType([a.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), a.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: a.shape({
    Input: a.elementType,
    Root: a.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: a.shape({
    input: a.object,
    root: a.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: a.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: a.bool,
  /**
   * If `true`, GlobalStyles for the auto-fill keyframes will not be injected/removed on mount/unmount. Make sure to inject them at the top of your application.
   * This option is intended to help with boosting the initial rendering performance if you are loading a big amount of Input components at once.
   * @default false
   */
  disableInjectingGlobalStyles: a.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: a.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: a.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: a.bool,
  /**
   * The id of the `input` element.
   */
  id: a.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: hP,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: a.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Ea,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: a.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: a.oneOfType([a.number, a.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: a.oneOfType([a.number, a.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: a.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: a.string,
  /**
   * Callback fired when the `input` is blurred.
   *
   * Notice that the first argument (event) might be undefined.
   */
  onBlur: a.func,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: a.func,
  /**
   * @ignore
   */
  onClick: a.func,
  /**
   * @ignore
   */
  onFocus: a.func,
  /**
   * Callback fired when the `input` doesn't satisfy its constraints.
   */
  onInvalid: a.func,
  /**
   * @ignore
   */
  onKeyDown: a.func,
  /**
   * @ignore
   */
  onKeyUp: a.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: a.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: a.bool,
  /**
   * @ignore
   */
  renderSuffix: a.func,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: a.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: a.oneOfType([a.number, a.string]),
  /**
   * The size of the component.
   */
  size: a.oneOfType([a.oneOf(["medium", "small"]), a.string]),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: a.shape({
    input: a.object,
    root: a.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: a.shape({
    input: a.elementType,
    root: a.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: a.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: a.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: a.any
});
function rK(e) {
  return yn("MuiInput", e);
}
const rf = {
  ...yi,
  ...bn("MuiInput", ["root", "underline", "input"])
};
function oK(e) {
  return yn("MuiOutlinedInput", e);
}
const Ws = {
  ...yi,
  ...bn("MuiOutlinedInput", ["root", "notchedOutline", "input"])
};
function iK(e) {
  return yn("MuiFilledInput", e);
}
const cs = {
  ...yi,
  ...bn("MuiFilledInput", ["root", "underline", "input", "adornedStart", "adornedEnd", "sizeSmall", "multiline", "hiddenLabel"])
}, kj = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M7 10l5 5 5-5z"
}), "ArrowDropDown");
function aK(e) {
  return yn("MuiAutocomplete", e);
}
const Vn = bn("MuiAutocomplete", ["root", "expanded", "fullWidth", "focused", "focusVisible", "tag", "tagSizeSmall", "tagSizeMedium", "hasPopupIcon", "hasClearIcon", "inputRoot", "input", "inputFocused", "endAdornment", "clearIndicator", "popupIndicator", "popupIndicatorOpen", "popper", "popperDisablePortal", "paper", "listbox", "loading", "noOptions", "option", "groupLabel", "groupUl"]);
var _F, AF;
const sK = (e) => {
  const {
    classes: t,
    disablePortal: n,
    expanded: i,
    focused: s,
    fullWidth: u,
    hasClearIcon: d,
    hasPopupIcon: p,
    inputFocused: m,
    popupOpen: v,
    size: y
  } = e, C = {
    root: ["root", i && "expanded", s && "focused", u && "fullWidth", d && "hasClearIcon", p && "hasPopupIcon"],
    inputRoot: ["inputRoot"],
    input: ["input", m && "inputFocused"],
    tag: ["tag", `tagSize${Be(y)}`],
    endAdornment: ["endAdornment"],
    clearIndicator: ["clearIndicator"],
    popupIndicator: ["popupIndicator", v && "popupIndicatorOpen"],
    popper: ["popper", n && "popperDisablePortal"],
    paper: ["paper"],
    listbox: ["listbox"],
    loading: ["loading"],
    noOptions: ["noOptions"],
    option: ["option"],
    groupLabel: ["groupLabel"],
    groupUl: ["groupUl"]
  };
  return yt(C, aK, t);
}, lK = Ue("div", {
  name: "MuiAutocomplete",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e, {
      fullWidth: i,
      hasClearIcon: s,
      hasPopupIcon: u,
      inputFocused: d,
      size: p
    } = n;
    return [{
      [`& .${Vn.tag}`]: t.tag
    }, {
      [`& .${Vn.tag}`]: t[`tagSize${Be(p)}`]
    }, {
      [`& .${Vn.inputRoot}`]: t.inputRoot
    }, {
      [`& .${Vn.input}`]: t.input
    }, {
      [`& .${Vn.input}`]: d && t.inputFocused
    }, t.root, i && t.fullWidth, u && t.hasPopupIcon, s && t.hasClearIcon];
  }
})({
  [`&.${Vn.focused} .${Vn.clearIndicator}`]: {
    visibility: "visible"
  },
  /* Avoid double tap issue on iOS */
  "@media (pointer: fine)": {
    [`&:hover .${Vn.clearIndicator}`]: {
      visibility: "visible"
    }
  },
  [`& .${Vn.tag}`]: {
    margin: 3,
    maxWidth: "calc(100% - 6px)"
  },
  [`& .${Vn.inputRoot}`]: {
    [`.${Vn.hasPopupIcon}&, .${Vn.hasClearIcon}&`]: {
      paddingRight: 30
    },
    [`.${Vn.hasPopupIcon}.${Vn.hasClearIcon}&`]: {
      paddingRight: 56
    },
    [`& .${Vn.input}`]: {
      width: 0,
      minWidth: 30
    }
  },
  [`& .${rf.root}`]: {
    paddingBottom: 1,
    "& .MuiInput-input": {
      padding: "4px 4px 4px 0px"
    }
  },
  [`& .${rf.root}.${yi.sizeSmall}`]: {
    [`& .${rf.input}`]: {
      padding: "2px 4px 3px 0"
    }
  },
  [`& .${Ws.root}`]: {
    padding: 9,
    [`.${Vn.hasPopupIcon}&, .${Vn.hasClearIcon}&`]: {
      paddingRight: 39
    },
    [`.${Vn.hasPopupIcon}.${Vn.hasClearIcon}&`]: {
      paddingRight: 65
    },
    [`& .${Vn.input}`]: {
      padding: "7.5px 4px 7.5px 5px"
    },
    [`& .${Vn.endAdornment}`]: {
      right: 9
    }
  },
  [`& .${Ws.root}.${yi.sizeSmall}`]: {
    // Don't specify paddingRight, as it overrides the default value set when there is only
    // one of the popup or clear icon as the specificity is equal so the latter one wins
    paddingTop: 6,
    paddingBottom: 6,
    paddingLeft: 6,
    [`& .${Vn.input}`]: {
      padding: "2.5px 4px 2.5px 8px"
    }
  },
  [`& .${cs.root}`]: {
    paddingTop: 19,
    paddingLeft: 8,
    [`.${Vn.hasPopupIcon}&, .${Vn.hasClearIcon}&`]: {
      paddingRight: 39
    },
    [`.${Vn.hasPopupIcon}.${Vn.hasClearIcon}&`]: {
      paddingRight: 65
    },
    [`& .${cs.input}`]: {
      padding: "7px 4px"
    },
    [`& .${Vn.endAdornment}`]: {
      right: 9
    }
  },
  [`& .${cs.root}.${yi.sizeSmall}`]: {
    paddingBottom: 1,
    [`& .${cs.input}`]: {
      padding: "2.5px 4px"
    }
  },
  [`& .${yi.hiddenLabel}`]: {
    paddingTop: 8
  },
  [`& .${cs.root}.${yi.hiddenLabel}`]: {
    paddingTop: 0,
    paddingBottom: 0,
    [`& .${Vn.input}`]: {
      paddingTop: 16,
      paddingBottom: 17
    }
  },
  [`& .${cs.root}.${yi.hiddenLabel}.${yi.sizeSmall}`]: {
    [`& .${Vn.input}`]: {
      paddingTop: 8,
      paddingBottom: 9
    }
  },
  [`& .${Vn.input}`]: {
    flexGrow: 1,
    textOverflow: "ellipsis",
    opacity: 0
  },
  variants: [{
    props: {
      fullWidth: !0
    },
    style: {
      width: "100%"
    }
  }, {
    props: {
      size: "small"
    },
    style: {
      [`& .${Vn.tag}`]: {
        margin: 2,
        maxWidth: "calc(100% - 4px)"
      }
    }
  }, {
    props: {
      inputFocused: !0
    },
    style: {
      [`& .${Vn.input}`]: {
        opacity: 1
      }
    }
  }, {
    props: {
      multiple: !0
    },
    style: {
      [`& .${Vn.inputRoot}`]: {
        flexWrap: "wrap"
      }
    }
  }]
}), uK = Ue("div", {
  name: "MuiAutocomplete",
  slot: "EndAdornment",
  overridesResolver: (e, t) => t.endAdornment
})({
  // We use a position absolute to support wrapping tags.
  position: "absolute",
  right: 0,
  top: "50%",
  transform: "translate(0, -50%)"
}), cK = Ue(Uc, {
  name: "MuiAutocomplete",
  slot: "ClearIndicator",
  overridesResolver: (e, t) => t.clearIndicator
})({
  marginRight: -2,
  padding: 4,
  visibility: "hidden"
}), dK = Ue(Uc, {
  name: "MuiAutocomplete",
  slot: "PopupIndicator",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.popupIndicator, n.popupOpen && t.popupIndicatorOpen];
  }
})({
  padding: 2,
  marginRight: -2,
  variants: [{
    props: {
      popupOpen: !0
    },
    style: {
      transform: "rotate(180deg)"
    }
  }]
}), fK = Ue(Tf, {
  name: "MuiAutocomplete",
  slot: "Popper",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [{
      [`& .${Vn.option}`]: t.option
    }, t.popper, n.disablePortal && t.popperDisablePortal];
  }
})(rn(({
  theme: e
}) => ({
  zIndex: (e.vars || e).zIndex.modal,
  variants: [{
    props: {
      disablePortal: !0
    },
    style: {
      position: "absolute"
    }
  }]
}))), pK = Ue(bs, {
  name: "MuiAutocomplete",
  slot: "Paper",
  overridesResolver: (e, t) => t.paper
})(rn(({
  theme: e
}) => ({
  ...e.typography.body1,
  overflow: "auto"
}))), hK = Ue("div", {
  name: "MuiAutocomplete",
  slot: "Loading",
  overridesResolver: (e, t) => t.loading
})(rn(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  padding: "14px 16px"
}))), mK = Ue("div", {
  name: "MuiAutocomplete",
  slot: "NoOptions",
  overridesResolver: (e, t) => t.noOptions
})(rn(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  padding: "14px 16px"
}))), gK = Ue("ul", {
  name: "MuiAutocomplete",
  slot: "Listbox",
  overridesResolver: (e, t) => t.listbox
})(rn(({
  theme: e
}) => ({
  listStyle: "none",
  margin: 0,
  padding: "8px 0",
  maxHeight: "40vh",
  overflow: "auto",
  position: "relative",
  [`& .${Vn.option}`]: {
    minHeight: 48,
    display: "flex",
    overflow: "hidden",
    justifyContent: "flex-start",
    alignItems: "center",
    cursor: "pointer",
    paddingTop: 6,
    boxSizing: "border-box",
    outline: "0",
    WebkitTapHighlightColor: "transparent",
    paddingBottom: 6,
    paddingLeft: 16,
    paddingRight: 16,
    [e.breakpoints.up("sm")]: {
      minHeight: "auto"
    },
    [`&.${Vn.focused}`]: {
      backgroundColor: (e.vars || e).palette.action.hover,
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: "transparent"
      }
    },
    '&[aria-disabled="true"]': {
      opacity: (e.vars || e).palette.action.disabledOpacity,
      pointerEvents: "none"
    },
    [`&.${Vn.focusVisible}`]: {
      backgroundColor: (e.vars || e).palette.action.focus
    },
    '&[aria-selected="true"]': {
      backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / ${e.vars.palette.action.selectedOpacity})` : $n(e.palette.primary.main, e.palette.action.selectedOpacity),
      [`&.${Vn.focused}`]: {
        backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.hoverOpacity}))` : $n(e.palette.primary.main, e.palette.action.selectedOpacity + e.palette.action.hoverOpacity),
        // Reset on touch devices, it doesn't add specificity
        "@media (hover: none)": {
          backgroundColor: (e.vars || e).palette.action.selected
        }
      },
      [`&.${Vn.focusVisible}`]: {
        backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.focusOpacity}))` : $n(e.palette.primary.main, e.palette.action.selectedOpacity + e.palette.action.focusOpacity)
      }
    }
  }
}))), vK = Ue(D0, {
  name: "MuiAutocomplete",
  slot: "GroupLabel",
  overridesResolver: (e, t) => t.groupLabel
})(rn(({
  theme: e
}) => ({
  backgroundColor: (e.vars || e).palette.background.paper,
  top: -8
}))), yK = Ue("ul", {
  name: "MuiAutocomplete",
  slot: "GroupUl",
  overridesResolver: (e, t) => t.groupUl
})({
  padding: 0,
  [`& .${Vn.option}`]: {
    paddingLeft: 24
  }
}), LP = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const i = Tn({
    props: t,
    name: "MuiAutocomplete"
  }), {
    autoComplete: s = !1,
    autoHighlight: u = !1,
    autoSelect: d = !1,
    blurOnSelect: p = !1,
    ChipProps: m,
    className: v,
    clearIcon: y = _F || (_F = /* @__PURE__ */ A.jsx(pj, {
      fontSize: "small"
    })),
    clearOnBlur: C = !i.freeSolo,
    clearOnEscape: w = !1,
    clearText: R = "Clear",
    closeText: O = "Close",
    componentsProps: E,
    defaultValue: k = i.multiple ? [] : null,
    disableClearable: L = !1,
    disableCloseOnSelect: F = !1,
    disabled: _ = !1,
    disabledItemsFocusable: P = !1,
    disableListWrap: D = !1,
    disablePortal: z = !1,
    filterOptions: K,
    filterSelectedOptions: Q = !1,
    forcePopupIcon: H = "auto",
    freeSolo: I = !1,
    fullWidth: U = !1,
    getLimitTagsText: G = (_n) => `+${_n}`,
    getOptionDisabled: Y,
    getOptionKey: te,
    getOptionLabel: B,
    isOptionEqualToValue: W,
    groupBy: q,
    handleHomeEndKeys: ne = !i.freeSolo,
    id: re,
    includeInputInList: X = !1,
    inputValue: j,
    limitTags: ie = -1,
    ListboxComponent: fe,
    ListboxProps: ce,
    loading: me = !1,
    loadingText: ge = "Loading…",
    multiple: de = !1,
    noOptionsText: pe = "No options",
    onChange: be,
    onClose: Ce,
    onHighlightChange: Re,
    onInputChange: ue,
    onOpen: we,
    open: _e,
    openOnFocus: He = !1,
    openText: et = "Open",
    options: Ne,
    PaperComponent: rt,
    PopperComponent: it,
    popupIcon: wt = AF || (AF = /* @__PURE__ */ A.jsx(kj, {})),
    readOnly: gt = !1,
    renderGroup: ot,
    renderInput: jt,
    renderOption: ct,
    renderTags: Tt,
    selectOnFocus: Rt = !i.freeSolo,
    size: Lt = "medium",
    slots: vt = {},
    slotProps: Qe = {},
    value: Oe,
    ...Me
  } = i, {
    getRootProps: ht,
    getInputProps: xt,
    getInputLabelProps: zt,
    getPopupIndicatorProps: bt,
    getClearProps: Ge,
    getTagProps: Et,
    getListboxProps: At,
    getOptionProps: pn,
    value: fn,
    dirty: hr,
    expanded: qn,
    id: Dr,
    popupOpen: mr,
    focused: Po,
    focusedTag: Mo,
    anchorEl: Ut,
    setAnchorEl: dr,
    inputValue: Ct,
    groupedOptions: St
  } = P9({
    ...i,
    componentName: "Autocomplete"
  }), en = !L && !_ && hr && !gt, on = (!I || H === !0) && H !== !1, {
    onMouseDown: zn
  } = xt(), {
    ref: Ar,
    ...ro
  } = At(), ve = B || ((_n) => _n.label ?? _n), We = {
    ...i,
    disablePortal: z,
    expanded: qn,
    focused: Po,
    fullWidth: U,
    getOptionLabel: ve,
    hasClearIcon: en,
    hasPopupIcon: on,
    inputFocused: Mo === -1,
    popupOpen: mr,
    size: Lt
  }, pt = sK(We), Ot = {
    slots: {
      paper: rt,
      popper: it,
      ...vt
    },
    slotProps: {
      chip: m,
      listbox: ce,
      ...E,
      ...Qe
    }
  }, [mn, Le] = vn("listbox", {
    elementType: gK,
    externalForwardedProps: Ot,
    ownerState: We,
    className: pt.listbox,
    additionalProps: ro,
    ref: Ar
  }), [ke, Ze] = vn("paper", {
    elementType: bs,
    externalForwardedProps: Ot,
    ownerState: We,
    className: pt.paper
  }), [Gt, Bt] = vn("popper", {
    elementType: Tf,
    externalForwardedProps: Ot,
    ownerState: We,
    className: pt.popper,
    additionalProps: {
      disablePortal: z,
      style: {
        width: Ut ? Ut.clientWidth : null
      },
      role: "presentation",
      anchorEl: Ut,
      open: mr
    }
  });
  let Qt;
  if (de && fn.length > 0) {
    const _n = (Io) => ({
      className: pt.tag,
      disabled: _,
      ...Et(Io)
    });
    Tt ? Qt = Tt(fn, _n, We) : Qt = fn.map((Io, Ci) => {
      const {
        key: zi,
        ...di
      } = _n({
        index: Ci
      });
      return /* @__PURE__ */ A.jsx(NP, {
        label: ve(Io),
        size: Lt,
        ...di,
        ...Ot.slotProps.chip
      }, zi);
    });
  }
  if (ie > -1 && Array.isArray(Qt)) {
    const _n = Qt.length - ie;
    !Po && _n > 0 && (Qt = Qt.splice(0, ie), Qt.push(/* @__PURE__ */ A.jsx("span", {
      className: pt.tag,
      children: G(_n)
    }, Qt.length)));
  }
  const Nr = ot || ((_n) => /* @__PURE__ */ A.jsxs("li", {
    children: [/* @__PURE__ */ A.jsx(vK, {
      className: pt.groupLabel,
      ownerState: We,
      component: "div",
      children: _n.group
    }), /* @__PURE__ */ A.jsx(yK, {
      className: pt.groupUl,
      ownerState: We,
      children: _n.children
    })]
  }, _n.key)), xn = ct || ((_n, Io) => {
    const {
      key: Ci,
      ...zi
    } = _n;
    return /* @__PURE__ */ A.jsx("li", {
      ...zi,
      children: ve(Io)
    }, Ci);
  }), Rn = (_n, Io) => {
    const Ci = pn({
      option: _n,
      index: Io
    });
    return xn({
      ...Ci,
      className: pt.option
    }, _n, {
      selected: Ci["aria-selected"],
      index: Io,
      inputValue: Ct
    }, We);
  }, ci = Ot.slotProps.clearIndicator, Ta = Ot.slotProps.popupIndicator;
  return /* @__PURE__ */ A.jsxs(S.Fragment, {
    children: [/* @__PURE__ */ A.jsx(lK, {
      ref: n,
      className: nt(pt.root, v),
      ownerState: We,
      ...ht(Me),
      children: jt({
        id: Dr,
        disabled: _,
        fullWidth: !0,
        size: Lt === "small" ? "small" : void 0,
        InputLabelProps: zt(),
        InputProps: {
          ref: dr,
          className: pt.inputRoot,
          startAdornment: Qt,
          onMouseDown: (_n) => {
            _n.target === _n.currentTarget && zn(_n);
          },
          ...(en || on) && {
            endAdornment: /* @__PURE__ */ A.jsxs(uK, {
              className: pt.endAdornment,
              ownerState: We,
              children: [en ? /* @__PURE__ */ A.jsx(cK, {
                ...Ge(),
                "aria-label": R,
                title: R,
                ownerState: We,
                ...ci,
                className: nt(pt.clearIndicator, ci == null ? void 0 : ci.className),
                children: y
              }) : null, on ? /* @__PURE__ */ A.jsx(dK, {
                ...bt(),
                disabled: _,
                "aria-label": mr ? O : et,
                title: mr ? O : et,
                ownerState: We,
                ...Ta,
                className: nt(pt.popupIndicator, Ta == null ? void 0 : Ta.className),
                children: wt
              }) : null]
            })
          }
        },
        inputProps: {
          className: pt.input,
          disabled: _,
          readOnly: gt,
          ...xt()
        }
      })
    }), Ut ? /* @__PURE__ */ A.jsx(fK, {
      as: Gt,
      ...Bt,
      children: /* @__PURE__ */ A.jsxs(pK, {
        as: ke,
        ...Ze,
        children: [me && St.length === 0 ? /* @__PURE__ */ A.jsx(hK, {
          className: pt.loading,
          ownerState: We,
          children: ge
        }) : null, St.length === 0 && !I && !me ? /* @__PURE__ */ A.jsx(mK, {
          className: pt.noOptions,
          ownerState: We,
          role: "presentation",
          onMouseDown: (_n) => {
            _n.preventDefault();
          },
          children: pe
        }) : null, St.length > 0 ? /* @__PURE__ */ A.jsx(mn, {
          as: fe,
          ...Le,
          children: St.map((_n, Io) => q ? Nr({
            key: _n.key,
            group: _n.group,
            children: _n.options.map((Ci, zi) => Rn(Ci, _n.index + zi))
          }) : Rn(_n, Io))
        }) : null]
      })
    }) : null]
  });
});
process.env.NODE_ENV !== "production" && (LP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the portion of the selected suggestion that the user hasn't typed,
   * known as the completion string, appears inline after the input cursor in the textbox.
   * The inline completion string is visually highlighted and has a selected state.
   * @default false
   */
  autoComplete: a.bool,
  /**
   * If `true`, the first option is automatically highlighted.
   * @default false
   */
  autoHighlight: a.bool,
  /**
   * If `true`, the selected option becomes the value of the input
   * when the Autocomplete loses focus unless the user chooses
   * a different option or changes the character string in the input.
   *
   * When using the `freeSolo` mode, the typed value will be the input value
   * if the Autocomplete loses focus without highlighting an option.
   * @default false
   */
  autoSelect: a.bool,
  /**
   * Control if the input should be blurred when an option is selected:
   *
   * - `false` the input is not blurred.
   * - `true` the input is always blurred.
   * - `touch` the input is blurred after a touch event.
   * - `mouse` the input is blurred after a mouse event.
   * @default false
   */
  blurOnSelect: a.oneOfType([a.oneOf(["mouse", "touch"]), a.bool]),
  /**
   * Props applied to the [`Chip`](https://mui.com/material-ui/api/chip/) element.
   * @deprecated Use `slotProps.chip` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  ChipProps: a.object,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The icon to display in place of the default clear icon.
   * @default <ClearIcon fontSize="small" />
   */
  clearIcon: a.node,
  /**
   * If `true`, the input's text is cleared on blur if no value is selected.
   *
   * Set it to `true` if you want to help the user enter a new value.
   * Set it to `false` if you want to help the user resume their search.
   * @default !props.freeSolo
   */
  clearOnBlur: a.bool,
  /**
   * If `true`, clear all values when the user presses escape and the popup is closed.
   * @default false
   */
  clearOnEscape: a.bool,
  /**
   * Override the default text for the *clear* icon button.
   *
   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).
   * @default 'Clear'
   */
  clearText: a.string,
  /**
   * Override the default text for the *close popup* icon button.
   *
   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).
   * @default 'Close'
   */
  closeText: a.string,
  /**
   * The props used for each slot inside.
   * @deprecated Use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  componentsProps: a.shape({
    clearIndicator: a.object,
    paper: a.object,
    popper: a.object,
    popupIndicator: a.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   * @default props.multiple ? [] : null
   */
  defaultValue: Bl(a.any, (e) => e.multiple && e.defaultValue !== void 0 && !Array.isArray(e.defaultValue) ? new Error(["MUI: The Autocomplete expects the `defaultValue` prop to be an array when `multiple={true}` or undefined.", `However, ${e.defaultValue} was provided.`].join(`
`)) : null),
  /**
   * If `true`, the input can't be cleared.
   * @default false
   */
  disableClearable: a.bool,
  /**
   * If `true`, the popup won't close when a value is selected.
   * @default false
   */
  disableCloseOnSelect: a.bool,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: a.bool,
  /**
   * If `true`, will allow focus on disabled items.
   * @default false
   */
  disabledItemsFocusable: a.bool,
  /**
   * If `true`, the list box in the popup will not wrap focus.
   * @default false
   */
  disableListWrap: a.bool,
  /**
   * If `true`, the `Popper` content will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: a.bool,
  /**
   * A function that determines the filtered options to be rendered on search.
   *
   * @default createFilterOptions()
   * @param {Value[]} options The options to render.
   * @param {object} state The state of the component.
   * @returns {Value[]}
   */
  filterOptions: a.func,
  /**
   * If `true`, hide the selected options from the list box.
   * @default false
   */
  filterSelectedOptions: a.bool,
  /**
   * Force the visibility display of the popup icon.
   * @default 'auto'
   */
  forcePopupIcon: a.oneOfType([a.oneOf(["auto"]), a.bool]),
  /**
   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.
   * @default false
   */
  freeSolo: a.bool,
  /**
   * If `true`, the input will take up the full width of its container.
   * @default false
   */
  fullWidth: a.bool,
  /**
   * The label to display when the tags are truncated (`limitTags`).
   *
   * @param {number} more The number of truncated tags.
   * @returns {ReactNode}
   * @default (more) => `+${more}`
   */
  getLimitTagsText: a.func,
  /**
   * Used to determine the disabled state for a given option.
   *
   * @param {Value} option The option to test.
   * @returns {boolean}
   */
  getOptionDisabled: a.func,
  /**
   * Used to determine the key for a given option.
   * This can be useful when the labels of options are not unique (since labels are used as keys by default).
   *
   * @param {Value} option The option to get the key for.
   * @returns {string | number}
   */
  getOptionKey: a.func,
  /**
   * Used to determine the string value for a given option.
   * It's used to fill the input (and the list box options if `renderOption` is not provided).
   *
   * If used in free solo mode, it must accept both the type of the options and a string.
   *
   * @param {Value} option
   * @returns {string}
   * @default (option) => option.label ?? option
   */
  getOptionLabel: a.func,
  /**
   * If provided, the options will be grouped under the returned string.
   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.
   *
   * @param {Value} option The Autocomplete option.
   * @returns {string}
   */
  groupBy: a.func,
  /**
   * If `true`, the component handles the "Home" and "End" keys when the popup is open.
   * It should move focus to the first option and last option, respectively.
   * @default !props.freeSolo
   */
  handleHomeEndKeys: a.bool,
  /**
   * This prop is used to help implement the accessibility logic.
   * If you don't provide an id it will fall back to a randomly generated one.
   */
  id: a.string,
  /**
   * If `true`, the highlight can move to the input.
   * @default false
   */
  includeInputInList: a.bool,
  /**
   * The input value.
   */
  inputValue: a.string,
  /**
   * Used to determine if the option represents the given value.
   * Uses strict equality by default.
   * ⚠️ Both arguments need to be handled, an option can only match with one value.
   *
   * @param {Value} option The option to test.
   * @param {Value} value The value to test against.
   * @returns {boolean}
   */
  isOptionEqualToValue: a.func,
  /**
   * The maximum number of tags that will be visible when not focused.
   * Set `-1` to disable the limit.
   * @default -1
   */
  limitTags: Pg,
  /**
   * The component used to render the listbox.
   * @default 'ul'
   * @deprecated Use `slotProps.listbox.component` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  ListboxComponent: a.elementType,
  /**
   * Props applied to the Listbox element.
   * @deprecated Use `slotProps.listbox` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  ListboxProps: a.object,
  /**
   * If `true`, the component is in a loading state.
   * This shows the `loadingText` in place of suggestions (only if there are no suggestions to show, for example `options` are empty).
   * @default false
   */
  loading: a.bool,
  /**
   * Text to display when in a loading state.
   *
   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).
   * @default 'Loading…'
   */
  loadingText: a.node,
  /**
   * If `true`, `value` must be an array and the menu will support multiple selections.
   * @default false
   */
  multiple: a.bool,
  /**
   * Text to display when there are no options.
   *
   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).
   * @default 'No options'
   */
  noOptionsText: a.node,
  /**
   * Callback fired when the value changes.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   * @param {Value|Value[]} value The new value of the component.
   * @param {string} reason One of "createOption", "selectOption", "removeOption", "blur" or "clear".
   * @param {string} [details]
   */
  onChange: a.func,
  /**
   * Callback fired when the popup requests to be closed.
   * Use in controlled mode (see open).
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   * @param {string} reason Can be: `"toggleInput"`, `"escape"`, `"selectOption"`, `"removeOption"`, `"blur"`.
   */
  onClose: a.func,
  /**
   * Callback fired when the highlight option changes.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   * @param {Value} option The highlighted option.
   * @param {string} reason Can be: `"keyboard"`, `"mouse"`, `"touch"`.
   */
  onHighlightChange: a.func,
  /**
   * Callback fired when the input value changes.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   * @param {string} value The new value of the text input.
   * @param {string} reason Can be: `"input"` (user input), `"reset"` (programmatic change), `"clear"`, `"blur"`, `"selectOption"`, `"removeOption"`
   */
  onInputChange: a.func,
  /**
   * @ignore
   */
  onKeyDown: a.func,
  /**
   * Callback fired when the popup requests to be opened.
   * Use in controlled mode (see open).
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   */
  onOpen: a.func,
  /**
   * If `true`, the component is shown.
   */
  open: a.bool,
  /**
   * If `true`, the popup will open on input focus.
   * @default false
   */
  openOnFocus: a.bool,
  /**
   * Override the default text for the *open popup* icon button.
   *
   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).
   * @default 'Open'
   */
  openText: a.string,
  /**
   * A list of options that will be shown in the Autocomplete.
   */
  options: a.array.isRequired,
  /**
   * The component used to render the body of the popup.
   * @default Paper
   * @deprecated Use `slots.paper` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  PaperComponent: a.elementType,
  /**
   * The component used to position the popup.
   * @default Popper
   * @deprecated Use `slots.popper` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  PopperComponent: a.elementType,
  /**
   * The icon to display in place of the default popup icon.
   * @default <ArrowDropDownIcon />
   */
  popupIcon: a.node,
  /**
   * If `true`, the component becomes readonly. It is also supported for multiple tags where the tag cannot be deleted.
   * @default false
   */
  readOnly: a.bool,
  /**
   * Render the group.
   *
   * @param {AutocompleteRenderGroupParams} params The group to render.
   * @returns {ReactNode}
   */
  renderGroup: a.func,
  /**
   * Render the input.
   *
   * @param {object} params
   * @returns {ReactNode}
   */
  renderInput: a.func.isRequired,
  /**
   * Render the option, use `getOptionLabel` by default.
   *
   * @param {object} props The props to apply on the li element.
   * @param {Value} option The option to render.
   * @param {object} state The state of each option.
   * @param {object} ownerState The state of the Autocomplete component.
   * @returns {ReactNode}
   */
  renderOption: a.func,
  /**
   * Render the selected value.
   *
   * @param {Value[]} value The `value` provided to the component.
   * @param {function} getTagProps A tag props getter.
   * @param {object} ownerState The state of the Autocomplete component.
   * @returns {ReactNode}
   */
  renderTags: a.func,
  /**
   * If `true`, the input's text is selected on focus.
   * It helps the user clear the selected value.
   * @default !props.freeSolo
   */
  selectOnFocus: a.bool,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: a.oneOfType([a.oneOf(["small", "medium"]), a.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    chip: a.oneOfType([a.func, a.object]),
    clearIndicator: a.oneOfType([a.func, a.object]),
    listbox: a.oneOfType([a.func, a.object]),
    paper: a.oneOfType([a.func, a.object]),
    popper: a.oneOfType([a.func, a.object]),
    popupIndicator: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    listbox: a.elementType,
    paper: a.elementType,
    popper: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The value of the autocomplete.
   *
   * The value must have reference equality with the option in order to be selected.
   * You can customize the equality behavior with the `isOptionEqualToValue` prop.
   */
  value: Bl(a.any, (e) => e.multiple && e.value !== void 0 && !Array.isArray(e.value) ? new Error(["MUI: The Autocomplete expects the `value` prop to be an array when `multiple={true}` or undefined.", `However, ${e.value} was provided.`].join(`
`)) : null)
});
const bK = {
  entering: {
    opacity: 1
  },
  entered: {
    opacity: 1
  }
}, Pj = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const i = ev(), s = {
    enter: i.transitions.duration.enteringScreen,
    exit: i.transitions.duration.leavingScreen
  }, {
    addEndListener: u,
    appear: d = !0,
    children: p,
    easing: m,
    in: v,
    onEnter: y,
    onEntered: C,
    onEntering: w,
    onExit: R,
    onExited: O,
    onExiting: E,
    style: k,
    timeout: L = s,
    // eslint-disable-next-line react/prop-types
    TransitionComponent: F = Yu,
    ..._
  } = t, P = S.useRef(null), D = Vr(P, mh(p), n), z = (te) => (B) => {
    if (te) {
      const W = P.current;
      B === void 0 ? te(W) : te(W, B);
    }
  }, K = z(w), Q = z((te, B) => {
    cj(te);
    const W = k0({
      style: k,
      timeout: L,
      easing: m
    }, {
      mode: "enter"
    });
    te.style.webkitTransition = i.transitions.create("opacity", W), te.style.transition = i.transitions.create("opacity", W), y && y(te, B);
  }), H = z(C), I = z(E), U = z((te) => {
    const B = k0({
      style: k,
      timeout: L,
      easing: m
    }, {
      mode: "exit"
    });
    te.style.webkitTransition = i.transitions.create("opacity", B), te.style.transition = i.transitions.create("opacity", B), R && R(te);
  }), G = z(O), Y = (te) => {
    u && u(P.current, te);
  };
  return /* @__PURE__ */ A.jsx(F, {
    appear: d,
    in: v,
    nodeRef: P,
    onEnter: Q,
    onEntered: H,
    onEntering: K,
    onExit: U,
    onExited: G,
    onExiting: I,
    addEndListener: Y,
    timeout: L,
    ..._,
    children: (te, {
      ownerState: B,
      ...W
    }) => /* @__PURE__ */ S.cloneElement(p, {
      style: {
        opacity: 0,
        visibility: te === "exited" && !v ? "hidden" : void 0,
        ...bK[te],
        ...k,
        ...p.props.style
      },
      ref: D,
      ...W
    })
  });
});
process.env.NODE_ENV !== "production" && (Pj.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: a.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: a.bool,
  /**
   * A single child content element.
   */
  children: hh.isRequired,
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   */
  easing: a.oneOfType([a.shape({
    enter: a.string,
    exit: a.string
  }), a.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: a.bool,
  /**
   * @ignore
   */
  onEnter: a.func,
  /**
   * @ignore
   */
  onEntered: a.func,
  /**
   * @ignore
   */
  onEntering: a.func,
  /**
   * @ignore
   */
  onExit: a.func,
  /**
   * @ignore
   */
  onExited: a.func,
  /**
   * @ignore
   */
  onExiting: a.func,
  /**
   * @ignore
   */
  style: a.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  timeout: a.oneOfType([a.number, a.shape({
    appear: a.number,
    enter: a.number,
    exit: a.number
  })])
});
function CK(e) {
  return yn("MuiBackdrop", e);
}
bn("MuiBackdrop", ["root", "invisible"]);
const SK = (e) => {
  const {
    classes: t,
    invisible: n
  } = e;
  return yt({
    root: ["root", n && "invisible"]
  }, CK, t);
}, wK = Ue("div", {
  name: "MuiBackdrop",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.invisible && t.invisible];
  }
})({
  position: "fixed",
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  right: 0,
  bottom: 0,
  top: 0,
  left: 0,
  backgroundColor: "rgba(0, 0, 0, 0.5)",
  WebkitTapHighlightColor: "transparent",
  variants: [{
    props: {
      invisible: !0
    },
    style: {
      backgroundColor: "transparent"
    }
  }]
}), Mj = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const i = Tn({
    props: t,
    name: "MuiBackdrop"
  }), {
    children: s,
    className: u,
    component: d = "div",
    invisible: p = !1,
    open: m,
    components: v = {},
    componentsProps: y = {},
    slotProps: C = {},
    slots: w = {},
    TransitionComponent: R,
    transitionDuration: O,
    ...E
  } = i, k = {
    ...i,
    component: d,
    invisible: p
  }, L = SK(k), F = {
    transition: R,
    root: v.Root,
    ...w
  }, _ = {
    ...y,
    ...C
  }, P = {
    slots: F,
    slotProps: _
  }, [D, z] = vn("root", {
    elementType: wK,
    externalForwardedProps: P,
    className: nt(L.root, u),
    ownerState: k
  }), [K, Q] = vn("transition", {
    elementType: Pj,
    externalForwardedProps: P,
    ownerState: k
  });
  return /* @__PURE__ */ A.jsx(K, {
    in: m,
    timeout: O,
    ...E,
    ...Q,
    children: /* @__PURE__ */ A.jsx(D, {
      "aria-hidden": !0,
      ...z,
      classes: L,
      ref: n,
      children: s
    })
  });
});
process.env.NODE_ENV !== "production" && (Mj.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * The components used for each slot inside.
   *
   * @deprecated Use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: a.shape({
    Root: a.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated Use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: a.shape({
    root: a.object
  }),
  /**
   * If `true`, the backdrop is invisible.
   * It can be used when rendering a popover or a custom select component.
   * @default false
   */
  invisible: a.bool,
  /**
   * If `true`, the component is shown.
   */
  open: a.bool.isRequired,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    root: a.oneOfType([a.func, a.object]),
    transition: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    root: a.elementType,
    transition: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The component used for the transition.
   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Fade
   * @deprecated Use `slots.transition` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  TransitionComponent: a.elementType,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   */
  transitionDuration: a.oneOfType([a.number, a.shape({
    appear: a.number,
    enter: a.number,
    exit: a.number
  })])
});
function xK(e) {
  const {
    badgeContent: t,
    invisible: n = !1,
    max: i = 99,
    showZero: s = !1
  } = e, u = gP({
    badgeContent: t,
    max: i
  });
  let d = n;
  n === !1 && t === 0 && !s && (d = !0);
  const {
    badgeContent: p,
    max: m = i
  } = d ? u : e, v = p && Number(p) > m ? `${m}+` : p;
  return {
    badgeContent: p,
    invisible: d,
    max: m,
    displayValue: v
  };
}
function EK(e) {
  return yn("MuiBadge", e);
}
const Jd = bn("MuiBadge", [
  "root",
  "badge",
  "dot",
  "standard",
  "anchorOriginTopRight",
  "anchorOriginBottomRight",
  "anchorOriginTopLeft",
  "anchorOriginBottomLeft",
  "invisible",
  "colorError",
  "colorInfo",
  "colorPrimary",
  "colorSecondary",
  "colorSuccess",
  "colorWarning",
  "overlapRectangular",
  "overlapCircular",
  // TODO: v6 remove the overlap value from these class keys
  "anchorOriginTopLeftCircular",
  "anchorOriginTopLeftRectangular",
  "anchorOriginTopRightCircular",
  "anchorOriginTopRightRectangular",
  "anchorOriginBottomLeftCircular",
  "anchorOriginBottomLeftRectangular",
  "anchorOriginBottomRightCircular",
  "anchorOriginBottomRightRectangular"
]), TO = 10, RO = 4, TK = (e) => {
  const {
    color: t,
    anchorOrigin: n,
    invisible: i,
    overlap: s,
    variant: u,
    classes: d = {}
  } = e, p = {
    root: ["root"],
    badge: ["badge", u, i && "invisible", `anchorOrigin${Be(n.vertical)}${Be(n.horizontal)}`, `anchorOrigin${Be(n.vertical)}${Be(n.horizontal)}${Be(s)}`, `overlap${Be(s)}`, t !== "default" && `color${Be(t)}`]
  };
  return yt(p, EK, d);
}, RK = Ue("span", {
  name: "MuiBadge",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({
  position: "relative",
  display: "inline-flex",
  // For correct alignment with the text.
  verticalAlign: "middle",
  flexShrink: 0
}), OK = Ue("span", {
  name: "MuiBadge",
  slot: "Badge",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.badge, t[n.variant], t[`anchorOrigin${Be(n.anchorOrigin.vertical)}${Be(n.anchorOrigin.horizontal)}${Be(n.overlap)}`], n.color !== "default" && t[`color${Be(n.color)}`], n.invisible && t.invisible];
  }
})(rn(({
  theme: e
}) => ({
  display: "flex",
  flexDirection: "row",
  flexWrap: "wrap",
  justifyContent: "center",
  alignContent: "center",
  alignItems: "center",
  position: "absolute",
  boxSizing: "border-box",
  fontFamily: e.typography.fontFamily,
  fontWeight: e.typography.fontWeightMedium,
  fontSize: e.typography.pxToRem(12),
  minWidth: TO * 2,
  lineHeight: 1,
  padding: "0 6px",
  height: TO * 2,
  borderRadius: TO,
  zIndex: 1,
  // Render the badge on top of potential ripples.
  transition: e.transitions.create("transform", {
    easing: e.transitions.easing.easeInOut,
    duration: e.transitions.duration.enteringScreen
  }),
  variants: [...Object.entries(e.palette).filter(to(["contrastText"])).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      backgroundColor: (e.vars || e).palette[t].main,
      color: (e.vars || e).palette[t].contrastText
    }
  })), {
    props: {
      variant: "dot"
    },
    style: {
      borderRadius: RO,
      height: RO * 2,
      minWidth: RO * 2,
      padding: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "top" && t.anchorOrigin.horizontal === "right" && t.overlap === "rectangular",
    style: {
      top: 0,
      right: 0,
      transform: "scale(1) translate(50%, -50%)",
      transformOrigin: "100% 0%",
      [`&.${Jd.invisible}`]: {
        transform: "scale(0) translate(50%, -50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "bottom" && t.anchorOrigin.horizontal === "right" && t.overlap === "rectangular",
    style: {
      bottom: 0,
      right: 0,
      transform: "scale(1) translate(50%, 50%)",
      transformOrigin: "100% 100%",
      [`&.${Jd.invisible}`]: {
        transform: "scale(0) translate(50%, 50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "top" && t.anchorOrigin.horizontal === "left" && t.overlap === "rectangular",
    style: {
      top: 0,
      left: 0,
      transform: "scale(1) translate(-50%, -50%)",
      transformOrigin: "0% 0%",
      [`&.${Jd.invisible}`]: {
        transform: "scale(0) translate(-50%, -50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "bottom" && t.anchorOrigin.horizontal === "left" && t.overlap === "rectangular",
    style: {
      bottom: 0,
      left: 0,
      transform: "scale(1) translate(-50%, 50%)",
      transformOrigin: "0% 100%",
      [`&.${Jd.invisible}`]: {
        transform: "scale(0) translate(-50%, 50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "top" && t.anchorOrigin.horizontal === "right" && t.overlap === "circular",
    style: {
      top: "14%",
      right: "14%",
      transform: "scale(1) translate(50%, -50%)",
      transformOrigin: "100% 0%",
      [`&.${Jd.invisible}`]: {
        transform: "scale(0) translate(50%, -50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "bottom" && t.anchorOrigin.horizontal === "right" && t.overlap === "circular",
    style: {
      bottom: "14%",
      right: "14%",
      transform: "scale(1) translate(50%, 50%)",
      transformOrigin: "100% 100%",
      [`&.${Jd.invisible}`]: {
        transform: "scale(0) translate(50%, 50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "top" && t.anchorOrigin.horizontal === "left" && t.overlap === "circular",
    style: {
      top: "14%",
      left: "14%",
      transform: "scale(1) translate(-50%, -50%)",
      transformOrigin: "0% 0%",
      [`&.${Jd.invisible}`]: {
        transform: "scale(0) translate(-50%, -50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "bottom" && t.anchorOrigin.horizontal === "left" && t.overlap === "circular",
    style: {
      bottom: "14%",
      left: "14%",
      transform: "scale(1) translate(-50%, 50%)",
      transformOrigin: "0% 100%",
      [`&.${Jd.invisible}`]: {
        transform: "scale(0) translate(-50%, 50%)"
      }
    }
  }, {
    props: {
      invisible: !0
    },
    style: {
      transition: e.transitions.create("transform", {
        easing: e.transitions.easing.easeInOut,
        duration: e.transitions.duration.leavingScreen
      })
    }
  }]
})));
function $F(e) {
  return {
    vertical: (e == null ? void 0 : e.vertical) ?? "top",
    horizontal: (e == null ? void 0 : e.horizontal) ?? "right"
  };
}
const Ij = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const i = Tn({
    props: t,
    name: "MuiBadge"
  }), {
    anchorOrigin: s,
    className: u,
    classes: d,
    component: p,
    components: m = {},
    componentsProps: v = {},
    children: y,
    overlap: C = "rectangular",
    color: w = "default",
    invisible: R = !1,
    max: O = 99,
    badgeContent: E,
    slots: k,
    slotProps: L,
    showZero: F = !1,
    variant: _ = "standard",
    ...P
  } = i, {
    badgeContent: D,
    invisible: z,
    max: K,
    displayValue: Q
  } = xK({
    max: O,
    invisible: R,
    badgeContent: E,
    showZero: F
  }), H = gP({
    anchorOrigin: $F(s),
    color: w,
    overlap: C,
    variant: _,
    badgeContent: E
  }), I = z || D == null && _ !== "dot", {
    color: U = w,
    overlap: G = C,
    anchorOrigin: Y,
    variant: te = _
  } = I ? H : i, B = $F(Y), W = te !== "dot" ? Q : void 0, q = {
    ...i,
    badgeContent: D,
    invisible: I,
    max: K,
    displayValue: W,
    showZero: F,
    anchorOrigin: B,
    color: U,
    overlap: G,
    variant: te
  }, ne = TK(q), re = {
    slots: {
      root: (k == null ? void 0 : k.root) ?? m.Root,
      badge: (k == null ? void 0 : k.badge) ?? m.Badge
    },
    slotProps: {
      root: (L == null ? void 0 : L.root) ?? v.root,
      badge: (L == null ? void 0 : L.badge) ?? v.badge
    }
  }, [X, j] = vn("root", {
    elementType: RK,
    externalForwardedProps: {
      ...re,
      ...P
    },
    ownerState: q,
    className: nt(ne.root, u),
    ref: n,
    additionalProps: {
      as: p
    }
  }), [ie, fe] = vn("badge", {
    elementType: OK,
    externalForwardedProps: re,
    ownerState: q,
    className: ne.badge
  });
  return /* @__PURE__ */ A.jsxs(X, {
    ...j,
    children: [y, /* @__PURE__ */ A.jsx(ie, {
      ...fe,
      children: W
    })]
  });
});
process.env.NODE_ENV !== "production" && (Ij.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The anchor of the badge.
   * @default {
   *   vertical: 'top',
   *   horizontal: 'right',
   * }
   */
  anchorOrigin: a.shape({
    horizontal: a.oneOf(["left", "right"]),
    vertical: a.oneOf(["bottom", "top"])
  }),
  /**
   * The content rendered within the badge.
   */
  badgeContent: a.node,
  /**
   * The badge will be added relative to this node.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'default'
   */
  color: a.oneOfType([a.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), a.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: a.shape({
    Badge: a.elementType,
    Root: a.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: a.shape({
    badge: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object])
  }),
  /**
   * If `true`, the badge is invisible.
   * @default false
   */
  invisible: a.bool,
  /**
   * Max count to show.
   * @default 99
   */
  max: a.number,
  /**
   * Wrapped shape the badge should overlap.
   * @default 'rectangular'
   */
  overlap: a.oneOf(["circular", "rectangular"]),
  /**
   * Controls whether the badge is hidden when `badgeContent` is zero.
   * @default false
   */
  showZero: a.bool,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    badge: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    badge: a.elementType,
    root: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The variant to use.
   * @default 'standard'
   */
  variant: a.oneOfType([a.oneOf(["dot", "standard"]), a.string])
});
const kK = bn("MuiBox", ["root"]), PK = SE(), L0 = W6({
  themeId: ju,
  defaultTheme: PK,
  defaultClassName: kK.root,
  generateClassName: I$.generate
});
process.env.NODE_ENV !== "production" && (L0.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  children: a.node,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
function MK(e) {
  return yn("MuiButton", e);
}
const Bp = bn("MuiButton", ["root", "text", "textInherit", "textPrimary", "textSecondary", "textSuccess", "textError", "textInfo", "textWarning", "outlined", "outlinedInherit", "outlinedPrimary", "outlinedSecondary", "outlinedSuccess", "outlinedError", "outlinedInfo", "outlinedWarning", "contained", "containedInherit", "containedPrimary", "containedSecondary", "containedSuccess", "containedError", "containedInfo", "containedWarning", "disableElevation", "focusVisible", "disabled", "colorInherit", "colorPrimary", "colorSecondary", "colorSuccess", "colorError", "colorInfo", "colorWarning", "textSizeSmall", "textSizeMedium", "textSizeLarge", "outlinedSizeSmall", "outlinedSizeMedium", "outlinedSizeLarge", "containedSizeSmall", "containedSizeMedium", "containedSizeLarge", "sizeMedium", "sizeSmall", "sizeLarge", "fullWidth", "startIcon", "endIcon", "icon", "iconSizeSmall", "iconSizeMedium", "iconSizeLarge", "loading", "loadingWrapper", "loadingIconPlaceholder", "loadingIndicator", "loadingPositionCenter", "loadingPositionStart", "loadingPositionEnd"]), Dj = /* @__PURE__ */ S.createContext({});
process.env.NODE_ENV !== "production" && (Dj.displayName = "ButtonGroupContext");
const Nj = /* @__PURE__ */ S.createContext(void 0);
process.env.NODE_ENV !== "production" && (Nj.displayName = "ButtonGroupButtonContext");
const IK = (e) => {
  const {
    color: t,
    disableElevation: n,
    fullWidth: i,
    size: s,
    variant: u,
    loading: d,
    loadingPosition: p,
    classes: m
  } = e, v = {
    root: ["root", d && "loading", u, `${u}${Be(t)}`, `size${Be(s)}`, `${u}Size${Be(s)}`, `color${Be(t)}`, n && "disableElevation", i && "fullWidth", d && `loadingPosition${Be(p)}`],
    startIcon: ["icon", "startIcon", `iconSize${Be(s)}`],
    endIcon: ["icon", "endIcon", `iconSize${Be(s)}`],
    loadingIndicator: ["loadingIndicator"],
    loadingWrapper: ["loadingWrapper"]
  }, y = yt(v, MK, m);
  return {
    ...m,
    // forward the focused, disabled, etc. classes to the ButtonBase
    ...y
  };
}, Lj = [{
  props: {
    size: "small"
  },
  style: {
    "& > *:nth-of-type(1)": {
      fontSize: 18
    }
  }
}, {
  props: {
    size: "medium"
  },
  style: {
    "& > *:nth-of-type(1)": {
      fontSize: 20
    }
  }
}, {
  props: {
    size: "large"
  },
  style: {
    "& > *:nth-of-type(1)": {
      fontSize: 22
    }
  }
}], DK = Ue(Kc, {
  shouldForwardProp: (e) => Ya(e) || e === "classes",
  name: "MuiButton",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[n.variant], t[`${n.variant}${Be(n.color)}`], t[`size${Be(n.size)}`], t[`${n.variant}Size${Be(n.size)}`], n.color === "inherit" && t.colorInherit, n.disableElevation && t.disableElevation, n.fullWidth && t.fullWidth, n.loading && t.loading];
  }
})(rn(({
  theme: e
}) => {
  const t = e.palette.mode === "light" ? e.palette.grey[300] : e.palette.grey[800], n = e.palette.mode === "light" ? e.palette.grey.A100 : e.palette.grey[700];
  return {
    ...e.typography.button,
    minWidth: 64,
    padding: "6px 16px",
    border: 0,
    borderRadius: (e.vars || e).shape.borderRadius,
    transition: e.transitions.create(["background-color", "box-shadow", "border-color", "color"], {
      duration: e.transitions.duration.short
    }),
    "&:hover": {
      textDecoration: "none"
    },
    [`&.${Bp.disabled}`]: {
      color: (e.vars || e).palette.action.disabled
    },
    variants: [{
      props: {
        variant: "contained"
      },
      style: {
        color: "var(--variant-containedColor)",
        backgroundColor: "var(--variant-containedBg)",
        boxShadow: (e.vars || e).shadows[2],
        "&:hover": {
          boxShadow: (e.vars || e).shadows[4],
          // Reset on touch devices, it doesn't add specificity
          "@media (hover: none)": {
            boxShadow: (e.vars || e).shadows[2]
          }
        },
        "&:active": {
          boxShadow: (e.vars || e).shadows[8]
        },
        [`&.${Bp.focusVisible}`]: {
          boxShadow: (e.vars || e).shadows[6]
        },
        [`&.${Bp.disabled}`]: {
          color: (e.vars || e).palette.action.disabled,
          boxShadow: (e.vars || e).shadows[0],
          backgroundColor: (e.vars || e).palette.action.disabledBackground
        }
      }
    }, {
      props: {
        variant: "outlined"
      },
      style: {
        padding: "5px 15px",
        border: "1px solid currentColor",
        borderColor: "var(--variant-outlinedBorder, currentColor)",
        backgroundColor: "var(--variant-outlinedBg)",
        color: "var(--variant-outlinedColor)",
        [`&.${Bp.disabled}`]: {
          border: `1px solid ${(e.vars || e).palette.action.disabledBackground}`
        }
      }
    }, {
      props: {
        variant: "text"
      },
      style: {
        padding: "6px 8px",
        color: "var(--variant-textColor)",
        backgroundColor: "var(--variant-textBg)"
      }
    }, ...Object.entries(e.palette).filter(to()).map(([i]) => ({
      props: {
        color: i
      },
      style: {
        "--variant-textColor": (e.vars || e).palette[i].main,
        "--variant-outlinedColor": (e.vars || e).palette[i].main,
        "--variant-outlinedBorder": e.vars ? `rgba(${e.vars.palette[i].mainChannel} / 0.5)` : $n(e.palette[i].main, 0.5),
        "--variant-containedColor": (e.vars || e).palette[i].contrastText,
        "--variant-containedBg": (e.vars || e).palette[i].main,
        "@media (hover: hover)": {
          "&:hover": {
            "--variant-containedBg": (e.vars || e).palette[i].dark,
            "--variant-textBg": e.vars ? `rgba(${e.vars.palette[i].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : $n(e.palette[i].main, e.palette.action.hoverOpacity),
            "--variant-outlinedBorder": (e.vars || e).palette[i].main,
            "--variant-outlinedBg": e.vars ? `rgba(${e.vars.palette[i].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : $n(e.palette[i].main, e.palette.action.hoverOpacity)
          }
        }
      }
    })), {
      props: {
        color: "inherit"
      },
      style: {
        color: "inherit",
        borderColor: "currentColor",
        "--variant-containedBg": e.vars ? e.vars.palette.Button.inheritContainedBg : t,
        "@media (hover: hover)": {
          "&:hover": {
            "--variant-containedBg": e.vars ? e.vars.palette.Button.inheritContainedHoverBg : n,
            "--variant-textBg": e.vars ? `rgba(${e.vars.palette.text.primaryChannel} / ${e.vars.palette.action.hoverOpacity})` : $n(e.palette.text.primary, e.palette.action.hoverOpacity),
            "--variant-outlinedBg": e.vars ? `rgba(${e.vars.palette.text.primaryChannel} / ${e.vars.palette.action.hoverOpacity})` : $n(e.palette.text.primary, e.palette.action.hoverOpacity)
          }
        }
      }
    }, {
      props: {
        size: "small",
        variant: "text"
      },
      style: {
        padding: "4px 5px",
        fontSize: e.typography.pxToRem(13)
      }
    }, {
      props: {
        size: "large",
        variant: "text"
      },
      style: {
        padding: "8px 11px",
        fontSize: e.typography.pxToRem(15)
      }
    }, {
      props: {
        size: "small",
        variant: "outlined"
      },
      style: {
        padding: "3px 9px",
        fontSize: e.typography.pxToRem(13)
      }
    }, {
      props: {
        size: "large",
        variant: "outlined"
      },
      style: {
        padding: "7px 21px",
        fontSize: e.typography.pxToRem(15)
      }
    }, {
      props: {
        size: "small",
        variant: "contained"
      },
      style: {
        padding: "4px 10px",
        fontSize: e.typography.pxToRem(13)
      }
    }, {
      props: {
        size: "large",
        variant: "contained"
      },
      style: {
        padding: "8px 22px",
        fontSize: e.typography.pxToRem(15)
      }
    }, {
      props: {
        disableElevation: !0
      },
      style: {
        boxShadow: "none",
        "&:hover": {
          boxShadow: "none"
        },
        [`&.${Bp.focusVisible}`]: {
          boxShadow: "none"
        },
        "&:active": {
          boxShadow: "none"
        },
        [`&.${Bp.disabled}`]: {
          boxShadow: "none"
        }
      }
    }, {
      props: {
        fullWidth: !0
      },
      style: {
        width: "100%"
      }
    }, {
      props: {
        loadingPosition: "center"
      },
      style: {
        transition: e.transitions.create(["background-color", "box-shadow", "border-color"], {
          duration: e.transitions.duration.short
        }),
        [`&.${Bp.loading}`]: {
          color: "transparent"
        }
      }
    }]
  };
})), NK = Ue("span", {
  name: "MuiButton",
  slot: "StartIcon",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.startIcon, n.loading && t.startIconLoadingStart, t[`iconSize${Be(n.size)}`]];
  }
})(({
  theme: e
}) => ({
  display: "inherit",
  marginRight: 8,
  marginLeft: -4,
  variants: [{
    props: {
      size: "small"
    },
    style: {
      marginLeft: -2
    }
  }, {
    props: {
      loadingPosition: "start",
      loading: !0
    },
    style: {
      transition: e.transitions.create(["opacity"], {
        duration: e.transitions.duration.short
      }),
      opacity: 0
    }
  }, {
    props: {
      loadingPosition: "start",
      loading: !0,
      fullWidth: !0
    },
    style: {
      marginRight: -8
    }
  }, ...Lj]
})), LK = Ue("span", {
  name: "MuiButton",
  slot: "EndIcon",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.endIcon, n.loading && t.endIconLoadingEnd, t[`iconSize${Be(n.size)}`]];
  }
})(({
  theme: e
}) => ({
  display: "inherit",
  marginRight: -4,
  marginLeft: 8,
  variants: [{
    props: {
      size: "small"
    },
    style: {
      marginRight: -2
    }
  }, {
    props: {
      loadingPosition: "end",
      loading: !0
    },
    style: {
      transition: e.transitions.create(["opacity"], {
        duration: e.transitions.duration.short
      }),
      opacity: 0
    }
  }, {
    props: {
      loadingPosition: "end",
      loading: !0,
      fullWidth: !0
    },
    style: {
      marginLeft: -8
    }
  }, ...Lj]
})), FK = Ue("span", {
  name: "MuiButton",
  slot: "LoadingIndicator",
  overridesResolver: (e, t) => t.loadingIndicator
})(({
  theme: e
}) => ({
  display: "none",
  position: "absolute",
  visibility: "visible",
  variants: [{
    props: {
      loading: !0
    },
    style: {
      display: "flex"
    }
  }, {
    props: {
      loadingPosition: "start"
    },
    style: {
      left: 14
    }
  }, {
    props: {
      loadingPosition: "start",
      size: "small"
    },
    style: {
      left: 10
    }
  }, {
    props: {
      variant: "text",
      loadingPosition: "start"
    },
    style: {
      left: 6
    }
  }, {
    props: {
      loadingPosition: "center"
    },
    style: {
      left: "50%",
      transform: "translate(-50%)",
      color: (e.vars || e).palette.action.disabled
    }
  }, {
    props: {
      loadingPosition: "end"
    },
    style: {
      right: 14
    }
  }, {
    props: {
      loadingPosition: "end",
      size: "small"
    },
    style: {
      right: 10
    }
  }, {
    props: {
      variant: "text",
      loadingPosition: "end"
    },
    style: {
      right: 6
    }
  }, {
    props: {
      loadingPosition: "start",
      fullWidth: !0
    },
    style: {
      position: "relative",
      left: -10
    }
  }, {
    props: {
      loadingPosition: "end",
      fullWidth: !0
    },
    style: {
      position: "relative",
      right: -10
    }
  }]
})), jF = Ue("span", {
  name: "MuiButton",
  slot: "LoadingIconPlaceholder",
  overridesResolver: (e, t) => t.loadingIconPlaceholder
})({
  display: "inline-block",
  width: "1em",
  height: "1em"
}), of = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const i = S.useContext(Dj), s = S.useContext(Nj), u = zg(i, t), d = Tn({
    props: u,
    name: "MuiButton"
  }), {
    children: p,
    color: m = "primary",
    component: v = "button",
    className: y,
    disabled: C = !1,
    disableElevation: w = !1,
    disableFocusRipple: R = !1,
    endIcon: O,
    focusVisibleClassName: E,
    fullWidth: k = !1,
    id: L,
    loading: F = null,
    loadingIndicator: _,
    loadingPosition: P = "center",
    size: D = "medium",
    startIcon: z,
    type: K,
    variant: Q = "text",
    ...H
  } = d, I = Sr(L), U = _ ?? /* @__PURE__ */ A.jsx(wE, {
    "aria-labelledby": I,
    color: "inherit",
    size: 16
  }), G = {
    ...d,
    color: m,
    component: v,
    disabled: C,
    disableElevation: w,
    disableFocusRipple: R,
    fullWidth: k,
    loading: F,
    loadingIndicator: U,
    loadingPosition: P,
    size: D,
    type: K,
    variant: Q
  }, Y = IK(G), te = (z || F && P === "start") && /* @__PURE__ */ A.jsx(NK, {
    className: Y.startIcon,
    ownerState: G,
    children: z || /* @__PURE__ */ A.jsx(jF, {
      className: Y.loadingIconPlaceholder,
      ownerState: G
    })
  }), B = (O || F && P === "end") && /* @__PURE__ */ A.jsx(LK, {
    className: Y.endIcon,
    ownerState: G,
    children: O || /* @__PURE__ */ A.jsx(jF, {
      className: Y.loadingIconPlaceholder,
      ownerState: G
    })
  }), W = s || "", q = typeof F == "boolean" ? (
    // use plain HTML span to minimize the runtime overhead
    /* @__PURE__ */ A.jsx("span", {
      className: Y.loadingWrapper,
      style: {
        display: "contents"
      },
      children: F && /* @__PURE__ */ A.jsx(FK, {
        className: Y.loadingIndicator,
        ownerState: G,
        children: U
      })
    })
  ) : null;
  return /* @__PURE__ */ A.jsxs(DK, {
    ownerState: G,
    className: nt(i.className, Y.root, y, W),
    component: v,
    disabled: C || F,
    focusRipple: !R,
    focusVisibleClassName: nt(Y.focusVisible, E),
    ref: n,
    type: K,
    id: F ? I : L,
    ...H,
    classes: Y,
    children: [te, P !== "end" && q, p, P === "end" && q, B]
  });
});
process.env.NODE_ENV !== "production" && (of.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: a.oneOfType([a.oneOf(["inherit", "primary", "secondary", "success", "error", "info", "warning"]), a.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: a.bool,
  /**
   * If `true`, no elevation is used.
   * @default false
   */
  disableElevation: a.bool,
  /**
   * If `true`, the  keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: a.bool,
  /**
   * If `true`, the ripple effect is disabled.
   *
   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
   * @default false
   */
  disableRipple: a.bool,
  /**
   * Element placed after the children.
   */
  endIcon: a.node,
  /**
   * @ignore
   */
  focusVisibleClassName: a.string,
  /**
   * If `true`, the button will take up the full width of its container.
   * @default false
   */
  fullWidth: a.bool,
  /**
   * The URL to link to when the button is clicked.
   * If defined, an `a` element will be used as the root node.
   */
  href: a.string,
  /**
   * @ignore
   */
  id: a.string,
  /**
   * If `true`, the loading indicator is visible and the button is disabled.
   * If `true | false`, the loading wrapper is always rendered before the children to prevent [Google Translation Crash](https://github.com/mui/material-ui/issues/27853).
   * @default null
   */
  loading: a.bool,
  /**
   * Element placed before the children if the button is in loading state.
   * The node should contain an element with `role="progressbar"` with an accessible name.
   * By default, it renders a `CircularProgress` that is labeled by the button itself.
   * @default <CircularProgress color="inherit" size={16} />
   */
  loadingIndicator: a.node,
  /**
   * The loading indicator can be positioned on the start, end, or the center of the button.
   * @default 'center'
   */
  loadingPosition: a.oneOf(["center", "end", "start"]),
  /**
   * The size of the component.
   * `small` is equivalent to the dense button styling.
   * @default 'medium'
   */
  size: a.oneOfType([a.oneOf(["small", "medium", "large"]), a.string]),
  /**
   * Element placed before the children.
   */
  startIcon: a.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * @ignore
   */
  type: a.oneOfType([a.oneOf(["button", "reset", "submit"]), a.string]),
  /**
   * The variant to use.
   * @default 'text'
   */
  variant: a.oneOfType([a.oneOf(["contained", "outlined", "text"]), a.string])
});
function _K(e) {
  return yn("PrivateSwitchBase", e);
}
bn("PrivateSwitchBase", ["root", "checked", "disabled", "input", "edgeStart", "edgeEnd"]);
const AK = (e) => {
  const {
    classes: t,
    checked: n,
    disabled: i,
    edge: s
  } = e, u = {
    root: ["root", n && "checked", i && "disabled", s && `edge${Be(s)}`],
    input: ["input"]
  };
  return yt(u, _K, t);
}, $K = Ue(Kc, {
  name: "MuiSwitchBase"
})({
  padding: 9,
  borderRadius: "50%",
  variants: [{
    props: {
      edge: "start",
      size: "small"
    },
    style: {
      marginLeft: -3
    }
  }, {
    props: ({
      edge: e,
      ownerState: t
    }) => e === "start" && t.size !== "small",
    style: {
      marginLeft: -12
    }
  }, {
    props: {
      edge: "end",
      size: "small"
    },
    style: {
      marginRight: -3
    }
  }, {
    props: ({
      edge: e,
      ownerState: t
    }) => e === "end" && t.size !== "small",
    style: {
      marginRight: -12
    }
  }]
}), jK = Ue("input", {
  name: "MuiSwitchBase",
  shouldForwardProp: Ya
})({
  cursor: "inherit",
  position: "absolute",
  opacity: 0,
  width: "100%",
  height: "100%",
  top: 0,
  left: 0,
  margin: 0,
  padding: 0,
  zIndex: 1
}), Fj = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const {
    autoFocus: i,
    checked: s,
    checkedIcon: u,
    defaultChecked: d,
    disabled: p,
    disableFocusRipple: m = !1,
    edge: v = !1,
    icon: y,
    id: C,
    inputProps: w,
    inputRef: R,
    name: O,
    onBlur: E,
    onChange: k,
    onFocus: L,
    readOnly: F,
    required: _ = !1,
    tabIndex: P,
    type: D,
    value: z,
    slots: K = {},
    slotProps: Q = {},
    ...H
  } = t, [I, U] = oh({
    controlled: s,
    default: !!d,
    name: "SwitchBase",
    state: "checked"
  }), G = Xc(), Y = (me) => {
    L && L(me), G && G.onFocus && G.onFocus(me);
  }, te = (me) => {
    E && E(me), G && G.onBlur && G.onBlur(me);
  }, B = (me) => {
    if (me.nativeEvent.defaultPrevented)
      return;
    const ge = me.target.checked;
    U(ge), k && k(me, ge);
  };
  let W = p;
  G && typeof W > "u" && (W = G.disabled);
  const q = D === "checkbox" || D === "radio", ne = {
    ...t,
    checked: I,
    disabled: W,
    disableFocusRipple: m,
    edge: v
  }, re = AK(ne), X = {
    slots: K,
    slotProps: {
      input: w,
      ...Q
    }
  }, [j, ie] = vn("root", {
    ref: n,
    elementType: $K,
    className: re.root,
    shouldForwardComponentProp: !0,
    externalForwardedProps: {
      ...X,
      component: "span",
      ...H
    },
    getSlotProps: (me) => ({
      ...me,
      onFocus: (ge) => {
        var de;
        (de = me.onFocus) == null || de.call(me, ge), Y(ge);
      },
      onBlur: (ge) => {
        var de;
        (de = me.onBlur) == null || de.call(me, ge), te(ge);
      }
    }),
    ownerState: ne,
    additionalProps: {
      centerRipple: !0,
      focusRipple: !m,
      disabled: W,
      role: void 0,
      tabIndex: null
    }
  }), [fe, ce] = vn("input", {
    ref: R,
    elementType: jK,
    className: re.input,
    externalForwardedProps: X,
    getSlotProps: (me) => ({
      onChange: (ge) => {
        var de;
        (de = me.onChange) == null || de.call(me, ge), B(ge);
      }
    }),
    ownerState: ne,
    additionalProps: {
      autoFocus: i,
      checked: s,
      defaultChecked: d,
      disabled: W,
      id: q ? C : void 0,
      name: O,
      readOnly: F,
      required: _,
      tabIndex: P,
      type: D,
      ...D === "checkbox" && z === void 0 ? {} : {
        value: z
      }
    }
  });
  return /* @__PURE__ */ A.jsxs(j, {
    ...ie,
    children: [/* @__PURE__ */ A.jsx(fe, {
      ...ce
    }), I ? u : y]
  });
});
process.env.NODE_ENV !== "production" && (Fj.propTypes = {
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: a.bool,
  /**
   * If `true`, the component is checked.
   */
  checked: a.bool,
  /**
   * The icon to display when the component is checked.
   */
  checkedIcon: a.node.isRequired,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * @ignore
   */
  defaultChecked: a.bool,
  /**
   * If `true`, the component is disabled.
   */
  disabled: a.bool,
  /**
   * If `true`, the  keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: a.bool,
  /**
   * If given, uses a negative margin to counteract the padding on one
   * side (this is often helpful for aligning the left or right
   * side of the icon with content above or below, without ruining the border
   * size and shape).
   * @default false
   */
  edge: a.oneOf(["end", "start", !1]),
  /**
   * The icon to display when the component is unchecked.
   */
  icon: a.node.isRequired,
  /**
   * The id of the `input` element.
   */
  id: a.string,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   */
  inputProps: a.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Ea,
  /*
   * @ignore
   */
  name: a.string,
  /**
   * @ignore
   */
  onBlur: a.func,
  /**
   * Callback fired when the state is changed.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: a.func,
  /**
   * @ignore
   */
  onFocus: a.func,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: a.bool,
  /**
   * If `true`, the `input` element is required.
   */
  required: a.bool,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    input: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    input: a.elementType,
    root: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.object,
  /**
   * @ignore
   */
  tabIndex: a.oneOfType([a.number, a.string]),
  /**
   * The input component prop `type`.
   */
  type: a.string.isRequired,
  /**
   * The value of the component.
   */
  value: a.any
});
const zK = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
}), "CheckBoxOutlineBlank"), HK = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
}), "CheckBox"), VK = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z"
}), "IndeterminateCheckBox");
function BK(e) {
  return yn("MuiCheckbox", e);
}
const OO = bn("MuiCheckbox", ["root", "checked", "disabled", "indeterminate", "colorPrimary", "colorSecondary", "sizeSmall", "sizeMedium"]), UK = (e) => {
  const {
    classes: t,
    indeterminate: n,
    color: i,
    size: s
  } = e, u = {
    root: ["root", n && "indeterminate", `color${Be(i)}`, `size${Be(s)}`]
  }, d = yt(u, BK, t);
  return {
    ...t,
    // forward the disabled and checked classes to the SwitchBase
    ...d
  };
}, GK = Ue(Fj, {
  shouldForwardProp: (e) => Ya(e) || e === "classes",
  name: "MuiCheckbox",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.indeterminate && t.indeterminate, t[`size${Be(n.size)}`], n.color !== "default" && t[`color${Be(n.color)}`]];
  }
})(rn(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  variants: [{
    props: {
      color: "default",
      disableRipple: !1
    },
    style: {
      "&:hover": {
        backgroundColor: e.vars ? `rgba(${e.vars.palette.action.activeChannel} / ${e.vars.palette.action.hoverOpacity})` : $n(e.palette.action.active, e.palette.action.hoverOpacity)
      }
    }
  }, ...Object.entries(e.palette).filter(to()).map(([t]) => ({
    props: {
      color: t,
      disableRipple: !1
    },
    style: {
      "&:hover": {
        backgroundColor: e.vars ? `rgba(${e.vars.palette[t].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : $n(e.palette[t].main, e.palette.action.hoverOpacity)
      }
    }
  })), ...Object.entries(e.palette).filter(to()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      [`&.${OO.checked}, &.${OO.indeterminate}`]: {
        color: (e.vars || e).palette[t].main
      },
      [`&.${OO.disabled}`]: {
        color: (e.vars || e).palette.action.disabled
      }
    }
  })), {
    // Should be last to override other colors
    props: {
      disableRipple: !1
    },
    style: {
      // Reset on touch devices, it doesn't add specificity
      "&:hover": {
        "@media (hover: none)": {
          backgroundColor: "transparent"
        }
      }
    }
  }]
}))), WK = /* @__PURE__ */ A.jsx(HK, {}), qK = /* @__PURE__ */ A.jsx(zK, {}), KK = /* @__PURE__ */ A.jsx(VK, {}), _j = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const i = Tn({
    props: t,
    name: "MuiCheckbox"
  }), {
    checkedIcon: s = WK,
    color: u = "primary",
    icon: d = qK,
    indeterminate: p = !1,
    indeterminateIcon: m = KK,
    inputProps: v,
    size: y = "medium",
    disableRipple: C = !1,
    className: w,
    slots: R = {},
    slotProps: O = {},
    ...E
  } = i, k = p ? m : d, L = p ? m : s, F = {
    ...i,
    disableRipple: C,
    color: u,
    indeterminate: p,
    size: y
  }, _ = UK(F), P = O.input ?? v, [D, z] = vn("root", {
    ref: n,
    elementType: GK,
    className: nt(_.root, w),
    shouldForwardComponentProp: !0,
    externalForwardedProps: {
      slots: R,
      slotProps: O,
      ...E
    },
    ownerState: F,
    additionalProps: {
      type: "checkbox",
      icon: /* @__PURE__ */ S.cloneElement(k, {
        fontSize: k.props.fontSize ?? y
      }),
      checkedIcon: /* @__PURE__ */ S.cloneElement(L, {
        fontSize: L.props.fontSize ?? y
      }),
      disableRipple: C,
      slots: R,
      slotProps: {
        input: lj(typeof P == "function" ? P(F) : P, {
          "data-indeterminate": p
        })
      }
    }
  });
  return /* @__PURE__ */ A.jsx(D, {
    ...z,
    classes: _
  });
});
process.env.NODE_ENV !== "production" && (_j.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the component is checked.
   */
  checked: a.bool,
  /**
   * The icon to display when the component is checked.
   * @default <CheckBoxIcon />
   */
  checkedIcon: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: a.oneOfType([a.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), a.string]),
  /**
   * The default checked state. Use when the component is not controlled.
   */
  defaultChecked: a.bool,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: a.bool,
  /**
   * If `true`, the ripple effect is disabled.
   * @default false
   */
  disableRipple: a.bool,
  /**
   * The icon to display when the component is unchecked.
   * @default <CheckBoxOutlineBlankIcon />
   */
  icon: a.node,
  /**
   * The id of the `input` element.
   */
  id: a.string,
  /**
   * If `true`, the component appears indeterminate.
   * This does not set the native input element to indeterminate due
   * to inconsistent behavior across browsers.
   * However, we set a `data-indeterminate` attribute on the `input`.
   * @default false
   */
  indeterminate: a.bool,
  /**
   * The icon to display when the component is indeterminate.
   * @default <IndeterminateCheckBoxIcon />
   */
  indeterminateIcon: a.node,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @deprecated Use `slotProps.input` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  inputProps: a.object,
  /**
   * Callback fired when the state is changed.
   *
   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: a.func,
  /**
   * If `true`, the `input` element is required.
   * @default false
   */
  required: a.bool,
  /**
   * The size of the component.
   * `small` is equivalent to the dense checkbox styling.
   * @default 'medium'
   */
  size: a.oneOfType([a.oneOf(["medium", "small"]), a.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    input: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    input: a.elementType,
    root: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The value of the component. The DOM API casts this to a string.
   * The browser uses "on" as the default value.
   */
  value: a.any
});
function zF(e) {
  return e.substring(2).toLowerCase();
}
function YK(e, t) {
  return t.documentElement.clientWidth < e.clientX || t.documentElement.clientHeight < e.clientY;
}
function aC(e) {
  const {
    children: t,
    disableReactTree: n = !1,
    mouseEvent: i = "onClick",
    onClickAway: s,
    touchEvent: u = "onTouchEnd"
  } = e, d = S.useRef(!1), p = S.useRef(null), m = S.useRef(!1), v = S.useRef(!1);
  S.useEffect(() => (setTimeout(() => {
    m.current = !0;
  }, 0), () => {
    m.current = !1;
  }), []);
  const y = Vr(mh(t), p), C = Nn((O) => {
    const E = v.current;
    v.current = !1;
    const k = ao(p.current);
    if (!m.current || !p.current || "clientX" in O && YK(O, k))
      return;
    if (d.current) {
      d.current = !1;
      return;
    }
    let L;
    O.composedPath ? L = O.composedPath().includes(p.current) : L = !k.documentElement.contains(
      // @ts-expect-error returns `false` as intended when not dispatched from a Node
      O.target
    ) || p.current.contains(
      // @ts-expect-error returns `false` as intended when not dispatched from a Node
      O.target
    ), !L && (n || !E) && s(O);
  }), w = (O) => (E) => {
    v.current = !0;
    const k = t.props[O];
    k && k(E);
  }, R = {
    ref: y
  };
  return u !== !1 && (R[u] = w(u)), S.useEffect(() => {
    if (u !== !1) {
      const O = zF(u), E = ao(p.current), k = () => {
        d.current = !0;
      };
      return E.addEventListener(O, C), E.addEventListener("touchmove", k), () => {
        E.removeEventListener(O, C), E.removeEventListener("touchmove", k);
      };
    }
  }, [C, u]), i !== !1 && (R[i] = w(i)), S.useEffect(() => {
    if (i !== !1) {
      const O = zF(i), E = ao(p.current);
      return E.addEventListener(O, C), () => {
        E.removeEventListener(O, C);
      };
    }
  }, [C, i]), /* @__PURE__ */ S.cloneElement(t, R);
}
process.env.NODE_ENV !== "production" && (aC.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The wrapped element.
   */
  children: hh.isRequired,
  /**
   * If `true`, the React tree is ignored and only the DOM tree is considered.
   * This prop changes how portaled elements are handled.
   * @default false
   */
  disableReactTree: a.bool,
  /**
   * The mouse event to listen to. You can disable the listener by providing `false`.
   * @default 'onClick'
   */
  mouseEvent: a.oneOf(["onClick", "onMouseDown", "onMouseUp", "onPointerDown", "onPointerUp", !1]),
  /**
   * Callback fired when a "click away" event is detected.
   */
  onClickAway: a.func.isRequired,
  /**
   * The touch event to listen to. You can disable the listener by providing `false`.
   * @default 'onTouchEnd'
   */
  touchEvent: a.oneOf(["onTouchEnd", "onTouchStart", !1])
});
process.env.NODE_ENV !== "production" && (aC.propTypes = PC(aC.propTypes));
const Aj = zq({
  createStyledComponent: Ue("div", {
    name: "MuiContainer",
    slot: "Root",
    overridesResolver: (e, t) => {
      const {
        ownerState: n
      } = e;
      return [t.root, t[`maxWidth${Be(String(n.maxWidth))}`], n.fixed && t.fixed, n.disableGutters && t.disableGutters];
    }
  }),
  useThemeProps: (e) => Tn({
    props: e,
    name: "MuiContainer"
  })
});
process.env.NODE_ENV !== "production" && (Aj.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * If `true`, the left and right padding is removed.
   * @default false
   */
  disableGutters: a.bool,
  /**
   * Set the max-width to match the min-width of the current breakpoint.
   * This is useful if you'd prefer to design for a fixed set of sizes
   * instead of trying to accommodate a fully fluid viewport.
   * It's fluid by default.
   * @default false
   */
  fixed: a.bool,
  /**
   * Determine the max-width of the container.
   * The container width grows with the size of the screen.
   * Set to `false` to disable `maxWidth`.
   * @default 'lg'
   */
  maxWidth: a.oneOfType([a.oneOf(["xs", "sm", "md", "lg", "xl", !1]), a.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
const xk = typeof xP({}) == "function", XK = (e, t) => ({
  WebkitFontSmoothing: "antialiased",
  // Antialiasing.
  MozOsxFontSmoothing: "grayscale",
  // Antialiasing.
  // Change from `box-sizing: content-box` so that `width`
  // is not affected by `padding` or `border`.
  boxSizing: "border-box",
  // Fix font resize problem in iOS
  WebkitTextSizeAdjust: "100%",
  // When used under CssVarsProvider, colorScheme should not be applied dynamically because it will generate the stylesheet twice for server-rendered applications.
  ...t && !e.vars && {
    colorScheme: e.palette.mode
  }
}), QK = (e) => ({
  color: (e.vars || e).palette.text.primary,
  ...e.typography.body1,
  backgroundColor: (e.vars || e).palette.background.default,
  "@media print": {
    // Save printer ink.
    backgroundColor: (e.vars || e).palette.common.white
  }
}), $j = (e, t = !1) => {
  var u, d;
  const n = {};
  t && e.colorSchemes && typeof e.getColorSchemeSelector == "function" && Object.entries(e.colorSchemes).forEach(([p, m]) => {
    var y, C;
    const v = e.getColorSchemeSelector(p);
    v.startsWith("@") ? n[v] = {
      ":root": {
        colorScheme: (y = m.palette) == null ? void 0 : y.mode
      }
    } : n[v.replace(/\s*&/, "")] = {
      colorScheme: (C = m.palette) == null ? void 0 : C.mode
    };
  });
  let i = {
    html: XK(e, t),
    "*, *::before, *::after": {
      boxSizing: "inherit"
    },
    "strong, b": {
      fontWeight: e.typography.fontWeightBold
    },
    body: {
      margin: 0,
      // Remove the margin in all browsers.
      ...QK(e),
      // Add support for document.body.requestFullScreen().
      // Other elements, if background transparent, are not supported.
      "&::backdrop": {
        backgroundColor: (e.vars || e).palette.background.default
      }
    },
    ...n
  };
  const s = (d = (u = e.components) == null ? void 0 : u.MuiCssBaseline) == null ? void 0 : d.styleOverrides;
  return s && (i = [i, s]), i;
}, d0 = "mui-ecs", JK = (e) => {
  const t = $j(e, !1), n = Array.isArray(t) ? t[0] : t;
  return !e.vars && n && (n.html[`:root:has(${d0})`] = {
    colorScheme: e.palette.mode
  }), e.colorSchemes && Object.entries(e.colorSchemes).forEach(([i, s]) => {
    var d, p;
    const u = e.getColorSchemeSelector(i);
    u.startsWith("@") ? n[u] = {
      [`:root:not(:has(.${d0}))`]: {
        colorScheme: (d = s.palette) == null ? void 0 : d.mode
      }
    } : n[u.replace(/\s*&/, "")] = {
      [`&:not(:has(.${d0}))`]: {
        colorScheme: (p = s.palette) == null ? void 0 : p.mode
      }
    };
  }), t;
}, ZK = xP(xk ? ({
  theme: e,
  enableColorScheme: t
}) => $j(e, t) : ({
  theme: e
}) => JK(e));
function jj(e) {
  const t = Tn({
    props: e,
    name: "MuiCssBaseline"
  }), {
    children: n,
    enableColorScheme: i = !1
  } = t;
  return /* @__PURE__ */ A.jsxs(S.Fragment, {
    children: [xk && /* @__PURE__ */ A.jsx(ZK, {
      enableColorScheme: i
    }), !xk && !i && /* @__PURE__ */ A.jsx("span", {
      className: d0,
      style: {
        display: "none"
      }
    }), n]
  });
}
process.env.NODE_ENV !== "production" && (jj.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * You can wrap a node.
   */
  children: a.node,
  /**
   * Enable `color-scheme` CSS property to use `theme.palette.mode`.
   * For more details, check out https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme
   * For browser support, check out https://caniuse.com/?search=color-scheme
   * @default false
   */
  enableColorScheme: a.bool
});
function eY(e) {
  const t = ao(e);
  return t.body === e ? nl(e).innerWidth > t.documentElement.clientWidth : e.scrollHeight > e.clientHeight;
}
function Wb(e, t) {
  t ? e.setAttribute("aria-hidden", "true") : e.removeAttribute("aria-hidden");
}
function HF(e) {
  return parseInt(nl(e).getComputedStyle(e).paddingRight, 10) || 0;
}
function tY(e) {
  const n = ["TEMPLATE", "SCRIPT", "STYLE", "LINK", "MAP", "META", "NOSCRIPT", "PICTURE", "COL", "COLGROUP", "PARAM", "SLOT", "SOURCE", "TRACK"].includes(e.tagName), i = e.tagName === "INPUT" && e.getAttribute("type") === "hidden";
  return n || i;
}
function VF(e, t, n, i, s) {
  const u = [t, n, ...i];
  [].forEach.call(e.children, (d) => {
    const p = !u.includes(d), m = !tY(d);
    p && m && Wb(d, s);
  });
}
function kO(e, t) {
  let n = -1;
  return e.some((i, s) => t(i) ? (n = s, !0) : !1), n;
}
function nY(e, t) {
  const n = [], i = e.container;
  if (!t.disableScrollLock) {
    if (eY(i)) {
      const d = V$(nl(i));
      n.push({
        value: i.style.paddingRight,
        property: "padding-right",
        el: i
      }), i.style.paddingRight = `${HF(i) + d}px`;
      const p = ao(i).querySelectorAll(".mui-fixed");
      [].forEach.call(p, (m) => {
        n.push({
          value: m.style.paddingRight,
          property: "padding-right",
          el: m
        }), m.style.paddingRight = `${HF(m) + d}px`;
      });
    }
    let u;
    if (i.parentNode instanceof DocumentFragment)
      u = ao(i).body;
    else {
      const d = i.parentElement, p = nl(i);
      u = (d == null ? void 0 : d.nodeName) === "HTML" && p.getComputedStyle(d).overflowY === "scroll" ? d : i;
    }
    n.push({
      value: u.style.overflow,
      property: "overflow",
      el: u
    }, {
      value: u.style.overflowX,
      property: "overflow-x",
      el: u
    }, {
      value: u.style.overflowY,
      property: "overflow-y",
      el: u
    }), u.style.overflow = "hidden";
  }
  return () => {
    n.forEach(({
      value: u,
      el: d,
      property: p
    }) => {
      u ? d.style.setProperty(p, u) : d.style.removeProperty(p);
    });
  };
}
function rY(e) {
  const t = [];
  return [].forEach.call(e.children, (n) => {
    n.getAttribute("aria-hidden") === "true" && t.push(n);
  }), t;
}
class oY {
  constructor() {
    this.modals = [], this.containers = [];
  }
  add(t, n) {
    let i = this.modals.indexOf(t);
    if (i !== -1)
      return i;
    i = this.modals.length, this.modals.push(t), t.modalRef && Wb(t.modalRef, !1);
    const s = rY(n);
    VF(n, t.mount, t.modalRef, s, !0);
    const u = kO(this.containers, (d) => d.container === n);
    return u !== -1 ? (this.containers[u].modals.push(t), i) : (this.containers.push({
      modals: [t],
      container: n,
      restore: null,
      hiddenSiblings: s
    }), i);
  }
  mount(t, n) {
    const i = kO(this.containers, (u) => u.modals.includes(t)), s = this.containers[i];
    s.restore || (s.restore = nY(s, n));
  }
  remove(t, n = !0) {
    const i = this.modals.indexOf(t);
    if (i === -1)
      return i;
    const s = kO(this.containers, (d) => d.modals.includes(t)), u = this.containers[s];
    if (u.modals.splice(u.modals.indexOf(t), 1), this.modals.splice(i, 1), u.modals.length === 0)
      u.restore && u.restore(), t.modalRef && Wb(t.modalRef, n), VF(u.container, t.mount, t.modalRef, u.hiddenSiblings, !1), this.containers.splice(s, 1);
    else {
      const d = u.modals[u.modals.length - 1];
      d.modalRef && Wb(d.modalRef, !1);
    }
    return i;
  }
  isTopModal(t) {
    return this.modals.length > 0 && this.modals[this.modals.length - 1] === t;
  }
}
const iY = ["input", "select", "textarea", "a[href]", "button", "[tabindex]", "audio[controls]", "video[controls]", '[contenteditable]:not([contenteditable="false"])'].join(",");
function aY(e) {
  const t = parseInt(e.getAttribute("tabindex") || "", 10);
  return Number.isNaN(t) ? e.contentEditable === "true" || (e.nodeName === "AUDIO" || e.nodeName === "VIDEO" || e.nodeName === "DETAILS") && e.getAttribute("tabindex") === null ? 0 : e.tabIndex : t;
}
function sY(e) {
  if (e.tagName !== "INPUT" || e.type !== "radio" || !e.name)
    return !1;
  const t = (i) => e.ownerDocument.querySelector(`input[type="radio"]${i}`);
  let n = t(`[name="${e.name}"]:checked`);
  return n || (n = t(`[name="${e.name}"]`)), n !== e;
}
function lY(e) {
  return !(e.disabled || e.tagName === "INPUT" && e.type === "hidden" || sY(e));
}
function uY(e) {
  const t = [], n = [];
  return Array.from(e.querySelectorAll(iY)).forEach((i, s) => {
    const u = aY(i);
    u === -1 || !lY(i) || (u === 0 ? t.push(i) : n.push({
      documentOrder: s,
      tabIndex: u,
      node: i
    }));
  }), n.sort((i, s) => i.tabIndex === s.tabIndex ? i.documentOrder - s.documentOrder : i.tabIndex - s.tabIndex).map((i) => i.node).concat(t);
}
function cY() {
  return !0;
}
function sC(e) {
  const {
    children: t,
    disableAutoFocus: n = !1,
    disableEnforceFocus: i = !1,
    disableRestoreFocus: s = !1,
    getTabbable: u = uY,
    isEnabled: d = cY,
    open: p
  } = e, m = S.useRef(!1), v = S.useRef(null), y = S.useRef(null), C = S.useRef(null), w = S.useRef(null), R = S.useRef(!1), O = S.useRef(null), E = Vr(mh(t), O), k = S.useRef(null);
  S.useEffect(() => {
    !p || !O.current || (R.current = !n);
  }, [n, p]), S.useEffect(() => {
    if (!p || !O.current)
      return;
    const _ = ao(O.current);
    return O.current.contains(_.activeElement) || (O.current.hasAttribute("tabIndex") || (process.env.NODE_ENV !== "production" && console.error(["MUI: The modal content node does not accept focus.", 'For the benefit of assistive technologies, the tabIndex of the node is being set to "-1".'].join(`
`)), O.current.setAttribute("tabIndex", "-1")), R.current && O.current.focus()), () => {
      s || (C.current && C.current.focus && (m.current = !0, C.current.focus()), C.current = null);
    };
  }, [p]), S.useEffect(() => {
    if (!p || !O.current)
      return;
    const _ = ao(O.current), P = (K) => {
      k.current = K, !(i || !d() || K.key !== "Tab") && _.activeElement === O.current && K.shiftKey && (m.current = !0, y.current && y.current.focus());
    }, D = () => {
      var H, I;
      const K = O.current;
      if (K === null)
        return;
      if (!_.hasFocus() || !d() || m.current) {
        m.current = !1;
        return;
      }
      if (K.contains(_.activeElement) || i && _.activeElement !== v.current && _.activeElement !== y.current)
        return;
      if (_.activeElement !== w.current)
        w.current = null;
      else if (w.current !== null)
        return;
      if (!R.current)
        return;
      let Q = [];
      if ((_.activeElement === v.current || _.activeElement === y.current) && (Q = u(O.current)), Q.length > 0) {
        const U = !!((H = k.current) != null && H.shiftKey && ((I = k.current) == null ? void 0 : I.key) === "Tab"), G = Q[0], Y = Q[Q.length - 1];
        typeof G != "string" && typeof Y != "string" && (U ? Y.focus() : G.focus());
      } else
        K.focus();
    };
    _.addEventListener("focusin", D), _.addEventListener("keydown", P, !0);
    const z = setInterval(() => {
      _.activeElement && _.activeElement.tagName === "BODY" && D();
    }, 50);
    return () => {
      clearInterval(z), _.removeEventListener("focusin", D), _.removeEventListener("keydown", P, !0);
    };
  }, [n, i, s, d, p, u]);
  const L = (_) => {
    C.current === null && (C.current = _.relatedTarget), R.current = !0, w.current = _.target;
    const P = t.props.onFocus;
    P && P(_);
  }, F = (_) => {
    C.current === null && (C.current = _.relatedTarget), R.current = !0;
  };
  return /* @__PURE__ */ A.jsxs(S.Fragment, {
    children: [/* @__PURE__ */ A.jsx("div", {
      tabIndex: p ? 0 : -1,
      onFocus: F,
      ref: v,
      "data-testid": "sentinelStart"
    }), /* @__PURE__ */ S.cloneElement(t, {
      ref: E,
      onFocus: L
    }), /* @__PURE__ */ A.jsx("div", {
      tabIndex: p ? 0 : -1,
      onFocus: F,
      ref: y,
      "data-testid": "sentinelEnd"
    })]
  });
}
process.env.NODE_ENV !== "production" && (sC.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A single child content element.
   */
  children: hh,
  /**
   * If `true`, the focus trap will not automatically shift focus to itself when it opens, and
   * replace it to the last focused element when it closes.
   * This also works correctly with any focus trap children that have the `disableAutoFocus` prop.
   *
   * Generally this should never be set to `true` as it makes the focus trap less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableAutoFocus: a.bool,
  /**
   * If `true`, the focus trap will not prevent focus from leaving the focus trap while open.
   *
   * Generally this should never be set to `true` as it makes the focus trap less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableEnforceFocus: a.bool,
  /**
   * If `true`, the focus trap will not restore focus to previously focused element once
   * focus trap is hidden or unmounted.
   * @default false
   */
  disableRestoreFocus: a.bool,
  /**
   * Returns an array of ordered tabbable nodes (i.e. in tab order) within the root.
   * For instance, you can provide the "tabbable" npm dependency.
   * @param {HTMLElement} root
   */
  getTabbable: a.func,
  /**
   * This prop extends the `open` prop.
   * It allows to toggle the open state without having to wait for a rerender when changing the `open` prop.
   * This prop should be memoized.
   * It can be used to support multiple focus trap mounted at the same time.
   * @default function defaultIsEnabled(): boolean {
   *   return true;
   * }
   */
  isEnabled: a.func,
  /**
   * If `true`, focus is locked.
   */
  open: a.bool.isRequired
});
process.env.NODE_ENV !== "production" && (sC.propTypes = PC(sC.propTypes));
function dY(e) {
  return typeof e == "function" ? e() : e;
}
function fY(e) {
  return e ? e.props.hasOwnProperty("in") : !1;
}
const BF = () => {
}, Qx = new oY();
function pY(e) {
  const {
    container: t,
    disableEscapeKeyDown: n = !1,
    disableScrollLock: i = !1,
    closeAfterTransition: s = !1,
    onTransitionEnter: u,
    onTransitionExited: d,
    children: p,
    onClose: m,
    open: v,
    rootRef: y
  } = e, C = S.useRef({}), w = S.useRef(null), R = S.useRef(null), O = Vr(R, y), [E, k] = S.useState(!v), L = fY(p);
  let F = !0;
  (e["aria-hidden"] === "false" || e["aria-hidden"] === !1) && (F = !1);
  const _ = () => ao(w.current), P = () => (C.current.modalRef = R.current, C.current.mount = w.current, C.current), D = () => {
    Qx.mount(P(), {
      disableScrollLock: i
    }), R.current && (R.current.scrollTop = 0);
  }, z = Nn(() => {
    const B = dY(t) || _().body;
    Qx.add(P(), B), R.current && D();
  }), K = () => Qx.isTopModal(P()), Q = Nn((B) => {
    w.current = B, B && (v && K() ? D() : R.current && Wb(R.current, F));
  }), H = S.useCallback(() => {
    Qx.remove(P(), F);
  }, [F]);
  S.useEffect(() => () => {
    H();
  }, [H]), S.useEffect(() => {
    v ? z() : (!L || !s) && H();
  }, [v, H, L, s, z]);
  const I = (B) => (W) => {
    var q;
    (q = B.onKeyDown) == null || q.call(B, W), !(W.key !== "Escape" || W.which === 229 || // Wait until IME is settled.
    !K()) && (n || (W.stopPropagation(), m && m(W, "escapeKeyDown")));
  }, U = (B) => (W) => {
    var q;
    (q = B.onClick) == null || q.call(B, W), W.target === W.currentTarget && m && m(W, "backdropClick");
  };
  return {
    getRootProps: (B = {}) => {
      const W = W$(e);
      delete W.onTransitionEnter, delete W.onTransitionExited;
      const q = {
        ...W,
        ...B
      };
      return {
        /*
         * Marking an element with the role presentation indicates to assistive technology
         * that this element should be ignored; it exists to support the web application and
         * is not meant for humans to interact with directly.
         * https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/no-static-element-interactions.md
         */
        role: "presentation",
        ...q,
        onKeyDown: I(q),
        ref: O
      };
    },
    getBackdropProps: (B = {}) => {
      const W = B;
      return {
        "aria-hidden": !0,
        ...W,
        onClick: U(W),
        open: v
      };
    },
    getTransitionProps: () => {
      const B = () => {
        k(!1), u && u();
      }, W = () => {
        k(!0), d && d(), s && H();
      };
      return {
        onEnter: XL(B, (p == null ? void 0 : p.props.onEnter) ?? BF),
        onExited: XL(W, (p == null ? void 0 : p.props.onExited) ?? BF)
      };
    },
    rootRef: O,
    portalRef: Q,
    isTopModal: K,
    exited: E,
    hasTransition: L
  };
}
function hY(e) {
  return yn("MuiModal", e);
}
bn("MuiModal", ["root", "hidden", "backdrop"]);
const mY = (e) => {
  const {
    open: t,
    exited: n,
    classes: i
  } = e;
  return yt({
    root: ["root", !t && n && "hidden"],
    backdrop: ["backdrop"]
  }, hY, i);
}, gY = Ue("div", {
  name: "MuiModal",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, !n.open && n.exited && t.hidden];
  }
})(rn(({
  theme: e
}) => ({
  position: "fixed",
  zIndex: (e.vars || e).zIndex.modal,
  right: 0,
  bottom: 0,
  top: 0,
  left: 0,
  variants: [{
    props: ({
      ownerState: t
    }) => !t.open && t.exited,
    style: {
      visibility: "hidden"
    }
  }]
}))), vY = Ue(Mj, {
  name: "MuiModal",
  slot: "Backdrop",
  overridesResolver: (e, t) => t.backdrop
})({
  zIndex: -1
}), zj = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const i = Tn({
    name: "MuiModal",
    props: t
  }), {
    BackdropComponent: s = vY,
    BackdropProps: u,
    classes: d,
    className: p,
    closeAfterTransition: m = !1,
    children: v,
    container: y,
    component: C,
    components: w = {},
    componentsProps: R = {},
    disableAutoFocus: O = !1,
    disableEnforceFocus: E = !1,
    disableEscapeKeyDown: k = !1,
    disablePortal: L = !1,
    disableRestoreFocus: F = !1,
    disableScrollLock: _ = !1,
    hideBackdrop: P = !1,
    keepMounted: D = !1,
    onBackdropClick: z,
    onClose: K,
    onTransitionEnter: Q,
    onTransitionExited: H,
    open: I,
    slotProps: U = {},
    slots: G = {},
    // eslint-disable-next-line react/prop-types
    theme: Y,
    ...te
  } = i, B = {
    ...i,
    closeAfterTransition: m,
    disableAutoFocus: O,
    disableEnforceFocus: E,
    disableEscapeKeyDown: k,
    disablePortal: L,
    disableRestoreFocus: F,
    disableScrollLock: _,
    hideBackdrop: P,
    keepMounted: D
  }, {
    getRootProps: W,
    getBackdropProps: q,
    getTransitionProps: ne,
    portalRef: re,
    isTopModal: X,
    exited: j,
    hasTransition: ie
  } = pY({
    ...B,
    rootRef: n
  }), fe = {
    ...B,
    exited: j
  }, ce = mY(fe), me = {};
  if (v.props.tabIndex === void 0 && (me.tabIndex = "-1"), ie) {
    const {
      onEnter: Re,
      onExited: ue
    } = ne();
    me.onEnter = Re, me.onExited = ue;
  }
  const ge = {
    slots: {
      root: w.Root,
      backdrop: w.Backdrop,
      ...G
    },
    slotProps: {
      ...R,
      ...U
    }
  }, [de, pe] = vn("root", {
    ref: n,
    elementType: gY,
    externalForwardedProps: {
      ...ge,
      ...te,
      component: C
    },
    getSlotProps: W,
    ownerState: fe,
    className: nt(p, ce == null ? void 0 : ce.root, !fe.open && fe.exited && (ce == null ? void 0 : ce.hidden))
  }), [be, Ce] = vn("backdrop", {
    ref: u == null ? void 0 : u.ref,
    elementType: s,
    externalForwardedProps: ge,
    shouldForwardComponentProp: !0,
    additionalProps: u,
    getSlotProps: (Re) => q({
      ...Re,
      onClick: (ue) => {
        z && z(ue), Re != null && Re.onClick && Re.onClick(ue);
      }
    }),
    className: nt(u == null ? void 0 : u.className, ce == null ? void 0 : ce.backdrop),
    ownerState: fe
  });
  return !D && !I && (!ie || j) ? null : /* @__PURE__ */ A.jsx(iC, {
    ref: re,
    container: y,
    disablePortal: L,
    children: /* @__PURE__ */ A.jsxs(de, {
      ...pe,
      children: [!P && s ? /* @__PURE__ */ A.jsx(be, {
        ...Ce
      }) : null, /* @__PURE__ */ A.jsx(sC, {
        disableEnforceFocus: E,
        disableAutoFocus: O,
        disableRestoreFocus: F,
        isEnabled: X,
        open: I,
        children: /* @__PURE__ */ S.cloneElement(v, me)
      })]
    })
  });
});
process.env.NODE_ENV !== "production" && (zj.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A backdrop component. This prop enables custom backdrop rendering.
   * @deprecated Use `slots.backdrop` instead. While this prop currently works, it will be removed in the next major version.
   * Use the `slots.backdrop` prop to make your application ready for the next version of Material UI.
   * @default styled(Backdrop, {
   *   name: 'MuiModal',
   *   slot: 'Backdrop',
   *   overridesResolver: (props, styles) => {
   *     return styles.backdrop;
   *   },
   * })({
   *   zIndex: -1,
   * })
   */
  BackdropComponent: a.elementType,
  /**
   * Props applied to the [`Backdrop`](https://mui.com/material-ui/api/backdrop/) element.
   * @deprecated Use `slotProps.backdrop` instead.
   */
  BackdropProps: a.object,
  /**
   * A single child content element.
   */
  children: hh.isRequired,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * When set to true the Modal waits until a nested Transition is completed before closing.
   * @default false
   */
  closeAfterTransition: a.bool,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * The components used for each slot inside.
   *
   * @deprecated Use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: a.shape({
    Backdrop: a.elementType,
    Root: a.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated Use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: a.shape({
    backdrop: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object])
  }),
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: a.oneOfType([Ul, a.func]),
  /**
   * If `true`, the modal will not automatically shift focus to itself when it opens, and
   * replace it to the last focused element when it closes.
   * This also works correctly with any modal children that have the `disableAutoFocus` prop.
   *
   * Generally this should never be set to `true` as it makes the modal less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableAutoFocus: a.bool,
  /**
   * If `true`, the modal will not prevent focus from leaving the modal while open.
   *
   * Generally this should never be set to `true` as it makes the modal less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableEnforceFocus: a.bool,
  /**
   * If `true`, hitting escape will not fire the `onClose` callback.
   * @default false
   */
  disableEscapeKeyDown: a.bool,
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: a.bool,
  /**
   * If `true`, the modal will not restore focus to previously focused element once
   * modal is hidden or unmounted.
   * @default false
   */
  disableRestoreFocus: a.bool,
  /**
   * Disable the scroll lock behavior.
   * @default false
   */
  disableScrollLock: a.bool,
  /**
   * If `true`, the backdrop is not rendered.
   * @default false
   */
  hideBackdrop: a.bool,
  /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Modal.
   * @default false
   */
  keepMounted: a.bool,
  /**
   * Callback fired when the backdrop is clicked.
   * @deprecated Use the `onClose` prop with the `reason` argument to handle the `backdropClick` events.
   */
  onBackdropClick: a.func,
  /**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`.
   */
  onClose: a.func,
  /**
   * A function called when a transition enters.
   */
  onTransitionEnter: a.func,
  /**
   * A function called when a transition has exited.
   */
  onTransitionExited: a.func,
  /**
   * If `true`, the component is shown.
   */
  open: a.bool.isRequired,
  /**
   * The props used for each slot inside the Modal.
   * @default {}
   */
  slotProps: a.shape({
    backdrop: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside the Modal.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: a.shape({
    backdrop: a.elementType,
    root: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
function yY(e) {
  return yn("MuiDivider", e);
}
const UF = bn("MuiDivider", ["root", "absolute", "fullWidth", "inset", "middle", "flexItem", "light", "vertical", "withChildren", "withChildrenVertical", "textAlignRight", "textAlignLeft", "wrapper", "wrapperVertical"]), bY = (e) => {
  const {
    absolute: t,
    children: n,
    classes: i,
    flexItem: s,
    light: u,
    orientation: d,
    textAlign: p,
    variant: m
  } = e;
  return yt({
    root: ["root", t && "absolute", m, u && "light", d === "vertical" && "vertical", s && "flexItem", n && "withChildren", n && d === "vertical" && "withChildrenVertical", p === "right" && d !== "vertical" && "textAlignRight", p === "left" && d !== "vertical" && "textAlignLeft"],
    wrapper: ["wrapper", d === "vertical" && "wrapperVertical"]
  }, yY, i);
}, CY = Ue("div", {
  name: "MuiDivider",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.absolute && t.absolute, t[n.variant], n.light && t.light, n.orientation === "vertical" && t.vertical, n.flexItem && t.flexItem, n.children && t.withChildren, n.children && n.orientation === "vertical" && t.withChildrenVertical, n.textAlign === "right" && n.orientation !== "vertical" && t.textAlignRight, n.textAlign === "left" && n.orientation !== "vertical" && t.textAlignLeft];
  }
})(rn(({
  theme: e
}) => ({
  margin: 0,
  // Reset browser default style.
  flexShrink: 0,
  borderWidth: 0,
  borderStyle: "solid",
  borderColor: (e.vars || e).palette.divider,
  borderBottomWidth: "thin",
  variants: [{
    props: {
      absolute: !0
    },
    style: {
      position: "absolute",
      bottom: 0,
      left: 0,
      width: "100%"
    }
  }, {
    props: {
      light: !0
    },
    style: {
      borderColor: e.vars ? `rgba(${e.vars.palette.dividerChannel} / 0.08)` : $n(e.palette.divider, 0.08)
    }
  }, {
    props: {
      variant: "inset"
    },
    style: {
      marginLeft: 72
    }
  }, {
    props: {
      variant: "middle",
      orientation: "horizontal"
    },
    style: {
      marginLeft: e.spacing(2),
      marginRight: e.spacing(2)
    }
  }, {
    props: {
      variant: "middle",
      orientation: "vertical"
    },
    style: {
      marginTop: e.spacing(1),
      marginBottom: e.spacing(1)
    }
  }, {
    props: {
      orientation: "vertical"
    },
    style: {
      height: "100%",
      borderBottomWidth: 0,
      borderRightWidth: "thin"
    }
  }, {
    props: {
      flexItem: !0
    },
    style: {
      alignSelf: "stretch",
      height: "auto"
    }
  }, {
    props: ({
      ownerState: t
    }) => !!t.children,
    style: {
      display: "flex",
      textAlign: "center",
      border: 0,
      borderTopStyle: "solid",
      borderLeftStyle: "solid",
      "&::before, &::after": {
        content: '""',
        alignSelf: "center"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.children && t.orientation !== "vertical",
    style: {
      "&::before, &::after": {
        width: "100%",
        borderTop: `thin solid ${(e.vars || e).palette.divider}`,
        borderTopStyle: "inherit"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.orientation === "vertical" && t.children,
    style: {
      flexDirection: "column",
      "&::before, &::after": {
        height: "100%",
        borderLeft: `thin solid ${(e.vars || e).palette.divider}`,
        borderLeftStyle: "inherit"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.textAlign === "right" && t.orientation !== "vertical",
    style: {
      "&::before": {
        width: "90%"
      },
      "&::after": {
        width: "10%"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.textAlign === "left" && t.orientation !== "vertical",
    style: {
      "&::before": {
        width: "10%"
      },
      "&::after": {
        width: "90%"
      }
    }
  }]
}))), SY = Ue("span", {
  name: "MuiDivider",
  slot: "Wrapper",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.wrapper, n.orientation === "vertical" && t.wrapperVertical];
  }
})(rn(({
  theme: e
}) => ({
  display: "inline-block",
  paddingLeft: `calc(${e.spacing(1)} * 1.2)`,
  paddingRight: `calc(${e.spacing(1)} * 1.2)`,
  whiteSpace: "nowrap",
  variants: [{
    props: {
      orientation: "vertical"
    },
    style: {
      paddingTop: `calc(${e.spacing(1)} * 1.2)`,
      paddingBottom: `calc(${e.spacing(1)} * 1.2)`
    }
  }]
}))), F0 = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const i = Tn({
    props: t,
    name: "MuiDivider"
  }), {
    absolute: s = !1,
    children: u,
    className: d,
    orientation: p = "horizontal",
    component: m = u || p === "vertical" ? "div" : "hr",
    flexItem: v = !1,
    light: y = !1,
    role: C = m !== "hr" ? "separator" : void 0,
    textAlign: w = "center",
    variant: R = "fullWidth",
    ...O
  } = i, E = {
    ...i,
    absolute: s,
    component: m,
    flexItem: v,
    light: y,
    orientation: p,
    role: C,
    textAlign: w,
    variant: R
  }, k = bY(E);
  return /* @__PURE__ */ A.jsx(CY, {
    as: m,
    className: nt(k.root, d),
    role: C,
    ref: n,
    ownerState: E,
    "aria-orientation": C === "separator" && (m !== "hr" || p === "vertical") ? p : void 0,
    ...O,
    children: u ? /* @__PURE__ */ A.jsx(SY, {
      className: k.wrapper,
      ownerState: E,
      children: u
    }) : null
  });
});
F0 && (F0.muiSkipListHighlight = !0);
process.env.NODE_ENV !== "production" && (F0.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Absolutely position the element.
   * @default false
   */
  absolute: a.bool,
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * If `true`, a vertical divider will have the correct height when used in flex container.
   * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)
   * @default false
   */
  flexItem: a.bool,
  /**
   * If `true`, the divider will have a lighter color.
   * @default false
   * @deprecated Use <Divider sx={{ opacity: 0.6 }} /> (or any opacity or color) instead. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  light: a.bool,
  /**
   * The component orientation.
   * @default 'horizontal'
   */
  orientation: a.oneOf(["horizontal", "vertical"]),
  /**
   * @ignore
   */
  role: a.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The text alignment.
   * @default 'center'
   */
  textAlign: a.oneOf(["center", "left", "right"]),
  /**
   * The variant to use.
   * @default 'fullWidth'
   */
  variant: a.oneOfType([a.oneOf(["fullWidth", "inset", "middle"]), a.string])
});
const wY = (e) => {
  const {
    classes: t,
    disableUnderline: n,
    startAdornment: i,
    endAdornment: s,
    size: u,
    hiddenLabel: d,
    multiline: p
  } = e, m = {
    root: ["root", !n && "underline", i && "adornedStart", s && "adornedEnd", u === "small" && `size${Be(u)}`, d && "hiddenLabel", p && "multiline"],
    input: ["input"]
  }, v = yt(m, iK, t);
  return {
    ...t,
    // forward classes to the InputBase
    ...v
  };
}, xY = Ue(OE, {
  shouldForwardProp: (e) => Ya(e) || e === "classes",
  name: "MuiFilledInput",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [...TE(e, t), !n.disableUnderline && t.underline];
  }
})(rn(({
  theme: e
}) => {
  const t = e.palette.mode === "light", n = t ? "rgba(0, 0, 0, 0.42)" : "rgba(255, 255, 255, 0.7)", i = t ? "rgba(0, 0, 0, 0.06)" : "rgba(255, 255, 255, 0.09)", s = t ? "rgba(0, 0, 0, 0.09)" : "rgba(255, 255, 255, 0.13)", u = t ? "rgba(0, 0, 0, 0.12)" : "rgba(255, 255, 255, 0.12)";
  return {
    position: "relative",
    backgroundColor: e.vars ? e.vars.palette.FilledInput.bg : i,
    borderTopLeftRadius: (e.vars || e).shape.borderRadius,
    borderTopRightRadius: (e.vars || e).shape.borderRadius,
    transition: e.transitions.create("background-color", {
      duration: e.transitions.duration.shorter,
      easing: e.transitions.easing.easeOut
    }),
    "&:hover": {
      backgroundColor: e.vars ? e.vars.palette.FilledInput.hoverBg : s,
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: e.vars ? e.vars.palette.FilledInput.bg : i
      }
    },
    [`&.${cs.focused}`]: {
      backgroundColor: e.vars ? e.vars.palette.FilledInput.bg : i
    },
    [`&.${cs.disabled}`]: {
      backgroundColor: e.vars ? e.vars.palette.FilledInput.disabledBg : u
    },
    variants: [{
      props: ({
        ownerState: d
      }) => !d.disableUnderline,
      style: {
        "&::after": {
          left: 0,
          bottom: 0,
          content: '""',
          position: "absolute",
          right: 0,
          transform: "scaleX(0)",
          transition: e.transitions.create("transform", {
            duration: e.transitions.duration.shorter,
            easing: e.transitions.easing.easeOut
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&.${cs.focused}:after`]: {
          // translateX(0) is a workaround for Safari transform scale bug
          // See https://github.com/mui/material-ui/issues/31766
          transform: "scaleX(1) translateX(0)"
        },
        [`&.${cs.error}`]: {
          "&::before, &::after": {
            borderBottomColor: (e.vars || e).palette.error.main
          }
        },
        "&::before": {
          borderBottom: `1px solid ${e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / ${e.vars.opacity.inputUnderline})` : n}`,
          left: 0,
          bottom: 0,
          content: '"\\00a0"',
          position: "absolute",
          right: 0,
          transition: e.transitions.create("border-bottom-color", {
            duration: e.transitions.duration.shorter
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&:hover:not(.${cs.disabled}, .${cs.error}):before`]: {
          borderBottom: `1px solid ${(e.vars || e).palette.text.primary}`
        },
        [`&.${cs.disabled}:before`]: {
          borderBottomStyle: "dotted"
        }
      }
    }, ...Object.entries(e.palette).filter(to()).map(([d]) => {
      var p;
      return {
        props: {
          disableUnderline: !1,
          color: d
        },
        style: {
          "&::after": {
            borderBottom: `2px solid ${(p = (e.vars || e).palette[d]) == null ? void 0 : p.main}`
          }
        }
      };
    }), {
      props: ({
        ownerState: d
      }) => d.startAdornment,
      style: {
        paddingLeft: 12
      }
    }, {
      props: ({
        ownerState: d
      }) => d.endAdornment,
      style: {
        paddingRight: 12
      }
    }, {
      props: ({
        ownerState: d
      }) => d.multiline,
      style: {
        padding: "25px 12px 8px"
      }
    }, {
      props: ({
        ownerState: d,
        size: p
      }) => d.multiline && p === "small",
      style: {
        paddingTop: 21,
        paddingBottom: 4
      }
    }, {
      props: ({
        ownerState: d
      }) => d.multiline && d.hiddenLabel,
      style: {
        paddingTop: 16,
        paddingBottom: 17
      }
    }, {
      props: ({
        ownerState: d
      }) => d.multiline && d.hiddenLabel && d.size === "small",
      style: {
        paddingTop: 8,
        paddingBottom: 9
      }
    }]
  };
})), EY = Ue(kE, {
  name: "MuiFilledInput",
  slot: "Input",
  overridesResolver: RE
})(rn(({
  theme: e
}) => ({
  paddingTop: 25,
  paddingRight: 12,
  paddingBottom: 8,
  paddingLeft: 12,
  ...!e.vars && {
    "&:-webkit-autofill": {
      WebkitBoxShadow: e.palette.mode === "light" ? null : "0 0 0 100px #266798 inset",
      WebkitTextFillColor: e.palette.mode === "light" ? null : "#fff",
      caretColor: e.palette.mode === "light" ? null : "#fff",
      borderTopLeftRadius: "inherit",
      borderTopRightRadius: "inherit"
    }
  },
  ...e.vars && {
    "&:-webkit-autofill": {
      borderTopLeftRadius: "inherit",
      borderTopRightRadius: "inherit"
    },
    [e.getColorSchemeSelector("dark")]: {
      "&:-webkit-autofill": {
        WebkitBoxShadow: "0 0 0 100px #266798 inset",
        WebkitTextFillColor: "#fff",
        caretColor: "#fff"
      }
    }
  },
  variants: [{
    props: {
      size: "small"
    },
    style: {
      paddingTop: 21,
      paddingBottom: 4
    }
  }, {
    props: ({
      ownerState: t
    }) => t.hiddenLabel,
    style: {
      paddingTop: 16,
      paddingBottom: 17
    }
  }, {
    props: ({
      ownerState: t
    }) => t.startAdornment,
    style: {
      paddingLeft: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.endAdornment,
    style: {
      paddingRight: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.hiddenLabel && t.size === "small",
    style: {
      paddingTop: 8,
      paddingBottom: 9
    }
  }, {
    props: ({
      ownerState: t
    }) => t.multiline,
    style: {
      paddingTop: 0,
      paddingBottom: 0,
      paddingLeft: 0,
      paddingRight: 0
    }
  }]
}))), PE = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const i = Tn({
    props: t,
    name: "MuiFilledInput"
  }), {
    disableUnderline: s = !1,
    components: u = {},
    componentsProps: d,
    fullWidth: p = !1,
    hiddenLabel: m,
    // declare here to prevent spreading to DOM
    inputComponent: v = "input",
    multiline: y = !1,
    slotProps: C,
    slots: w = {},
    type: R = "text",
    ...O
  } = i, E = {
    ...i,
    disableUnderline: s,
    fullWidth: p,
    inputComponent: v,
    multiline: y,
    type: R
  }, k = wY(i), L = {
    root: {
      ownerState: E
    },
    input: {
      ownerState: E
    }
  }, F = C ?? d ? aa(L, C ?? d) : L, _ = w.root ?? u.Root ?? xY, P = w.input ?? u.Input ?? EY;
  return /* @__PURE__ */ A.jsx(vh, {
    slots: {
      root: _,
      input: P
    },
    slotProps: F,
    fullWidth: p,
    inputComponent: v,
    multiline: y,
    ref: n,
    type: R,
    ...O,
    classes: k
  });
});
process.env.NODE_ENV !== "production" && (PE.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: a.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: a.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: a.oneOfType([a.oneOf(["primary", "secondary"]), a.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: a.shape({
    Input: a.elementType,
    Root: a.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: a.shape({
    input: a.object,
    root: a.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: a.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: a.bool,
  /**
   * If `true`, the input will not have an underline.
   * @default false
   */
  disableUnderline: a.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: a.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: a.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: a.bool,
  /**
   * If `true`, the label is hidden.
   * This is used to increase density for a `FilledInput`.
   * Be sure to add `aria-label` to the `input` element.
   * @default false
   */
  hiddenLabel: a.bool,
  /**
   * The id of the `input` element.
   */
  id: a.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: a.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: a.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Ea,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: a.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: a.oneOfType([a.number, a.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: a.oneOfType([a.number, a.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: a.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: a.string,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: a.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: a.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: a.bool,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: a.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: a.oneOfType([a.number, a.string]),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: a.shape({
    input: a.object,
    root: a.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: a.shape({
    input: a.elementType,
    root: a.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: a.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: a.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: a.any
});
PE.muiName = "Input";
function TY(e) {
  return yn("MuiFormControl", e);
}
bn("MuiFormControl", ["root", "marginNone", "marginNormal", "marginDense", "fullWidth", "disabled"]);
const RY = (e) => {
  const {
    classes: t,
    margin: n,
    fullWidth: i
  } = e, s = {
    root: ["root", n !== "none" && `margin${Be(n)}`, i && "fullWidth"]
  };
  return yt(s, TY, t);
}, OY = Ue("div", {
  name: "MuiFormControl",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[`margin${Be(n.margin)}`], n.fullWidth && t.fullWidth];
  }
})({
  display: "inline-flex",
  flexDirection: "column",
  position: "relative",
  // Reset fieldset default style.
  minWidth: 0,
  padding: 0,
  margin: 0,
  border: 0,
  verticalAlign: "top",
  // Fix alignment issue on Safari.
  variants: [{
    props: {
      margin: "normal"
    },
    style: {
      marginTop: 16,
      marginBottom: 8
    }
  }, {
    props: {
      margin: "dense"
    },
    style: {
      marginTop: 8,
      marginBottom: 4
    }
  }, {
    props: {
      fullWidth: !0
    },
    style: {
      width: "100%"
    }
  }]
}), FP = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const i = Tn({
    props: t,
    name: "MuiFormControl"
  }), {
    children: s,
    className: u,
    color: d = "primary",
    component: p = "div",
    disabled: m = !1,
    error: v = !1,
    focused: y,
    fullWidth: C = !1,
    hiddenLabel: w = !1,
    margin: R = "none",
    required: O = !1,
    size: E = "medium",
    variant: k = "outlined",
    ...L
  } = i, F = {
    ...i,
    color: d,
    component: p,
    disabled: m,
    error: v,
    fullWidth: C,
    hiddenLabel: w,
    margin: R,
    required: O,
    size: E,
    variant: k
  }, _ = RY(F), [P, D] = S.useState(() => {
    let W = !1;
    return s && S.Children.forEach(s, (q) => {
      if (!SO(q, ["Input", "Select"]))
        return;
      const ne = SO(q, ["Select"]) ? q.props.input : q;
      ne && eK(ne.props) && (W = !0);
    }), W;
  }), [z, K] = S.useState(() => {
    let W = !1;
    return s && S.Children.forEach(s, (q) => {
      SO(q, ["Input", "Select"]) && (N0(q.props, !0) || N0(q.props.inputProps, !0)) && (W = !0);
    }), W;
  }), [Q, H] = S.useState(!1);
  m && Q && H(!1);
  const I = y !== void 0 && !m ? y : Q;
  let U;
  const G = S.useRef(!1);
  process.env.NODE_ENV !== "production" && (U = () => (G.current && console.error(["MUI: There are multiple `InputBase` components inside a FormControl.", "This creates visual inconsistencies, only use one `InputBase`."].join(`
`)), G.current = !0, () => {
    G.current = !1;
  }));
  const Y = S.useCallback(() => {
    K(!0);
  }, []), te = S.useCallback(() => {
    K(!1);
  }, []), B = S.useMemo(() => ({
    adornedStart: P,
    setAdornedStart: D,
    color: d,
    disabled: m,
    error: v,
    filled: z,
    focused: I,
    fullWidth: C,
    hiddenLabel: w,
    size: E,
    onBlur: () => {
      H(!1);
    },
    onFocus: () => {
      H(!0);
    },
    onEmpty: te,
    onFilled: Y,
    registerEffect: U,
    required: O,
    variant: k
  }), [P, d, m, v, z, I, C, w, U, te, Y, O, E, k]);
  return /* @__PURE__ */ A.jsx(DC.Provider, {
    value: B,
    children: /* @__PURE__ */ A.jsx(OY, {
      as: p,
      ownerState: F,
      className: nt(_.root, u),
      ref: n,
      ...L,
      children: s
    })
  });
});
process.env.NODE_ENV !== "production" && (FP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: a.oneOfType([a.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), a.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * If `true`, the label, input and helper text should be displayed in a disabled state.
   * @default false
   */
  disabled: a.bool,
  /**
   * If `true`, the label is displayed in an error state.
   * @default false
   */
  error: a.bool,
  /**
   * If `true`, the component is displayed in focused state.
   */
  focused: a.bool,
  /**
   * If `true`, the component will take up the full width of its container.
   * @default false
   */
  fullWidth: a.bool,
  /**
   * If `true`, the label is hidden.
   * This is used to increase density for a `FilledInput`.
   * Be sure to add `aria-label` to the `input` element.
   * @default false
   */
  hiddenLabel: a.bool,
  /**
   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.
   * @default 'none'
   */
  margin: a.oneOf(["dense", "none", "normal"]),
  /**
   * If `true`, the label will indicate that the `input` is required.
   * @default false
   */
  required: a.bool,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: a.oneOfType([a.oneOf(["medium", "small"]), a.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: a.oneOf(["filled", "outlined", "standard"])
});
function kY(e) {
  return yn("MuiFormControlLabel", e);
}
const $b = bn("MuiFormControlLabel", ["root", "labelPlacementStart", "labelPlacementTop", "labelPlacementBottom", "disabled", "label", "error", "required", "asterisk"]), PY = (e) => {
  const {
    classes: t,
    disabled: n,
    labelPlacement: i,
    error: s,
    required: u
  } = e, d = {
    root: ["root", n && "disabled", `labelPlacement${Be(i)}`, s && "error", u && "required"],
    label: ["label", n && "disabled"],
    asterisk: ["asterisk", s && "error"]
  };
  return yt(d, kY, t);
}, MY = Ue("label", {
  name: "MuiFormControlLabel",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [{
      [`& .${$b.label}`]: t.label
    }, t.root, t[`labelPlacement${Be(n.labelPlacement)}`]];
  }
})(rn(({
  theme: e
}) => ({
  display: "inline-flex",
  alignItems: "center",
  cursor: "pointer",
  // For correct alignment with the text.
  verticalAlign: "middle",
  WebkitTapHighlightColor: "transparent",
  marginLeft: -11,
  marginRight: 16,
  // used for row presentation of radio/checkbox
  [`&.${$b.disabled}`]: {
    cursor: "default"
  },
  [`& .${$b.label}`]: {
    [`&.${$b.disabled}`]: {
      color: (e.vars || e).palette.text.disabled
    }
  },
  variants: [{
    props: {
      labelPlacement: "start"
    },
    style: {
      flexDirection: "row-reverse",
      marginRight: -11
    }
  }, {
    props: {
      labelPlacement: "top"
    },
    style: {
      flexDirection: "column-reverse"
    }
  }, {
    props: {
      labelPlacement: "bottom"
    },
    style: {
      flexDirection: "column"
    }
  }, {
    props: ({
      labelPlacement: t
    }) => t === "start" || t === "top" || t === "bottom",
    style: {
      marginLeft: 16
      // used for row presentation of radio/checkbox
    }
  }]
}))), IY = Ue("span", {
  name: "MuiFormControlLabel",
  slot: "Asterisk",
  overridesResolver: (e, t) => t.asterisk
})(rn(({
  theme: e
}) => ({
  [`&.${$b.error}`]: {
    color: (e.vars || e).palette.error.main
  }
}))), Ek = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const i = Tn({
    props: t,
    name: "MuiFormControlLabel"
  }), {
    checked: s,
    className: u,
    componentsProps: d = {},
    control: p,
    disabled: m,
    disableTypography: v,
    inputRef: y,
    label: C,
    labelPlacement: w = "end",
    name: R,
    onChange: O,
    required: E,
    slots: k = {},
    slotProps: L = {},
    value: F,
    ..._
  } = i, P = Xc(), D = m ?? p.props.disabled ?? (P == null ? void 0 : P.disabled), z = E ?? p.props.required, K = {
    disabled: D,
    required: z
  };
  ["checked", "name", "onChange", "value", "inputRef"].forEach((B) => {
    typeof p.props[B] > "u" && typeof i[B] < "u" && (K[B] = i[B]);
  });
  const Q = gh({
    props: i,
    muiFormControl: P,
    states: ["error"]
  }), H = {
    ...i,
    disabled: D,
    labelPlacement: w,
    required: z,
    error: Q.error
  }, I = PY(H), U = {
    slots: k,
    slotProps: {
      ...d,
      ...L
    }
  }, [G, Y] = vn("typography", {
    elementType: bi,
    externalForwardedProps: U,
    ownerState: H
  });
  let te = C;
  return te != null && te.type !== bi && !v && (te = /* @__PURE__ */ A.jsx(G, {
    component: "span",
    ...Y,
    className: nt(I.label, Y == null ? void 0 : Y.className),
    children: te
  })), /* @__PURE__ */ A.jsxs(MY, {
    className: nt(I.root, u),
    ownerState: H,
    ref: n,
    ..._,
    children: [/* @__PURE__ */ S.cloneElement(p, K), z ? /* @__PURE__ */ A.jsxs("div", {
      children: [te, /* @__PURE__ */ A.jsxs(IY, {
        ownerState: H,
        "aria-hidden": !0,
        className: I.asterisk,
        children: [" ", "*"]
      })]
    }) : te]
  });
});
process.env.NODE_ENV !== "production" && (Ek.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the component appears selected.
   */
  checked: a.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The props used for each slot inside.
   * @default {}
   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  componentsProps: a.shape({
    typography: a.object
  }),
  /**
   * A control element. For instance, it can be a `Radio`, a `Switch` or a `Checkbox`.
   */
  control: a.element.isRequired,
  /**
   * If `true`, the control is disabled.
   */
  disabled: a.bool,
  /**
   * If `true`, the label is rendered as it is passed without an additional typography node.
   */
  disableTypography: a.bool,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Ea,
  /**
   * A text or an element to be used in an enclosing label element.
   */
  label: a.node,
  /**
   * The position of the label.
   * @default 'end'
   */
  labelPlacement: a.oneOf(["bottom", "end", "start", "top"]),
  /**
   * @ignore
   */
  name: a.string,
  /**
   * Callback fired when the state is changed.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: a.func,
  /**
   * If `true`, the label will indicate that the `input` is required.
   */
  required: a.bool,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    typography: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    typography: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The value of the component.
   */
  value: a.any
});
function DY(e) {
  return yn("MuiFormHelperText", e);
}
const GF = bn("MuiFormHelperText", ["root", "error", "disabled", "sizeSmall", "sizeMedium", "contained", "focused", "filled", "required"]);
var WF;
const NY = (e) => {
  const {
    classes: t,
    contained: n,
    size: i,
    disabled: s,
    error: u,
    filled: d,
    focused: p,
    required: m
  } = e, v = {
    root: ["root", s && "disabled", u && "error", i && `size${Be(i)}`, n && "contained", p && "focused", d && "filled", m && "required"]
  };
  return yt(v, DY, t);
}, LY = Ue("p", {
  name: "MuiFormHelperText",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.size && t[`size${Be(n.size)}`], n.contained && t.contained, n.filled && t.filled];
  }
})(rn(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  ...e.typography.caption,
  textAlign: "left",
  marginTop: 3,
  marginRight: 0,
  marginBottom: 0,
  marginLeft: 0,
  [`&.${GF.disabled}`]: {
    color: (e.vars || e).palette.text.disabled
  },
  [`&.${GF.error}`]: {
    color: (e.vars || e).palette.error.main
  },
  variants: [{
    props: {
      size: "small"
    },
    style: {
      marginTop: 4
    }
  }, {
    props: ({
      ownerState: t
    }) => t.contained,
    style: {
      marginLeft: 14,
      marginRight: 14
    }
  }]
}))), Hj = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const i = Tn({
    props: t,
    name: "MuiFormHelperText"
  }), {
    children: s,
    className: u,
    component: d = "p",
    disabled: p,
    error: m,
    filled: v,
    focused: y,
    margin: C,
    required: w,
    variant: R,
    ...O
  } = i, E = Xc(), k = gh({
    props: i,
    muiFormControl: E,
    states: ["variant", "size", "disabled", "error", "filled", "focused", "required"]
  }), L = {
    ...i,
    component: d,
    contained: k.variant === "filled" || k.variant === "outlined",
    variant: k.variant,
    size: k.size,
    disabled: k.disabled,
    error: k.error,
    filled: k.filled,
    focused: k.focused,
    required: k.required
  };
  delete L.ownerState;
  const F = NY(L);
  return /* @__PURE__ */ A.jsx(LY, {
    as: d,
    className: nt(F.root, u),
    ref: n,
    ...O,
    ownerState: L,
    children: s === " " ? (
      // notranslate needed while Google Translate will not fix zero-width space issue
      WF || (WF = /* @__PURE__ */ A.jsx("span", {
        className: "notranslate",
        "aria-hidden": !0,
        children: "​"
      }))
    ) : s
  });
});
process.env.NODE_ENV !== "production" && (Hj.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   *
   * If `' '` is provided, the component reserves one line height for displaying a future message.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * If `true`, the helper text should be displayed in a disabled state.
   */
  disabled: a.bool,
  /**
   * If `true`, helper text should be displayed in an error state.
   */
  error: a.bool,
  /**
   * If `true`, the helper text should use filled classes key.
   */
  filled: a.bool,
  /**
   * If `true`, the helper text should use focused classes key.
   */
  focused: a.bool,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   */
  margin: a.oneOf(["dense"]),
  /**
   * If `true`, the helper text should use required classes key.
   */
  required: a.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The variant to use.
   */
  variant: a.oneOfType([a.oneOf(["filled", "outlined", "standard"]), a.string])
});
function FY(e) {
  return yn("MuiFormLabel", e);
}
const qb = bn("MuiFormLabel", ["root", "colorSecondary", "focused", "disabled", "error", "filled", "required", "asterisk"]), _Y = (e) => {
  const {
    classes: t,
    color: n,
    focused: i,
    disabled: s,
    error: u,
    filled: d,
    required: p
  } = e, m = {
    root: ["root", `color${Be(n)}`, s && "disabled", u && "error", d && "filled", i && "focused", p && "required"],
    asterisk: ["asterisk", u && "error"]
  };
  return yt(m, FY, t);
}, AY = Ue("label", {
  name: "MuiFormLabel",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.color === "secondary" && t.colorSecondary, n.filled && t.filled];
  }
})(rn(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  ...e.typography.body1,
  lineHeight: "1.4375em",
  padding: 0,
  position: "relative",
  variants: [...Object.entries(e.palette).filter(to()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      [`&.${qb.focused}`]: {
        color: (e.vars || e).palette[t].main
      }
    }
  })), {
    props: {},
    style: {
      [`&.${qb.disabled}`]: {
        color: (e.vars || e).palette.text.disabled
      },
      [`&.${qb.error}`]: {
        color: (e.vars || e).palette.error.main
      }
    }
  }]
}))), $Y = Ue("span", {
  name: "MuiFormLabel",
  slot: "Asterisk",
  overridesResolver: (e, t) => t.asterisk
})(rn(({
  theme: e
}) => ({
  [`&.${qb.error}`]: {
    color: (e.vars || e).palette.error.main
  }
}))), Vj = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const i = Tn({
    props: t,
    name: "MuiFormLabel"
  }), {
    children: s,
    className: u,
    color: d,
    component: p = "label",
    disabled: m,
    error: v,
    filled: y,
    focused: C,
    required: w,
    ...R
  } = i, O = Xc(), E = gh({
    props: i,
    muiFormControl: O,
    states: ["color", "required", "focused", "disabled", "error", "filled"]
  }), k = {
    ...i,
    color: E.color || "primary",
    component: p,
    disabled: E.disabled,
    error: E.error,
    filled: E.filled,
    focused: E.focused,
    required: E.required
  }, L = _Y(k);
  return /* @__PURE__ */ A.jsxs(AY, {
    as: p,
    ownerState: k,
    className: nt(L.root, u),
    ref: n,
    ...R,
    children: [s, E.required && /* @__PURE__ */ A.jsxs($Y, {
      ownerState: k,
      "aria-hidden": !0,
      className: L.asterisk,
      children: [" ", "*"]
    })]
  });
});
process.env.NODE_ENV !== "production" && (Vj.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   */
  color: a.oneOfType([a.oneOf(["error", "info", "primary", "secondary", "success", "warning"]), a.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * If `true`, the label should be displayed in a disabled state.
   */
  disabled: a.bool,
  /**
   * If `true`, the label is displayed in an error state.
   */
  error: a.bool,
  /**
   * If `true`, the label should use filled classes key.
   */
  filled: a.bool,
  /**
   * If `true`, the input of this label is focused (used by `FormGroup` components).
   */
  focused: a.bool,
  /**
   * If `true`, the label will indicate that the `input` is required.
   */
  required: a.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
function Tk(e) {
  return `scale(${e}, ${e ** 2})`;
}
const jY = {
  entering: {
    opacity: 1,
    transform: Tk(1)
  },
  entered: {
    opacity: 1,
    transform: "none"
  }
}, PO = typeof navigator < "u" && /^((?!chrome|android).)*(safari|mobile)/i.test(navigator.userAgent) && /(os |version\/)15(.|_)4/i.test(navigator.userAgent), Wg = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const {
    addEndListener: i,
    appear: s = !0,
    children: u,
    easing: d,
    in: p,
    onEnter: m,
    onEntered: v,
    onEntering: y,
    onExit: C,
    onExited: w,
    onExiting: R,
    style: O,
    timeout: E = "auto",
    // eslint-disable-next-line react/prop-types
    TransitionComponent: k = Yu,
    ...L
  } = t, F = ps(), _ = S.useRef(), P = ev(), D = S.useRef(null), z = Vr(D, mh(u), n), K = (B) => (W) => {
    if (B) {
      const q = D.current;
      W === void 0 ? B(q) : B(q, W);
    }
  }, Q = K(y), H = K((B, W) => {
    cj(B);
    const {
      duration: q,
      delay: ne,
      easing: re
    } = k0({
      style: O,
      timeout: E,
      easing: d
    }, {
      mode: "enter"
    });
    let X;
    E === "auto" ? (X = P.transitions.getAutoHeightDuration(B.clientHeight), _.current = X) : X = q, B.style.transition = [P.transitions.create("opacity", {
      duration: X,
      delay: ne
    }), P.transitions.create("transform", {
      duration: PO ? X : X * 0.666,
      delay: ne,
      easing: re
    })].join(","), m && m(B, W);
  }), I = K(v), U = K(R), G = K((B) => {
    const {
      duration: W,
      delay: q,
      easing: ne
    } = k0({
      style: O,
      timeout: E,
      easing: d
    }, {
      mode: "exit"
    });
    let re;
    E === "auto" ? (re = P.transitions.getAutoHeightDuration(B.clientHeight), _.current = re) : re = W, B.style.transition = [P.transitions.create("opacity", {
      duration: re,
      delay: q
    }), P.transitions.create("transform", {
      duration: PO ? re : re * 0.666,
      delay: PO ? q : q || re * 0.333,
      easing: ne
    })].join(","), B.style.opacity = 0, B.style.transform = Tk(0.75), C && C(B);
  }), Y = K(w), te = (B) => {
    E === "auto" && F.start(_.current || 0, B), i && i(D.current, B);
  };
  return /* @__PURE__ */ A.jsx(k, {
    appear: s,
    in: p,
    nodeRef: D,
    onEnter: H,
    onEntered: I,
    onEntering: Q,
    onExit: G,
    onExited: Y,
    onExiting: U,
    addEndListener: te,
    timeout: E === "auto" ? null : E,
    ...L,
    children: (B, {
      ownerState: W,
      ...q
    }) => /* @__PURE__ */ S.cloneElement(u, {
      style: {
        opacity: 0,
        transform: Tk(0.75),
        visibility: B === "exited" && !p ? "hidden" : void 0,
        ...jY[B],
        ...O,
        ...u.props.style
      },
      ref: z,
      ...q
    })
  });
});
process.env.NODE_ENV !== "production" && (Wg.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: a.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: a.bool,
  /**
   * A single child content element.
   */
  children: hh.isRequired,
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   */
  easing: a.oneOfType([a.shape({
    enter: a.string,
    exit: a.string
  }), a.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: a.bool,
  /**
   * @ignore
   */
  onEnter: a.func,
  /**
   * @ignore
   */
  onEntered: a.func,
  /**
   * @ignore
   */
  onEntering: a.func,
  /**
   * @ignore
   */
  onExit: a.func,
  /**
   * @ignore
   */
  onExited: a.func,
  /**
   * @ignore
   */
  onExiting: a.func,
  /**
   * @ignore
   */
  style: a.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   *
   * Set to 'auto' to automatically calculate transition time based on height.
   * @default 'auto'
   */
  timeout: a.oneOfType([a.oneOf(["auto"]), a.number, a.shape({
    appear: a.number,
    enter: a.number,
    exit: a.number
  })])
});
Wg && (Wg.muiSupportAuto = !0);
const zY = (e) => {
  const {
    classes: t,
    disableUnderline: n
  } = e, s = yt({
    root: ["root", !n && "underline"],
    input: ["input"]
  }, rK, t);
  return {
    ...t,
    // forward classes to the InputBase
    ...s
  };
}, HY = Ue(OE, {
  shouldForwardProp: (e) => Ya(e) || e === "classes",
  name: "MuiInput",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [...TE(e, t), !n.disableUnderline && t.underline];
  }
})(rn(({
  theme: e
}) => {
  let n = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.42)" : "rgba(255, 255, 255, 0.7)";
  return e.vars && (n = `rgba(${e.vars.palette.common.onBackgroundChannel} / ${e.vars.opacity.inputUnderline})`), {
    position: "relative",
    variants: [{
      props: ({
        ownerState: i
      }) => i.formControl,
      style: {
        "label + &": {
          marginTop: 16
        }
      }
    }, {
      props: ({
        ownerState: i
      }) => !i.disableUnderline,
      style: {
        "&::after": {
          left: 0,
          bottom: 0,
          content: '""',
          position: "absolute",
          right: 0,
          transform: "scaleX(0)",
          transition: e.transitions.create("transform", {
            duration: e.transitions.duration.shorter,
            easing: e.transitions.easing.easeOut
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&.${rf.focused}:after`]: {
          // translateX(0) is a workaround for Safari transform scale bug
          // See https://github.com/mui/material-ui/issues/31766
          transform: "scaleX(1) translateX(0)"
        },
        [`&.${rf.error}`]: {
          "&::before, &::after": {
            borderBottomColor: (e.vars || e).palette.error.main
          }
        },
        "&::before": {
          borderBottom: `1px solid ${n}`,
          left: 0,
          bottom: 0,
          content: '"\\00a0"',
          position: "absolute",
          right: 0,
          transition: e.transitions.create("border-bottom-color", {
            duration: e.transitions.duration.shorter
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&:hover:not(.${rf.disabled}, .${rf.error}):before`]: {
          borderBottom: `2px solid ${(e.vars || e).palette.text.primary}`,
          // Reset on touch devices, it doesn't add specificity
          "@media (hover: none)": {
            borderBottom: `1px solid ${n}`
          }
        },
        [`&.${rf.disabled}:before`]: {
          borderBottomStyle: "dotted"
        }
      }
    }, ...Object.entries(e.palette).filter(to()).map(([i]) => ({
      props: {
        color: i,
        disableUnderline: !1
      },
      style: {
        "&::after": {
          borderBottom: `2px solid ${(e.vars || e).palette[i].main}`
        }
      }
    }))]
  };
})), VY = Ue(kE, {
  name: "MuiInput",
  slot: "Input",
  overridesResolver: RE
})({}), ME = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const i = Tn({
    props: t,
    name: "MuiInput"
  }), {
    disableUnderline: s = !1,
    components: u = {},
    componentsProps: d,
    fullWidth: p = !1,
    inputComponent: m = "input",
    multiline: v = !1,
    slotProps: y,
    slots: C = {},
    type: w = "text",
    ...R
  } = i, O = zY(i), k = {
    root: {
      ownerState: {
        disableUnderline: s
      }
    }
  }, L = y ?? d ? aa(y ?? d, k) : k, F = C.root ?? u.Root ?? HY, _ = C.input ?? u.Input ?? VY;
  return /* @__PURE__ */ A.jsx(vh, {
    slots: {
      root: F,
      input: _
    },
    slotProps: L,
    fullWidth: p,
    inputComponent: m,
    multiline: v,
    ref: n,
    type: w,
    ...R,
    classes: O
  });
});
process.env.NODE_ENV !== "production" && (ME.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: a.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: a.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: a.oneOfType([a.oneOf(["primary", "secondary"]), a.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: a.shape({
    Input: a.elementType,
    Root: a.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: a.shape({
    input: a.object,
    root: a.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: a.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: a.bool,
  /**
   * If `true`, the `input` will not have an underline.
   * @default false
   */
  disableUnderline: a.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: a.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: a.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: a.bool,
  /**
   * The id of the `input` element.
   */
  id: a.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: a.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: a.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Ea,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: a.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: a.oneOfType([a.number, a.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: a.oneOfType([a.number, a.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: a.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: a.string,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: a.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: a.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: a.bool,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: a.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: a.oneOfType([a.number, a.string]),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: a.shape({
    input: a.object,
    root: a.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: a.shape({
    input: a.elementType,
    root: a.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: a.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: a.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: a.any
});
ME.muiName = "Input";
function BY(e) {
  return yn("MuiInputAdornment", e);
}
const qF = bn("MuiInputAdornment", ["root", "filled", "standard", "outlined", "positionStart", "positionEnd", "disablePointerEvents", "hiddenLabel", "sizeSmall"]);
var KF;
const UY = (e, t) => {
  const {
    ownerState: n
  } = e;
  return [t.root, t[`position${Be(n.position)}`], n.disablePointerEvents === !0 && t.disablePointerEvents, t[n.variant]];
}, GY = (e) => {
  const {
    classes: t,
    disablePointerEvents: n,
    hiddenLabel: i,
    position: s,
    size: u,
    variant: d
  } = e, p = {
    root: ["root", n && "disablePointerEvents", s && `position${Be(s)}`, d, i && "hiddenLabel", u && `size${Be(u)}`]
  };
  return yt(p, BY, t);
}, WY = Ue("div", {
  name: "MuiInputAdornment",
  slot: "Root",
  overridesResolver: UY
})(rn(({
  theme: e
}) => ({
  display: "flex",
  maxHeight: "2em",
  alignItems: "center",
  whiteSpace: "nowrap",
  color: (e.vars || e).palette.action.active,
  variants: [{
    props: {
      variant: "filled"
    },
    style: {
      [`&.${qF.positionStart}&:not(.${qF.hiddenLabel})`]: {
        marginTop: 16
      }
    }
  }, {
    props: {
      position: "start"
    },
    style: {
      marginRight: 8
    }
  }, {
    props: {
      position: "end"
    },
    style: {
      marginLeft: 8
    }
  }, {
    props: {
      disablePointerEvents: !0
    },
    style: {
      pointerEvents: "none"
    }
  }]
}))), Bj = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const i = Tn({
    props: t,
    name: "MuiInputAdornment"
  }), {
    children: s,
    className: u,
    component: d = "div",
    disablePointerEvents: p = !1,
    disableTypography: m = !1,
    position: v,
    variant: y,
    ...C
  } = i, w = Xc() || {};
  let R = y;
  y && w.variant && process.env.NODE_ENV !== "production" && y === w.variant && console.error("MUI: The `InputAdornment` variant infers the variant prop you do not have to provide one."), w && !R && (R = w.variant);
  const O = {
    ...i,
    hiddenLabel: w.hiddenLabel,
    size: w.size,
    disablePointerEvents: p,
    position: v,
    variant: R
  }, E = GY(O);
  return /* @__PURE__ */ A.jsx(DC.Provider, {
    value: null,
    children: /* @__PURE__ */ A.jsx(WY, {
      as: d,
      ownerState: O,
      className: nt(E.root, u),
      ref: n,
      ...C,
      children: typeof s == "string" && !m ? /* @__PURE__ */ A.jsx(bi, {
        color: "textSecondary",
        children: s
      }) : /* @__PURE__ */ A.jsxs(S.Fragment, {
        children: [v === "start" ? (
          /* notranslate needed while Google Translate will not fix zero-width space issue */
          KF || (KF = /* @__PURE__ */ A.jsx("span", {
            className: "notranslate",
            "aria-hidden": !0,
            children: "​"
          }))
        ) : null, s]
      })
    })
  });
});
process.env.NODE_ENV !== "production" && (Bj.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component, normally an `IconButton` or string.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * Disable pointer events on the root.
   * This allows for the content of the adornment to focus the `input` on click.
   * @default false
   */
  disablePointerEvents: a.bool,
  /**
   * If children is a string then disable wrapping in a Typography component.
   * @default false
   */
  disableTypography: a.bool,
  /**
   * The position this adornment should appear relative to the `Input`.
   */
  position: a.oneOf(["end", "start"]).isRequired,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The variant to use.
   * Note: If you are using the `TextField` component or the `FormControl` component
   * you do not have to set this manually.
   */
  variant: a.oneOf(["filled", "outlined", "standard"])
});
function qY(e) {
  return yn("MuiInputLabel", e);
}
bn("MuiInputLabel", ["root", "focused", "disabled", "error", "required", "asterisk", "formControl", "sizeSmall", "shrink", "animated", "standard", "filled", "outlined"]);
const KY = (e) => {
  const {
    classes: t,
    formControl: n,
    size: i,
    shrink: s,
    disableAnimation: u,
    variant: d,
    required: p
  } = e, m = {
    root: ["root", n && "formControl", !u && "animated", s && "shrink", i && i !== "normal" && `size${Be(i)}`, d],
    asterisk: [p && "asterisk"]
  }, v = yt(m, qY, t);
  return {
    ...t,
    // forward the focused, disabled, etc. classes to the FormLabel
    ...v
  };
}, YY = Ue(Vj, {
  shouldForwardProp: (e) => Ya(e) || e === "classes",
  name: "MuiInputLabel",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [{
      [`& .${qb.asterisk}`]: t.asterisk
    }, t.root, n.formControl && t.formControl, n.size === "small" && t.sizeSmall, n.shrink && t.shrink, !n.disableAnimation && t.animated, n.focused && t.focused, t[n.variant]];
  }
})(rn(({
  theme: e
}) => ({
  display: "block",
  transformOrigin: "top left",
  whiteSpace: "nowrap",
  overflow: "hidden",
  textOverflow: "ellipsis",
  maxWidth: "100%",
  variants: [{
    props: ({
      ownerState: t
    }) => t.formControl,
    style: {
      position: "absolute",
      left: 0,
      top: 0,
      // slight alteration to spec spacing to match visual spec result
      transform: "translate(0, 20px) scale(1)"
    }
  }, {
    props: {
      size: "small"
    },
    style: {
      // Compensation for the `Input.inputSizeSmall` style.
      transform: "translate(0, 17px) scale(1)"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.shrink,
    style: {
      transform: "translate(0, -1.5px) scale(0.75)",
      transformOrigin: "top left",
      maxWidth: "133%"
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.disableAnimation,
    style: {
      transition: e.transitions.create(["color", "transform", "max-width"], {
        duration: e.transitions.duration.shorter,
        easing: e.transitions.easing.easeOut
      })
    }
  }, {
    props: {
      variant: "filled"
    },
    style: {
      // Chrome's autofill feature gives the input field a yellow background.
      // Since the input field is behind the label in the HTML tree,
      // the input field is drawn last and hides the label with an opaque background color.
      // zIndex: 1 will raise the label above opaque background-colors of input.
      zIndex: 1,
      pointerEvents: "none",
      transform: "translate(12px, 16px) scale(1)",
      maxWidth: "calc(100% - 24px)"
    }
  }, {
    props: {
      variant: "filled",
      size: "small"
    },
    style: {
      transform: "translate(12px, 13px) scale(1)"
    }
  }, {
    props: ({
      variant: t,
      ownerState: n
    }) => t === "filled" && n.shrink,
    style: {
      userSelect: "none",
      pointerEvents: "auto",
      transform: "translate(12px, 7px) scale(0.75)",
      maxWidth: "calc(133% - 24px)"
    }
  }, {
    props: ({
      variant: t,
      ownerState: n,
      size: i
    }) => t === "filled" && n.shrink && i === "small",
    style: {
      transform: "translate(12px, 4px) scale(0.75)"
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      // see comment above on filled.zIndex
      zIndex: 1,
      pointerEvents: "none",
      transform: "translate(14px, 16px) scale(1)",
      maxWidth: "calc(100% - 24px)"
    }
  }, {
    props: {
      variant: "outlined",
      size: "small"
    },
    style: {
      transform: "translate(14px, 9px) scale(1)"
    }
  }, {
    props: ({
      variant: t,
      ownerState: n
    }) => t === "outlined" && n.shrink,
    style: {
      userSelect: "none",
      pointerEvents: "auto",
      // Theoretically, we should have (8+5)*2/0.75 = 34px
      // but it feels a better when it bleeds a bit on the left, so 32px.
      maxWidth: "calc(133% - 32px)",
      transform: "translate(14px, -9px) scale(0.75)"
    }
  }]
}))), _P = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const i = Tn({
    name: "MuiInputLabel",
    props: t
  }), {
    disableAnimation: s = !1,
    margin: u,
    shrink: d,
    variant: p,
    className: m,
    ...v
  } = i, y = Xc();
  let C = d;
  typeof C > "u" && y && (C = y.filled || y.focused || y.adornedStart);
  const w = gh({
    props: i,
    muiFormControl: y,
    states: ["size", "variant", "required", "focused"]
  }), R = {
    ...i,
    disableAnimation: s,
    formControl: y,
    shrink: C,
    size: w.size,
    variant: w.variant,
    required: w.required,
    focused: w.focused
  }, O = KY(R);
  return /* @__PURE__ */ A.jsx(YY, {
    "data-shrink": C,
    ref: n,
    className: nt(O.root, m),
    ...v,
    ownerState: R,
    classes: O
  });
});
process.env.NODE_ENV !== "production" && (_P.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   */
  color: a.oneOfType([a.oneOf(["error", "info", "primary", "secondary", "success", "warning"]), a.string]),
  /**
   * If `true`, the transition animation is disabled.
   * @default false
   */
  disableAnimation: a.bool,
  /**
   * If `true`, the component is disabled.
   */
  disabled: a.bool,
  /**
   * If `true`, the label is displayed in an error state.
   */
  error: a.bool,
  /**
   * If `true`, the `input` of this label is focused.
   */
  focused: a.bool,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   */
  margin: a.oneOf(["dense"]),
  /**
   * if `true`, the label will indicate that the `input` is required.
   */
  required: a.bool,
  /**
   * If `true`, the label is shrunk.
   */
  shrink: a.bool,
  /**
   * The size of the component.
   * @default 'normal'
   */
  size: a.oneOfType([a.oneOf(["normal", "small"]), a.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The variant to use.
   */
  variant: a.oneOf(["filled", "outlined", "standard"])
});
function XY(e) {
  return yn("MuiLinearProgress", e);
}
bn("MuiLinearProgress", ["root", "colorPrimary", "colorSecondary", "determinate", "indeterminate", "buffer", "query", "dashed", "dashedColorPrimary", "dashedColorSecondary", "bar", "bar1", "bar2", "barColorPrimary", "barColorSecondary", "bar1Indeterminate", "bar1Determinate", "bar1Buffer", "bar2Indeterminate", "bar2Buffer"]);
const Rk = 4, Ok = Ku`
  0% {
    left: -35%;
    right: 100%;
  }

  60% {
    left: 100%;
    right: -90%;
  }

  100% {
    left: 100%;
    right: -90%;
  }
`, QY = typeof Ok != "string" ? wf`
        animation: ${Ok} 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite;
      ` : null, kk = Ku`
  0% {
    left: -200%;
    right: 100%;
  }

  60% {
    left: 107%;
    right: -8%;
  }

  100% {
    left: 107%;
    right: -8%;
  }
`, JY = typeof kk != "string" ? wf`
        animation: ${kk} 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite;
      ` : null, Pk = Ku`
  0% {
    opacity: 1;
    background-position: 0 -23px;
  }

  60% {
    opacity: 0;
    background-position: 0 -23px;
  }

  100% {
    opacity: 1;
    background-position: -200px -23px;
  }
`, ZY = typeof Pk != "string" ? wf`
        animation: ${Pk} 3s infinite linear;
      ` : null, eX = (e) => {
  const {
    classes: t,
    variant: n,
    color: i
  } = e, s = {
    root: ["root", `color${Be(i)}`, n],
    dashed: ["dashed", `dashedColor${Be(i)}`],
    bar1: ["bar", "bar1", `barColor${Be(i)}`, (n === "indeterminate" || n === "query") && "bar1Indeterminate", n === "determinate" && "bar1Determinate", n === "buffer" && "bar1Buffer"],
    bar2: ["bar", "bar2", n !== "buffer" && `barColor${Be(i)}`, n === "buffer" && `color${Be(i)}`, (n === "indeterminate" || n === "query") && "bar2Indeterminate", n === "buffer" && "bar2Buffer"]
  };
  return yt(s, XY, t);
}, AP = (e, t) => e.vars ? e.vars.palette.LinearProgress[`${t}Bg`] : e.palette.mode === "light" ? bf(e.palette[t].main, 0.62) : yf(e.palette[t].main, 0.5), tX = Ue("span", {
  name: "MuiLinearProgress",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[`color${Be(n.color)}`], t[n.variant]];
  }
})(rn(({
  theme: e
}) => ({
  position: "relative",
  overflow: "hidden",
  display: "block",
  height: 4,
  // Fix Safari's bug during composition of different paint.
  zIndex: 0,
  "@media print": {
    colorAdjust: "exact"
  },
  variants: [...Object.entries(e.palette).filter(to()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      backgroundColor: AP(e, t)
    }
  })), {
    props: ({
      ownerState: t
    }) => t.color === "inherit" && t.variant !== "buffer",
    style: {
      "&::before": {
        content: '""',
        position: "absolute",
        left: 0,
        top: 0,
        right: 0,
        bottom: 0,
        backgroundColor: "currentColor",
        opacity: 0.3
      }
    }
  }, {
    props: {
      variant: "buffer"
    },
    style: {
      backgroundColor: "transparent"
    }
  }, {
    props: {
      variant: "query"
    },
    style: {
      transform: "rotate(180deg)"
    }
  }]
}))), nX = Ue("span", {
  name: "MuiLinearProgress",
  slot: "Dashed",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.dashed, t[`dashedColor${Be(n.color)}`]];
  }
})(rn(({
  theme: e
}) => ({
  position: "absolute",
  marginTop: 0,
  height: "100%",
  width: "100%",
  backgroundSize: "10px 10px",
  backgroundPosition: "0 -23px",
  variants: [{
    props: {
      color: "inherit"
    },
    style: {
      opacity: 0.3,
      backgroundImage: "radial-gradient(currentColor 0%, currentColor 16%, transparent 42%)"
    }
  }, ...Object.entries(e.palette).filter(to()).map(([t]) => {
    const n = AP(e, t);
    return {
      props: {
        color: t
      },
      style: {
        backgroundImage: `radial-gradient(${n} 0%, ${n} 16%, transparent 42%)`
      }
    };
  })]
})), ZY || {
  // At runtime for Pigment CSS, `bufferAnimation` will be null and the generated keyframe will be used.
  animation: `${Pk} 3s infinite linear`
}), rX = Ue("span", {
  name: "MuiLinearProgress",
  slot: "Bar1",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.bar, t.bar1, t[`barColor${Be(n.color)}`], (n.variant === "indeterminate" || n.variant === "query") && t.bar1Indeterminate, n.variant === "determinate" && t.bar1Determinate, n.variant === "buffer" && t.bar1Buffer];
  }
})(rn(({
  theme: e
}) => ({
  width: "100%",
  position: "absolute",
  left: 0,
  bottom: 0,
  top: 0,
  transition: "transform 0.2s linear",
  transformOrigin: "left",
  variants: [{
    props: {
      color: "inherit"
    },
    style: {
      backgroundColor: "currentColor"
    }
  }, ...Object.entries(e.palette).filter(to()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      backgroundColor: (e.vars || e).palette[t].main
    }
  })), {
    props: {
      variant: "determinate"
    },
    style: {
      transition: `transform .${Rk}s linear`
    }
  }, {
    props: {
      variant: "buffer"
    },
    style: {
      zIndex: 1,
      transition: `transform .${Rk}s linear`
    }
  }, {
    props: ({
      ownerState: t
    }) => t.variant === "indeterminate" || t.variant === "query",
    style: {
      width: "auto"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.variant === "indeterminate" || t.variant === "query",
    style: QY || {
      animation: `${Ok} 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite`
    }
  }]
}))), oX = Ue("span", {
  name: "MuiLinearProgress",
  slot: "Bar2",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.bar, t.bar2, t[`barColor${Be(n.color)}`], (n.variant === "indeterminate" || n.variant === "query") && t.bar2Indeterminate, n.variant === "buffer" && t.bar2Buffer];
  }
})(rn(({
  theme: e
}) => ({
  width: "100%",
  position: "absolute",
  left: 0,
  bottom: 0,
  top: 0,
  transition: "transform 0.2s linear",
  transformOrigin: "left",
  variants: [...Object.entries(e.palette).filter(to()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      "--LinearProgressBar2-barColor": (e.vars || e).palette[t].main
    }
  })), {
    props: ({
      ownerState: t
    }) => t.variant !== "buffer" && t.color !== "inherit",
    style: {
      backgroundColor: "var(--LinearProgressBar2-barColor, currentColor)"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.variant !== "buffer" && t.color === "inherit",
    style: {
      backgroundColor: "currentColor"
    }
  }, {
    props: {
      color: "inherit"
    },
    style: {
      opacity: 0.3
    }
  }, ...Object.entries(e.palette).filter(to()).map(([t]) => ({
    props: {
      color: t,
      variant: "buffer"
    },
    style: {
      backgroundColor: AP(e, t),
      transition: `transform .${Rk}s linear`
    }
  })), {
    props: ({
      ownerState: t
    }) => t.variant === "indeterminate" || t.variant === "query",
    style: {
      width: "auto"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.variant === "indeterminate" || t.variant === "query",
    style: JY || {
      animation: `${kk} 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite`
    }
  }]
}))), Uj = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const i = Tn({
    props: t,
    name: "MuiLinearProgress"
  }), {
    className: s,
    color: u = "primary",
    value: d,
    valueBuffer: p,
    variant: m = "indeterminate",
    ...v
  } = i, y = {
    ...i,
    color: u,
    variant: m
  }, C = eX(y), w = ji(), R = {}, O = {
    bar1: {},
    bar2: {}
  };
  if (m === "determinate" || m === "buffer")
    if (d !== void 0) {
      R["aria-valuenow"] = Math.round(d), R["aria-valuemin"] = 0, R["aria-valuemax"] = 100;
      let E = d - 100;
      w && (E = -E), O.bar1.transform = `translateX(${E}%)`;
    } else process.env.NODE_ENV !== "production" && console.error("MUI: You need to provide a value prop when using the determinate or buffer variant of LinearProgress .");
  if (m === "buffer")
    if (p !== void 0) {
      let E = (p || 0) - 100;
      w && (E = -E), O.bar2.transform = `translateX(${E}%)`;
    } else process.env.NODE_ENV !== "production" && console.error("MUI: You need to provide a valueBuffer prop when using the buffer variant of LinearProgress.");
  return /* @__PURE__ */ A.jsxs(tX, {
    className: nt(C.root, s),
    ownerState: y,
    role: "progressbar",
    ...R,
    ref: n,
    ...v,
    children: [m === "buffer" ? /* @__PURE__ */ A.jsx(nX, {
      className: C.dashed,
      ownerState: y
    }) : null, /* @__PURE__ */ A.jsx(rX, {
      className: C.bar1,
      ownerState: y,
      style: O.bar1
    }), m === "determinate" ? null : /* @__PURE__ */ A.jsx(oX, {
      className: C.bar2,
      ownerState: y,
      style: O.bar2
    })]
  });
});
process.env.NODE_ENV !== "production" && (Uj.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: a.oneOfType([a.oneOf(["inherit", "primary", "secondary"]), a.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The value of the progress indicator for the determinate and buffer variants.
   * Value between 0 and 100.
   */
  value: a.number,
  /**
   * The value for the buffer variant.
   * Value between 0 and 100.
   */
  valueBuffer: a.number,
  /**
   * The variant to use.
   * Use indeterminate or query when there is no progress value.
   * @default 'indeterminate'
   */
  variant: a.oneOf(["buffer", "determinate", "indeterminate", "query"])
});
const qg = /* @__PURE__ */ S.createContext({});
process.env.NODE_ENV !== "production" && (qg.displayName = "ListContext");
function iX(e) {
  return yn("MuiList", e);
}
bn("MuiList", ["root", "padding", "dense", "subheader"]);
const aX = (e) => {
  const {
    classes: t,
    disablePadding: n,
    dense: i,
    subheader: s
  } = e;
  return yt({
    root: ["root", !n && "padding", i && "dense", s && "subheader"]
  }, iX, t);
}, sX = Ue("ul", {
  name: "MuiList",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, !n.disablePadding && t.padding, n.dense && t.dense, n.subheader && t.subheader];
  }
})({
  listStyle: "none",
  margin: 0,
  padding: 0,
  position: "relative",
  variants: [{
    props: ({
      ownerState: e
    }) => !e.disablePadding,
    style: {
      paddingTop: 8,
      paddingBottom: 8
    }
  }, {
    props: ({
      ownerState: e
    }) => e.subheader,
    style: {
      paddingTop: 0
    }
  }]
}), Gj = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const i = Tn({
    props: t,
    name: "MuiList"
  }), {
    children: s,
    className: u,
    component: d = "ul",
    dense: p = !1,
    disablePadding: m = !1,
    subheader: v,
    ...y
  } = i, C = S.useMemo(() => ({
    dense: p
  }), [p]), w = {
    ...i,
    component: d,
    dense: p,
    disablePadding: m
  }, R = aX(w);
  return /* @__PURE__ */ A.jsx(qg.Provider, {
    value: C,
    children: /* @__PURE__ */ A.jsxs(sX, {
      as: d,
      className: nt(R.root, u),
      ref: n,
      ownerState: w,
      ...y,
      children: [v, s]
    })
  });
});
process.env.NODE_ENV !== "production" && (Gj.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * If `true`, compact vertical padding designed for keyboard and mouse input is used for
   * the list and list items.
   * The prop is available to descendant components as the `dense` context.
   * @default false
   */
  dense: a.bool,
  /**
   * If `true`, vertical padding is removed from the list.
   * @default false
   */
  disablePadding: a.bool,
  /**
   * The content of the subheader, normally `ListSubheader`.
   */
  subheader: a.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
function lX(e) {
  return yn("MuiListItemIcon", e);
}
const YF = bn("MuiListItemIcon", ["root", "alignItemsFlexStart"]), uX = (e) => {
  const {
    alignItems: t,
    classes: n
  } = e;
  return yt({
    root: ["root", t === "flex-start" && "alignItemsFlexStart"]
  }, lX, n);
}, cX = Ue("div", {
  name: "MuiListItemIcon",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.alignItems === "flex-start" && t.alignItemsFlexStart];
  }
})(rn(({
  theme: e
}) => ({
  minWidth: 56,
  color: (e.vars || e).palette.action.active,
  flexShrink: 0,
  display: "inline-flex",
  variants: [{
    props: {
      alignItems: "flex-start"
    },
    style: {
      marginTop: 8
    }
  }]
}))), ah = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const i = Tn({
    props: t,
    name: "MuiListItemIcon"
  }), {
    className: s,
    ...u
  } = i, d = S.useContext(qg), p = {
    ...i,
    alignItems: d.alignItems
  }, m = uX(p);
  return /* @__PURE__ */ A.jsx(cX, {
    className: nt(m.root, s),
    ownerState: p,
    ref: n,
    ...u
  });
});
process.env.NODE_ENV !== "production" && (ah.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component, normally `Icon`, `SvgIcon`,
   * or a `@mui/icons-material` SVG icon element.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
function dX(e) {
  return yn("MuiListItemText", e);
}
const wg = bn("MuiListItemText", ["root", "multiline", "dense", "inset", "primary", "secondary"]), fX = (e) => {
  const {
    classes: t,
    inset: n,
    primary: i,
    secondary: s,
    dense: u
  } = e;
  return yt({
    root: ["root", n && "inset", u && "dense", i && s && "multiline"],
    primary: ["primary"],
    secondary: ["secondary"]
  }, dX, t);
}, pX = Ue("div", {
  name: "MuiListItemText",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [{
      [`& .${wg.primary}`]: t.primary
    }, {
      [`& .${wg.secondary}`]: t.secondary
    }, t.root, n.inset && t.inset, n.primary && n.secondary && t.multiline, n.dense && t.dense];
  }
})({
  flex: "1 1 auto",
  minWidth: 0,
  marginTop: 4,
  marginBottom: 4,
  [`.${gF.root}:where(& .${wg.primary})`]: {
    display: "block"
  },
  [`.${gF.root}:where(& .${wg.secondary})`]: {
    display: "block"
  },
  variants: [{
    props: ({
      ownerState: e
    }) => e.primary && e.secondary,
    style: {
      marginTop: 6,
      marginBottom: 6
    }
  }, {
    props: ({
      ownerState: e
    }) => e.inset,
    style: {
      paddingLeft: 56
    }
  }]
}), sh = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const i = Tn({
    props: t,
    name: "MuiListItemText"
  }), {
    children: s,
    className: u,
    disableTypography: d = !1,
    inset: p = !1,
    primary: m,
    primaryTypographyProps: v,
    secondary: y,
    secondaryTypographyProps: C,
    slots: w = {},
    slotProps: R = {},
    ...O
  } = i, {
    dense: E
  } = S.useContext(qg);
  let k = m ?? s, L = y;
  const F = {
    ...i,
    disableTypography: d,
    inset: p,
    primary: !!k,
    secondary: !!L,
    dense: E
  }, _ = fX(F), P = {
    slots: w,
    slotProps: {
      primary: v,
      secondary: C,
      ...R
    }
  }, [D, z] = vn("root", {
    className: nt(_.root, u),
    elementType: pX,
    externalForwardedProps: {
      ...P,
      ...O
    },
    ownerState: F,
    ref: n
  }), [K, Q] = vn("primary", {
    className: _.primary,
    elementType: bi,
    externalForwardedProps: P,
    ownerState: F
  }), [H, I] = vn("secondary", {
    className: _.secondary,
    elementType: bi,
    externalForwardedProps: P,
    ownerState: F
  });
  return k != null && k.type !== bi && !d && (k = /* @__PURE__ */ A.jsx(K, {
    variant: E ? "body2" : "body1",
    component: Q != null && Q.variant ? void 0 : "span",
    ...Q,
    children: k
  })), L != null && L.type !== bi && !d && (L = /* @__PURE__ */ A.jsx(H, {
    variant: "body2",
    color: "textSecondary",
    ...I,
    children: L
  })), /* @__PURE__ */ A.jsxs(D, {
    ...z,
    children: [k, L]
  });
});
process.env.NODE_ENV !== "production" && (sh.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Alias for the `primary` prop.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * If `true`, the children won't be wrapped by a Typography component.
   * This can be useful to render an alternative Typography variant by wrapping
   * the `children` (or `primary`) text, and optional `secondary` text
   * with the Typography component.
   * @default false
   */
  disableTypography: a.bool,
  /**
   * If `true`, the children are indented.
   * This should be used if there is no left avatar or left icon.
   * @default false
   */
  inset: a.bool,
  /**
   * The main content element.
   */
  primary: a.node,
  /**
   * These props will be forwarded to the primary typography component
   * (as long as disableTypography is not `true`).
   * @deprecated Use `slotProps.primary` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  primaryTypographyProps: a.object,
  /**
   * The secondary content element.
   */
  secondary: a.node,
  /**
   * These props will be forwarded to the secondary typography component
   * (as long as disableTypography is not `true`).
   * @deprecated Use `slotProps.secondary` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  secondaryTypographyProps: a.object,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    primary: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object]),
    secondary: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    primary: a.elementType,
    root: a.elementType,
    secondary: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
function MO(e, t, n) {
  return e === t ? e.firstChild : t && t.nextElementSibling ? t.nextElementSibling : n ? null : e.firstChild;
}
function XF(e, t, n) {
  return e === t ? n ? e.firstChild : e.lastChild : t && t.previousElementSibling ? t.previousElementSibling : n ? null : e.lastChild;
}
function Wj(e, t) {
  if (t === void 0)
    return !0;
  let n = e.innerText;
  return n === void 0 && (n = e.textContent), n = n.trim().toLowerCase(), n.length === 0 ? !1 : t.repeating ? n[0] === t.keys[0] : n.startsWith(t.keys.join(""));
}
function Eb(e, t, n, i, s, u) {
  let d = !1, p = s(e, t, t ? n : !1);
  for (; p; ) {
    if (p === e.firstChild) {
      if (d)
        return !1;
      d = !0;
    }
    const m = i ? !1 : p.disabled || p.getAttribute("aria-disabled") === "true";
    if (!p.hasAttribute("tabindex") || !Wj(p, u) || m)
      p = s(e, p, n);
    else
      return p.focus(), !0;
  }
  return !1;
}
const NC = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const {
    // private
    // eslint-disable-next-line react/prop-types
    actions: i,
    autoFocus: s = !1,
    autoFocusItem: u = !1,
    children: d,
    className: p,
    disabledItemsFocusable: m = !1,
    disableListWrap: v = !1,
    onKeyDown: y,
    variant: C = "selectedMenu",
    ...w
  } = t, R = S.useRef(null), O = S.useRef({
    keys: [],
    repeating: !0,
    previousKeyMatched: !0,
    lastTime: null
  });
  Fr(() => {
    s && R.current.focus();
  }, [s]), S.useImperativeHandle(i, () => ({
    adjustStyleForScrollbar: (_, {
      direction: P
    }) => {
      const D = !R.current.style.width;
      if (_.clientHeight < R.current.clientHeight && D) {
        const z = `${V$(nl(_))}px`;
        R.current.style[P === "rtl" ? "paddingLeft" : "paddingRight"] = z, R.current.style.width = `calc(100% + ${z})`;
      }
      return R.current;
    }
  }), []);
  const E = (_) => {
    const P = R.current, D = _.key;
    if (_.ctrlKey || _.metaKey || _.altKey) {
      y && y(_);
      return;
    }
    const K = ao(P).activeElement;
    if (D === "ArrowDown")
      _.preventDefault(), Eb(P, K, v, m, MO);
    else if (D === "ArrowUp")
      _.preventDefault(), Eb(P, K, v, m, XF);
    else if (D === "Home")
      _.preventDefault(), Eb(P, null, v, m, MO);
    else if (D === "End")
      _.preventDefault(), Eb(P, null, v, m, XF);
    else if (D.length === 1) {
      const Q = O.current, H = D.toLowerCase(), I = performance.now();
      Q.keys.length > 0 && (I - Q.lastTime > 500 ? (Q.keys = [], Q.repeating = !0, Q.previousKeyMatched = !0) : Q.repeating && H !== Q.keys[0] && (Q.repeating = !1)), Q.lastTime = I, Q.keys.push(H);
      const U = K && !Q.repeating && Wj(K, Q);
      Q.previousKeyMatched && (U || Eb(P, K, !1, m, MO, Q)) ? _.preventDefault() : Q.previousKeyMatched = !1;
    }
    y && y(_);
  }, k = Vr(R, n);
  let L = -1;
  S.Children.forEach(d, (_, P) => {
    if (!/* @__PURE__ */ S.isValidElement(_)) {
      L === P && (L += 1, L >= d.length && (L = -1));
      return;
    }
    process.env.NODE_ENV !== "production" && gf.isFragment(_) && console.error(["MUI: The Menu component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`)), _.props.disabled || (C === "selectedMenu" && _.props.selected || L === -1) && (L = P), L === P && (_.props.disabled || _.props.muiSkipListHighlight || _.type.muiSkipListHighlight) && (L += 1, L >= d.length && (L = -1));
  });
  const F = S.Children.map(d, (_, P) => {
    if (P === L) {
      const D = {};
      return u && (D.autoFocus = !0), _.props.tabIndex === void 0 && C === "selectedMenu" && (D.tabIndex = 0), /* @__PURE__ */ S.cloneElement(_, D);
    }
    return _;
  });
  return /* @__PURE__ */ A.jsx(Gj, {
    role: "menu",
    ref: k,
    className: p,
    onKeyDown: E,
    tabIndex: s ? 0 : -1,
    ...w,
    children: F
  });
});
process.env.NODE_ENV !== "production" && (NC.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, will focus the `[role="menu"]` container and move into tab order.
   * @default false
   */
  autoFocus: a.bool,
  /**
   * If `true`, will focus the first menuitem if `variant="menu"` or selected item
   * if `variant="selectedMenu"`.
   * @default false
   */
  autoFocusItem: a.bool,
  /**
   * MenuList contents, normally `MenuItem`s.
   */
  children: a.node,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * If `true`, will allow focus on disabled items.
   * @default false
   */
  disabledItemsFocusable: a.bool,
  /**
   * If `true`, the menu items will not wrap focus.
   * @default false
   */
  disableListWrap: a.bool,
  /**
   * @ignore
   */
  onKeyDown: a.func,
  /**
   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus
   * and the vertical alignment relative to the anchor element.
   * @default 'selectedMenu'
   */
  variant: a.oneOf(["menu", "selectedMenu"])
});
function hX(e) {
  return yn("MuiPopover", e);
}
bn("MuiPopover", ["root", "paper"]);
function QF(e, t) {
  let n = 0;
  return typeof t == "number" ? n = t : t === "center" ? n = e.height / 2 : t === "bottom" && (n = e.height), n;
}
function JF(e, t) {
  let n = 0;
  return typeof t == "number" ? n = t : t === "center" ? n = e.width / 2 : t === "right" && (n = e.width), n;
}
function ZF(e) {
  return [e.horizontal, e.vertical].map((t) => typeof t == "number" ? `${t}px` : t).join(" ");
}
function jb(e) {
  return typeof e == "function" ? e() : e;
}
const mX = (e) => {
  const {
    classes: t
  } = e;
  return yt({
    root: ["root"],
    paper: ["paper"]
  }, hX, t);
}, gX = Ue(zj, {
  name: "MuiPopover",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({}), qj = Ue(bs, {
  name: "MuiPopover",
  slot: "Paper",
  overridesResolver: (e, t) => t.paper
})({
  position: "absolute",
  overflowY: "auto",
  overflowX: "hidden",
  // So we see the popover when it's empty.
  // It's most likely on issue on userland.
  minWidth: 16,
  minHeight: 16,
  maxWidth: "calc(100% - 32px)",
  maxHeight: "calc(100% - 32px)",
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0
}), Kj = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const i = Tn({
    props: t,
    name: "MuiPopover"
  }), {
    action: s,
    anchorEl: u,
    anchorOrigin: d = {
      vertical: "top",
      horizontal: "left"
    },
    anchorPosition: p,
    anchorReference: m = "anchorEl",
    children: v,
    className: y,
    container: C,
    elevation: w = 8,
    marginThreshold: R = 16,
    open: O,
    PaperProps: E = {},
    // TODO: remove in v7
    slots: k = {},
    slotProps: L = {},
    transformOrigin: F = {
      vertical: "top",
      horizontal: "left"
    },
    TransitionComponent: _,
    // TODO: remove in v7
    transitionDuration: P = "auto",
    TransitionProps: D = {},
    // TODO: remove in v7
    disableScrollLock: z = !1,
    ...K
  } = i, Q = S.useRef(), H = {
    ...i,
    anchorOrigin: d,
    anchorReference: m,
    elevation: w,
    marginThreshold: R,
    transformOrigin: F,
    TransitionComponent: _,
    transitionDuration: P,
    TransitionProps: D
  }, I = mX(H), U = S.useCallback(() => {
    if (m === "anchorPosition")
      return process.env.NODE_ENV !== "production" && (p || console.error('MUI: You need to provide a `anchorPosition` prop when using <Popover anchorReference="anchorPosition" />.')), p;
    const Ce = jb(u), Re = Ce && Ce.nodeType === 1 ? Ce : ao(Q.current).body, ue = Re.getBoundingClientRect();
    if (process.env.NODE_ENV !== "production") {
      const we = Re.getBoundingClientRect();
      process.env.NODE_ENV !== "test" && we.top === 0 && we.left === 0 && we.right === 0 && we.bottom === 0 && console.warn(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
    }
    return {
      top: ue.top + QF(ue, d.vertical),
      left: ue.left + JF(ue, d.horizontal)
    };
  }, [u, d.horizontal, d.vertical, p, m]), G = S.useCallback((Ce) => ({
    vertical: QF(Ce, F.vertical),
    horizontal: JF(Ce, F.horizontal)
  }), [F.horizontal, F.vertical]), Y = S.useCallback((Ce) => {
    const Re = {
      width: Ce.offsetWidth,
      height: Ce.offsetHeight
    }, ue = G(Re);
    if (m === "none")
      return {
        top: null,
        left: null,
        transformOrigin: ZF(ue)
      };
    const we = U();
    let _e = we.top - ue.vertical, He = we.left - ue.horizontal;
    const et = _e + Re.height, Ne = He + Re.width, rt = nl(jb(u)), it = rt.innerHeight - R, wt = rt.innerWidth - R;
    if (R !== null && _e < R) {
      const gt = _e - R;
      _e -= gt, ue.vertical += gt;
    } else if (R !== null && et > it) {
      const gt = et - it;
      _e -= gt, ue.vertical += gt;
    }
    if (process.env.NODE_ENV !== "production" && Re.height > it && Re.height && it && console.error(["MUI: The popover component is too tall.", `Some part of it can not be seen on the screen (${Re.height - it}px).`, "Please consider adding a `max-height` to improve the user-experience."].join(`
`)), R !== null && He < R) {
      const gt = He - R;
      He -= gt, ue.horizontal += gt;
    } else if (Ne > wt) {
      const gt = Ne - wt;
      He -= gt, ue.horizontal += gt;
    }
    return {
      top: `${Math.round(_e)}px`,
      left: `${Math.round(He)}px`,
      transformOrigin: ZF(ue)
    };
  }, [u, m, U, G, R]), [te, B] = S.useState(O), W = S.useCallback(() => {
    const Ce = Q.current;
    if (!Ce)
      return;
    const Re = Y(Ce);
    Re.top !== null && Ce.style.setProperty("top", Re.top), Re.left !== null && (Ce.style.left = Re.left), Ce.style.transformOrigin = Re.transformOrigin, B(!0);
  }, [Y]);
  S.useEffect(() => (z && window.addEventListener("scroll", W), () => window.removeEventListener("scroll", W)), [u, z, W]);
  const q = () => {
    W();
  }, ne = () => {
    B(!1);
  };
  S.useEffect(() => {
    O && W();
  }), S.useImperativeHandle(s, () => O ? {
    updatePosition: () => {
      W();
    }
  } : null, [O, W]), S.useEffect(() => {
    if (!O)
      return;
    const Ce = bE(() => {
      W();
    }), Re = nl(jb(u));
    return Re.addEventListener("resize", Ce), () => {
      Ce.clear(), Re.removeEventListener("resize", Ce);
    };
  }, [u, O, W]);
  let re = P;
  const X = {
    slots: {
      transition: _,
      ...k
    },
    slotProps: {
      transition: D,
      paper: E,
      ...L
    }
  }, [j, ie] = vn("transition", {
    elementType: Wg,
    externalForwardedProps: X,
    ownerState: H,
    getSlotProps: (Ce) => ({
      ...Ce,
      onEntering: (Re, ue) => {
        var we;
        (we = Ce.onEntering) == null || we.call(Ce, Re, ue), q();
      },
      onExited: (Re) => {
        var ue;
        (ue = Ce.onExited) == null || ue.call(Ce, Re), ne();
      }
    }),
    additionalProps: {
      appear: !0,
      in: O
    }
  });
  P === "auto" && !j.muiSupportAuto && (re = void 0);
  const fe = C || (u ? ao(jb(u)).body : void 0), [ce, {
    slots: me,
    slotProps: ge,
    ...de
  }] = vn("root", {
    ref: n,
    elementType: gX,
    externalForwardedProps: {
      ...X,
      ...K
    },
    shouldForwardComponentProp: !0,
    additionalProps: {
      slots: {
        backdrop: k.backdrop
      },
      slotProps: {
        backdrop: lj(typeof L.backdrop == "function" ? L.backdrop(H) : L.backdrop, {
          invisible: !0
        })
      },
      container: fe,
      open: O
    },
    ownerState: H,
    className: nt(I.root, y)
  }), [pe, be] = vn("paper", {
    ref: Q,
    className: I.paper,
    elementType: qj,
    externalForwardedProps: X,
    shouldForwardComponentProp: !0,
    additionalProps: {
      elevation: w,
      style: te ? void 0 : {
        opacity: 0
      }
    },
    ownerState: H
  });
  return /* @__PURE__ */ A.jsx(ce, {
    ...de,
    ...!wk(ce) && {
      slots: me,
      slotProps: ge,
      disableScrollLock: z
    },
    children: /* @__PURE__ */ A.jsx(j, {
      ...ie,
      timeout: re,
      children: /* @__PURE__ */ A.jsx(pe, {
        ...be,
        children: v
      })
    })
  });
});
process.env.NODE_ENV !== "production" && (Kj.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A ref for imperative actions.
   * It currently only supports updatePosition() action.
   */
  action: Ea,
  /**
   * An HTML element, [PopoverVirtualElement](https://mui.com/material-ui/react-popover/#virtual-element),
   * or a function that returns either.
   * It's used to set the position of the popover.
   */
  anchorEl: Bl(a.oneOfType([Ul, a.func]), (e) => {
    if (e.open && (!e.anchorReference || e.anchorReference === "anchorEl")) {
      const t = jb(e.anchorEl);
      if (t && t.nodeType === 1) {
        const n = t.getBoundingClientRect();
        if (process.env.NODE_ENV !== "test" && n.top === 0 && n.left === 0 && n.right === 0 && n.bottom === 0)
          return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
      } else
        return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", `It should be an Element or PopoverVirtualElement instance but it's \`${t}\` instead.`].join(`
`));
    }
    return null;
  }),
  /**
   * This is the point on the anchor where the popover's
   * `anchorEl` will attach to. This is not used when the
   * anchorReference is 'anchorPosition'.
   *
   * Options:
   * vertical: [top, center, bottom];
   * horizontal: [left, center, right].
   * @default {
   *   vertical: 'top',
   *   horizontal: 'left',
   * }
   */
  anchorOrigin: a.shape({
    horizontal: a.oneOfType([a.oneOf(["center", "left", "right"]), a.number]).isRequired,
    vertical: a.oneOfType([a.oneOf(["bottom", "center", "top"]), a.number]).isRequired
  }),
  /**
   * This is the position that may be used to set the position of the popover.
   * The coordinates are relative to the application's client area.
   */
  anchorPosition: a.shape({
    left: a.number.isRequired,
    top: a.number.isRequired
  }),
  /**
   * This determines which anchor prop to refer to when setting
   * the position of the popover.
   * @default 'anchorEl'
   */
  anchorReference: a.oneOf(["anchorEl", "anchorPosition", "none"]),
  /**
   * A backdrop component. This prop enables custom backdrop rendering.
   * @deprecated Use `slots.backdrop` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default styled(Backdrop, {
   *   name: 'MuiModal',
   *   slot: 'Backdrop',
   *   overridesResolver: (props, styles) => {
   *     return styles.backdrop;
   *   },
   * })({
   *   zIndex: -1,
   * })
   */
  BackdropComponent: a.elementType,
  /**
   * Props applied to the [`Backdrop`](/material-ui/api/backdrop/) element.
   * @deprecated Use `slotProps.backdrop` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  BackdropProps: a.object,
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * An HTML element, component instance, or function that returns either.
   * The `container` will passed to the Modal component.
   *
   * By default, it uses the body of the anchorEl's top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: a.oneOfType([Ul, a.func]),
  /**
   * Disable the scroll lock behavior.
   * @default false
   */
  disableScrollLock: a.bool,
  /**
   * The elevation of the popover.
   * @default 8
   */
  elevation: Pg,
  /**
   * Specifies how close to the edge of the window the popover can appear.
   * If null, the popover will not be constrained by the window.
   * @default 16
   */
  marginThreshold: a.number,
  /**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   */
  onClose: a.func,
  /**
   * If `true`, the component is shown.
   */
  open: a.bool.isRequired,
  /**
   * Props applied to the [`Paper`](https://mui.com/material-ui/api/paper/) element.
   *
   * This prop is an alias for `slotProps.paper` and will be overriden by it if both are used.
   * @deprecated Use `slotProps.paper` instead.
   *
   * @default {}
   */
  PaperProps: a.shape({
    component: hP
  }),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    backdrop: a.oneOfType([a.func, a.object]),
    paper: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object]),
    transition: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    backdrop: a.elementType,
    paper: a.elementType,
    root: a.elementType,
    transition: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * This is the point on the popover which
   * will attach to the anchor's origin.
   *
   * Options:
   * vertical: [top, center, bottom, x(px)];
   * horizontal: [left, center, right, x(px)].
   * @default {
   *   vertical: 'top',
   *   horizontal: 'left',
   * }
   */
  transformOrigin: a.shape({
    horizontal: a.oneOfType([a.oneOf(["center", "left", "right"]), a.number]).isRequired,
    vertical: a.oneOfType([a.oneOf(["bottom", "center", "top"]), a.number]).isRequired
  }),
  /**
   * The component used for the transition.
   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @deprecated use the `slots.transition` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default Grow
   */
  TransitionComponent: a.elementType,
  /**
   * Set to 'auto' to automatically calculate transition time based on height.
   * @default 'auto'
   */
  transitionDuration: a.oneOfType([a.oneOf(["auto"]), a.number, a.shape({
    appear: a.number,
    enter: a.number,
    exit: a.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @deprecated use the `slotProps.transition` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  TransitionProps: a.object
});
function vX(e) {
  return yn("MuiMenu", e);
}
bn("MuiMenu", ["root", "paper", "list"]);
const yX = {
  vertical: "top",
  horizontal: "right"
}, bX = {
  vertical: "top",
  horizontal: "left"
}, CX = (e) => {
  const {
    classes: t
  } = e;
  return yt({
    root: ["root"],
    paper: ["paper"],
    list: ["list"]
  }, vX, t);
}, SX = Ue(Kj, {
  shouldForwardProp: (e) => Ya(e) || e === "classes",
  name: "MuiMenu",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({}), wX = Ue(qj, {
  name: "MuiMenu",
  slot: "Paper",
  overridesResolver: (e, t) => t.paper
})({
  // specZ: The maximum height of a simple menu should be one or more rows less than the view
  // height. This ensures a tappable area outside of the simple menu with which to dismiss
  // the menu.
  maxHeight: "calc(100% - 96px)",
  // Add iOS momentum scrolling for iOS < 13.0
  WebkitOverflowScrolling: "touch"
}), xX = Ue(NC, {
  name: "MuiMenu",
  slot: "List",
  overridesResolver: (e, t) => t.list
})({
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0
}), Yj = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const i = Tn({
    props: t,
    name: "MuiMenu"
  }), {
    autoFocus: s = !0,
    children: u,
    className: d,
    disableAutoFocusItem: p = !1,
    MenuListProps: m = {},
    onClose: v,
    open: y,
    PaperProps: C = {},
    PopoverClasses: w,
    transitionDuration: R = "auto",
    TransitionProps: {
      onEntering: O,
      ...E
    } = {},
    variant: k = "selectedMenu",
    slots: L = {},
    slotProps: F = {},
    ..._
  } = i, P = ji(), D = {
    ...i,
    autoFocus: s,
    disableAutoFocusItem: p,
    MenuListProps: m,
    onEntering: O,
    PaperProps: C,
    transitionDuration: R,
    TransitionProps: E,
    variant: k
  }, z = CX(D), K = s && !p && y, Q = S.useRef(null), H = (re, X) => {
    Q.current && Q.current.adjustStyleForScrollbar(re, {
      direction: P ? "rtl" : "ltr"
    }), O && O(re, X);
  }, I = (re) => {
    re.key === "Tab" && (re.preventDefault(), v && v(re, "tabKeyDown"));
  };
  let U = -1;
  S.Children.map(u, (re, X) => {
    /* @__PURE__ */ S.isValidElement(re) && (process.env.NODE_ENV !== "production" && gf.isFragment(re) && console.error(["MUI: The Menu component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`)), re.props.disabled || (k === "selectedMenu" && re.props.selected || U === -1) && (U = X));
  });
  const G = {
    slots: L,
    slotProps: {
      list: m,
      transition: E,
      paper: C,
      ...F
    }
  }, Y = Hg({
    elementType: L.root,
    externalSlotProps: F.root,
    ownerState: D,
    className: [z.root, d]
  }), [te, B] = vn("paper", {
    className: z.paper,
    elementType: wX,
    externalForwardedProps: G,
    shouldForwardComponentProp: !0,
    ownerState: D
  }), [W, q] = vn("list", {
    className: nt(z.list, m.className),
    elementType: xX,
    shouldForwardComponentProp: !0,
    externalForwardedProps: G,
    getSlotProps: (re) => ({
      ...re,
      onKeyDown: (X) => {
        var j;
        I(X), (j = re.onKeyDown) == null || j.call(re, X);
      }
    }),
    ownerState: D
  }), ne = typeof G.slotProps.transition == "function" ? G.slotProps.transition(D) : G.slotProps.transition;
  return /* @__PURE__ */ A.jsx(SX, {
    onClose: v,
    anchorOrigin: {
      vertical: "bottom",
      horizontal: P ? "right" : "left"
    },
    transformOrigin: P ? yX : bX,
    slots: {
      root: L.root,
      paper: te,
      backdrop: L.backdrop,
      ...L.transition && {
        // TODO: pass `slots.transition` directly once `TransitionComponent` is removed from Popover
        transition: L.transition
      }
    },
    slotProps: {
      root: Y,
      paper: B,
      backdrop: typeof F.backdrop == "function" ? F.backdrop(D) : F.backdrop,
      transition: {
        ...ne,
        onEntering: (...re) => {
          var X;
          H(...re), (X = ne == null ? void 0 : ne.onEntering) == null || X.call(ne, ...re);
        }
      }
    },
    open: y,
    ref: n,
    transitionDuration: R,
    ownerState: D,
    ..._,
    classes: w,
    children: /* @__PURE__ */ A.jsx(W, {
      actions: Q,
      autoFocus: s && (U === -1 || p),
      autoFocusItem: K,
      variant: k,
      ...q,
      children: u
    })
  });
});
process.env.NODE_ENV !== "production" && (Yj.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * An HTML element, or a function that returns one.
   * It's used to set the position of the menu.
   */
  anchorEl: a.oneOfType([Ul, a.func]),
  /**
   * If `true` (Default) will focus the `[role="menu"]` if no focusable child is found. Disabled
   * children are not focusable. If you set this prop to `false` focus will be placed
   * on the parent modal container. This has severe accessibility implications
   * and should only be considered if you manage focus otherwise.
   * @default true
   */
  autoFocus: a.bool,
  /**
   * Menu contents, normally `MenuItem`s.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * When opening the menu will not focus the active item but the `[role="menu"]`
   * unless `autoFocus` is also set to `false`. Not using the default means not
   * following WAI-ARIA authoring practices. Please be considerate about possible
   * accessibility implications.
   * @default false
   */
  disableAutoFocusItem: a.bool,
  /**
   * Props applied to the [`MenuList`](https://mui.com/material-ui/api/menu-list/) element.
   * @deprecated use the `slotProps.list` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  MenuListProps: a.object,
  /**
   * Callback fired when the component requests to be closed.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`, `"tabKeyDown"`.
   */
  onClose: a.func,
  /**
   * If `true`, the component is shown.
   */
  open: a.bool.isRequired,
  /**
   * @ignore
   */
  PaperProps: a.object,
  /**
   * `classes` prop applied to the [`Popover`](https://mui.com/material-ui/api/popover/) element.
   */
  PopoverClasses: a.object,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    backdrop: a.oneOfType([a.func, a.object]),
    list: a.oneOfType([a.func, a.object]),
    paper: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object]),
    transition: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    backdrop: a.elementType,
    list: a.elementType,
    paper: a.elementType,
    root: a.elementType,
    transition: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The length of the transition in `ms`, or 'auto'
   * @default 'auto'
   */
  transitionDuration: a.oneOfType([a.oneOf(["auto"]), a.number, a.shape({
    appear: a.number,
    enter: a.number,
    exit: a.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @deprecated use the `slotProps.transition` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  TransitionProps: a.object,
  /**
   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus.
   * @default 'selectedMenu'
   */
  variant: a.oneOf(["menu", "selectedMenu"])
});
function EX(e) {
  return yn("MuiMenuItem", e);
}
const Tb = bn("MuiMenuItem", ["root", "focusVisible", "dense", "disabled", "divider", "gutters", "selected"]), TX = (e, t) => {
  const {
    ownerState: n
  } = e;
  return [t.root, n.dense && t.dense, n.divider && t.divider, !n.disableGutters && t.gutters];
}, RX = (e) => {
  const {
    disabled: t,
    dense: n,
    divider: i,
    disableGutters: s,
    selected: u,
    classes: d
  } = e, m = yt({
    root: ["root", n && "dense", t && "disabled", !s && "gutters", i && "divider", u && "selected"]
  }, EX, d);
  return {
    ...d,
    ...m
  };
}, OX = Ue(Kc, {
  shouldForwardProp: (e) => Ya(e) || e === "classes",
  name: "MuiMenuItem",
  slot: "Root",
  overridesResolver: TX
})(rn(({
  theme: e
}) => ({
  ...e.typography.body1,
  display: "flex",
  justifyContent: "flex-start",
  alignItems: "center",
  position: "relative",
  textDecoration: "none",
  minHeight: 48,
  paddingTop: 6,
  paddingBottom: 6,
  boxSizing: "border-box",
  whiteSpace: "nowrap",
  "&:hover": {
    textDecoration: "none",
    backgroundColor: (e.vars || e).palette.action.hover,
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: "transparent"
    }
  },
  [`&.${Tb.selected}`]: {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / ${e.vars.palette.action.selectedOpacity})` : $n(e.palette.primary.main, e.palette.action.selectedOpacity),
    [`&.${Tb.focusVisible}`]: {
      backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.focusOpacity}))` : $n(e.palette.primary.main, e.palette.action.selectedOpacity + e.palette.action.focusOpacity)
    }
  },
  [`&.${Tb.selected}:hover`]: {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.hoverOpacity}))` : $n(e.palette.primary.main, e.palette.action.selectedOpacity + e.palette.action.hoverOpacity),
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / ${e.vars.palette.action.selectedOpacity})` : $n(e.palette.primary.main, e.palette.action.selectedOpacity)
    }
  },
  [`&.${Tb.focusVisible}`]: {
    backgroundColor: (e.vars || e).palette.action.focus
  },
  [`&.${Tb.disabled}`]: {
    opacity: (e.vars || e).palette.action.disabledOpacity
  },
  [`& + .${UF.root}`]: {
    marginTop: e.spacing(1),
    marginBottom: e.spacing(1)
  },
  [`& + .${UF.inset}`]: {
    marginLeft: 52
  },
  [`& .${wg.root}`]: {
    marginTop: 0,
    marginBottom: 0
  },
  [`& .${wg.inset}`]: {
    paddingLeft: 36
  },
  [`& .${YF.root}`]: {
    minWidth: 36
  },
  variants: [{
    props: ({
      ownerState: t
    }) => !t.disableGutters,
    style: {
      paddingLeft: 16,
      paddingRight: 16
    }
  }, {
    props: ({
      ownerState: t
    }) => t.divider,
    style: {
      borderBottom: `1px solid ${(e.vars || e).palette.divider}`,
      backgroundClip: "padding-box"
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.dense,
    style: {
      [e.breakpoints.up("sm")]: {
        minHeight: "auto"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.dense,
    style: {
      minHeight: 32,
      // https://m2.material.io/components/menus#specs > Dense
      paddingTop: 4,
      paddingBottom: 4,
      ...e.typography.body2,
      [`& .${YF.root} svg`]: {
        fontSize: "1.25rem"
      }
    }
  }]
}))), ms = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const i = Tn({
    props: t,
    name: "MuiMenuItem"
  }), {
    autoFocus: s = !1,
    component: u = "li",
    dense: d = !1,
    divider: p = !1,
    disableGutters: m = !1,
    focusVisibleClassName: v,
    role: y = "menuitem",
    tabIndex: C,
    className: w,
    ...R
  } = i, O = S.useContext(qg), E = S.useMemo(() => ({
    dense: d || O.dense || !1,
    disableGutters: m
  }), [O.dense, d, m]), k = S.useRef(null);
  Fr(() => {
    s && (k.current ? k.current.focus() : process.env.NODE_ENV !== "production" && console.error("MUI: Unable to set focus to a MenuItem whose component has not been rendered."));
  }, [s]);
  const L = {
    ...i,
    dense: E.dense,
    divider: p,
    disableGutters: m
  }, F = RX(i), _ = Vr(k, n);
  let P;
  return i.disabled || (P = C !== void 0 ? C : -1), /* @__PURE__ */ A.jsx(qg.Provider, {
    value: E,
    children: /* @__PURE__ */ A.jsx(OX, {
      ref: _,
      role: y,
      tabIndex: P,
      component: u,
      focusVisibleClassName: nt(F.focusVisible, v),
      className: nt(F.root, w),
      ...R,
      ownerState: L,
      classes: F
    })
  });
});
process.env.NODE_ENV !== "production" && (ms.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the list item is focused during the first mount.
   * Focus will also be triggered if the value changes from false to true.
   * @default false
   */
  autoFocus: a.bool,
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * If `true`, compact vertical padding designed for keyboard and mouse input is used.
   * The prop defaults to the value inherited from the parent Menu component.
   * @default false
   */
  dense: a.bool,
  /**
   * @ignore
   */
  disabled: a.bool,
  /**
   * If `true`, the left and right padding is removed.
   * @default false
   */
  disableGutters: a.bool,
  /**
   * If `true`, a 1px light border is added to the bottom of the menu item.
   * @default false
   */
  divider: a.bool,
  /**
   * This prop can help identify which element has keyboard focus.
   * The class name will be applied when the element gains the focus through keyboard interaction.
   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).
   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).
   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components
   * if needed.
   */
  focusVisibleClassName: a.string,
  /**
   * @ignore
   */
  role: a.string,
  /**
   * If `true`, the component is selected.
   * @default false
   */
  selected: a.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * @default 0
   */
  tabIndex: a.number
});
function kX(e) {
  return yn("MuiNativeSelect", e);
}
const $P = bn("MuiNativeSelect", ["root", "select", "multiple", "filled", "outlined", "standard", "disabled", "icon", "iconOpen", "iconFilled", "iconOutlined", "iconStandard", "nativeInput", "error"]), PX = (e) => {
  const {
    classes: t,
    variant: n,
    disabled: i,
    multiple: s,
    open: u,
    error: d
  } = e, p = {
    select: ["select", n, i && "disabled", s && "multiple", d && "error"],
    icon: ["icon", `icon${Be(n)}`, u && "iconOpen", i && "disabled"]
  };
  return yt(p, kX, t);
}, Xj = Ue("select", {
  name: "MuiNativeSelect"
})(({
  theme: e
}) => ({
  // Reset
  MozAppearance: "none",
  // Reset
  WebkitAppearance: "none",
  // When interacting quickly, the text can end up selected.
  // Native select can't be selected either.
  userSelect: "none",
  // Reset
  borderRadius: 0,
  cursor: "pointer",
  "&:focus": {
    // Reset Chrome style
    borderRadius: 0
  },
  [`&.${$P.disabled}`]: {
    cursor: "default"
  },
  "&[multiple]": {
    height: "auto"
  },
  "&:not([multiple]) option, &:not([multiple]) optgroup": {
    backgroundColor: (e.vars || e).palette.background.paper
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.variant !== "filled" && t.variant !== "outlined",
    style: {
      // Bump specificity to allow extending custom inputs
      "&&&": {
        paddingRight: 24,
        minWidth: 16
        // So it doesn't collapse.
      }
    }
  }, {
    props: {
      variant: "filled"
    },
    style: {
      "&&&": {
        paddingRight: 32
      }
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      borderRadius: (e.vars || e).shape.borderRadius,
      "&:focus": {
        borderRadius: (e.vars || e).shape.borderRadius
        // Reset the reset for Chrome style
      },
      "&&&": {
        paddingRight: 32
      }
    }
  }]
})), MX = Ue(Xj, {
  name: "MuiNativeSelect",
  slot: "Select",
  shouldForwardProp: Ya,
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.select, t[n.variant], n.error && t.error, {
      [`&.${$P.multiple}`]: t.multiple
    }];
  }
})({}), Qj = Ue("svg", {
  name: "MuiNativeSelect"
})(({
  theme: e
}) => ({
  // We use a position absolute over a flexbox in order to forward the pointer events
  // to the input and to support wrapping tags..
  position: "absolute",
  right: 0,
  // Center vertically, height is 1em
  top: "calc(50% - .5em)",
  // Don't block pointer events on the select under the icon.
  pointerEvents: "none",
  color: (e.vars || e).palette.action.active,
  [`&.${$P.disabled}`]: {
    color: (e.vars || e).palette.action.disabled
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.open,
    style: {
      transform: "rotate(180deg)"
    }
  }, {
    props: {
      variant: "filled"
    },
    style: {
      right: 7
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      right: 7
    }
  }]
})), IX = Ue(Qj, {
  name: "MuiNativeSelect",
  slot: "Icon",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.icon, n.variant && t[`icon${Be(n.variant)}`], n.open && t.iconOpen];
  }
})({}), Jj = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const {
    className: i,
    disabled: s,
    error: u,
    IconComponent: d,
    inputRef: p,
    variant: m = "standard",
    ...v
  } = t, y = {
    ...t,
    disabled: s,
    variant: m,
    error: u
  }, C = PX(y);
  return /* @__PURE__ */ A.jsxs(S.Fragment, {
    children: [/* @__PURE__ */ A.jsx(MX, {
      ownerState: y,
      className: nt(C.select, i),
      disabled: s,
      ref: p || n,
      ...v
    }), t.multiple ? null : /* @__PURE__ */ A.jsx(IX, {
      as: d,
      ownerState: y,
      className: C.icon
    })]
  });
});
process.env.NODE_ENV !== "production" && (Jj.propTypes = {
  /**
   * The option elements to populate the select with.
   * Can be some `<option>` elements.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * The CSS class name of the select element.
   */
  className: a.string,
  /**
   * If `true`, the select is disabled.
   */
  disabled: a.bool,
  /**
   * If `true`, the `select input` will indicate an error.
   */
  error: a.bool,
  /**
   * The icon that displays the arrow.
   */
  IconComponent: a.elementType.isRequired,
  /**
   * Use that prop to pass a ref to the native select element.
   * @deprecated
   */
  inputRef: Ea,
  /**
   * @ignore
   */
  multiple: a.bool,
  /**
   * Name attribute of the `select` or hidden `input` element.
   */
  name: a.string,
  /**
   * Callback fired when a menu item is selected.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: a.func,
  /**
   * The input value.
   */
  value: a.any,
  /**
   * The variant to use.
   */
  variant: a.oneOf(["standard", "outlined", "filled"])
});
var e_;
const DX = Ue("fieldset", {
  name: "MuiNotchedOutlined",
  shouldForwardProp: Ya
})({
  textAlign: "left",
  position: "absolute",
  bottom: 0,
  right: 0,
  top: -5,
  left: 0,
  margin: 0,
  padding: "0 8px",
  pointerEvents: "none",
  borderRadius: "inherit",
  borderStyle: "solid",
  borderWidth: 1,
  overflow: "hidden",
  minWidth: "0%"
}), NX = Ue("legend", {
  name: "MuiNotchedOutlined",
  shouldForwardProp: Ya
})(rn(({
  theme: e
}) => ({
  float: "unset",
  // Fix conflict with bootstrap
  width: "auto",
  // Fix conflict with bootstrap
  overflow: "hidden",
  // Fix Horizontal scroll when label too long
  variants: [{
    props: ({
      ownerState: t
    }) => !t.withLabel,
    style: {
      padding: 0,
      lineHeight: "11px",
      // sync with `height` in `legend` styles
      transition: e.transitions.create("width", {
        duration: 150,
        easing: e.transitions.easing.easeOut
      })
    }
  }, {
    props: ({
      ownerState: t
    }) => t.withLabel,
    style: {
      display: "block",
      // Fix conflict with normalize.css and sanitize.css
      padding: 0,
      height: 11,
      // sync with `lineHeight` in `legend` styles
      fontSize: "0.75em",
      visibility: "hidden",
      maxWidth: 0.01,
      transition: e.transitions.create("max-width", {
        duration: 50,
        easing: e.transitions.easing.easeOut
      }),
      whiteSpace: "nowrap",
      "& > span": {
        paddingLeft: 5,
        paddingRight: 5,
        display: "inline-block",
        opacity: 0,
        visibility: "visible"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.withLabel && t.notched,
    style: {
      maxWidth: "100%",
      transition: e.transitions.create("max-width", {
        duration: 100,
        easing: e.transitions.easing.easeOut,
        delay: 50
      })
    }
  }]
})));
function Zj(e) {
  const {
    children: t,
    classes: n,
    className: i,
    label: s,
    notched: u,
    ...d
  } = e, p = s != null && s !== "", m = {
    ...e,
    notched: u,
    withLabel: p
  };
  return /* @__PURE__ */ A.jsx(DX, {
    "aria-hidden": !0,
    className: i,
    ownerState: m,
    ...d,
    children: /* @__PURE__ */ A.jsx(NX, {
      ownerState: m,
      children: p ? /* @__PURE__ */ A.jsx("span", {
        children: s
      }) : (
        // notranslate needed while Google Translate will not fix zero-width space issue
        e_ || (e_ = /* @__PURE__ */ A.jsx("span", {
          className: "notranslate",
          "aria-hidden": !0,
          children: "​"
        }))
      )
    })
  });
}
process.env.NODE_ENV !== "production" && (Zj.propTypes = {
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The label.
   */
  label: a.node,
  /**
   * If `true`, the outline is notched to accommodate the label.
   */
  notched: a.bool.isRequired,
  /**
   * @ignore
   */
  style: a.object
});
const LX = (e) => {
  const {
    classes: t
  } = e, i = yt({
    root: ["root"],
    notchedOutline: ["notchedOutline"],
    input: ["input"]
  }, oK, t);
  return {
    ...t,
    // forward classes to the InputBase
    ...i
  };
}, FX = Ue(OE, {
  shouldForwardProp: (e) => Ya(e) || e === "classes",
  name: "MuiOutlinedInput",
  slot: "Root",
  overridesResolver: TE
})(rn(({
  theme: e
}) => {
  const t = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)";
  return {
    position: "relative",
    borderRadius: (e.vars || e).shape.borderRadius,
    [`&:hover .${Ws.notchedOutline}`]: {
      borderColor: (e.vars || e).palette.text.primary
    },
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      [`&:hover .${Ws.notchedOutline}`]: {
        borderColor: e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)` : t
      }
    },
    [`&.${Ws.focused} .${Ws.notchedOutline}`]: {
      borderWidth: 2
    },
    variants: [...Object.entries(e.palette).filter(to()).map(([n]) => ({
      props: {
        color: n
      },
      style: {
        [`&.${Ws.focused} .${Ws.notchedOutline}`]: {
          borderColor: (e.vars || e).palette[n].main
        }
      }
    })), {
      props: {},
      // to overide the above style
      style: {
        [`&.${Ws.error} .${Ws.notchedOutline}`]: {
          borderColor: (e.vars || e).palette.error.main
        },
        [`&.${Ws.disabled} .${Ws.notchedOutline}`]: {
          borderColor: (e.vars || e).palette.action.disabled
        }
      }
    }, {
      props: ({
        ownerState: n
      }) => n.startAdornment,
      style: {
        paddingLeft: 14
      }
    }, {
      props: ({
        ownerState: n
      }) => n.endAdornment,
      style: {
        paddingRight: 14
      }
    }, {
      props: ({
        ownerState: n
      }) => n.multiline,
      style: {
        padding: "16.5px 14px"
      }
    }, {
      props: ({
        ownerState: n,
        size: i
      }) => n.multiline && i === "small",
      style: {
        padding: "8.5px 14px"
      }
    }]
  };
})), _X = Ue(Zj, {
  name: "MuiOutlinedInput",
  slot: "NotchedOutline",
  overridesResolver: (e, t) => t.notchedOutline
})(rn(({
  theme: e
}) => {
  const t = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)";
  return {
    borderColor: e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)` : t
  };
})), AX = Ue(kE, {
  name: "MuiOutlinedInput",
  slot: "Input",
  overridesResolver: RE
})(rn(({
  theme: e
}) => ({
  padding: "16.5px 14px",
  ...!e.vars && {
    "&:-webkit-autofill": {
      WebkitBoxShadow: e.palette.mode === "light" ? null : "0 0 0 100px #266798 inset",
      WebkitTextFillColor: e.palette.mode === "light" ? null : "#fff",
      caretColor: e.palette.mode === "light" ? null : "#fff",
      borderRadius: "inherit"
    }
  },
  ...e.vars && {
    "&:-webkit-autofill": {
      borderRadius: "inherit"
    },
    [e.getColorSchemeSelector("dark")]: {
      "&:-webkit-autofill": {
        WebkitBoxShadow: "0 0 0 100px #266798 inset",
        WebkitTextFillColor: "#fff",
        caretColor: "#fff"
      }
    }
  },
  variants: [{
    props: {
      size: "small"
    },
    style: {
      padding: "8.5px 14px"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.multiline,
    style: {
      padding: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.startAdornment,
    style: {
      paddingLeft: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.endAdornment,
    style: {
      paddingRight: 0
    }
  }]
}))), IE = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const i = Tn({
    props: t,
    name: "MuiOutlinedInput"
  }), {
    components: s = {},
    fullWidth: u = !1,
    inputComponent: d = "input",
    label: p,
    multiline: m = !1,
    notched: v,
    slots: y = {},
    slotProps: C = {},
    type: w = "text",
    ...R
  } = i, O = LX(i), E = Xc(), k = gh({
    props: i,
    muiFormControl: E,
    states: ["color", "disabled", "error", "focused", "hiddenLabel", "size", "required"]
  }), L = {
    ...i,
    color: k.color || "primary",
    disabled: k.disabled,
    error: k.error,
    focused: k.focused,
    formControl: E,
    fullWidth: u,
    hiddenLabel: k.hiddenLabel,
    multiline: m,
    size: k.size,
    type: w
  }, F = y.root ?? s.Root ?? FX, _ = y.input ?? s.Input ?? AX, [P, D] = vn("notchedOutline", {
    elementType: _X,
    className: O.notchedOutline,
    shouldForwardComponentProp: !0,
    ownerState: L,
    externalForwardedProps: {
      slots: y,
      slotProps: C
    },
    additionalProps: {
      label: p != null && p !== "" && k.required ? /* @__PURE__ */ A.jsxs(S.Fragment, {
        children: [p, " ", "*"]
      }) : p
    }
  });
  return /* @__PURE__ */ A.jsx(vh, {
    slots: {
      root: F,
      input: _
    },
    slotProps: C,
    renderSuffix: (z) => /* @__PURE__ */ A.jsx(P, {
      ...D,
      notched: typeof v < "u" ? v : !!(z.startAdornment || z.filled || z.focused)
    }),
    fullWidth: u,
    inputComponent: d,
    multiline: m,
    ref: n,
    type: w,
    ...R,
    classes: {
      ...O,
      notchedOutline: null
    }
  });
});
process.env.NODE_ENV !== "production" && (IE.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: a.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: a.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: a.oneOfType([a.oneOf(["primary", "secondary"]), a.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: a.shape({
    Input: a.elementType,
    Root: a.elementType
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: a.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: a.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: a.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: a.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: a.bool,
  /**
   * The id of the `input` element.
   */
  id: a.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: a.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: a.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Ea,
  /**
   * The label of the `input`. It is only used for layout. The actual labelling
   * is handled by `InputLabel`.
   */
  label: a.node,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: a.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: a.oneOfType([a.number, a.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: a.oneOfType([a.number, a.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: a.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: a.string,
  /**
   * If `true`, the outline is notched to accommodate the label.
   */
  notched: a.bool,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: a.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: a.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: a.bool,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: a.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: a.oneOfType([a.number, a.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    input: a.object,
    notchedOutline: a.oneOfType([a.func, a.object]),
    root: a.object
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    input: a.elementType,
    notchedOutline: a.elementType,
    root: a.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: a.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: a.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: a.any
});
IE.muiName = "Input";
const $X = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z"
}), "FirstPage"), jX = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z"
}), "LastPage");
function e2(e) {
  return yn("MuiSelect", e);
}
const Rb = bn("MuiSelect", ["root", "select", "multiple", "filled", "outlined", "standard", "disabled", "focused", "icon", "iconOpen", "iconFilled", "iconOutlined", "iconStandard", "nativeInput", "error"]);
var t_;
const zX = Ue(Xj, {
  name: "MuiSelect",
  slot: "Select",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [
      // Win specificity over the input base
      {
        [`&.${Rb.select}`]: t.select
      },
      {
        [`&.${Rb.select}`]: t[n.variant]
      },
      {
        [`&.${Rb.error}`]: t.error
      },
      {
        [`&.${Rb.multiple}`]: t.multiple
      }
    ];
  }
})({
  // Win specificity over the input base
  [`&.${Rb.select}`]: {
    height: "auto",
    // Resets for multiple select with chips
    minHeight: "1.4375em",
    // Required for select\text-field height consistency
    textOverflow: "ellipsis",
    whiteSpace: "nowrap",
    overflow: "hidden"
  }
}), HX = Ue(Qj, {
  name: "MuiSelect",
  slot: "Icon",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.icon, n.variant && t[`icon${Be(n.variant)}`], n.open && t.iconOpen];
  }
})({}), VX = Ue("input", {
  shouldForwardProp: (e) => aj(e) && e !== "classes",
  name: "MuiSelect",
  slot: "NativeInput",
  overridesResolver: (e, t) => t.nativeInput
})({
  bottom: 0,
  left: 0,
  position: "absolute",
  opacity: 0,
  pointerEvents: "none",
  width: "100%",
  boxSizing: "border-box"
});
function n_(e, t) {
  return typeof t == "object" && t !== null ? e === t : String(e) === String(t);
}
function BX(e) {
  return e == null || typeof e == "string" && !e.trim();
}
const UX = (e) => {
  const {
    classes: t,
    variant: n,
    disabled: i,
    multiple: s,
    open: u,
    error: d
  } = e, p = {
    select: ["select", n, i && "disabled", s && "multiple", d && "error"],
    icon: ["icon", `icon${Be(n)}`, u && "iconOpen", i && "disabled"],
    nativeInput: ["nativeInput"]
  };
  return yt(p, e2, t);
}, t2 = /* @__PURE__ */ S.forwardRef(function(t, n) {
  var bt;
  const {
    "aria-describedby": i,
    "aria-label": s,
    autoFocus: u,
    autoWidth: d,
    children: p,
    className: m,
    defaultOpen: v,
    defaultValue: y,
    disabled: C,
    displayEmpty: w,
    error: R = !1,
    IconComponent: O,
    inputRef: E,
    labelId: k,
    MenuProps: L = {},
    multiple: F,
    name: _,
    onBlur: P,
    onChange: D,
    onClose: z,
    onFocus: K,
    onOpen: Q,
    open: H,
    readOnly: I,
    renderValue: U,
    required: G,
    SelectDisplayProps: Y = {},
    tabIndex: te,
    // catching `type` from Input which makes no sense for SelectInput
    type: B,
    value: W,
    variant: q = "standard",
    ...ne
  } = t, [re, X] = oh({
    controlled: W,
    default: y,
    name: "Select"
  }), [j, ie] = oh({
    controlled: H,
    default: v,
    name: "Select"
  }), fe = S.useRef(null), ce = S.useRef(null), [me, ge] = S.useState(null), {
    current: de
  } = S.useRef(H != null), [pe, be] = S.useState(), Ce = Vr(n, E), Re = S.useCallback((Ge) => {
    ce.current = Ge, Ge && ge(Ge);
  }, []), ue = me == null ? void 0 : me.parentNode;
  S.useImperativeHandle(Ce, () => ({
    focus: () => {
      ce.current.focus();
    },
    node: fe.current,
    value: re
  }), [re]), S.useEffect(() => {
    v && j && me && !de && (be(d ? null : ue.clientWidth), ce.current.focus());
  }, [me, d]), S.useEffect(() => {
    u && ce.current.focus();
  }, [u]), S.useEffect(() => {
    if (!k)
      return;
    const Ge = ao(ce.current).getElementById(k);
    if (Ge) {
      const Et = () => {
        getSelection().isCollapsed && ce.current.focus();
      };
      return Ge.addEventListener("click", Et), () => {
        Ge.removeEventListener("click", Et);
      };
    }
  }, [k]);
  const we = (Ge, Et) => {
    Ge ? Q && Q(Et) : z && z(Et), de || (be(d ? null : ue.clientWidth), ie(Ge));
  }, _e = (Ge) => {
    Ge.button === 0 && (Ge.preventDefault(), ce.current.focus(), we(!0, Ge));
  }, He = (Ge) => {
    we(!1, Ge);
  }, et = S.Children.toArray(p), Ne = (Ge) => {
    const Et = et.find((At) => At.props.value === Ge.target.value);
    Et !== void 0 && (X(Et.props.value), D && D(Ge, Et));
  }, rt = (Ge) => (Et) => {
    let At;
    if (Et.currentTarget.hasAttribute("tabindex")) {
      if (F) {
        At = Array.isArray(re) ? re.slice() : [];
        const pn = re.indexOf(Ge.props.value);
        pn === -1 ? At.push(Ge.props.value) : At.splice(pn, 1);
      } else
        At = Ge.props.value;
      if (Ge.props.onClick && Ge.props.onClick(Et), re !== At && (X(At), D)) {
        const pn = Et.nativeEvent || Et, fn = new pn.constructor(pn.type, pn);
        Object.defineProperty(fn, "target", {
          writable: !0,
          value: {
            value: At,
            name: _
          }
        }), D(fn, Ge);
      }
      F || we(!1, Et);
    }
  }, it = (Ge) => {
    I || [
      " ",
      "ArrowUp",
      "ArrowDown",
      // The native select doesn't respond to enter on macOS, but it's recommended by
      // https://www.w3.org/WAI/ARIA/apg/patterns/combobox/examples/combobox-select-only/
      "Enter"
    ].includes(Ge.key) && (Ge.preventDefault(), we(!0, Ge));
  }, wt = me !== null && j, gt = (Ge) => {
    !wt && P && (Object.defineProperty(Ge, "target", {
      writable: !0,
      value: {
        value: re,
        name: _
      }
    }), P(Ge));
  };
  delete ne["aria-invalid"];
  let ot, jt;
  const ct = [];
  let Tt = !1, Rt = !1;
  (N0({
    value: re
  }) || w) && (U ? ot = U(re) : Tt = !0);
  const Lt = et.map((Ge) => {
    if (!/* @__PURE__ */ S.isValidElement(Ge))
      return null;
    process.env.NODE_ENV !== "production" && gf.isFragment(Ge) && console.error(["MUI: The Select component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`));
    let Et;
    if (F) {
      if (!Array.isArray(re))
        throw new Error(process.env.NODE_ENV !== "production" ? "MUI: The `value` prop must be an array when using the `Select` component with `multiple`." : Bu(2));
      Et = re.some((At) => n_(At, Ge.props.value)), Et && Tt && ct.push(Ge.props.children);
    } else
      Et = n_(re, Ge.props.value), Et && Tt && (jt = Ge.props.children);
    return Et && (Rt = !0), /* @__PURE__ */ S.cloneElement(Ge, {
      "aria-selected": Et ? "true" : "false",
      onClick: rt(Ge),
      onKeyUp: (At) => {
        At.key === " " && At.preventDefault(), Ge.props.onKeyUp && Ge.props.onKeyUp(At);
      },
      role: "option",
      selected: Et,
      value: void 0,
      // The value is most likely not a valid HTML attribute.
      "data-value": Ge.props.value
      // Instead, we provide it as a data attribute.
    });
  });
  process.env.NODE_ENV !== "production" && S.useEffect(() => {
    if (!Rt && !F && re !== "") {
      const Ge = et.map((Et) => Et.props.value);
      console.warn([`MUI: You have provided an out-of-range value \`${re}\` for the select ${_ ? `(name="${_}") ` : ""}component.`, "Consider providing a value that matches one of the available options or ''.", `The available values are ${Ge.filter((Et) => Et != null).map((Et) => `\`${Et}\``).join(", ") || '""'}.`].join(`
`));
    }
  }, [Rt, et, F, _, re]), Tt && (F ? ct.length === 0 ? ot = null : ot = ct.reduce((Ge, Et, At) => (Ge.push(Et), At < ct.length - 1 && Ge.push(", "), Ge), []) : ot = jt);
  let vt = pe;
  !d && de && me && (vt = ue.clientWidth);
  let Qe;
  typeof te < "u" ? Qe = te : Qe = C ? null : 0;
  const Oe = Y.id || (_ ? `mui-component-select-${_}` : void 0), Me = {
    ...t,
    variant: q,
    value: re,
    open: wt,
    error: R
  }, ht = UX(Me), xt = {
    ...L.PaperProps,
    ...(bt = L.slotProps) == null ? void 0 : bt.paper
  }, zt = Sr();
  return /* @__PURE__ */ A.jsxs(S.Fragment, {
    children: [/* @__PURE__ */ A.jsx(zX, {
      as: "div",
      ref: Re,
      tabIndex: Qe,
      role: "combobox",
      "aria-controls": wt ? zt : void 0,
      "aria-disabled": C ? "true" : void 0,
      "aria-expanded": wt ? "true" : "false",
      "aria-haspopup": "listbox",
      "aria-label": s,
      "aria-labelledby": [k, Oe].filter(Boolean).join(" ") || void 0,
      "aria-describedby": i,
      "aria-required": G ? "true" : void 0,
      "aria-invalid": R ? "true" : void 0,
      onKeyDown: it,
      onMouseDown: C || I ? null : _e,
      onBlur: gt,
      onFocus: K,
      ...Y,
      ownerState: Me,
      className: nt(Y.className, ht.select, m),
      id: Oe,
      children: BX(ot) ? (
        // notranslate needed while Google Translate will not fix zero-width space issue
        t_ || (t_ = /* @__PURE__ */ A.jsx("span", {
          className: "notranslate",
          "aria-hidden": !0,
          children: "​"
        }))
      ) : ot
    }), /* @__PURE__ */ A.jsx(VX, {
      "aria-invalid": R,
      value: Array.isArray(re) ? re.join(",") : re,
      name: _,
      ref: fe,
      "aria-hidden": !0,
      onChange: Ne,
      tabIndex: -1,
      disabled: C,
      className: ht.nativeInput,
      autoFocus: u,
      required: G,
      ...ne,
      ownerState: Me
    }), /* @__PURE__ */ A.jsx(HX, {
      as: O,
      className: ht.icon,
      ownerState: Me
    }), /* @__PURE__ */ A.jsx(Yj, {
      id: `menu-${_ || ""}`,
      anchorEl: ue,
      open: wt,
      onClose: He,
      anchorOrigin: {
        vertical: "bottom",
        horizontal: "center"
      },
      transformOrigin: {
        vertical: "top",
        horizontal: "center"
      },
      ...L,
      slotProps: {
        ...L.slotProps,
        list: {
          "aria-labelledby": k,
          role: "listbox",
          "aria-multiselectable": F ? "true" : void 0,
          disableListWrap: !0,
          id: zt,
          ...L.MenuListProps
        },
        paper: {
          ...xt,
          style: {
            minWidth: vt,
            ...xt != null ? xt.style : null
          }
        }
      },
      children: Lt
    })]
  });
});
process.env.NODE_ENV !== "production" && (t2.propTypes = {
  /**
   * @ignore
   */
  "aria-describedby": a.string,
  /**
   * @ignore
   */
  "aria-label": a.string,
  /**
   * @ignore
   */
  autoFocus: a.bool,
  /**
   * If `true`, the width of the popover will automatically be set according to the items inside the
   * menu, otherwise it will be at least the width of the select input.
   */
  autoWidth: a.bool,
  /**
   * The option elements to populate the select with.
   * Can be some `<MenuItem>` elements.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * The CSS class name of the select element.
   */
  className: a.string,
  /**
   * If `true`, the component is toggled on mount. Use when the component open state is not controlled.
   * You can only use it when the `native` prop is `false` (default).
   */
  defaultOpen: a.bool,
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: a.any,
  /**
   * If `true`, the select is disabled.
   */
  disabled: a.bool,
  /**
   * If `true`, the selected item is displayed even if its value is empty.
   */
  displayEmpty: a.bool,
  /**
   * If `true`, the `select input` will indicate an error.
   */
  error: a.bool,
  /**
   * The icon that displays the arrow.
   */
  IconComponent: a.elementType.isRequired,
  /**
   * Imperative handle implementing `{ value: T, node: HTMLElement, focus(): void }`
   * Equivalent to `ref`
   */
  inputRef: Ea,
  /**
   * The ID of an element that acts as an additional label. The Select will
   * be labelled by the additional label and the selected value.
   */
  labelId: a.string,
  /**
   * Props applied to the [`Menu`](/material-ui/api/menu/) element.
   */
  MenuProps: a.object,
  /**
   * If `true`, `value` must be an array and the menu will support multiple selections.
   */
  multiple: a.bool,
  /**
   * Name attribute of the `select` or hidden `input` element.
   */
  name: a.string,
  /**
   * @ignore
   */
  onBlur: a.func,
  /**
   * Callback fired when a menu item is selected.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (any).
   * @param {object} [child] The react element that was selected.
   */
  onChange: a.func,
  /**
   * Callback fired when the component requests to be closed.
   * Use in controlled mode (see open).
   *
   * @param {object} event The event source of the callback.
   */
  onClose: a.func,
  /**
   * @ignore
   */
  onFocus: a.func,
  /**
   * Callback fired when the component requests to be opened.
   * Use in controlled mode (see open).
   *
   * @param {object} event The event source of the callback.
   */
  onOpen: a.func,
  /**
   * If `true`, the component is shown.
   */
  open: a.bool,
  /**
   * @ignore
   */
  readOnly: a.bool,
  /**
   * Render the selected value.
   *
   * @param {any} value The `value` provided to the component.
   * @returns {ReactNode}
   */
  renderValue: a.func,
  /**
   * If `true`, the component is required.
   */
  required: a.bool,
  /**
   * Props applied to the clickable div element.
   */
  SelectDisplayProps: a.object,
  /**
   * @ignore
   */
  tabIndex: a.oneOfType([a.number, a.string]),
  /**
   * @ignore
   */
  type: a.any,
  /**
   * The input value.
   */
  value: a.any,
  /**
   * The variant to use.
   */
  variant: a.oneOf(["standard", "outlined", "filled"])
});
const GX = (e) => {
  const {
    classes: t
  } = e, i = yt({
    root: ["root"]
  }, e2, t);
  return {
    ...t,
    ...i
  };
}, jP = {
  name: "MuiSelect",
  overridesResolver: (e, t) => t.root,
  shouldForwardProp: (e) => Ya(e) && e !== "variant",
  slot: "Root"
}, WX = Ue(ME, jP)(""), qX = Ue(IE, jP)(""), KX = Ue(PE, jP)(""), tv = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const i = Tn({
    name: "MuiSelect",
    props: t
  }), {
    autoWidth: s = !1,
    children: u,
    classes: d = {},
    className: p,
    defaultOpen: m = !1,
    displayEmpty: v = !1,
    IconComponent: y = kj,
    id: C,
    input: w,
    inputProps: R,
    label: O,
    labelId: E,
    MenuProps: k,
    multiple: L = !1,
    native: F = !1,
    onClose: _,
    onOpen: P,
    open: D,
    renderValue: z,
    SelectDisplayProps: K,
    variant: Q = "outlined",
    ...H
  } = i, I = F ? Jj : t2, U = Xc(), G = gh({
    props: i,
    muiFormControl: U,
    states: ["variant", "error"]
  }), Y = G.variant || Q, te = {
    ...i,
    variant: Y,
    classes: d
  }, B = GX(te), {
    root: W,
    ...q
  } = B, ne = w || {
    standard: /* @__PURE__ */ A.jsx(WX, {
      ownerState: te
    }),
    outlined: /* @__PURE__ */ A.jsx(qX, {
      label: O,
      ownerState: te
    }),
    filled: /* @__PURE__ */ A.jsx(KX, {
      ownerState: te
    })
  }[Y], re = Vr(n, mh(ne));
  return /* @__PURE__ */ A.jsx(S.Fragment, {
    children: /* @__PURE__ */ S.cloneElement(ne, {
      // Most of the logic is implemented in `SelectInput`.
      // The `Select` component is a simple API wrapper to expose something better to play with.
      inputComponent: I,
      inputProps: {
        children: u,
        error: G.error,
        IconComponent: y,
        variant: Y,
        type: void 0,
        // We render a select. We can ignore the type provided by the `Input`.
        multiple: L,
        ...F ? {
          id: C
        } : {
          autoWidth: s,
          defaultOpen: m,
          displayEmpty: v,
          labelId: E,
          MenuProps: k,
          onClose: _,
          onOpen: P,
          open: D,
          renderValue: z,
          SelectDisplayProps: {
            id: C,
            ...K
          }
        },
        ...R,
        classes: R ? aa(q, R.classes) : q,
        ...w ? w.props.inputProps : {}
      },
      ...(L && F || v) && Y === "outlined" ? {
        notched: !0
      } : {},
      ref: re,
      className: nt(ne.props.className, p, B.root),
      // If a custom input is provided via 'input' prop, do not allow 'variant' to be propagated to it's root element. See https://github.com/mui/material-ui/issues/33894.
      ...!w && {
        variant: Y
      },
      ...H
    })
  });
});
process.env.NODE_ENV !== "production" && (tv.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the width of the popover will automatically be set according to the items inside the
   * menu, otherwise it will be at least the width of the select input.
   * @default false
   */
  autoWidth: a.bool,
  /**
   * The option elements to populate the select with.
   * Can be some `MenuItem` when `native` is false and `option` when `native` is true.
   *
   * ⚠️The `MenuItem` elements **must** be direct descendants when `native` is false.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   * @default {}
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * If `true`, the component is initially open. Use when the component open state is not controlled (i.e. the `open` prop is not defined).
   * You can only use it when the `native` prop is `false` (default).
   * @default false
   */
  defaultOpen: a.bool,
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: a.any,
  /**
   * If `true`, a value is displayed even if no items are selected.
   *
   * In order to display a meaningful value, a function can be passed to the `renderValue` prop which
   * returns the value to be displayed when no items are selected.
   *
   * ⚠️ When using this prop, make sure the label doesn't overlap with the empty displayed value.
   * The label should either be hidden or forced to a shrunk state.
   * @default false
   */
  displayEmpty: a.bool,
  /**
   * The icon that displays the arrow.
   * @default ArrowDropDownIcon
   */
  IconComponent: a.elementType,
  /**
   * The `id` of the wrapper element or the `select` element when `native`.
   */
  id: a.string,
  /**
   * An `Input` element; does not have to be a material-ui specific `Input`.
   */
  input: a.element,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * When `native` is `true`, the attributes are applied on the `select` element.
   */
  inputProps: a.object,
  /**
   * See [OutlinedInput#label](https://mui.com/material-ui/api/outlined-input/#props)
   */
  label: a.node,
  /**
   * The ID of an element that acts as an additional label. The Select will
   * be labelled by the additional label and the selected value.
   */
  labelId: a.string,
  /**
   * Props applied to the [`Menu`](https://mui.com/material-ui/api/menu/) element.
   */
  MenuProps: a.object,
  /**
   * If `true`, `value` must be an array and the menu will support multiple selections.
   * @default false
   */
  multiple: a.bool,
  /**
   * If `true`, the component uses a native `select` element.
   * @default false
   */
  native: a.bool,
  /**
   * Callback fired when a menu item is selected.
   *
   * @param {SelectChangeEvent<Value>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (any).
   * **Warning**: This is a generic event, not a change event, unless the change event is caused by browser autofill.
   * @param {object} [child] The react element that was selected when `native` is `false` (default).
   */
  onChange: a.func,
  /**
   * Callback fired when the component requests to be closed.
   * Use it in either controlled (see the `open` prop), or uncontrolled mode (to detect when the Select collapses).
   *
   * @param {object} event The event source of the callback.
   */
  onClose: a.func,
  /**
   * Callback fired when the component requests to be opened.
   * Use it in either controlled (see the `open` prop), or uncontrolled mode (to detect when the Select expands).
   *
   * @param {object} event The event source of the callback.
   */
  onOpen: a.func,
  /**
   * If `true`, the component is shown.
   * You can only use it when the `native` prop is `false` (default).
   */
  open: a.bool,
  /**
   * Render the selected value.
   * You can only use it when the `native` prop is `false` (default).
   *
   * @param {any} value The `value` provided to the component.
   * @returns {ReactNode}
   */
  renderValue: a.func,
  /**
   * Props applied to the clickable div element.
   */
  SelectDisplayProps: a.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The `input` value. Providing an empty string will select no options.
   * Set to an empty string `''` if you don't want any of the available options to be selected.
   *
   * If the value is an object it must have reference equality with the option in order to be selected.
   * If the value is not an object, the string representation must match with the string representation of the option in order to be selected.
   */
  value: a.oneOfType([a.oneOf([""]), a.any]),
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: a.oneOf(["filled", "outlined", "standard"])
});
tv.muiName = "Select";
function YX(e) {
  return yn("MuiSkeleton", e);
}
bn("MuiSkeleton", ["root", "text", "rectangular", "rounded", "circular", "pulse", "wave", "withChildren", "fitContent", "heightAuto"]);
const XX = (e) => {
  const {
    classes: t,
    variant: n,
    animation: i,
    hasChildren: s,
    width: u,
    height: d
  } = e;
  return yt({
    root: ["root", n, i, s && "withChildren", s && !u && "fitContent", s && !d && "heightAuto"]
  }, YX, t);
}, Mk = Ku`
  0% {
    opacity: 1;
  }

  50% {
    opacity: 0.4;
  }

  100% {
    opacity: 1;
  }
`, Ik = Ku`
  0% {
    transform: translateX(-100%);
  }

  50% {
    /* +0.5s of delay between each loop */
    transform: translateX(100%);
  }

  100% {
    transform: translateX(100%);
  }
`, QX = typeof Mk != "string" ? wf`
        animation: ${Mk} 2s ease-in-out 0.5s infinite;
      ` : null, JX = typeof Ik != "string" ? wf`
        &::after {
          animation: ${Ik} 2s linear 0.5s infinite;
        }
      ` : null, ZX = Ue("span", {
  name: "MuiSkeleton",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[n.variant], n.animation !== !1 && t[n.animation], n.hasChildren && t.withChildren, n.hasChildren && !n.width && t.fitContent, n.hasChildren && !n.height && t.heightAuto];
  }
})(rn(({
  theme: e
}) => {
  const t = g8(e.shape.borderRadius) || "px", n = v8(e.shape.borderRadius);
  return {
    display: "block",
    // Create a "on paper" color with sufficient contrast retaining the color
    backgroundColor: e.vars ? e.vars.palette.Skeleton.bg : $n(e.palette.text.primary, e.palette.mode === "light" ? 0.11 : 0.13),
    height: "1.2em",
    variants: [{
      props: {
        variant: "text"
      },
      style: {
        marginTop: 0,
        marginBottom: 0,
        height: "auto",
        transformOrigin: "0 55%",
        transform: "scale(1, 0.60)",
        borderRadius: `${n}${t}/${Math.round(n / 0.6 * 10) / 10}${t}`,
        "&:empty:before": {
          content: '"\\00a0"'
        }
      }
    }, {
      props: {
        variant: "circular"
      },
      style: {
        borderRadius: "50%"
      }
    }, {
      props: {
        variant: "rounded"
      },
      style: {
        borderRadius: (e.vars || e).shape.borderRadius
      }
    }, {
      props: ({
        ownerState: i
      }) => i.hasChildren,
      style: {
        "& > *": {
          visibility: "hidden"
        }
      }
    }, {
      props: ({
        ownerState: i
      }) => i.hasChildren && !i.width,
      style: {
        maxWidth: "fit-content"
      }
    }, {
      props: ({
        ownerState: i
      }) => i.hasChildren && !i.height,
      style: {
        height: "auto"
      }
    }, {
      props: {
        animation: "pulse"
      },
      style: QX || {
        animation: `${Mk} 2s ease-in-out 0.5s infinite`
      }
    }, {
      props: {
        animation: "wave"
      },
      style: {
        position: "relative",
        overflow: "hidden",
        /* Fix bug in Safari https://bugs.webkit.org/show_bug.cgi?id=68196 */
        WebkitMaskImage: "-webkit-radial-gradient(white, black)",
        "&::after": {
          background: `linear-gradient(
                90deg,
                transparent,
                ${(e.vars || e).palette.action.hover},
                transparent
              )`,
          content: '""',
          position: "absolute",
          transform: "translateX(-100%)",
          bottom: 0,
          left: 0,
          right: 0,
          top: 0
        }
      }
    }, {
      props: {
        animation: "wave"
      },
      style: JX || {
        "&::after": {
          animation: `${Ik} 2s linear 0.5s infinite`
        }
      }
    }]
  };
})), n2 = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const i = Tn({
    props: t,
    name: "MuiSkeleton"
  }), {
    animation: s = "pulse",
    className: u,
    component: d = "span",
    height: p,
    style: m,
    variant: v = "text",
    width: y,
    ...C
  } = i, w = {
    ...i,
    animation: s,
    component: d,
    variant: v,
    hasChildren: !!C.children
  }, R = XX(w);
  return /* @__PURE__ */ A.jsx(ZX, {
    as: d,
    ref: n,
    className: nt(R.root, u),
    ownerState: w,
    ...C,
    style: {
      width: y,
      height: p,
      ...m
    }
  });
});
process.env.NODE_ENV !== "production" && (n2.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The animation.
   * If `false` the animation effect is disabled.
   * @default 'pulse'
   */
  animation: a.oneOf(["pulse", "wave", !1]),
  /**
   * Optional children to infer width and height from.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * Height of the skeleton.
   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.
   */
  height: a.oneOfType([a.number, a.string]),
  /**
   * @ignore
   */
  style: a.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The type of content that will be rendered.
   * @default 'text'
   */
  variant: a.oneOfType([a.oneOf(["circular", "rectangular", "rounded", "text"]), a.string]),
  /**
   * Width of the skeleton.
   * Useful when the skeleton is inside an inline element with no width of its own.
   */
  width: a.oneOfType([a.number, a.string])
});
function eQ(e) {
  return yn("MuiTooltip", e);
}
const ko = bn("MuiTooltip", ["popper", "popperInteractive", "popperArrow", "popperClose", "tooltip", "tooltipArrow", "touch", "tooltipPlacementLeft", "tooltipPlacementRight", "tooltipPlacementTop", "tooltipPlacementBottom", "arrow"]);
function tQ(e) {
  return Math.round(e * 1e5) / 1e5;
}
const nQ = (e) => {
  const {
    classes: t,
    disableInteractive: n,
    arrow: i,
    touch: s,
    placement: u
  } = e, d = {
    popper: ["popper", !n && "popperInteractive", i && "popperArrow"],
    tooltip: ["tooltip", i && "tooltipArrow", s && "touch", `tooltipPlacement${Be(u.split("-")[0])}`],
    arrow: ["arrow"]
  };
  return yt(d, eQ, t);
}, rQ = Ue(Tf, {
  name: "MuiTooltip",
  slot: "Popper",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.popper, !n.disableInteractive && t.popperInteractive, n.arrow && t.popperArrow, !n.open && t.popperClose];
  }
})(rn(({
  theme: e
}) => ({
  zIndex: (e.vars || e).zIndex.tooltip,
  pointerEvents: "none",
  variants: [{
    props: ({
      ownerState: t
    }) => !t.disableInteractive,
    style: {
      pointerEvents: "auto"
    }
  }, {
    props: ({
      open: t
    }) => !t,
    style: {
      pointerEvents: "none"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.arrow,
    style: {
      [`&[data-popper-placement*="bottom"] .${ko.arrow}`]: {
        top: 0,
        marginTop: "-0.71em",
        "&::before": {
          transformOrigin: "0 100%"
        }
      },
      [`&[data-popper-placement*="top"] .${ko.arrow}`]: {
        bottom: 0,
        marginBottom: "-0.71em",
        "&::before": {
          transformOrigin: "100% 0"
        }
      },
      [`&[data-popper-placement*="right"] .${ko.arrow}`]: {
        height: "1em",
        width: "0.71em",
        "&::before": {
          transformOrigin: "100% 100%"
        }
      },
      [`&[data-popper-placement*="left"] .${ko.arrow}`]: {
        height: "1em",
        width: "0.71em",
        "&::before": {
          transformOrigin: "0 0"
        }
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.arrow && !t.isRtl,
    style: {
      [`&[data-popper-placement*="right"] .${ko.arrow}`]: {
        left: 0,
        marginLeft: "-0.71em"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.arrow && !!t.isRtl,
    style: {
      [`&[data-popper-placement*="right"] .${ko.arrow}`]: {
        right: 0,
        marginRight: "-0.71em"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.arrow && !t.isRtl,
    style: {
      [`&[data-popper-placement*="left"] .${ko.arrow}`]: {
        right: 0,
        marginRight: "-0.71em"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.arrow && !!t.isRtl,
    style: {
      [`&[data-popper-placement*="left"] .${ko.arrow}`]: {
        left: 0,
        marginLeft: "-0.71em"
      }
    }
  }]
}))), oQ = Ue("div", {
  name: "MuiTooltip",
  slot: "Tooltip",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.tooltip, n.touch && t.touch, n.arrow && t.tooltipArrow, t[`tooltipPlacement${Be(n.placement.split("-")[0])}`]];
  }
})(rn(({
  theme: e
}) => ({
  backgroundColor: e.vars ? e.vars.palette.Tooltip.bg : $n(e.palette.grey[700], 0.92),
  borderRadius: (e.vars || e).shape.borderRadius,
  color: (e.vars || e).palette.common.white,
  fontFamily: e.typography.fontFamily,
  padding: "4px 8px",
  fontSize: e.typography.pxToRem(11),
  maxWidth: 300,
  margin: 2,
  wordWrap: "break-word",
  fontWeight: e.typography.fontWeightMedium,
  [`.${ko.popper}[data-popper-placement*="left"] &`]: {
    transformOrigin: "right center"
  },
  [`.${ko.popper}[data-popper-placement*="right"] &`]: {
    transformOrigin: "left center"
  },
  [`.${ko.popper}[data-popper-placement*="top"] &`]: {
    transformOrigin: "center bottom",
    marginBottom: "14px"
  },
  [`.${ko.popper}[data-popper-placement*="bottom"] &`]: {
    transformOrigin: "center top",
    marginTop: "14px"
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.arrow,
    style: {
      position: "relative",
      margin: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.touch,
    style: {
      padding: "8px 16px",
      fontSize: e.typography.pxToRem(14),
      lineHeight: `${tQ(16 / 14)}em`,
      fontWeight: e.typography.fontWeightRegular
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.isRtl,
    style: {
      [`.${ko.popper}[data-popper-placement*="left"] &`]: {
        marginRight: "14px"
      },
      [`.${ko.popper}[data-popper-placement*="right"] &`]: {
        marginLeft: "14px"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.isRtl && t.touch,
    style: {
      [`.${ko.popper}[data-popper-placement*="left"] &`]: {
        marginRight: "24px"
      },
      [`.${ko.popper}[data-popper-placement*="right"] &`]: {
        marginLeft: "24px"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => !!t.isRtl,
    style: {
      [`.${ko.popper}[data-popper-placement*="left"] &`]: {
        marginLeft: "14px"
      },
      [`.${ko.popper}[data-popper-placement*="right"] &`]: {
        marginRight: "14px"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => !!t.isRtl && t.touch,
    style: {
      [`.${ko.popper}[data-popper-placement*="left"] &`]: {
        marginLeft: "24px"
      },
      [`.${ko.popper}[data-popper-placement*="right"] &`]: {
        marginRight: "24px"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.touch,
    style: {
      [`.${ko.popper}[data-popper-placement*="top"] &`]: {
        marginBottom: "24px"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.touch,
    style: {
      [`.${ko.popper}[data-popper-placement*="bottom"] &`]: {
        marginTop: "24px"
      }
    }
  }]
}))), iQ = Ue("span", {
  name: "MuiTooltip",
  slot: "Arrow",
  overridesResolver: (e, t) => t.arrow
})(rn(({
  theme: e
}) => ({
  overflow: "hidden",
  position: "absolute",
  width: "1em",
  height: "0.71em",
  boxSizing: "border-box",
  color: e.vars ? e.vars.palette.Tooltip.bg : $n(e.palette.grey[700], 0.9),
  "&::before": {
    content: '""',
    margin: "auto",
    display: "block",
    width: "100%",
    height: "100%",
    backgroundColor: "currentColor",
    transform: "rotate(45deg)"
  }
})));
let Jx = !1;
const r_ = new CE();
let Ob = {
  x: 0,
  y: 0
};
function Zx(e, t) {
  return (n, ...i) => {
    t && t(n, ...i), e(n, ...i);
  };
}
const r2 = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const i = Tn({
    props: t,
    name: "MuiTooltip"
  }), {
    arrow: s = !1,
    children: u,
    classes: d,
    components: p = {},
    componentsProps: m = {},
    describeChild: v = !1,
    disableFocusListener: y = !1,
    disableHoverListener: C = !1,
    disableInteractive: w = !1,
    disableTouchListener: R = !1,
    enterDelay: O = 100,
    enterNextDelay: E = 0,
    enterTouchDelay: k = 700,
    followCursor: L = !1,
    id: F,
    leaveDelay: _ = 0,
    leaveTouchDelay: P = 1500,
    onClose: D,
    onOpen: z,
    open: K,
    placement: Q = "bottom",
    PopperComponent: H,
    PopperProps: I = {},
    slotProps: U = {},
    slots: G = {},
    title: Y,
    TransitionComponent: te,
    TransitionProps: B,
    ...W
  } = i, q = /* @__PURE__ */ S.isValidElement(u) ? u : /* @__PURE__ */ A.jsx("span", {
    children: u
  }), ne = ev(), re = ji(), [X, j] = S.useState(), [ie, fe] = S.useState(null), ce = S.useRef(!1), me = w || L, ge = ps(), de = ps(), pe = ps(), be = ps(), [Ce, Re] = oh({
    controlled: K,
    default: !1,
    name: "Tooltip",
    state: "open"
  });
  let ue = Ce;
  if (process.env.NODE_ENV !== "production") {
    const {
      current: Ut
    } = S.useRef(K !== void 0);
    S.useEffect(() => {
      X && X.disabled && !Ut && Y !== "" && X.tagName.toLowerCase() === "button" && console.warn(["MUI: You are providing a disabled `button` child to the Tooltip component.", "A disabled element does not fire events.", "Tooltip needs to listen to the child element's events to display the title.", "", "Add a simple wrapper element, such as a `span`."].join(`
`));
    }, [Y, X, Ut]);
  }
  const we = Sr(F), _e = S.useRef(), He = Nn(() => {
    _e.current !== void 0 && (document.body.style.WebkitUserSelect = _e.current, _e.current = void 0), be.clear();
  });
  S.useEffect(() => He, [He]);
  const et = (Ut) => {
    r_.clear(), Jx = !0, Re(!0), z && !ue && z(Ut);
  }, Ne = Nn(
    /**
     * @param {React.SyntheticEvent | Event} event
     */
    (Ut) => {
      r_.start(800 + _, () => {
        Jx = !1;
      }), Re(!1), D && ue && D(Ut), ge.start(ne.transitions.duration.shortest, () => {
        ce.current = !1;
      });
    }
  ), rt = (Ut) => {
    ce.current && Ut.type !== "touchstart" || (X && X.removeAttribute("title"), de.clear(), pe.clear(), O || Jx && E ? de.start(Jx ? E : O, () => {
      et(Ut);
    }) : et(Ut));
  }, it = (Ut) => {
    de.clear(), pe.start(_, () => {
      Ne(Ut);
    });
  }, [, wt] = S.useState(!1), gt = (Ut) => {
    E0(Ut.target) || (wt(!1), it(Ut));
  }, ot = (Ut) => {
    X || j(Ut.currentTarget), E0(Ut.target) && (wt(!0), rt(Ut));
  }, jt = (Ut) => {
    ce.current = !0;
    const dr = q.props;
    dr.onTouchStart && dr.onTouchStart(Ut);
  }, ct = (Ut) => {
    jt(Ut), pe.clear(), ge.clear(), He(), _e.current = document.body.style.WebkitUserSelect, document.body.style.WebkitUserSelect = "none", be.start(k, () => {
      document.body.style.WebkitUserSelect = _e.current, rt(Ut);
    });
  }, Tt = (Ut) => {
    q.props.onTouchEnd && q.props.onTouchEnd(Ut), He(), pe.start(P, () => {
      Ne(Ut);
    });
  };
  S.useEffect(() => {
    if (!ue)
      return;
    function Ut(dr) {
      dr.key === "Escape" && Ne(dr);
    }
    return document.addEventListener("keydown", Ut), () => {
      document.removeEventListener("keydown", Ut);
    };
  }, [Ne, ue]);
  const Rt = Vr(mh(q), j, n);
  !Y && Y !== 0 && (ue = !1);
  const Lt = S.useRef(), vt = (Ut) => {
    const dr = q.props;
    dr.onMouseMove && dr.onMouseMove(Ut), Ob = {
      x: Ut.clientX,
      y: Ut.clientY
    }, Lt.current && Lt.current.update();
  }, Qe = {}, Oe = typeof Y == "string";
  v ? (Qe.title = !ue && Oe && !C ? Y : null, Qe["aria-describedby"] = ue ? we : null) : (Qe["aria-label"] = Oe ? Y : null, Qe["aria-labelledby"] = ue && !Oe ? we : null);
  const Me = {
    ...Qe,
    ...W,
    ...q.props,
    className: nt(W.className, q.props.className),
    onTouchStart: jt,
    ref: Rt,
    ...L ? {
      onMouseMove: vt
    } : {}
  };
  process.env.NODE_ENV !== "production" && (Me["data-mui-internal-clone-element"] = !0, S.useEffect(() => {
    X && !X.getAttribute("data-mui-internal-clone-element") && console.error(["MUI: The `children` component of the Tooltip is not forwarding its props correctly.", "Please make sure that props are spread on the same element that the ref is applied to."].join(`
`));
  }, [X]));
  const ht = {};
  R || (Me.onTouchStart = ct, Me.onTouchEnd = Tt), C || (Me.onMouseOver = Zx(rt, Me.onMouseOver), Me.onMouseLeave = Zx(it, Me.onMouseLeave), me || (ht.onMouseOver = rt, ht.onMouseLeave = it)), y || (Me.onFocus = Zx(ot, Me.onFocus), Me.onBlur = Zx(gt, Me.onBlur), me || (ht.onFocus = ot, ht.onBlur = gt)), process.env.NODE_ENV !== "production" && q.props.title && console.error(["MUI: You have provided a `title` prop to the child of <Tooltip />.", `Remove this title prop \`${q.props.title}\` or the Tooltip component.`].join(`
`));
  const xt = {
    ...i,
    isRtl: re,
    arrow: s,
    disableInteractive: me,
    placement: Q,
    PopperComponentProp: H,
    touch: ce.current
  }, zt = typeof U.popper == "function" ? U.popper(xt) : U.popper, bt = S.useMemo(() => {
    var dr, Ct;
    let Ut = [{
      name: "arrow",
      enabled: !!ie,
      options: {
        element: ie,
        padding: 4
      }
    }];
    return (dr = I.popperOptions) != null && dr.modifiers && (Ut = Ut.concat(I.popperOptions.modifiers)), (Ct = zt == null ? void 0 : zt.popperOptions) != null && Ct.modifiers && (Ut = Ut.concat(zt.popperOptions.modifiers)), {
      ...I.popperOptions,
      ...zt == null ? void 0 : zt.popperOptions,
      modifiers: Ut
    };
  }, [ie, I.popperOptions, zt == null ? void 0 : zt.popperOptions]), Ge = nQ(xt), Et = typeof U.transition == "function" ? U.transition(xt) : U.transition, At = {
    slots: {
      popper: p.Popper,
      transition: p.Transition ?? te,
      tooltip: p.Tooltip,
      arrow: p.Arrow,
      ...G
    },
    slotProps: {
      arrow: U.arrow ?? m.arrow,
      popper: {
        ...I,
        ...zt ?? m.popper
      },
      // resolvedPopperProps can be spread because it's already an object
      tooltip: U.tooltip ?? m.tooltip,
      transition: {
        ...B,
        ...Et ?? m.transition
      }
    }
  }, [pn, fn] = vn("popper", {
    elementType: rQ,
    externalForwardedProps: At,
    ownerState: xt,
    className: nt(Ge.popper, I == null ? void 0 : I.className)
  }), [hr, qn] = vn("transition", {
    elementType: Wg,
    externalForwardedProps: At,
    ownerState: xt
  }), [Dr, mr] = vn("tooltip", {
    elementType: oQ,
    className: Ge.tooltip,
    externalForwardedProps: At,
    ownerState: xt
  }), [Po, Mo] = vn("arrow", {
    elementType: iQ,
    className: Ge.arrow,
    externalForwardedProps: At,
    ownerState: xt,
    ref: fe
  });
  return /* @__PURE__ */ A.jsxs(S.Fragment, {
    children: [/* @__PURE__ */ S.cloneElement(q, Me), /* @__PURE__ */ A.jsx(pn, {
      as: H ?? Tf,
      placement: Q,
      anchorEl: L ? {
        getBoundingClientRect: () => ({
          top: Ob.y,
          left: Ob.x,
          right: Ob.x,
          bottom: Ob.y,
          width: 0,
          height: 0
        })
      } : X,
      popperRef: Lt,
      open: X ? ue : !1,
      id: we,
      transition: !0,
      ...ht,
      ...fn,
      popperOptions: bt,
      children: ({
        TransitionProps: Ut
      }) => /* @__PURE__ */ A.jsx(hr, {
        timeout: ne.transitions.duration.shorter,
        ...Ut,
        ...qn,
        children: /* @__PURE__ */ A.jsxs(Dr, {
          ...mr,
          children: [Y, s ? /* @__PURE__ */ A.jsx(Po, {
            ...Mo
          }) : null]
        })
      })
    })]
  });
});
process.env.NODE_ENV !== "production" && (r2.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, adds an arrow to the tooltip.
   * @default false
   */
  arrow: a.bool,
  /**
   * Tooltip reference element.
   */
  children: hh.isRequired,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: a.shape({
    Arrow: a.elementType,
    Popper: a.elementType,
    Tooltip: a.elementType,
    Transition: a.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: a.shape({
    arrow: a.object,
    popper: a.object,
    tooltip: a.object,
    transition: a.object
  }),
  /**
   * Set to `true` if the `title` acts as an accessible description.
   * By default the `title` acts as an accessible label for the child.
   * @default false
   */
  describeChild: a.bool,
  /**
   * Do not respond to focus-visible events.
   * @default false
   */
  disableFocusListener: a.bool,
  /**
   * Do not respond to hover events.
   * @default false
   */
  disableHoverListener: a.bool,
  /**
   * Makes a tooltip not interactive, i.e. it will close when the user
   * hovers over the tooltip before the `leaveDelay` is expired.
   * @default false
   */
  disableInteractive: a.bool,
  /**
   * Do not respond to long press touch events.
   * @default false
   */
  disableTouchListener: a.bool,
  /**
   * The number of milliseconds to wait before showing the tooltip.
   * This prop won't impact the enter touch delay (`enterTouchDelay`).
   * @default 100
   */
  enterDelay: a.number,
  /**
   * The number of milliseconds to wait before showing the tooltip when one was already recently opened.
   * @default 0
   */
  enterNextDelay: a.number,
  /**
   * The number of milliseconds a user must touch the element before showing the tooltip.
   * @default 700
   */
  enterTouchDelay: a.number,
  /**
   * If `true`, the tooltip follow the cursor over the wrapped element.
   * @default false
   */
  followCursor: a.bool,
  /**
   * This prop is used to help implement the accessibility logic.
   * If you don't provide this prop. It falls back to a randomly generated id.
   */
  id: a.string,
  /**
   * The number of milliseconds to wait before hiding the tooltip.
   * This prop won't impact the leave touch delay (`leaveTouchDelay`).
   * @default 0
   */
  leaveDelay: a.number,
  /**
   * The number of milliseconds after the user stops touching an element before hiding the tooltip.
   * @default 1500
   */
  leaveTouchDelay: a.number,
  /**
   * Callback fired when the component requests to be closed.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   */
  onClose: a.func,
  /**
   * Callback fired when the component requests to be open.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   */
  onOpen: a.func,
  /**
   * If `true`, the component is shown.
   */
  open: a.bool,
  /**
   * Tooltip placement.
   * @default 'bottom'
   */
  placement: a.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  /**
   * The component used for the popper.
   * @deprecated use the `slots.popper` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  PopperComponent: a.elementType,
  /**
   * Props applied to the [`Popper`](https://mui.com/material-ui/api/popper/) element.
   * @deprecated use the `slotProps.popper` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  PopperProps: a.object,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    arrow: a.oneOfType([a.func, a.object]),
    popper: a.oneOfType([a.func, a.object]),
    tooltip: a.oneOfType([a.func, a.object]),
    transition: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    arrow: a.elementType,
    popper: a.elementType,
    tooltip: a.elementType,
    transition: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * Tooltip title. Zero-length titles string, undefined, null and false are never displayed.
   */
  title: a.node,
  /**
   * The component used for the transition.
   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @deprecated use the `slots.transition` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  TransitionComponent: a.elementType,
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @deprecated use the `slotProps.transition` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  TransitionProps: a.object
});
function aQ(e) {
  return yn("MuiTab", e);
}
const Gs = bn("MuiTab", ["root", "labelIcon", "textColorInherit", "textColorPrimary", "textColorSecondary", "selected", "disabled", "fullWidth", "wrapped", "iconWrapper", "icon"]), sQ = (e) => {
  const {
    classes: t,
    textColor: n,
    fullWidth: i,
    wrapped: s,
    icon: u,
    label: d,
    selected: p,
    disabled: m
  } = e, v = {
    root: ["root", u && d && "labelIcon", `textColor${Be(n)}`, i && "fullWidth", s && "wrapped", p && "selected", m && "disabled"],
    icon: ["iconWrapper", "icon"]
  };
  return yt(v, aQ, t);
}, lQ = Ue(Kc, {
  name: "MuiTab",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.label && n.icon && t.labelIcon, t[`textColor${Be(n.textColor)}`], n.fullWidth && t.fullWidth, n.wrapped && t.wrapped, {
      [`& .${Gs.iconWrapper}`]: t.iconWrapper
    }, {
      [`& .${Gs.icon}`]: t.icon
    }];
  }
})(rn(({
  theme: e
}) => ({
  ...e.typography.button,
  maxWidth: 360,
  minWidth: 90,
  position: "relative",
  minHeight: 48,
  flexShrink: 0,
  padding: "12px 16px",
  overflow: "hidden",
  whiteSpace: "normal",
  textAlign: "center",
  lineHeight: 1.25,
  variants: [{
    props: ({
      ownerState: t
    }) => t.label && (t.iconPosition === "top" || t.iconPosition === "bottom"),
    style: {
      flexDirection: "column"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.label && t.iconPosition !== "top" && t.iconPosition !== "bottom",
    style: {
      flexDirection: "row"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.icon && t.label,
    style: {
      minHeight: 72,
      paddingTop: 9,
      paddingBottom: 9
    }
  }, {
    props: ({
      ownerState: t,
      iconPosition: n
    }) => t.icon && t.label && n === "top",
    style: {
      [`& > .${Gs.icon}`]: {
        marginBottom: 6
      }
    }
  }, {
    props: ({
      ownerState: t,
      iconPosition: n
    }) => t.icon && t.label && n === "bottom",
    style: {
      [`& > .${Gs.icon}`]: {
        marginTop: 6
      }
    }
  }, {
    props: ({
      ownerState: t,
      iconPosition: n
    }) => t.icon && t.label && n === "start",
    style: {
      [`& > .${Gs.icon}`]: {
        marginRight: e.spacing(1)
      }
    }
  }, {
    props: ({
      ownerState: t,
      iconPosition: n
    }) => t.icon && t.label && n === "end",
    style: {
      [`& > .${Gs.icon}`]: {
        marginLeft: e.spacing(1)
      }
    }
  }, {
    props: {
      textColor: "inherit"
    },
    style: {
      color: "inherit",
      opacity: 0.6,
      // same opacity as theme.palette.text.secondary
      [`&.${Gs.selected}`]: {
        opacity: 1
      },
      [`&.${Gs.disabled}`]: {
        opacity: (e.vars || e).palette.action.disabledOpacity
      }
    }
  }, {
    props: {
      textColor: "primary"
    },
    style: {
      color: (e.vars || e).palette.text.secondary,
      [`&.${Gs.selected}`]: {
        color: (e.vars || e).palette.primary.main
      },
      [`&.${Gs.disabled}`]: {
        color: (e.vars || e).palette.text.disabled
      }
    }
  }, {
    props: {
      textColor: "secondary"
    },
    style: {
      color: (e.vars || e).palette.text.secondary,
      [`&.${Gs.selected}`]: {
        color: (e.vars || e).palette.secondary.main
      },
      [`&.${Gs.disabled}`]: {
        color: (e.vars || e).palette.text.disabled
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.fullWidth,
    style: {
      flexShrink: 1,
      flexGrow: 1,
      flexBasis: 0,
      maxWidth: "none"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.wrapped,
    style: {
      fontSize: e.typography.pxToRem(12)
    }
  }]
}))), f0 = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const i = Tn({
    props: t,
    name: "MuiTab"
  }), {
    className: s,
    disabled: u = !1,
    disableFocusRipple: d = !1,
    // eslint-disable-next-line react/prop-types
    fullWidth: p,
    icon: m,
    iconPosition: v = "top",
    // eslint-disable-next-line react/prop-types
    indicator: y,
    label: C,
    onChange: w,
    onClick: R,
    onFocus: O,
    // eslint-disable-next-line react/prop-types
    selected: E,
    // eslint-disable-next-line react/prop-types
    selectionFollowsFocus: k,
    // eslint-disable-next-line react/prop-types
    textColor: L = "inherit",
    value: F,
    wrapped: _ = !1,
    ...P
  } = i, D = {
    ...i,
    disabled: u,
    disableFocusRipple: d,
    selected: E,
    icon: !!m,
    iconPosition: v,
    label: !!C,
    fullWidth: p,
    textColor: L,
    wrapped: _
  }, z = sQ(D), K = m && C && /* @__PURE__ */ S.isValidElement(m) ? /* @__PURE__ */ S.cloneElement(m, {
    className: nt(z.icon, m.props.className)
  }) : m, Q = (I) => {
    !E && w && w(I, F), R && R(I);
  }, H = (I) => {
    k && !E && w && w(I, F), O && O(I);
  };
  return /* @__PURE__ */ A.jsxs(lQ, {
    focusRipple: !d,
    className: nt(z.root, s),
    ref: n,
    role: "tab",
    "aria-selected": E,
    disabled: u,
    onClick: Q,
    onFocus: H,
    ownerState: D,
    tabIndex: E ? 0 : -1,
    ...P,
    children: [v === "top" || v === "start" ? /* @__PURE__ */ A.jsxs(S.Fragment, {
      children: [K, C]
    }) : /* @__PURE__ */ A.jsxs(S.Fragment, {
      children: [C, K]
    }), y]
  });
});
process.env.NODE_ENV !== "production" && (f0.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop isn't supported.
   * Use the `component` prop if you need to change the children structure.
   */
  children: H$,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: a.bool,
  /**
   * If `true`, the  keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: a.bool,
  /**
   * If `true`, the ripple effect is disabled.
   *
   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
   * @default false
   */
  disableRipple: a.bool,
  /**
   * The icon to display.
   */
  icon: a.oneOfType([a.element, a.string]),
  /**
   * The position of the icon relative to the label.
   * @default 'top'
   */
  iconPosition: a.oneOf(["bottom", "end", "start", "top"]),
  /**
   * The label element.
   */
  label: a.node,
  /**
   * @ignore
   */
  onChange: a.func,
  /**
   * @ignore
   */
  onClick: a.func,
  /**
   * @ignore
   */
  onFocus: a.func,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * You can provide your own value. Otherwise, we fallback to the child position index.
   */
  value: a.any,
  /**
   * Tab labels appear in a single row.
   * They can use a second line if needed.
   * @default false
   */
  wrapped: a.bool
});
const o2 = /* @__PURE__ */ S.createContext();
process.env.NODE_ENV !== "production" && (o2.displayName = "TableContext");
const i2 = /* @__PURE__ */ S.createContext();
process.env.NODE_ENV !== "production" && (i2.displayName = "Tablelvl2Context");
function uQ(e) {
  return yn("MuiTableCell", e);
}
const cQ = bn("MuiTableCell", ["root", "head", "body", "footer", "sizeSmall", "sizeMedium", "paddingCheckbox", "paddingNone", "alignLeft", "alignCenter", "alignRight", "alignJustify", "stickyHeader"]), dQ = (e) => {
  const {
    classes: t,
    variant: n,
    align: i,
    padding: s,
    size: u,
    stickyHeader: d
  } = e, p = {
    root: ["root", n, d && "stickyHeader", i !== "inherit" && `align${Be(i)}`, s !== "normal" && `padding${Be(s)}`, `size${Be(u)}`]
  };
  return yt(p, uQ, t);
}, fQ = Ue("td", {
  name: "MuiTableCell",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[n.variant], t[`size${Be(n.size)}`], n.padding !== "normal" && t[`padding${Be(n.padding)}`], n.align !== "inherit" && t[`align${Be(n.align)}`], n.stickyHeader && t.stickyHeader];
  }
})(rn(({
  theme: e
}) => ({
  ...e.typography.body2,
  display: "table-cell",
  verticalAlign: "inherit",
  // Workaround for a rendering bug with spanned columns in Chrome 62.0.
  // Removes the alpha (sets it to 1), and lightens or darkens the theme color.
  borderBottom: e.vars ? `1px solid ${e.vars.palette.TableCell.border}` : `1px solid
    ${e.palette.mode === "light" ? bf($n(e.palette.divider, 1), 0.88) : yf($n(e.palette.divider, 1), 0.68)}`,
  textAlign: "left",
  padding: 16,
  variants: [{
    props: {
      variant: "head"
    },
    style: {
      color: (e.vars || e).palette.text.primary,
      lineHeight: e.typography.pxToRem(24),
      fontWeight: e.typography.fontWeightMedium
    }
  }, {
    props: {
      variant: "body"
    },
    style: {
      color: (e.vars || e).palette.text.primary
    }
  }, {
    props: {
      variant: "footer"
    },
    style: {
      color: (e.vars || e).palette.text.secondary,
      lineHeight: e.typography.pxToRem(21),
      fontSize: e.typography.pxToRem(12)
    }
  }, {
    props: {
      size: "small"
    },
    style: {
      padding: "6px 16px",
      [`&.${cQ.paddingCheckbox}`]: {
        width: 24,
        // prevent the checkbox column from growing
        padding: "0 12px 0 16px",
        "& > *": {
          padding: 0
        }
      }
    }
  }, {
    props: {
      padding: "checkbox"
    },
    style: {
      width: 48,
      // prevent the checkbox column from growing
      padding: "0 0 0 4px"
    }
  }, {
    props: {
      padding: "none"
    },
    style: {
      padding: 0
    }
  }, {
    props: {
      align: "left"
    },
    style: {
      textAlign: "left"
    }
  }, {
    props: {
      align: "center"
    },
    style: {
      textAlign: "center"
    }
  }, {
    props: {
      align: "right"
    },
    style: {
      textAlign: "right",
      flexDirection: "row-reverse"
    }
  }, {
    props: {
      align: "justify"
    },
    style: {
      textAlign: "justify"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.stickyHeader,
    style: {
      position: "sticky",
      top: 0,
      zIndex: 2,
      backgroundColor: (e.vars || e).palette.background.default
    }
  }]
}))), _0 = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const i = Tn({
    props: t,
    name: "MuiTableCell"
  }), {
    align: s = "inherit",
    className: u,
    component: d,
    padding: p,
    scope: m,
    size: v,
    sortDirection: y,
    variant: C,
    ...w
  } = i, R = S.useContext(o2), O = S.useContext(i2), E = O && O.variant === "head";
  let k;
  d ? k = d : k = E ? "th" : "td";
  let L = m;
  k === "td" ? L = void 0 : !L && E && (L = "col");
  const F = C || O && O.variant, _ = {
    ...i,
    align: s,
    component: k,
    padding: p || (R && R.padding ? R.padding : "normal"),
    size: v || (R && R.size ? R.size : "medium"),
    sortDirection: y,
    stickyHeader: F === "head" && R && R.stickyHeader,
    variant: F
  }, P = dQ(_);
  let D = null;
  return y && (D = y === "asc" ? "ascending" : "descending"), /* @__PURE__ */ A.jsx(fQ, {
    as: k,
    ref: n,
    className: nt(P.root, u),
    "aria-sort": D,
    scope: L,
    ownerState: _,
    ...w
  });
});
process.env.NODE_ENV !== "production" && (_0.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Set the text-align on the table cell content.
   *
   * Monetary or generally number fields **should be right aligned** as that allows
   * you to add them up quickly in your head without having to worry about decimals.
   * @default 'inherit'
   */
  align: a.oneOf(["center", "inherit", "justify", "left", "right"]),
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * Sets the padding applied to the cell.
   * The prop defaults to the value (`'default'`) inherited from the parent Table component.
   */
  padding: a.oneOf(["checkbox", "none", "normal"]),
  /**
   * Set scope attribute.
   */
  scope: a.string,
  /**
   * Specify the size of the cell.
   * The prop defaults to the value (`'medium'`) inherited from the parent Table component.
   */
  size: a.oneOfType([a.oneOf(["medium", "small"]), a.string]),
  /**
   * Set aria-sort direction.
   */
  sortDirection: a.oneOf(["asc", "desc", !1]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * Specify the cell type.
   * The prop defaults to the value inherited from the parent TableHead, TableBody, or TableFooter components.
   */
  variant: a.oneOfType([a.oneOf(["body", "footer", "head"]), a.string])
});
function pQ(e) {
  return yn("MuiToolbar", e);
}
bn("MuiToolbar", ["root", "gutters", "regular", "dense"]);
const hQ = (e) => {
  const {
    classes: t,
    disableGutters: n,
    variant: i
  } = e;
  return yt({
    root: ["root", !n && "gutters", i]
  }, pQ, t);
}, mQ = Ue("div", {
  name: "MuiToolbar",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, !n.disableGutters && t.gutters, t[n.variant]];
  }
})(rn(({
  theme: e
}) => ({
  position: "relative",
  display: "flex",
  alignItems: "center",
  variants: [{
    props: ({
      ownerState: t
    }) => !t.disableGutters,
    style: {
      paddingLeft: e.spacing(2),
      paddingRight: e.spacing(2),
      [e.breakpoints.up("sm")]: {
        paddingLeft: e.spacing(3),
        paddingRight: e.spacing(3)
      }
    }
  }, {
    props: {
      variant: "dense"
    },
    style: {
      minHeight: 48
    }
  }, {
    props: {
      variant: "regular"
    },
    style: e.mixins.toolbar
  }]
}))), zP = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const i = Tn({
    props: t,
    name: "MuiToolbar"
  }), {
    className: s,
    component: u = "div",
    disableGutters: d = !1,
    variant: p = "regular",
    ...m
  } = i, v = {
    ...i,
    component: u,
    disableGutters: d,
    variant: p
  }, y = hQ(v);
  return /* @__PURE__ */ A.jsx(mQ, {
    as: u,
    className: nt(y.root, s),
    ref: n,
    ownerState: v,
    ...m
  });
});
process.env.NODE_ENV !== "production" && (zP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The Toolbar children, usually a mixture of `IconButton`, `Button` and `Typography`.
   * The Toolbar is a flex container, allowing flex item properties to be used to lay out the children.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * If `true`, disables gutter padding.
   * @default false
   */
  disableGutters: a.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The variant to use.
   * @default 'regular'
   */
  variant: a.oneOfType([a.oneOf(["dense", "regular"]), a.string])
});
const a2 = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z"
}), "KeyboardArrowLeft"), s2 = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"
}), "KeyboardArrowRight"), l2 = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const {
    backIconButtonProps: i,
    count: s,
    disabled: u = !1,
    getItemAriaLabel: d,
    nextIconButtonProps: p,
    onPageChange: m,
    page: v,
    rowsPerPage: y,
    showFirstButton: C,
    showLastButton: w,
    slots: R = {},
    slotProps: O = {},
    ...E
  } = t, k = ji(), L = (j) => {
    m(j, 0);
  }, F = (j) => {
    m(j, v - 1);
  }, _ = (j) => {
    m(j, v + 1);
  }, P = (j) => {
    m(j, Math.max(0, Math.ceil(s / y) - 1));
  }, D = R.firstButton ?? Uc, z = R.lastButton ?? Uc, K = R.nextButton ?? Uc, Q = R.previousButton ?? Uc, H = R.firstButtonIcon ?? $X, I = R.lastButtonIcon ?? jX, U = R.nextButtonIcon ?? s2, G = R.previousButtonIcon ?? a2, Y = k ? z : D, te = k ? K : Q, B = k ? Q : K, W = k ? D : z, q = k ? O.lastButton : O.firstButton, ne = k ? O.nextButton : O.previousButton, re = k ? O.previousButton : O.nextButton, X = k ? O.firstButton : O.lastButton;
  return /* @__PURE__ */ A.jsxs("div", {
    ref: n,
    ...E,
    children: [C && /* @__PURE__ */ A.jsx(Y, {
      onClick: L,
      disabled: u || v === 0,
      "aria-label": d("first", v),
      title: d("first", v),
      ...q,
      children: k ? /* @__PURE__ */ A.jsx(I, {
        ...O.lastButtonIcon
      }) : /* @__PURE__ */ A.jsx(H, {
        ...O.firstButtonIcon
      })
    }), /* @__PURE__ */ A.jsx(te, {
      onClick: F,
      disabled: u || v === 0,
      color: "inherit",
      "aria-label": d("previous", v),
      title: d("previous", v),
      ...ne ?? i,
      children: k ? /* @__PURE__ */ A.jsx(U, {
        ...O.nextButtonIcon
      }) : /* @__PURE__ */ A.jsx(G, {
        ...O.previousButtonIcon
      })
    }), /* @__PURE__ */ A.jsx(B, {
      onClick: _,
      disabled: u || (s !== -1 ? v >= Math.ceil(s / y) - 1 : !1),
      color: "inherit",
      "aria-label": d("next", v),
      title: d("next", v),
      ...re ?? p,
      children: k ? /* @__PURE__ */ A.jsx(G, {
        ...O.previousButtonIcon
      }) : /* @__PURE__ */ A.jsx(U, {
        ...O.nextButtonIcon
      })
    }), w && /* @__PURE__ */ A.jsx(W, {
      onClick: P,
      disabled: u || v >= Math.ceil(s / y) - 1,
      "aria-label": d("last", v),
      title: d("last", v),
      ...X,
      children: k ? /* @__PURE__ */ A.jsx(H, {
        ...O.firstButtonIcon
      }) : /* @__PURE__ */ A.jsx(I, {
        ...O.lastButtonIcon
      })
    })]
  });
});
process.env.NODE_ENV !== "production" && (l2.propTypes = {
  /**
   * Props applied to the back arrow [`IconButton`](/material-ui/api/icon-button/) element.
   */
  backIconButtonProps: a.object,
  /**
   * The total number of rows.
   */
  count: a.number.isRequired,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: a.bool,
  /**
   * Accepts a function which returns a string value that provides a user-friendly name for the current page.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   *
   * @param {string} type The link or button type to format ('page' | 'first' | 'last' | 'next' | 'previous'). Defaults to 'page'.
   * @param {number} page The page number to format.
   * @returns {string}
   */
  getItemAriaLabel: a.func.isRequired,
  /**
   * Props applied to the next arrow [`IconButton`](/material-ui/api/icon-button/) element.
   */
  nextIconButtonProps: a.object,
  /**
   * Callback fired when the page is changed.
   *
   * @param {object} event The event source of the callback.
   * @param {number} page The page selected.
   */
  onPageChange: a.func.isRequired,
  /**
   * The zero-based index of the current page.
   */
  page: a.number.isRequired,
  /**
   * The number of rows per page.
   */
  rowsPerPage: a.number.isRequired,
  /**
   * If `true`, show the first-page button.
   */
  showFirstButton: a.bool.isRequired,
  /**
   * If `true`, show the last-page button.
   */
  showLastButton: a.bool.isRequired,
  /**
   * The props used for each slot inside the TablePaginationActions.
   * @default {}
   */
  slotProps: a.shape({
    firstButton: a.object,
    firstButtonIcon: a.object,
    lastButton: a.object,
    lastButtonIcon: a.object,
    nextButton: a.object,
    nextButtonIcon: a.object,
    previousButton: a.object,
    previousButtonIcon: a.object
  }),
  /**
   * The components used for each slot inside the TablePaginationActions.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: a.shape({
    firstButton: a.elementType,
    firstButtonIcon: a.elementType,
    lastButton: a.elementType,
    lastButtonIcon: a.elementType,
    nextButton: a.elementType,
    nextButtonIcon: a.elementType,
    previousButton: a.elementType,
    previousButtonIcon: a.elementType
  })
});
function gQ(e) {
  return yn("MuiTablePagination", e);
}
const lh = bn("MuiTablePagination", ["root", "toolbar", "spacer", "selectLabel", "selectRoot", "select", "selectIcon", "input", "menuItem", "displayedRows", "actions"]);
var o_;
const vQ = Ue(_0, {
  name: "MuiTablePagination",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})(rn(({
  theme: e
}) => ({
  overflow: "auto",
  color: (e.vars || e).palette.text.primary,
  fontSize: e.typography.pxToRem(14),
  // Increase the specificity to override TableCell.
  "&:last-child": {
    padding: 0
  }
}))), yQ = Ue(zP, {
  name: "MuiTablePagination",
  slot: "Toolbar",
  overridesResolver: (e, t) => ({
    [`& .${lh.actions}`]: t.actions,
    ...t.toolbar
  })
})(rn(({
  theme: e
}) => ({
  minHeight: 52,
  paddingRight: 2,
  [`${e.breakpoints.up("xs")} and (orientation: landscape)`]: {
    minHeight: 52
  },
  [e.breakpoints.up("sm")]: {
    minHeight: 52,
    paddingRight: 2
  },
  [`& .${lh.actions}`]: {
    flexShrink: 0,
    marginLeft: 20
  }
}))), bQ = Ue("div", {
  name: "MuiTablePagination",
  slot: "Spacer",
  overridesResolver: (e, t) => t.spacer
})({
  flex: "1 1 100%"
}), CQ = Ue("p", {
  name: "MuiTablePagination",
  slot: "SelectLabel",
  overridesResolver: (e, t) => t.selectLabel
})(rn(({
  theme: e
}) => ({
  ...e.typography.body2,
  flexShrink: 0
}))), SQ = Ue(tv, {
  name: "MuiTablePagination",
  slot: "Select",
  overridesResolver: (e, t) => ({
    [`& .${lh.selectIcon}`]: t.selectIcon,
    [`& .${lh.select}`]: t.select,
    ...t.input,
    ...t.selectRoot
  })
})({
  color: "inherit",
  fontSize: "inherit",
  flexShrink: 0,
  marginRight: 32,
  marginLeft: 8,
  [`& .${lh.select}`]: {
    paddingLeft: 8,
    paddingRight: 24,
    textAlign: "right",
    textAlignLast: "right"
    // Align <select> on Chrome.
  }
}), wQ = Ue(ms, {
  name: "MuiTablePagination",
  slot: "MenuItem",
  overridesResolver: (e, t) => t.menuItem
})({}), xQ = Ue("p", {
  name: "MuiTablePagination",
  slot: "DisplayedRows",
  overridesResolver: (e, t) => t.displayedRows
})(rn(({
  theme: e
}) => ({
  ...e.typography.body2,
  flexShrink: 0
})));
function EQ({
  from: e,
  to: t,
  count: n
}) {
  return `${e}–${t} of ${n !== -1 ? n : `more than ${t}`}`;
}
function TQ(e) {
  return `Go to ${e} page`;
}
const RQ = (e) => {
  const {
    classes: t
  } = e;
  return yt({
    root: ["root"],
    toolbar: ["toolbar"],
    spacer: ["spacer"],
    selectLabel: ["selectLabel"],
    select: ["select"],
    input: ["input"],
    selectIcon: ["selectIcon"],
    menuItem: ["menuItem"],
    displayedRows: ["displayedRows"],
    actions: ["actions"]
  }, gQ, t);
}, u2 = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const i = Tn({
    props: t,
    name: "MuiTablePagination"
  }), {
    ActionsComponent: s = l2,
    backIconButtonProps: u,
    colSpan: d,
    component: p = _0,
    count: m,
    disabled: v = !1,
    getItemAriaLabel: y = TQ,
    labelDisplayedRows: C = EQ,
    labelRowsPerPage: w = "Rows per page:",
    nextIconButtonProps: R,
    onPageChange: O,
    onRowsPerPageChange: E,
    page: k,
    rowsPerPage: L,
    rowsPerPageOptions: F = [10, 25, 50, 100],
    SelectProps: _ = {},
    showFirstButton: P = !1,
    showLastButton: D = !1,
    slotProps: z = {},
    slots: K = {},
    ...Q
  } = i, H = i, I = RQ(H), U = (z == null ? void 0 : z.select) ?? _, G = U.native ? "option" : wQ;
  let Y;
  (p === _0 || p === "td") && (Y = d || 1e3);
  const te = Sr(U.id), B = Sr(U.labelId), W = () => m === -1 ? (k + 1) * L : L === -1 ? m : Math.min(m, (k + 1) * L), q = {
    slots: K,
    slotProps: z
  }, [ne, re] = vn("root", {
    ref: n,
    className: I.root,
    elementType: vQ,
    externalForwardedProps: {
      ...q,
      component: p,
      ...Q
    },
    ownerState: H,
    additionalProps: {
      colSpan: Y
    }
  }), [X, j] = vn("toolbar", {
    className: I.toolbar,
    elementType: yQ,
    externalForwardedProps: q,
    ownerState: H
  }), [ie, fe] = vn("spacer", {
    className: I.spacer,
    elementType: bQ,
    externalForwardedProps: q,
    ownerState: H
  }), [ce, me] = vn("selectLabel", {
    className: I.selectLabel,
    elementType: CQ,
    externalForwardedProps: q,
    ownerState: H,
    additionalProps: {
      id: B
    }
  }), [ge, de] = vn("select", {
    className: I.select,
    elementType: SQ,
    externalForwardedProps: q,
    ownerState: H
  }), [pe, be] = vn("menuItem", {
    className: I.menuItem,
    elementType: G,
    externalForwardedProps: q,
    ownerState: H
  }), [Ce, Re] = vn("displayedRows", {
    className: I.displayedRows,
    elementType: xQ,
    externalForwardedProps: q,
    ownerState: H
  });
  return /* @__PURE__ */ A.jsx(ne, {
    ...re,
    children: /* @__PURE__ */ A.jsxs(X, {
      ...j,
      children: [/* @__PURE__ */ A.jsx(ie, {
        ...fe
      }), F.length > 1 && /* @__PURE__ */ A.jsx(ce, {
        ...me,
        children: w
      }), F.length > 1 && /* @__PURE__ */ A.jsx(ge, {
        variant: "standard",
        ...!U.variant && {
          input: o_ || (o_ = /* @__PURE__ */ A.jsx(vh, {}))
        },
        value: L,
        onChange: E,
        id: te,
        labelId: B,
        ...U,
        classes: {
          ...U.classes,
          // TODO v5 remove `classes.input`
          root: nt(I.input, I.selectRoot, (U.classes || {}).root),
          select: nt(I.select, (U.classes || {}).select),
          // TODO v5 remove `selectIcon`
          icon: nt(I.selectIcon, (U.classes || {}).icon)
        },
        disabled: v,
        ...de,
        children: F.map((ue) => /* @__PURE__ */ S.createElement(pe, {
          ...be,
          key: ue.label ? ue.label : ue,
          value: ue.value ? ue.value : ue
        }, ue.label ? ue.label : ue))
      }), /* @__PURE__ */ A.jsx(Ce, {
        ...Re,
        children: C({
          from: m === 0 ? 0 : k * L + 1,
          to: W(),
          count: m === -1 ? -1 : m,
          page: k
        })
      }), /* @__PURE__ */ A.jsx(s, {
        className: I.actions,
        backIconButtonProps: u,
        count: m,
        nextIconButtonProps: R,
        onPageChange: O,
        page: k,
        rowsPerPage: L,
        showFirstButton: P,
        showLastButton: D,
        slotProps: z.actions,
        slots: K.actions,
        getItemAriaLabel: y,
        disabled: v
      })]
    })
  });
});
process.env.NODE_ENV !== "production" && (u2.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The component used for displaying the actions.
   * Either a string to use a HTML element or a component.
   * @default TablePaginationActions
   */
  ActionsComponent: a.elementType,
  /**
   * Props applied to the back arrow [`IconButton`](https://mui.com/material-ui/api/icon-button/) component.
   *
   * This prop is an alias for `slotProps.actions.previousButton` and will be overriden by it if both are used.
   * @deprecated Use `slotProps.actions.previousButton` instead.
   */
  backIconButtonProps: a.object,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  colSpan: a.number,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * The total number of rows.
   *
   * To enable server side pagination for an unknown number of items, provide -1.
   */
  count: Pg.isRequired,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: a.bool,
  /**
   * Accepts a function which returns a string value that provides a user-friendly name for the current page.
   * This is important for screen reader users.
   *
   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).
   * @param {string} type The link or button type to format ('first' | 'last' | 'next' | 'previous').
   * @returns {string}
   * @default function defaultGetAriaLabel(type) {
   *   return `Go to ${type} page`;
   * }
   */
  getItemAriaLabel: a.func,
  /**
   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`
   * object.
   *
   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).
   * @default function defaultLabelDisplayedRows({ from, to, count }) {
   *   return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;
   * }
   */
  labelDisplayedRows: a.func,
  /**
   * Customize the rows per page label.
   *
   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).
   * @default 'Rows per page:'
   */
  labelRowsPerPage: a.node,
  /**
   * Props applied to the next arrow [`IconButton`](https://mui.com/material-ui/api/icon-button/) element.
   *
   * This prop is an alias for `slotProps.actions.nextButton` and will be overriden by it if both are used.
   * @deprecated Use `slotProps.actions.nextButton` instead.
   */
  nextIconButtonProps: a.object,
  /**
   * Callback fired when the page is changed.
   *
   * @param {React.MouseEvent<HTMLButtonElement> | null} event The event source of the callback.
   * @param {number} page The page selected.
   */
  onPageChange: a.func.isRequired,
  /**
   * Callback fired when the number of rows per page is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   */
  onRowsPerPageChange: a.func,
  /**
   * The zero-based index of the current page.
   */
  page: Bl(Pg.isRequired, (e) => {
    const {
      count: t,
      page: n,
      rowsPerPage: i
    } = e;
    if (t === -1)
      return null;
    const s = Math.max(0, Math.ceil(t / i) - 1);
    return n < 0 || n > s ? new Error(`MUI: The page prop of a TablePagination is out of range (0 to ${s}, but page is ${n}).`) : null;
  }),
  /**
   * The number of rows per page.
   *
   * Set -1 to display all the rows.
   */
  rowsPerPage: Pg.isRequired,
  /**
   * Customizes the options of the rows per page select field. If less than two options are
   * available, no select field will be displayed.
   * Use -1 for the value with a custom label to show all the rows.
   * @default [10, 25, 50, 100]
   */
  rowsPerPageOptions: a.arrayOf(a.oneOfType([a.number, a.shape({
    label: a.string.isRequired,
    value: a.number.isRequired
  })]).isRequired),
  /**
   * Props applied to the rows per page [`Select`](https://mui.com/material-ui/api/select/) element.
   *
   * This prop is an alias for `slotProps.select` and will be overriden by it if both are used.
   * @deprecated Use `slotProps.select` instead.
   *
   * @default {}
   */
  SelectProps: a.object,
  /**
   * If `true`, show the first-page button.
   * @default false
   */
  showFirstButton: a.bool,
  /**
   * If `true`, show the last-page button.
   * @default false
   */
  showLastButton: a.bool,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    actions: a.shape({
      firstButton: a.object,
      firstButtonIcon: a.object,
      lastButton: a.object,
      lastButtonIcon: a.object,
      nextButton: a.object,
      nextButtonIcon: a.object,
      previousButton: a.object,
      previousButtonIcon: a.object
    }),
    displayedRows: a.oneOfType([a.func, a.object]),
    menuItem: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object]),
    select: a.object,
    selectLabel: a.oneOfType([a.func, a.object]),
    spacer: a.oneOfType([a.func, a.object]),
    toolbar: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    actions: a.shape({
      firstButton: a.elementType,
      firstButtonIcon: a.elementType,
      lastButton: a.elementType,
      lastButtonIcon: a.elementType,
      nextButton: a.elementType,
      nextButtonIcon: a.elementType,
      previousButton: a.elementType,
      previousButtonIcon: a.elementType
    }),
    displayedRows: a.elementType,
    menuItem: a.elementType,
    root: a.elementType,
    select: a.elementType,
    selectLabel: a.elementType,
    spacer: a.elementType,
    toolbar: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
function OQ(e) {
  return (1 + Math.sin(Math.PI * e - Math.PI / 2)) / 2;
}
function kQ(e, t, n, i = {}, s = () => {
}) {
  const {
    ease: u = OQ,
    duration: d = 300
    // standard
  } = i;
  let p = null;
  const m = t[e];
  let v = !1;
  const y = () => {
    v = !0;
  }, C = (w) => {
    if (v) {
      s(new Error("Animation cancelled"));
      return;
    }
    p === null && (p = w);
    const R = Math.min(1, (w - p) / d);
    if (t[e] = u(R) * (n - m) + m, R >= 1) {
      requestAnimationFrame(() => {
        s(null);
      });
      return;
    }
    requestAnimationFrame(C);
  };
  return m === n ? (s(new Error("Element already at target position")), y) : (requestAnimationFrame(C), y);
}
const PQ = {
  width: 99,
  height: 99,
  position: "absolute",
  top: -9999,
  overflow: "scroll"
};
function c2(e) {
  const {
    onChange: t,
    ...n
  } = e, i = S.useRef(), s = S.useRef(null), u = () => {
    i.current = s.current.offsetHeight - s.current.clientHeight;
  };
  return Fr(() => {
    const d = bE(() => {
      const m = i.current;
      u(), m !== i.current && t(i.current);
    }), p = nl(s.current);
    return p.addEventListener("resize", d), () => {
      d.clear(), p.removeEventListener("resize", d);
    };
  }, [t]), S.useEffect(() => {
    u(), t(i.current);
  }, [t]), /* @__PURE__ */ A.jsx("div", {
    style: PQ,
    ...n,
    ref: s
  });
}
process.env.NODE_ENV !== "production" && (c2.propTypes = {
  onChange: a.func.isRequired
});
function MQ(e) {
  return yn("MuiTabScrollButton", e);
}
const IQ = bn("MuiTabScrollButton", ["root", "vertical", "horizontal", "disabled"]), DQ = (e) => {
  const {
    classes: t,
    orientation: n,
    disabled: i
  } = e;
  return yt({
    root: ["root", n, i && "disabled"]
  }, MQ, t);
}, NQ = Ue(Kc, {
  name: "MuiTabScrollButton",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.orientation && t[n.orientation]];
  }
})({
  width: 40,
  flexShrink: 0,
  opacity: 0.8,
  [`&.${IQ.disabled}`]: {
    opacity: 0
  },
  variants: [{
    props: {
      orientation: "vertical"
    },
    style: {
      width: "100%",
      height: 40,
      "& svg": {
        transform: "var(--TabScrollButton-svgRotate)"
      }
    }
  }]
}), d2 = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const i = Tn({
    props: t,
    name: "MuiTabScrollButton"
  }), {
    className: s,
    slots: u = {},
    slotProps: d = {},
    direction: p,
    orientation: m,
    disabled: v,
    ...y
  } = i, C = ji(), w = {
    isRtl: C,
    ...i
  }, R = DQ(w), O = u.StartScrollButtonIcon ?? a2, E = u.EndScrollButtonIcon ?? s2, k = Hg({
    elementType: O,
    externalSlotProps: d.startScrollButtonIcon,
    additionalProps: {
      fontSize: "small"
    },
    ownerState: w
  }), L = Hg({
    elementType: E,
    externalSlotProps: d.endScrollButtonIcon,
    additionalProps: {
      fontSize: "small"
    },
    ownerState: w
  });
  return /* @__PURE__ */ A.jsx(NQ, {
    component: "div",
    className: nt(R.root, s),
    ref: n,
    role: null,
    ownerState: w,
    tabIndex: null,
    ...y,
    style: {
      ...y.style,
      ...m === "vertical" && {
        "--TabScrollButton-svgRotate": `rotate(${C ? -90 : 90}deg)`
      }
    },
    children: p === "left" ? /* @__PURE__ */ A.jsx(O, {
      ...k
    }) : /* @__PURE__ */ A.jsx(E, {
      ...L
    })
  });
});
process.env.NODE_ENV !== "production" && (d2.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The direction the button should indicate.
   */
  direction: a.oneOf(["left", "right"]).isRequired,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: a.bool,
  /**
   * The component orientation (layout flow direction).
   */
  orientation: a.oneOf(["horizontal", "vertical"]).isRequired,
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   * @default {}
   */
  slotProps: a.shape({
    endScrollButtonIcon: a.oneOfType([a.func, a.object]),
    startScrollButtonIcon: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    EndScrollButtonIcon: a.elementType,
    StartScrollButtonIcon: a.elementType
  }),
  /**
   * @ignore
   */
  style: a.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
function LQ(e) {
  return yn("MuiTabs", e);
}
const IO = bn("MuiTabs", ["root", "vertical", "list", "flexContainer", "flexContainerVertical", "centered", "scroller", "fixed", "scrollableX", "scrollableY", "hideScrollbar", "scrollButtons", "scrollButtonsHideMobile", "indicator"]), i_ = (e, t) => e === t ? e.firstChild : t && t.nextElementSibling ? t.nextElementSibling : e.firstChild, a_ = (e, t) => e === t ? e.lastChild : t && t.previousElementSibling ? t.previousElementSibling : e.lastChild, e0 = (e, t, n) => {
  let i = !1, s = n(e, t);
  for (; s; ) {
    if (s === e.firstChild) {
      if (i)
        return;
      i = !0;
    }
    const u = s.disabled || s.getAttribute("aria-disabled") === "true";
    if (!s.hasAttribute("tabindex") || u)
      s = n(e, s);
    else {
      s.focus();
      return;
    }
  }
}, FQ = (e) => {
  const {
    vertical: t,
    fixed: n,
    hideScrollbar: i,
    scrollableX: s,
    scrollableY: u,
    centered: d,
    scrollButtonsHideMobile: p,
    classes: m
  } = e;
  return yt({
    root: ["root", t && "vertical"],
    scroller: ["scroller", n && "fixed", i && "hideScrollbar", s && "scrollableX", u && "scrollableY"],
    list: ["list", "flexContainer", t && "flexContainerVertical", t && "vertical", d && "centered"],
    indicator: ["indicator"],
    scrollButtons: ["scrollButtons", p && "scrollButtonsHideMobile"],
    scrollableX: [s && "scrollableX"],
    hideScrollbar: [i && "hideScrollbar"]
  }, LQ, m);
}, _Q = Ue("div", {
  name: "MuiTabs",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [{
      [`& .${IO.scrollButtons}`]: t.scrollButtons
    }, {
      [`& .${IO.scrollButtons}`]: n.scrollButtonsHideMobile && t.scrollButtonsHideMobile
    }, t.root, n.vertical && t.vertical];
  }
})(rn(({
  theme: e
}) => ({
  overflow: "hidden",
  minHeight: 48,
  // Add iOS momentum scrolling for iOS < 13.0
  WebkitOverflowScrolling: "touch",
  display: "flex",
  variants: [{
    props: ({
      ownerState: t
    }) => t.vertical,
    style: {
      flexDirection: "column"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.scrollButtonsHideMobile,
    style: {
      [`& .${IO.scrollButtons}`]: {
        [e.breakpoints.down("sm")]: {
          display: "none"
        }
      }
    }
  }]
}))), AQ = Ue("div", {
  name: "MuiTabs",
  slot: "Scroller",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.scroller, n.fixed && t.fixed, n.hideScrollbar && t.hideScrollbar, n.scrollableX && t.scrollableX, n.scrollableY && t.scrollableY];
  }
})({
  position: "relative",
  display: "inline-block",
  flex: "1 1 auto",
  whiteSpace: "nowrap",
  variants: [{
    props: ({
      ownerState: e
    }) => e.fixed,
    style: {
      overflowX: "hidden",
      width: "100%"
    }
  }, {
    props: ({
      ownerState: e
    }) => e.hideScrollbar,
    style: {
      // Hide dimensionless scrollbar on macOS
      scrollbarWidth: "none",
      // Firefox
      "&::-webkit-scrollbar": {
        display: "none"
        // Safari + Chrome
      }
    }
  }, {
    props: ({
      ownerState: e
    }) => e.scrollableX,
    style: {
      overflowX: "auto",
      overflowY: "hidden"
    }
  }, {
    props: ({
      ownerState: e
    }) => e.scrollableY,
    style: {
      overflowY: "auto",
      overflowX: "hidden"
    }
  }]
}), $Q = Ue("div", {
  name: "MuiTabs",
  slot: "List",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.list, t.flexContainer, n.vertical && t.flexContainerVertical, n.centered && t.centered];
  }
})({
  display: "flex",
  variants: [{
    props: ({
      ownerState: e
    }) => e.vertical,
    style: {
      flexDirection: "column"
    }
  }, {
    props: ({
      ownerState: e
    }) => e.centered,
    style: {
      justifyContent: "center"
    }
  }]
}), jQ = Ue("span", {
  name: "MuiTabs",
  slot: "Indicator",
  overridesResolver: (e, t) => t.indicator
})(rn(({
  theme: e
}) => ({
  position: "absolute",
  height: 2,
  bottom: 0,
  width: "100%",
  transition: e.transitions.create(),
  variants: [{
    props: {
      indicatorColor: "primary"
    },
    style: {
      backgroundColor: (e.vars || e).palette.primary.main
    }
  }, {
    props: {
      indicatorColor: "secondary"
    },
    style: {
      backgroundColor: (e.vars || e).palette.secondary.main
    }
  }, {
    props: ({
      ownerState: t
    }) => t.vertical,
    style: {
      height: "100%",
      width: 2,
      right: 0
    }
  }]
}))), zQ = Ue(c2)({
  overflowX: "auto",
  overflowY: "hidden",
  // Hide dimensionless scrollbar on macOS
  scrollbarWidth: "none",
  // Firefox
  "&::-webkit-scrollbar": {
    display: "none"
    // Safari + Chrome
  }
}), s_ = {};
let l_ = !1;
const f2 = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const i = Tn({
    props: t,
    name: "MuiTabs"
  }), s = ev(), u = ji(), {
    "aria-label": d,
    "aria-labelledby": p,
    action: m,
    centered: v = !1,
    children: y,
    className: C,
    component: w = "div",
    allowScrollButtonsMobile: R = !1,
    indicatorColor: O = "primary",
    onChange: E,
    orientation: k = "horizontal",
    ScrollButtonComponent: L,
    // TODO: remove in v7 (deprecated in v6)
    scrollButtons: F = "auto",
    selectionFollowsFocus: _,
    slots: P = {},
    slotProps: D = {},
    TabIndicatorProps: z = {},
    // TODO: remove in v7 (deprecated in v6)
    TabScrollButtonProps: K = {},
    // TODO: remove in v7 (deprecated in v6)
    textColor: Q = "primary",
    value: H,
    variant: I = "standard",
    visibleScrollbar: U = !1,
    ...G
  } = i, Y = I === "scrollable", te = k === "vertical", B = te ? "scrollTop" : "scrollLeft", W = te ? "top" : "left", q = te ? "bottom" : "right", ne = te ? "clientHeight" : "clientWidth", re = te ? "height" : "width", X = {
    ...i,
    component: w,
    allowScrollButtonsMobile: R,
    indicatorColor: O,
    orientation: k,
    vertical: te,
    scrollButtons: F,
    textColor: Q,
    variant: I,
    visibleScrollbar: U,
    fixed: !Y,
    hideScrollbar: Y && !U,
    scrollableX: Y && !te,
    scrollableY: Y && te,
    centered: v && !Y,
    scrollButtonsHideMobile: !R
  }, j = FQ(X), ie = Hg({
    elementType: P.StartScrollButtonIcon,
    externalSlotProps: D.startScrollButtonIcon,
    ownerState: X
  }), fe = Hg({
    elementType: P.EndScrollButtonIcon,
    externalSlotProps: D.endScrollButtonIcon,
    ownerState: X
  });
  process.env.NODE_ENV !== "production" && v && Y && console.error('MUI: You can not use the `centered={true}` and `variant="scrollable"` properties at the same time on a `Tabs` component.');
  const [ce, me] = S.useState(!1), [ge, de] = S.useState(s_), [pe, be] = S.useState(!1), [Ce, Re] = S.useState(!1), [ue, we] = S.useState(!1), [_e, He] = S.useState({
    overflow: "hidden",
    scrollbarWidth: 0
  }), et = /* @__PURE__ */ new Map(), Ne = S.useRef(null), rt = S.useRef(null), it = {
    slots: P,
    slotProps: {
      indicator: z,
      scrollButton: K,
      ...D
    }
  }, wt = () => {
    const Ct = Ne.current;
    let St;
    if (Ct) {
      const on = Ct.getBoundingClientRect();
      St = {
        clientWidth: Ct.clientWidth,
        scrollLeft: Ct.scrollLeft,
        scrollTop: Ct.scrollTop,
        scrollWidth: Ct.scrollWidth,
        top: on.top,
        bottom: on.bottom,
        left: on.left,
        right: on.right
      };
    }
    let en;
    if (Ct && H !== !1) {
      const on = rt.current.children;
      if (on.length > 0) {
        const zn = on[et.get(H)];
        process.env.NODE_ENV !== "production" && (zn || console.error(["MUI: The `value` provided to the Tabs component is invalid.", `None of the Tabs' children match with "${H}".`, et.keys ? `You can provide one of the following values: ${Array.from(et.keys()).join(", ")}.` : null].join(`
`))), en = zn ? zn.getBoundingClientRect() : null, process.env.NODE_ENV !== "production" && process.env.NODE_ENV !== "test" && !l_ && en && en.width === 0 && en.height === 0 && // if the whole Tabs component is hidden, don't warn
        St.clientWidth !== 0 && (St = null, console.error(["MUI: The `value` provided to the Tabs component is invalid.", `The Tab with this \`value\` ("${H}") is not part of the document layout.`, "Make sure the tab item is present in the document or that it's not `display: none`."].join(`
`)), l_ = !0);
      }
    }
    return {
      tabsMeta: St,
      tabMeta: en
    };
  }, gt = Nn(() => {
    const {
      tabsMeta: Ct,
      tabMeta: St
    } = wt();
    let en = 0, on;
    te ? (on = "top", St && Ct && (en = St.top - Ct.top + Ct.scrollTop)) : (on = u ? "right" : "left", St && Ct && (en = (u ? -1 : 1) * (St[on] - Ct[on] + Ct.scrollLeft)));
    const zn = {
      [on]: en,
      // May be wrong until the font is loaded.
      [re]: St ? St[re] : 0
    };
    if (typeof ge[on] != "number" || typeof ge[re] != "number")
      de(zn);
    else {
      const Ar = Math.abs(ge[on] - zn[on]), ro = Math.abs(ge[re] - zn[re]);
      (Ar >= 1 || ro >= 1) && de(zn);
    }
  }), ot = (Ct, {
    animation: St = !0
  } = {}) => {
    St ? kQ(B, Ne.current, Ct, {
      duration: s.transitions.duration.standard
    }) : Ne.current[B] = Ct;
  }, jt = (Ct) => {
    let St = Ne.current[B];
    te ? St += Ct : St += Ct * (u ? -1 : 1), ot(St);
  }, ct = () => {
    const Ct = Ne.current[ne];
    let St = 0;
    const en = Array.from(rt.current.children);
    for (let on = 0; on < en.length; on += 1) {
      const zn = en[on];
      if (St + zn[ne] > Ct) {
        on === 0 && (St = Ct);
        break;
      }
      St += zn[ne];
    }
    return St;
  }, Tt = () => {
    jt(-1 * ct());
  }, Rt = () => {
    jt(ct());
  }, [Lt, {
    onChange: vt,
    ...Qe
  }] = vn("scrollbar", {
    className: nt(j.scrollableX, j.hideScrollbar),
    elementType: zQ,
    shouldForwardComponentProp: !0,
    externalForwardedProps: it,
    ownerState: X
  }), Oe = S.useCallback((Ct) => {
    vt == null || vt(Ct), He({
      overflow: null,
      scrollbarWidth: Ct
    });
  }, [vt]), [Me, ht] = vn("scrollButtons", {
    className: nt(j.scrollButtons, K.className),
    elementType: d2,
    externalForwardedProps: it,
    ownerState: X,
    additionalProps: {
      orientation: k,
      slots: {
        StartScrollButtonIcon: P.startScrollButtonIcon || P.StartScrollButtonIcon,
        EndScrollButtonIcon: P.endScrollButtonIcon || P.EndScrollButtonIcon
      },
      slotProps: {
        startScrollButtonIcon: ie,
        endScrollButtonIcon: fe
      }
    }
  }), xt = () => {
    const Ct = {};
    Ct.scrollbarSizeListener = Y ? /* @__PURE__ */ A.jsx(Lt, {
      ...Qe,
      onChange: Oe
    }) : null;
    const en = Y && (F === "auto" && (pe || Ce) || F === !0);
    return Ct.scrollButtonStart = en ? /* @__PURE__ */ A.jsx(Me, {
      direction: u ? "right" : "left",
      onClick: Tt,
      disabled: !pe,
      ...ht
    }) : null, Ct.scrollButtonEnd = en ? /* @__PURE__ */ A.jsx(Me, {
      direction: u ? "left" : "right",
      onClick: Rt,
      disabled: !Ce,
      ...ht
    }) : null, Ct;
  }, zt = Nn((Ct) => {
    const {
      tabsMeta: St,
      tabMeta: en
    } = wt();
    if (!(!en || !St)) {
      if (en[W] < St[W]) {
        const on = St[B] + (en[W] - St[W]);
        ot(on, {
          animation: Ct
        });
      } else if (en[q] > St[q]) {
        const on = St[B] + (en[q] - St[q]);
        ot(on, {
          animation: Ct
        });
      }
    }
  }), bt = Nn(() => {
    Y && F !== !1 && we(!ue);
  });
  S.useEffect(() => {
    const Ct = bE(() => {
      Ne.current && gt();
    });
    let St;
    const en = (Ar) => {
      Ar.forEach((ro) => {
        ro.removedNodes.forEach((mo) => {
          St == null || St.unobserve(mo);
        }), ro.addedNodes.forEach((mo) => {
          St == null || St.observe(mo);
        });
      }), Ct(), bt();
    }, on = nl(Ne.current);
    on.addEventListener("resize", Ct);
    let zn;
    return typeof ResizeObserver < "u" && (St = new ResizeObserver(Ct), Array.from(rt.current.children).forEach((Ar) => {
      St.observe(Ar);
    })), typeof MutationObserver < "u" && (zn = new MutationObserver(en), zn.observe(rt.current, {
      childList: !0
    })), () => {
      Ct.clear(), on.removeEventListener("resize", Ct), zn == null || zn.disconnect(), St == null || St.disconnect();
    };
  }, [gt, bt]), S.useEffect(() => {
    const Ct = Array.from(rt.current.children), St = Ct.length;
    if (typeof IntersectionObserver < "u" && St > 0 && Y && F !== !1) {
      const en = Ct[0], on = Ct[St - 1], zn = {
        root: Ne.current,
        threshold: 0.99
      }, Ar = (We) => {
        be(!We[0].isIntersecting);
      }, ro = new IntersectionObserver(Ar, zn);
      ro.observe(en);
      const mo = (We) => {
        Re(!We[0].isIntersecting);
      }, ve = new IntersectionObserver(mo, zn);
      return ve.observe(on), () => {
        ro.disconnect(), ve.disconnect();
      };
    }
  }, [Y, F, ue, y == null ? void 0 : y.length]), S.useEffect(() => {
    me(!0);
  }, []), S.useEffect(() => {
    gt();
  }), S.useEffect(() => {
    zt(s_ !== ge);
  }, [zt, ge]), S.useImperativeHandle(m, () => ({
    updateIndicator: gt,
    updateScrollButtons: bt
  }), [gt, bt]);
  const [Ge, Et] = vn("indicator", {
    className: nt(j.indicator, z.className),
    elementType: jQ,
    externalForwardedProps: it,
    ownerState: X,
    additionalProps: {
      style: ge
    }
  }), At = /* @__PURE__ */ A.jsx(Ge, {
    ...Et
  });
  let pn = 0;
  const fn = S.Children.map(y, (Ct) => {
    if (!/* @__PURE__ */ S.isValidElement(Ct))
      return null;
    process.env.NODE_ENV !== "production" && gf.isFragment(Ct) && console.error(["MUI: The Tabs component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`));
    const St = Ct.props.value === void 0 ? pn : Ct.props.value;
    et.set(St, pn);
    const en = St === H;
    return pn += 1, /* @__PURE__ */ S.cloneElement(Ct, {
      fullWidth: I === "fullWidth",
      indicator: en && !ce && At,
      selected: en,
      selectionFollowsFocus: _,
      onChange: E,
      textColor: Q,
      value: St,
      ...pn === 1 && H === !1 && !Ct.props.tabIndex ? {
        tabIndex: 0
      } : {}
    });
  }), hr = (Ct) => {
    if (Ct.altKey || Ct.shiftKey || Ct.ctrlKey || Ct.metaKey)
      return;
    const St = rt.current, en = ao(St).activeElement;
    if (en.getAttribute("role") !== "tab")
      return;
    let zn = k === "horizontal" ? "ArrowLeft" : "ArrowUp", Ar = k === "horizontal" ? "ArrowRight" : "ArrowDown";
    switch (k === "horizontal" && u && (zn = "ArrowRight", Ar = "ArrowLeft"), Ct.key) {
      case zn:
        Ct.preventDefault(), e0(St, en, a_);
        break;
      case Ar:
        Ct.preventDefault(), e0(St, en, i_);
        break;
      case "Home":
        Ct.preventDefault(), e0(St, null, i_);
        break;
      case "End":
        Ct.preventDefault(), e0(St, null, a_);
        break;
    }
  }, qn = xt(), [Dr, mr] = vn("root", {
    ref: n,
    className: nt(j.root, C),
    elementType: _Q,
    externalForwardedProps: {
      ...it,
      ...G,
      component: w
    },
    ownerState: X
  }), [Po, Mo] = vn("scroller", {
    ref: Ne,
    className: j.scroller,
    elementType: AQ,
    externalForwardedProps: it,
    ownerState: X,
    additionalProps: {
      style: {
        overflow: _e.overflow,
        [te ? `margin${u ? "Left" : "Right"}` : "marginBottom"]: U ? void 0 : -_e.scrollbarWidth
      }
    }
  }), [Ut, dr] = vn("list", {
    ref: rt,
    className: nt(j.list, j.flexContainer),
    elementType: $Q,
    externalForwardedProps: it,
    ownerState: X,
    getSlotProps: (Ct) => ({
      ...Ct,
      onKeyDown: (St) => {
        var en;
        hr(St), (en = Ct.onKeyDown) == null || en.call(Ct, St);
      }
    })
  });
  return /* @__PURE__ */ A.jsxs(Dr, {
    ...mr,
    children: [qn.scrollButtonStart, qn.scrollbarSizeListener, /* @__PURE__ */ A.jsxs(Po, {
      ...Mo,
      children: [/* @__PURE__ */ A.jsx(Ut, {
        "aria-label": d,
        "aria-labelledby": p,
        "aria-orientation": k === "vertical" ? "vertical" : null,
        role: "tablist",
        ...dr,
        children: fn
      }), ce && At]
    }), qn.scrollButtonEnd]
  });
});
process.env.NODE_ENV !== "production" && (f2.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Callback fired when the component mounts.
   * This is useful when you want to trigger an action programmatically.
   * It supports two actions: `updateIndicator()` and `updateScrollButtons()`
   *
   * @param {object} actions This object contains all possible actions
   * that can be triggered programmatically.
   */
  action: Ea,
  /**
   * If `true`, the scroll buttons aren't forced hidden on mobile.
   * By default the scroll buttons are hidden on mobile and takes precedence over `scrollButtons`.
   * @default false
   */
  allowScrollButtonsMobile: a.bool,
  /**
   * The label for the Tabs as a string.
   */
  "aria-label": a.string,
  /**
   * An id or list of ids separated by a space that label the Tabs.
   */
  "aria-labelledby": a.string,
  /**
   * If `true`, the tabs are centered.
   * This prop is intended for large views.
   * @default false
   */
  centered: a.bool,
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * Determines the color of the indicator.
   * @default 'primary'
   */
  indicatorColor: a.oneOfType([a.oneOf(["primary", "secondary"]), a.string]),
  /**
   * Callback fired when the value changes.
   *
   * @param {React.SyntheticEvent} event The event source of the callback. **Warning**: This is a generic event not a change event.
   * @param {any} value We default to the index of the child (number)
   */
  onChange: a.func,
  /**
   * The component orientation (layout flow direction).
   * @default 'horizontal'
   */
  orientation: a.oneOf(["horizontal", "vertical"]),
  /**
   * The component used to render the scroll buttons.
   * @deprecated use the `slots.scrollButtons` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default TabScrollButton
   */
  ScrollButtonComponent: a.elementType,
  /**
   * Determine behavior of scroll buttons when tabs are set to scroll:
   *
   * - `auto` will only present them when not all the items are visible.
   * - `true` will always present them.
   * - `false` will never present them.
   *
   * By default the scroll buttons are hidden on mobile.
   * This behavior can be disabled with `allowScrollButtonsMobile`.
   * @default 'auto'
   */
  scrollButtons: a.oneOf(["auto", !1, !0]),
  /**
   * If `true` the selected tab changes on focus. Otherwise it only
   * changes on activation.
   */
  selectionFollowsFocus: a.bool,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    endScrollButtonIcon: a.oneOfType([a.func, a.object]),
    indicator: a.oneOfType([a.func, a.object]),
    list: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object]),
    scrollbar: a.oneOfType([a.func, a.object]),
    scrollButtons: a.oneOfType([a.func, a.object]),
    scroller: a.oneOfType([a.func, a.object]),
    startScrollButtonIcon: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    endScrollButtonIcon: a.elementType,
    EndScrollButtonIcon: a.elementType,
    indicator: a.elementType,
    list: a.elementType,
    root: a.elementType,
    scrollbar: a.elementType,
    scrollButtons: a.elementType,
    scroller: a.elementType,
    startScrollButtonIcon: a.elementType,
    StartScrollButtonIcon: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * Props applied to the tab indicator element.
   * @deprecated use the `slotProps.indicator` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default  {}
   */
  TabIndicatorProps: a.object,
  /**
   * Props applied to the [`TabScrollButton`](https://mui.com/material-ui/api/tab-scroll-button/) element.
   * @deprecated use the `slotProps.scrollButtons` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  TabScrollButtonProps: a.object,
  /**
   * Determines the color of the `Tab`.
   * @default 'primary'
   */
  textColor: a.oneOf(["inherit", "primary", "secondary"]),
  /**
   * The value of the currently selected `Tab`.
   * If you don't want any selected `Tab`, you can set this prop to `false`.
   */
  value: a.any,
  /**
   * Determines additional display behavior of the tabs:
   *
   *  - `scrollable` will invoke scrolling properties and allow for horizontally
   *  scrolling (or swiping) of the tab bar.
   *  - `fullWidth` will make the tabs grow to use all the available space,
   *  which should be used for small views, like on mobile.
   *  - `standard` will render the default state.
   * @default 'standard'
   */
  variant: a.oneOf(["fullWidth", "scrollable", "standard"]),
  /**
   * If `true`, the scrollbar is visible. It can be useful when displaying
   * a long vertical list of tabs.
   * @default false
   */
  visibleScrollbar: a.bool
});
function HQ(e) {
  return yn("MuiTextField", e);
}
bn("MuiTextField", ["root"]);
const VQ = {
  standard: ME,
  filled: PE,
  outlined: IE
}, BQ = (e) => {
  const {
    classes: t
  } = e;
  return yt({
    root: ["root"]
  }, HQ, t);
}, UQ = Ue(FP, {
  name: "MuiTextField",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({}), HP = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const i = Tn({
    props: t,
    name: "MuiTextField"
  }), {
    autoComplete: s,
    autoFocus: u = !1,
    children: d,
    className: p,
    color: m = "primary",
    defaultValue: v,
    disabled: y = !1,
    error: C = !1,
    FormHelperTextProps: w,
    fullWidth: R = !1,
    helperText: O,
    id: E,
    InputLabelProps: k,
    inputProps: L,
    InputProps: F,
    inputRef: _,
    label: P,
    maxRows: D,
    minRows: z,
    multiline: K = !1,
    name: Q,
    onBlur: H,
    onChange: I,
    onFocus: U,
    placeholder: G,
    required: Y = !1,
    rows: te,
    select: B = !1,
    SelectProps: W,
    slots: q = {},
    slotProps: ne = {},
    type: re,
    value: X,
    variant: j = "outlined",
    ...ie
  } = i, fe = {
    ...i,
    autoFocus: u,
    color: m,
    disabled: y,
    error: C,
    fullWidth: R,
    multiline: K,
    required: Y,
    select: B,
    variant: j
  }, ce = BQ(fe);
  process.env.NODE_ENV !== "production" && B && !d && console.error("MUI: `children` must be passed when using the `TextField` component with `select`.");
  const me = Sr(E), ge = O && me ? `${me}-helper-text` : void 0, de = P && me ? `${me}-label` : void 0, pe = VQ[j], be = {
    slots: q,
    slotProps: {
      input: F,
      inputLabel: k,
      htmlInput: L,
      formHelperText: w,
      select: W,
      ...ne
    }
  }, Ce = {}, Re = be.slotProps.inputLabel;
  j === "outlined" && (Re && typeof Re.shrink < "u" && (Ce.notched = Re.shrink), Ce.label = P), B && ((!W || !W.native) && (Ce.id = void 0), Ce["aria-describedby"] = void 0);
  const [ue, we] = vn("root", {
    elementType: UQ,
    shouldForwardComponentProp: !0,
    externalForwardedProps: {
      ...be,
      ...ie
    },
    ownerState: fe,
    className: nt(ce.root, p),
    ref: n,
    additionalProps: {
      disabled: y,
      error: C,
      fullWidth: R,
      required: Y,
      color: m,
      variant: j
    }
  }), [_e, He] = vn("input", {
    elementType: pe,
    externalForwardedProps: be,
    additionalProps: Ce,
    ownerState: fe
  }), [et, Ne] = vn("inputLabel", {
    elementType: _P,
    externalForwardedProps: be,
    ownerState: fe
  }), [rt, it] = vn("htmlInput", {
    elementType: "input",
    externalForwardedProps: be,
    ownerState: fe
  }), [wt, gt] = vn("formHelperText", {
    elementType: Hj,
    externalForwardedProps: be,
    ownerState: fe
  }), [ot, jt] = vn("select", {
    elementType: tv,
    externalForwardedProps: be,
    ownerState: fe
  }), ct = /* @__PURE__ */ A.jsx(_e, {
    "aria-describedby": ge,
    autoComplete: s,
    autoFocus: u,
    defaultValue: v,
    fullWidth: R,
    multiline: K,
    name: Q,
    rows: te,
    maxRows: D,
    minRows: z,
    type: re,
    value: X,
    id: me,
    inputRef: _,
    onBlur: H,
    onChange: I,
    onFocus: U,
    placeholder: G,
    inputProps: it,
    slots: {
      input: q.htmlInput ? rt : void 0
    },
    ...He
  });
  return /* @__PURE__ */ A.jsxs(ue, {
    ...we,
    children: [P != null && P !== "" && /* @__PURE__ */ A.jsx(et, {
      htmlFor: me,
      id: de,
      ...Ne,
      children: P
    }), B ? /* @__PURE__ */ A.jsx(ot, {
      "aria-describedby": ge,
      id: me,
      labelId: de,
      value: X,
      input: ct,
      ...jt,
      children: d
    }) : ct, O && /* @__PURE__ */ A.jsx(wt, {
      id: ge,
      ...gt,
      children: O
    })]
  });
});
process.env.NODE_ENV !== "production" && (HP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: a.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   * @default false
   */
  autoFocus: a.bool,
  /**
   * @ignore
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: a.oneOfType([a.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), a.string]),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: a.any,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: a.bool,
  /**
   * If `true`, the label is displayed in an error state.
   * @default false
   */
  error: a.bool,
  /**
   * Props applied to the [`FormHelperText`](https://mui.com/material-ui/api/form-helper-text/) element.
   * @deprecated Use `slotProps.formHelperText` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  FormHelperTextProps: a.object,
  /**
   * If `true`, the input will take up the full width of its container.
   * @default false
   */
  fullWidth: a.bool,
  /**
   * The helper text content.
   */
  helperText: a.node,
  /**
   * The id of the `input` element.
   * Use this prop to make `label` and `helperText` accessible for screen readers.
   */
  id: a.string,
  /**
   * Props applied to the [`InputLabel`](https://mui.com/material-ui/api/input-label/) element.
   * Pointer events like `onClick` are enabled if and only if `shrink` is `true`.
   * @deprecated Use `slotProps.inputLabel` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  InputLabelProps: a.object,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @deprecated Use `slotProps.htmlInput` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  inputProps: a.object,
  /**
   * Props applied to the Input element.
   * It will be a [`FilledInput`](https://mui.com/material-ui/api/filled-input/),
   * [`OutlinedInput`](https://mui.com/material-ui/api/outlined-input/) or [`Input`](https://mui.com/material-ui/api/input/)
   * component depending on the `variant` prop value.
   * @deprecated Use `slotProps.input` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  InputProps: a.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Ea,
  /**
   * The label content.
   */
  label: a.node,
  /**
   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.
   * @default 'none'
   */
  margin: a.oneOf(["dense", "none", "normal"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: a.oneOfType([a.number, a.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: a.oneOfType([a.number, a.string]),
  /**
   * If `true`, a `textarea` element is rendered instead of an input.
   * @default false
   */
  multiline: a.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: a.string,
  /**
   * @ignore
   */
  onBlur: a.func,
  /**
   * Callback fired when the value is changed.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: a.func,
  /**
   * @ignore
   */
  onFocus: a.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: a.string,
  /**
   * If `true`, the label is displayed as required and the `input` element is required.
   * @default false
   */
  required: a.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: a.oneOfType([a.number, a.string]),
  /**
   * Render a [`Select`](https://mui.com/material-ui/api/select/) element while passing the Input element to `Select` as `input` parameter.
   * If this option is set you must pass the options of the select as children.
   * @default false
   */
  select: a.bool,
  /**
   * Props applied to the [`Select`](https://mui.com/material-ui/api/select/) element.
   * @deprecated Use `slotProps.select` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  SelectProps: a.object,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: a.oneOfType([a.oneOf(["medium", "small"]), a.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    formHelperText: a.oneOfType([a.func, a.object]),
    htmlInput: a.oneOfType([a.func, a.object]),
    input: a.oneOfType([a.func, a.object]),
    inputLabel: a.oneOfType([a.func, a.object]),
    select: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    formHelperText: a.elementType,
    htmlInput: a.elementType,
    input: a.elementType,
    inputLabel: a.elementType,
    root: a.elementType,
    select: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   */
  type: a.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: a.any,
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: a.oneOf(["filled", "outlined", "standard"])
});
/**
 * @remix-run/router v1.23.0
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
function lC() {
  return lC = Object.assign ? Object.assign.bind() : function(e) {
    for (var t = 1; t < arguments.length; t++) {
      var n = arguments[t];
      for (var i in n)
        Object.prototype.hasOwnProperty.call(n, i) && (e[i] = n[i]);
    }
    return e;
  }, lC.apply(this, arguments);
}
var df;
(function(e) {
  e.Pop = "POP", e.Push = "PUSH", e.Replace = "REPLACE";
})(df || (df = {}));
const u_ = "popstate";
function GQ(e) {
  e === void 0 && (e = {});
  function t(i, s) {
    let {
      pathname: u,
      search: d,
      hash: p
    } = i.location;
    return Dk(
      "",
      {
        pathname: u,
        search: d,
        hash: p
      },
      // state defaults to `null` because `window.history.state` does
      s.state && s.state.usr || null,
      s.state && s.state.key || "default"
    );
  }
  function n(i, s) {
    return typeof s == "string" ? s : uC(s);
  }
  return qQ(t, n, null, e);
}
function Bn(e, t) {
  if (e === !1 || e === null || typeof e > "u")
    throw new Error(t);
}
function Wu(e, t) {
  if (!e) {
    typeof console < "u" && console.warn(t);
    try {
      throw new Error(t);
    } catch {
    }
  }
}
function WQ() {
  return Math.random().toString(36).substr(2, 8);
}
function c_(e, t) {
  return {
    usr: e.state,
    key: e.key,
    idx: t
  };
}
function Dk(e, t, n, i) {
  return n === void 0 && (n = null), lC({
    pathname: typeof e == "string" ? e : e.pathname,
    search: "",
    hash: ""
  }, typeof t == "string" ? nv(t) : t, {
    state: n,
    // TODO: This could be cleaned up.  push/replace should probably just take
    // full Locations now and avoid the need to run through this flow at all
    // But that's a pretty big refactor to the current test suite so going to
    // keep as is for the time being and just let any incoming keys take precedence
    key: t && t.key || i || WQ()
  });
}
function uC(e) {
  let {
    pathname: t = "/",
    search: n = "",
    hash: i = ""
  } = e;
  return n && n !== "?" && (t += n.charAt(0) === "?" ? n : "?" + n), i && i !== "#" && (t += i.charAt(0) === "#" ? i : "#" + i), t;
}
function nv(e) {
  let t = {};
  if (e) {
    let n = e.indexOf("#");
    n >= 0 && (t.hash = e.substr(n), e = e.substr(0, n));
    let i = e.indexOf("?");
    i >= 0 && (t.search = e.substr(i), e = e.substr(0, i)), e && (t.pathname = e);
  }
  return t;
}
function qQ(e, t, n, i) {
  i === void 0 && (i = {});
  let {
    window: s = document.defaultView,
    v5Compat: u = !1
  } = i, d = s.history, p = df.Pop, m = null, v = y();
  v == null && (v = 0, d.replaceState(lC({}, d.state, {
    idx: v
  }), ""));
  function y() {
    return (d.state || {
      idx: null
    }).idx;
  }
  function C() {
    p = df.Pop;
    let k = y(), L = k == null ? null : k - v;
    v = k, m && m({
      action: p,
      location: E.location,
      delta: L
    });
  }
  function w(k, L) {
    p = df.Push;
    let F = Dk(E.location, k, L);
    v = y() + 1;
    let _ = c_(F, v), P = E.createHref(F);
    try {
      d.pushState(_, "", P);
    } catch (D) {
      if (D instanceof DOMException && D.name === "DataCloneError")
        throw D;
      s.location.assign(P);
    }
    u && m && m({
      action: p,
      location: E.location,
      delta: 1
    });
  }
  function R(k, L) {
    p = df.Replace;
    let F = Dk(E.location, k, L);
    v = y();
    let _ = c_(F, v), P = E.createHref(F);
    d.replaceState(_, "", P), u && m && m({
      action: p,
      location: E.location,
      delta: 0
    });
  }
  function O(k) {
    let L = s.location.origin !== "null" ? s.location.origin : s.location.href, F = typeof k == "string" ? k : uC(k);
    return F = F.replace(/ $/, "%20"), Bn(L, "No window.location.(origin|href) available to create URL for href: " + F), new URL(F, L);
  }
  let E = {
    get action() {
      return p;
    },
    get location() {
      return e(s, d);
    },
    listen(k) {
      if (m)
        throw new Error("A history only accepts one active listener");
      return s.addEventListener(u_, C), m = k, () => {
        s.removeEventListener(u_, C), m = null;
      };
    },
    createHref(k) {
      return t(s, k);
    },
    createURL: O,
    encodeLocation(k) {
      let L = O(k);
      return {
        pathname: L.pathname,
        search: L.search,
        hash: L.hash
      };
    },
    push: w,
    replace: R,
    go(k) {
      return d.go(k);
    }
  };
  return E;
}
var d_;
(function(e) {
  e.data = "data", e.deferred = "deferred", e.redirect = "redirect", e.error = "error";
})(d_ || (d_ = {}));
function KQ(e, t, n) {
  return n === void 0 && (n = "/"), YQ(e, t, n);
}
function YQ(e, t, n, i) {
  let s = typeof t == "string" ? nv(t) : t, u = Cf(s.pathname || "/", n);
  if (u == null)
    return null;
  let d = p2(e);
  XQ(d);
  let p = null;
  for (let m = 0; p == null && m < d.length; ++m) {
    let v = sJ(u);
    p = iJ(d[m], v);
  }
  return p;
}
function p2(e, t, n, i) {
  t === void 0 && (t = []), n === void 0 && (n = []), i === void 0 && (i = "");
  let s = (u, d, p) => {
    let m = {
      relativePath: p === void 0 ? u.path || "" : p,
      caseSensitive: u.caseSensitive === !0,
      childrenIndex: d,
      route: u
    };
    m.relativePath.startsWith("/") && (Bn(m.relativePath.startsWith(i), 'Absolute route path "' + m.relativePath + '" nested under path ' + ('"' + i + '" is not valid. An absolute child route path ') + "must start with the combined path of all its parent routes."), m.relativePath = m.relativePath.slice(i.length));
    let v = Gc([i, m.relativePath]), y = n.concat(m);
    u.children && u.children.length > 0 && (Bn(
      // Our types know better, but runtime JS may not!
      // @ts-expect-error
      u.index !== !0,
      "Index routes must not have child routes. Please remove " + ('all child routes from route path "' + v + '".')
    ), p2(u.children, t, y, v)), !(u.path == null && !u.index) && t.push({
      path: v,
      score: rJ(v, u.index),
      routesMeta: y
    });
  };
  return e.forEach((u, d) => {
    var p;
    if (u.path === "" || !((p = u.path) != null && p.includes("?")))
      s(u, d);
    else
      for (let m of h2(u.path))
        s(u, d, m);
  }), t;
}
function h2(e) {
  let t = e.split("/");
  if (t.length === 0) return [];
  let [n, ...i] = t, s = n.endsWith("?"), u = n.replace(/\?$/, "");
  if (i.length === 0)
    return s ? [u, ""] : [u];
  let d = h2(i.join("/")), p = [];
  return p.push(...d.map((m) => m === "" ? u : [u, m].join("/"))), s && p.push(...d), p.map((m) => e.startsWith("/") && m === "" ? "/" : m);
}
function XQ(e) {
  e.sort((t, n) => t.score !== n.score ? n.score - t.score : oJ(t.routesMeta.map((i) => i.childrenIndex), n.routesMeta.map((i) => i.childrenIndex)));
}
const QQ = /^:[\w-]+$/, JQ = 3, ZQ = 2, eJ = 1, tJ = 10, nJ = -2, f_ = (e) => e === "*";
function rJ(e, t) {
  let n = e.split("/"), i = n.length;
  return n.some(f_) && (i += nJ), t && (i += ZQ), n.filter((s) => !f_(s)).reduce((s, u) => s + (QQ.test(u) ? JQ : u === "" ? eJ : tJ), i);
}
function oJ(e, t) {
  return e.length === t.length && e.slice(0, -1).every((i, s) => i === t[s]) ? (
    // If two routes are siblings, we should try to match the earlier sibling
    // first. This allows people to have fine-grained control over the matching
    // behavior by simply putting routes with identical paths in the order they
    // want them tried.
    e[e.length - 1] - t[t.length - 1]
  ) : (
    // Otherwise, it doesn't really make sense to rank non-siblings by index,
    // so they sort equally.
    0
  );
}
function iJ(e, t, n) {
  let {
    routesMeta: i
  } = e, s = {}, u = "/", d = [];
  for (let p = 0; p < i.length; ++p) {
    let m = i[p], v = p === i.length - 1, y = u === "/" ? t : t.slice(u.length) || "/", C = Nk({
      path: m.relativePath,
      caseSensitive: m.caseSensitive,
      end: v
    }, y), w = m.route;
    if (!C)
      return null;
    Object.assign(s, C.params), d.push({
      // TODO: Can this as be avoided?
      params: s,
      pathname: Gc([u, C.pathname]),
      pathnameBase: dJ(Gc([u, C.pathnameBase])),
      route: w
    }), C.pathnameBase !== "/" && (u = Gc([u, C.pathnameBase]));
  }
  return d;
}
function Nk(e, t) {
  typeof e == "string" && (e = {
    path: e,
    caseSensitive: !1,
    end: !0
  });
  let [n, i] = aJ(e.path, e.caseSensitive, e.end), s = t.match(n);
  if (!s) return null;
  let u = s[0], d = u.replace(/(.)\/+$/, "$1"), p = s.slice(1);
  return {
    params: i.reduce((v, y, C) => {
      let {
        paramName: w,
        isOptional: R
      } = y;
      if (w === "*") {
        let E = p[C] || "";
        d = u.slice(0, u.length - E.length).replace(/(.)\/+$/, "$1");
      }
      const O = p[C];
      return R && !O ? v[w] = void 0 : v[w] = (O || "").replace(/%2F/g, "/"), v;
    }, {}),
    pathname: u,
    pathnameBase: d,
    pattern: e
  };
}
function aJ(e, t, n) {
  t === void 0 && (t = !1), n === void 0 && (n = !0), Wu(e === "*" || !e.endsWith("*") || e.endsWith("/*"), 'Route path "' + e + '" will be treated as if it were ' + ('"' + e.replace(/\*$/, "/*") + '" because the `*` character must ') + "always follow a `/` in the pattern. To get rid of this warning, " + ('please change the route path to "' + e.replace(/\*$/, "/*") + '".'));
  let i = [], s = "^" + e.replace(/\/*\*?$/, "").replace(/^\/*/, "/").replace(/[\\.*+^${}|()[\]]/g, "\\$&").replace(/\/:([\w-]+)(\?)?/g, (d, p, m) => (i.push({
    paramName: p,
    isOptional: m != null
  }), m ? "/?([^\\/]+)?" : "/([^\\/]+)"));
  return e.endsWith("*") ? (i.push({
    paramName: "*"
  }), s += e === "*" || e === "/*" ? "(.*)$" : "(?:\\/(.+)|\\/*)$") : n ? s += "\\/*$" : e !== "" && e !== "/" && (s += "(?:(?=\\/|$))"), [new RegExp(s, t ? void 0 : "i"), i];
}
function sJ(e) {
  try {
    return e.split("/").map((t) => decodeURIComponent(t).replace(/\//g, "%2F")).join("/");
  } catch (t) {
    return Wu(!1, 'The URL path "' + e + '" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent ' + ("encoding (" + t + ").")), e;
  }
}
function Cf(e, t) {
  if (t === "/") return e;
  if (!e.toLowerCase().startsWith(t.toLowerCase()))
    return null;
  let n = t.endsWith("/") ? t.length - 1 : t.length, i = e.charAt(n);
  return i && i !== "/" ? null : e.slice(n) || "/";
}
function lJ(e, t) {
  t === void 0 && (t = "/");
  let {
    pathname: n,
    search: i = "",
    hash: s = ""
  } = typeof e == "string" ? nv(e) : e;
  return {
    pathname: n ? n.startsWith("/") ? n : uJ(n, t) : t,
    search: fJ(i),
    hash: pJ(s)
  };
}
function uJ(e, t) {
  let n = t.replace(/\/+$/, "").split("/");
  return e.split("/").forEach((s) => {
    s === ".." ? n.length > 1 && n.pop() : s !== "." && n.push(s);
  }), n.length > 1 ? n.join("/") : "/";
}
function DO(e, t, n, i) {
  return "Cannot include a '" + e + "' character in a manually specified " + ("`to." + t + "` field [" + JSON.stringify(i) + "].  Please separate it out to the ") + ("`to." + n + "` field. Alternatively you may provide the full path as ") + 'a string in <Link to="..."> and the router will parse it for you.';
}
function cJ(e) {
  return e.filter((t, n) => n === 0 || t.route.path && t.route.path.length > 0);
}
function m2(e, t) {
  let n = cJ(e);
  return t ? n.map((i, s) => s === n.length - 1 ? i.pathname : i.pathnameBase) : n.map((i) => i.pathnameBase);
}
function g2(e, t, n, i) {
  i === void 0 && (i = !1);
  let s;
  typeof e == "string" ? s = nv(e) : (s = lC({}, e), Bn(!s.pathname || !s.pathname.includes("?"), DO("?", "pathname", "search", s)), Bn(!s.pathname || !s.pathname.includes("#"), DO("#", "pathname", "hash", s)), Bn(!s.search || !s.search.includes("#"), DO("#", "search", "hash", s)));
  let u = e === "" || s.pathname === "", d = u ? "/" : s.pathname, p;
  if (d == null)
    p = n;
  else {
    let C = t.length - 1;
    if (!i && d.startsWith("..")) {
      let w = d.split("/");
      for (; w[0] === ".."; )
        w.shift(), C -= 1;
      s.pathname = w.join("/");
    }
    p = C >= 0 ? t[C] : "/";
  }
  let m = lJ(s, p), v = d && d !== "/" && d.endsWith("/"), y = (u || d === ".") && n.endsWith("/");
  return !m.pathname.endsWith("/") && (v || y) && (m.pathname += "/"), m;
}
const Gc = (e) => e.join("/").replace(/\/\/+/g, "/"), dJ = (e) => e.replace(/\/+$/, "").replace(/^\/*/, "/"), fJ = (e) => !e || e === "?" ? "" : e.startsWith("?") ? e : "?" + e, pJ = (e) => !e || e === "#" ? "" : e.startsWith("#") ? e : "#" + e;
function hJ(e) {
  return e != null && typeof e.status == "number" && typeof e.statusText == "string" && typeof e.internal == "boolean" && "data" in e;
}
const v2 = ["post", "put", "patch", "delete"];
new Set(v2);
const mJ = ["get", ...v2];
new Set(mJ);
/**
 * React Router v6.30.1
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
function cC() {
  return cC = Object.assign ? Object.assign.bind() : function(e) {
    for (var t = 1; t < arguments.length; t++) {
      var n = arguments[t];
      for (var i in n)
        Object.prototype.hasOwnProperty.call(n, i) && (e[i] = n[i]);
    }
    return e;
  }, cC.apply(this, arguments);
}
const LC = /* @__PURE__ */ S.createContext(null);
process.env.NODE_ENV !== "production" && (LC.displayName = "DataRouter");
const VP = /* @__PURE__ */ S.createContext(null);
process.env.NODE_ENV !== "production" && (VP.displayName = "DataRouterState");
const gJ = /* @__PURE__ */ S.createContext(null);
process.env.NODE_ENV !== "production" && (gJ.displayName = "Await");
const Gl = /* @__PURE__ */ S.createContext(null);
process.env.NODE_ENV !== "production" && (Gl.displayName = "Navigation");
const FC = /* @__PURE__ */ S.createContext(null);
process.env.NODE_ENV !== "production" && (FC.displayName = "Location");
const Qc = /* @__PURE__ */ S.createContext({
  outlet: null,
  matches: [],
  isDataRoute: !1
});
process.env.NODE_ENV !== "production" && (Qc.displayName = "Route");
const BP = /* @__PURE__ */ S.createContext(null);
process.env.NODE_ENV !== "production" && (BP.displayName = "RouteError");
function vJ(e, t) {
  let {
    relative: n
  } = t === void 0 ? {} : t;
  _C() || (process.env.NODE_ENV !== "production" ? Bn(
    !1,
    // TODO: This error is probably because they somehow have 2 versions of the
    // router loaded. We can help them understand how to avoid that.
    "useHref() may be used only in the context of a <Router> component."
  ) : Bn(!1));
  let {
    basename: i,
    navigator: s
  } = S.useContext(Gl), {
    hash: u,
    pathname: d,
    search: p
  } = AC(e, {
    relative: n
  }), m = d;
  return i !== "/" && (m = d === "/" ? i : Gc([i, d])), s.createHref({
    pathname: m,
    search: p,
    hash: u
  });
}
function _C() {
  return S.useContext(FC) != null;
}
function rv() {
  return _C() || (process.env.NODE_ENV !== "production" ? Bn(
    !1,
    // TODO: This error is probably because they somehow have 2 versions of the
    // router loaded. We can help them understand how to avoid that.
    "useLocation() may be used only in the context of a <Router> component."
  ) : Bn(!1)), S.useContext(FC).location;
}
const y2 = "You should call navigate() in a React.useEffect(), not when your component is first rendered.";
function b2(e) {
  S.useContext(Gl).static || S.useLayoutEffect(e);
}
function C2() {
  let {
    isDataRoute: e
  } = S.useContext(Qc);
  return e ? IJ() : yJ();
}
function yJ() {
  _C() || (process.env.NODE_ENV !== "production" ? Bn(
    !1,
    // TODO: This error is probably because they somehow have 2 versions of the
    // router loaded. We can help them understand how to avoid that.
    "useNavigate() may be used only in the context of a <Router> component."
  ) : Bn(!1));
  let e = S.useContext(LC), {
    basename: t,
    future: n,
    navigator: i
  } = S.useContext(Gl), {
    matches: s
  } = S.useContext(Qc), {
    pathname: u
  } = rv(), d = JSON.stringify(m2(s, n.v7_relativeSplatPath)), p = S.useRef(!1);
  return b2(() => {
    p.current = !0;
  }), S.useCallback(function(v, y) {
    if (y === void 0 && (y = {}), process.env.NODE_ENV !== "production" && Wu(p.current, y2), !p.current) return;
    if (typeof v == "number") {
      i.go(v);
      return;
    }
    let C = g2(v, JSON.parse(d), u, y.relative === "path");
    e == null && t !== "/" && (C.pathname = C.pathname === "/" ? t : Gc([t, C.pathname])), (y.replace ? i.replace : i.push)(C, y.state, y);
  }, [t, i, d, u, e]);
}
function AC(e, t) {
  let {
    relative: n
  } = t === void 0 ? {} : t, {
    future: i
  } = S.useContext(Gl), {
    matches: s
  } = S.useContext(Qc), {
    pathname: u
  } = rv(), d = JSON.stringify(m2(s, i.v7_relativeSplatPath));
  return S.useMemo(() => g2(e, JSON.parse(d), u, n === "path"), [e, d, u, n]);
}
function bJ(e, t) {
  return CJ(e, t);
}
function CJ(e, t, n, i) {
  _C() || (process.env.NODE_ENV !== "production" ? Bn(
    !1,
    // TODO: This error is probably because they somehow have 2 versions of the
    // router loaded. We can help them understand how to avoid that.
    "useRoutes() may be used only in the context of a <Router> component."
  ) : Bn(!1));
  let {
    navigator: s
  } = S.useContext(Gl), {
    matches: u
  } = S.useContext(Qc), d = u[u.length - 1], p = d ? d.params : {}, m = d ? d.pathname : "/", v = d ? d.pathnameBase : "/", y = d && d.route;
  if (process.env.NODE_ENV !== "production") {
    let F = y && y.path || "";
    w2(m, !y || F.endsWith("*"), "You rendered descendant <Routes> (or called `useRoutes()`) at " + ('"' + m + '" (under <Route path="' + F + '">) but the ') + `parent route path has no trailing "*". This means if you navigate deeper, the parent won't match anymore and therefore the child routes will never render.

` + ('Please change the parent <Route path="' + F + '"> to <Route ') + ('path="' + (F === "/" ? "*" : F + "/*") + '">.'));
  }
  let C = rv(), w;
  if (t) {
    var R;
    let F = typeof t == "string" ? nv(t) : t;
    v === "/" || (R = F.pathname) != null && R.startsWith(v) || (process.env.NODE_ENV !== "production" ? Bn(!1, "When overriding the location using `<Routes location>` or `useRoutes(routes, location)`, the location pathname must begin with the portion of the URL pathname that was " + ('matched by all parent routes. The current pathname base is "' + v + '" ') + ('but pathname "' + F.pathname + '" was given in the `location` prop.')) : Bn(!1)), w = F;
  } else
    w = C;
  let O = w.pathname || "/", E = O;
  if (v !== "/") {
    let F = v.replace(/^\//, "").split("/");
    E = "/" + O.replace(/^\//, "").split("/").slice(F.length).join("/");
  }
  let k = KQ(e, {
    pathname: E
  });
  process.env.NODE_ENV !== "production" && (process.env.NODE_ENV !== "production" && Wu(y || k != null, 'No routes matched location "' + w.pathname + w.search + w.hash + '" '), process.env.NODE_ENV !== "production" && Wu(k == null || k[k.length - 1].route.element !== void 0 || k[k.length - 1].route.Component !== void 0 || k[k.length - 1].route.lazy !== void 0, 'Matched leaf route at location "' + w.pathname + w.search + w.hash + '" does not have an element or Component. This means it will render an <Outlet /> with a null value by default resulting in an "empty" page.'));
  let L = TJ(k && k.map((F) => Object.assign({}, F, {
    params: Object.assign({}, p, F.params),
    pathname: Gc([
      v,
      // Re-encode pathnames that were decoded inside matchRoutes
      s.encodeLocation ? s.encodeLocation(F.pathname).pathname : F.pathname
    ]),
    pathnameBase: F.pathnameBase === "/" ? v : Gc([
      v,
      // Re-encode pathnames that were decoded inside matchRoutes
      s.encodeLocation ? s.encodeLocation(F.pathnameBase).pathname : F.pathnameBase
    ])
  })), u, n, i);
  return t && L ? /* @__PURE__ */ S.createElement(FC.Provider, {
    value: {
      location: cC({
        pathname: "/",
        search: "",
        hash: "",
        state: null,
        key: "default"
      }, w),
      navigationType: df.Pop
    }
  }, L) : L;
}
function SJ() {
  let e = MJ(), t = hJ(e) ? e.status + " " + e.statusText : e instanceof Error ? e.message : JSON.stringify(e), n = e instanceof Error ? e.stack : null, i = "rgba(200,200,200, 0.5)", s = {
    padding: "0.5rem",
    backgroundColor: i
  }, u = {
    padding: "2px 4px",
    backgroundColor: i
  }, d = null;
  return process.env.NODE_ENV !== "production" && (console.error("Error handled by React Router default ErrorBoundary:", e), d = /* @__PURE__ */ S.createElement(S.Fragment, null, /* @__PURE__ */ S.createElement("p", null, "💿 Hey developer 👋"), /* @__PURE__ */ S.createElement("p", null, "You can provide a way better UX than this when your app throws errors by providing your own ", /* @__PURE__ */ S.createElement("code", {
    style: u
  }, "ErrorBoundary"), " or", " ", /* @__PURE__ */ S.createElement("code", {
    style: u
  }, "errorElement"), " prop on your route."))), /* @__PURE__ */ S.createElement(S.Fragment, null, /* @__PURE__ */ S.createElement("h2", null, "Unexpected Application Error!"), /* @__PURE__ */ S.createElement("h3", {
    style: {
      fontStyle: "italic"
    }
  }, t), n ? /* @__PURE__ */ S.createElement("pre", {
    style: s
  }, n) : null, d);
}
const wJ = /* @__PURE__ */ S.createElement(SJ, null);
class xJ extends S.Component {
  constructor(t) {
    super(t), this.state = {
      location: t.location,
      revalidation: t.revalidation,
      error: t.error
    };
  }
  static getDerivedStateFromError(t) {
    return {
      error: t
    };
  }
  static getDerivedStateFromProps(t, n) {
    return n.location !== t.location || n.revalidation !== "idle" && t.revalidation === "idle" ? {
      error: t.error,
      location: t.location,
      revalidation: t.revalidation
    } : {
      error: t.error !== void 0 ? t.error : n.error,
      location: n.location,
      revalidation: t.revalidation || n.revalidation
    };
  }
  componentDidCatch(t, n) {
    console.error("React Router caught the following error during render", t, n);
  }
  render() {
    return this.state.error !== void 0 ? /* @__PURE__ */ S.createElement(Qc.Provider, {
      value: this.props.routeContext
    }, /* @__PURE__ */ S.createElement(BP.Provider, {
      value: this.state.error,
      children: this.props.component
    })) : this.props.children;
  }
}
function EJ(e) {
  let {
    routeContext: t,
    match: n,
    children: i
  } = e, s = S.useContext(LC);
  return s && s.static && s.staticContext && (n.route.errorElement || n.route.ErrorBoundary) && (s.staticContext._deepestRenderedBoundaryId = n.route.id), /* @__PURE__ */ S.createElement(Qc.Provider, {
    value: t
  }, i);
}
function TJ(e, t, n, i) {
  var s;
  if (t === void 0 && (t = []), n === void 0 && (n = null), i === void 0 && (i = null), e == null) {
    var u;
    if (!n)
      return null;
    if (n.errors)
      e = n.matches;
    else if ((u = i) != null && u.v7_partialHydration && t.length === 0 && !n.initialized && n.matches.length > 0)
      e = n.matches;
    else
      return null;
  }
  let d = e, p = (s = n) == null ? void 0 : s.errors;
  if (p != null) {
    let y = d.findIndex((C) => C.route.id && (p == null ? void 0 : p[C.route.id]) !== void 0);
    y >= 0 || (process.env.NODE_ENV !== "production" ? Bn(!1, "Could not find a matching route for errors on route IDs: " + Object.keys(p).join(",")) : Bn(!1)), d = d.slice(0, Math.min(d.length, y + 1));
  }
  let m = !1, v = -1;
  if (n && i && i.v7_partialHydration)
    for (let y = 0; y < d.length; y++) {
      let C = d[y];
      if ((C.route.HydrateFallback || C.route.hydrateFallbackElement) && (v = y), C.route.id) {
        let {
          loaderData: w,
          errors: R
        } = n, O = C.route.loader && w[C.route.id] === void 0 && (!R || R[C.route.id] === void 0);
        if (C.route.lazy || O) {
          m = !0, v >= 0 ? d = d.slice(0, v + 1) : d = [d[0]];
          break;
        }
      }
    }
  return d.reduceRight((y, C, w) => {
    let R, O = !1, E = null, k = null;
    n && (R = p && C.route.id ? p[C.route.id] : void 0, E = C.route.errorElement || wJ, m && (v < 0 && w === 0 ? (w2("route-fallback", !1, "No `HydrateFallback` element provided to render during initial hydration"), O = !0, k = null) : v === w && (O = !0, k = C.route.hydrateFallbackElement || null)));
    let L = t.concat(d.slice(0, w + 1)), F = () => {
      let _;
      return R ? _ = E : O ? _ = k : C.route.Component ? _ = /* @__PURE__ */ S.createElement(C.route.Component, null) : C.route.element ? _ = C.route.element : _ = y, /* @__PURE__ */ S.createElement(EJ, {
        match: C,
        routeContext: {
          outlet: y,
          matches: L,
          isDataRoute: n != null
        },
        children: _
      });
    };
    return n && (C.route.ErrorBoundary || C.route.errorElement || w === 0) ? /* @__PURE__ */ S.createElement(xJ, {
      location: n.location,
      revalidation: n.revalidation,
      component: E,
      error: R,
      children: F(),
      routeContext: {
        outlet: null,
        matches: L,
        isDataRoute: !0
      }
    }) : F();
  }, null);
}
var S2 = /* @__PURE__ */ function(e) {
  return e.UseBlocker = "useBlocker", e.UseRevalidator = "useRevalidator", e.UseNavigateStable = "useNavigate", e;
}(S2 || {}), dC = /* @__PURE__ */ function(e) {
  return e.UseBlocker = "useBlocker", e.UseLoaderData = "useLoaderData", e.UseActionData = "useActionData", e.UseRouteError = "useRouteError", e.UseNavigation = "useNavigation", e.UseRouteLoaderData = "useRouteLoaderData", e.UseMatches = "useMatches", e.UseRevalidator = "useRevalidator", e.UseNavigateStable = "useNavigate", e.UseRouteId = "useRouteId", e;
}(dC || {});
function UP(e) {
  return e + " must be used within a data router.  See https://reactrouter.com/v6/routers/picking-a-router.";
}
function RJ(e) {
  let t = S.useContext(LC);
  return t || (process.env.NODE_ENV !== "production" ? Bn(!1, UP(e)) : Bn(!1)), t;
}
function OJ(e) {
  let t = S.useContext(VP);
  return t || (process.env.NODE_ENV !== "production" ? Bn(!1, UP(e)) : Bn(!1)), t;
}
function kJ(e) {
  let t = S.useContext(Qc);
  return t || (process.env.NODE_ENV !== "production" ? Bn(!1, UP(e)) : Bn(!1)), t;
}
function GP(e) {
  let t = kJ(e), n = t.matches[t.matches.length - 1];
  return n.route.id || (process.env.NODE_ENV !== "production" ? Bn(!1, e + ' can only be used on routes that contain a unique "id"') : Bn(!1)), n.route.id;
}
function PJ() {
  return GP(dC.UseRouteId);
}
function MJ() {
  var e;
  let t = S.useContext(BP), n = OJ(dC.UseRouteError), i = GP(dC.UseRouteError);
  return t !== void 0 ? t : (e = n.errors) == null ? void 0 : e[i];
}
function IJ() {
  let {
    router: e
  } = RJ(S2.UseNavigateStable), t = GP(dC.UseNavigateStable), n = S.useRef(!1);
  return b2(() => {
    n.current = !0;
  }), S.useCallback(function(s, u) {
    u === void 0 && (u = {}), process.env.NODE_ENV !== "production" && Wu(n.current, y2), n.current && (typeof s == "number" ? e.navigate(s) : e.navigate(s, cC({
      fromRouteId: t
    }, u)));
  }, [e, t]);
}
const p_ = {};
function w2(e, t, n) {
  !t && !p_[e] && (p_[e] = !0, process.env.NODE_ENV !== "production" && Wu(!1, n));
}
const h_ = {};
function DJ(e, t) {
  process.env.NODE_ENV !== "production" && !h_[t] && (h_[t] = !0, console.warn(t));
}
const m_ = (e, t, n) => DJ(e, "⚠️ React Router Future Flag Warning: " + t + ". " + ("You can use the `" + e + "` future flag to opt-in early. ") + ("For more information, see " + n + "."));
function NJ(e, t) {
  (e == null ? void 0 : e.v7_startTransition) === void 0 && m_("v7_startTransition", "React Router will begin wrapping state updates in `React.startTransition` in v7", "https://reactrouter.com/v6/upgrading/future#v7_starttransition"), (e == null ? void 0 : e.v7_relativeSplatPath) === void 0 && m_("v7_relativeSplatPath", "Relative route resolution within Splat routes is changing in v7", "https://reactrouter.com/v6/upgrading/future#v7_relativesplatpath");
}
function bg(e) {
  process.env.NODE_ENV !== "production" ? Bn(!1, "A <Route> is only ever to be used as the child of <Routes> element, never rendered directly. Please wrap your <Route> in a <Routes>.") : Bn(!1);
}
function LJ(e) {
  let {
    basename: t = "/",
    children: n = null,
    location: i,
    navigationType: s = df.Pop,
    navigator: u,
    static: d = !1,
    future: p
  } = e;
  _C() && (process.env.NODE_ENV !== "production" ? Bn(!1, "You cannot render a <Router> inside another <Router>. You should never have more than one in your app.") : Bn(!1));
  let m = t.replace(/^\/*/, "/"), v = S.useMemo(() => ({
    basename: m,
    navigator: u,
    static: d,
    future: cC({
      v7_relativeSplatPath: !1
    }, p)
  }), [m, p, u, d]);
  typeof i == "string" && (i = nv(i));
  let {
    pathname: y = "/",
    search: C = "",
    hash: w = "",
    state: R = null,
    key: O = "default"
  } = i, E = S.useMemo(() => {
    let k = Cf(y, m);
    return k == null ? null : {
      location: {
        pathname: k,
        search: C,
        hash: w,
        state: R,
        key: O
      },
      navigationType: s
    };
  }, [m, y, C, w, R, O, s]);
  return process.env.NODE_ENV !== "production" && Wu(E != null, '<Router basename="' + m + '"> is not able to match the URL ' + ('"' + y + C + w + '" because it does not start with the ') + "basename, so the <Router> won't render anything."), E == null ? null : /* @__PURE__ */ S.createElement(Gl.Provider, {
    value: v
  }, /* @__PURE__ */ S.createElement(FC.Provider, {
    children: n,
    value: E
  }));
}
function FJ(e) {
  let {
    children: t,
    location: n
  } = e;
  return bJ(Lk(t), n);
}
new Promise(() => {
});
function Lk(e, t) {
  t === void 0 && (t = []);
  let n = [];
  return S.Children.forEach(e, (i, s) => {
    if (!/* @__PURE__ */ S.isValidElement(i))
      return;
    let u = [...t, s];
    if (i.type === S.Fragment) {
      n.push.apply(n, Lk(i.props.children, u));
      return;
    }
    i.type !== bg && (process.env.NODE_ENV !== "production" ? Bn(!1, "[" + (typeof i.type == "string" ? i.type : i.type.name) + "] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>") : Bn(!1)), !i.props.index || !i.props.children || (process.env.NODE_ENV !== "production" ? Bn(!1, "An index route cannot have child routes.") : Bn(!1));
    let d = {
      id: i.props.id || u.join("-"),
      caseSensitive: i.props.caseSensitive,
      element: i.props.element,
      Component: i.props.Component,
      index: i.props.index,
      path: i.props.path,
      loader: i.props.loader,
      action: i.props.action,
      errorElement: i.props.errorElement,
      ErrorBoundary: i.props.ErrorBoundary,
      hasErrorBoundary: i.props.ErrorBoundary != null || i.props.errorElement != null,
      shouldRevalidate: i.props.shouldRevalidate,
      handle: i.props.handle,
      lazy: i.props.lazy
    };
    i.props.children && (d.children = Lk(i.props.children, u)), n.push(d);
  }), n;
}
/**
 * React Router DOM v6.30.1
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
function Kg() {
  return Kg = Object.assign ? Object.assign.bind() : function(e) {
    for (var t = 1; t < arguments.length; t++) {
      var n = arguments[t];
      for (var i in n)
        Object.prototype.hasOwnProperty.call(n, i) && (e[i] = n[i]);
    }
    return e;
  }, Kg.apply(this, arguments);
}
function WP(e, t) {
  if (e == null) return {};
  var n = {}, i = Object.keys(e), s, u;
  for (u = 0; u < i.length; u++)
    s = i[u], !(t.indexOf(s) >= 0) && (n[s] = e[s]);
  return n;
}
const p0 = "get", h0 = "application/x-www-form-urlencoded";
function DE(e) {
  return e != null && typeof e.tagName == "string";
}
function _J(e) {
  return DE(e) && e.tagName.toLowerCase() === "button";
}
function AJ(e) {
  return DE(e) && e.tagName.toLowerCase() === "form";
}
function $J(e) {
  return DE(e) && e.tagName.toLowerCase() === "input";
}
function jJ(e) {
  return !!(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey);
}
function zJ(e, t) {
  return e.button === 0 && // Ignore everything but left clicks
  (!t || t === "_self") && // Let browser handle "target=_blank" etc.
  !jJ(e);
}
let t0 = null;
function HJ() {
  if (t0 === null)
    try {
      new FormData(
        document.createElement("form"),
        // @ts-expect-error if FormData supports the submitter parameter, this will throw
        0
      ), t0 = !1;
    } catch {
      t0 = !0;
    }
  return t0;
}
const VJ = /* @__PURE__ */ new Set(["application/x-www-form-urlencoded", "multipart/form-data", "text/plain"]);
function NO(e) {
  return e != null && !VJ.has(e) ? (process.env.NODE_ENV !== "production" && Wu(!1, '"' + e + '" is not a valid `encType` for `<Form>`/`<fetcher.Form>` ' + ('and will default to "' + h0 + '"')), null) : e;
}
function BJ(e, t) {
  let n, i, s, u, d;
  if (AJ(e)) {
    let p = e.getAttribute("action");
    i = p ? Cf(p, t) : null, n = e.getAttribute("method") || p0, s = NO(e.getAttribute("enctype")) || h0, u = new FormData(e);
  } else if (_J(e) || $J(e) && (e.type === "submit" || e.type === "image")) {
    let p = e.form;
    if (p == null)
      throw new Error('Cannot submit a <button> or <input type="submit"> without a <form>');
    let m = e.getAttribute("formaction") || p.getAttribute("action");
    if (i = m ? Cf(m, t) : null, n = e.getAttribute("formmethod") || p.getAttribute("method") || p0, s = NO(e.getAttribute("formenctype")) || NO(p.getAttribute("enctype")) || h0, u = new FormData(p, e), !HJ()) {
      let {
        name: v,
        type: y,
        value: C
      } = e;
      if (y === "image") {
        let w = v ? v + "." : "";
        u.append(w + "x", "0"), u.append(w + "y", "0");
      } else v && u.append(v, C);
    }
  } else {
    if (DE(e))
      throw new Error('Cannot submit element that is not <form>, <button>, or <input type="submit|image">');
    n = p0, i = null, s = h0, d = e;
  }
  return u && s === "text/plain" && (d = u, u = void 0), {
    action: i,
    method: n.toLowerCase(),
    encType: s,
    formData: u,
    body: d
  };
}
const UJ = ["onClick", "relative", "reloadDocument", "replace", "state", "target", "to", "preventScrollReset", "viewTransition"], GJ = ["aria-current", "caseSensitive", "className", "end", "style", "to", "viewTransition", "children"], WJ = ["fetcherKey", "navigate", "reloadDocument", "replace", "state", "method", "action", "onSubmit", "relative", "preventScrollReset", "viewTransition"], qJ = "6";
try {
  window.__reactRouterVersion = qJ;
} catch {
}
const x2 = /* @__PURE__ */ S.createContext({
  isTransitioning: !1
});
process.env.NODE_ENV !== "production" && (x2.displayName = "ViewTransition");
const KJ = /* @__PURE__ */ S.createContext(/* @__PURE__ */ new Map());
process.env.NODE_ENV !== "production" && (KJ.displayName = "Fetchers");
const YJ = "startTransition", g_ = b0[YJ];
function XJ(e) {
  let {
    basename: t,
    children: n,
    future: i,
    window: s
  } = e, u = S.useRef();
  u.current == null && (u.current = GQ({
    window: s,
    v5Compat: !0
  }));
  let d = u.current, [p, m] = S.useState({
    action: d.action,
    location: d.location
  }), {
    v7_startTransition: v
  } = i || {}, y = S.useCallback((C) => {
    v && g_ ? g_(() => m(C)) : m(C);
  }, [m, v]);
  return S.useLayoutEffect(() => d.listen(y), [d, y]), S.useEffect(() => NJ(i), [i]), /* @__PURE__ */ S.createElement(LJ, {
    basename: t,
    children: n,
    location: p.location,
    navigationType: p.action,
    navigator: d,
    future: i
  });
}
process.env.NODE_ENV;
const QJ = typeof window < "u" && typeof window.document < "u" && typeof window.document.createElement < "u", JJ = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i, qp = /* @__PURE__ */ S.forwardRef(function(t, n) {
  let {
    onClick: i,
    relative: s,
    reloadDocument: u,
    replace: d,
    state: p,
    target: m,
    to: v,
    preventScrollReset: y,
    viewTransition: C
  } = t, w = WP(t, UJ), {
    basename: R
  } = S.useContext(Gl), O, E = !1;
  if (typeof v == "string" && JJ.test(v) && (O = v, QJ))
    try {
      let _ = new URL(window.location.href), P = v.startsWith("//") ? new URL(_.protocol + v) : new URL(v), D = Cf(P.pathname, R);
      P.origin === _.origin && D != null ? v = D + P.search + P.hash : E = !0;
    } catch {
      process.env.NODE_ENV !== "production" && Wu(!1, '<Link to="' + v + '"> contains an invalid URL which will probably break when clicked - please update to a valid URL path.');
    }
  let k = vJ(v, {
    relative: s
  }), L = nZ(v, {
    replace: d,
    state: p,
    target: m,
    preventScrollReset: y,
    relative: s,
    viewTransition: C
  });
  function F(_) {
    i && i(_), _.defaultPrevented || L(_);
  }
  return (
    // eslint-disable-next-line jsx-a11y/anchor-has-content
    /* @__PURE__ */ S.createElement("a", Kg({}, w, {
      href: O || k,
      onClick: E || u ? i : F,
      ref: n,
      target: m
    }))
  );
});
process.env.NODE_ENV !== "production" && (qp.displayName = "Link");
const ZJ = /* @__PURE__ */ S.forwardRef(function(t, n) {
  let {
    "aria-current": i = "page",
    caseSensitive: s = !1,
    className: u = "",
    end: d = !1,
    style: p,
    to: m,
    viewTransition: v,
    children: y
  } = t, C = WP(t, GJ), w = AC(m, {
    relative: C.relative
  }), R = rv(), O = S.useContext(VP), {
    navigator: E,
    basename: k
  } = S.useContext(Gl), L = O != null && // Conditional usage is OK here because the usage of a data router is static
  // eslint-disable-next-line react-hooks/rules-of-hooks
  lZ(w) && v === !0, F = E.encodeLocation ? E.encodeLocation(w).pathname : w.pathname, _ = R.pathname, P = O && O.navigation && O.navigation.location ? O.navigation.location.pathname : null;
  s || (_ = _.toLowerCase(), P = P ? P.toLowerCase() : null, F = F.toLowerCase()), P && k && (P = Cf(P, k) || P);
  const D = F !== "/" && F.endsWith("/") ? F.length - 1 : F.length;
  let z = _ === F || !d && _.startsWith(F) && _.charAt(D) === "/", K = P != null && (P === F || !d && P.startsWith(F) && P.charAt(F.length) === "/"), Q = {
    isActive: z,
    isPending: K,
    isTransitioning: L
  }, H = z ? i : void 0, I;
  typeof u == "function" ? I = u(Q) : I = [u, z ? "active" : null, K ? "pending" : null, L ? "transitioning" : null].filter(Boolean).join(" ");
  let U = typeof p == "function" ? p(Q) : p;
  return /* @__PURE__ */ S.createElement(qp, Kg({}, C, {
    "aria-current": H,
    className: I,
    ref: n,
    style: U,
    to: m,
    viewTransition: v
  }), typeof y == "function" ? y(Q) : y);
});
process.env.NODE_ENV !== "production" && (ZJ.displayName = "NavLink");
const eZ = /* @__PURE__ */ S.forwardRef((e, t) => {
  let {
    fetcherKey: n,
    navigate: i,
    reloadDocument: s,
    replace: u,
    state: d,
    method: p = p0,
    action: m,
    onSubmit: v,
    relative: y,
    preventScrollReset: C,
    viewTransition: w
  } = e, R = WP(e, WJ), O = aZ(), E = sZ(m, {
    relative: y
  }), k = p.toLowerCase() === "get" ? "get" : "post", L = (F) => {
    if (v && v(F), F.defaultPrevented) return;
    F.preventDefault();
    let _ = F.nativeEvent.submitter, P = (_ == null ? void 0 : _.getAttribute("formmethod")) || p;
    O(_ || F.currentTarget, {
      fetcherKey: n,
      method: P,
      navigate: i,
      replace: u,
      state: d,
      relative: y,
      preventScrollReset: C,
      viewTransition: w
    });
  };
  return /* @__PURE__ */ S.createElement("form", Kg({
    ref: t,
    method: k,
    action: E,
    onSubmit: s ? v : L
  }, R));
});
process.env.NODE_ENV !== "production" && (eZ.displayName = "Form");
process.env.NODE_ENV;
var A0;
(function(e) {
  e.UseScrollRestoration = "useScrollRestoration", e.UseSubmit = "useSubmit", e.UseSubmitFetcher = "useSubmitFetcher", e.UseFetcher = "useFetcher", e.useViewTransitionState = "useViewTransitionState";
})(A0 || (A0 = {}));
var v_;
(function(e) {
  e.UseFetcher = "useFetcher", e.UseFetchers = "useFetchers", e.UseScrollRestoration = "useScrollRestoration";
})(v_ || (v_ = {}));
function tZ(e) {
  return e + " must be used within a data router.  See https://reactrouter.com/v6/routers/picking-a-router.";
}
function E2(e) {
  let t = S.useContext(LC);
  return t || (process.env.NODE_ENV !== "production" ? Bn(!1, tZ(e)) : Bn(!1)), t;
}
function nZ(e, t) {
  let {
    target: n,
    replace: i,
    state: s,
    preventScrollReset: u,
    relative: d,
    viewTransition: p
  } = t === void 0 ? {} : t, m = C2(), v = rv(), y = AC(e, {
    relative: d
  });
  return S.useCallback((C) => {
    if (zJ(C, n)) {
      C.preventDefault();
      let w = i !== void 0 ? i : uC(v) === uC(y);
      m(e, {
        replace: w,
        state: s,
        preventScrollReset: u,
        relative: d,
        viewTransition: p
      });
    }
  }, [v, m, y, i, s, n, e, u, d, p]);
}
function rZ() {
  if (typeof document > "u")
    throw new Error("You are calling submit during the server render. Try calling submit within a `useEffect` or callback instead.");
}
let oZ = 0, iZ = () => "__" + String(++oZ) + "__";
function aZ() {
  let {
    router: e
  } = E2(A0.UseSubmit), {
    basename: t
  } = S.useContext(Gl), n = PJ();
  return S.useCallback(function(i, s) {
    s === void 0 && (s = {}), rZ();
    let {
      action: u,
      method: d,
      encType: p,
      formData: m,
      body: v
    } = BJ(i, t);
    if (s.navigate === !1) {
      let y = s.fetcherKey || iZ();
      e.fetch(y, n, s.action || u, {
        preventScrollReset: s.preventScrollReset,
        formData: m,
        body: v,
        formMethod: s.method || d,
        formEncType: s.encType || p,
        flushSync: s.flushSync
      });
    } else
      e.navigate(s.action || u, {
        preventScrollReset: s.preventScrollReset,
        formData: m,
        body: v,
        formMethod: s.method || d,
        formEncType: s.encType || p,
        replace: s.replace,
        state: s.state,
        fromRouteId: n,
        flushSync: s.flushSync,
        viewTransition: s.viewTransition
      });
  }, [e, t, n]);
}
function sZ(e, t) {
  let {
    relative: n
  } = t === void 0 ? {} : t, {
    basename: i
  } = S.useContext(Gl), s = S.useContext(Qc);
  s || (process.env.NODE_ENV !== "production" ? Bn(!1, "useFormAction must be used inside a RouteContext") : Bn(!1));
  let [u] = s.matches.slice(-1), d = Kg({}, AC(e || ".", {
    relative: n
  })), p = rv();
  if (e == null) {
    d.search = p.search;
    let m = new URLSearchParams(d.search), v = m.getAll("index");
    if (v.some((C) => C === "")) {
      m.delete("index"), v.filter((w) => w).forEach((w) => m.append("index", w));
      let C = m.toString();
      d.search = C ? "?" + C : "";
    }
  }
  return (!e || e === ".") && u.route.index && (d.search = d.search ? d.search.replace(/^\?/, "?index&") : "?index"), i !== "/" && (d.pathname = d.pathname === "/" ? i : Gc([i, d.pathname])), uC(d);
}
function lZ(e, t) {
  t === void 0 && (t = {});
  let n = S.useContext(x2);
  n == null && (process.env.NODE_ENV !== "production" ? Bn(!1, "`useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  Did you accidentally import `RouterProvider` from `react-router`?") : Bn(!1));
  let {
    basename: i
  } = E2(A0.useViewTransitionState), s = AC(e, {
    relative: t.relative
  });
  if (!n.isTransitioning)
    return !1;
  let u = Cf(n.currentLocation.pathname, i) || n.currentLocation.pathname, d = Cf(n.nextLocation.pathname, i) || n.nextLocation.pathname;
  return Nk(s.pathname, d) != null || Nk(s.pathname, u) != null;
}
const Pn = (e) => typeof e == "string", kb = () => {
  let e, t;
  const n = new Promise((i, s) => {
    e = i, t = s;
  });
  return n.resolve = e, n.reject = t, n;
}, y_ = (e) => e == null ? "" : "" + e, uZ = (e, t, n) => {
  e.forEach((i) => {
    t[i] && (n[i] = t[i]);
  });
}, cZ = /###/g, b_ = (e) => e && e.indexOf("###") > -1 ? e.replace(cZ, ".") : e, C_ = (e) => !e || Pn(e), Kb = (e, t, n) => {
  const i = Pn(t) ? t.split(".") : t;
  let s = 0;
  for (; s < i.length - 1; ) {
    if (C_(e)) return {};
    const u = b_(i[s]);
    !e[u] && n && (e[u] = new n()), Object.prototype.hasOwnProperty.call(e, u) ? e = e[u] : e = {}, ++s;
  }
  return C_(e) ? {} : {
    obj: e,
    k: b_(i[s])
  };
}, S_ = (e, t, n) => {
  const {
    obj: i,
    k: s
  } = Kb(e, t, Object);
  if (i !== void 0 || t.length === 1) {
    i[s] = n;
    return;
  }
  let u = t[t.length - 1], d = t.slice(0, t.length - 1), p = Kb(e, d, Object);
  for (; p.obj === void 0 && d.length; )
    u = `${d[d.length - 1]}.${u}`, d = d.slice(0, d.length - 1), p = Kb(e, d, Object), p && p.obj && typeof p.obj[`${p.k}.${u}`] < "u" && (p.obj = void 0);
  p.obj[`${p.k}.${u}`] = n;
}, dZ = (e, t, n, i) => {
  const {
    obj: s,
    k: u
  } = Kb(e, t, Object);
  s[u] = s[u] || [], s[u].push(n);
}, $0 = (e, t) => {
  const {
    obj: n,
    k: i
  } = Kb(e, t);
  if (n)
    return n[i];
}, fZ = (e, t, n) => {
  const i = $0(e, n);
  return i !== void 0 ? i : $0(t, n);
}, T2 = (e, t, n) => {
  for (const i in t)
    i !== "__proto__" && i !== "constructor" && (i in e ? Pn(e[i]) || e[i] instanceof String || Pn(t[i]) || t[i] instanceof String ? n && (e[i] = t[i]) : T2(e[i], t[i], n) : e[i] = t[i]);
  return e;
}, cg = (e) => e.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");
var pZ = {
  "&": "&amp;",
  "<": "&lt;",
  ">": "&gt;",
  '"': "&quot;",
  "'": "&#39;",
  "/": "&#x2F;"
};
const hZ = (e) => Pn(e) ? e.replace(/[&<>"'\/]/g, (t) => pZ[t]) : e;
class mZ {
  constructor(t) {
    this.capacity = t, this.regExpMap = /* @__PURE__ */ new Map(), this.regExpQueue = [];
  }
  getRegExp(t) {
    const n = this.regExpMap.get(t);
    if (n !== void 0)
      return n;
    const i = new RegExp(t);
    return this.regExpQueue.length === this.capacity && this.regExpMap.delete(this.regExpQueue.shift()), this.regExpMap.set(t, i), this.regExpQueue.push(t), i;
  }
}
const gZ = [" ", ",", "?", "!", ";"], vZ = new mZ(20), yZ = (e, t, n) => {
  t = t || "", n = n || "";
  const i = gZ.filter((d) => t.indexOf(d) < 0 && n.indexOf(d) < 0);
  if (i.length === 0) return !0;
  const s = vZ.getRegExp(`(${i.map((d) => d === "?" ? "\\?" : d).join("|")})`);
  let u = !s.test(e);
  if (!u) {
    const d = e.indexOf(n);
    d > 0 && !s.test(e.substring(0, d)) && (u = !0);
  }
  return u;
}, Fk = function(e, t) {
  let n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : ".";
  if (!e) return;
  if (e[t]) return e[t];
  const i = t.split(n);
  let s = e;
  for (let u = 0; u < i.length; ) {
    if (!s || typeof s != "object")
      return;
    let d, p = "";
    for (let m = u; m < i.length; ++m)
      if (m !== u && (p += n), p += i[m], d = s[p], d !== void 0) {
        if (["string", "number", "boolean"].indexOf(typeof d) > -1 && m < i.length - 1)
          continue;
        u += m - u + 1;
        break;
      }
    s = d;
  }
  return s;
}, j0 = (e) => e && e.replace("_", "-"), bZ = {
  type: "logger",
  log(e) {
    this.output("log", e);
  },
  warn(e) {
    this.output("warn", e);
  },
  error(e) {
    this.output("error", e);
  },
  output(e, t) {
    console && console[e] && console[e].apply(console, t);
  }
};
class z0 {
  constructor(t) {
    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    this.init(t, n);
  }
  init(t) {
    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    this.prefix = n.prefix || "i18next:", this.logger = t || bZ, this.options = n, this.debug = n.debug;
  }
  log() {
    for (var t = arguments.length, n = new Array(t), i = 0; i < t; i++)
      n[i] = arguments[i];
    return this.forward(n, "log", "", !0);
  }
  warn() {
    for (var t = arguments.length, n = new Array(t), i = 0; i < t; i++)
      n[i] = arguments[i];
    return this.forward(n, "warn", "", !0);
  }
  error() {
    for (var t = arguments.length, n = new Array(t), i = 0; i < t; i++)
      n[i] = arguments[i];
    return this.forward(n, "error", "");
  }
  deprecate() {
    for (var t = arguments.length, n = new Array(t), i = 0; i < t; i++)
      n[i] = arguments[i];
    return this.forward(n, "warn", "WARNING DEPRECATED: ", !0);
  }
  forward(t, n, i, s) {
    return s && !this.debug ? null : (Pn(t[0]) && (t[0] = `${i}${this.prefix} ${t[0]}`), this.logger[n](t));
  }
  create(t) {
    return new z0(this.logger, {
      prefix: `${this.prefix}:${t}:`,
      ...this.options
    });
  }
  clone(t) {
    return t = t || this.options, t.prefix = t.prefix || this.prefix, new z0(this.logger, t);
  }
}
var $u = new z0();
class NE {
  constructor() {
    this.observers = {};
  }
  on(t, n) {
    return t.split(" ").forEach((i) => {
      this.observers[i] || (this.observers[i] = /* @__PURE__ */ new Map());
      const s = this.observers[i].get(n) || 0;
      this.observers[i].set(n, s + 1);
    }), this;
  }
  off(t, n) {
    if (this.observers[t]) {
      if (!n) {
        delete this.observers[t];
        return;
      }
      this.observers[t].delete(n);
    }
  }
  emit(t) {
    for (var n = arguments.length, i = new Array(n > 1 ? n - 1 : 0), s = 1; s < n; s++)
      i[s - 1] = arguments[s];
    this.observers[t] && Array.from(this.observers[t].entries()).forEach((d) => {
      let [p, m] = d;
      for (let v = 0; v < m; v++)
        p(...i);
    }), this.observers["*"] && Array.from(this.observers["*"].entries()).forEach((d) => {
      let [p, m] = d;
      for (let v = 0; v < m; v++)
        p.apply(p, [t, ...i]);
    });
  }
}
class w_ extends NE {
  constructor(t) {
    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {
      ns: ["translation"],
      defaultNS: "translation"
    };
    super(), this.data = t || {}, this.options = n, this.options.keySeparator === void 0 && (this.options.keySeparator = "."), this.options.ignoreJSONStructure === void 0 && (this.options.ignoreJSONStructure = !0);
  }
  addNamespaces(t) {
    this.options.ns.indexOf(t) < 0 && this.options.ns.push(t);
  }
  removeNamespaces(t) {
    const n = this.options.ns.indexOf(t);
    n > -1 && this.options.ns.splice(n, 1);
  }
  getResource(t, n, i) {
    let s = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
    const u = s.keySeparator !== void 0 ? s.keySeparator : this.options.keySeparator, d = s.ignoreJSONStructure !== void 0 ? s.ignoreJSONStructure : this.options.ignoreJSONStructure;
    let p;
    t.indexOf(".") > -1 ? p = t.split(".") : (p = [t, n], i && (Array.isArray(i) ? p.push(...i) : Pn(i) && u ? p.push(...i.split(u)) : p.push(i)));
    const m = $0(this.data, p);
    return !m && !n && !i && t.indexOf(".") > -1 && (t = p[0], n = p[1], i = p.slice(2).join(".")), m || !d || !Pn(i) ? m : Fk(this.data && this.data[t] && this.data[t][n], i, u);
  }
  addResource(t, n, i, s) {
    let u = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : {
      silent: !1
    };
    const d = u.keySeparator !== void 0 ? u.keySeparator : this.options.keySeparator;
    let p = [t, n];
    i && (p = p.concat(d ? i.split(d) : i)), t.indexOf(".") > -1 && (p = t.split("."), s = n, n = p[1]), this.addNamespaces(n), S_(this.data, p, s), u.silent || this.emit("added", t, n, i, s);
  }
  addResources(t, n, i) {
    let s = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {
      silent: !1
    };
    for (const u in i)
      (Pn(i[u]) || Array.isArray(i[u])) && this.addResource(t, n, u, i[u], {
        silent: !0
      });
    s.silent || this.emit("added", t, n, i);
  }
  addResourceBundle(t, n, i, s, u) {
    let d = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {
      silent: !1,
      skipCopy: !1
    }, p = [t, n];
    t.indexOf(".") > -1 && (p = t.split("."), s = i, i = n, n = p[1]), this.addNamespaces(n);
    let m = $0(this.data, p) || {};
    d.skipCopy || (i = JSON.parse(JSON.stringify(i))), s ? T2(m, i, u) : m = {
      ...m,
      ...i
    }, S_(this.data, p, m), d.silent || this.emit("added", t, n, i);
  }
  removeResourceBundle(t, n) {
    this.hasResourceBundle(t, n) && delete this.data[t][n], this.removeNamespaces(n), this.emit("removed", t, n);
  }
  hasResourceBundle(t, n) {
    return this.getResource(t, n) !== void 0;
  }
  getResourceBundle(t, n) {
    return n || (n = this.options.defaultNS), this.options.compatibilityAPI === "v1" ? {
      ...this.getResource(t, n)
    } : this.getResource(t, n);
  }
  getDataByLanguage(t) {
    return this.data[t];
  }
  hasLanguageSomeTranslations(t) {
    const n = this.getDataByLanguage(t);
    return !!(n && Object.keys(n) || []).find((s) => n[s] && Object.keys(n[s]).length > 0);
  }
  toJSON() {
    return this.data;
  }
}
var R2 = {
  processors: {},
  addPostProcessor(e) {
    this.processors[e.name] = e;
  },
  handle(e, t, n, i, s) {
    return e.forEach((u) => {
      this.processors[u] && (t = this.processors[u].process(t, n, i, s));
    }), t;
  }
};
const x_ = {};
class H0 extends NE {
  constructor(t) {
    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    super(), uZ(["resourceStore", "languageUtils", "pluralResolver", "interpolator", "backendConnector", "i18nFormat", "utils"], t, this), this.options = n, this.options.keySeparator === void 0 && (this.options.keySeparator = "."), this.logger = $u.create("translator");
  }
  changeLanguage(t) {
    t && (this.language = t);
  }
  exists(t) {
    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {
      interpolation: {}
    };
    if (t == null)
      return !1;
    const i = this.resolve(t, n);
    return i && i.res !== void 0;
  }
  extractFromKey(t, n) {
    let i = n.nsSeparator !== void 0 ? n.nsSeparator : this.options.nsSeparator;
    i === void 0 && (i = ":");
    const s = n.keySeparator !== void 0 ? n.keySeparator : this.options.keySeparator;
    let u = n.ns || this.options.defaultNS || [];
    const d = i && t.indexOf(i) > -1, p = !this.options.userDefinedKeySeparator && !n.keySeparator && !this.options.userDefinedNsSeparator && !n.nsSeparator && !yZ(t, i, s);
    if (d && !p) {
      const m = t.match(this.interpolator.nestingRegexp);
      if (m && m.length > 0)
        return {
          key: t,
          namespaces: Pn(u) ? [u] : u
        };
      const v = t.split(i);
      (i !== s || i === s && this.options.ns.indexOf(v[0]) > -1) && (u = v.shift()), t = v.join(s);
    }
    return {
      key: t,
      namespaces: Pn(u) ? [u] : u
    };
  }
  translate(t, n, i) {
    if (typeof n != "object" && this.options.overloadTranslationOptionHandler && (n = this.options.overloadTranslationOptionHandler(arguments)), typeof n == "object" && (n = {
      ...n
    }), n || (n = {}), t == null) return "";
    Array.isArray(t) || (t = [String(t)]);
    const s = n.returnDetails !== void 0 ? n.returnDetails : this.options.returnDetails, u = n.keySeparator !== void 0 ? n.keySeparator : this.options.keySeparator, {
      key: d,
      namespaces: p
    } = this.extractFromKey(t[t.length - 1], n), m = p[p.length - 1], v = n.lng || this.language, y = n.appendNamespaceToCIMode || this.options.appendNamespaceToCIMode;
    if (v && v.toLowerCase() === "cimode") {
      if (y) {
        const P = n.nsSeparator || this.options.nsSeparator;
        return s ? {
          res: `${m}${P}${d}`,
          usedKey: d,
          exactUsedKey: d,
          usedLng: v,
          usedNS: m,
          usedParams: this.getUsedParamsDetails(n)
        } : `${m}${P}${d}`;
      }
      return s ? {
        res: d,
        usedKey: d,
        exactUsedKey: d,
        usedLng: v,
        usedNS: m,
        usedParams: this.getUsedParamsDetails(n)
      } : d;
    }
    const C = this.resolve(t, n);
    let w = C && C.res;
    const R = C && C.usedKey || d, O = C && C.exactUsedKey || d, E = Object.prototype.toString.apply(w), k = ["[object Number]", "[object Function]", "[object RegExp]"], L = n.joinArrays !== void 0 ? n.joinArrays : this.options.joinArrays, F = !this.i18nFormat || this.i18nFormat.handleAsObject, _ = !Pn(w) && typeof w != "boolean" && typeof w != "number";
    if (F && w && _ && k.indexOf(E) < 0 && !(Pn(L) && Array.isArray(w))) {
      if (!n.returnObjects && !this.options.returnObjects) {
        this.options.returnedObjectHandler || this.logger.warn("accessing an object - but returnObjects options is not enabled!");
        const P = this.options.returnedObjectHandler ? this.options.returnedObjectHandler(R, w, {
          ...n,
          ns: p
        }) : `key '${d} (${this.language})' returned an object instead of string.`;
        return s ? (C.res = P, C.usedParams = this.getUsedParamsDetails(n), C) : P;
      }
      if (u) {
        const P = Array.isArray(w), D = P ? [] : {}, z = P ? O : R;
        for (const K in w)
          if (Object.prototype.hasOwnProperty.call(w, K)) {
            const Q = `${z}${u}${K}`;
            D[K] = this.translate(Q, {
              ...n,
              joinArrays: !1,
              ns: p
            }), D[K] === Q && (D[K] = w[K]);
          }
        w = D;
      }
    } else if (F && Pn(L) && Array.isArray(w))
      w = w.join(L), w && (w = this.extendTranslation(w, t, n, i));
    else {
      let P = !1, D = !1;
      const z = n.count !== void 0 && !Pn(n.count), K = H0.hasDefaultValue(n), Q = z ? this.pluralResolver.getSuffix(v, n.count, n) : "", H = n.ordinal && z ? this.pluralResolver.getSuffix(v, n.count, {
        ordinal: !1
      }) : "", I = z && !n.ordinal && n.count === 0 && this.pluralResolver.shouldUseIntlApi(), U = I && n[`defaultValue${this.options.pluralSeparator}zero`] || n[`defaultValue${Q}`] || n[`defaultValue${H}`] || n.defaultValue;
      !this.isValidLookup(w) && K && (P = !0, w = U), this.isValidLookup(w) || (D = !0, w = d);
      const Y = (n.missingKeyNoValueFallbackToKey || this.options.missingKeyNoValueFallbackToKey) && D ? void 0 : w, te = K && U !== w && this.options.updateMissing;
      if (D || P || te) {
        if (this.logger.log(te ? "updateKey" : "missingKey", v, m, d, te ? U : w), u) {
          const ne = this.resolve(d, {
            ...n,
            keySeparator: !1
          });
          ne && ne.res && this.logger.warn("Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.");
        }
        let B = [];
        const W = this.languageUtils.getFallbackCodes(this.options.fallbackLng, n.lng || this.language);
        if (this.options.saveMissingTo === "fallback" && W && W[0])
          for (let ne = 0; ne < W.length; ne++)
            B.push(W[ne]);
        else this.options.saveMissingTo === "all" ? B = this.languageUtils.toResolveHierarchy(n.lng || this.language) : B.push(n.lng || this.language);
        const q = (ne, re, X) => {
          const j = K && X !== w ? X : Y;
          this.options.missingKeyHandler ? this.options.missingKeyHandler(ne, m, re, j, te, n) : this.backendConnector && this.backendConnector.saveMissing && this.backendConnector.saveMissing(ne, m, re, j, te, n), this.emit("missingKey", ne, m, re, w);
        };
        this.options.saveMissing && (this.options.saveMissingPlurals && z ? B.forEach((ne) => {
          const re = this.pluralResolver.getSuffixes(ne, n);
          I && n[`defaultValue${this.options.pluralSeparator}zero`] && re.indexOf(`${this.options.pluralSeparator}zero`) < 0 && re.push(`${this.options.pluralSeparator}zero`), re.forEach((X) => {
            q([ne], d + X, n[`defaultValue${X}`] || U);
          });
        }) : q(B, d, U));
      }
      w = this.extendTranslation(w, t, n, C, i), D && w === d && this.options.appendNamespaceToMissingKey && (w = `${m}:${d}`), (D || P) && this.options.parseMissingKeyHandler && (this.options.compatibilityAPI !== "v1" ? w = this.options.parseMissingKeyHandler(this.options.appendNamespaceToMissingKey ? `${m}:${d}` : d, P ? w : void 0) : w = this.options.parseMissingKeyHandler(w));
    }
    return s ? (C.res = w, C.usedParams = this.getUsedParamsDetails(n), C) : w;
  }
  extendTranslation(t, n, i, s, u) {
    var d = this;
    if (this.i18nFormat && this.i18nFormat.parse)
      t = this.i18nFormat.parse(t, {
        ...this.options.interpolation.defaultVariables,
        ...i
      }, i.lng || this.language || s.usedLng, s.usedNS, s.usedKey, {
        resolved: s
      });
    else if (!i.skipInterpolation) {
      i.interpolation && this.interpolator.init({
        ...i,
        interpolation: {
          ...this.options.interpolation,
          ...i.interpolation
        }
      });
      const v = Pn(t) && (i && i.interpolation && i.interpolation.skipOnVariables !== void 0 ? i.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables);
      let y;
      if (v) {
        const w = t.match(this.interpolator.nestingRegexp);
        y = w && w.length;
      }
      let C = i.replace && !Pn(i.replace) ? i.replace : i;
      if (this.options.interpolation.defaultVariables && (C = {
        ...this.options.interpolation.defaultVariables,
        ...C
      }), t = this.interpolator.interpolate(t, C, i.lng || this.language || s.usedLng, i), v) {
        const w = t.match(this.interpolator.nestingRegexp), R = w && w.length;
        y < R && (i.nest = !1);
      }
      !i.lng && this.options.compatibilityAPI !== "v1" && s && s.res && (i.lng = this.language || s.usedLng), i.nest !== !1 && (t = this.interpolator.nest(t, function() {
        for (var w = arguments.length, R = new Array(w), O = 0; O < w; O++)
          R[O] = arguments[O];
        return u && u[0] === R[0] && !i.context ? (d.logger.warn(`It seems you are nesting recursively key: ${R[0]} in key: ${n[0]}`), null) : d.translate(...R, n);
      }, i)), i.interpolation && this.interpolator.reset();
    }
    const p = i.postProcess || this.options.postProcess, m = Pn(p) ? [p] : p;
    return t != null && m && m.length && i.applyPostProcessor !== !1 && (t = R2.handle(m, t, n, this.options && this.options.postProcessPassResolved ? {
      i18nResolved: {
        ...s,
        usedParams: this.getUsedParamsDetails(i)
      },
      ...i
    } : i, this)), t;
  }
  resolve(t) {
    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, i, s, u, d, p;
    return Pn(t) && (t = [t]), t.forEach((m) => {
      if (this.isValidLookup(i)) return;
      const v = this.extractFromKey(m, n), y = v.key;
      s = y;
      let C = v.namespaces;
      this.options.fallbackNS && (C = C.concat(this.options.fallbackNS));
      const w = n.count !== void 0 && !Pn(n.count), R = w && !n.ordinal && n.count === 0 && this.pluralResolver.shouldUseIntlApi(), O = n.context !== void 0 && (Pn(n.context) || typeof n.context == "number") && n.context !== "", E = n.lngs ? n.lngs : this.languageUtils.toResolveHierarchy(n.lng || this.language, n.fallbackLng);
      C.forEach((k) => {
        this.isValidLookup(i) || (p = k, !x_[`${E[0]}-${k}`] && this.utils && this.utils.hasLoadedNamespace && !this.utils.hasLoadedNamespace(p) && (x_[`${E[0]}-${k}`] = !0, this.logger.warn(`key "${s}" for languages "${E.join(", ")}" won't get resolved as namespace "${p}" was not yet loaded`, "This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!")), E.forEach((L) => {
          if (this.isValidLookup(i)) return;
          d = L;
          const F = [y];
          if (this.i18nFormat && this.i18nFormat.addLookupKeys)
            this.i18nFormat.addLookupKeys(F, y, L, k, n);
          else {
            let P;
            w && (P = this.pluralResolver.getSuffix(L, n.count, n));
            const D = `${this.options.pluralSeparator}zero`, z = `${this.options.pluralSeparator}ordinal${this.options.pluralSeparator}`;
            if (w && (F.push(y + P), n.ordinal && P.indexOf(z) === 0 && F.push(y + P.replace(z, this.options.pluralSeparator)), R && F.push(y + D)), O) {
              const K = `${y}${this.options.contextSeparator}${n.context}`;
              F.push(K), w && (F.push(K + P), n.ordinal && P.indexOf(z) === 0 && F.push(K + P.replace(z, this.options.pluralSeparator)), R && F.push(K + D));
            }
          }
          let _;
          for (; _ = F.pop(); )
            this.isValidLookup(i) || (u = _, i = this.getResource(L, k, _, n));
        }));
      });
    }), {
      res: i,
      usedKey: s,
      exactUsedKey: u,
      usedLng: d,
      usedNS: p
    };
  }
  isValidLookup(t) {
    return t !== void 0 && !(!this.options.returnNull && t === null) && !(!this.options.returnEmptyString && t === "");
  }
  getResource(t, n, i) {
    let s = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
    return this.i18nFormat && this.i18nFormat.getResource ? this.i18nFormat.getResource(t, n, i, s) : this.resourceStore.getResource(t, n, i, s);
  }
  getUsedParamsDetails() {
    let t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    const n = ["defaultValue", "ordinal", "context", "replace", "lng", "lngs", "fallbackLng", "ns", "keySeparator", "nsSeparator", "returnObjects", "returnDetails", "joinArrays", "postProcess", "interpolation"], i = t.replace && !Pn(t.replace);
    let s = i ? t.replace : t;
    if (i && typeof t.count < "u" && (s.count = t.count), this.options.interpolation.defaultVariables && (s = {
      ...this.options.interpolation.defaultVariables,
      ...s
    }), !i) {
      s = {
        ...s
      };
      for (const u of n)
        delete s[u];
    }
    return s;
  }
  static hasDefaultValue(t) {
    const n = "defaultValue";
    for (const i in t)
      if (Object.prototype.hasOwnProperty.call(t, i) && n === i.substring(0, n.length) && t[i] !== void 0)
        return !0;
    return !1;
  }
}
const LO = (e) => e.charAt(0).toUpperCase() + e.slice(1);
class E_ {
  constructor(t) {
    this.options = t, this.supportedLngs = this.options.supportedLngs || !1, this.logger = $u.create("languageUtils");
  }
  getScriptPartFromCode(t) {
    if (t = j0(t), !t || t.indexOf("-") < 0) return null;
    const n = t.split("-");
    return n.length === 2 || (n.pop(), n[n.length - 1].toLowerCase() === "x") ? null : this.formatLanguageCode(n.join("-"));
  }
  getLanguagePartFromCode(t) {
    if (t = j0(t), !t || t.indexOf("-") < 0) return t;
    const n = t.split("-");
    return this.formatLanguageCode(n[0]);
  }
  formatLanguageCode(t) {
    if (Pn(t) && t.indexOf("-") > -1) {
      if (typeof Intl < "u" && typeof Intl.getCanonicalLocales < "u")
        try {
          let s = Intl.getCanonicalLocales(t)[0];
          if (s && this.options.lowerCaseLng && (s = s.toLowerCase()), s) return s;
        } catch {
        }
      const n = ["hans", "hant", "latn", "cyrl", "cans", "mong", "arab"];
      let i = t.split("-");
      return this.options.lowerCaseLng ? i = i.map((s) => s.toLowerCase()) : i.length === 2 ? (i[0] = i[0].toLowerCase(), i[1] = i[1].toUpperCase(), n.indexOf(i[1].toLowerCase()) > -1 && (i[1] = LO(i[1].toLowerCase()))) : i.length === 3 && (i[0] = i[0].toLowerCase(), i[1].length === 2 && (i[1] = i[1].toUpperCase()), i[0] !== "sgn" && i[2].length === 2 && (i[2] = i[2].toUpperCase()), n.indexOf(i[1].toLowerCase()) > -1 && (i[1] = LO(i[1].toLowerCase())), n.indexOf(i[2].toLowerCase()) > -1 && (i[2] = LO(i[2].toLowerCase()))), i.join("-");
    }
    return this.options.cleanCode || this.options.lowerCaseLng ? t.toLowerCase() : t;
  }
  isSupportedCode(t) {
    return (this.options.load === "languageOnly" || this.options.nonExplicitSupportedLngs) && (t = this.getLanguagePartFromCode(t)), !this.supportedLngs || !this.supportedLngs.length || this.supportedLngs.indexOf(t) > -1;
  }
  getBestMatchFromCodes(t) {
    if (!t) return null;
    let n;
    return t.forEach((i) => {
      if (n) return;
      const s = this.formatLanguageCode(i);
      (!this.options.supportedLngs || this.isSupportedCode(s)) && (n = s);
    }), !n && this.options.supportedLngs && t.forEach((i) => {
      if (n) return;
      const s = this.getLanguagePartFromCode(i);
      if (this.isSupportedCode(s)) return n = s;
      n = this.options.supportedLngs.find((u) => {
        if (u === s) return u;
        if (!(u.indexOf("-") < 0 && s.indexOf("-") < 0) && (u.indexOf("-") > 0 && s.indexOf("-") < 0 && u.substring(0, u.indexOf("-")) === s || u.indexOf(s) === 0 && s.length > 1))
          return u;
      });
    }), n || (n = this.getFallbackCodes(this.options.fallbackLng)[0]), n;
  }
  getFallbackCodes(t, n) {
    if (!t) return [];
    if (typeof t == "function" && (t = t(n)), Pn(t) && (t = [t]), Array.isArray(t)) return t;
    if (!n) return t.default || [];
    let i = t[n];
    return i || (i = t[this.getScriptPartFromCode(n)]), i || (i = t[this.formatLanguageCode(n)]), i || (i = t[this.getLanguagePartFromCode(n)]), i || (i = t.default), i || [];
  }
  toResolveHierarchy(t, n) {
    const i = this.getFallbackCodes(n || this.options.fallbackLng || [], t), s = [], u = (d) => {
      d && (this.isSupportedCode(d) ? s.push(d) : this.logger.warn(`rejecting language code not found in supportedLngs: ${d}`));
    };
    return Pn(t) && (t.indexOf("-") > -1 || t.indexOf("_") > -1) ? (this.options.load !== "languageOnly" && u(this.formatLanguageCode(t)), this.options.load !== "languageOnly" && this.options.load !== "currentOnly" && u(this.getScriptPartFromCode(t)), this.options.load !== "currentOnly" && u(this.getLanguagePartFromCode(t))) : Pn(t) && u(this.formatLanguageCode(t)), i.forEach((d) => {
      s.indexOf(d) < 0 && u(this.formatLanguageCode(d));
    }), s;
  }
}
let CZ = [{
  lngs: ["ach", "ak", "am", "arn", "br", "fil", "gun", "ln", "mfe", "mg", "mi", "oc", "pt", "pt-BR", "tg", "tl", "ti", "tr", "uz", "wa"],
  nr: [1, 2],
  fc: 1
}, {
  lngs: ["af", "an", "ast", "az", "bg", "bn", "ca", "da", "de", "dev", "el", "en", "eo", "es", "et", "eu", "fi", "fo", "fur", "fy", "gl", "gu", "ha", "hi", "hu", "hy", "ia", "it", "kk", "kn", "ku", "lb", "mai", "ml", "mn", "mr", "nah", "nap", "nb", "ne", "nl", "nn", "no", "nso", "pa", "pap", "pms", "ps", "pt-PT", "rm", "sco", "se", "si", "so", "son", "sq", "sv", "sw", "ta", "te", "tk", "ur", "yo"],
  nr: [1, 2],
  fc: 2
}, {
  lngs: ["ay", "bo", "cgg", "fa", "ht", "id", "ja", "jbo", "ka", "km", "ko", "ky", "lo", "ms", "sah", "su", "th", "tt", "ug", "vi", "wo", "zh"],
  nr: [1],
  fc: 3
}, {
  lngs: ["be", "bs", "cnr", "dz", "hr", "ru", "sr", "uk"],
  nr: [1, 2, 5],
  fc: 4
}, {
  lngs: ["ar"],
  nr: [0, 1, 2, 3, 11, 100],
  fc: 5
}, {
  lngs: ["cs", "sk"],
  nr: [1, 2, 5],
  fc: 6
}, {
  lngs: ["csb", "pl"],
  nr: [1, 2, 5],
  fc: 7
}, {
  lngs: ["cy"],
  nr: [1, 2, 3, 8],
  fc: 8
}, {
  lngs: ["fr"],
  nr: [1, 2],
  fc: 9
}, {
  lngs: ["ga"],
  nr: [1, 2, 3, 7, 11],
  fc: 10
}, {
  lngs: ["gd"],
  nr: [1, 2, 3, 20],
  fc: 11
}, {
  lngs: ["is"],
  nr: [1, 2],
  fc: 12
}, {
  lngs: ["jv"],
  nr: [0, 1],
  fc: 13
}, {
  lngs: ["kw"],
  nr: [1, 2, 3, 4],
  fc: 14
}, {
  lngs: ["lt"],
  nr: [1, 2, 10],
  fc: 15
}, {
  lngs: ["lv"],
  nr: [1, 2, 0],
  fc: 16
}, {
  lngs: ["mk"],
  nr: [1, 2],
  fc: 17
}, {
  lngs: ["mnk"],
  nr: [0, 1, 2],
  fc: 18
}, {
  lngs: ["mt"],
  nr: [1, 2, 11, 20],
  fc: 19
}, {
  lngs: ["or"],
  nr: [2, 1],
  fc: 2
}, {
  lngs: ["ro"],
  nr: [1, 2, 20],
  fc: 20
}, {
  lngs: ["sl"],
  nr: [5, 1, 2, 3],
  fc: 21
}, {
  lngs: ["he", "iw"],
  nr: [1, 2, 20, 21],
  fc: 22
}], SZ = {
  1: (e) => +(e > 1),
  2: (e) => +(e != 1),
  3: (e) => 0,
  4: (e) => e % 10 == 1 && e % 100 != 11 ? 0 : e % 10 >= 2 && e % 10 <= 4 && (e % 100 < 10 || e % 100 >= 20) ? 1 : 2,
  5: (e) => e == 0 ? 0 : e == 1 ? 1 : e == 2 ? 2 : e % 100 >= 3 && e % 100 <= 10 ? 3 : e % 100 >= 11 ? 4 : 5,
  6: (e) => e == 1 ? 0 : e >= 2 && e <= 4 ? 1 : 2,
  7: (e) => e == 1 ? 0 : e % 10 >= 2 && e % 10 <= 4 && (e % 100 < 10 || e % 100 >= 20) ? 1 : 2,
  8: (e) => e == 1 ? 0 : e == 2 ? 1 : e != 8 && e != 11 ? 2 : 3,
  9: (e) => +(e >= 2),
  10: (e) => e == 1 ? 0 : e == 2 ? 1 : e < 7 ? 2 : e < 11 ? 3 : 4,
  11: (e) => e == 1 || e == 11 ? 0 : e == 2 || e == 12 ? 1 : e > 2 && e < 20 ? 2 : 3,
  12: (e) => +(e % 10 != 1 || e % 100 == 11),
  13: (e) => +(e !== 0),
  14: (e) => e == 1 ? 0 : e == 2 ? 1 : e == 3 ? 2 : 3,
  15: (e) => e % 10 == 1 && e % 100 != 11 ? 0 : e % 10 >= 2 && (e % 100 < 10 || e % 100 >= 20) ? 1 : 2,
  16: (e) => e % 10 == 1 && e % 100 != 11 ? 0 : e !== 0 ? 1 : 2,
  17: (e) => e == 1 || e % 10 == 1 && e % 100 != 11 ? 0 : 1,
  18: (e) => e == 0 ? 0 : e == 1 ? 1 : 2,
  19: (e) => e == 1 ? 0 : e == 0 || e % 100 > 1 && e % 100 < 11 ? 1 : e % 100 > 10 && e % 100 < 20 ? 2 : 3,
  20: (e) => e == 1 ? 0 : e == 0 || e % 100 > 0 && e % 100 < 20 ? 1 : 2,
  21: (e) => e % 100 == 1 ? 1 : e % 100 == 2 ? 2 : e % 100 == 3 || e % 100 == 4 ? 3 : 0,
  22: (e) => e == 1 ? 0 : e == 2 ? 1 : (e < 0 || e > 10) && e % 10 == 0 ? 2 : 3
};
const wZ = ["v1", "v2", "v3"], xZ = ["v4"], T_ = {
  zero: 0,
  one: 1,
  two: 2,
  few: 3,
  many: 4,
  other: 5
}, EZ = () => {
  const e = {};
  return CZ.forEach((t) => {
    t.lngs.forEach((n) => {
      e[n] = {
        numbers: t.nr,
        plurals: SZ[t.fc]
      };
    });
  }), e;
};
class TZ {
  constructor(t) {
    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    this.languageUtils = t, this.options = n, this.logger = $u.create("pluralResolver"), (!this.options.compatibilityJSON || xZ.includes(this.options.compatibilityJSON)) && (typeof Intl > "u" || !Intl.PluralRules) && (this.options.compatibilityJSON = "v3", this.logger.error("Your environment seems not to be Intl API compatible, use an Intl.PluralRules polyfill. Will fallback to the compatibilityJSON v3 format handling.")), this.rules = EZ(), this.pluralRulesCache = {};
  }
  addRule(t, n) {
    this.rules[t] = n;
  }
  clearCache() {
    this.pluralRulesCache = {};
  }
  getRule(t) {
    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    if (this.shouldUseIntlApi()) {
      const i = j0(t === "dev" ? "en" : t), s = n.ordinal ? "ordinal" : "cardinal", u = JSON.stringify({
        cleanedCode: i,
        type: s
      });
      if (u in this.pluralRulesCache)
        return this.pluralRulesCache[u];
      let d;
      try {
        d = new Intl.PluralRules(i, {
          type: s
        });
      } catch {
        if (!t.match(/-|_/)) return;
        const m = this.languageUtils.getLanguagePartFromCode(t);
        d = this.getRule(m, n);
      }
      return this.pluralRulesCache[u] = d, d;
    }
    return this.rules[t] || this.rules[this.languageUtils.getLanguagePartFromCode(t)];
  }
  needsPlural(t) {
    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    const i = this.getRule(t, n);
    return this.shouldUseIntlApi() ? i && i.resolvedOptions().pluralCategories.length > 1 : i && i.numbers.length > 1;
  }
  getPluralFormsOfKey(t, n) {
    let i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
    return this.getSuffixes(t, i).map((s) => `${n}${s}`);
  }
  getSuffixes(t) {
    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    const i = this.getRule(t, n);
    return i ? this.shouldUseIntlApi() ? i.resolvedOptions().pluralCategories.sort((s, u) => T_[s] - T_[u]).map((s) => `${this.options.prepend}${n.ordinal ? `ordinal${this.options.prepend}` : ""}${s}`) : i.numbers.map((s) => this.getSuffix(t, s, n)) : [];
  }
  getSuffix(t, n) {
    let i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
    const s = this.getRule(t, i);
    return s ? this.shouldUseIntlApi() ? `${this.options.prepend}${i.ordinal ? `ordinal${this.options.prepend}` : ""}${s.select(n)}` : this.getSuffixRetroCompatible(s, n) : (this.logger.warn(`no plural rule found for: ${t}`), "");
  }
  getSuffixRetroCompatible(t, n) {
    const i = t.noAbs ? t.plurals(n) : t.plurals(Math.abs(n));
    let s = t.numbers[i];
    this.options.simplifyPluralSuffix && t.numbers.length === 2 && t.numbers[0] === 1 && (s === 2 ? s = "plural" : s === 1 && (s = ""));
    const u = () => this.options.prepend && s.toString() ? this.options.prepend + s.toString() : s.toString();
    return this.options.compatibilityJSON === "v1" ? s === 1 ? "" : typeof s == "number" ? `_plural_${s.toString()}` : u() : this.options.compatibilityJSON === "v2" || this.options.simplifyPluralSuffix && t.numbers.length === 2 && t.numbers[0] === 1 ? u() : this.options.prepend && i.toString() ? this.options.prepend + i.toString() : i.toString();
  }
  shouldUseIntlApi() {
    return !wZ.includes(this.options.compatibilityJSON);
  }
}
const R_ = function(e, t, n) {
  let i = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : ".", s = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : !0, u = fZ(e, t, n);
  return !u && s && Pn(n) && (u = Fk(e, n, i), u === void 0 && (u = Fk(t, n, i))), u;
}, FO = (e) => e.replace(/\$/g, "$$$$");
class RZ {
  constructor() {
    let t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    this.logger = $u.create("interpolator"), this.options = t, this.format = t.interpolation && t.interpolation.format || ((n) => n), this.init(t);
  }
  init() {
    let t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    t.interpolation || (t.interpolation = {
      escapeValue: !0
    });
    const {
      escape: n,
      escapeValue: i,
      useRawValueToEscape: s,
      prefix: u,
      prefixEscaped: d,
      suffix: p,
      suffixEscaped: m,
      formatSeparator: v,
      unescapeSuffix: y,
      unescapePrefix: C,
      nestingPrefix: w,
      nestingPrefixEscaped: R,
      nestingSuffix: O,
      nestingSuffixEscaped: E,
      nestingOptionsSeparator: k,
      maxReplaces: L,
      alwaysFormat: F
    } = t.interpolation;
    this.escape = n !== void 0 ? n : hZ, this.escapeValue = i !== void 0 ? i : !0, this.useRawValueToEscape = s !== void 0 ? s : !1, this.prefix = u ? cg(u) : d || "{{", this.suffix = p ? cg(p) : m || "}}", this.formatSeparator = v || ",", this.unescapePrefix = y ? "" : C || "-", this.unescapeSuffix = this.unescapePrefix ? "" : y || "", this.nestingPrefix = w ? cg(w) : R || cg("$t("), this.nestingSuffix = O ? cg(O) : E || cg(")"), this.nestingOptionsSeparator = k || ",", this.maxReplaces = L || 1e3, this.alwaysFormat = F !== void 0 ? F : !1, this.resetRegExp();
  }
  reset() {
    this.options && this.init(this.options);
  }
  resetRegExp() {
    const t = (n, i) => n && n.source === i ? (n.lastIndex = 0, n) : new RegExp(i, "g");
    this.regexp = t(this.regexp, `${this.prefix}(.+?)${this.suffix}`), this.regexpUnescape = t(this.regexpUnescape, `${this.prefix}${this.unescapePrefix}(.+?)${this.unescapeSuffix}${this.suffix}`), this.nestingRegexp = t(this.nestingRegexp, `${this.nestingPrefix}(.+?)${this.nestingSuffix}`);
  }
  interpolate(t, n, i, s) {
    let u, d, p;
    const m = this.options && this.options.interpolation && this.options.interpolation.defaultVariables || {}, v = (R) => {
      if (R.indexOf(this.formatSeparator) < 0) {
        const L = R_(n, m, R, this.options.keySeparator, this.options.ignoreJSONStructure);
        return this.alwaysFormat ? this.format(L, void 0, i, {
          ...s,
          ...n,
          interpolationkey: R
        }) : L;
      }
      const O = R.split(this.formatSeparator), E = O.shift().trim(), k = O.join(this.formatSeparator).trim();
      return this.format(R_(n, m, E, this.options.keySeparator, this.options.ignoreJSONStructure), k, i, {
        ...s,
        ...n,
        interpolationkey: E
      });
    };
    this.resetRegExp();
    const y = s && s.missingInterpolationHandler || this.options.missingInterpolationHandler, C = s && s.interpolation && s.interpolation.skipOnVariables !== void 0 ? s.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables;
    return [{
      regex: this.regexpUnescape,
      safeValue: (R) => FO(R)
    }, {
      regex: this.regexp,
      safeValue: (R) => this.escapeValue ? FO(this.escape(R)) : FO(R)
    }].forEach((R) => {
      for (p = 0; u = R.regex.exec(t); ) {
        const O = u[1].trim();
        if (d = v(O), d === void 0)
          if (typeof y == "function") {
            const k = y(t, u, s);
            d = Pn(k) ? k : "";
          } else if (s && Object.prototype.hasOwnProperty.call(s, O))
            d = "";
          else if (C) {
            d = u[0];
            continue;
          } else
            this.logger.warn(`missed to pass in variable ${O} for interpolating ${t}`), d = "";
        else !Pn(d) && !this.useRawValueToEscape && (d = y_(d));
        const E = R.safeValue(d);
        if (t = t.replace(u[0], E), C ? (R.regex.lastIndex += d.length, R.regex.lastIndex -= u[0].length) : R.regex.lastIndex = 0, p++, p >= this.maxReplaces)
          break;
      }
    }), t;
  }
  nest(t, n) {
    let i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, s, u, d;
    const p = (m, v) => {
      const y = this.nestingOptionsSeparator;
      if (m.indexOf(y) < 0) return m;
      const C = m.split(new RegExp(`${y}[ ]*{`));
      let w = `{${C[1]}`;
      m = C[0], w = this.interpolate(w, d);
      const R = w.match(/'/g), O = w.match(/"/g);
      (R && R.length % 2 === 0 && !O || O.length % 2 !== 0) && (w = w.replace(/'/g, '"'));
      try {
        d = JSON.parse(w), v && (d = {
          ...v,
          ...d
        });
      } catch (E) {
        return this.logger.warn(`failed parsing options string in nesting for key ${m}`, E), `${m}${y}${w}`;
      }
      return d.defaultValue && d.defaultValue.indexOf(this.prefix) > -1 && delete d.defaultValue, m;
    };
    for (; s = this.nestingRegexp.exec(t); ) {
      let m = [];
      d = {
        ...i
      }, d = d.replace && !Pn(d.replace) ? d.replace : d, d.applyPostProcessor = !1, delete d.defaultValue;
      let v = !1;
      if (s[0].indexOf(this.formatSeparator) !== -1 && !/{.*}/.test(s[1])) {
        const y = s[1].split(this.formatSeparator).map((C) => C.trim());
        s[1] = y.shift(), m = y, v = !0;
      }
      if (u = n(p.call(this, s[1].trim(), d), d), u && s[0] === t && !Pn(u)) return u;
      Pn(u) || (u = y_(u)), u || (this.logger.warn(`missed to resolve ${s[1]} for nesting ${t}`), u = ""), v && (u = m.reduce((y, C) => this.format(y, C, i.lng, {
        ...i,
        interpolationkey: s[1].trim()
      }), u.trim())), t = t.replace(s[0], u), this.regexp.lastIndex = 0;
    }
    return t;
  }
}
const OZ = (e) => {
  let t = e.toLowerCase().trim();
  const n = {};
  if (e.indexOf("(") > -1) {
    const i = e.split("(");
    t = i[0].toLowerCase().trim();
    const s = i[1].substring(0, i[1].length - 1);
    t === "currency" && s.indexOf(":") < 0 ? n.currency || (n.currency = s.trim()) : t === "relativetime" && s.indexOf(":") < 0 ? n.range || (n.range = s.trim()) : s.split(";").forEach((d) => {
      if (d) {
        const [p, ...m] = d.split(":"), v = m.join(":").trim().replace(/^'+|'+$/g, ""), y = p.trim();
        n[y] || (n[y] = v), v === "false" && (n[y] = !1), v === "true" && (n[y] = !0), isNaN(v) || (n[y] = parseInt(v, 10));
      }
    });
  }
  return {
    formatName: t,
    formatOptions: n
  };
}, dg = (e) => {
  const t = {};
  return (n, i, s) => {
    let u = s;
    s && s.interpolationkey && s.formatParams && s.formatParams[s.interpolationkey] && s[s.interpolationkey] && (u = {
      ...u,
      [s.interpolationkey]: void 0
    });
    const d = i + JSON.stringify(u);
    let p = t[d];
    return p || (p = e(j0(i), s), t[d] = p), p(n);
  };
};
class kZ {
  constructor() {
    let t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    this.logger = $u.create("formatter"), this.options = t, this.formats = {
      number: dg((n, i) => {
        const s = new Intl.NumberFormat(n, {
          ...i
        });
        return (u) => s.format(u);
      }),
      currency: dg((n, i) => {
        const s = new Intl.NumberFormat(n, {
          ...i,
          style: "currency"
        });
        return (u) => s.format(u);
      }),
      datetime: dg((n, i) => {
        const s = new Intl.DateTimeFormat(n, {
          ...i
        });
        return (u) => s.format(u);
      }),
      relativetime: dg((n, i) => {
        const s = new Intl.RelativeTimeFormat(n, {
          ...i
        });
        return (u) => s.format(u, i.range || "day");
      }),
      list: dg((n, i) => {
        const s = new Intl.ListFormat(n, {
          ...i
        });
        return (u) => s.format(u);
      })
    }, this.init(t);
  }
  init(t) {
    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {
      interpolation: {}
    };
    this.formatSeparator = n.interpolation.formatSeparator || ",";
  }
  add(t, n) {
    this.formats[t.toLowerCase().trim()] = n;
  }
  addCached(t, n) {
    this.formats[t.toLowerCase().trim()] = dg(n);
  }
  format(t, n, i) {
    let s = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
    const u = n.split(this.formatSeparator);
    if (u.length > 1 && u[0].indexOf("(") > 1 && u[0].indexOf(")") < 0 && u.find((p) => p.indexOf(")") > -1)) {
      const p = u.findIndex((m) => m.indexOf(")") > -1);
      u[0] = [u[0], ...u.splice(1, p)].join(this.formatSeparator);
    }
    return u.reduce((p, m) => {
      const {
        formatName: v,
        formatOptions: y
      } = OZ(m);
      if (this.formats[v]) {
        let C = p;
        try {
          const w = s && s.formatParams && s.formatParams[s.interpolationkey] || {}, R = w.locale || w.lng || s.locale || s.lng || i;
          C = this.formats[v](p, R, {
            ...y,
            ...s,
            ...w
          });
        } catch (w) {
          this.logger.warn(w);
        }
        return C;
      } else
        this.logger.warn(`there was no format function for ${v}`);
      return p;
    }, t);
  }
}
const PZ = (e, t) => {
  e.pending[t] !== void 0 && (delete e.pending[t], e.pendingCount--);
};
class MZ extends NE {
  constructor(t, n, i) {
    let s = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
    super(), this.backend = t, this.store = n, this.services = i, this.languageUtils = i.languageUtils, this.options = s, this.logger = $u.create("backendConnector"), this.waitingReads = [], this.maxParallelReads = s.maxParallelReads || 10, this.readingCalls = 0, this.maxRetries = s.maxRetries >= 0 ? s.maxRetries : 5, this.retryTimeout = s.retryTimeout >= 1 ? s.retryTimeout : 350, this.state = {}, this.queue = [], this.backend && this.backend.init && this.backend.init(i, s.backend, s);
  }
  queueLoad(t, n, i, s) {
    const u = {}, d = {}, p = {}, m = {};
    return t.forEach((v) => {
      let y = !0;
      n.forEach((C) => {
        const w = `${v}|${C}`;
        !i.reload && this.store.hasResourceBundle(v, C) ? this.state[w] = 2 : this.state[w] < 0 || (this.state[w] === 1 ? d[w] === void 0 && (d[w] = !0) : (this.state[w] = 1, y = !1, d[w] === void 0 && (d[w] = !0), u[w] === void 0 && (u[w] = !0), m[C] === void 0 && (m[C] = !0)));
      }), y || (p[v] = !0);
    }), (Object.keys(u).length || Object.keys(d).length) && this.queue.push({
      pending: d,
      pendingCount: Object.keys(d).length,
      loaded: {},
      errors: [],
      callback: s
    }), {
      toLoad: Object.keys(u),
      pending: Object.keys(d),
      toLoadLanguages: Object.keys(p),
      toLoadNamespaces: Object.keys(m)
    };
  }
  loaded(t, n, i) {
    const s = t.split("|"), u = s[0], d = s[1];
    n && this.emit("failedLoading", u, d, n), !n && i && this.store.addResourceBundle(u, d, i, void 0, void 0, {
      skipCopy: !0
    }), this.state[t] = n ? -1 : 2, n && i && (this.state[t] = 0);
    const p = {};
    this.queue.forEach((m) => {
      dZ(m.loaded, [u], d), PZ(m, t), n && m.errors.push(n), m.pendingCount === 0 && !m.done && (Object.keys(m.loaded).forEach((v) => {
        p[v] || (p[v] = {});
        const y = m.loaded[v];
        y.length && y.forEach((C) => {
          p[v][C] === void 0 && (p[v][C] = !0);
        });
      }), m.done = !0, m.errors.length ? m.callback(m.errors) : m.callback());
    }), this.emit("loaded", p), this.queue = this.queue.filter((m) => !m.done);
  }
  read(t, n, i) {
    let s = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 0, u = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : this.retryTimeout, d = arguments.length > 5 ? arguments[5] : void 0;
    if (!t.length) return d(null, {});
    if (this.readingCalls >= this.maxParallelReads) {
      this.waitingReads.push({
        lng: t,
        ns: n,
        fcName: i,
        tried: s,
        wait: u,
        callback: d
      });
      return;
    }
    this.readingCalls++;
    const p = (v, y) => {
      if (this.readingCalls--, this.waitingReads.length > 0) {
        const C = this.waitingReads.shift();
        this.read(C.lng, C.ns, C.fcName, C.tried, C.wait, C.callback);
      }
      if (v && y && s < this.maxRetries) {
        setTimeout(() => {
          this.read.call(this, t, n, i, s + 1, u * 2, d);
        }, u);
        return;
      }
      d(v, y);
    }, m = this.backend[i].bind(this.backend);
    if (m.length === 2) {
      try {
        const v = m(t, n);
        v && typeof v.then == "function" ? v.then((y) => p(null, y)).catch(p) : p(null, v);
      } catch (v) {
        p(v);
      }
      return;
    }
    return m(t, n, p);
  }
  prepareLoading(t, n) {
    let i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, s = arguments.length > 3 ? arguments[3] : void 0;
    if (!this.backend)
      return this.logger.warn("No backend was added via i18next.use. Will not load resources."), s && s();
    Pn(t) && (t = this.languageUtils.toResolveHierarchy(t)), Pn(n) && (n = [n]);
    const u = this.queueLoad(t, n, i, s);
    if (!u.toLoad.length)
      return u.pending.length || s(), null;
    u.toLoad.forEach((d) => {
      this.loadOne(d);
    });
  }
  load(t, n, i) {
    this.prepareLoading(t, n, {}, i);
  }
  reload(t, n, i) {
    this.prepareLoading(t, n, {
      reload: !0
    }, i);
  }
  loadOne(t) {
    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "";
    const i = t.split("|"), s = i[0], u = i[1];
    this.read(s, u, "read", void 0, void 0, (d, p) => {
      d && this.logger.warn(`${n}loading namespace ${u} for language ${s} failed`, d), !d && p && this.logger.log(`${n}loaded namespace ${u} for language ${s}`, p), this.loaded(t, d, p);
    });
  }
  saveMissing(t, n, i, s, u) {
    let d = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {}, p = arguments.length > 6 && arguments[6] !== void 0 ? arguments[6] : () => {
    };
    if (this.services.utils && this.services.utils.hasLoadedNamespace && !this.services.utils.hasLoadedNamespace(n)) {
      this.logger.warn(`did not save key "${i}" as the namespace "${n}" was not yet loaded`, "This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!");
      return;
    }
    if (!(i == null || i === "")) {
      if (this.backend && this.backend.create) {
        const m = {
          ...d,
          isUpdate: u
        }, v = this.backend.create.bind(this.backend);
        if (v.length < 6)
          try {
            let y;
            v.length === 5 ? y = v(t, n, i, s, m) : y = v(t, n, i, s), y && typeof y.then == "function" ? y.then((C) => p(null, C)).catch(p) : p(null, y);
          } catch (y) {
            p(y);
          }
        else
          v(t, n, i, s, p, m);
      }
      !t || !t[0] || this.store.addResource(t[0], n, i, s);
    }
  }
}
const O_ = () => ({
  debug: !1,
  initImmediate: !0,
  ns: ["translation"],
  defaultNS: ["translation"],
  fallbackLng: ["dev"],
  fallbackNS: !1,
  supportedLngs: !1,
  nonExplicitSupportedLngs: !1,
  load: "all",
  preload: !1,
  simplifyPluralSuffix: !0,
  keySeparator: ".",
  nsSeparator: ":",
  pluralSeparator: "_",
  contextSeparator: "_",
  partialBundledLanguages: !1,
  saveMissing: !1,
  updateMissing: !1,
  saveMissingTo: "fallback",
  saveMissingPlurals: !0,
  missingKeyHandler: !1,
  missingInterpolationHandler: !1,
  postProcess: !1,
  postProcessPassResolved: !1,
  returnNull: !1,
  returnEmptyString: !0,
  returnObjects: !1,
  joinArrays: !1,
  returnedObjectHandler: !1,
  parseMissingKeyHandler: !1,
  appendNamespaceToMissingKey: !1,
  appendNamespaceToCIMode: !1,
  overloadTranslationOptionHandler: (e) => {
    let t = {};
    if (typeof e[1] == "object" && (t = e[1]), Pn(e[1]) && (t.defaultValue = e[1]), Pn(e[2]) && (t.tDescription = e[2]), typeof e[2] == "object" || typeof e[3] == "object") {
      const n = e[3] || e[2];
      Object.keys(n).forEach((i) => {
        t[i] = n[i];
      });
    }
    return t;
  },
  interpolation: {
    escapeValue: !0,
    format: (e) => e,
    prefix: "{{",
    suffix: "}}",
    formatSeparator: ",",
    unescapePrefix: "-",
    nestingPrefix: "$t(",
    nestingSuffix: ")",
    nestingOptionsSeparator: ",",
    maxReplaces: 1e3,
    skipOnVariables: !0
  }
}), k_ = (e) => (Pn(e.ns) && (e.ns = [e.ns]), Pn(e.fallbackLng) && (e.fallbackLng = [e.fallbackLng]), Pn(e.fallbackNS) && (e.fallbackNS = [e.fallbackNS]), e.supportedLngs && e.supportedLngs.indexOf("cimode") < 0 && (e.supportedLngs = e.supportedLngs.concat(["cimode"])), e), n0 = () => {
}, IZ = (e) => {
  Object.getOwnPropertyNames(Object.getPrototypeOf(e)).forEach((n) => {
    typeof e[n] == "function" && (e[n] = e[n].bind(e));
  });
};
class fC extends NE {
  constructor() {
    let t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, n = arguments.length > 1 ? arguments[1] : void 0;
    if (super(), this.options = k_(t), this.services = {}, this.logger = $u, this.modules = {
      external: []
    }, IZ(this), n && !this.isInitialized && !t.isClone) {
      if (!this.options.initImmediate)
        return this.init(t, n), this;
      setTimeout(() => {
        this.init(t, n);
      }, 0);
    }
  }
  init() {
    var t = this;
    let n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, i = arguments.length > 1 ? arguments[1] : void 0;
    this.isInitializing = !0, typeof n == "function" && (i = n, n = {}), !n.defaultNS && n.defaultNS !== !1 && n.ns && (Pn(n.ns) ? n.defaultNS = n.ns : n.ns.indexOf("translation") < 0 && (n.defaultNS = n.ns[0]));
    const s = O_();
    this.options = {
      ...s,
      ...this.options,
      ...k_(n)
    }, this.options.compatibilityAPI !== "v1" && (this.options.interpolation = {
      ...s.interpolation,
      ...this.options.interpolation
    }), n.keySeparator !== void 0 && (this.options.userDefinedKeySeparator = n.keySeparator), n.nsSeparator !== void 0 && (this.options.userDefinedNsSeparator = n.nsSeparator);
    const u = (y) => y ? typeof y == "function" ? new y() : y : null;
    if (!this.options.isClone) {
      this.modules.logger ? $u.init(u(this.modules.logger), this.options) : $u.init(null, this.options);
      let y;
      this.modules.formatter ? y = this.modules.formatter : typeof Intl < "u" && (y = kZ);
      const C = new E_(this.options);
      this.store = new w_(this.options.resources, this.options);
      const w = this.services;
      w.logger = $u, w.resourceStore = this.store, w.languageUtils = C, w.pluralResolver = new TZ(C, {
        prepend: this.options.pluralSeparator,
        compatibilityJSON: this.options.compatibilityJSON,
        simplifyPluralSuffix: this.options.simplifyPluralSuffix
      }), y && (!this.options.interpolation.format || this.options.interpolation.format === s.interpolation.format) && (w.formatter = u(y), w.formatter.init(w, this.options), this.options.interpolation.format = w.formatter.format.bind(w.formatter)), w.interpolator = new RZ(this.options), w.utils = {
        hasLoadedNamespace: this.hasLoadedNamespace.bind(this)
      }, w.backendConnector = new MZ(u(this.modules.backend), w.resourceStore, w, this.options), w.backendConnector.on("*", function(R) {
        for (var O = arguments.length, E = new Array(O > 1 ? O - 1 : 0), k = 1; k < O; k++)
          E[k - 1] = arguments[k];
        t.emit(R, ...E);
      }), this.modules.languageDetector && (w.languageDetector = u(this.modules.languageDetector), w.languageDetector.init && w.languageDetector.init(w, this.options.detection, this.options)), this.modules.i18nFormat && (w.i18nFormat = u(this.modules.i18nFormat), w.i18nFormat.init && w.i18nFormat.init(this)), this.translator = new H0(this.services, this.options), this.translator.on("*", function(R) {
        for (var O = arguments.length, E = new Array(O > 1 ? O - 1 : 0), k = 1; k < O; k++)
          E[k - 1] = arguments[k];
        t.emit(R, ...E);
      }), this.modules.external.forEach((R) => {
        R.init && R.init(this);
      });
    }
    if (this.format = this.options.interpolation.format, i || (i = n0), this.options.fallbackLng && !this.services.languageDetector && !this.options.lng) {
      const y = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);
      y.length > 0 && y[0] !== "dev" && (this.options.lng = y[0]);
    }
    !this.services.languageDetector && !this.options.lng && this.logger.warn("init: no languageDetector is used and no lng is defined"), ["getResource", "hasResourceBundle", "getResourceBundle", "getDataByLanguage"].forEach((y) => {
      this[y] = function() {
        return t.store[y](...arguments);
      };
    }), ["addResource", "addResources", "addResourceBundle", "removeResourceBundle"].forEach((y) => {
      this[y] = function() {
        return t.store[y](...arguments), t;
      };
    });
    const m = kb(), v = () => {
      const y = (C, w) => {
        this.isInitializing = !1, this.isInitialized && !this.initializedStoreOnce && this.logger.warn("init: i18next is already initialized. You should call init just once!"), this.isInitialized = !0, this.options.isClone || this.logger.log("initialized", this.options), this.emit("initialized", this.options), m.resolve(w), i(C, w);
      };
      if (this.languages && this.options.compatibilityAPI !== "v1" && !this.isInitialized) return y(null, this.t.bind(this));
      this.changeLanguage(this.options.lng, y);
    };
    return this.options.resources || !this.options.initImmediate ? v() : setTimeout(v, 0), m;
  }
  loadResources(t) {
    let i = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : n0;
    const s = Pn(t) ? t : this.language;
    if (typeof t == "function" && (i = t), !this.options.resources || this.options.partialBundledLanguages) {
      if (s && s.toLowerCase() === "cimode" && (!this.options.preload || this.options.preload.length === 0)) return i();
      const u = [], d = (p) => {
        if (!p || p === "cimode") return;
        this.services.languageUtils.toResolveHierarchy(p).forEach((v) => {
          v !== "cimode" && u.indexOf(v) < 0 && u.push(v);
        });
      };
      s ? d(s) : this.services.languageUtils.getFallbackCodes(this.options.fallbackLng).forEach((m) => d(m)), this.options.preload && this.options.preload.forEach((p) => d(p)), this.services.backendConnector.load(u, this.options.ns, (p) => {
        !p && !this.resolvedLanguage && this.language && this.setResolvedLanguage(this.language), i(p);
      });
    } else
      i(null);
  }
  reloadResources(t, n, i) {
    const s = kb();
    return typeof t == "function" && (i = t, t = void 0), typeof n == "function" && (i = n, n = void 0), t || (t = this.languages), n || (n = this.options.ns), i || (i = n0), this.services.backendConnector.reload(t, n, (u) => {
      s.resolve(), i(u);
    }), s;
  }
  use(t) {
    if (!t) throw new Error("You are passing an undefined module! Please check the object you are passing to i18next.use()");
    if (!t.type) throw new Error("You are passing a wrong module! Please check the object you are passing to i18next.use()");
    return t.type === "backend" && (this.modules.backend = t), (t.type === "logger" || t.log && t.warn && t.error) && (this.modules.logger = t), t.type === "languageDetector" && (this.modules.languageDetector = t), t.type === "i18nFormat" && (this.modules.i18nFormat = t), t.type === "postProcessor" && R2.addPostProcessor(t), t.type === "formatter" && (this.modules.formatter = t), t.type === "3rdParty" && this.modules.external.push(t), this;
  }
  setResolvedLanguage(t) {
    if (!(!t || !this.languages) && !(["cimode", "dev"].indexOf(t) > -1))
      for (let n = 0; n < this.languages.length; n++) {
        const i = this.languages[n];
        if (!(["cimode", "dev"].indexOf(i) > -1) && this.store.hasLanguageSomeTranslations(i)) {
          this.resolvedLanguage = i;
          break;
        }
      }
  }
  changeLanguage(t, n) {
    var i = this;
    this.isLanguageChangingTo = t;
    const s = kb();
    this.emit("languageChanging", t);
    const u = (m) => {
      this.language = m, this.languages = this.services.languageUtils.toResolveHierarchy(m), this.resolvedLanguage = void 0, this.setResolvedLanguage(m);
    }, d = (m, v) => {
      v ? (u(v), this.translator.changeLanguage(v), this.isLanguageChangingTo = void 0, this.emit("languageChanged", v), this.logger.log("languageChanged", v)) : this.isLanguageChangingTo = void 0, s.resolve(function() {
        return i.t(...arguments);
      }), n && n(m, function() {
        return i.t(...arguments);
      });
    }, p = (m) => {
      !t && !m && this.services.languageDetector && (m = []);
      const v = Pn(m) ? m : this.services.languageUtils.getBestMatchFromCodes(m);
      v && (this.language || u(v), this.translator.language || this.translator.changeLanguage(v), this.services.languageDetector && this.services.languageDetector.cacheUserLanguage && this.services.languageDetector.cacheUserLanguage(v)), this.loadResources(v, (y) => {
        d(y, v);
      });
    };
    return !t && this.services.languageDetector && !this.services.languageDetector.async ? p(this.services.languageDetector.detect()) : !t && this.services.languageDetector && this.services.languageDetector.async ? this.services.languageDetector.detect.length === 0 ? this.services.languageDetector.detect().then(p) : this.services.languageDetector.detect(p) : p(t), s;
  }
  getFixedT(t, n, i) {
    var s = this;
    const u = function(d, p) {
      let m;
      if (typeof p != "object") {
        for (var v = arguments.length, y = new Array(v > 2 ? v - 2 : 0), C = 2; C < v; C++)
          y[C - 2] = arguments[C];
        m = s.options.overloadTranslationOptionHandler([d, p].concat(y));
      } else
        m = {
          ...p
        };
      m.lng = m.lng || u.lng, m.lngs = m.lngs || u.lngs, m.ns = m.ns || u.ns, m.keyPrefix !== "" && (m.keyPrefix = m.keyPrefix || i || u.keyPrefix);
      const w = s.options.keySeparator || ".";
      let R;
      return m.keyPrefix && Array.isArray(d) ? R = d.map((O) => `${m.keyPrefix}${w}${O}`) : R = m.keyPrefix ? `${m.keyPrefix}${w}${d}` : d, s.t(R, m);
    };
    return Pn(t) ? u.lng = t : u.lngs = t, u.ns = n, u.keyPrefix = i, u;
  }
  t() {
    return this.translator && this.translator.translate(...arguments);
  }
  exists() {
    return this.translator && this.translator.exists(...arguments);
  }
  setDefaultNamespace(t) {
    this.options.defaultNS = t;
  }
  hasLoadedNamespace(t) {
    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    if (!this.isInitialized)
      return this.logger.warn("hasLoadedNamespace: i18next was not initialized", this.languages), !1;
    if (!this.languages || !this.languages.length)
      return this.logger.warn("hasLoadedNamespace: i18n.languages were undefined or empty", this.languages), !1;
    const i = n.lng || this.resolvedLanguage || this.languages[0], s = this.options ? this.options.fallbackLng : !1, u = this.languages[this.languages.length - 1];
    if (i.toLowerCase() === "cimode") return !0;
    const d = (p, m) => {
      const v = this.services.backendConnector.state[`${p}|${m}`];
      return v === -1 || v === 0 || v === 2;
    };
    if (n.precheck) {
      const p = n.precheck(this, d);
      if (p !== void 0) return p;
    }
    return !!(this.hasResourceBundle(i, t) || !this.services.backendConnector.backend || this.options.resources && !this.options.partialBundledLanguages || d(i, t) && (!s || d(u, t)));
  }
  loadNamespaces(t, n) {
    const i = kb();
    return this.options.ns ? (Pn(t) && (t = [t]), t.forEach((s) => {
      this.options.ns.indexOf(s) < 0 && this.options.ns.push(s);
    }), this.loadResources((s) => {
      i.resolve(), n && n(s);
    }), i) : (n && n(), Promise.resolve());
  }
  loadLanguages(t, n) {
    const i = kb();
    Pn(t) && (t = [t]);
    const s = this.options.preload || [], u = t.filter((d) => s.indexOf(d) < 0 && this.services.languageUtils.isSupportedCode(d));
    return u.length ? (this.options.preload = s.concat(u), this.loadResources((d) => {
      i.resolve(), n && n(d);
    }), i) : (n && n(), Promise.resolve());
  }
  dir(t) {
    if (t || (t = this.resolvedLanguage || (this.languages && this.languages.length > 0 ? this.languages[0] : this.language)), !t) return "rtl";
    const n = ["ar", "shu", "sqr", "ssh", "xaa", "yhd", "yud", "aao", "abh", "abv", "acm", "acq", "acw", "acx", "acy", "adf", "ads", "aeb", "aec", "afb", "ajp", "apc", "apd", "arb", "arq", "ars", "ary", "arz", "auz", "avl", "ayh", "ayl", "ayn", "ayp", "bbz", "pga", "he", "iw", "ps", "pbt", "pbu", "pst", "prp", "prd", "ug", "ur", "ydd", "yds", "yih", "ji", "yi", "hbo", "men", "xmn", "fa", "jpr", "peo", "pes", "prs", "dv", "sam", "ckb"], i = this.services && this.services.languageUtils || new E_(O_());
    return n.indexOf(i.getLanguagePartFromCode(t)) > -1 || t.toLowerCase().indexOf("-arab") > 1 ? "rtl" : "ltr";
  }
  static createInstance() {
    let t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, n = arguments.length > 1 ? arguments[1] : void 0;
    return new fC(t, n);
  }
  cloneInstance() {
    let t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : n0;
    const i = t.forkResourceStore;
    i && delete t.forkResourceStore;
    const s = {
      ...this.options,
      ...t,
      isClone: !0
    }, u = new fC(s);
    return (t.debug !== void 0 || t.prefix !== void 0) && (u.logger = u.logger.clone(t)), ["store", "services", "language"].forEach((p) => {
      u[p] = this[p];
    }), u.services = {
      ...this.services
    }, u.services.utils = {
      hasLoadedNamespace: u.hasLoadedNamespace.bind(u)
    }, i && (u.store = new w_(this.store.data, s), u.services.resourceStore = u.store), u.translator = new H0(u.services, s), u.translator.on("*", function(p) {
      for (var m = arguments.length, v = new Array(m > 1 ? m - 1 : 0), y = 1; y < m; y++)
        v[y - 1] = arguments[y];
      u.emit(p, ...v);
    }), u.init(s, n), u.translator.options = s, u.translator.backendConnector.services.utils = {
      hasLoadedNamespace: u.hasLoadedNamespace.bind(u)
    }, u;
  }
  toJSON() {
    return {
      options: this.options,
      store: this.store,
      language: this.language,
      languages: this.languages,
      resolvedLanguage: this.resolvedLanguage
    };
  }
}
const sa = fC.createInstance();
sa.createInstance = fC.createInstance;
sa.createInstance;
sa.dir;
sa.init;
sa.loadResources;
sa.reloadResources;
sa.use;
sa.changeLanguage;
sa.getFixedT;
sa.t;
sa.exists;
sa.setDefaultNamespace;
sa.hasLoadedNamespace;
sa.loadNamespaces;
sa.loadLanguages;
function DZ() {
  if (console && console.warn) {
    for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
      t[n] = arguments[n];
    uh(t[0]) && (t[0] = `react-i18next:: ${t[0]}`), console.warn(...t);
  }
}
const P_ = {};
function _k() {
  for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
    t[n] = arguments[n];
  uh(t[0]) && P_[t[0]] || (uh(t[0]) && (P_[t[0]] = /* @__PURE__ */ new Date()), DZ(...t));
}
const O2 = (e, t) => () => {
  if (e.isInitialized)
    t();
  else {
    const n = () => {
      setTimeout(() => {
        e.off("initialized", n);
      }, 0), t();
    };
    e.on("initialized", n);
  }
}, M_ = (e, t, n) => {
  e.loadNamespaces(t, O2(e, n));
}, I_ = (e, t, n, i) => {
  uh(n) && (n = [n]), n.forEach((s) => {
    e.options.ns.indexOf(s) < 0 && e.options.ns.push(s);
  }), e.loadLanguages(t, O2(e, i));
}, NZ = function(e, t) {
  let n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
  const i = t.languages[0], s = t.options ? t.options.fallbackLng : !1, u = t.languages[t.languages.length - 1];
  if (i.toLowerCase() === "cimode") return !0;
  const d = (p, m) => {
    const v = t.services.backendConnector.state[`${p}|${m}`];
    return v === -1 || v === 2;
  };
  return n.bindI18n && n.bindI18n.indexOf("languageChanging") > -1 && t.services.backendConnector.backend && t.isLanguageChangingTo && !d(t.isLanguageChangingTo, e) ? !1 : !!(t.hasResourceBundle(i, e) || !t.services.backendConnector.backend || t.options.resources && !t.options.partialBundledLanguages || d(i, e) && (!s || d(u, e)));
}, LZ = function(e, t) {
  let n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
  return !t.languages || !t.languages.length ? (_k("i18n.languages were undefined or empty", t.languages), !0) : t.options.ignoreJSONStructure !== void 0 ? t.hasLoadedNamespace(e, {
    lng: n.lng,
    precheck: (s, u) => {
      if (n.bindI18n && n.bindI18n.indexOf("languageChanging") > -1 && s.services.backendConnector.backend && s.isLanguageChangingTo && !u(s.isLanguageChangingTo, e)) return !1;
    }
  }) : NZ(e, t, n);
}, uh = (e) => typeof e == "string", FZ = (e) => typeof e == "object" && e !== null, _Z = /&(?:amp|#38|lt|#60|gt|#62|apos|#39|quot|#34|nbsp|#160|copy|#169|reg|#174|hellip|#8230|#x2F|#47);/g, AZ = {
  "&amp;": "&",
  "&#38;": "&",
  "&lt;": "<",
  "&#60;": "<",
  "&gt;": ">",
  "&#62;": ">",
  "&apos;": "'",
  "&#39;": "'",
  "&quot;": '"',
  "&#34;": '"',
  "&nbsp;": " ",
  "&#160;": " ",
  "&copy;": "©",
  "&#169;": "©",
  "&reg;": "®",
  "&#174;": "®",
  "&hellip;": "…",
  "&#8230;": "…",
  "&#x2F;": "/",
  "&#47;": "/"
}, $Z = (e) => AZ[e], jZ = (e) => e.replace(_Z, $Z);
let Ak = {
  bindI18n: "languageChanged",
  bindI18nStore: "",
  transEmptyNodeValue: "",
  transSupportBasicHtmlNodes: !0,
  transWrapTextNodes: "",
  transKeepBasicHtmlNodesFor: ["br", "strong", "i", "p"],
  useSuspense: !0,
  unescape: jZ
};
const zZ = function() {
  let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  Ak = {
    ...Ak,
    ...e
  };
}, HZ = () => Ak;
let k2;
const VZ = (e) => {
  k2 = e;
}, BZ = () => k2, UZ = {
  type: "3rdParty",
  init(e) {
    zZ(e.options.react), VZ(e);
  }
}, P2 = S.createContext();
class GZ {
  constructor() {
    ku(this, "getUsedNamespaces", () => Object.keys(this.usedNamespaces));
    this.usedNamespaces = {};
  }
  addUsedNamespaces(t) {
    t.forEach((n) => {
      this.usedNamespaces[n] || (this.usedNamespaces[n] = !0);
    });
  }
}
const WZ = (e, t) => {
  const n = S.useRef();
  return S.useEffect(() => {
    n.current = e;
  }, [e, t]), n.current;
}, M2 = (e, t, n, i) => e.getFixedT(t, n, i), qZ = (e, t, n, i) => S.useCallback(M2(e, t, n, i), [e, t, n, i]), $C = function(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  const {
    i18n: n
  } = t, {
    i18n: i,
    defaultNS: s
  } = S.useContext(P2) || {}, u = n || i || BZ();
  if (u && !u.reportNamespaces && (u.reportNamespaces = new GZ()), !u) {
    _k("You will need to pass in an i18next instance by using initReactI18next");
    const P = (z, K) => uh(K) ? K : FZ(K) && uh(K.defaultValue) ? K.defaultValue : Array.isArray(z) ? z[z.length - 1] : z, D = [P, {}, !1];
    return D.t = P, D.i18n = {}, D.ready = !1, D;
  }
  u.options.react && u.options.react.wait !== void 0 && _k("It seems you are still using the old wait option, you may migrate to the new useSuspense behaviour.");
  const d = {
    ...HZ(),
    ...u.options.react,
    ...t
  }, {
    useSuspense: p,
    keyPrefix: m
  } = d;
  let v = s || u.options && u.options.defaultNS;
  v = uh(v) ? [v] : v || ["translation"], u.reportNamespaces.addUsedNamespaces && u.reportNamespaces.addUsedNamespaces(v);
  const y = (u.isInitialized || u.initializedStoreOnce) && v.every((P) => LZ(P, u, d)), C = qZ(u, t.lng || null, d.nsMode === "fallback" ? v : v[0], m), w = () => C, R = () => M2(u, t.lng || null, d.nsMode === "fallback" ? v : v[0], m), [O, E] = S.useState(w);
  let k = v.join();
  t.lng && (k = `${t.lng}${k}`);
  const L = WZ(k), F = S.useRef(!0);
  S.useEffect(() => {
    const {
      bindI18n: P,
      bindI18nStore: D
    } = d;
    F.current = !0, !y && !p && (t.lng ? I_(u, t.lng, v, () => {
      F.current && E(R);
    }) : M_(u, v, () => {
      F.current && E(R);
    })), y && L && L !== k && F.current && E(R);
    const z = () => {
      F.current && E(R);
    };
    return P && u && u.on(P, z), D && u && u.store.on(D, z), () => {
      F.current = !1, P && u && P.split(" ").forEach((K) => u.off(K, z)), D && u && D.split(" ").forEach((K) => u.store.off(K, z));
    };
  }, [u, k]), S.useEffect(() => {
    F.current && y && E(w);
  }, [u, m, y]);
  const _ = [O, u, y];
  if (_.t = O, _.i18n = u, _.ready = y, y || !y && !p) return _;
  throw new Promise((P) => {
    t.lng ? I_(u, t.lng, v, () => P()) : M_(u, v, () => P());
  });
};
function KZ(e) {
  let {
    i18n: t,
    defaultNS: n,
    children: i
  } = e;
  const s = S.useMemo(() => ({
    i18n: t,
    defaultNS: n
  }), [t, n]);
  return S.createElement(P2.Provider, {
    value: s
  }, i);
}
const {
  slice: YZ,
  forEach: XZ
} = [];
function QZ(e) {
  return XZ.call(YZ.call(arguments, 1), (t) => {
    if (t)
      for (const n in t)
        e[n] === void 0 && (e[n] = t[n]);
  }), e;
}
function JZ(e) {
  return typeof e != "string" ? !1 : [/<\s*script.*?>/i, /<\s*\/\s*script\s*>/i, /<\s*img.*?on\w+\s*=/i, /<\s*\w+\s*on\w+\s*=.*?>/i, /javascript\s*:/i, /vbscript\s*:/i, /expression\s*\(/i, /eval\s*\(/i, /alert\s*\(/i, /document\.cookie/i, /document\.write\s*\(/i, /window\.location/i, /innerHTML/i].some((n) => n.test(e));
}
const D_ = /^[\u0009\u0020-\u007e\u0080-\u00ff]+$/, ZZ = function(e, t) {
  const i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {
    path: "/"
  }, s = encodeURIComponent(t);
  let u = `${e}=${s}`;
  if (i.maxAge > 0) {
    const d = i.maxAge - 0;
    if (Number.isNaN(d)) throw new Error("maxAge should be a Number");
    u += `; Max-Age=${Math.floor(d)}`;
  }
  if (i.domain) {
    if (!D_.test(i.domain))
      throw new TypeError("option domain is invalid");
    u += `; Domain=${i.domain}`;
  }
  if (i.path) {
    if (!D_.test(i.path))
      throw new TypeError("option path is invalid");
    u += `; Path=${i.path}`;
  }
  if (i.expires) {
    if (typeof i.expires.toUTCString != "function")
      throw new TypeError("option expires is invalid");
    u += `; Expires=${i.expires.toUTCString()}`;
  }
  if (i.httpOnly && (u += "; HttpOnly"), i.secure && (u += "; Secure"), i.sameSite)
    switch (typeof i.sameSite == "string" ? i.sameSite.toLowerCase() : i.sameSite) {
      case !0:
        u += "; SameSite=Strict";
        break;
      case "lax":
        u += "; SameSite=Lax";
        break;
      case "strict":
        u += "; SameSite=Strict";
        break;
      case "none":
        u += "; SameSite=None";
        break;
      default:
        throw new TypeError("option sameSite is invalid");
    }
  return i.partitioned && (u += "; Partitioned"), u;
}, N_ = {
  create(e, t, n, i) {
    let s = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : {
      path: "/",
      sameSite: "strict"
    };
    n && (s.expires = /* @__PURE__ */ new Date(), s.expires.setTime(s.expires.getTime() + n * 60 * 1e3)), i && (s.domain = i), document.cookie = ZZ(e, t, s);
  },
  read(e) {
    const t = `${e}=`, n = document.cookie.split(";");
    for (let i = 0; i < n.length; i++) {
      let s = n[i];
      for (; s.charAt(0) === " "; ) s = s.substring(1, s.length);
      if (s.indexOf(t) === 0) return s.substring(t.length, s.length);
    }
    return null;
  },
  remove(e, t) {
    this.create(e, "", -1, t);
  }
};
var eee = {
  name: "cookie",
  // Deconstruct the options object and extract the lookupCookie property
  lookup(e) {
    let {
      lookupCookie: t
    } = e;
    if (t && typeof document < "u")
      return N_.read(t) || void 0;
  },
  // Deconstruct the options object and extract the lookupCookie, cookieMinutes, cookieDomain, and cookieOptions properties
  cacheUserLanguage(e, t) {
    let {
      lookupCookie: n,
      cookieMinutes: i,
      cookieDomain: s,
      cookieOptions: u
    } = t;
    n && typeof document < "u" && N_.create(n, e, i, s, u);
  }
}, tee = {
  name: "querystring",
  // Deconstruct the options object and extract the lookupQuerystring property
  lookup(e) {
    var i;
    let {
      lookupQuerystring: t
    } = e, n;
    if (typeof window < "u") {
      let {
        search: s
      } = window.location;
      !window.location.search && ((i = window.location.hash) == null ? void 0 : i.indexOf("?")) > -1 && (s = window.location.hash.substring(window.location.hash.indexOf("?")));
      const d = s.substring(1).split("&");
      for (let p = 0; p < d.length; p++) {
        const m = d[p].indexOf("=");
        m > 0 && d[p].substring(0, m) === t && (n = d[p].substring(m + 1));
      }
    }
    return n;
  }
}, nee = {
  name: "hash",
  // Deconstruct the options object and extract the lookupHash property and the lookupFromHashIndex property
  lookup(e) {
    var s;
    let {
      lookupHash: t,
      lookupFromHashIndex: n
    } = e, i;
    if (typeof window < "u") {
      const {
        hash: u
      } = window.location;
      if (u && u.length > 2) {
        const d = u.substring(1);
        if (t) {
          const p = d.split("&");
          for (let m = 0; m < p.length; m++) {
            const v = p[m].indexOf("=");
            v > 0 && p[m].substring(0, v) === t && (i = p[m].substring(v + 1));
          }
        }
        if (i) return i;
        if (!i && n > -1) {
          const p = u.match(/\/([a-zA-Z-]*)/g);
          return Array.isArray(p) ? (s = p[typeof n == "number" ? n : 0]) == null ? void 0 : s.replace("/", "") : void 0;
        }
      }
    }
    return i;
  }
};
let fg = null;
const L_ = () => {
  if (fg !== null) return fg;
  try {
    if (fg = typeof window < "u" && window.localStorage !== null, !fg)
      return !1;
    const e = "i18next.translate.boo";
    window.localStorage.setItem(e, "foo"), window.localStorage.removeItem(e);
  } catch {
    fg = !1;
  }
  return fg;
};
var ree = {
  name: "localStorage",
  // Deconstruct the options object and extract the lookupLocalStorage property
  lookup(e) {
    let {
      lookupLocalStorage: t
    } = e;
    if (t && L_())
      return window.localStorage.getItem(t) || void 0;
  },
  // Deconstruct the options object and extract the lookupLocalStorage property
  cacheUserLanguage(e, t) {
    let {
      lookupLocalStorage: n
    } = t;
    n && L_() && window.localStorage.setItem(n, e);
  }
};
let pg = null;
const F_ = () => {
  if (pg !== null) return pg;
  try {
    if (pg = typeof window < "u" && window.sessionStorage !== null, !pg)
      return !1;
    const e = "i18next.translate.boo";
    window.sessionStorage.setItem(e, "foo"), window.sessionStorage.removeItem(e);
  } catch {
    pg = !1;
  }
  return pg;
};
var oee = {
  name: "sessionStorage",
  lookup(e) {
    let {
      lookupSessionStorage: t
    } = e;
    if (t && F_())
      return window.sessionStorage.getItem(t) || void 0;
  },
  cacheUserLanguage(e, t) {
    let {
      lookupSessionStorage: n
    } = t;
    n && F_() && window.sessionStorage.setItem(n, e);
  }
}, iee = {
  name: "navigator",
  lookup(e) {
    const t = [];
    if (typeof navigator < "u") {
      const {
        languages: n,
        userLanguage: i,
        language: s
      } = navigator;
      if (n)
        for (let u = 0; u < n.length; u++)
          t.push(n[u]);
      i && t.push(i), s && t.push(s);
    }
    return t.length > 0 ? t : void 0;
  }
}, aee = {
  name: "htmlTag",
  // Deconstruct the options object and extract the htmlTag property
  lookup(e) {
    let {
      htmlTag: t
    } = e, n;
    const i = t || (typeof document < "u" ? document.documentElement : null);
    return i && typeof i.getAttribute == "function" && (n = i.getAttribute("lang")), n;
  }
}, see = {
  name: "path",
  // Deconstruct the options object and extract the lookupFromPathIndex property
  lookup(e) {
    var s;
    let {
      lookupFromPathIndex: t
    } = e;
    if (typeof window > "u") return;
    const n = window.location.pathname.match(/\/([a-zA-Z-]*)/g);
    return Array.isArray(n) ? (s = n[typeof t == "number" ? t : 0]) == null ? void 0 : s.replace("/", "") : void 0;
  }
}, lee = {
  name: "subdomain",
  lookup(e) {
    var s, u;
    let {
      lookupFromSubdomainIndex: t
    } = e;
    const n = typeof t == "number" ? t + 1 : 1, i = typeof window < "u" && ((u = (s = window.location) == null ? void 0 : s.hostname) == null ? void 0 : u.match(/^(\w{2,5})\.(([a-z0-9-]{1,63}\.[a-z]{2,6})|localhost)/i));
    if (i)
      return i[n];
  }
};
let I2 = !1;
try {
  document.cookie, I2 = !0;
} catch {
}
const D2 = ["querystring", "cookie", "localStorage", "sessionStorage", "navigator", "htmlTag"];
I2 || D2.splice(1, 1);
const uee = () => ({
  order: D2,
  lookupQuerystring: "lng",
  lookupCookie: "i18next",
  lookupLocalStorage: "i18nextLng",
  lookupSessionStorage: "i18nextLng",
  // cache user language
  caches: ["localStorage"],
  excludeCacheFor: ["cimode"],
  // cookieMinutes: 10,
  // cookieDomain: 'myDomain'
  convertDetectedLanguage: (e) => e
});
class N2 {
  constructor(t) {
    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    this.type = "languageDetector", this.detectors = {}, this.init(t, n);
  }
  init() {
    let t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {
      languageUtils: {}
    }, n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
    this.services = t, this.options = QZ(n, this.options || {}, uee()), typeof this.options.convertDetectedLanguage == "string" && this.options.convertDetectedLanguage.indexOf("15897") > -1 && (this.options.convertDetectedLanguage = (s) => s.replace("-", "_")), this.options.lookupFromUrlIndex && (this.options.lookupFromPathIndex = this.options.lookupFromUrlIndex), this.i18nOptions = i, this.addDetector(eee), this.addDetector(tee), this.addDetector(ree), this.addDetector(oee), this.addDetector(iee), this.addDetector(aee), this.addDetector(see), this.addDetector(lee), this.addDetector(nee);
  }
  addDetector(t) {
    return this.detectors[t.name] = t, this;
  }
  detect() {
    let t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.options.order, n = [];
    return t.forEach((i) => {
      if (this.detectors[i]) {
        let s = this.detectors[i].lookup(this.options);
        s && typeof s == "string" && (s = [s]), s && (n = n.concat(s));
      }
    }), n = n.filter((i) => i != null && !JZ(i)).map((i) => this.options.convertDetectedLanguage(i)), this.services && this.services.languageUtils && this.services.languageUtils.getBestMatchFromCodes ? n : n.length > 0 ? n[0] : null;
  }
  cacheUserLanguage(t) {
    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.options.caches;
    n && (this.options.excludeCacheFor && this.options.excludeCacheFor.indexOf(t) > -1 || n.forEach((i) => {
      this.detectors[i] && this.detectors[i].cacheUserLanguage(t, this.options);
    }));
  }
}
N2.type = "languageDetector";
const cee = {
  en: { translation: { upload: "Upload", overlap: "Overlap", targets: "Targets", settings: "Settings", results: "Results", language: "Language" } },
  de: { translation: { upload: "Upload", overlap: "Überlappung", targets: "Ziele", settings: "Einstellungen", results: "Ergebnisse", language: "Sprache" } }
}, dee = ({ children: e, defaultLang: t = "en" }) => {
  const n = Cr.useRef(sa.createInstance()), [i, s] = Cr.useState(!1);
  return Cr.useEffect(() => {
    n.current.use(UZ).use(N2).init({
      resources: cee,
      fallbackLng: t,
      detection: { order: ["querystring", "localStorage", "navigator"], caches: ["localStorage"] }
    }).then(() => s(!0));
  }, [t]), i ? /* @__PURE__ */ A.jsx(KZ, { i18n: n.current, children: e }) : null;
}, fee = () => {
  var i;
  const { i18n: e } = $C(), [t, n] = Cr.useState((i = e.language) != null && i.startsWith("de") ? "de" : "en");
  return Cr.useEffect(() => {
    e.changeLanguage(t);
  }, [t, e]), /* @__PURE__ */ A.jsxs(tv, { size: "small", value: t, onChange: (s) => n(s.target.value), sx: { color: "white", borderColor: "white", ml: 2 }, children: [
    /* @__PURE__ */ A.jsx(ms, { value: "en", children: "EN" }),
    /* @__PURE__ */ A.jsx(ms, { value: "de", children: "DE" })
  ] });
}, pee = ({ children: e }) => /* @__PURE__ */ A.jsxs(L0, { sx: { display: "flex", flexDirection: "column", minHeight: "100vh" }, children: [
  /* @__PURE__ */ A.jsx(mj, { position: "static", children: /* @__PURE__ */ A.jsxs(zP, { children: [
    /* @__PURE__ */ A.jsx(bi, { variant: "h6", sx: { flexGrow: 1 }, children: "Datafusion" }),
    /* @__PURE__ */ A.jsx(of, { color: "inherit", component: qp, to: "/", children: "Upload" }),
    /* @__PURE__ */ A.jsx(of, { color: "inherit", component: qp, to: "/overlap", children: "Overlap" }),
    /* @__PURE__ */ A.jsx(of, { color: "inherit", component: qp, to: "/targets", children: "Targets" }),
    /* @__PURE__ */ A.jsx(of, { color: "inherit", component: qp, to: "/settings", children: "Settings" }),
    /* @__PURE__ */ A.jsx(of, { color: "inherit", component: qp, to: "/results", children: "Results" }),
    /* @__PURE__ */ A.jsx(fee, {})
  ] }) }),
  /* @__PURE__ */ A.jsx(Aj, { sx: { py: 3, flexGrow: 1 }, children: e })
] });
class hee {
  constructor(t = {}) {
    ku(this, "apiBase");
    ku(this, "authEnabled");
    ku(this, "jwtToken");
    const n = window.__DATAFUSION_CONFIG__ ?? {};
    this.apiBase = t.apiBase ?? n.apiBase ?? "", this.authEnabled = t.authEnabled ?? !!n.authEnabled, this.jwtToken = t.jwtToken ?? n.jwtToken;
  }
  async get(t, n = {}) {
    return this.request(t, { method: "GET", ...n });
  }
  async post(t, n, i = {}) {
    return this.request(t, { method: "POST", body: JSON.stringify(n), headers: { "Content-Type": "application/json", ...i.headers || {} }, ...i });
  }
  async postForm(t, n, i = {}) {
    return this.request(t, { method: "POST", body: n, ...i });
  }
  async request(t, n = {}) {
    const i = new Headers(n.headers);
    this.authEnabled && this.jwtToken && i.set("Authorization", `Bearer ${this.jwtToken}`);
    const s = await fetch(this.apiBase + t, { ...n, headers: i });
    if (!s.ok) {
      const d = await s.text().catch(() => "");
      throw new Error(`HTTP ${s.status}: ${d}`);
    }
    return (s.headers.get("content-type") || "").includes("application/json") ? s.json() : s.text();
  }
}
const L2 = Cr.createContext(void 0), mee = ({ runtime: e, children: t }) => {
  const n = Cr.useMemo(() => new hee({ apiBase: e.apiBase, authEnabled: e.authEnabled, jwtToken: e.jwtToken }), [e.apiBase, e.authEnabled, e.jwtToken]), [i, s] = Cr.useState(void 0), [u, d] = Cr.useState(void 0), [p, m] = Cr.useState({ prefer_pycaret: !0, random_state: 42, row_limit: null, overlap_features: null, targets_from_a: null, targets_from_b: null, columns_include: null, columns_exclude: null }), [v, y] = Cr.useState(void 0), [C, w] = Cr.useState(!1), [R, O] = Cr.useState(void 0), _ = {
    runtime: e,
    client: n,
    fileA: i,
    fileB: u,
    settings: p,
    result: v,
    loading: C,
    error: R,
    setFiles: (P, D) => {
      s(P), d(D);
    },
    setSettings: (P) => {
      m((D) => ({ ...D, ...P }));
    },
    resetResult: () => y(void 0),
    runUploadFusion: async () => {
      if (!i || !u) {
        O("Both files are required");
        return;
      }
      w(!0), O(void 0);
      try {
        const P = new FormData();
        P.append("file_a", i, i.name), P.append("file_b", u, u.name), p.overlap_features && p.overlap_features.forEach((z) => P.append("overlap_features", z)), p.targets_from_a && p.targets_from_a.forEach((z) => P.append("targets_from_a", z)), p.targets_from_b && p.targets_from_b.forEach((z) => P.append("targets_from_b", z)), typeof p.prefer_pycaret == "boolean" && P.append("prefer_pycaret", String(p.prefer_pycaret)), typeof p.random_state == "number" && P.append("random_state", String(p.random_state)), Array.isArray(p.columns_include) && p.columns_include.forEach((z) => P.append("columns_include", z)), Array.isArray(p.columns_exclude) && p.columns_exclude.forEach((z) => P.append("columns_exclude", z)), typeof p.row_limit == "number" && P.append("row_limit", String(p.row_limit));
        const D = await n.postForm("/v1/fuse/upload", P);
        y(D);
      } catch (P) {
        O((P == null ? void 0 : P.message) || String(P));
      } finally {
        w(!1);
      }
    }
  };
  return /* @__PURE__ */ A.jsx(L2.Provider, { value: _, children: t });
}, F2 = () => {
  const e = Cr.useContext(L2);
  if (!e) throw new Error("useAppState must be used within AppStateProvider");
  return e;
}, gee = () => {
  const { t: e } = $C(), t = C2(), { setFiles: n, runUploadFusion: i, loading: s, error: u, runtime: d } = F2(), [p, m] = Cr.useState(), [v, y] = Cr.useState(), C = (R) => (O) => {
    var L;
    const E = (L = O.target.files) == null ? void 0 : L[0];
    if (!E) {
      R(void 0);
      return;
    }
    const k = (d.maxUploadMb ?? 20) * 1024 * 1024;
    if (E.size > k) {
      alert(`File too large. Limit ${d.maxUploadMb} MB`);
      return;
    }
    R(E);
  }, w = async () => {
    n(p, v), await i(), t("/results");
  };
  return /* @__PURE__ */ A.jsxs(bs, { sx: { p: 3 }, children: [
    /* @__PURE__ */ A.jsx(bi, { variant: "h5", gutterBottom: !0, children: e("upload") }),
    /* @__PURE__ */ A.jsxs(L0, { display: "flex", gap: 2, children: [
      /* @__PURE__ */ A.jsxs("div", { children: [
        /* @__PURE__ */ A.jsx(bi, { variant: "subtitle2", children: "Dataset A" }),
        /* @__PURE__ */ A.jsx("input", { type: "file", accept: ".csv,.parquet", onChange: C(m) })
      ] }),
      /* @__PURE__ */ A.jsxs("div", { children: [
        /* @__PURE__ */ A.jsx(bi, { variant: "subtitle2", children: "Dataset B" }),
        /* @__PURE__ */ A.jsx("input", { type: "file", accept: ".csv,.parquet", onChange: C(y) })
      ] })
    ] }),
    u && /* @__PURE__ */ A.jsx(hj, { severity: "error", sx: { mt: 2 }, children: u }),
    /* @__PURE__ */ A.jsx(L0, { mt: 2, children: /* @__PURE__ */ A.jsx(of, { variant: "contained", onClick: w, disabled: !p || !v || s, children: s ? "Running…" : "Run Fusion" }) })
  ] });
}, vee = () => {
  const { t: e } = $C();
  return /* @__PURE__ */ A.jsxs(bs, { sx: { p: 3 }, children: [
    /* @__PURE__ */ A.jsx(bi, { variant: "h5", gutterBottom: !0, children: e("overlap") }),
    /* @__PURE__ */ A.jsx(bi, { variant: "body2", children: "Konfiguration der Überlappungsmerkmale folgt." })
  ] });
}, yee = () => {
  const { t: e } = $C();
  return /* @__PURE__ */ A.jsxs(bs, { sx: { p: 3 }, children: [
    /* @__PURE__ */ A.jsx(bi, { variant: "h5", gutterBottom: !0, children: e("targets") }),
    /* @__PURE__ */ A.jsx(bi, { variant: "body2", children: "Auswahl der Zielvariablen folgt." })
  ] });
}, bee = () => {
  const { t: e } = $C();
  return /* @__PURE__ */ A.jsxs(bs, { sx: { p: 3 }, children: [
    /* @__PURE__ */ A.jsx(bi, { variant: "h5", gutterBottom: !0, children: e("settings") }),
    /* @__PURE__ */ A.jsx(bi, { variant: "body2", children: "Erweiterte Einstellungen folgen." })
  ] });
}, qP = /* @__PURE__ */ S.createContext(void 0);
process.env.NODE_ENV !== "production" && (qP.displayName = "GridApiContext");
function In() {
  const e = S.useContext(qP);
  if (e === void 0)
    throw new Error(["MUI X: Could not find the Data Grid context.", "It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.", "This can also happen if you are bundling multiple versions of the Data Grid."].join(`
`));
  return e;
}
const KP = /* @__PURE__ */ S.createContext(void 0);
process.env.NODE_ENV !== "production" && (KP.displayName = "GridRootPropsContext");
const Vt = () => {
  const e = S.useContext(KP);
  if (!e)
    throw new Error("MUI X: useGridRootProps should only be used inside the DataGrid, DataGridPro or DataGridPremium component.");
  return e;
}, Cee = parseInt(S.version, 10), tr = (e) => {
  if (Cee >= 19) {
    const t = (n) => e(n, n.ref ?? null);
    return t.displayName = e.displayName ?? e.name, t;
  }
  return /* @__PURE__ */ S.forwardRef(e);
};
var See = (e, t, n) => {
  if (t.length === 1 && t[0] === n) {
    let i = !1;
    try {
      const s = {};
      e(s) === s && (i = !0);
    } catch {
    }
    if (i) {
      let s;
      try {
        throw new Error();
      } catch (u) {
        ({ stack: s } = u);
      }
      console.warn(
        `The result function returned its own inputs without modification. e.g
\`createSelector([state => state.todos], todos => todos)\`
This could lead to inefficient memoization and unnecessary re-renders.
Ensure transformation logic is in the result function, and extraction logic is in the input selectors.`,
        { stack: s }
      );
    }
  }
}, wee = (e, t, n) => {
  const { memoize: i, memoizeOptions: s } = t, { inputSelectorResults: u, inputSelectorResultsCopy: d } = e, p = i(() => ({}), ...s);
  if (!(p.apply(null, u) === p.apply(null, d))) {
    let v;
    try {
      throw new Error();
    } catch (y) {
      ({ stack: v } = y);
    }
    console.warn(
      `An input selector returned a different result when passed same arguments.
This means your output selector will likely run more frequently than intended.
Avoid returning a new reference inside your input selector, e.g.
\`createSelector([state => state.todos.map(todo => todo.id)], todoIds => todoIds.length)\``,
      {
        arguments: n,
        firstInputs: u,
        secondInputs: d,
        stack: v
      }
    );
  }
}, xee = {
  inputStabilityCheck: "once",
  identityFunctionCheck: "once"
}, V0 = /* @__PURE__ */ Symbol("NOT_FOUND");
function Eee(e, t = `expected a function, instead received ${typeof e}`) {
  if (typeof e != "function")
    throw new TypeError(t);
}
function Tee(e, t = `expected an object, instead received ${typeof e}`) {
  if (typeof e != "object")
    throw new TypeError(t);
}
function Ree(e, t = "expected all items to be functions, instead received the following types: ") {
  if (!e.every((n) => typeof n == "function")) {
    const n = e.map(
      (i) => typeof i == "function" ? `function ${i.name || "unnamed"}()` : typeof i
    ).join(", ");
    throw new TypeError(`${t}[${n}]`);
  }
}
var __ = (e) => Array.isArray(e) ? e : [e];
function Oee(e) {
  const t = Array.isArray(e[0]) ? e[0] : e;
  return Ree(
    t,
    "createSelector expects all input-selectors to be functions, but received the following types: "
  ), t;
}
function A_(e, t) {
  const n = [], { length: i } = e;
  for (let s = 0; s < i; s++)
    n.push(e[s].apply(null, t));
  return n;
}
var kee = (e, t) => {
  const { identityFunctionCheck: n, inputStabilityCheck: i } = {
    ...xee,
    ...t
  };
  return {
    identityFunctionCheck: {
      shouldRun: n === "always" || n === "once" && e,
      run: See
    },
    inputStabilityCheck: {
      shouldRun: i === "always" || i === "once" && e,
      run: wee
    }
  };
};
function Pee(e) {
  let t;
  return {
    get(n) {
      return t && e(t.key, n) ? t.value : V0;
    },
    put(n, i) {
      t = { key: n, value: i };
    },
    getEntries() {
      return t ? [t] : [];
    },
    clear() {
      t = void 0;
    }
  };
}
function Mee(e, t) {
  let n = [];
  function i(p) {
    const m = n.findIndex((v) => t(p, v.key));
    if (m > -1) {
      const v = n[m];
      return m > 0 && (n.splice(m, 1), n.unshift(v)), v.value;
    }
    return V0;
  }
  function s(p, m) {
    i(p) === V0 && (n.unshift({ key: p, value: m }), n.length > e && n.pop());
  }
  function u() {
    return n;
  }
  function d() {
    n = [];
  }
  return { get: i, put: s, getEntries: u, clear: d };
}
var Iee = (e, t) => e === t;
function Dee(e) {
  return function(n, i) {
    if (n === null || i === null || n.length !== i.length)
      return !1;
    const { length: s } = n;
    for (let u = 0; u < s; u++)
      if (!e(n[u], i[u]))
        return !1;
    return !0;
  };
}
function _2(e, t) {
  const n = typeof t == "object" ? t : { equalityCheck: t }, {
    equalityCheck: i = Iee,
    maxSize: s = 1,
    resultEqualityCheck: u
  } = n, d = Dee(i);
  let p = 0;
  const m = s <= 1 ? Pee(d) : Mee(s, d);
  function v() {
    let y = m.get(arguments);
    if (y === V0) {
      if (y = e.apply(null, arguments), p++, u) {
        const w = m.getEntries().find(
          (R) => u(R.value, y)
        );
        w && (y = w.value, p !== 0 && p--);
      }
      m.put(arguments, y);
    }
    return y;
  }
  return v.clearCache = () => {
    m.clear(), v.resetResultsCount();
  }, v.resultsCount = () => p, v.resetResultsCount = () => {
    p = 0;
  }, v;
}
var Nee = class {
  constructor(e) {
    this.value = e;
  }
  deref() {
    return this.value;
  }
}, Lee = typeof WeakRef < "u" ? WeakRef : Nee, Fee = 0, $_ = 1;
function r0() {
  return {
    s: Fee,
    v: void 0,
    o: null,
    p: null
  };
}
function A2(e, t = {}) {
  let n = r0();
  const { resultEqualityCheck: i } = t;
  let s, u = 0;
  function d() {
    var C;
    let p = n;
    const { length: m } = arguments;
    for (let w = 0, R = m; w < R; w++) {
      const O = arguments[w];
      if (typeof O == "function" || typeof O == "object" && O !== null) {
        let E = p.o;
        E === null && (p.o = E = /* @__PURE__ */ new WeakMap());
        const k = E.get(O);
        k === void 0 ? (p = r0(), E.set(O, p)) : p = k;
      } else {
        let E = p.p;
        E === null && (p.p = E = /* @__PURE__ */ new Map());
        const k = E.get(O);
        k === void 0 ? (p = r0(), E.set(O, p)) : p = k;
      }
    }
    const v = p;
    let y;
    if (p.s === $_)
      y = p.v;
    else if (y = e.apply(null, arguments), u++, i) {
      const w = ((C = s == null ? void 0 : s.deref) == null ? void 0 : C.call(s)) ?? s;
      w != null && i(w, y) && (y = w, u !== 0 && u--), s = typeof y == "object" && y !== null || typeof y == "function" ? new Lee(y) : y;
    }
    return v.s = $_, v.v = y, y;
  }
  return d.clearCache = () => {
    n = r0(), d.resetResultsCount();
  }, d.resultsCount = () => u, d.resetResultsCount = () => {
    u = 0;
  }, d;
}
function $2(e, ...t) {
  const n = typeof e == "function" ? {
    memoize: e,
    memoizeOptions: t
  } : e, i = (...s) => {
    let u = 0, d = 0, p, m = {}, v = s.pop();
    typeof v == "object" && (m = v, v = s.pop()), Eee(
      v,
      `createSelector expects an output function after the inputs, but received: [${typeof v}]`
    );
    const y = {
      ...n,
      ...m
    }, {
      memoize: C,
      memoizeOptions: w = [],
      argsMemoize: R = A2,
      argsMemoizeOptions: O = [],
      devModeChecks: E = {}
    } = y, k = __(w), L = __(O), F = Oee(s), _ = C(function() {
      return u++, v.apply(
        null,
        arguments
      );
    }, ...k);
    let P = !0;
    const D = R(function() {
      d++;
      const K = A_(
        F,
        arguments
      );
      if (p = _.apply(null, K), process.env.NODE_ENV !== "production") {
        const { identityFunctionCheck: Q, inputStabilityCheck: H } = kee(P, E);
        if (Q.shouldRun && Q.run(
          v,
          K,
          p
        ), H.shouldRun) {
          const I = A_(
            F,
            arguments
          );
          H.run(
            { inputSelectorResults: K, inputSelectorResultsCopy: I },
            { memoize: C, memoizeOptions: k },
            arguments
          );
        }
        P && (P = !1);
      }
      return p;
    }, ...L);
    return Object.assign(D, {
      resultFunc: v,
      memoizedResultFunc: _,
      dependencies: F,
      dependencyRecomputations: () => d,
      resetDependencyRecomputations: () => {
        d = 0;
      },
      lastResult: () => p,
      recomputations: () => u,
      resetRecomputations: () => {
        u = 0;
      },
      memoize: C,
      argsMemoize: R
    });
  };
  return Object.assign(i, {
    withTypes: () => i
  }), i;
}
var j2 = /* @__PURE__ */ $2(A2), _ee = Object.assign(
  (e, t = j2) => {
    Tee(
      e,
      `createStructuredSelector expects first argument to be an object where each property is a selector, instead received a ${typeof e}`
    );
    const n = Object.keys(e), i = n.map(
      (u) => e[u]
    );
    return t(
      i,
      (...u) => u.reduce((d, p, m) => (d[n[m]] = p, d), {})
    );
  },
  { withTypes: () => _ee }
);
const j_ = /* @__PURE__ */ new Set();
function el(e, t = "warning") {
  if (process.env.NODE_ENV === "production")
    return;
  const n = Array.isArray(e) ? e.join(`
`) : e;
  j_.has(n) || (j_.add(n), t === "error" ? console.error(n) : console.warn(n));
}
const Aee = Object.is;
function z2(e, t) {
  if (e === t)
    return !0;
  if (!(e instanceof Object) || !(t instanceof Object))
    return !1;
  let n = 0, i = 0;
  for (const s in e)
    if (n += 1, !Aee(e[s], t[s]) || !(s in t))
      return !1;
  for (const s in t)
    i += 1;
  return n === i;
}
var $k = { exports: {} }, _O = {};
/**
 * @license React
 * use-sync-external-store-shim.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var z_;
function $ee() {
  if (z_) return _O;
  z_ = 1;
  var e = S;
  function t(C, w) {
    return C === w && (C !== 0 || 1 / C === 1 / w) || C !== C && w !== w;
  }
  var n = typeof Object.is == "function" ? Object.is : t, i = e.useState, s = e.useEffect, u = e.useLayoutEffect, d = e.useDebugValue;
  function p(C, w) {
    var R = w(), O = i({ inst: { value: R, getSnapshot: w } }), E = O[0].inst, k = O[1];
    return u(
      function() {
        E.value = R, E.getSnapshot = w, m(E) && k({ inst: E });
      },
      [C, R, w]
    ), s(
      function() {
        return m(E) && k({ inst: E }), C(function() {
          m(E) && k({ inst: E });
        });
      },
      [C]
    ), d(R), R;
  }
  function m(C) {
    var w = C.getSnapshot;
    C = C.value;
    try {
      var R = w();
      return !n(C, R);
    } catch {
      return !0;
    }
  }
  function v(C, w) {
    return w();
  }
  var y = typeof window > "u" || typeof window.document > "u" || typeof window.document.createElement > "u" ? v : p;
  return _O.useSyncExternalStore = e.useSyncExternalStore !== void 0 ? e.useSyncExternalStore : y, _O;
}
var AO = {};
/**
 * @license React
 * use-sync-external-store-shim.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var H_;
function jee() {
  return H_ || (H_ = 1, process.env.NODE_ENV !== "production" && function() {
    function e(R, O) {
      return R === O && (R !== 0 || 1 / R === 1 / O) || R !== R && O !== O;
    }
    function t(R, O) {
      y || s.startTransition === void 0 || (y = !0, console.error(
        "You are using an outdated, pre-release alpha of React 18 that does not support useSyncExternalStore. The use-sync-external-store shim will not work correctly. Upgrade to a newer pre-release."
      ));
      var E = O();
      if (!C) {
        var k = O();
        u(E, k) || (console.error(
          "The result of getSnapshot should be cached to avoid an infinite loop"
        ), C = !0);
      }
      k = d({
        inst: { value: E, getSnapshot: O }
      });
      var L = k[0].inst, F = k[1];
      return m(
        function() {
          L.value = E, L.getSnapshot = O, n(L) && F({ inst: L });
        },
        [R, E, O]
      ), p(
        function() {
          return n(L) && F({ inst: L }), R(function() {
            n(L) && F({ inst: L });
          });
        },
        [R]
      ), v(E), E;
    }
    function n(R) {
      var O = R.getSnapshot;
      R = R.value;
      try {
        var E = O();
        return !u(R, E);
      } catch {
        return !0;
      }
    }
    function i(R, O) {
      return O();
    }
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());
    var s = S, u = typeof Object.is == "function" ? Object.is : e, d = s.useState, p = s.useEffect, m = s.useLayoutEffect, v = s.useDebugValue, y = !1, C = !1, w = typeof window > "u" || typeof window.document > "u" || typeof window.document.createElement > "u" ? i : t;
    AO.useSyncExternalStore = s.useSyncExternalStore !== void 0 ? s.useSyncExternalStore : w, typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());
  }()), AO;
}
process.env.NODE_ENV === "production" ? $k.exports = $ee() : $k.exports = jee();
var YP = $k.exports;
function H2(e) {
  return e.acceptsApiRef;
}
function V_(e, t) {
  return H2(t) ? t(e) : t(e.current.state);
}
function $O(e, t, n, i) {
  return H2(t) ? t(e, n) : t(e.current.state, i);
}
const V2 = Object.is, XP = z2, zee = (e, t) => e === t ? !0 : e.length === t.length && e.every((n, i) => n === t[i]), Hee = (e, t) => {
  let n = Object.is;
  return t instanceof Array ? n = zee : t instanceof Object && (n = XP), n(e, t);
}, B2 = () => ({
  state: null,
  equals: null,
  selector: null,
  args: void 0
}), B0 = [], U2 = () => null, tt = (e, t, n = V2) => {
  process.env.NODE_ENV !== "production" && (e.current.state || el(["MUI X: `useGridSelector` has been called before the initialization of the state.", "This hook can only be used inside the context of the grid."]));
  const i = al(B2), s = i.current.selector !== null, [u, d] = S.useState(
    // We don't use an initialization function to avoid allocations
    s ? null : V_(e, t)
  );
  i.current.state = u, i.current.equals = n, i.current.selector = t;
  const p = S.useCallback(
    () => (i.current.subscription || (i.current.subscription = e.current.store.subscribe(() => {
      const v = V_(e, i.current.selector);
      i.current.equals(i.current.state, v) || (i.current.state = v, d(v));
    })), null),
    // eslint-disable-next-line react-hooks/exhaustive-deps
    B0
  ), m = S.useCallback(() => () => {
    i.current.subscription && (i.current.subscription(), i.current.subscription = void 0);
  }, B0);
  return YP.useSyncExternalStore(m, p, U2), u;
}, pC = (e, t, n = void 0, i = V2) => {
  process.env.NODE_ENV !== "production" && (e.current.state || el(["MUI X: `useGridSelector` has been called before the initialization of the state.", "This hook can only be used inside the context of the grid."]));
  const s = al(B2), u = s.current.selector !== null, [d, p] = S.useState(
    // We don't use an initialization function to avoid allocations
    u ? null : $O(e, t, n, e.current.instanceId)
  );
  s.current.state = d, s.current.equals = i, s.current.selector = t;
  const m = s.current.args;
  if (s.current.args = n, u && !Hee(m, n)) {
    const C = $O(e, s.current.selector, s.current.args, e.current.instanceId);
    s.current.equals(s.current.state, C) || (s.current.state = C, p(C));
  }
  const v = S.useCallback(
    () => (s.current.subscription || (s.current.subscription = e.current.store.subscribe(() => {
      const C = $O(e, s.current.selector, s.current.args, e.current.instanceId);
      s.current.equals(s.current.state, C) || (s.current.state = C, p(C));
    })), null),
    // eslint-disable-next-line react-hooks/exhaustive-deps
    B0
  ), y = S.useCallback(() => () => {
    s.current.subscription && (s.current.subscription(), s.current.subscription = void 0);
  }, B0);
  return YP.useSyncExternalStore(y, v, U2), d;
}, Vee = $2({
  memoize: _2,
  memoizeOptions: {
    maxSize: 1,
    equalityCheck: Object.is
  }
}), B_ = /* @__PURE__ */ new WeakMap();
function zl(e) {
  return "current" in e && "instanceId" in e.current;
}
const Hl = {
  id: "default"
}, an = (e, t, n, i, s, u, ...d) => {
  if (d.length > 0)
    throw new Error("Unsupported number of selectors");
  let p;
  if (e && t && n && i && s && u)
    p = (m, v) => {
      const y = zl(m), C = v ?? (y ? m.current.instanceId : Hl), w = y ? m.current.state : m, R = e(w, C), O = t(w, C), E = n(w, C), k = i(w, C), L = s(w, C);
      return u(R, O, E, k, L);
    };
  else if (e && t && n && i && s)
    p = (m, v) => {
      const y = zl(m), C = v ?? (y ? m.current.instanceId : Hl), w = y ? m.current.state : m, R = e(w, C), O = t(w, C), E = n(w, C), k = i(w, C);
      return s(R, O, E, k);
    };
  else if (e && t && n && i)
    p = (m, v) => {
      const y = zl(m), C = v ?? (y ? m.current.instanceId : Hl), w = y ? m.current.state : m, R = e(w, C), O = t(w, C), E = n(w, C);
      return i(R, O, E);
    };
  else if (e && t && n)
    p = (m, v) => {
      const y = zl(m), C = v ?? (y ? m.current.instanceId : Hl), w = y ? m.current.state : m, R = e(w, C), O = t(w, C);
      return n(R, O);
    };
  else if (e && t)
    p = (m, v) => {
      const y = zl(m), C = v ?? (y ? m.current.instanceId : Hl), w = y ? m.current.state : m, R = e(w, C);
      return t(R);
    };
  else
    throw new Error("Missing arguments");
  return p.acceptsApiRef = !0, p;
}, jC = (e, t, n, i, s, u, ...d) => {
  if (d.length > 0)
    throw new Error("Unsupported number of selectors");
  let p;
  if (e && t && n && i && s && u)
    p = (m, v, y) => {
      const C = zl(m), w = y ?? (C ? m.current.instanceId : Hl), R = C ? m.current.state : m, O = e(R, v, w), E = t(R, v, w), k = n(R, v, w), L = i(R, v, w), F = s(R, v, w);
      return u(O, E, k, L, F, v);
    };
  else if (e && t && n && i && s)
    p = (m, v, y) => {
      const C = zl(m), w = y ?? (C ? m.current.instanceId : Hl), R = C ? m.current.state : m, O = e(R, v, w), E = t(R, v, w), k = n(R, v, w), L = i(R, v, w);
      return s(O, E, k, L, v);
    };
  else if (e && t && n && i)
    p = (m, v, y) => {
      const C = zl(m), w = y ?? (C ? m.current.instanceId : Hl), R = C ? m.current.state : m, O = e(R, v, w), E = t(R, v, w), k = n(R, v, w);
      return i(O, E, k, v);
    };
  else if (e && t && n)
    p = (m, v, y) => {
      const C = zl(m), w = y ?? (C ? m.current.instanceId : Hl), R = C ? m.current.state : m, O = e(R, v, w), E = t(R, v, w);
      return n(O, E, v);
    };
  else if (e && t)
    p = (m, v, y) => {
      const C = zl(m), w = y ?? (C ? m.current.instanceId : Hl), R = C ? m.current.state : m, O = e(R, v, w);
      return t(O, v);
    };
  else
    throw new Error("Missing arguments");
  return p.acceptsApiRef = !0, p;
}, cr = (...e) => {
  const t = (n, i) => {
    const s = zl(n), u = s ? n.current.instanceId : i ?? Hl, d = s ? n.current.state : n;
    process.env.NODE_ENV !== "production" && u.id === "default" && el(["MUI X: A selector was called without passing the instance ID, which may impact the performance of the grid.", "To fix, call it with `apiRef`, for example `mySelector(apiRef)`, or pass the instance ID explicitly, for example `mySelector(state, apiRef.current.instanceId)`."]);
    const p = B_.get(u), m = p ?? /* @__PURE__ */ new Map(), v = m == null ? void 0 : m.get(e);
    if (m && v)
      return v(d, u);
    const y = Vee(...e);
    return p || B_.set(u, m), m.set(e, y), y(d, u);
  };
  return t.acceptsApiRef = !0, t;
}, li = (e) => e.dimensions, LE = an(li, (e) => e.columnsTotalWidth), QP = (e) => e.dimensions.rowHeight, Bee = (e) => e.dimensions.contentSize.height, Uee = (e) => e.dimensions.hasScrollX, Gee = (e) => e.dimensions.hasScrollY, G2 = (e) => e.dimensions.columnsTotalWidth < e.dimensions.viewportOuterSize.width, Wee = (e) => e.dimensions.headerHeight, qee = (e) => e.dimensions.groupHeaderHeight, W2 = (e) => e.dimensions.hasScrollY ? e.dimensions.scrollbarSize : 0, Kee = (e) => {
  const t = e.dimensions.hasScrollX ? e.dimensions.scrollbarSize : 0, n = e.dimensions.viewportOuterSize.height - e.dimensions.minimumSize.height > 0;
  return !(t === 0 && !n);
};
function Jc(e) {
  return /* @__PURE__ */ S.memo(e, z2);
}
const Yee = {
  // Root
  noRowsLabel: "No rows",
  noResultsOverlayLabel: "No results found.",
  // Density selector toolbar button text
  toolbarDensity: "Density",
  toolbarDensityLabel: "Density",
  toolbarDensityCompact: "Compact",
  toolbarDensityStandard: "Standard",
  toolbarDensityComfortable: "Comfortable",
  // Columns selector toolbar button text
  toolbarColumns: "Columns",
  toolbarColumnsLabel: "Select columns",
  // Filters toolbar button text
  toolbarFilters: "Filters",
  toolbarFiltersLabel: "Show filters",
  toolbarFiltersTooltipHide: "Hide filters",
  toolbarFiltersTooltipShow: "Show filters",
  toolbarFiltersTooltipActive: (e) => e !== 1 ? `${e} active filters` : `${e} active filter`,
  // Quick filter toolbar field
  toolbarQuickFilterPlaceholder: "Search…",
  toolbarQuickFilterLabel: "Search",
  toolbarQuickFilterDeleteIconLabel: "Clear",
  // Export selector toolbar button text
  toolbarExport: "Export",
  toolbarExportLabel: "Export",
  toolbarExportCSV: "Download as CSV",
  toolbarExportPrint: "Print",
  toolbarExportExcel: "Download as Excel",
  // Columns management text
  columnsManagementSearchTitle: "Search",
  columnsManagementNoColumns: "No columns",
  columnsManagementShowHideAllText: "Show/Hide All",
  columnsManagementReset: "Reset",
  columnsManagementDeleteIconLabel: "Clear",
  // Filter panel text
  filterPanelAddFilter: "Add filter",
  filterPanelRemoveAll: "Remove all",
  filterPanelDeleteIconLabel: "Delete",
  filterPanelLogicOperator: "Logic operator",
  filterPanelOperator: "Operator",
  filterPanelOperatorAnd: "And",
  filterPanelOperatorOr: "Or",
  filterPanelColumns: "Columns",
  filterPanelInputLabel: "Value",
  filterPanelInputPlaceholder: "Filter value",
  // Filter operators text
  filterOperatorContains: "contains",
  filterOperatorDoesNotContain: "does not contain",
  filterOperatorEquals: "equals",
  filterOperatorDoesNotEqual: "does not equal",
  filterOperatorStartsWith: "starts with",
  filterOperatorEndsWith: "ends with",
  filterOperatorIs: "is",
  filterOperatorNot: "is not",
  filterOperatorAfter: "is after",
  filterOperatorOnOrAfter: "is on or after",
  filterOperatorBefore: "is before",
  filterOperatorOnOrBefore: "is on or before",
  filterOperatorIsEmpty: "is empty",
  filterOperatorIsNotEmpty: "is not empty",
  filterOperatorIsAnyOf: "is any of",
  "filterOperator=": "=",
  "filterOperator!=": "!=",
  "filterOperator>": ">",
  "filterOperator>=": ">=",
  "filterOperator<": "<",
  "filterOperator<=": "<=",
  // Header filter operators text
  headerFilterOperatorContains: "Contains",
  headerFilterOperatorDoesNotContain: "Does not contain",
  headerFilterOperatorEquals: "Equals",
  headerFilterOperatorDoesNotEqual: "Does not equal",
  headerFilterOperatorStartsWith: "Starts with",
  headerFilterOperatorEndsWith: "Ends with",
  headerFilterOperatorIs: "Is",
  headerFilterOperatorNot: "Is not",
  headerFilterOperatorAfter: "Is after",
  headerFilterOperatorOnOrAfter: "Is on or after",
  headerFilterOperatorBefore: "Is before",
  headerFilterOperatorOnOrBefore: "Is on or before",
  headerFilterOperatorIsEmpty: "Is empty",
  headerFilterOperatorIsNotEmpty: "Is not empty",
  headerFilterOperatorIsAnyOf: "Is any of",
  "headerFilterOperator=": "Equals",
  "headerFilterOperator!=": "Not equals",
  "headerFilterOperator>": "Greater than",
  "headerFilterOperator>=": "Greater than or equal to",
  "headerFilterOperator<": "Less than",
  "headerFilterOperator<=": "Less than or equal to",
  // Filter values text
  filterValueAny: "any",
  filterValueTrue: "true",
  filterValueFalse: "false",
  // Column menu text
  columnMenuLabel: "Menu",
  columnMenuAriaLabel: (e) => `${e} column menu`,
  columnMenuShowColumns: "Show columns",
  columnMenuManageColumns: "Manage columns",
  columnMenuFilter: "Filter",
  columnMenuHideColumn: "Hide column",
  columnMenuUnsort: "Unsort",
  columnMenuSortAsc: "Sort by ASC",
  columnMenuSortDesc: "Sort by DESC",
  // Column header text
  columnHeaderFiltersTooltipActive: (e) => e !== 1 ? `${e} active filters` : `${e} active filter`,
  columnHeaderFiltersLabel: "Show filters",
  columnHeaderSortIconLabel: "Sort",
  // Rows selected footer text
  footerRowSelected: (e) => e !== 1 ? `${e.toLocaleString()} rows selected` : `${e.toLocaleString()} row selected`,
  // Total row amount footer text
  footerTotalRows: "Total Rows:",
  // Total visible row amount footer text
  footerTotalVisibleRows: (e, t) => `${e.toLocaleString()} of ${t.toLocaleString()}`,
  // Checkbox selection text
  checkboxSelectionHeaderName: "Checkbox selection",
  checkboxSelectionSelectAllRows: "Select all rows",
  checkboxSelectionUnselectAllRows: "Unselect all rows",
  checkboxSelectionSelectRow: "Select row",
  checkboxSelectionUnselectRow: "Unselect row",
  // Boolean cell text
  booleanCellTrueLabel: "yes",
  booleanCellFalseLabel: "no",
  // Actions cell more text
  actionsCellMore: "more",
  // Column pinning text
  pinToLeft: "Pin to left",
  pinToRight: "Pin to right",
  unpin: "Unpin",
  // Tree Data
  treeDataGroupingHeaderName: "Group",
  treeDataExpand: "see children",
  treeDataCollapse: "hide children",
  // Grouping columns
  groupingColumnHeaderName: "Group",
  groupColumn: (e) => `Group by ${e}`,
  unGroupColumn: (e) => `Stop grouping by ${e}`,
  // Master/detail
  detailPanelToggle: "Detail panel toggle",
  expandDetailPanel: "Expand",
  collapseDetailPanel: "Collapse",
  // Used core components translation keys
  MuiTablePagination: {},
  // Row reordering text
  rowReorderingHeaderName: "Row reordering",
  // Aggregation
  aggregationMenuItemHeader: "Aggregation",
  aggregationFunctionLabelSum: "sum",
  aggregationFunctionLabelAvg: "avg",
  aggregationFunctionLabelMin: "min",
  aggregationFunctionLabelMax: "max",
  aggregationFunctionLabelSize: "size"
};
function Gn(e) {
  return yn("MuiDataGrid", e);
}
const ae = bn("MuiDataGrid", ["actionsCell", "aggregationColumnHeader", "aggregationColumnHeader--alignLeft", "aggregationColumnHeader--alignCenter", "aggregationColumnHeader--alignRight", "aggregationColumnHeaderLabel", "autoHeight", "autosizing", "booleanCell", "cell--editable", "cell--editing", "cell--flex", "cell--textCenter", "cell--textLeft", "cell--textRight", "cell--rangeTop", "cell--rangeBottom", "cell--rangeLeft", "cell--rangeRight", "cell--pinnedLeft", "cell--pinnedRight", "cell--selectionMode", "cell", "cellCheckbox", "cellEmpty", "cellSkeleton", "cellOffsetLeft", "checkboxInput", "columnHeader", "columnHeader--alignCenter", "columnHeader--alignLeft", "columnHeader--alignRight", "columnHeader--dragging", "columnHeader--moving", "columnHeader--numeric", "columnHeader--sortable", "columnHeader--sorted", "columnHeader--filtered", "columnHeader--pinnedLeft", "columnHeader--pinnedRight", "columnHeader--last", "columnHeader--lastUnpinned", "columnHeader--siblingFocused", "columnHeaderCheckbox", "columnHeaderDraggableContainer", "columnHeaderTitle", "columnHeaderTitleContainer", "columnHeaderTitleContainerContent", "columnHeader--filledGroup", "columnHeader--emptyGroup", "columnHeaders", "columnSeparator--resizable", "columnSeparator--resizing", "columnSeparator--sideLeft", "columnSeparator--sideRight", "columnSeparator", "columnsManagement", "columnsManagementRow", "columnsManagementHeader", "columnsManagementSearchInput", "columnsManagementFooter", "container--top", "container--bottom", "detailPanel", "detailPanels", "detailPanelToggleCell", "detailPanelToggleCell--expanded", "footerCell", "panel", "panelHeader", "panelWrapper", "panelContent", "panelFooter", "paper", "editBooleanCell", "editInputCell", "filler", "filler--borderBottom", "filler--pinnedLeft", "filler--pinnedRight", "filterForm", "filterFormDeleteIcon", "filterFormLogicOperatorInput", "filterFormColumnInput", "filterFormOperatorInput", "filterFormValueInput", "filterIcon", "footerContainer", "headerFilterRow", "iconButtonContainer", "iconSeparator", "main", "main--hasPinnedRight", "main--hasSkeletonLoadingOverlay", "menu", "menuIcon", "menuIconButton", "menuOpen", "menuList", "overlay", "overlayWrapper", "overlayWrapperInner", "root", "root--densityStandard", "root--densityComfortable", "root--densityCompact", "root--disableUserSelection", "root--noToolbar", "row", "row--editable", "row--editing", "row--firstVisible", "row--lastVisible", "row--dragging", "row--dynamicHeight", "row--detailPanelExpanded", "row--borderBottom", "rowReorderCellPlaceholder", "rowCount", "rowReorderCellContainer", "rowReorderCell", "rowReorderCell--draggable", "rowSkeleton", "scrollArea--left", "scrollArea--right", "scrollArea--up", "scrollArea--down", "scrollArea", "scrollbar", "scrollbar--vertical", "scrollbar--horizontal", "scrollbarFiller", "scrollbarFiller--header", "scrollbarFiller--borderTop", "scrollbarFiller--borderBottom", "scrollbarFiller--pinnedRight", "selectedRowCount", "sortButton", "sortIcon", "toolbarContainer", "toolbarFilterList", "virtualScroller", "virtualScroller--hasScrollX", "virtualScrollerContent", "virtualScrollerContent--overflowed", "virtualScrollerRenderZone", "pinnedColumns", "withVerticalBorder", "withBorderColor", "cell--withRightBorder", "cell--withLeftBorder", "columnHeader--withRightBorder", "columnHeader--withLeftBorder", "treeDataGroupingCell", "treeDataGroupingCellToggle", "treeDataGroupingCellLoadingContainer", "groupingCriteriaCell", "groupingCriteriaCellToggle", "groupingCriteriaCellLoadingContainer", "pinnedRows", "pinnedRows--top", "pinnedRows--bottom", "pinnedRowsRenderZone"]), U_ = 1e3;
class Xee {
  constructor(t = U_) {
    this.timeouts = /* @__PURE__ */ new Map(), this.cleanupTimeout = U_, this.cleanupTimeout = t;
  }
  register(t, n, i) {
    this.timeouts || (this.timeouts = /* @__PURE__ */ new Map());
    const s = setTimeout(() => {
      typeof n == "function" && n(), this.timeouts.delete(i.cleanupToken);
    }, this.cleanupTimeout);
    this.timeouts.set(i.cleanupToken, s);
  }
  unregister(t) {
    const n = this.timeouts.get(t.cleanupToken);
    n && (this.timeouts.delete(t.cleanupToken), clearTimeout(n));
  }
  reset() {
    this.timeouts && (this.timeouts.forEach((t, n) => {
      this.unregister({
        cleanupToken: n
      });
    }), this.timeouts = void 0);
  }
}
class Qee {
  constructor() {
    this.registry = new FinalizationRegistry((t) => {
      typeof t == "function" && t();
    });
  }
  register(t, n, i) {
    this.registry.register(t, n, i);
  }
  unregister(t) {
    this.registry.unregister(t);
  }
  // eslint-disable-next-line class-methods-use-this
  reset() {
  }
}
var gs = /* @__PURE__ */ function(e) {
  return e.DataGrid = "DataGrid", e.DataGridPro = "DataGridPro", e.DataGridPremium = "DataGridPremium", e;
}(gs || {});
class Jee {
}
function Zee(e) {
  let t = 0;
  return function(i, s, u, d) {
    e.registry === null && (e.registry = typeof FinalizationRegistry < "u" ? new Qee() : new Xee());
    const [p] = S.useState(new Jee()), m = S.useRef(null), v = S.useRef(null);
    v.current = u;
    const y = S.useRef(null);
    if (!m.current && v.current) {
      const C = (w, R, O) => {
        var E;
        R.defaultMuiPrevented || (E = v.current) == null || E.call(v, w, R, O);
      };
      m.current = i.current.subscribeEvent(s, C, d), t += 1, y.current = {
        cleanupToken: t
      }, e.registry.register(
        p,
        // The callback below will be called once this reference stops being retained
        () => {
          var w;
          (w = m.current) == null || w.call(m), m.current = null, y.current = null;
        },
        y.current
      );
    } else !v.current && m.current && (m.current(), m.current = null, y.current && (e.registry.unregister(y.current), y.current = null));
    S.useEffect(() => {
      if (!m.current && v.current) {
        const C = (w, R, O) => {
          var E;
          R.defaultMuiPrevented || (E = v.current) == null || E.call(v, w, R, O);
        };
        m.current = i.current.subscribeEvent(s, C, d);
      }
      return y.current && e.registry && (e.registry.unregister(y.current), y.current = null), () => {
        var C;
        (C = m.current) == null || C.call(m), m.current = null;
      };
    }, [i, s, d]);
  };
}
const ete = {
  registry: null
}, Mt = Zee(ete), tte = {
  isFirst: !0
};
function br(e, t, n) {
  Mt(e, t, n, tte);
}
const nte = 0.7, rte = 1.3, ote = {
  compact: nte,
  comfortable: rte,
  standard: 1
}, xg = (e) => e.density, ov = an(xg, (e) => ote[e]), ite = ["id", "value", "formattedValue", "api", "field", "row", "rowNode", "colDef", "cellMode", "isEditable", "tabIndex", "hasFocus", "isValidating", "debounceMs", "isProcessingProps", "onValueChange"], ate = (e) => {
  const {
    classes: t
  } = e;
  return yt({
    root: ["editInputCell"]
  }, Gn, t);
}, ste = Ue(vh, {
  name: "MuiDataGrid",
  slot: "EditInputCell",
  overridesResolver: (e, t) => t.editInputCell
})(({
  theme: e
}) => J({}, e.typography.body2, {
  padding: "1px 0",
  "& input": {
    padding: "0 16px",
    height: "100%"
  }
})), q2 = tr((e, t) => {
  const n = Vt(), {
    id: i,
    value: s,
    field: u,
    colDef: d,
    hasFocus: p,
    debounceMs: m = 200,
    isProcessingProps: v,
    onValueChange: y
  } = e, C = Xt(e, ite), w = In(), R = S.useRef(null), [O, E] = S.useState(s), k = ate(n), L = S.useCallback(async (_) => {
    const P = _.target.value;
    y && await y(_, P);
    const D = w.current.getColumn(u);
    let z = P;
    D.valueParser && (z = D.valueParser(P, w.current.getRow(i), D, w)), E(z), w.current.setEditCellValue({
      id: i,
      field: u,
      value: z,
      debounceMs: m,
      unstable_skipValueParser: !0
    }, _);
  }, [w, m, u, i, y]), F = w.current.unstable_getEditCellMeta(i, u);
  return S.useEffect(() => {
    (F == null ? void 0 : F.changeReason) !== "debouncedSetEditCellValue" && E(s);
  }, [F, s]), Fr(() => {
    p && R.current.focus();
  }, [p]), /* @__PURE__ */ A.jsx(ste, J({
    inputRef: R,
    className: k.root,
    ownerState: n,
    fullWidth: !0,
    type: d.type === "number" ? d.type : "text",
    value: O ?? "",
    onChange: L,
    endAdornment: v ? /* @__PURE__ */ A.jsx(n.slots.loadIcon, {
      fontSize: "small",
      color: "action"
    }) : void 0
  }, C, {
    ref: t
  }));
});
process.env.NODE_ENV !== "production" && (q2.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * GridApi that let you manipulate the grid.
   */
  api: a.object.isRequired,
  /**
   * The mode of the cell.
   */
  cellMode: a.oneOf(["edit", "view"]).isRequired,
  changeReason: a.oneOf(["debouncedSetEditCellValue", "setEditCellValue"]),
  /**
   * The column of the row that the current cell belongs to.
   */
  colDef: a.object.isRequired,
  debounceMs: a.number,
  /**
   * The column field of the cell that triggered the event.
   */
  field: a.string.isRequired,
  /**
   * The cell value formatted with the column valueFormatter.
   */
  formattedValue: a.any,
  /**
   * If true, the cell is the active element.
   */
  hasFocus: a.bool.isRequired,
  /**
   * The grid row id.
   */
  id: a.oneOfType([a.number, a.string]).isRequired,
  /**
   * If true, the cell is editable.
   */
  isEditable: a.bool,
  isProcessingProps: a.bool,
  isValidating: a.bool,
  /**
   * Callback called when the value is changed by the user.
   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
   * @param {Date | null} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.
   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`
   */
  onValueChange: a.func,
  /**
   * The row model of the row that the current cell belongs to.
   */
  row: a.any.isRequired,
  /**
   * The node of the row that the current cell belongs to.
   */
  rowNode: a.object.isRequired,
  /**
   * the tabIndex value.
   */
  tabIndex: a.oneOf([-1, 0]).isRequired,
  /**
   * The cell value.
   * If the column has `valueGetter`, use `params.row` to directly access the fields.
   */
  value: a.any
});
const lte = (e) => /* @__PURE__ */ A.jsx(q2, J({}, e)), sl = (e) => e.rows, zC = an(sl, (e) => e.totalRowCount), ute = an(sl, (e) => e.loading), cte = an(sl, (e) => e.totalTopLevelRowCount), Qs = an(sl, (e) => e.dataRowIdToModelLookup), G_ = an(sl, (e) => e.dataRowIdToIdLookup), Go = an(sl, (e) => e.tree), dte = an(sl, (e) => e.groupsToFetch), fte = an(sl, (e) => e.groupingName), W_ = an(sl, (e) => e.treeDepths), yh = cr(sl, (e) => {
  const t = Object.entries(e.treeDepths);
  return t.length === 0 ? 1 : (t.filter(([, n]) => n > 0).map(([n]) => Number(n)).sort((n, i) => i - n)[0] ?? 0) + 1;
}), zb = an(sl, (e) => e.dataRowIds), pte = an(sl, (e) => e == null ? void 0 : e.additionalRowGroups), iv = cr(pte, (e) => {
  var n, i;
  const t = e == null ? void 0 : e.pinnedRows;
  return {
    bottom: ((n = t == null ? void 0 : t.bottom) == null ? void 0 : n.map((s) => ({
      id: s.id,
      model: s.model ?? {}
    }))) ?? [],
    top: ((i = t == null ? void 0 : t.top) == null ? void 0 : i.map((s) => ({
      id: s.id,
      model: s.model ?? {}
    }))) ?? []
  };
}), K2 = an(iv, (e) => {
  var t, n;
  return (((t = e == null ? void 0 : e.top) == null ? void 0 : t.length) || 0) + (((n = e == null ? void 0 : e.bottom) == null ? void 0 : n.length) || 0);
}), Y2 = (e, t) => t && e.length > 1 ? (process.env.NODE_ENV !== "production" && el(["MUI X: The `sortModel` can only contain a single item when the `disableMultipleColumnsSorting` prop is set to `true`.", "If you are using the community version of the Data Grid, this prop is always `true`."], "error"), [e[0]]) : e, q_ = (e, t) => (n) => J({}, n, {
  sorting: J({}, n.sorting, {
    sortModel: Y2(e, t)
  })
}), hte = (e) => e === "desc", mte = (e, t) => {
  const n = t.current.getColumn(e.field);
  if (!n || e.sort === null)
    return null;
  let i;
  return n.getSortComparator ? i = n.getSortComparator(e.sort) : i = hte(e.sort) ? (...u) => -1 * n.sortComparator(...u) : n.sortComparator, i ? {
    getSortCellParams: (u) => ({
      id: u,
      field: n.field,
      rowNode: Go(t)[u],
      value: t.current.getCellValue(u, n.field),
      api: t.current
    }),
    comparator: i
  } : null;
}, gte = (e, t, n) => e.reduce((i, s, u) => {
  if (i !== 0)
    return i;
  const d = t.params[u], p = n.params[u];
  return i = s.comparator(d.value, p.value, d, p), i;
}, 0), vte = (e, t) => {
  const n = e.map((i) => mte(i, t)).filter((i) => !!i);
  return n.length === 0 ? null : (i) => i.map((s) => ({
    node: s,
    params: n.map((u) => u.getSortCellParams(s.id))
  })).sort((s, u) => gte(n, s, u)).map((s) => s.node.id);
}, K_ = (e, t) => {
  const n = e.indexOf(t);
  return !t || n === -1 || n + 1 === e.length ? e[0] : e[n + 1];
}, JP = (e, t) => e == null && t != null ? -1 : t == null && e != null ? 1 : e == null && t == null ? 0 : null, yte = new Intl.Collator(), bte = (e, t) => {
  const n = JP(e, t);
  return n !== null ? n : typeof e == "string" ? yte.compare(e.toString(), t.toString()) : e - t;
}, X2 = (e, t) => {
  const n = JP(e, t);
  return n !== null ? n : Number(e) - Number(t);
}, Q2 = (e, t) => {
  const n = JP(e, t);
  return n !== null ? n : e > t ? 1 : e < t ? -1 : 0;
}, Cte = ["item", "applyValue", "type", "apiRef", "focusElementRef", "tabIndex", "disabled", "isFilterActive", "clearButton", "InputProps", "variant"];
function ds(e) {
  var P;
  const {
    item: t,
    applyValue: n,
    type: i,
    apiRef: s,
    focusElementRef: u,
    tabIndex: d,
    disabled: p,
    clearButton: m,
    InputProps: v,
    variant: y = "standard"
  } = e, C = Xt(e, Cte), w = ps(), [R, O] = S.useState(jO(t.value)), [E, k] = S.useState(!1), L = Sr(), F = Vt(), _ = S.useCallback((D) => {
    const z = jO(D.target.value);
    O(z), k(!0), w.start(F.filterDebounceMs, () => {
      const K = J({}, t, {
        value: i === "number" && !Number.isNaN(Number(z)) ? Number(z) : z,
        fromInput: L
      });
      n(K), k(!1);
    });
  }, [w, F.filterDebounceMs, t, i, L, n]);
  return S.useEffect(() => {
    (t.fromInput !== L || t.value == null) && O(jO(t.value));
  }, [L, t]), /* @__PURE__ */ A.jsx(F.slots.baseTextField, J({
    id: L,
    label: s.current.getLocaleText("filterPanelInputLabel"),
    placeholder: s.current.getLocaleText("filterPanelInputPlaceholder"),
    value: R ?? "",
    onChange: _,
    variant: y,
    type: i || "text",
    InputProps: J({}, E || m ? {
      endAdornment: E ? /* @__PURE__ */ A.jsx(F.slots.loadIcon, {
        fontSize: "small",
        color: "action"
      }) : m
    } : {}, {
      disabled: p
    }, v, {
      inputProps: J({
        tabIndex: d
      }, v == null ? void 0 : v.inputProps)
    }),
    InputLabelProps: {
      shrink: !0
    },
    inputRef: u
  }, C, (P = F.slotProps) == null ? void 0 : P.baseTextField));
}
function jO(e) {
  if (!(e == null || e === ""))
    return String(e);
}
process.env.NODE_ENV !== "production" && (ds.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  apiRef: a.shape({
    current: a.object.isRequired
  }).isRequired,
  applyValue: a.func.isRequired,
  clearButton: a.node,
  focusElementRef: a.oneOfType([a.func, a.object]),
  /**
   * It is `true` if the filter either has a value or an operator with no value
   * required is selected (for example `isEmpty`)
   */
  isFilterActive: a.bool,
  item: a.shape({
    field: a.string.isRequired,
    id: a.oneOfType([a.number, a.string]),
    operator: a.string.isRequired,
    value: a.any
  }).isRequired
});
function J2(e) {
  return typeof e == "number" && !Number.isNaN(e);
}
function Ste(e) {
  return typeof e == "function";
}
function ZP(e) {
  return typeof e == "object" && e !== null;
}
function wte() {
  try {
    const e = "__some_random_key_you_are_not_going_to_use__";
    return window.localStorage.setItem(e, e), window.localStorage.removeItem(e), !0;
  } catch {
    return !1;
  }
}
function U0(e) {
  return e.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&");
}
const vs = (e, t, n) => Math.max(t, Math.min(n, e));
function Y_(e, t) {
  return Array.from({
    length: t - e
  }).map((n, i) => e + i);
}
function pf(e, t) {
  if (e === t)
    return !0;
  if (e && t && typeof e == "object" && typeof t == "object") {
    if (e.constructor !== t.constructor)
      return !1;
    if (Array.isArray(e)) {
      const s = e.length;
      if (s !== t.length)
        return !1;
      for (let u = 0; u < s; u += 1)
        if (!pf(e[u], t[u]))
          return !1;
      return !0;
    }
    if (e instanceof Map && t instanceof Map) {
      if (e.size !== t.size)
        return !1;
      const s = Array.from(e.entries());
      for (let u = 0; u < s.length; u += 1)
        if (!t.has(s[u][0]))
          return !1;
      for (let u = 0; u < s.length; u += 1) {
        const d = s[u];
        if (!pf(d[1], t.get(d[0])))
          return !1;
      }
      return !0;
    }
    if (e instanceof Set && t instanceof Set) {
      if (e.size !== t.size)
        return !1;
      const s = Array.from(e.entries());
      for (let u = 0; u < s.length; u += 1)
        if (!t.has(s[u][0]))
          return !1;
      return !0;
    }
    if (ArrayBuffer.isView(e) && ArrayBuffer.isView(t)) {
      const s = e.length;
      if (s !== t.length)
        return !1;
      for (let u = 0; u < s; u += 1)
        if (e[u] !== t[u])
          return !1;
      return !0;
    }
    if (e.constructor === RegExp)
      return e.source === t.source && e.flags === t.flags;
    if (e.valueOf !== Object.prototype.valueOf)
      return e.valueOf() === t.valueOf();
    if (e.toString !== Object.prototype.toString)
      return e.toString() === t.toString();
    const n = Object.keys(e), i = n.length;
    if (i !== Object.keys(t).length)
      return !1;
    for (let s = 0; s < i; s += 1)
      if (!Object.prototype.hasOwnProperty.call(t, n[s]))
        return !1;
    for (let s = 0; s < i; s += 1) {
      const u = n[s];
      if (!pf(e[u], t[u]))
        return !1;
    }
    return !0;
  }
  return e !== e && t !== t;
}
function xte(e) {
  return () => {
    let t = e += 1831565813;
    return t = Math.imul(t ^ t >>> 15, t | 1), t ^= t + Math.imul(t ^ t >>> 7, t | 61), ((t ^ t >>> 14) >>> 0) / 4294967296;
  };
}
function Ete(e) {
  const t = xte(e);
  return (n, i) => n + (i - n) * t();
}
function Z2(e) {
  return typeof structuredClone == "function" ? structuredClone(e) : JSON.parse(JSON.stringify(e));
}
const Kp = (e, t) => (n) => {
  e && t(n);
}, Tte = ["item", "applyValue", "type", "apiRef", "focusElementRef", "color", "error", "helperText", "size", "variant"], Rte = ["key"];
function eM(e) {
  const {
    item: t,
    applyValue: n,
    type: i,
    apiRef: s,
    focusElementRef: u,
    color: d,
    error: p,
    helperText: m,
    size: v,
    variant: y = "standard"
  } = e, C = Xt(e, Tte), w = {
    color: d,
    error: p,
    helperText: m,
    size: v,
    variant: y
  }, [R, O] = S.useState(t.value || []), E = Sr(), k = Vt();
  S.useEffect(() => {
    const F = t.value ?? [];
    O(F.map(String));
  }, [t.value]);
  const L = S.useCallback((F, _) => {
    O(_.map(String)), n(J({}, t, {
      value: [..._.map((P) => i === "number" ? Number(P) : P)]
    }));
  }, [n, t, i]);
  return /* @__PURE__ */ A.jsx(LP, J({
    multiple: !0,
    freeSolo: !0,
    options: [],
    filterOptions: (F, _) => {
      const {
        inputValue: P
      } = _;
      return P == null || P === "" ? [] : [P];
    },
    id: E,
    value: R,
    onChange: L,
    renderTags: (F, _) => F.map((P, D) => {
      const z = _({
        index: D
      }), {
        key: K
      } = z, Q = Xt(z, Rte);
      return /* @__PURE__ */ A.jsx(k.slots.baseChip, J({
        variant: "outlined",
        size: "small",
        label: P
      }, Q), K);
    }),
    renderInput: (F) => {
      var _;
      return /* @__PURE__ */ A.jsx(k.slots.baseTextField, J({}, F, {
        label: s.current.getLocaleText("filterPanelInputLabel"),
        placeholder: s.current.getLocaleText("filterPanelInputPlaceholder"),
        InputLabelProps: J({}, F.InputLabelProps, {
          shrink: !0
        }),
        inputRef: u,
        type: i || "text"
      }, w, (_ = k.slotProps) == null ? void 0 : _.baseTextField));
    }
  }, C));
}
process.env.NODE_ENV !== "production" && (eM.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  apiRef: a.shape({
    current: a.object.isRequired
  }).isRequired,
  applyValue: a.func.isRequired,
  focusElementRef: a.oneOfType([a.func, a.object]),
  item: a.shape({
    field: a.string.isRequired,
    id: a.oneOfType([a.number, a.string]),
    operator: a.string.isRequired,
    value: a.any
  }).isRequired,
  type: a.oneOf(["date", "datetime-local", "number", "text"])
});
var qu = /* @__PURE__ */ function(e) {
  return e.Cell = "cell", e.Row = "row", e;
}(qu || {}), vr = /* @__PURE__ */ function(e) {
  return e.Edit = "edit", e.View = "view", e;
}(vr || {}), Yr = /* @__PURE__ */ function(e) {
  return e.Edit = "edit", e.View = "view", e;
}(Yr || {}), xa = /* @__PURE__ */ function(e) {
  return e.And = "and", e.Or = "or", e;
}(xa || {}), Vc = /* @__PURE__ */ function(e) {
  return e.enterKeyDown = "enterKeyDown", e.cellDoubleClick = "cellDoubleClick", e.printableKeyDown = "printableKeyDown", e.deleteKeyDown = "deleteKeyDown", e.pasteKeyDown = "pasteKeyDown", e;
}(Vc || {}), _l = /* @__PURE__ */ function(e) {
  return e.cellFocusOut = "cellFocusOut", e.escapeKeyDown = "escapeKeyDown", e.enterKeyDown = "enterKeyDown", e.tabKeyDown = "tabKeyDown", e.shiftTabKeyDown = "shiftTabKeyDown", e;
}(_l || {}), ef = /* @__PURE__ */ function(e) {
  return e.enterKeyDown = "enterKeyDown", e.cellDoubleClick = "cellDoubleClick", e.printableKeyDown = "printableKeyDown", e.deleteKeyDown = "deleteKeyDown", e;
}(ef || {}), Mu = /* @__PURE__ */ function(e) {
  return e.rowFocusOut = "rowFocusOut", e.escapeKeyDown = "escapeKeyDown", e.enterKeyDown = "enterKeyDown", e.tabKeyDown = "tabKeyDown", e.shiftTabKeyDown = "shiftTabKeyDown", e;
}(Mu || {});
function ez(e) {
  return e.field !== void 0;
}
const tz = {
  filteredRowsLookup: {},
  filteredChildrenCountLookup: {},
  filteredDescendantCountLookup: {}
}, hC = () => ({
  items: [],
  logicOperator: xa.And,
  quickFilterValues: [],
  quickFilterLogicOperator: xa.And
});
function nz(e) {
  return {
    current: e.current.getPublicApi()
  };
}
let tf = /* @__PURE__ */ function(e) {
  return e.LEFT = "left", e.RIGHT = "right", e;
}({});
const G0 = {
  left: [],
  right: []
}, rz = (e) => e.isRtl, Vu = (e) => e.columns, Wc = an(Vu, (e) => e.orderedFields), Zc = an(Vu, (e) => e.lookup), tl = cr(Wc, Zc, (e, t) => e.map((n) => t[n])), Js = an(Vu, (e) => e.columnVisibilityModel), ho = cr(tl, Js, (e, t) => e.filter((n) => t[n.field] !== !1)), av = cr(ho, (e) => e.map((t) => t.field)), oz = (e) => e.pinnedColumns;
cr(oz, Wc, rz, (e, t, n) => iz(e, t, n));
const sv = cr(Vu, oz, av, rz, (e, t, n, i) => {
  const s = iz(t, n, i);
  return {
    left: s.left.map((d) => e.lookup[d]),
    right: s.right.map((d) => e.lookup[d])
  };
});
function iz(e, t, n) {
  var p, m;
  if (!Array.isArray(e.left) && !Array.isArray(e.right) || ((p = e.left) == null ? void 0 : p.length) === 0 && ((m = e.right) == null ? void 0 : m.length) === 0)
    return G0;
  const i = (v, y) => Array.isArray(v) ? v.filter((C) => y.includes(C)) : [], s = i(e.left, t), u = t.filter(
    // Filter out from the remaining columns those columns already pinned to the left
    (v) => !s.includes(v)
  ), d = i(e.right, u);
  return n ? {
    left: d,
    right: s
  } : {
    left: s,
    right: d
  };
}
const Rf = cr(ho, (e) => {
  const t = [];
  let n = 0;
  for (let i = 0; i < e.length; i += 1)
    t.push(n), n += e[i].computedWidth;
  return t;
}), az = cr(tl, (e) => e.filter((t) => t.filterable)), Ote = cr(tl, (e) => e.reduce((t, n) => (n.filterable && (t[n.field] = n), t), {})), kte = cr(tl, (e) => e.some((t) => t.colSpan !== void 0));
let Pb;
function Pte() {
  if (Pb !== void 0)
    return Pb;
  try {
    Pb = new Function("return true")();
  } catch {
    Pb = !1;
  }
  return Pb;
}
const jk = (e, t) => {
  const n = J({}, e);
  if (n.id == null && (n.id = Math.round(Math.random() * 1e5)), n.operator == null) {
    const i = Zc(t)[n.field];
    n.operator = i && i.filterOperators[0].value;
  }
  return n;
}, tM = (e, t, n) => {
  const i = e.items.length > 1;
  let s;
  i && t ? (process.env.NODE_ENV !== "production" && el(["MUI X: The `filterModel` can only contain a single item when the `disableMultipleColumnsFiltering` prop is set to `true`.", "If you are using the community version of the Data Grid, this prop is always `true`."], "error"), s = [e.items[0]]) : s = e.items;
  const u = i && s.some((p) => p.id == null), d = s.some((p) => p.operator == null);
  return process.env.NODE_ENV !== "production" && u && el("MUI X: The `id` field is required on `filterModel.items` when you use multiple filters.", "error"), process.env.NODE_ENV !== "production" && d && el("MUI X: The `operator` field is required on `filterModel.items`, one or more of your filtering item has no `operator` provided.", "error"), d || u ? J({}, e, {
    items: s.map((p) => jk(p, n))
  }) : e.items !== s ? J({}, e, {
    items: s
  }) : e;
}, X_ = (e, t, n) => (i) => J({}, i, {
  filterModel: tM(e, t, n)
}), mC = (e) => typeof e == "string" ? e.normalize("NFD").replace(/[\u0300-\u036f]/g, "") : e, sz = (e, t) => {
  var y;
  if (!e.field || !e.operator)
    return null;
  const n = t.current.getColumn(e.field);
  if (!n)
    return null;
  let i;
  if (n.valueParser) {
    const C = n.valueParser;
    i = Array.isArray(e.value) ? (y = e.value) == null ? void 0 : y.map((w) => C(w, void 0, n, t)) : C(e.value, void 0, n, t);
  } else
    i = e.value;
  const {
    ignoreDiacritics: s
  } = t.current.rootProps;
  s && (i = mC(i));
  const u = J({}, e, {
    value: i
  }), d = n.filterOperators;
  if (!(d != null && d.length))
    throw new Error(`MUI X: No filter operators found for column '${n.field}'.`);
  const p = d.find((C) => C.value === u.operator);
  if (!p)
    throw new Error(`MUI X: No filter operator found for column '${n.field}' and operator value '${u.operator}'.`);
  const m = nz(t), v = p.getApplyFilterFn(u, n);
  return typeof v != "function" ? null : {
    item: u,
    fn: (C) => {
      let w = t.current.getRowValue(C, n);
      return s && (w = mC(w)), v(w, C, n, m);
    }
  };
};
let Q_ = 1;
const Mte = (e, t, n) => {
  const {
    items: i
  } = e, s = i.map((p) => sz(p, t)).filter((p) => !!p);
  if (s.length === 0)
    return null;
  if (n || !Pte())
    return (p, m) => {
      const v = {};
      for (let y = 0; y < s.length; y += 1) {
        const C = s[y];
        (!m || m(C.item.field)) && (v[C.item.id] = C.fn(p));
      }
      return v;
    };
  const u = new Function("appliers", "row", "shouldApplyFilter", `"use strict";
${s.map((p, m) => `const shouldApply${m} = !shouldApplyFilter || shouldApplyFilter(${JSON.stringify(p.item.field)});`).join(`
`)}

const result$$ = {
${s.map((p, m) => `  ${JSON.stringify(String(p.item.id))}: !shouldApply${m} ? false : appliers[${m}].fn(row),`).join(`
`)}
};

return result$$;`.replaceAll("$$", String(Q_)));
  return Q_ += 1, (p, m) => u(s, p, m);
}, lz = (e) => e.quickFilterExcludeHiddenColumns ?? !0, Ite = (e, t) => {
  var p;
  const n = ((p = e.quickFilterValues) == null ? void 0 : p.filter(Boolean)) ?? [];
  if (n.length === 0)
    return null;
  const i = lz(e) ? av(t) : Wc(t), s = [], {
    ignoreDiacritics: u
  } = t.current.rootProps, d = nz(t);
  return i.forEach((m) => {
    const v = t.current.getColumn(m), y = v == null ? void 0 : v.getApplyQuickFilterFn;
    y && s.push({
      column: v,
      appliers: n.map((C) => {
        const w = u ? mC(C) : C;
        return {
          fn: y(w, v, d)
        };
      })
    });
  }), function(v, y) {
    const C = {};
    e: for (let w = 0; w < n.length; w += 1) {
      const R = n[w];
      for (let O = 0; O < s.length; O += 1) {
        const {
          column: E,
          appliers: k
        } = s[O], {
          field: L
        } = E;
        if (y && !y(L))
          continue;
        const F = k[w];
        let _ = t.current.getRowValue(v, E);
        if (F.fn === null)
          continue;
        if (u && (_ = mC(_)), F.fn(_, v, E, d)) {
          C[R] = !0;
          continue e;
        }
      }
      C[R] = !1;
    }
    return C;
  };
}, Dte = (e, t, n) => {
  const i = Mte(e, t, n), s = Ite(e, t);
  return function(d, p, m) {
    m.passingFilterItems = (i == null ? void 0 : i(d, p)) ?? null, m.passingQuickFilterValues = (s == null ? void 0 : s(d, p)) ?? null;
  };
}, J_ = (e) => e != null, Nte = (e, t, n) => (e.cleanedFilterItems || (e.cleanedFilterItems = n.filter((i) => sz(i, t) !== null)), e.cleanedFilterItems), Lte = (e, t, n, i, s) => {
  const u = Nte(s, i, n.items), d = e.filter(J_), p = t.filter(J_);
  if (d.length > 0) {
    const m = (y) => d.some((C) => C[y.id]);
    if ((n.logicOperator ?? hC().logicOperator) === xa.And) {
      if (!u.every(m))
        return !1;
    } else if (!u.some(m))
      return !1;
  }
  if (p.length > 0 && n.quickFilterValues != null) {
    const m = (y) => p.some((C) => C[y]);
    if ((n.quickFilterLogicOperator ?? hC().quickFilterLogicOperator) === xa.And) {
      if (!n.quickFilterValues.every(m))
        return !1;
    } else if (!n.quickFilterValues.some(m))
      return !1;
  }
  return !0;
}, Fte = (e) => {
  if (!e)
    return null;
  const t = new RegExp(U0(e), "i");
  return (n, i, s, u) => {
    let d = u.current.getRowFormattedValue(i, s);
    return u.current.ignoreDiacritics && (d = mC(d)), d != null ? t.test(d.toString()) : !1;
  };
}, Z_ = (e, t) => (n) => {
  if (!n.value)
    return null;
  const i = e ? n.value : n.value.trim(), s = new RegExp(U0(i), "i");
  return (u) => {
    if (u == null)
      return t;
    const d = s.test(String(u));
    return t ? !d : d;
  };
}, eA = (e, t) => (n) => {
  if (!n.value)
    return null;
  const i = e ? n.value : n.value.trim(), s = new Intl.Collator(void 0, {
    sensitivity: "base",
    usage: "search"
  });
  return (u) => {
    if (u == null)
      return t;
    const d = s.compare(i, u.toString()) === 0;
    return t ? !d : d;
  };
}, tA = (e) => () => (t) => {
  const n = t === "" || t == null;
  return e ? !n : n;
}, _te = (e = !1) => [{
  value: "contains",
  getApplyFilterFn: Z_(e, !1),
  InputComponent: ds
}, {
  value: "doesNotContain",
  getApplyFilterFn: Z_(e, !0),
  InputComponent: ds
}, {
  value: "equals",
  getApplyFilterFn: eA(e, !1),
  InputComponent: ds
}, {
  value: "doesNotEqual",
  getApplyFilterFn: eA(e, !0),
  InputComponent: ds
}, {
  value: "startsWith",
  getApplyFilterFn: (t) => {
    if (!t.value)
      return null;
    const n = e ? t.value : t.value.trim(), i = new RegExp(`^${U0(n)}.*$`, "i");
    return (s) => s != null ? i.test(s.toString()) : !1;
  },
  InputComponent: ds
}, {
  value: "endsWith",
  getApplyFilterFn: (t) => {
    if (!t.value)
      return null;
    const n = e ? t.value : t.value.trim(), i = new RegExp(`.*${U0(n)}$`, "i");
    return (s) => s != null ? i.test(s.toString()) : !1;
  },
  InputComponent: ds
}, {
  value: "isEmpty",
  getApplyFilterFn: tA(!1),
  requiresFilterValue: !1
}, {
  value: "isNotEmpty",
  getApplyFilterFn: tA(!0),
  requiresFilterValue: !1
}, {
  value: "isAnyOf",
  getApplyFilterFn: (t) => {
    if (!Array.isArray(t.value) || t.value.length === 0)
      return null;
    const n = e ? t.value : t.value.map((s) => s.trim()), i = new Intl.Collator(void 0, {
      sensitivity: "base",
      usage: "search"
    });
    return (s) => s != null ? n.some((u) => i.compare(u, s.toString() || "") === 0) : !1;
  },
  InputComponent: eM
}], Vl = {
  width: 100,
  minWidth: 50,
  maxWidth: 1 / 0,
  hideable: !0,
  sortable: !0,
  resizable: !0,
  filterable: !0,
  groupable: !0,
  pinnable: !0,
  // @ts-ignore
  aggregable: !0,
  editable: !1,
  sortComparator: bte,
  type: "string",
  align: "left",
  filterOperators: _te(),
  renderEditCell: lte,
  getApplyQuickFilterFn: Fte
}, Ate = ["open", "target", "onClose", "children", "position", "className", "onExited"], $te = (e) => {
  const {
    classes: t
  } = e;
  return yt({
    root: ["menu"]
  }, Gn, t);
}, jte = Ue(Tf, {
  name: "MuiDataGrid",
  slot: "Menu",
  overridesResolver: (e, t) => t.menu
})(({
  theme: e
}) => ({
  zIndex: e.zIndex.modal,
  [`& .${ae.menuList}`]: {
    outline: 0
  }
})), zte = {
  "bottom-start": "top left",
  "bottom-end": "top right"
};
function FE(e) {
  var E;
  const {
    open: t,
    target: n,
    onClose: i,
    children: s,
    position: u,
    className: d,
    onExited: p
  } = e, m = Xt(e, Ate), v = In(), y = Vt(), C = $te(y), w = S.useRef(null);
  Fr(() => {
    var k, L;
    t ? w.current = document.activeElement instanceof HTMLElement ? document.activeElement : null : ((L = (k = w.current) == null ? void 0 : k.focus) == null || L.call(k), w.current = null);
  }, [t]), S.useEffect(() => {
    const k = t ? "menuOpen" : "menuClose";
    v.current.publishEvent(k, {
      target: n
    });
  }, [v, t, n]);
  const R = (k) => (L) => {
    k && k(), p && p(L);
  }, O = (k) => {
    k.target && (n === k.target || n != null && n.contains(k.target)) || i(k);
  };
  return /* @__PURE__ */ A.jsx(jte, J({
    as: y.slots.basePopper,
    className: nt(C.root, d),
    ownerState: y,
    open: t,
    anchorEl: n,
    transition: !0,
    placement: u
  }, m, (E = y.slotProps) == null ? void 0 : E.basePopper, {
    children: ({
      TransitionProps: k,
      placement: L
    }) => /* @__PURE__ */ A.jsx(aC, {
      onClickAway: O,
      mouseEvent: "onMouseDown",
      children: /* @__PURE__ */ A.jsx(Wg, J({}, k, {
        style: {
          transformOrigin: zte[L]
        },
        onExited: R(k == null ? void 0 : k.onExited),
        children: /* @__PURE__ */ A.jsx(bs, {
          children: s
        })
      }))
    })
  }));
}
process.env.NODE_ENV !== "production" && (FE.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  children: a.node,
  onClose: a.func.isRequired,
  onExited: a.func,
  /**
   * If `true`, the component is shown.
   */
  open: a.bool.isRequired,
  position: a.oneOf(["bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  target: Ul
});
const Hte = ["api", "colDef", "id", "hasFocus", "isEditable", "field", "value", "formattedValue", "row", "rowNode", "cellMode", "tabIndex", "position", "focusElementRef"], Vte = (e) => typeof e.getActions == "function";
function uz(e) {
  var W;
  const {
    colDef: t,
    id: n,
    hasFocus: i,
    tabIndex: s,
    position: u = "bottom-end",
    focusElementRef: d
  } = e, p = Xt(e, Hte), [m, v] = S.useState(-1), [y, C] = S.useState(!1), w = In(), R = S.useRef(null), O = S.useRef(null), E = S.useRef(!1), k = S.useRef({}), L = ji(), F = Sr(), _ = Sr(), P = Vt();
  if (!Vte(t))
    throw new Error("MUI X: Missing the `getActions` property in the `GridColDef`.");
  const D = t.getActions(w.current.getRowParams(n)), z = D.filter((q) => !q.props.showInMenu), K = D.filter((q) => q.props.showInMenu), Q = z.length + (K.length ? 1 : 0);
  S.useLayoutEffect(() => {
    i || Object.entries(k.current).forEach(([q, ne]) => {
      ne == null || ne.stop({}, () => {
        delete k.current[q];
      });
    });
  }, [i]), S.useEffect(() => {
    if (m < 0 || !R.current || m >= R.current.children.length)
      return;
    R.current.children[m].focus({
      preventScroll: !0
    });
  }, [m]), S.useEffect(() => {
    i || (v(-1), E.current = !1);
  }, [i]), S.useImperativeHandle(d, () => ({
    focus() {
      if (!E.current) {
        const q = D.findIndex((ne) => !ne.props.disabled);
        v(q);
      }
    }
  }), [D]), S.useEffect(() => {
    m >= Q && v(Q - 1);
  }, [m, Q]);
  const H = () => {
    C(!0), v(Q - 1), E.current = !0;
  }, I = () => {
    C(!1);
  }, U = (q) => {
    q.stopPropagation(), q.preventDefault(), y ? I() : H();
  }, G = (q) => (ne) => {
    k.current[q] = ne;
  }, Y = (q, ne) => (re) => {
    v(q), E.current = !0, ne && ne(re);
  }, te = (q) => {
    if (Q <= 1)
      return;
    const ne = (X, j) => {
      var ce;
      if (X < 0 || X > D.length)
        return X;
      const fe = (j === "left" ? -1 : 1) * (L ? -1 : 1);
      return (ce = D[X + fe]) != null && ce.props.disabled ? ne(X + fe, j) : X + fe;
    };
    let re = m;
    q.key === "ArrowRight" ? re = ne(m, "right") : q.key === "ArrowLeft" && (re = ne(m, "left")), !(re < 0 || re >= Q) && re !== m && (q.preventDefault(), q.stopPropagation(), v(re));
  }, B = (q) => {
    q.key === "Tab" && q.preventDefault(), ["Tab", "Escape"].includes(q.key) && I();
  };
  return /* @__PURE__ */ A.jsxs("div", J({
    role: "menu",
    ref: R,
    tabIndex: -1,
    className: ae.actionsCell,
    onKeyDown: te
  }, p, {
    children: [z.map((q, ne) => /* @__PURE__ */ S.cloneElement(q, {
      key: ne,
      touchRippleRef: G(ne),
      onClick: Y(ne, q.props.onClick),
      tabIndex: m === ne ? s : -1
    })), K.length > 0 && _ && /* @__PURE__ */ A.jsx(P.slots.baseIconButton, J({
      ref: O,
      id: _,
      "aria-label": w.current.getLocaleText("actionsCellMore"),
      "aria-haspopup": "menu",
      "aria-expanded": y,
      "aria-controls": y ? F : void 0,
      role: "menuitem",
      size: "small",
      onClick: U,
      touchRippleRef: G(_),
      tabIndex: m === z.length ? s : -1
    }, (W = P.slotProps) == null ? void 0 : W.baseIconButton, {
      children: /* @__PURE__ */ A.jsx(P.slots.moreActionsIcon, {
        fontSize: "small"
      })
    })), K.length > 0 && /* @__PURE__ */ A.jsx(FE, {
      open: y,
      target: O.current,
      position: u,
      onClose: I,
      children: /* @__PURE__ */ A.jsx(NC, {
        id: F,
        className: ae.menuList,
        onKeyDown: B,
        "aria-labelledby": _,
        variant: "menu",
        autoFocusItem: !0,
        children: K.map((q, ne) => /* @__PURE__ */ S.cloneElement(q, {
          key: ne,
          closeMenu: I
        }))
      })
    })]
  }));
}
process.env.NODE_ENV !== "production" && (uz.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  api: a.object,
  /**
   * The mode of the cell.
   */
  cellMode: a.oneOf(["edit", "view"]).isRequired,
  /**
   * The column of the row that the current cell belongs to.
   */
  colDef: a.object.isRequired,
  /**
   * The column field of the cell that triggered the event.
   */
  field: a.string.isRequired,
  /**
   * A ref allowing to set imperative focus.
   * It can be passed to the element that should receive focus.
   * @ignore - do not document.
   */
  focusElementRef: a.oneOfType([a.func, a.shape({
    current: a.shape({
      focus: a.func.isRequired
    })
  })]),
  /**
   * The cell value formatted with the column valueFormatter.
   */
  formattedValue: a.any,
  /**
   * If true, the cell is the active element.
   */
  hasFocus: a.bool.isRequired,
  /**
   * The grid row id.
   */
  id: a.oneOfType([a.number, a.string]).isRequired,
  /**
   * If true, the cell is editable.
   */
  isEditable: a.bool,
  position: a.oneOf(["bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  /**
   * The row model of the row that the current cell belongs to.
   */
  row: a.any.isRequired,
  /**
   * The node of the row that the current cell belongs to.
   */
  rowNode: a.object.isRequired,
  /**
   * the tabIndex value.
   */
  tabIndex: a.oneOf([-1, 0]).isRequired,
  /**
   * The cell value.
   * If the column has `valueGetter`, use `params.row` to directly access the fields.
   */
  value: a.any
});
const Bte = (e) => /* @__PURE__ */ A.jsx(uz, J({}, e)), _E = "actions", Ute = J({}, Vl, {
  sortable: !1,
  filterable: !1,
  // @ts-ignore
  aggregable: !1,
  width: 100,
  display: "flex",
  align: "center",
  headerAlign: "center",
  headerName: "",
  disableColumnMenu: !0,
  disableExport: !0,
  renderCell: Bte,
  getApplyQuickFilterFn: void 0
}), $i = "auto-generated-group-node-root", Yg = Symbol("mui.id_autogenerated"), Gte = () => ({
  type: "group",
  id: $i,
  depth: -1,
  groupingField: null,
  groupingKey: null,
  isAutoGenerated: !0,
  children: [],
  childrenFromPath: {},
  childrenExpanded: !0,
  parent: null
});
function Wte(e, t, n = "A row was provided without id in the rows prop:") {
  if (e == null)
    throw new Error(["MUI X: The Data Grid component requires all rows to have a unique `id` property.", "Alternatively, you can use the `getRowId` prop to specify a custom id for each row.", n, JSON.stringify(t)].join(`
`));
}
const AE = (e, t, n) => {
  const i = t ? t(e) : e.id;
  return Wte(i, e, n), i;
}, m0 = ({
  rows: e,
  getRowId: t,
  loading: n,
  rowCount: i
}) => {
  const s = {
    type: "full",
    rows: []
  }, u = {}, d = {};
  for (let p = 0; p < e.length; p += 1) {
    const m = e[p], v = AE(m, t);
    u[v] = m, d[v] = v, s.rows.push(v);
  }
  return {
    rowsBeforePartialUpdates: e,
    loadingPropBeforePartialUpdates: n,
    rowCountPropBeforePartialUpdates: i,
    updates: s,
    dataRowIdToIdLookup: d,
    dataRowIdToModelLookup: u
  };
}, cz = ({
  tree: e,
  rowCountProp: t = 0
}) => {
  const n = e[$i];
  return Math.max(t, n.children.length + (n.footerId == null ? 0 : 1));
}, dz = ({
  apiRef: e,
  rowCountProp: t = 0,
  loadingProp: n,
  previousTree: i,
  previousTreeDepths: s,
  previousGroupsToFetch: u
}) => {
  const d = e.current.caches.rows, {
    tree: p,
    treeDepths: m,
    dataRowIds: v,
    groupingName: y,
    groupsToFetch: C = []
  } = e.current.applyStrategyProcessor("rowTreeCreation", {
    previousTree: i,
    previousTreeDepths: s,
    updates: d.updates,
    dataRowIdToIdLookup: d.dataRowIdToIdLookup,
    dataRowIdToModelLookup: d.dataRowIdToModelLookup,
    previousGroupsToFetch: u
  }), w = e.current.unstable_applyPipeProcessors("hydrateRows", {
    tree: p,
    treeDepths: m,
    dataRowIdToIdLookup: d.dataRowIdToIdLookup,
    dataRowIds: v,
    dataRowIdToModelLookup: d.dataRowIdToModelLookup
  });
  return e.current.caches.rows.updates = {
    type: "partial",
    actions: {
      insert: [],
      modify: [],
      remove: []
    },
    idToActionLookup: {}
  }, J({}, w, {
    totalRowCount: Math.max(t, w.dataRowIds.length),
    totalTopLevelRowCount: cz({
      tree: w.tree,
      rowCountProp: t
    }),
    groupingName: y,
    loading: n,
    groupsToFetch: C
  });
}, Xg = (e) => e.type === "skeletonRow" || e.type === "footer" || e.type === "group" && e.isAutoGenerated || e.type === "pinnedRow" && e.isAutoGenerated, nM = (e, t, n) => {
  const i = e[t];
  if (i.type !== "group")
    return [];
  const s = [];
  for (let u = 0; u < i.children.length; u += 1) {
    const d = i.children[u];
    (!n || !Xg(e[d])) && s.push(d);
    const p = nM(e, d, n);
    for (let m = 0; m < p.length; m += 1)
      s.push(p[m]);
  }
  return !n && i.footerId != null && s.push(i.footerId), s;
}, nA = ({
  previousCache: e,
  getRowId: t,
  updates: n,
  groupKeys: i
}) => {
  if (e.updates.type === "full")
    throw new Error("MUI X: Unable to prepare a partial update if a full update is not applied yet.");
  const s = /* @__PURE__ */ new Map();
  n.forEach((y) => {
    const C = AE(y, t, "A row was provided without id when calling updateRows():");
    s.has(C) ? s.set(C, J({}, s.get(C), y)) : s.set(C, y);
  });
  const u = {
    type: "partial",
    actions: {
      insert: [...e.updates.actions.insert ?? []],
      modify: [...e.updates.actions.modify ?? []],
      remove: [...e.updates.actions.remove ?? []]
    },
    idToActionLookup: J({}, e.updates.idToActionLookup),
    groupKeys: i
  }, d = J({}, e.dataRowIdToModelLookup), p = J({}, e.dataRowIdToIdLookup), m = {
    insert: {},
    modify: {},
    remove: {}
  };
  s.forEach((y, C) => {
    const w = u.idToActionLookup[C];
    if (y._action === "delete") {
      if (w === "remove" || !d[C])
        return;
      w != null && (m[w][C] = !0), u.actions.remove.push(C), delete d[C], delete p[C];
      return;
    }
    const R = d[C];
    if (R) {
      w === "remove" ? (m.remove[C] = !0, u.actions.modify.push(C)) : w == null && u.actions.modify.push(C), d[C] = J({}, R, y);
      return;
    }
    w === "remove" ? (m.remove[C] = !0, u.actions.insert.push(C)) : w == null && u.actions.insert.push(C), d[C] = y, p[C] = C;
  });
  const v = Object.keys(m);
  for (let y = 0; y < v.length; y += 1) {
    const C = v[y], w = m[C];
    Object.keys(w).length > 0 && (u.actions[C] = u.actions[C].filter((R) => !w[R]));
  }
  return {
    dataRowIdToModelLookup: d,
    dataRowIdToIdLookup: p,
    updates: u,
    rowsBeforePartialUpdates: e.rowsBeforePartialUpdates,
    loadingPropBeforePartialUpdates: e.loadingPropBeforePartialUpdates,
    rowCountPropBeforePartialUpdates: e.rowCountPropBeforePartialUpdates
  };
}, fz = "var(--DataGrid-overlayHeight, calc(var(--height) * 2))";
function rA(e, t, n) {
  const i = [];
  return t.forEach((s) => {
    const u = AE(s, n, "A row was provided without id when calling updateRows():"), d = e.current.getRowNode(u);
    if ((d == null ? void 0 : d.type) === "pinnedRow") {
      const p = e.current.caches.pinnedRows, m = p.idLookup[u];
      m && (p.idLookup[u] = J({}, m, s));
    } else
      i.push(s);
  }), i;
}
let oA = !1;
const pz = (e, t, n) => typeof e == "number" && e > 0 ? e : (process.env.NODE_ENV !== "production" && !oA && typeof e < "u" && e !== null && (console.warn(n), oA = !0), t), qte = ["MUI X: The `rowHeight` prop should be a number greater than 0.", "The default value will be used instead."].join(`
`), Kte = ["MUI X: The `getRowHeight` prop should return a number greater than 0 or 'auto'.", "The default value will be used instead."].join(`
`), Yte = "__tree_data_group__", hz = "__row_group_by_columns_group__", $E = "__detail_panel_toggle__";
let jn = /* @__PURE__ */ function(e) {
  return e[e.NONE = 0] = "NONE", e[e.LEFT = 1] = "LEFT", e[e.RIGHT = 2] = "RIGHT", e[e.VIRTUAL = 3] = "VIRTUAL", e;
}({});
const Xte = ["id", "value", "formattedValue", "api", "field", "row", "rowNode", "colDef", "cellMode", "isEditable", "hasFocus", "tabIndex", "hideDescendantCount"], Qte = (e) => {
  const {
    classes: t
  } = e;
  return yt({
    root: ["booleanCell"]
  }, Gn, t);
};
function mz(e) {
  const {
    value: t,
    rowNode: n
  } = e, i = Xt(e, Xte), s = In(), u = Vt(), d = {
    classes: u.classes
  }, p = Qte(d), v = (
    // @ts-expect-error - Access tree data prop
    tt(s, yh) > 0 && n.type === "group" && u.treeData === !1
  ), y = S.useMemo(() => t ? u.slots.booleanCellTrueIcon : u.slots.booleanCellFalseIcon, [u.slots.booleanCellFalseIcon, u.slots.booleanCellTrueIcon, t]);
  return v && t === void 0 ? null : /* @__PURE__ */ A.jsx(y, J({
    fontSize: "small",
    className: p.root,
    titleAccess: s.current.getLocaleText(t ? "booleanCellTrueLabel" : "booleanCellFalseLabel"),
    "data-value": !!t
  }, i));
}
process.env.NODE_ENV !== "production" && (mz.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * GridApi that let you manipulate the grid.
   */
  api: a.object.isRequired,
  /**
   * The mode of the cell.
   */
  cellMode: a.oneOf(["edit", "view"]).isRequired,
  /**
   * The column of the row that the current cell belongs to.
   */
  colDef: a.object.isRequired,
  /**
   * The column field of the cell that triggered the event.
   */
  field: a.string.isRequired,
  /**
   * A ref allowing to set imperative focus.
   * It can be passed to the element that should receive focus.
   * @ignore - do not document.
   */
  focusElementRef: a.oneOfType([a.func, a.shape({
    current: a.shape({
      focus: a.func.isRequired
    })
  })]),
  /**
   * The cell value formatted with the column valueFormatter.
   */
  formattedValue: a.any,
  /**
   * If true, the cell is the active element.
   */
  hasFocus: a.bool.isRequired,
  hideDescendantCount: a.bool,
  /**
   * The grid row id.
   */
  id: a.oneOfType([a.number, a.string]).isRequired,
  /**
   * If true, the cell is editable.
   */
  isEditable: a.bool,
  /**
   * The row model of the row that the current cell belongs to.
   */
  row: a.any.isRequired,
  /**
   * The node of the row that the current cell belongs to.
   */
  rowNode: a.object.isRequired,
  /**
   * the tabIndex value.
   */
  tabIndex: a.oneOf([-1, 0]).isRequired,
  /**
   * The cell value.
   * If the column has `valueGetter`, use `params.row` to directly access the fields.
   */
  value: a.any
});
const Jte = /* @__PURE__ */ S.memo(mz), Zte = (e) => e.field !== hz && Xg(e.rowNode) ? "" : /* @__PURE__ */ A.jsx(Jte, J({}, e)), ene = ["id", "value", "formattedValue", "api", "field", "row", "rowNode", "colDef", "cellMode", "isEditable", "tabIndex", "className", "hasFocus", "isValidating", "isProcessingProps", "error", "onValueChange"], tne = (e) => {
  const {
    classes: t
  } = e;
  return yt({
    root: ["editBooleanCell"]
  }, Gn, t);
};
function gz(e) {
  var L;
  const {
    id: t,
    value: n,
    field: i,
    className: s,
    hasFocus: u,
    onValueChange: d
  } = e, p = Xt(e, ene), m = In(), v = S.useRef(null), y = Sr(), [C, w] = S.useState(n), R = Vt(), O = {
    classes: R.classes
  }, E = tne(O), k = S.useCallback(async (F) => {
    const _ = F.target.checked;
    d && await d(F, _), w(_), await m.current.setEditCellValue({
      id: t,
      field: i,
      value: _
    }, F);
  }, [m, i, t, d]);
  return S.useEffect(() => {
    w(n);
  }, [n]), Fr(() => {
    u && v.current.focus();
  }, [u]), /* @__PURE__ */ A.jsx("label", J({
    htmlFor: y,
    className: nt(E.root, s)
  }, p, {
    children: /* @__PURE__ */ A.jsx(R.slots.baseCheckbox, J({
      id: y,
      inputRef: v,
      checked: !!C,
      onChange: k,
      size: "small"
    }, (L = R.slotProps) == null ? void 0 : L.baseCheckbox))
  }));
}
process.env.NODE_ENV !== "production" && (gz.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * GridApi that let you manipulate the grid.
   */
  api: a.object.isRequired,
  /**
   * The mode of the cell.
   */
  cellMode: a.oneOf(["edit", "view"]).isRequired,
  changeReason: a.oneOf(["debouncedSetEditCellValue", "setEditCellValue"]),
  /**
   * The column of the row that the current cell belongs to.
   */
  colDef: a.object.isRequired,
  /**
   * The column field of the cell that triggered the event.
   */
  field: a.string.isRequired,
  /**
   * The cell value formatted with the column valueFormatter.
   */
  formattedValue: a.any,
  /**
   * If true, the cell is the active element.
   */
  hasFocus: a.bool.isRequired,
  /**
   * The grid row id.
   */
  id: a.oneOfType([a.number, a.string]).isRequired,
  /**
   * If true, the cell is editable.
   */
  isEditable: a.bool,
  isProcessingProps: a.bool,
  isValidating: a.bool,
  /**
   * Callback called when the value is changed by the user.
   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
   * @param {boolean} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.
   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`
   */
  onValueChange: a.func,
  /**
   * The row model of the row that the current cell belongs to.
   */
  row: a.any.isRequired,
  /**
   * The node of the row that the current cell belongs to.
   */
  rowNode: a.object.isRequired,
  /**
   * the tabIndex value.
   */
  tabIndex: a.oneOf([-1, 0]).isRequired,
  /**
   * The cell value.
   * If the column has `valueGetter`, use `params.row` to directly access the fields.
   */
  value: a.any
});
const nne = (e) => /* @__PURE__ */ A.jsx(gz, J({}, e)), rne = ["item", "applyValue", "apiRef", "focusElementRef", "isFilterActive", "clearButton", "tabIndex", "label", "variant", "InputLabelProps"], g0 = (e) => {
  if (String(e).toLowerCase() === "true")
    return !0;
  if (String(e).toLowerCase() === "false")
    return !1;
}, one = Ue("div")({
  display: "flex",
  alignItems: "center",
  width: "100%",
  "& button": {
    margin: "auto 0px 5px 5px"
  }
});
function vz(e) {
  var P, D, z;
  const {
    item: t,
    applyValue: n,
    apiRef: i,
    focusElementRef: s,
    clearButton: u,
    tabIndex: d,
    label: p,
    variant: m = "standard"
  } = e, v = Xt(e, rne), [y, C] = S.useState(g0(t.value)), w = Vt(), R = Sr(), O = Sr(), E = ((P = w.slotProps) == null ? void 0 : P.baseSelect) || {}, k = E.native ?? !1, L = ((D = w.slotProps) == null ? void 0 : D.baseSelectOption) || {}, F = S.useCallback((K) => {
    const Q = g0(K.target.value);
    C(Q), n(J({}, t, {
      value: Q
    }));
  }, [n, t]);
  S.useEffect(() => {
    C(g0(t.value));
  }, [t.value]);
  const _ = p ?? i.current.getLocaleText("filterPanelInputLabel");
  return /* @__PURE__ */ A.jsxs(one, {
    children: [/* @__PURE__ */ A.jsxs(w.slots.baseFormControl, {
      fullWidth: !0,
      children: [/* @__PURE__ */ A.jsx(w.slots.baseInputLabel, J({}, (z = w.slotProps) == null ? void 0 : z.baseInputLabel, {
        id: R,
        shrink: !0,
        variant: m,
        children: _
      })), /* @__PURE__ */ A.jsxs(w.slots.baseSelect, J({
        labelId: R,
        id: O,
        label: _,
        value: y === void 0 ? "" : String(y),
        onChange: F,
        variant: m,
        notched: m === "outlined" ? !0 : void 0,
        native: k,
        displayEmpty: !0,
        inputProps: {
          ref: s,
          tabIndex: d
        }
      }, v, E, {
        children: [/* @__PURE__ */ A.jsx(w.slots.baseSelectOption, J({}, L, {
          native: k,
          value: "",
          children: i.current.getLocaleText("filterValueAny")
        })), /* @__PURE__ */ A.jsx(w.slots.baseSelectOption, J({}, L, {
          native: k,
          value: "true",
          children: i.current.getLocaleText("filterValueTrue")
        })), /* @__PURE__ */ A.jsx(w.slots.baseSelectOption, J({}, L, {
          native: k,
          value: "false",
          children: i.current.getLocaleText("filterValueFalse")
        }))]
      }))]
    }), u]
  });
}
process.env.NODE_ENV !== "production" && (vz.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  apiRef: a.shape({
    current: a.object.isRequired
  }).isRequired,
  applyValue: a.func.isRequired,
  clearButton: a.node,
  focusElementRef: Ea,
  /**
   * It is `true` if the filter either has a value or an operator with no value
   * required is selected (for example `isEmpty`)
   */
  isFilterActive: a.bool,
  item: a.shape({
    field: a.string.isRequired,
    id: a.oneOfType([a.number, a.string]),
    operator: a.string.isRequired,
    value: a.any
  }).isRequired
});
const ine = () => [{
  value: "is",
  getApplyFilterFn: (e) => {
    const t = g0(e.value);
    return t === void 0 ? null : (n) => !!n === t;
  },
  InputComponent: vz
}], ane = (e, t, n, i) => e ? i.current.getLocaleText("booleanCellTrueLabel") : i.current.getLocaleText("booleanCellFalseLabel"), sne = (e) => {
  switch (e.toLowerCase().trim()) {
    case "true":
    case "yes":
    case "1":
      return !0;
    case "false":
    case "no":
    case "0":
    case "null":
    case "undefined":
      return !1;
    default:
      return;
  }
}, yz = J({}, Vl, {
  type: "boolean",
  display: "flex",
  align: "center",
  headerAlign: "center",
  renderCell: Zte,
  renderEditCell: nne,
  sortComparator: X2,
  valueFormatter: ane,
  filterOperators: ine(),
  getApplyQuickFilterFn: void 0,
  // @ts-ignore
  aggregable: !1,
  // @ts-ignore
  pastedValueParser: (e) => sne(e)
}), bz = (e) => e.sorting, lv = an(bz, (e) => e.sortedRows), rM = cr(lv, Qs, Go, (e, t, n) => e.reduce((i, s) => {
  const u = t[s];
  if (u)
    i.push({
      id: s,
      model: u
    });
  else {
    const d = n[s];
    d && Xg(d) && i.push({
      id: s,
      model: {
        [Yg]: s
      }
    });
  }
  return i;
}, [])), Al = an(bz, (e) => e.sortModel), lne = cr(Al, (e) => e.reduce((n, i, s) => (n[i.field] = {
  sortDirection: i.sort,
  sortIndex: e.length > 1 ? s + 1 : void 0
}, n), {}));
cr(lv, (e) => e.reduce((t, n, i) => (t[n] = i, t), /* @__PURE__ */ Object.create(null)));
const jE = (e) => e.filter, vi = an(jE, (e) => e.filterModel), une = an(vi, (e) => e.quickFilterValues), cne = (e) => e.visibleRowsLookup, uv = an(jE, (e) => e.filteredRowsLookup);
an(jE, (e) => e.filteredChildrenCountLookup);
an(jE, (e) => e.filteredDescendantCountLookup);
const Of = cr(cne, rM, yh, vi, une, (e, t, n, i, s) => n < 2 && !i.items.length && !(s != null && s.length) ? t : t.filter((u) => e[u.id] !== !1)), Mg = cr(Of, (e) => e.map((t) => t.id)), Cz = cr(uv, rM, (e, t) => t.filter((n) => e[n.id] !== !1)), Sz = cr(Cz, (e) => e.map((t) => t.id));
cr(Mg, Go, (e, t) => {
  const n = {};
  let i = 0;
  return e.reduce((s, u) => {
    const d = t[u];
    return n[d.depth] || (n[d.depth] = 0), d.depth > i && (n[d.depth] = 0), i = d.depth, n[d.depth] += 1, s[u] = n[d.depth], s;
  }, {});
});
const wz = cr(Of, Go, yh, (e, t, n) => n < 2 ? e : e.filter((i) => {
  var s;
  return ((s = t[i.id]) == null ? void 0 : s.depth) === 0;
})), oM = an(Of, (e) => e.length), iM = an(wz, (e) => e.length), dne = an(Cz, (e) => e.length);
an(dne, iM, (e, t) => e - t);
const xz = cr(vi, Zc, (e, t) => {
  var n;
  return (n = e.items) == null ? void 0 : n.filter((i) => {
    var d, p;
    if (!i.field)
      return !1;
    const s = t[i.field];
    if (!(s != null && s.filterOperators) || ((d = s == null ? void 0 : s.filterOperators) == null ? void 0 : d.length) === 0)
      return !1;
    const u = s.filterOperators.find((m) => m.value === i.operator);
    return u ? !u.InputComponent || i.value != null && ((p = i.value) == null ? void 0 : p.toString()) !== "" : !1;
  });
}), fne = cr(xz, (e) => e.reduce((n, i) => (n[i.field] ? n[i.field].push(i) : n[i.field] = [i], n), {})), us = (e) => e.rowSelection, pne = an(us, (e) => e.length), hne = cr(us, Qs, (e, t) => new Map(e.map((n) => [n, t[n]]))), hf = cr(us, (e) => e.reduce((t, n) => (t[n] = n, t), {}));
function Ez(e, t) {
  var m;
  const n = Go(e), i = lv(e), s = uv(e), u = n[t];
  if (!u || u.type !== "group")
    return [];
  const d = [], p = i.findIndex((v) => v === t) + 1;
  for (let v = p; v < i.length && ((m = n[i[v]]) == null ? void 0 : m.depth) > u.depth; v += 1) {
    const y = i[v];
    s[y] !== !1 && e.current.isRowSelectable(y) && d.push(y);
  }
  return d;
}
function mne(e, t) {
  return an(Go, lv, uv, hf, (n, i, s, u) => {
    var y;
    const d = n[e];
    if (!d || d.type !== "group")
      return {
        isIndeterminate: !1,
        isChecked: u[e] === e
      };
    if (u[e] === e)
      return {
        isIndeterminate: !1,
        isChecked: !0
      };
    let p = 0, m = 0;
    const v = i.findIndex((C) => C === e) + 1;
    for (let C = v; C < i.length && ((y = n[i[C]]) == null ? void 0 : y.depth) > d.depth; C += 1) {
      const w = i[C];
      s[w] !== !1 && (p += 1, u[w] !== void 0 && (m += 1));
    }
    return {
      isIndeterminate: m > 0 && (m < p || u[e] === void 0),
      isChecked: t ? m > 0 : u[e] === e
    };
  });
}
function aM(e) {
  return e.signature === gs.DataGrid ? e.checkboxSelection && e.disableMultipleRowSelection !== !0 : !e.disableMultipleRowSelection;
}
const gne = (e, t) => {
  const n = [];
  let i = t;
  for (; i != null && i !== $i; ) {
    const s = e[i];
    if (!s)
      return n;
    n.push(i), i = s.parent;
  }
  return n;
}, vne = (e, t, n) => {
  const i = e[n];
  if (!i)
    return [];
  const s = i.parent;
  return s == null ? [] : e[s].children.filter((d) => d !== n && t[d] !== !1);
}, Mb = (e, t, n, i, s, u, d = new Set(us(e.current.state))) => {
  const p = uv(e), m = /* @__PURE__ */ new Set([]);
  if (!(!i && !s || p[n] === !1)) {
    if (i) {
      const v = t[n];
      (v == null ? void 0 : v.type) === "group" && Ez(e, n).forEach((C) => {
        u(C), m.add(C);
      });
    }
    if (s) {
      const v = (C) => {
        if (!d.has(C) && !m.has(C))
          return !1;
        const w = t[C];
        return w ? w.type !== "group" ? !0 : w.children.every(v) : !1;
      }, y = (C) => {
        const w = vne(t, p, C);
        if (w.length === 0 || w.every(v)) {
          const R = t[C], O = R == null ? void 0 : R.parent;
          O != null && O !== $i && e.current.isRowSelectable(O) && (u(O), m.add(O), y(O));
        }
      };
      y(n);
    }
  }
}, iA = (e, t, n, i, s, u) => {
  const d = hf(e);
  if (!(!s && !i) && (s && gne(t, n).forEach((m) => {
    d[m] === m && u(m);
  }), i)) {
    const p = t[n];
    (p == null ? void 0 : p.type) === "group" && Ez(e, n).forEach((v) => {
      u(v);
    });
  }
}, yne = ["field", "id", "formattedValue", "row", "rowNode", "colDef", "isEditable", "cellMode", "hasFocus", "tabIndex", "api"], bne = (e) => {
  const {
    classes: t
  } = e;
  return yt({
    root: ["checkboxInput"]
  }, Gn, t);
}, Tz = tr(function(t, n) {
  var Q, H;
  const {
    field: i,
    id: s,
    rowNode: u,
    hasFocus: d,
    tabIndex: p
  } = t, m = Xt(t, yne), v = In(), y = Vt(), C = {
    classes: y.classes
  }, w = bne(C), R = S.useRef(null), O = S.useRef(null), E = Vr(R, n), k = (I) => {
    const U = {
      value: I.target.checked,
      id: s
    };
    v.current.publishEvent("rowSelectionCheckboxChange", U, I);
  };
  S.useLayoutEffect(() => {
    if (p === 0) {
      const I = v.current.getCellElement(s, i);
      I && (I.tabIndex = -1);
    }
  }, [v, p, s, i]), S.useEffect(() => {
    var I;
    if (d) {
      const U = (I = R.current) == null ? void 0 : I.querySelector("input");
      U == null || U.focus({
        preventScroll: !0
      });
    } else O.current && O.current.stop({});
  }, [d]);
  const L = S.useCallback((I) => {
    I.key === " " && I.stopPropagation();
  }, []), F = v.current.isRowSelectable(s), _ = mne(s, ((Q = y.rowSelectionPropagation) == null ? void 0 : Q.parents) ?? !1), {
    isIndeterminate: P,
    isChecked: D
  } = tt(v, _, XP);
  if (u.type === "footer" || u.type === "pinnedRow")
    return null;
  const z = y.indeterminateCheckboxAction === "select" ? D && !P : D, K = v.current.getLocaleText(z ? "checkboxSelectionUnselectRow" : "checkboxSelectionSelectRow");
  return /* @__PURE__ */ A.jsx(y.slots.baseCheckbox, J({
    tabIndex: p,
    checked: z,
    onChange: k,
    className: w.root,
    inputProps: {
      "aria-label": K,
      name: "select_row"
    },
    onKeyDown: L,
    indeterminate: P,
    disabled: !F,
    touchRippleRef: O
    /* FIXME: typing error */
  }, (H = y.slotProps) == null ? void 0 : H.baseCheckbox, m, {
    ref: E
  }));
});
process.env.NODE_ENV !== "production" && (Tz.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * GridApi that let you manipulate the grid.
   */
  api: a.object.isRequired,
  /**
   * The mode of the cell.
   */
  cellMode: a.oneOf(["edit", "view"]).isRequired,
  /**
   * The column of the row that the current cell belongs to.
   */
  colDef: a.object.isRequired,
  /**
   * The column field of the cell that triggered the event.
   */
  field: a.string.isRequired,
  /**
   * A ref allowing to set imperative focus.
   * It can be passed to the element that should receive focus.
   * @ignore - do not document.
   */
  focusElementRef: a.oneOfType([a.func, a.shape({
    current: a.shape({
      focus: a.func.isRequired
    })
  })]),
  /**
   * The cell value formatted with the column valueFormatter.
   */
  formattedValue: a.any,
  /**
   * If true, the cell is the active element.
   */
  hasFocus: a.bool.isRequired,
  /**
   * The grid row id.
   */
  id: a.oneOfType([a.number, a.string]).isRequired,
  /**
   * If true, the cell is editable.
   */
  isEditable: a.bool,
  /**
   * The row model of the row that the current cell belongs to.
   */
  row: a.any.isRequired,
  /**
   * The node of the row that the current cell belongs to.
   */
  rowNode: a.object.isRequired,
  /**
   * the tabIndex value.
   */
  tabIndex: a.oneOf([-1, 0]).isRequired,
  /**
   * The cell value.
   * If the column has `valueGetter`, use `params.row` to directly access the fields.
   */
  value: a.any
});
const Cne = Tz, zE = (e) => e.focus, Sa = an(zE, (e) => e.cell), Sne = an(zE, (e) => e.columnHeader);
an(zE, (e) => e.columnHeaderFilter);
const W0 = an(zE, (e) => e.columnGroupHeader), HE = (e) => e.tabIndex, sM = an(HE, (e) => e.cell), Rz = an(HE, (e) => e.columnHeader);
an(HE, (e) => e.columnHeaderFilter);
const wne = an(HE, (e) => e.columnGroupHeader);
function Mn(e, t, n) {
  const i = S.useRef(!0);
  Fr(() => {
    i.current = !1, e.current.register(n, t);
  }, [e, n, t]), i.current && e.current.register(n, t);
}
function ui(e, t) {
  const n = S.useRef(null);
  if (n.current)
    return n.current;
  const i = e.current.getLogger(t);
  return n.current = i, i;
}
const Oz = (e, t, n, i, s) => {
  const u = ui(e, "useNativeEventListener");
  br(e, "rootMount", () => {
    const d = typeof t == "function" ? t() : t.current;
    if (!(!d || !n || !i))
      return u.debug(`Binding native ${n} event`), d.addEventListener(n, i, s), () => {
        u.debug(`Clearing native ${n} event`), d.removeEventListener(n, i, s);
      };
  });
}, HC = (e) => {
  const t = S.useRef(!0);
  t.current && (t.current = !1, e());
}, xne = () => {
}, Ene = (e, t) => {
  const n = S.useRef(!1);
  Fr(() => n.current || !e ? xne : (n.current = !0, t()), [n.current || e]);
}, Tne = 100, Rne = (e) => e ? 0 : 100, kz = (e, t, n) => t > 0 && e > 0 ? Math.ceil(e / t) : e === -1 ? n + 2 : 0, Pz = (e) => ({
  page: 0,
  pageSize: e ? 0 : 100
}), One = (e, t = 0) => t === 0 ? e : Math.max(Math.min(e, t - 1), 0), Mz = (e, t) => {
  if (t === gs.DataGrid && e > Tne)
    throw new Error(["MUI X: `pageSize` cannot exceed 100 in the MIT version of the DataGrid.", "You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature."].join(`
`));
}, kne = -1, VC = (e) => e.pagination, Iz = an(VC, (e) => e.enabled && e.paginationMode === "client"), ia = an(VC, (e) => e.paginationModel), Eg = an(VC, (e) => e.rowCount), Hb = an(VC, (e) => e.meta), Pne = an(ia, (e) => e.page), Dz = an(ia, (e) => e.pageSize), Nz = an(ia, Eg, (e, t) => kz(t, e.pageSize, e.page)), lM = cr(Iz, ia, Go, yh, Of, wz, (e, t, n, i, s, u) => {
  var O;
  if (!e)
    return null;
  const d = u.length, p = Math.min(t.pageSize * t.page, d - 1), m = t.pageSize === kne ? d - 1 : Math.min(p + t.pageSize - 1, d - 1);
  if (p === -1 || m === -1)
    return null;
  if (i < 2)
    return {
      firstRowIndex: p,
      lastRowIndex: m
    };
  const v = u[p], y = m - p + 1, C = s.findIndex((E) => E.id === v.id);
  let w = C, R = 0;
  for (; w < s.length && R <= y; ) {
    const E = s[w], k = (O = n[E.id]) == null ? void 0 : O.depth;
    k === void 0 ? w += 1 : ((R < y || k > 0) && (w += 1), k === 0 && (R += 1));
  }
  return {
    firstRowIndex: C,
    lastRowIndex: w - 1
  };
}), Mne = cr(Of, lM, (e, t) => t ? e.slice(t.firstRowIndex, t.lastRowIndex + 1) : []), Lz = cr(Mg, lM, (e, t) => t ? e.slice(t.firstRowIndex, t.lastRowIndex + 1) : []), BC = cr(Iz, lM, Mne, Of, (e, t, n, i) => e ? {
  rows: n,
  range: t,
  rowToIndexMap: n.reduce((s, u, d) => (s.set(u.model, d), s), /* @__PURE__ */ new Map())
} : {
  rows: i,
  range: i.length === 0 ? null : {
    firstRowIndex: 0,
    lastRowIndex: i.length - 1
  },
  rowToIndexMap: i.reduce((s, u, d) => (s.set(u.model, d), s), /* @__PURE__ */ new Map())
}), Ine = ["field", "colDef"], Dne = (e) => {
  const {
    classes: t
  } = e;
  return yt({
    root: ["checkboxInput"]
  }, Gn, t);
}, Fz = tr(function(t, n) {
  var Q;
  const i = Xt(t, Ine), [, s] = S.useState(!1), u = In(), d = Vt(), p = {
    classes: d.classes
  }, m = Dne(p), v = tt(u, Rz), y = tt(u, us), C = tt(u, Mg), w = tt(u, Lz), R = S.useMemo(() => typeof d.isRowSelectable != "function" ? y : y.filter((H) => d.keepNonExistentRowsSelected ? !0 : u.current.getRow(H) ? d.isRowSelectable(u.current.getRowParams(H)) : !1), [u, d.isRowSelectable, y, d.keepNonExistentRowsSelected]), O = S.useMemo(() => (!d.pagination || !d.checkboxSelectionVisibleOnly || d.paginationMode === "server" ? C : w).reduce((I, U) => (I[U] = !0, I), {}), [d.pagination, d.paginationMode, d.checkboxSelectionVisibleOnly, w, C]), E = S.useMemo(() => R.filter((H) => O[H]).length, [R, O]), k = E > 0 && E < Object.keys(O).length, L = E > 0, F = (H) => {
    const I = {
      value: H.target.checked
    };
    u.current.publishEvent("headerSelectionCheckboxChange", I);
  }, _ = v !== null && v.field === t.field ? 0 : -1;
  S.useLayoutEffect(() => {
    const H = u.current.getColumnHeaderElement(t.field);
    _ === 0 && H && (H.tabIndex = -1);
  }, [_, u, t.field]);
  const P = S.useCallback((H) => {
    H.key === " " && u.current.publishEvent("headerSelectionCheckboxChange", {
      value: !L
    });
  }, [u, L]), D = S.useCallback(() => {
    s((H) => !H);
  }, []);
  S.useEffect(() => u.current.subscribeEvent("rowSelectionChange", D), [u, D]);
  const z = d.indeterminateCheckboxAction === "select" ? L && !k : L, K = u.current.getLocaleText(z ? "checkboxSelectionUnselectAllRows" : "checkboxSelectionSelectAllRows");
  return /* @__PURE__ */ A.jsx(d.slots.baseCheckbox, J({
    indeterminate: k,
    checked: z,
    onChange: F,
    className: m.root,
    inputProps: {
      "aria-label": K,
      name: "select_all_rows"
    },
    tabIndex: _,
    onKeyDown: P,
    disabled: !aM(d)
  }, (Q = d.slotProps) == null ? void 0 : Q.baseCheckbox, i, {
    ref: n
  }));
});
process.env.NODE_ENV !== "production" && (Fz.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * The column of the current header component.
   */
  colDef: a.object.isRequired,
  /**
   * The column field of the column that triggered the event
   */
  field: a.string.isRequired
});
const UC = (e, t) => Yg in t ? t[Yg] : e.props.getRowId ? e.props.getRowId(t) : t.id, qs = "__check__", cv = J({}, yz, {
  type: "custom",
  field: qs,
  width: 50,
  resizable: !1,
  sortable: !1,
  filterable: !1,
  // @ts-ignore
  aggregable: !1,
  disableColumnMenu: !0,
  disableReorder: !0,
  disableExport: !0,
  getApplyQuickFilterFn: void 0,
  display: "flex",
  valueGetter: (e, t, n, i) => {
    const s = hf(i), u = UC(i.current.state, t);
    return s[u] !== void 0;
  },
  renderHeader: (e) => /* @__PURE__ */ A.jsx(Fz, J({}, e)),
  renderCell: (e) => /* @__PURE__ */ A.jsx(Cne, J({}, e))
}), Nne = ["item", "applyValue", "type", "apiRef", "focusElementRef", "InputProps", "isFilterActive", "clearButton", "tabIndex", "disabled"];
function aA(e, t) {
  if (e == null)
    return "";
  const n = new Date(e);
  return Number.isNaN(n.getTime()) ? "" : t === "date" ? n.toISOString().substring(0, 10) : t === "datetime-local" ? (n.setMinutes(n.getMinutes() - n.getTimezoneOffset()), n.toISOString().substring(0, 19)) : n.toISOString().substring(0, 10);
}
function Wp(e) {
  var _;
  const {
    item: t,
    applyValue: n,
    type: i,
    apiRef: s,
    focusElementRef: u,
    InputProps: d,
    clearButton: p,
    tabIndex: m,
    disabled: v
  } = e, y = Xt(e, Nne), C = ps(), [w, R] = S.useState(() => aA(t.value, i)), [O, E] = S.useState(!1), k = Sr(), L = Vt(), F = S.useCallback((P) => {
    C.clear();
    const D = P.target.value;
    R(D), E(!0), C.start(L.filterDebounceMs, () => {
      const z = new Date(D);
      n(J({}, t, {
        value: Number.isNaN(z.getTime()) ? void 0 : z
      })), E(!1);
    });
  }, [n, t, L.filterDebounceMs, C]);
  return S.useEffect(() => {
    const P = aA(t.value, i);
    R(P);
  }, [t.value, i]), /* @__PURE__ */ A.jsx(L.slots.baseTextField, J({
    fullWidth: !0,
    id: k,
    label: s.current.getLocaleText("filterPanelInputLabel"),
    placeholder: s.current.getLocaleText("filterPanelInputPlaceholder"),
    value: w,
    onChange: F,
    variant: "standard",
    type: i || "text",
    InputLabelProps: {
      shrink: !0
    },
    inputRef: u,
    InputProps: J({}, O || p ? {
      endAdornment: O ? /* @__PURE__ */ A.jsx(L.slots.loadIcon, {
        fontSize: "small",
        color: "action"
      }) : p
    } : {}, {
      disabled: v
    }, d, {
      inputProps: J({
        max: i === "datetime-local" ? "9999-12-31T23:59" : "9999-12-31",
        tabIndex: m
      }, d == null ? void 0 : d.inputProps)
    })
  }, y, (_ = L.slotProps) == null ? void 0 : _.baseTextField));
}
process.env.NODE_ENV !== "production" && (Wp.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  apiRef: a.shape({
    current: a.object.isRequired
  }).isRequired,
  applyValue: a.func.isRequired,
  clearButton: a.node,
  focusElementRef: a.oneOfType([a.func, a.object]),
  /**
   * It is `true` if the filter either has a value or an operator with no value
   * required is selected (for example `isEmpty`)
   */
  isFilterActive: a.bool,
  item: a.shape({
    field: a.string.isRequired,
    id: a.oneOfType([a.number, a.string]),
    operator: a.string.isRequired,
    value: a.any
  }).isRequired
});
function hg(e, t, n, i) {
  if (!e.value)
    return null;
  const s = new Date(e.value);
  n ? s.setSeconds(0, 0) : (s.setMinutes(s.getMinutes() + s.getTimezoneOffset()), s.setHours(0, 0, 0, 0));
  const u = s.getTime();
  return (d) => {
    if (!d)
      return !1;
    if (i)
      return t(d.getTime(), u);
    const p = new Date(d);
    return n ? p.setSeconds(0, 0) : p.setHours(0, 0, 0, 0), t(p.getTime(), u);
  };
}
const _z = (e) => [{
  value: "is",
  getApplyFilterFn: (t) => hg(t, (n, i) => n === i, e),
  InputComponent: Wp,
  InputComponentProps: {
    type: e ? "datetime-local" : "date"
  }
}, {
  value: "not",
  getApplyFilterFn: (t) => hg(t, (n, i) => n !== i, e),
  InputComponent: Wp,
  InputComponentProps: {
    type: e ? "datetime-local" : "date"
  }
}, {
  value: "after",
  getApplyFilterFn: (t) => hg(t, (n, i) => n > i, e),
  InputComponent: Wp,
  InputComponentProps: {
    type: e ? "datetime-local" : "date"
  }
}, {
  value: "onOrAfter",
  getApplyFilterFn: (t) => hg(t, (n, i) => n >= i, e),
  InputComponent: Wp,
  InputComponentProps: {
    type: e ? "datetime-local" : "date"
  }
}, {
  value: "before",
  getApplyFilterFn: (t) => hg(t, (n, i) => n < i, e, !e),
  InputComponent: Wp,
  InputComponentProps: {
    type: e ? "datetime-local" : "date"
  }
}, {
  value: "onOrBefore",
  getApplyFilterFn: (t) => hg(t, (n, i) => n <= i, e),
  InputComponent: Wp,
  InputComponentProps: {
    type: e ? "datetime-local" : "date"
  }
}, {
  value: "isEmpty",
  getApplyFilterFn: () => (t) => t == null,
  requiresFilterValue: !1
}, {
  value: "isNotEmpty",
  getApplyFilterFn: () => (t) => t != null,
  requiresFilterValue: !1
}], Lne = ["id", "value", "formattedValue", "api", "field", "row", "rowNode", "colDef", "cellMode", "isEditable", "tabIndex", "hasFocus", "inputProps", "isValidating", "isProcessingProps", "onValueChange"], Fne = Ue(vh)({
  fontSize: "inherit"
}), _ne = (e) => {
  const {
    classes: t
  } = e;
  return yt({
    root: ["editInputCell"]
  }, Gn, t);
};
function Az(e) {
  const {
    id: t,
    value: n,
    field: i,
    colDef: s,
    hasFocus: u,
    inputProps: d,
    onValueChange: p
  } = e, m = Xt(e, Lne), v = s.type === "dateTime", y = In(), C = S.useRef(null), w = S.useMemo(() => {
    let P;
    n == null ? P = null : n instanceof Date ? P = n : P = new Date((n ?? "").toString());
    let D;
    return P == null || Number.isNaN(P.getTime()) ? D = "" : D = new Date(P.getTime() - P.getTimezoneOffset() * 60 * 1e3).toISOString().substr(0, v ? 16 : 10), {
      parsed: P,
      formatted: D
    };
  }, [n, v]), [R, O] = S.useState(w), k = {
    classes: Vt().classes
  }, L = _ne(k), F = S.useCallback((P) => {
    if (P === "")
      return null;
    const [D, z] = P.split("T"), [K, Q, H] = D.split("-"), I = /* @__PURE__ */ new Date();
    if (I.setFullYear(Number(K), Number(Q) - 1, Number(H)), I.setHours(0, 0, 0, 0), z) {
      const [U, G] = z.split(":");
      I.setHours(Number(U), Number(G), 0, 0);
    }
    return I;
  }, []), _ = S.useCallback(async (P) => {
    const D = P.target.value, z = F(D);
    p && await p(P, z), O({
      parsed: z,
      formatted: D
    }), y.current.setEditCellValue({
      id: t,
      field: i,
      value: z
    }, P);
  }, [y, i, t, p, F]);
  return S.useEffect(() => {
    O((P) => {
      var D, z;
      return w.parsed !== P.parsed && ((D = w.parsed) == null ? void 0 : D.getTime()) !== ((z = P.parsed) == null ? void 0 : z.getTime()) ? w : P;
    });
  }, [w]), Fr(() => {
    u && C.current.focus();
  }, [u]), /* @__PURE__ */ A.jsx(Fne, J({
    inputRef: C,
    fullWidth: !0,
    className: L.root,
    type: v ? "datetime-local" : "date",
    inputProps: J({
      max: v ? "9999-12-31T23:59" : "9999-12-31"
    }, d),
    value: R.formatted,
    onChange: _
  }, m));
}
process.env.NODE_ENV !== "production" && (Az.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * GridApi that let you manipulate the grid.
   */
  api: a.object.isRequired,
  /**
   * The mode of the cell.
   */
  cellMode: a.oneOf(["edit", "view"]).isRequired,
  changeReason: a.oneOf(["debouncedSetEditCellValue", "setEditCellValue"]),
  /**
   * The column of the row that the current cell belongs to.
   */
  colDef: a.object.isRequired,
  /**
   * The column field of the cell that triggered the event.
   */
  field: a.string.isRequired,
  /**
   * The cell value formatted with the column valueFormatter.
   */
  formattedValue: a.any,
  /**
   * If true, the cell is the active element.
   */
  hasFocus: a.bool.isRequired,
  /**
   * The grid row id.
   */
  id: a.oneOfType([a.number, a.string]).isRequired,
  /**
   * If true, the cell is editable.
   */
  isEditable: a.bool,
  isProcessingProps: a.bool,
  isValidating: a.bool,
  /**
   * Callback called when the value is changed by the user.
   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
   * @param {Date | null} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.
   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`
   */
  onValueChange: a.func,
  /**
   * The row model of the row that the current cell belongs to.
   */
  row: a.any.isRequired,
  /**
   * The node of the row that the current cell belongs to.
   */
  rowNode: a.object.isRequired,
  /**
   * the tabIndex value.
   */
  tabIndex: a.oneOf([-1, 0]).isRequired,
  /**
   * The cell value.
   * If the column has `valueGetter`, use `params.row` to directly access the fields.
   */
  value: a.any
});
const $z = (e) => /* @__PURE__ */ A.jsx(Az, J({}, e));
function jz({
  value: e,
  columnType: t,
  rowId: n,
  field: i
}) {
  if (!(e instanceof Date))
    throw new Error([`MUI X: \`${t}\` column type only accepts \`Date\` objects as values.`, "Use `valueGetter` to transform the value into a `Date` object.", `Row ID: ${n}, field: "${i}".`].join(`
`));
}
const Ane = (e, t, n, i) => {
  if (!e)
    return "";
  const s = UC(i.current.state, t);
  return jz({
    value: e,
    columnType: "date",
    rowId: s,
    field: n.field
  }), e.toLocaleDateString();
}, $ne = (e, t, n, i) => {
  if (!e)
    return "";
  const s = UC(i.current.state, t);
  return jz({
    value: e,
    columnType: "dateTime",
    rowId: s,
    field: n.field
  }), e.toLocaleString();
}, jne = J({}, Vl, {
  type: "date",
  sortComparator: Q2,
  valueFormatter: Ane,
  filterOperators: _z(),
  renderEditCell: $z,
  // @ts-ignore
  pastedValueParser: (e) => new Date(e)
}), zne = J({}, Vl, {
  type: "dateTime",
  sortComparator: Q2,
  valueFormatter: $ne,
  filterOperators: _z(!0),
  renderEditCell: $z,
  // @ts-ignore
  pastedValueParser: (e) => new Date(e)
}), nf = (e) => e == null ? null : Number(e), Hne = (e) => e == null || Number.isNaN(e) || e === "" ? null : (t) => nf(t) === nf(e), Vne = () => [{
  value: "=",
  getApplyFilterFn: (e) => e.value == null || Number.isNaN(e.value) ? null : (t) => nf(t) === e.value,
  InputComponent: ds,
  InputComponentProps: {
    type: "number"
  }
}, {
  value: "!=",
  getApplyFilterFn: (e) => e.value == null || Number.isNaN(e.value) ? null : (t) => nf(t) !== e.value,
  InputComponent: ds,
  InputComponentProps: {
    type: "number"
  }
}, {
  value: ">",
  getApplyFilterFn: (e) => e.value == null || Number.isNaN(e.value) ? null : (t) => t == null ? !1 : nf(t) > e.value,
  InputComponent: ds,
  InputComponentProps: {
    type: "number"
  }
}, {
  value: ">=",
  getApplyFilterFn: (e) => e.value == null || Number.isNaN(e.value) ? null : (t) => t == null ? !1 : nf(t) >= e.value,
  InputComponent: ds,
  InputComponentProps: {
    type: "number"
  }
}, {
  value: "<",
  getApplyFilterFn: (e) => e.value == null || Number.isNaN(e.value) ? null : (t) => t == null ? !1 : nf(t) < e.value,
  InputComponent: ds,
  InputComponentProps: {
    type: "number"
  }
}, {
  value: "<=",
  getApplyFilterFn: (e) => e.value == null || Number.isNaN(e.value) ? null : (t) => t == null ? !1 : nf(t) <= e.value,
  InputComponent: ds,
  InputComponentProps: {
    type: "number"
  }
}, {
  value: "isEmpty",
  getApplyFilterFn: () => (e) => e == null,
  requiresFilterValue: !1
}, {
  value: "isNotEmpty",
  getApplyFilterFn: () => (e) => e != null,
  requiresFilterValue: !1
}, {
  value: "isAnyOf",
  getApplyFilterFn: (e) => !Array.isArray(e.value) || e.value.length === 0 ? null : (t) => t != null && e.value.includes(Number(t)),
  InputComponent: eM,
  InputComponentProps: {
    type: "number"
  }
}], Bne = J({}, Vl, {
  type: "number",
  align: "right",
  headerAlign: "right",
  sortComparator: X2,
  valueParser: (e) => e === "" ? null : Number(e),
  valueFormatter: (e) => J2(e) ? e.toLocaleString() : e || "",
  filterOperators: Vne(),
  getApplyQuickFilterFn: Hne
});
function Qg(e) {
  return (e == null ? void 0 : e.type) === "singleSelect";
}
function dh(e, t) {
  if (e)
    return typeof e.valueOptions == "function" ? e.valueOptions(J({
      field: e.field
    }, t)) : e.valueOptions;
}
function q0(e, t, n) {
  if (t === void 0)
    return;
  const i = t.find((s) => {
    const u = n(s);
    return String(u) === String(e);
  });
  return n(i);
}
const Une = ["id", "value", "formattedValue", "api", "field", "row", "rowNode", "colDef", "cellMode", "isEditable", "tabIndex", "className", "hasFocus", "isValidating", "isProcessingProps", "error", "onValueChange", "initialOpen"], Gne = ["MenuProps"];
function Wne(e) {
  return !!e.key;
}
function zz(e) {
  var G, Y;
  const t = Vt(), {
    id: n,
    value: i,
    field: s,
    row: u,
    colDef: d,
    hasFocus: p,
    error: m,
    onValueChange: v,
    initialOpen: y = t.editMode === qu.Cell
  } = e, C = Xt(e, Une), w = In(), R = S.useRef(null), O = S.useRef(null), [E, k] = S.useState(y), F = (((G = t.slotProps) == null ? void 0 : G.baseSelect) || {}).native ?? !1, _ = ((Y = t.slotProps) == null ? void 0 : Y.baseSelect) || {}, {
    MenuProps: P
  } = _, D = Xt(_, Gne);
  if (Fr(() => {
    var te;
    p && ((te = O.current) == null || te.focus());
  }, [p]), !Qg(d))
    return null;
  const z = dh(d, {
    id: n,
    row: u
  });
  if (!z)
    return null;
  const K = d.getOptionValue, Q = d.getOptionLabel, H = async (te) => {
    if (!Qg(d) || !z)
      return;
    k(!1);
    const B = te.target, W = q0(B.value, z, K);
    v && await v(te, W), await w.current.setEditCellValue({
      id: n,
      field: s,
      value: W
    }, te);
  }, I = (te, B) => {
    if (t.editMode === qu.Row) {
      k(!1);
      return;
    }
    if (B === "backdropClick" || te.key === "Escape") {
      const W = w.current.getCellParams(n, s);
      w.current.publishEvent("cellEditStop", J({}, W, {
        reason: te.key === "Escape" ? _l.escapeKeyDown : _l.cellFocusOut
      }));
    }
  }, U = (te) => {
    Wne(te) && te.key === "Enter" || k(!0);
  };
  return !z || !d ? null : /* @__PURE__ */ A.jsx(t.slots.baseSelect, J({
    ref: R,
    inputRef: O,
    value: i,
    onChange: H,
    open: E,
    onOpen: U,
    MenuProps: J({
      onClose: I
    }, P),
    error: m,
    native: F,
    fullWidth: !0
  }, C, D, {
    children: z.map((te) => {
      var W;
      const B = K(te);
      return /* @__PURE__ */ S.createElement(t.slots.baseSelectOption, J({}, ((W = t.slotProps) == null ? void 0 : W.baseSelectOption) || {}, {
        native: F,
        key: B,
        value: B
      }), Q(te));
    })
  }));
}
process.env.NODE_ENV !== "production" && (zz.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * GridApi that let you manipulate the grid.
   */
  api: a.object.isRequired,
  /**
   * The mode of the cell.
   */
  cellMode: a.oneOf(["edit", "view"]).isRequired,
  changeReason: a.oneOf(["debouncedSetEditCellValue", "setEditCellValue"]),
  /**
   * The column of the row that the current cell belongs to.
   */
  colDef: a.object.isRequired,
  /**
   * The column field of the cell that triggered the event.
   */
  field: a.string.isRequired,
  /**
   * The cell value formatted with the column valueFormatter.
   */
  formattedValue: a.any,
  /**
   * If true, the cell is the active element.
   */
  hasFocus: a.bool.isRequired,
  /**
   * The grid row id.
   */
  id: a.oneOfType([a.number, a.string]).isRequired,
  /**
   * If true, the select opens by default.
   */
  initialOpen: a.bool,
  /**
   * If true, the cell is editable.
   */
  isEditable: a.bool,
  isProcessingProps: a.bool,
  isValidating: a.bool,
  /**
   * Callback called when the value is changed by the user.
   * @param {SelectChangeEvent<any>} event The event source of the callback.
   * @param {any} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.
   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`
   */
  onValueChange: a.func,
  /**
   * The row model of the row that the current cell belongs to.
   */
  row: a.any.isRequired,
  /**
   * The node of the row that the current cell belongs to.
   */
  rowNode: a.object.isRequired,
  /**
   * the tabIndex value.
   */
  tabIndex: a.oneOf([-1, 0]).isRequired,
  /**
   * The cell value.
   * If the column has `valueGetter`, use `params.row` to directly access the fields.
   */
  value: a.any
});
const qne = (e) => /* @__PURE__ */ A.jsx(zz, J({}, e)), Kne = ["item", "applyValue", "type", "apiRef", "focusElementRef", "placeholder", "tabIndex", "label", "variant", "isFilterActive", "clearButton", "InputLabelProps"], Yne = ({
  column: e,
  OptionComponent: t,
  getOptionLabel: n,
  getOptionValue: i,
  isSelectNative: s,
  baseSelectOptionProps: u
}) => ["", ...dh(e) || []].map((p) => {
  const m = i(p);
  let v = n(p);
  return v === "" && (v = " "), /* @__PURE__ */ S.createElement(t, J({}, u, {
    native: s,
    key: m,
    value: m
  }), v);
}), Xne = Ue("div")({
  display: "flex",
  alignItems: "flex-end",
  width: "100%",
  "& button": {
    margin: "auto 0px 5px 5px"
  }
});
function zk(e) {
  var K, Q, H, I, U;
  const {
    item: t,
    applyValue: n,
    type: i,
    apiRef: s,
    focusElementRef: u,
    placeholder: d,
    tabIndex: p,
    label: m,
    variant: v = "standard",
    clearButton: y
  } = e, C = Xt(e, Kne), w = t.value ?? "", R = Sr(), O = Sr(), E = Vt(), k = ((Q = (K = E.slotProps) == null ? void 0 : K.baseSelect) == null ? void 0 : Q.native) ?? !1;
  let L = null;
  if (t.field) {
    const G = s.current.getColumn(t.field);
    Qg(G) && (L = G);
  }
  const F = L == null ? void 0 : L.getOptionValue, _ = L == null ? void 0 : L.getOptionLabel, P = S.useMemo(() => dh(L), [L]), D = S.useCallback((G) => {
    let Y = G.target.value;
    Y = q0(Y, P, F), n(J({}, t, {
      value: Y
    }));
  }, [P, F, n, t]);
  if (!Qg(L))
    return null;
  const z = m ?? s.current.getLocaleText("filterPanelInputLabel");
  return /* @__PURE__ */ A.jsxs(Xne, {
    children: [/* @__PURE__ */ A.jsxs(E.slots.baseFormControl, {
      fullWidth: !0,
      children: [/* @__PURE__ */ A.jsx(E.slots.baseInputLabel, J({}, (H = E.slotProps) == null ? void 0 : H.baseInputLabel, {
        id: O,
        htmlFor: R,
        shrink: !0,
        variant: v,
        children: z
      })), /* @__PURE__ */ A.jsx(E.slots.baseSelect, J({
        id: R,
        label: z,
        labelId: O,
        value: w,
        onChange: D,
        variant: v,
        type: i || "text",
        inputProps: {
          tabIndex: p,
          ref: u,
          placeholder: d ?? s.current.getLocaleText("filterPanelInputPlaceholder")
        },
        native: k,
        notched: v === "outlined" ? !0 : void 0
      }, C, (I = E.slotProps) == null ? void 0 : I.baseSelect, {
        children: Yne({
          column: L,
          OptionComponent: E.slots.baseSelectOption,
          getOptionLabel: _,
          getOptionValue: F,
          isSelectNative: k,
          baseSelectOptionProps: (U = E.slotProps) == null ? void 0 : U.baseSelectOption
        })
      }))]
    }), y]
  });
}
process.env.NODE_ENV !== "production" && (zk.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  apiRef: a.shape({
    current: a.object.isRequired
  }).isRequired,
  applyValue: a.func.isRequired,
  clearButton: a.node,
  focusElementRef: a.oneOfType([a.func, a.object]),
  /**
   * It is `true` if the filter either has a value or an operator with no value
   * required is selected (for example `isEmpty`)
   */
  isFilterActive: a.bool,
  item: a.shape({
    field: a.string.isRequired,
    id: a.oneOfType([a.number, a.string]),
    operator: a.string.isRequired,
    value: a.any
  }).isRequired
});
const Qne = ["item", "applyValue", "type", "apiRef", "focusElementRef", "color", "error", "helperText", "size", "variant"], Jne = ["key"], Zne = gj();
function Hz(e) {
  const {
    item: t,
    applyValue: n,
    apiRef: i,
    focusElementRef: s,
    color: u,
    error: d,
    helperText: p,
    size: m,
    variant: v = "standard"
  } = e, y = Xt(e, Qne), C = {
    color: u,
    error: d,
    helperText: p,
    size: m,
    variant: v
  }, w = Sr(), R = Vt();
  let O = null;
  if (t.field) {
    const D = i.current.getColumn(t.field);
    Qg(D) && (O = D);
  }
  const E = O == null ? void 0 : O.getOptionValue, k = O == null ? void 0 : O.getOptionLabel, L = S.useCallback((D, z) => E(D) === E(z), [E]), F = S.useMemo(() => dh(O) || [], [O]), _ = S.useMemo(() => Array.isArray(t.value) ? t.value.reduce((D, z) => {
    const K = F.find((Q) => E(Q) === z);
    return K != null && D.push(K), D;
  }, []) : [], [E, t.value, F]), P = S.useCallback((D, z) => {
    n(J({}, t, {
      value: z.map(E)
    }));
  }, [n, t, E]);
  return /* @__PURE__ */ A.jsx(LP, J({
    multiple: !0,
    options: F,
    isOptionEqualToValue: L,
    filterOptions: Zne,
    id: w,
    value: _,
    onChange: P,
    getOptionLabel: k,
    renderTags: (D, z) => D.map((K, Q) => {
      const H = z({
        index: Q
      }), {
        key: I
      } = H, U = Xt(H, Jne);
      return /* @__PURE__ */ A.jsx(R.slots.baseChip, J({
        variant: "outlined",
        size: "small",
        label: k(K)
      }, U), I);
    }),
    renderInput: (D) => {
      var z;
      return /* @__PURE__ */ A.jsx(R.slots.baseTextField, J({}, D, {
        label: i.current.getLocaleText("filterPanelInputLabel"),
        placeholder: i.current.getLocaleText("filterPanelInputPlaceholder"),
        InputLabelProps: J({}, D.InputLabelProps, {
          shrink: !0
        }),
        inputRef: s,
        type: "singleSelect"
      }, C, (z = R.slotProps) == null ? void 0 : z.baseTextField));
    }
  }, y));
}
process.env.NODE_ENV !== "production" && (Hz.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  apiRef: a.shape({
    current: a.object.isRequired
  }).isRequired,
  applyValue: a.func.isRequired,
  focusElementRef: a.oneOfType([a.func, a.object]),
  item: a.shape({
    field: a.string.isRequired,
    id: a.oneOfType([a.number, a.string]),
    operator: a.string.isRequired,
    value: a.any
  }).isRequired,
  type: a.oneOf(["singleSelect"])
});
const mg = (e) => e == null || !ZP(e) ? e : e.value, ere = () => [{
  value: "is",
  getApplyFilterFn: (e) => e.value == null || e.value === "" ? null : (t) => mg(t) === mg(e.value),
  InputComponent: zk
}, {
  value: "not",
  getApplyFilterFn: (e) => e.value == null || e.value === "" ? null : (t) => mg(t) !== mg(e.value),
  InputComponent: zk
}, {
  value: "isAnyOf",
  getApplyFilterFn: (e) => {
    if (!Array.isArray(e.value) || e.value.length === 0)
      return null;
    const t = e.value.map(mg);
    return (n) => t.includes(mg(n));
  },
  InputComponent: Hz
}], tre = (e) => typeof e[0] == "object", nre = (e) => ZP(e) ? e.value : e, rre = (e) => ZP(e) ? e.label : String(e), ore = J({}, Vl, {
  type: "singleSelect",
  getOptionLabel: rre,
  getOptionValue: nre,
  valueFormatter(e, t, n, i) {
    const s = UC(i.current.state, t);
    if (!Qg(n))
      return "";
    const u = dh(n, {
      id: s,
      row: t
    });
    if (e == null)
      return "";
    if (!u)
      return e;
    if (!tre(u))
      return n.getOptionLabel(e);
    const d = u.find((p) => n.getOptionValue(p) === e);
    return d ? n.getOptionLabel(d) : "";
  },
  renderEditCell: qne,
  filterOperators: ere(),
  // @ts-ignore
  pastedValueParser: (e, t, n) => {
    const i = n, s = dh(i) || [], u = i.getOptionValue;
    if (s.find((p) => u(p) === e))
      return e;
  }
}), ire = "string", are = () => ({
  string: Vl,
  number: Bne,
  date: jne,
  dateTime: zne,
  boolean: yz,
  singleSelect: ore,
  [_E]: Ute,
  custom: Vl
}), uM = (e) => e.headerFiltering, sre = an(
  uM,
  // No initialization in MIT, so we need to default to false to be used by `getTotalHeaderHeight`
  (e) => (e == null ? void 0 : e.enabled) ?? !1
), lre = an(uM, (e) => e.editing), ure = an(uM, (e) => e.menuOpen), VE = (e) => e.columnGrouping, Vz = cr(VE, (e) => (e == null ? void 0 : e.unwrappedGroupingModel) ?? {}), Bz = cr(VE, (e) => (e == null ? void 0 : e.lookup) ?? {}), cre = cr(VE, (e) => (e == null ? void 0 : e.headerStructure) ?? []), GC = an(VE, (e) => (e == null ? void 0 : e.maxDepth) ?? 0), Uz = ["maxWidth", "minWidth", "width", "flex"], zO = are();
function dre({
  initialFreeSpace: e,
  totalFlexUnits: t,
  flexColumns: n
}) {
  const i = new Set(n.map((d) => d.field)), s = {
    all: {},
    frozenFields: [],
    freeze: (d) => {
      const p = s.all[d];
      p && p.frozen !== !0 && (s.all[d].frozen = !0, s.frozenFields.push(d));
    }
  };
  function u() {
    if (s.frozenFields.length === i.size)
      return;
    const d = {
      min: {},
      max: {}
    };
    let p = e, m = t, v = 0;
    s.frozenFields.forEach((y) => {
      p -= s.all[y].computedWidth, m -= s.all[y].flex;
    });
    for (let y = 0; y < n.length; y += 1) {
      const C = n[y];
      if (s.all[C.field] && s.all[C.field].frozen === !0)
        continue;
      let R = p / m * C.flex;
      R < C.minWidth ? (v += C.minWidth - R, R = C.minWidth, d.min[C.field] = !0) : R > C.maxWidth && (v += C.maxWidth - R, R = C.maxWidth, d.max[C.field] = !0), s.all[C.field] = {
        frozen: !1,
        computedWidth: R,
        flex: C.flex
      };
    }
    v < 0 ? Object.keys(d.max).forEach((y) => {
      s.freeze(y);
    }) : v > 0 ? Object.keys(d.min).forEach((y) => {
      s.freeze(y);
    }) : n.forEach(({
      field: y
    }) => {
      s.freeze(y);
    }), u();
  }
  return u(), s.all;
}
const Hk = (e, t) => {
  const n = {};
  let i = 0, s = 0;
  const u = [];
  e.orderedFields.forEach((m) => {
    let v = e.lookup[m], y = 0, C = !1;
    e.columnVisibilityModel[m] !== !1 && (v.flex && v.flex > 0 ? (i += v.flex, C = !0) : y = vs(v.width || Vl.width, v.minWidth || Vl.minWidth, v.maxWidth || Vl.maxWidth), s += y), v.computedWidth !== y && (v = J({}, v, {
      computedWidth: y
    })), C && u.push(v), n[m] = v;
  });
  const d = t === void 0 ? 0 : t.viewportOuterSize.width - (t.hasScrollY ? t.scrollbarSize : 0), p = Math.max(d - s, 0);
  if (i > 0 && d > 0) {
    const m = dre({
      initialFreeSpace: p,
      totalFlexUnits: i,
      flexColumns: u
    });
    Object.keys(m).forEach((v) => {
      n[v].computedWidth = m[v].computedWidth;
    });
  }
  return J({}, e, {
    lookup: n
  });
}, fre = (e, t) => {
  if (!t)
    return e;
  const {
    orderedFields: n = [],
    dimensions: i = {}
  } = t, s = Object.keys(i);
  if (s.length === 0 && n.length === 0)
    return e;
  const u = {}, d = [];
  for (let y = 0; y < n.length; y += 1) {
    const C = n[y];
    e.lookup[C] && (u[C] = !0, d.push(C));
  }
  const p = d.length === 0 ? e.orderedFields : [...d, ...e.orderedFields.filter((y) => !u[y])], m = J({}, e.lookup);
  for (let y = 0; y < s.length; y += 1) {
    const C = s[y], w = J({}, m[C], {
      hasBeenResized: !0
    });
    Object.entries(i[C]).forEach(([R, O]) => {
      w[R] = O === -1 ? 1 / 0 : O;
    }), m[C] = w;
  }
  return J({}, e, {
    orderedFields: p,
    lookup: m
  });
};
function sA(e) {
  let t = zO[ire];
  return e && zO[e] && (t = zO[e]), t;
}
const Cg = ({
  apiRef: e,
  columnsToUpsert: t,
  initialState: n,
  columnVisibilityModel: i = Js(e),
  keepOnlyColumnsToUpsert: s = !1
}) => {
  var y, C;
  const u = !e.current.state.columns;
  let d;
  if (u)
    d = {
      orderedFields: [],
      lookup: {},
      columnVisibilityModel: i
    };
  else {
    const w = Vu(e.current.state);
    d = {
      orderedFields: s ? [] : [...w.orderedFields],
      lookup: J({}, w.lookup),
      // Will be cleaned later if keepOnlyColumnsToUpsert=true
      columnVisibilityModel: i
    };
  }
  let p = {};
  s && !u && (p = Object.keys(d.lookup).reduce((w, R) => J({}, w, {
    [R]: !1
  }), {})), t.forEach((w) => {
    const {
      field: R
    } = w;
    p[R] = !0;
    let O = d.lookup[R];
    O == null ? (O = J({}, sA(w.type), {
      field: R,
      hasBeenResized: !1
    }), d.orderedFields.push(R)) : s && d.orderedFields.push(R), O && O.type !== w.type && (O = J({}, sA(w.type), {
      field: R
    }));
    let E = O.hasBeenResized;
    Uz.forEach((k) => {
      w[k] !== void 0 && (E = !0, w[k] === -1 && (w[k] = 1 / 0));
    }), d.lookup[R] = zg(O, J({}, w, {
      hasBeenResized: E
    }));
  }), s && !u && Object.keys(d.lookup).forEach((w) => {
    p[w] || delete d.lookup[w];
  });
  const m = e.current.unstable_applyPipeProcessors("hydrateColumns", d), v = fre(m, n);
  return Hk(v, ((C = (y = e.current).getRootDimensions) == null ? void 0 : C.call(y)) ?? void 0);
};
function pre({
  firstColumnToRender: e,
  apiRef: t,
  firstRowToRender: n,
  lastRowToRender: i,
  visibleRows: s
}) {
  let u = e, d = !1;
  for (; !d; ) {
    d = !0;
    for (let p = n; p < i; p += 1)
      if (s[p]) {
        const v = s[p].id, y = t.current.unstable_getCellColSpanInfo(v, u);
        if (y && y.spannedByColSpan && y.leftVisibleCellIndex < u) {
          u = y.leftVisibleCellIndex, d = !1;
          break;
        }
      }
  }
  return u;
}
function BE(e, t) {
  if (t.unstable_listView)
    return 0;
  const n = ov(e), i = GC(e), s = sre(e), u = Math.floor(t.columnHeaderHeight * n), d = Math.floor((t.columnGroupHeaderHeight ?? t.columnHeaderHeight) * n), p = s ? Math.floor((t.headerFilterHeight ?? t.columnHeaderHeight) * n) : 0;
  return u + d * i + p;
}
const dv = (e) => e.rowsMeta, K0 = 1, Gz = 1.5, hre = (e) => {
  const {
    scrollDirection: t,
    classes: n
  } = e, i = {
    root: ["scrollArea", `scrollArea--${t}`]
  };
  return yt(i, Gn, n);
}, mre = _r("div", {
  name: "MuiDataGrid",
  slot: "ScrollArea",
  overridesResolver: (e, t) => [{
    [`&.${ae["scrollArea--left"]}`]: t["scrollArea--left"]
  }, {
    [`&.${ae["scrollArea--right"]}`]: t["scrollArea--right"]
  }, {
    [`&.${ae["scrollArea--up"]}`]: t["scrollArea--up"]
  }, {
    [`&.${ae["scrollArea--down"]}`]: t["scrollArea--down"]
  }, t.scrollArea]
})(() => ({
  position: "absolute",
  zIndex: 101,
  // Horizontal scroll areas
  [`&.${ae["scrollArea--left"]}`]: {
    top: 0,
    left: 0,
    width: 20,
    bottom: 0
  },
  [`&.${ae["scrollArea--right"]}`]: {
    top: 0,
    right: 0,
    width: 20,
    bottom: 0
  },
  // Vertical scroll areas
  [`&.${ae["scrollArea--up"]}`]: {
    top: 0,
    left: 0,
    right: 0,
    height: 20
  },
  [`&.${ae["scrollArea--down"]}`]: {
    bottom: 0,
    left: 0,
    right: 0,
    height: 20
  }
})), gre = jC(li, (e, t) => t === "left" ? e.leftPinnedWidth : t === "right" ? e.rightPinnedWidth + (e.hasScrollX ? e.scrollbarSize : 0) : 0);
function vre(e) {
  const t = In(), [n, i] = S.useState("none");
  return Mt(t, "columnHeaderDragStart", () => i("horizontal")), Mt(t, "columnHeaderDragEnd", () => i("none")), Mt(t, "rowDragStart", () => i("vertical")), Mt(t, "rowDragEnd", () => i("none")), n === "none" ? null : n === "horizontal" ? /* @__PURE__ */ A.jsx(yre, J({}, e)) : /* @__PURE__ */ A.jsx(bre, J({}, e));
}
function yre(e) {
  const {
    scrollDirection: t,
    scrollPosition: n
  } = e, i = S.useRef(null), s = In(), u = ps(), d = tt(s, ov), p = tt(s, LE), m = pC(s, gre, t), v = () => {
    const E = li(s.current.state);
    if (t === "left")
      return n.current.left > 0;
    if (t === "right") {
      const k = p - E.viewportInnerSize.width;
      return n.current.left < k;
    }
    return !1;
  }, y = Vt(), C = BE(s, y), w = Math.floor(y.columnHeaderHeight * d), R = J({
    height: w,
    top: C - w
  }, t === "left" ? {
    left: m
  } : {}, t === "right" ? {
    right: m
  } : {}), O = Nn((E) => {
    let k;
    if (E.preventDefault(), t === "left")
      k = E.clientX - i.current.getBoundingClientRect().right;
    else if (t === "right")
      k = Math.max(1, E.clientX - i.current.getBoundingClientRect().left);
    else
      throw new Error("MUI X: Wrong drag direction");
    k = (k - K0) * Gz + K0, u.start(0, () => {
      s.current.scroll({
        left: n.current.left + k,
        top: n.current.top
      });
    });
  });
  return /* @__PURE__ */ A.jsx(Wz, J({}, e, {
    ref: i,
    getCanScrollMore: v,
    style: R,
    handleDragOver: O
  }));
}
function bre(e) {
  const {
    scrollDirection: t,
    scrollPosition: n
  } = e, i = S.useRef(null), s = In(), u = ps(), d = tt(s, dv), p = () => {
    const w = li(s.current.state);
    if (t === "up")
      return n.current.top > 0;
    if (t === "down") {
      const O = (d.currentPageTotalHeight || 0) - w.viewportInnerSize.height - w.scrollbarSize;
      return n.current.top < O;
    }
    return !1;
  }, m = Vt(), v = BE(s, m), y = {
    top: t === "up" ? v : void 0,
    bottom: t === "down" ? 0 : void 0
  }, C = Nn((w) => {
    let R;
    if (w.preventDefault(), t === "up")
      R = w.clientY - i.current.getBoundingClientRect().bottom;
    else if (t === "down")
      R = Math.max(1, w.clientY - i.current.getBoundingClientRect().top);
    else
      throw new Error("MUI X: Wrong drag direction");
    R = (R - K0) * Gz + K0, u.start(0, () => {
      s.current.scroll({
        left: n.current.left,
        top: n.current.top + R
      });
    });
  });
  return /* @__PURE__ */ A.jsx(Wz, J({}, e, {
    ref: i,
    getCanScrollMore: p,
    style: y,
    handleDragOver: C
  }));
}
const Wz = tr(function(t, n) {
  const {
    scrollDirection: i,
    getCanScrollMore: s,
    style: u,
    handleDragOver: d
  } = t, p = In(), [m, v] = S.useState(s), y = Vt(), C = J({}, y, {
    scrollDirection: i
  }), w = hre(C);
  return Mt(p, "scrollPositionChange", () => {
    v(s);
  }), m ? /* @__PURE__ */ A.jsx(mre, {
    ref: n,
    className: w.root,
    ownerState: C,
    onDragOver: d,
    style: u
  }) : null;
}), o0 = Jc(vre);
var cM = {}, qz = { exports: {} }, Kz = { exports: {} };
(function(e) {
  function t(n) {
    "@babel/helpers - typeof";
    return e.exports = t = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(i) {
      return typeof i;
    } : function(i) {
      return i && typeof Symbol == "function" && i.constructor === Symbol && i !== Symbol.prototype ? "symbol" : typeof i;
    }, e.exports.__esModule = !0, e.exports.default = e.exports, t(n);
  }
  e.exports = t, e.exports.__esModule = !0, e.exports.default = e.exports;
})(Kz);
var Cre = Kz.exports;
(function(e) {
  var t = Cre.default;
  function n(i, s) {
    if (typeof WeakMap == "function") var u = /* @__PURE__ */ new WeakMap(), d = /* @__PURE__ */ new WeakMap();
    return (e.exports = n = function(m, v) {
      if (!v && m && m.__esModule) return m;
      var y, C, w = {
        __proto__: null,
        default: m
      };
      if (m === null || t(m) != "object" && typeof m != "function") return w;
      if (y = v ? d : u) {
        if (y.has(m)) return y.get(m);
        y.set(m, w);
      }
      for (var R in m) R !== "default" && {}.hasOwnProperty.call(m, R) && ((C = (y = Object.defineProperty) && Object.getOwnPropertyDescriptor(m, R)) && (C.get || C.set) ? y(w, R, C) : w[R] = m[R]);
      return w;
    }, e.exports.__esModule = !0, e.exports.default = e.exports)(i, s);
  }
  e.exports = n, e.exports.__esModule = !0, e.exports.default = e.exports;
})(qz);
var Sre = qz.exports, wre = Sre.default;
Object.defineProperty(cM, "__esModule", {
  value: !0
});
var Yz = cM.default = void 0, xre = wre(S);
Yz = cM.default = parseInt(xre.version, 10);
const dM = /* @__PURE__ */ S.createContext(void 0);
process.env.NODE_ENV !== "production" && (dM.displayName = "GridPrivateApiContext");
function Cs() {
  const e = S.useContext(dM);
  if (e === void 0)
    throw new Error(["MUI X: Could not find the Data Grid private context.", "It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.", "This can also happen if you are bundling multiple versions of the Data Grid."].join(`
`));
  return e;
}
const mf = (e, t) => BC(e), fM = (e, t) => tt(e, BC), Ere = typeof navigator < "u" ? navigator.userAgent.toLowerCase() : "empty", Tre = Ere.includes("firefox"), UE = (e) => e.virtualization;
an(UE, (e) => e.enabled);
const Xz = an(UE, (e) => e.enabledForColumns), Rre = an(UE, (e) => e.enabledForRows), WC = an(UE, (e) => e.renderContext), Ore = cr((e) => e.virtualization.renderContext.firstColumnIndex, (e) => e.virtualization.renderContext.lastColumnIndex, (e, t) => ({
  firstColumnIndex: e,
  lastColumnIndex: t
})), Vk = {
  firstRowIndex: 0,
  lastRowIndex: 0,
  firstColumnIndex: 0,
  lastColumnIndex: 0
}, kre = (e, t) => {
  const {
    disableVirtualization: n,
    autoHeight: i
  } = t;
  return J({}, e, {
    virtualization: {
      enabled: !n,
      enabledForColumns: !n,
      enabledForRows: !n && !i,
      renderContext: Vk
    }
  });
};
function Pre(e, t) {
  const n = (u) => {
    e.current.setState((d) => J({}, d, {
      virtualization: J({}, d.virtualization, {
        enabled: u,
        enabledForColumns: u,
        enabledForRows: u && !t.autoHeight
      })
    }));
  };
  Mn(e, {
    unstable_setVirtualization: n,
    unstable_setColumnVirtualization: (u) => {
      e.current.setState((d) => J({}, d, {
        virtualization: J({}, d.virtualization, {
          enabledForColumns: u
        })
      }));
    }
  }, "public"), S.useEffect(() => {
    n(!t.disableVirtualization);
  }, [t.disableVirtualization, t.autoHeight]);
}
const pM = (e) => e.rowSpanning, Qz = an(pM, (e) => e.hiddenCells), Mre = an(pM, (e) => e.spannedCells), Ire = an(pM, (e) => e.hiddenCellOriginMap), Jg = (e) => e.listViewColumn, Dre = j2(Sa, WC, BC, ho, Qs, (e, t, n, i, s) => {
  if (!e)
    return !1;
  const u = s[e.id];
  if (!u)
    return !1;
  const d = n.rowToIndexMap.get(u), p = i.slice(t.firstColumnIndex, t.lastColumnIndex).findIndex((v) => v.field === e.field);
  return !(d !== void 0 && p !== -1 && d >= t.firstRowIndex && d <= t.lastRowIndex);
}), Jz = cr(Dre, ho, BC, Qs, Sa, (e, t, n, i, s) => {
  if (!e)
    return null;
  const u = i[s.id];
  if (!u)
    return null;
  const d = n.rowToIndexMap.get(u);
  if (d === void 0)
    return null;
  const p = t.findIndex((m) => m.field === s.field);
  return p === -1 ? null : J({}, s, {
    rowIndex: d,
    columnIndex: p
  });
});
function Tg(e, t) {
  return Math.round(e * 10 ** t) / 10 ** t;
}
const Y0 = typeof window < "u" && /jsdom|HappyDOM/.test(window.navigator.userAgent), HO = 50;
var Ao = /* @__PURE__ */ function(e) {
  return e[e.NONE = 0] = "NONE", e[e.UP = 1] = "UP", e[e.DOWN = 2] = "DOWN", e[e.LEFT = 3] = "LEFT", e[e.RIGHT = 4] = "RIGHT", e;
}(Ao || {});
const lA = {
  top: 0,
  left: 0
}, Nre = Object.freeze(/* @__PURE__ */ new Map()), Lre = (e, t, n, i, s) => ({
  direction: Ao.NONE,
  buffer: eH(e, Ao.NONE, t, n, i, s)
}), Fre = () => {
  var ue;
  const e = Cs(), t = Vt(), {
    unstable_listView: n
  } = t, i = tt(e, () => n ? [Jg(e.current.state)] : ho(e)), s = tt(e, Rre) && !Y0, u = tt(e, Xz) && !Y0, d = tt(e, iv), p = sv(e), m = n ? G0 : p, v = d.bottom.length > 0, [y, C] = S.useState(Nre), w = ji(), R = tt(e, hf), O = fM(e), E = e.current.mainElementRef, k = e.current.virtualScrollerRef, L = e.current.virtualScrollbarVerticalRef, F = e.current.virtualScrollbarHorizontalRef, _ = tt(e, kte), P = S.useRef(!1), D = tt(e, QP), z = tt(e, Bee), K = tt(e, LE), Q = tt(e, _re), H = tt(e, W2), I = tt(e, G2), U = S.useRef(null), G = S.useCallback((we) => {
    if (E.current = we, !we)
      return;
    const _e = we.getBoundingClientRect();
    let He = {
      width: Tg(_e.width, 1),
      height: Tg(_e.height, 1)
    };
    if ((!U.current || He.width !== U.current.width && He.height !== U.current.height) && (U.current = He, e.current.publishEvent("resize", He)), typeof ResizeObserver > "u")
      return;
    const et = new ResizeObserver((Ne) => {
      const rt = Ne[0];
      if (!rt)
        return;
      const it = {
        width: Tg(rt.contentRect.width, 1),
        height: Tg(rt.contentRect.height, 1)
      };
      it.width === He.width && it.height === He.height || (e.current.publishEvent("resize", it), He = it);
    });
    if (et.observe(we), Yz >= 19)
      return () => {
        E.current = null, et.disconnect();
      };
  }, [e, E]), Y = S.useRef(((ue = t.initialState) == null ? void 0 : ue.scroll) ?? lA), te = S.useRef(!1), B = S.useRef(lA), W = S.useRef(Vk), q = tt(e, WC), ne = tt(e, Jz), re = ps(), X = S.useRef(void 0), j = al(() => Lre(w, t.rowBufferPx, t.columnBufferPx, D * 15, HO * 6)).current, ie = S.useCallback((we) => {
    if (fA(we, e.current.state.virtualization.renderContext))
      return;
    const _e = we.firstRowIndex !== W.current.firstRowIndex || we.lastRowIndex !== W.current.lastRowIndex;
    e.current.setState((et) => J({}, et, {
      virtualization: J({}, et.virtualization, {
        renderContext: we
      })
    })), li(e.current.state).isReady && _e && (W.current = we, e.current.publishEvent("renderedRowsIntervalChange", we)), B.current = Y.current;
  }, [e]), fe = Nn(() => {
    const we = k.current;
    if (!we)
      return;
    const _e = li(e.current.state), He = Math.ceil(_e.minimumSize.height - _e.viewportOuterSize.height), et = Math.ceil(_e.minimumSize.width - _e.viewportInnerSize.width), Ne = {
      top: vs(we.scrollTop, 0, He),
      left: w ? vs(we.scrollLeft, -et, 0) : vs(we.scrollLeft, 0, et)
    }, rt = Ne.left - Y.current.left, it = Ne.top - Y.current.top, wt = rt !== 0 || it !== 0;
    Y.current = Ne;
    const gt = wt ? jre(rt, it) : Ao.NONE, ot = Math.abs(Y.current.top - B.current.top), jt = Math.abs(Y.current.left - B.current.left), ct = ot >= D || jt >= HO, Tt = j.direction !== gt;
    if (!(ct || Tt))
      return q;
    if (Tt)
      switch (gt) {
        case Ao.NONE:
        case Ao.LEFT:
        case Ao.RIGHT:
          X.current = void 0;
          break;
        default:
          X.current = q;
          break;
      }
    j.direction = gt, j.buffer = eH(w, gt, t.rowBufferPx, t.columnBufferPx, D * 15, HO * 6);
    const Lt = uA(e, t, s, u), vt = cA(Lt, Y.current, j);
    return fA(vt, q) || (nE.flushSync(() => {
      ie(vt);
    }), re.start(1e3, fe)), vt;
  }), ce = () => {
    if (!li(e.current.state).isReady && (s || u))
      return;
    const we = uA(e, t, s, u), _e = cA(we, Y.current, j);
    X.current = void 0, ie(_e);
  }, me = Nn(() => {
    if (te.current) {
      te.current = !1;
      return;
    }
    const we = fe();
    e.current.publishEvent("scrollPositionChange", {
      top: Y.current.top,
      left: Y.current.left,
      renderContext: we
    });
  }), ge = Nn((we) => {
    e.current.publishEvent("virtualScrollerWheel", {}, we);
  }), de = Nn((we) => {
    e.current.publishEvent("virtualScrollerTouchMove", {}, we);
  }), pe = (we = {}) => {
    var Lt;
    if (!we.rows && !O.range)
      return [];
    const _e = Go(e);
    let He = q;
    we.renderContext && (He = we.renderContext, He.firstColumnIndex = q.firstColumnIndex, He.lastColumnIndex = q.lastColumnIndex);
    const et = !v && we.position === void 0 || v && we.position === "bottom", Ne = we.position !== void 0;
    let rt;
    switch (we.position) {
      case "top":
        rt = 0;
        break;
      case "bottom":
        rt = d.top.length + O.rows.length;
        break;
      case void 0:
        rt = d.top.length;
        break;
    }
    const it = we.rows ?? O.rows, wt = He.firstRowIndex, gt = Math.min(He.lastRowIndex, it.length), ot = we.rows ? Y_(0, we.rows.length) : Y_(wt, gt);
    let jt = -1;
    !Ne && ne && (ne.rowIndex < wt && (ot.unshift(ne.rowIndex), jt = ne.rowIndex), ne.rowIndex > gt && (ot.push(ne.rowIndex), jt = ne.rowIndex));
    const ct = [], Tt = (Lt = t.slotProps) == null ? void 0 : Lt.row, Rt = Rf(e);
    return ot.forEach((vt) => {
      var Po, Mo, Ut;
      const {
        id: Qe,
        model: Oe
      } = it[vt];
      if (!_e[Qe])
        return;
      const Me = (((Po = O == null ? void 0 : O.range) == null ? void 0 : Po.firstRowIndex) || 0) + rt + vt;
      if (_) {
        const dr = m.left.length, Ct = i.length - m.right.length;
        e.current.calculateColSpan({
          rowId: Qe,
          minFirstColumn: dr,
          maxLastColumn: Ct,
          columns: i
        }), m.left.length > 0 && e.current.calculateColSpan({
          rowId: Qe,
          minFirstColumn: 0,
          maxLastColumn: m.left.length,
          columns: i
        }), m.right.length > 0 && e.current.calculateColSpan({
          rowId: Qe,
          minFirstColumn: i.length - m.right.length,
          maxLastColumn: i.length,
          columns: i
        });
      }
      const ht = e.current.rowHasAutoHeight(Qe) ? "auto" : e.current.unstable_getRowHeight(Qe);
      let xt;
      R[Qe] == null ? xt = !1 : xt = e.current.isRowSelectable(Qe);
      let zt = !1;
      we.position === void 0 && (zt = vt === 0);
      let bt = !1;
      const Ge = vt === it.length - 1;
      if (et)
        if (Ne)
          bt = Ge;
        else {
          const dr = O.rows.length - 1;
          vt === dr && (bt = !0);
        }
      let Et = He;
      X.current && vt >= X.current.firstRowIndex && vt < X.current.lastRowIndex && (Et = X.current);
      const At = vt === jt, pn = (ne == null ? void 0 : ne.rowIndex) === Me, fn = Zz(Rt, Et, m.left.length), hr = Ge && we.position === "top", qn = Et.firstColumnIndex, Dr = Et.lastColumnIndex;
      if (ct.push(/* @__PURE__ */ A.jsx(t.slots.row, J({
        row: Oe,
        rowId: Qe,
        index: Me,
        selected: xt,
        offsetLeft: fn,
        columnsTotalWidth: K,
        rowHeight: ht,
        pinnedColumns: m,
        visibleColumns: i,
        firstColumnIndex: qn,
        lastColumnIndex: Dr,
        focusedColumnIndex: pn ? ne.columnIndex : void 0,
        isFirstVisible: zt,
        isLastVisible: bt,
        isNotVisible: At,
        showBottomBorder: hr,
        scrollbarWidth: H,
        gridHasFiller: I
      }, Tt), Qe)), At)
        return;
      const mr = y.get(Qe);
      mr && ct.push(mr), we.position === void 0 && Ge && ct.push((Ut = (Mo = e.current).getInfiniteLoadingTriggerElement) == null ? void 0 : Ut.call(Mo, {
        lastRowId: Qe
      }));
    }), ct;
  }, be = S.useMemo(() => ({
    overflowX: !Q || n ? "hidden" : void 0,
    overflowY: t.autoHeight ? "hidden" : void 0
  }), [Q, t.autoHeight, n]), Ce = S.useMemo(() => {
    const we = {
      width: Q ? K : "auto",
      flexBasis: z,
      flexShrink: 0
    };
    return we.flexBasis === 0 && (we.flexBasis = fz), we;
  }, [K, z, Q]), Re = S.useCallback((we) => {
    we && e.current.publishEvent("virtualScrollerContentSizeChange", {
      columnsTotalWidth: K,
      contentHeight: z
    });
  }, [e, K, z]);
  return Fr(() => {
    var we, _e;
    P.current && ((_e = (we = e.current).updateRenderContext) == null || _e.call(we));
  }, [e, u, s]), Fr(() => {
    n && (k.current.scrollLeft = 0);
  }, [n, k]), Ene(q !== Vk, () => {
    var we;
    if (e.current.publishEvent("scrollPositionChange", {
      top: Y.current.top,
      left: Y.current.left,
      renderContext: q
    }), P.current = !0, (we = t.initialState) != null && we.scroll && k.current) {
      const _e = k.current, {
        top: He,
        left: et
      } = t.initialState.scroll, Ne = {
        top: !(He > 0),
        left: !(et > 0)
      };
      if (!Ne.left && K && (_e.scrollLeft = et, te.current = !0, Ne.left = !0), !Ne.top && z && (_e.scrollTop = He, te.current = !0, Ne.top = !0), !Ne.top || !Ne.left) {
        const rt = e.current.subscribeEvent("virtualScrollerContentSizeChange", (it) => {
          !Ne.left && it.columnsTotalWidth && (_e.scrollLeft = et, te.current = !0, Ne.left = !0), !Ne.top && it.contentHeight && (_e.scrollTop = He, te.current = !0, Ne.top = !0), Ne.left && Ne.top && rt();
        });
        return rt;
      }
    }
  }), e.current.register("private", {
    updateRenderContext: ce
  }), br(e, "sortedRowsSet", ce), br(e, "paginationModelChange", ce), br(e, "columnsChange", ce), {
    renderContext: q,
    setPanels: C,
    getRows: pe,
    getContainerProps: () => ({
      ref: G
    }),
    getScrollerProps: () => ({
      ref: k,
      onScroll: me,
      onWheel: ge,
      onTouchMove: de,
      style: be,
      role: "presentation",
      // `tabIndex` shouldn't be used along role=presentation, but it fixes a Firefox bug
      // https://github.com/mui/mui-x/pull/13891#discussion_r1683416024
      tabIndex: Tre ? -1 : void 0
    }),
    getContentProps: () => ({
      style: Ce,
      role: "presentation",
      ref: Re
    }),
    getRenderZoneProps: () => ({
      role: "rowgroup"
    }),
    getScrollbarVerticalProps: () => ({
      ref: L,
      scrollPosition: Y
    }),
    getScrollbarHorizontalProps: () => ({
      ref: F,
      scrollPosition: Y
    }),
    getScrollAreaProps: () => ({
      scrollPosition: Y
    })
  };
};
function _re(e) {
  return e.dimensions.viewportOuterSize.width > 0 && e.dimensions.columnsTotalWidth > e.dimensions.viewportOuterSize.width;
}
function uA(e, t, n, i) {
  const s = li(e.current.state), u = mf(e), d = t.unstable_listView ? [Jg(e.current.state)] : ho(e), p = Ire(e), m = e.current.state.rows.dataRowIds.at(-1), v = d.at(-1);
  return {
    enabledForRows: n,
    enabledForColumns: i,
    apiRef: e,
    autoHeight: t.autoHeight,
    rowBufferPx: t.rowBufferPx,
    columnBufferPx: t.columnBufferPx,
    leftPinnedWidth: s.leftPinnedWidth,
    columnsTotalWidth: s.columnsTotalWidth,
    viewportInnerWidth: s.viewportInnerSize.width,
    viewportInnerHeight: s.viewportInnerSize.height,
    lastRowHeight: m !== void 0 ? e.current.unstable_getRowHeight(m) : 0,
    lastColumnWidth: (v == null ? void 0 : v.computedWidth) ?? 0,
    rowsMeta: dv(e.current.state),
    columnPositions: Rf(e),
    rows: u.rows,
    range: u.range,
    pinnedColumns: sv(e),
    visibleColumns: d,
    hiddenCellsOriginMap: p,
    listView: t.unstable_listView ?? !1,
    virtualizeColumnsWithAutoRowHeight: t.virtualizeColumnsWithAutoRowHeight
  };
}
function cA(e, t, n) {
  const i = {
    firstRowIndex: 0,
    lastRowIndex: e.rows.length,
    firstColumnIndex: 0,
    lastColumnIndex: e.visibleColumns.length
  }, {
    top: s,
    left: u
  } = t, d = Math.abs(u) + e.leftPinnedWidth;
  if (e.enabledForRows) {
    let m = Math.min(dA(e, s, {
      atStart: !0,
      lastPosition: e.rowsMeta.positions[e.rowsMeta.positions.length - 1] + e.lastRowHeight
    }), e.rowsMeta.positions.length - 1);
    const v = e.hiddenCellsOriginMap[m];
    if (v) {
      const C = Math.min(...Object.values(v));
      m = Math.min(m, C);
    }
    const y = e.autoHeight ? m + e.rows.length : dA(e, s + e.viewportInnerHeight);
    i.firstRowIndex = m, i.lastRowIndex = y;
  }
  if (e.listView)
    return J({}, i, {
      lastColumnIndex: 1
    });
  if (e.enabledForColumns) {
    let m = 0, v = e.columnPositions.length, y = !1;
    const [C, w] = Bk({
      firstIndex: i.firstRowIndex,
      lastIndex: i.lastRowIndex,
      minFirstIndex: 0,
      maxLastIndex: e.rows.length,
      bufferBefore: n.buffer.rowBefore,
      bufferAfter: n.buffer.rowAfter,
      positions: e.rowsMeta.positions,
      lastSize: e.lastRowHeight
    });
    if (!e.virtualizeColumnsWithAutoRowHeight)
      for (let R = C; R < w && !y; R += 1) {
        const O = e.rows[R];
        y = e.apiRef.current.rowHasAutoHeight(O.id);
      }
    (!y || e.virtualizeColumnsWithAutoRowHeight) && (m = Sf(d, e.columnPositions, {
      atStart: !0,
      lastPosition: e.columnsTotalWidth
    }), v = Sf(d + e.viewportInnerWidth, e.columnPositions)), i.firstColumnIndex = m, i.lastColumnIndex = v;
  }
  return Are(e, i, n);
}
function dA(e, t, n) {
  var d, p;
  const i = e.apiRef.current.getLastMeasuredRowIndex();
  let s = i === 1 / 0;
  (d = e.range) != null && d.lastRowIndex && !s && (s = i >= e.range.lastRowIndex);
  const u = vs(i - (((p = e.range) == null ? void 0 : p.firstRowIndex) || 0), 0, e.rowsMeta.positions.length);
  return s || e.rowsMeta.positions[u] >= t ? Sf(t, e.rowsMeta.positions, n) : $re(t, e.rowsMeta.positions, u, n);
}
function Are(e, t, n) {
  const [i, s] = Bk({
    firstIndex: t.firstRowIndex,
    lastIndex: t.lastRowIndex,
    minFirstIndex: 0,
    maxLastIndex: e.rows.length,
    bufferBefore: n.buffer.rowBefore,
    bufferAfter: n.buffer.rowAfter,
    positions: e.rowsMeta.positions,
    lastSize: e.lastRowHeight
  }), [u, d] = Bk({
    firstIndex: t.firstColumnIndex,
    lastIndex: t.lastColumnIndex,
    minFirstIndex: e.pinnedColumns.left.length,
    maxLastIndex: e.visibleColumns.length - e.pinnedColumns.right.length,
    bufferBefore: n.buffer.columnBefore,
    bufferAfter: n.buffer.columnAfter,
    positions: e.columnPositions,
    lastSize: e.lastColumnWidth
  }), p = pre({
    firstColumnToRender: u,
    apiRef: e.apiRef,
    firstRowToRender: i,
    lastRowToRender: s,
    visibleRows: e.rows
  });
  return {
    firstRowIndex: i,
    lastRowIndex: s,
    firstColumnIndex: p,
    lastColumnIndex: d
  };
}
function Sf(e, t, n = void 0, i = 0, s = t.length) {
  if (t.length <= 0)
    return -1;
  if (i >= s)
    return i;
  const u = i + Math.floor((s - i) / 2), d = t[u];
  let p;
  if (n != null && n.atStart) {
    const m = (u === t.length - 1 ? n.lastPosition : t[u + 1]) - d;
    p = e - m < d;
  } else
    p = e <= d;
  return p ? Sf(e, t, n, i, u) : Sf(e, t, n, u + 1, s);
}
function $re(e, t, n, i = void 0) {
  let s = 1;
  for (; n < t.length && Math.abs(t[n]) < e; )
    n += s, s *= 2;
  return Sf(e, t, i, Math.floor(n / 2), Math.min(n, t.length));
}
function Bk({
  firstIndex: e,
  lastIndex: t,
  bufferBefore: n,
  bufferAfter: i,
  minFirstIndex: s,
  maxLastIndex: u,
  positions: d,
  lastSize: p
}) {
  const m = d[e] - n, v = d[t] + i, y = Sf(m, d, {
    atStart: !0,
    lastPosition: d[d.length - 1] + p
  }), C = Sf(v, d);
  return [vs(y, s, u), vs(C, s, u)];
}
function fA(e, t) {
  return e === t ? !0 : e.firstRowIndex === t.firstRowIndex && e.lastRowIndex === t.lastRowIndex && e.firstColumnIndex === t.firstColumnIndex && e.lastColumnIndex === t.lastColumnIndex;
}
function Zz(e, t, n) {
  const i = (e[t.firstColumnIndex] ?? 0) - (e[n] ?? 0);
  return Math.abs(i);
}
function jre(e, t) {
  return e === 0 && t === 0 ? Ao.NONE : Math.abs(t) >= Math.abs(e) ? t > 0 ? Ao.DOWN : Ao.UP : e > 0 ? Ao.RIGHT : Ao.LEFT;
}
function eH(e, t, n, i, s, u) {
  if (e)
    switch (t) {
      case Ao.LEFT:
        t = Ao.RIGHT;
        break;
      case Ao.RIGHT:
        t = Ao.LEFT;
        break;
    }
  switch (t) {
    case Ao.NONE:
      return {
        rowAfter: n,
        rowBefore: n,
        columnAfter: i,
        columnBefore: i
      };
    case Ao.LEFT:
      return {
        rowAfter: 0,
        rowBefore: 0,
        columnAfter: 0,
        columnBefore: u
      };
    case Ao.RIGHT:
      return {
        rowAfter: 0,
        rowBefore: 0,
        columnAfter: u,
        columnBefore: 0
      };
    case Ao.UP:
      return {
        rowAfter: 0,
        rowBefore: s,
        columnAfter: 0,
        columnBefore: 0
      };
    case Ao.DOWN:
      return {
        rowAfter: s,
        rowBefore: 0,
        columnAfter: 0,
        columnBefore: 0
      };
    default:
      throw new Error("unreachable");
  }
}
const zre = () => {
  var C, w;
  const e = In(), t = Vt(), n = tt(e, zC), i = tt(e, oM), s = tt(e, K2), u = n === 0 && s === 0, d = tt(e, ute), p = !d && u, m = !d && n > 0 && i === 0;
  let v = null, y = null;
  return p && (v = "noRowsOverlay"), m && (v = "noResultsOverlay"), d && (v = "loadingOverlay", y = ((w = (C = t.slotProps) == null ? void 0 : C.loadingOverlay) == null ? void 0 : w[u ? "noRowsVariant" : "variant"]) || null), {
    overlayType: v,
    loadingOverlayVariant: y
  };
}, Hre = _r("div", {
  name: "MuiDataGrid",
  slot: "OverlayWrapper",
  shouldForwardProp: (e) => e !== "overlayType" && e !== "loadingOverlayVariant",
  overridesResolver: (e, t) => t.overlayWrapper
})(({
  overlayType: e,
  loadingOverlayVariant: t
}) => (
  // Skeleton overlay should flow with the scroll container and not be sticky
  t !== "skeleton" ? {
    position: "sticky",
    // To stay in place while scrolling
    top: "var(--DataGrid-headersTotalHeight)",
    // TODO: take pinned rows into account
    left: 0,
    width: 0,
    // To stay above the content instead of shifting it down
    height: 0,
    // To stay above the content instead of shifting it down
    zIndex: e === "loadingOverlay" ? 5 : 4
    // Should be above pinned columns and detail panel
  } : {}
)), Vre = _r("div", {
  name: "MuiDataGrid",
  slot: "OverlayWrapperInner",
  shouldForwardProp: (e) => e !== "overlayType" && e !== "loadingOverlayVariant",
  overridesResolver: (e, t) => t.overlayWrapperInner
})({}), Bre = (e) => {
  const {
    classes: t
  } = e;
  return yt({
    root: ["overlayWrapper"],
    inner: ["overlayWrapperInner"]
  }, Gn, t);
};
function tH(e) {
  const t = In(), n = Vt(), i = tt(t, li);
  let s = Math.max(i.viewportOuterSize.height - i.topContainerHeight - i.bottomContainerHeight - (i.hasScrollX ? i.scrollbarSize : 0), 0);
  s === 0 && (s = fz);
  const u = Bre(J({}, e, {
    classes: n.classes
  }));
  return /* @__PURE__ */ A.jsx(Hre, J({
    className: nt(u.root)
  }, e, {
    children: /* @__PURE__ */ A.jsx(Vre, J({
      className: nt(u.inner),
      style: {
        height: s,
        width: i.viewportOuterSize.width
      }
    }, e))
  }));
}
process.env.NODE_ENV !== "production" && (tH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  loadingOverlayVariant: a.oneOf(["circular-progress", "linear-progress", "skeleton"]),
  overlayType: a.oneOf(["loadingOverlay", "noResultsOverlay", "noRowsOverlay"])
});
process.env.NODE_ENV !== "production" && (nH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  loadingOverlayVariant: a.oneOf(["circular-progress", "linear-progress", "skeleton"]),
  overlayType: a.oneOf(["loadingOverlay", "noResultsOverlay", "noRowsOverlay"])
});
function nH(e) {
  var u, d;
  const {
    overlayType: t
  } = e, n = Vt();
  if (!t)
    return null;
  const i = (u = n.slots) == null ? void 0 : u[t], s = (d = n.slotProps) == null ? void 0 : d[t];
  return /* @__PURE__ */ A.jsx(tH, J({}, e, {
    children: /* @__PURE__ */ A.jsx(i, J({}, s))
  }));
}
const v0 = (e) => e.columnMenu;
function Ure() {
  var k;
  const e = Cs(), t = Vt(), n = tt(e, ho), i = tt(e, fne), s = tt(e, lne), u = tt(e, Rz), d = tt(e, () => sM(e) === null), p = tt(e, wne), m = tt(e, Sne), v = tt(e, W0), y = tt(e, GC), C = tt(e, v0), w = tt(e, Js), R = tt(e, cre), O = !(p === null && u === null && d), E = e.current.columnHeadersContainerRef;
  return /* @__PURE__ */ A.jsx(t.slots.columnHeaders, J({
    ref: E,
    visibleColumns: n,
    filterColumnLookup: i,
    sortColumnLookup: s,
    columnHeaderTabIndexState: u,
    columnGroupHeaderTabIndexState: p,
    columnHeaderFocus: m,
    columnGroupHeaderFocus: v,
    headerGroupingMaxDepth: y,
    columnMenuState: C,
    columnVisibility: w,
    columnGroupsHeaderStructure: R,
    hasOtherElementInTabSequence: O
  }, (k = t.slotProps) == null ? void 0 : k.columnHeaders));
}
const Gre = Jc(Ure), hM = /* @__PURE__ */ S.createContext(void 0);
process.env.NODE_ENV !== "production" && (hM.displayName = "GridConfigurationContext");
const mM = () => {
  const e = S.useContext(hM);
  if (e === void 0)
    throw new Error(["MUI X: Could not find the Data Grid configuration context.", "It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.", "This can also happen if you are bundling multiple versions of the Data Grid."].join(`
`));
  return e;
}, Wre = _r("div")({
  position: "absolute",
  top: "var(--DataGrid-headersTotalHeight)",
  left: 0,
  width: "calc(100% - (var(--DataGrid-hasScrollY) * var(--DataGrid-scrollbarSize)))"
}), qre = _r("div", {
  name: "MuiDataGrid",
  slot: "Main",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.main, n.hasPinnedRight && t["main--hasPinnedRight"], n.loadingOverlayVariant === "skeleton" && t["main--hasSkeletonLoadingOverlay"]];
  }
})({
  flexGrow: 1,
  position: "relative",
  overflow: "hidden",
  display: "flex",
  flexDirection: "column"
}), Kre = tr((e, t) => {
  var d;
  const {
    ownerState: n
  } = e, i = Vt(), u = mM().hooks.useGridAriaAttributes();
  return /* @__PURE__ */ A.jsxs(qre, J({
    ownerState: n,
    className: e.className,
    tabIndex: -1
  }, u, (d = i.slotProps) == null ? void 0 : d.main, {
    ref: t,
    children: [/* @__PURE__ */ A.jsx(Wre, {
      role: "presentation",
      "data-id": "gridPanelAnchor"
    }), e.children]
  }));
}), Yre = () => yt({
  root: ["topContainer"]
}, Gn, {}), Xre = _r("div")({
  position: "sticky",
  zIndex: 40,
  top: 0
});
function Qre(e) {
  const t = Yre();
  return /* @__PURE__ */ A.jsx(Xre, J({}, e, {
    className: nt(t.root, ae["container--top"]),
    role: "presentation"
  }));
}
const Jre = () => yt({
  root: ["bottomContainer"]
}, Gn, {}), Zre = _r("div")({
  position: "sticky",
  zIndex: 40,
  bottom: "calc(var(--DataGrid-hasScrollX) * var(--DataGrid-scrollbarSize))"
});
function eoe(e) {
  const t = Jre();
  return /* @__PURE__ */ A.jsx(Zre, J({}, e, {
    className: nt(t.root, ae["container--bottom"]),
    role: "presentation"
  }));
}
const toe = (e, t) => {
  const {
    classes: n
  } = e;
  return yt({
    root: ["virtualScrollerContent", t && "virtualScrollerContent--overflowed"]
  }, Gn, n);
}, noe = _r("div", {
  name: "MuiDataGrid",
  slot: "VirtualScrollerContent",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.virtualScrollerContent, n.overflowedContent && t["virtualScrollerContent--overflowed"]];
  }
})({}), roe = tr(function(t, n) {
  var p;
  const i = Vt(), s = !i.autoHeight && ((p = t.style) == null ? void 0 : p.minHeight) === "auto", u = toe(i, s), d = {
    classes: i.classes,
    overflowedContent: s
  };
  return /* @__PURE__ */ A.jsx(noe, J({}, t, {
    ownerState: d,
    className: nt(u.root, t.className),
    ref: n
  }));
}), ooe = _r("div")({
  display: "flex",
  flexDirection: "row",
  width: "var(--DataGrid-rowWidth)",
  boxSizing: "border-box"
}), rH = _r("div")({
  position: "sticky",
  height: "100%",
  boxSizing: "border-box",
  borderTop: "1px solid var(--rowBorderColor)",
  backgroundColor: "var(--DataGrid-pinnedBackground)"
}), ioe = _r(rH)({
  left: 0,
  borderRight: "1px solid var(--rowBorderColor)"
}), aoe = _r(rH)({
  right: 0,
  borderLeft: "1px solid var(--rowBorderColor)"
}), soe = _r("div")({
  flexGrow: 1,
  borderTop: "1px solid var(--rowBorderColor)"
});
function loe({
  rowsLength: e
}) {
  const t = In(), {
    viewportOuterSize: n,
    minimumSize: i,
    hasScrollX: s,
    hasScrollY: u,
    scrollbarSize: d,
    leftPinnedWidth: p,
    rightPinnedWidth: m
  } = tt(t, li), v = s ? d : 0, y = n.height - i.height > 0;
  return v === 0 && !y ? null : /* @__PURE__ */ A.jsxs(ooe, {
    className: ae.filler,
    role: "presentation",
    style: {
      height: v,
      "--rowBorderColor": e === 0 ? "transparent" : "var(--DataGrid-rowBorderColor)"
    },
    children: [p > 0 && /* @__PURE__ */ A.jsx(ioe, {
      className: ae["filler--pinnedLeft"],
      style: {
        width: p
      }
    }), /* @__PURE__ */ A.jsx(soe, {}), m > 0 && /* @__PURE__ */ A.jsx(aoe, {
      className: ae["filler--pinnedRight"],
      style: {
        width: m + (u ? d : 0)
      }
    })]
  });
}
const uoe = Jc(loe), coe = ["className"], doe = (e) => {
  const {
    classes: t
  } = e;
  return yt({
    root: ["virtualScrollerRenderZone"]
  }, Gn, t);
}, foe = _r("div", {
  name: "MuiDataGrid",
  slot: "VirtualScrollerRenderZone",
  overridesResolver: (e, t) => t.virtualScrollerRenderZone
})({
  position: "absolute",
  display: "flex",
  // Prevents margin collapsing when using `getRowSpacing`
  flexDirection: "column"
}), poe = tr(function(t, n) {
  const {
    className: i
  } = t, s = Xt(t, coe), u = In(), d = Vt(), p = doe(d), m = tt(u, () => {
    const v = WC(u);
    return dv(u.current.state).positions[v.firstRowIndex] ?? 0;
  });
  return /* @__PURE__ */ A.jsx(foe, J({
    className: nt(p.root, i),
    ownerState: d,
    style: {
      transform: `translate3d(0, ${m}px, 0)`
    }
  }, s, {
    ref: n
  }));
}), hoe = {
  includeHeaders: !0,
  includeOutliers: !1,
  outliersFactor: 1.5,
  expand: !1,
  disableColumnVirtualization: !0
}, si = (e) => e.editRows, oH = jC(si, (e, {
  rowId: t,
  editMode: n
}) => n === qu.Row && !!e[t]), moe = jC(si, (e, {
  rowId: t,
  field: n
}) => {
  var i;
  return ((i = e[t]) == null ? void 0 : i[n]) ?? null;
}), gC = (e) => e.preferencePanel, goe = jC(gC, (e, t) => !!(e.open && e.labelId === t));
var fh = /* @__PURE__ */ function(e) {
  return e.filters = "filters", e.columns = "columns", e;
}(fh || {});
const voe = (e, t) => {
  const {
    classes: n
  } = e, i = {
    root: ["scrollbar", `scrollbar--${t}`],
    content: ["scrollbarContent"]
  };
  return yt(i, Gn, n);
}, iH = _r("div")({
  position: "absolute",
  display: "inline-block",
  zIndex: 60,
  "&:hover": {
    zIndex: 70
  },
  // In macOS Safari and Gnome Web, scrollbars are overlaid and don't affect the layout. So we consider
  // their size to be 0px throughout all the calculations, but the floating scrollbar container does need
  // to appear and have a real size. We set it to 14px because it seems like an acceptable value and we
  // don't have a method to find the required size for scrollbars on those platforms.
  "--size": "calc(max(var(--DataGrid-scrollbarSize), 14px))"
}), yoe = _r(iH)({
  width: "var(--size)",
  height: "calc(var(--DataGrid-hasScrollY) * (100% - var(--DataGrid-topContainerHeight) - var(--DataGrid-bottomContainerHeight) - var(--DataGrid-hasScrollX) * var(--DataGrid-scrollbarSize)))",
  overflowY: "auto",
  overflowX: "hidden",
  // Disable focus-visible style, it's a scrollbar.
  outline: 0,
  "& > div": {
    width: "var(--size)"
  },
  top: "var(--DataGrid-topContainerHeight)",
  right: "0px"
}), boe = _r(iH)({
  width: "100%",
  height: "var(--size)",
  overflowY: "hidden",
  overflowX: "auto",
  // Disable focus-visible style, it's a scrollbar.
  outline: 0,
  "& > div": {
    height: "var(--size)"
  },
  bottom: "0px"
}), pA = tr(function(t, n) {
  const i = Cs(), s = Vt(), u = S.useRef(!1), d = S.useRef(0), p = S.useRef(null), m = S.useRef(null), v = voe(s, t.position), y = tt(i, li), C = t.position === "vertical" ? "height" : "width", w = t.position === "vertical" ? "scrollTop" : "scrollLeft", R = t.position === "vertical" ? "top" : "left", O = t.position === "vertical" ? y.hasScrollX : y.hasScrollY, E = y.minimumSize[C] + (O ? y.scrollbarSize : 0), L = (t.position === "vertical" ? y.viewportInnerSize.height : y.viewportOuterSize.width) * (E / y.viewportOuterSize[C]), F = Nn(() => {
    const D = p.current, z = t.scrollPosition.current;
    if (!D || z[R] === d.current)
      return;
    if (d.current = z[R], u.current) {
      u.current = !1;
      return;
    }
    u.current = !0;
    const K = z[R] / E;
    D[w] = K * L;
  }), _ = Nn(() => {
    const D = i.current.virtualScrollerRef.current, z = p.current;
    if (!z)
      return;
    if (u.current) {
      u.current = !1;
      return;
    }
    u.current = !0;
    const K = z[w] / L;
    D[w] = K * E;
  });
  mP(() => {
    const D = i.current.virtualScrollerRef.current, z = p.current, K = {
      passive: !0
    };
    return D.addEventListener("scroll", F, K), z.addEventListener("scroll", _, K), () => {
      D.removeEventListener("scroll", F, K), z.removeEventListener("scroll", _, K);
    };
  }), S.useEffect(() => {
    m.current.style.setProperty(C, `${L}px`);
  }, [L, C]);
  const P = t.position === "vertical" ? yoe : boe;
  return /* @__PURE__ */ A.jsx(P, {
    ref: Vr(n, p),
    className: v.root,
    style: t.position === "vertical" && s.unstable_listView ? {
      height: "100%",
      top: 0
    } : void 0,
    tabIndex: -1,
    "aria-hidden": "true",
    onFocus: (D) => {
      D.target.blur();
    },
    children: /* @__PURE__ */ A.jsx("div", {
      ref: m,
      className: v.content
    })
  });
}), Coe = (e) => {
  const {
    classes: t,
    hasScrollX: n,
    hasPinnedRight: i,
    loadingOverlayVariant: s
  } = e;
  return yt({
    root: ["main", i && "main--hasPinnedRight", s === "skeleton" && "main--hasSkeletonLoadingOverlay"],
    scroller: ["virtualScroller", n && "virtualScroller--hasScrollX"]
  }, Gn, t);
}, Soe = _r("div", {
  name: "MuiDataGrid",
  slot: "VirtualScroller",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.virtualScroller, n.hasScrollX && t["virtualScroller--hasScrollX"]];
  }
})({
  position: "relative",
  height: "100%",
  flexGrow: 1,
  overflow: "scroll",
  scrollbarWidth: "none",
  display: "flex",
  flexDirection: "column",
  "&::-webkit-scrollbar": {
    display: "none"
    /* Safari and Chrome */
  },
  "@media print": {
    overflow: "hidden"
  },
  // See https://github.com/mui/mui-x/issues/10547
  zIndex: 0
}), woe = (e) => e.dimensions.rightPinnedWidth > 0;
function xoe(e) {
  const t = In(), n = Vt(), i = tt(t, Gee), s = tt(t, Uee), u = tt(t, woe), d = tt(t, Kee), p = zre(), m = {
    classes: n.classes,
    hasScrollX: s,
    hasPinnedRight: u,
    loadingOverlayVariant: p.loadingOverlayVariant
  }, v = Coe(m), y = Fre(), {
    getContainerProps: C,
    getScrollerProps: w,
    getContentProps: R,
    getRenderZoneProps: O,
    getScrollbarVerticalProps: E,
    getScrollbarHorizontalProps: k,
    getRows: L,
    getScrollAreaProps: F
  } = y, _ = L();
  return /* @__PURE__ */ A.jsxs(Kre, J({
    className: v.root
  }, C(), {
    ownerState: m,
    children: [/* @__PURE__ */ A.jsx(o0, J({
      scrollDirection: "left"
    }, F())), /* @__PURE__ */ A.jsx(o0, J({
      scrollDirection: "right"
    }, F())), /* @__PURE__ */ A.jsx(o0, J({
      scrollDirection: "up"
    }, F())), /* @__PURE__ */ A.jsx(o0, J({
      scrollDirection: "down"
    }, F())), /* @__PURE__ */ A.jsxs(Soe, J({
      className: v.scroller
    }, w(), {
      ownerState: m,
      children: [/* @__PURE__ */ A.jsxs(Qre, {
        children: [!n.unstable_listView && /* @__PURE__ */ A.jsx(Gre, {}), /* @__PURE__ */ A.jsx(n.slots.pinnedRows, {
          position: "top",
          virtualScroller: y
        })]
      }), /* @__PURE__ */ A.jsx(nH, J({}, p)), /* @__PURE__ */ A.jsx(roe, J({}, R(), {
        children: /* @__PURE__ */ A.jsxs(poe, J({}, O(), {
          children: [_, /* @__PURE__ */ A.jsx(n.slots.detailPanels, {
            virtualScroller: y
          })]
        }))
      })), d && /* @__PURE__ */ A.jsx(uoe, {
        rowsLength: _.length
      }), /* @__PURE__ */ A.jsx(eoe, {
        children: /* @__PURE__ */ A.jsx(n.slots.pinnedRows, {
          position: "bottom",
          virtualScroller: y
        })
      })]
    })), s && !n.unstable_listView && /* @__PURE__ */ A.jsx(pA, J({
      position: "horizontal"
    }, k())), i && /* @__PURE__ */ A.jsx(pA, J({
      position: "vertical"
    }, E())), e.children]
  }));
}
function Eoe() {
  var t;
  const e = Vt();
  return e.hideFooter ? null : /* @__PURE__ */ A.jsx(e.slots.footer, J(
    {},
    (t = e.slotProps) == null ? void 0 : t.footer
    /* FIXME: typing error */
  ));
}
let VO;
function Toe() {
  return VO === void 0 && document.createElement("div").focus({
    get preventScroll() {
      return VO = !0, !1;
    }
  }), VO;
}
function Roe({
  defaultSlots: e,
  slots: t
}) {
  const n = t;
  if (!n || Object.keys(n).length === 0)
    return e;
  const i = J({}, e);
  return Object.keys(n).forEach((s) => {
    const u = s;
    n[u] !== void 0 && (i[u] = n[u]);
  }), i;
}
function Ooe(e) {
  var s;
  if ((s = e.slotProps) != null && s.root)
    return e;
  const t = Object.keys(e);
  if (!t.some((u) => u.startsWith("aria-") || u.startsWith("data-")))
    return e;
  const n = {}, i = e.forwardedProps ?? {};
  for (let u = 0; u < t.length; u += 1) {
    const d = t[u];
    d.startsWith("aria-") || d.startsWith("data-") ? i[d] = e[d] : n[d] = e[d];
  }
  return n.forwardedProps = i, n;
}
function koe(e) {
  return S.useMemo(() => Ooe(e), [e]);
}
const Poe = [(e) => e.autoPageSize && e.autoHeight && ["MUI X: `<DataGrid autoPageSize={true} autoHeight={true} />` are not valid props.", "You cannot use both the `autoPageSize` and `autoHeight` props at the same time because `autoHeight` scales the height of the Data Grid according to the `pageSize`.", "", "Please remove one of these two props."].join(`
`) || void 0, (e) => e.paginationMode === "client" && e.paginationMeta != null && ['MUI X: Usage of the `paginationMeta` prop with client-side pagination (`paginationMode="client"`) has no effect.', '`paginationMeta` is only meant to be used with `paginationMode="server"`.'].join(`
`) || void 0, (e) => e.signature === gs.DataGrid && e.paginationMode === "client" && J2(e.rowCount) && ['MUI X: Usage of the `rowCount` prop with client side pagination (`paginationMode="client"`) has no effect.', '`rowCount` is only meant to be used with `paginationMode="server"`.'].join(`
`) || void 0, (e) => e.paginationMode === "server" && e.rowCount == null && !e.unstable_dataSource && ["MUI X: The `rowCount` prop must be passed using `paginationMode='server'`", "For more detail, see http://mui.com/components/data-grid/pagination/#index-based-pagination"].join(`
`) || void 0];
function Moe(e, t) {
  t.forEach((n) => {
    const i = n(e);
    i && el(i, "error");
  });
}
const Ioe = (e) => {
  const t = e.match(/^__row_group_by_columns_group_(.*)__$/);
  return t ? t[1] : null;
}, Doe = (e) => e === hz || Ioe(e) !== null, aH = (e, t) => {
  if (e)
    if (t) {
      if (e === jn.LEFT)
        return "right";
      if (e === jn.RIGHT)
        return "left";
    } else {
      if (e === jn.LEFT)
        return "left";
      if (e === jn.RIGHT)
        return "right";
    }
};
function GE(e, t, n, i) {
  const s = aH(n, t);
  return !s || i === void 0 || (e[s] = i), e;
}
const Noe = ["column", "row", "rowId", "rowNode", "align", "children", "colIndex", "width", "className", "style", "colSpan", "disableDragEvents", "isNotVisible", "pinnedOffset", "pinnedPosition", "showRightBorder", "showLeftBorder", "onClick", "onDoubleClick", "onMouseDown", "onMouseUp", "onMouseOver", "onKeyDown", "onKeyUp", "onDragEnter", "onDragOver"], Loe = ["changeReason", "unstable_updateValueOnRender"];
jn.LEFT + "", tf.LEFT, jn.RIGHT + "", tf.RIGHT, jn.NONE + "", jn.VIRTUAL + "";
const Foe = (e) => {
  const {
    align: t,
    showLeftBorder: n,
    showRightBorder: i,
    pinnedPosition: s,
    isEditable: u,
    isSelected: d,
    isSelectionMode: p,
    classes: m
  } = e, v = {
    root: ["cell", `cell--text${Be(t)}`, d && "selected", u && "cell--editable", n && "cell--withLeftBorder", i && "cell--withRightBorder", s === jn.LEFT && "cell--pinnedLeft", s === jn.RIGHT && "cell--pinnedRight", p && !u && "cell--selectionMode"]
  };
  return yt(v, Gn, m);
};
let hA = !1;
const sH = tr(function(t, n) {
  var Me, ht, xt, zt;
  const {
    column: i,
    row: s,
    rowId: u,
    rowNode: d,
    align: p,
    colIndex: m,
    width: v,
    className: y,
    style: C,
    colSpan: w,
    disableDragEvents: R,
    isNotVisible: O,
    pinnedOffset: E,
    pinnedPosition: k,
    showRightBorder: L,
    showLeftBorder: F,
    onClick: _,
    onDoubleClick: P,
    onMouseDown: D,
    onMouseUp: z,
    onMouseOver: K,
    onKeyDown: Q,
    onKeyUp: H,
    onDragEnter: I,
    onDragOver: U
  } = t, G = Xt(t, Noe), Y = Cs(), te = Vt(), B = ji(), W = i.field, q = pC(Y, moe, {
    rowId: u,
    field: W
  }), re = mM().hooks.useCellAggregationResult(u, W), X = q ? vr.Edit : vr.View, j = Y.current.getCellParamsForRow(u, W, s, {
    colDef: i,
    cellMode: X,
    rowNode: d,
    tabIndex: tt(Y, () => {
      const bt = sM(Y);
      return bt && bt.field === W && bt.id === u ? 0 : -1;
    }),
    hasFocus: tt(Y, () => {
      const bt = Sa(Y);
      return (bt == null ? void 0 : bt.id) === u && bt.field === W;
    })
  });
  j.api = Y.current, re && (j.value = re.value, j.formattedValue = i.valueFormatter ? i.valueFormatter(j.value, s, i, Y) : j.value);
  const ie = tt(Y, () => Y.current.unstable_applyPipeProcessors("isCellSelected", !1, {
    id: u,
    field: W
  })), fe = tt(Y, Qz), ce = tt(Y, Mre), {
    hasFocus: me,
    isEditable: ge = !1,
    value: de
  } = j, pe = i.type === "actions" && ((Me = i.getActions) == null ? void 0 : Me.call(i, Y.current.getRowParams(u)).some((bt) => !bt.props.disabled)), be = (X === "view" || !ge) && !pe ? j.tabIndex : -1, {
    classes: Ce,
    getCellClassName: Re
  } = te, we = [tt(Y, () => Y.current.unstable_applyPipeProcessors("cellClassName", [], {
    id: u,
    field: W
  }).filter(Boolean).join(" "))];
  i.cellClassName && we.push(typeof i.cellClassName == "function" ? i.cellClassName(j) : i.cellClassName), i.display === "flex" && we.push(ae["cell--flex"]), Re && we.push(Re(j));
  const _e = j.formattedValue ?? de, He = S.useRef(null), et = Vr(n, He), Ne = S.useRef(null), rt = te.cellSelection ?? !1, it = {
    align: p,
    showLeftBorder: F,
    showRightBorder: L,
    isEditable: ge,
    classes: te.classes,
    pinnedPosition: k,
    isSelected: ie,
    isSelectionMode: rt
  }, wt = Foe(it), gt = S.useCallback((bt) => (Ge) => {
    const Et = Y.current.getCellParams(u, W || "");
    Y.current.publishEvent(bt, Et, Ge), z && z(Ge);
  }, [Y, W, z, u]), ot = S.useCallback((bt) => (Ge) => {
    const Et = Y.current.getCellParams(u, W || "");
    Y.current.publishEvent(bt, Et, Ge), D && D(Ge);
  }, [Y, W, D, u]), jt = S.useCallback((bt, Ge) => (Et) => {
    if (!Y.current.getRow(u))
      return;
    const At = Y.current.getCellParams(u, W || "");
    Y.current.publishEvent(bt, At, Et), Ge && Ge(Et);
  }, [Y, W, u]), ct = ((ht = fe[u]) == null ? void 0 : ht[W]) ?? !1, Tt = ((xt = ce[u]) == null ? void 0 : xt[W]) ?? 1, Rt = S.useMemo(() => {
    if (O)
      return {
        padding: 0,
        opacity: 0,
        width: 0,
        height: 0,
        border: 0
      };
    const bt = GE(J({
      "--width": `${v}px`
    }, C), B, k, E), Ge = k === jn.LEFT, Et = k === jn.RIGHT;
    return Tt > 1 && (bt.height = `calc(var(--height) * ${Tt})`, bt.zIndex = 10, (Ge || Et) && (bt.zIndex = 40)), bt;
  }, [v, O, C, E, k, B, Tt]);
  if (S.useEffect(() => {
    if (!me || X === vr.Edit)
      return;
    const bt = ao(Y.current.rootElementRef.current);
    if (He.current && !He.current.contains(bt.activeElement)) {
      const Ge = He.current.querySelector('[tabindex="0"]'), Et = Ne.current || Ge || He.current;
      if (Toe())
        Et.focus({
          preventScroll: !0
        });
      else {
        const At = Y.current.getScrollPosition();
        Et.focus(), Y.current.scroll(At);
      }
    }
  }, [me, X, Y]), ct)
    return /* @__PURE__ */ A.jsx("div", {
      "data-colindex": m,
      role: "presentation",
      style: J({
        width: "var(--width)"
      }, Rt)
    });
  let Lt = G.onFocus;
  process.env.NODE_ENV === "test" && ((zt = te.experimentalFeatures) != null && zt.warnIfFocusStateIsNotSynced) && (Lt = (bt) => {
    const Ge = Sa(Y);
    if ((Ge == null ? void 0 : Ge.id) === u && Ge.field === W) {
      typeof G.onFocus == "function" && G.onFocus(bt);
      return;
    }
    hA || (console.warn([`MUI X: The cell with id=${u} and field=${W} received focus.`, `According to the state, the focus should be at id=${Ge == null ? void 0 : Ge.id}, field=${Ge == null ? void 0 : Ge.field}.`, "Not syncing the state may cause unwanted behaviors since the `cellFocusIn` event won't be fired.", "Call `fireEvent.mouseUp` before the `fireEvent.click` to sync the focus with the state."].join(`
`)), hA = !0);
  });
  let vt, Qe;
  if (q === null && i.renderCell && (vt = i.renderCell(j)), q !== null && i.renderEditCell) {
    const bt = Y.current.getRowWithUpdatedValues(u, i.field), Ge = Xt(q, Loe), Et = i.valueFormatter ? i.valueFormatter(q.value, bt, i, Y) : j.formattedValue, At = J({}, j, {
      row: bt,
      formattedValue: Et
    }, Ge);
    vt = i.renderEditCell(At), we.push(ae["cell--editing"]), we.push(Ce == null ? void 0 : Ce["cell--editing"]);
  }
  if (vt === void 0) {
    const bt = _e == null ? void 0 : _e.toString();
    vt = bt, Qe = bt;
  }
  /* @__PURE__ */ S.isValidElement(vt) && pe && (vt = /* @__PURE__ */ S.cloneElement(vt, {
    focusElementRef: Ne
  }));
  const Oe = R ? null : {
    onDragEnter: jt("cellDragEnter", I),
    onDragOver: jt("cellDragOver", U)
  };
  return /* @__PURE__ */ A.jsx("div", J({
    className: nt(wt.root, we, y),
    role: "gridcell",
    "data-field": W,
    "data-colindex": m,
    "aria-colindex": m + 1,
    "aria-colspan": w,
    "aria-rowspan": Tt,
    style: Rt,
    title: Qe,
    tabIndex: be,
    onClick: jt("cellClick", _),
    onDoubleClick: jt("cellDoubleClick", P),
    onMouseOver: jt("cellMouseOver", K),
    onMouseDown: ot("cellMouseDown"),
    onMouseUp: gt("cellMouseUp"),
    onKeyDown: jt("cellKeyDown", Q),
    onKeyUp: jt("cellKeyUp", H)
  }, Oe, G, {
    onFocus: Lt,
    ref: et,
    children: vt
  }));
});
process.env.NODE_ENV !== "production" && (sH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  align: a.oneOf(["center", "left", "right"]).isRequired,
  colIndex: a.number.isRequired,
  colSpan: a.number,
  column: a.object.isRequired,
  disableDragEvents: a.bool,
  isNotVisible: a.bool.isRequired,
  pinnedOffset: a.number,
  pinnedPosition: a.oneOf([0, 1, 2, 3]).isRequired,
  row: a.object.isRequired,
  rowId: a.oneOfType([a.number, a.string]).isRequired,
  rowNode: a.object.isRequired,
  showLeftBorder: a.bool.isRequired,
  showRightBorder: a.bool.isRequired,
  width: a.number.isRequired
});
const _oe = Jc(sH), Aoe = ["field", "type", "align", "width", "height", "empty", "style", "className"], mA = "1.3em", $oe = "1.2em", gA = [40, 80], joe = {
  number: [40, 60],
  string: [40, 80],
  date: [40, 60],
  dateTime: [60, 80],
  singleSelect: [40, 80]
}, zoe = (e) => {
  const {
    align: t,
    classes: n,
    empty: i
  } = e, s = {
    root: ["cell", "cellSkeleton", `cell--text${t ? Be(t) : "Left"}`, i && "cellEmpty"]
  };
  return yt(s, Gn, n);
}, Hoe = Ete(12345);
function lH(e) {
  const {
    field: t,
    type: n,
    align: i,
    width: s,
    height: u,
    empty: d = !1,
    style: p,
    className: m
  } = e, v = Xt(e, Aoe), C = {
    classes: Vt().classes,
    align: i,
    empty: d
  }, w = zoe(C), R = S.useMemo(() => {
    if (n === "boolean" || n === "actions")
      return {
        variant: "circular",
        width: mA,
        height: mA
      };
    const [E, k] = n ? joe[n] ?? gA : gA;
    return {
      variant: "text",
      width: `${Math.round(Hoe(E, k))}%`,
      height: $oe
    };
  }, [n]);
  return /* @__PURE__ */ A.jsx("div", J({
    "data-field": t,
    className: nt(w.root, m),
    style: J({
      height: u,
      maxWidth: s,
      minWidth: s
    }, p)
  }, v, {
    children: !d && /* @__PURE__ */ A.jsx(n2, J({}, R))
  }));
}
process.env.NODE_ENV !== "production" && (lH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  align: a.string,
  /**
   * If `true`, the cell will not display the skeleton but still reserve the cell space.
   * @default false
   */
  empty: a.bool,
  field: a.string,
  height: a.oneOfType([a.oneOf(["auto"]), a.number]),
  type: a.oneOf(["actions", "boolean", "custom", "date", "dateTime", "number", "singleSelect", "string"]),
  width: a.oneOfType([a.number, a.string])
});
const Voe = Jc(lH);
function Boe(e) {
  return e.vars ? e.vars.palette.TableCell.border : e.palette.mode === "light" ? bf($n(e.palette.divider, 1), 0.88) : yf($n(e.palette.divider, 1), 0.68);
}
const Uoe = 10, i0 = -5, gg = 1, vA = {
  width: 3,
  rx: 1.5,
  x: 10.5
}, Goe = "/* emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason */", Woe = (e) => e.dimensions.hasScrollX && (!e.dimensions.hasScrollY || e.dimensions.scrollbarSize === 0), qoe = Ue("div", {
  name: "MuiDataGrid",
  slot: "Root",
  overridesResolver: (e, t) => [
    // Root overrides
    t.root,
    {
      [`&.${ae.autoHeight}`]: t.autoHeight
    },
    {
      [`&.${ae.autosizing}`]: t.autosizing
    },
    {
      [`&.${ae["root--densityStandard"]}`]: t["root--densityStandard"]
    },
    {
      [`&.${ae["root--densityComfortable"]}`]: t["root--densityComfortable"]
    },
    {
      [`&.${ae["root--densityCompact"]}`]: t["root--densityCompact"]
    },
    {
      [`&.${ae["root--disableUserSelection"]}`]: t["root--disableUserSelection"]
    },
    {
      [`&.${ae["root--noToolbar"]}`]: t["root--noToolbar"]
    },
    {
      [`&.${ae.withVerticalBorder}`]: t.withVerticalBorder
    },
    // Child element overrides
    // - Only declare overrides here for class names that are not applied to `styled` components.
    // - For `styled` components, declare overrides in the component itself.
    {
      [`& .${ae.actionsCell}`]: t.actionsCell
    },
    {
      [`& .${ae.booleanCell}`]: t.booleanCell
    },
    {
      [`& .${ae.cell}`]: t.cell
    },
    {
      [`& .${ae["cell--editable"]}`]: t["cell--editable"]
    },
    {
      [`& .${ae["cell--editing"]}`]: t["cell--editing"]
    },
    {
      [`& .${ae["cell--flex"]}`]: t["cell--flex"]
    },
    {
      [`& .${ae["cell--pinnedLeft"]}`]: t["cell--pinnedLeft"]
    },
    {
      [`& .${ae["cell--pinnedRight"]}`]: t["cell--pinnedRight"]
    },
    {
      [`& .${ae["cell--rangeBottom"]}`]: t["cell--rangeBottom"]
    },
    {
      [`& .${ae["cell--rangeLeft"]}`]: t["cell--rangeLeft"]
    },
    {
      [`& .${ae["cell--rangeRight"]}`]: t["cell--rangeRight"]
    },
    {
      [`& .${ae["cell--rangeTop"]}`]: t["cell--rangeTop"]
    },
    {
      [`& .${ae["cell--selectionMode"]}`]: t["cell--selectionMode"]
    },
    {
      [`& .${ae["cell--textCenter"]}`]: t["cell--textCenter"]
    },
    {
      [`& .${ae["cell--textLeft"]}`]: t["cell--textLeft"]
    },
    {
      [`& .${ae["cell--textRight"]}`]: t["cell--textRight"]
    },
    {
      [`& .${ae["cell--withLeftBorder"]}`]: t["cell--withLeftBorder"]
    },
    {
      [`& .${ae["cell--withRightBorder"]}`]: t["cell--withRightBorder"]
    },
    {
      [`& .${ae.cellCheckbox}`]: t.cellCheckbox
    },
    {
      [`& .${ae.cellEmpty}`]: t.cellEmpty
    },
    {
      [`& .${ae.cellOffsetLeft}`]: t.cellOffsetLeft
    },
    {
      [`& .${ae.cellSkeleton}`]: t.cellSkeleton
    },
    {
      [`& .${ae.checkboxInput}`]: t.checkboxInput
    },
    {
      [`& .${ae.columnHeader}`]: t.columnHeader
    },
    {
      [`& .${ae["columnHeader--alignCenter"]}`]: t["columnHeader--alignCenter"]
    },
    {
      [`& .${ae["columnHeader--alignLeft"]}`]: t["columnHeader--alignLeft"]
    },
    {
      [`& .${ae["columnHeader--alignRight"]}`]: t["columnHeader--alignRight"]
    },
    {
      [`& .${ae["columnHeader--dragging"]}`]: t["columnHeader--dragging"]
    },
    {
      [`& .${ae["columnHeader--emptyGroup"]}`]: t["columnHeader--emptyGroup"]
    },
    {
      [`& .${ae["columnHeader--filledGroup"]}`]: t["columnHeader--filledGroup"]
    },
    {
      [`& .${ae["columnHeader--filtered"]}`]: t["columnHeader--filtered"]
    },
    {
      [`& .${ae["columnHeader--last"]}`]: t["columnHeader--last"]
    },
    {
      [`& .${ae["columnHeader--lastUnpinned"]}`]: t["columnHeader--lastUnpinned"]
    },
    {
      [`& .${ae["columnHeader--moving"]}`]: t["columnHeader--moving"]
    },
    {
      [`& .${ae["columnHeader--numeric"]}`]: t["columnHeader--numeric"]
    },
    {
      [`& .${ae["columnHeader--pinnedLeft"]}`]: t["columnHeader--pinnedLeft"]
    },
    {
      [`& .${ae["columnHeader--pinnedRight"]}`]: t["columnHeader--pinnedRight"]
    },
    {
      [`& .${ae["columnHeader--siblingFocused"]}`]: t["columnHeader--siblingFocused"]
    },
    {
      [`& .${ae["columnHeader--sortable"]}`]: t["columnHeader--sortable"]
    },
    {
      [`& .${ae["columnHeader--sorted"]}`]: t["columnHeader--sorted"]
    },
    {
      [`& .${ae["columnHeader--withLeftBorder"]}`]: t["columnHeader--withLeftBorder"]
    },
    {
      [`& .${ae["columnHeader--withRightBorder"]}`]: t["columnHeader--withRightBorder"]
    },
    {
      [`& .${ae.columnHeaderCheckbox}`]: t.columnHeaderCheckbox
    },
    {
      [`& .${ae.columnHeaderDraggableContainer}`]: t.columnHeaderDraggableContainer
    },
    {
      [`& .${ae.columnHeaderTitleContainer}`]: t.columnHeaderTitleContainer
    },
    {
      [`& .${ae.columnHeaderTitleContainerContent}`]: t.columnHeaderTitleContainerContent
    },
    {
      [`& .${ae.columnSeparator}`]: t.columnSeparator
    },
    {
      [`& .${ae["columnSeparator--resizable"]}`]: t["columnSeparator--resizable"]
    },
    {
      [`& .${ae["columnSeparator--resizing"]}`]: t["columnSeparator--resizing"]
    },
    {
      [`& .${ae["columnSeparator--sideLeft"]}`]: t["columnSeparator--sideLeft"]
    },
    {
      [`& .${ae["columnSeparator--sideRight"]}`]: t["columnSeparator--sideRight"]
    },
    {
      [`& .${ae["container--bottom"]}`]: t["container--bottom"]
    },
    {
      [`& .${ae["container--top"]}`]: t["container--top"]
    },
    {
      [`& .${ae.detailPanelToggleCell}`]: t.detailPanelToggleCell
    },
    {
      [`& .${ae["detailPanelToggleCell--expanded"]}`]: t["detailPanelToggleCell--expanded"]
    },
    {
      [`& .${ae.editBooleanCell}`]: t.editBooleanCell
    },
    {
      [`& .${ae.filterIcon}`]: t.filterIcon
    },
    {
      [`& .${ae["filler--borderBottom"]}`]: t["filler--borderBottom"]
    },
    {
      [`& .${ae["filler--pinnedLeft"]}`]: t["filler--pinnedLeft"]
    },
    {
      [`& .${ae["filler--pinnedRight"]}`]: t["filler--pinnedRight"]
    },
    {
      [`& .${ae.groupingCriteriaCell}`]: t.groupingCriteriaCell
    },
    {
      [`& .${ae.groupingCriteriaCellLoadingContainer}`]: t.groupingCriteriaCellLoadingContainer
    },
    {
      [`& .${ae.groupingCriteriaCellToggle}`]: t.groupingCriteriaCellToggle
    },
    {
      [`& .${ae.headerFilterRow}`]: t.headerFilterRow
    },
    {
      [`& .${ae.iconSeparator}`]: t.iconSeparator
    },
    {
      [`& .${ae.menuIcon}`]: t.menuIcon
    },
    {
      [`& .${ae.menuIconButton}`]: t.menuIconButton
    },
    {
      [`& .${ae.menuList}`]: t.menuList
    },
    {
      [`& .${ae.menuOpen}`]: t.menuOpen
    },
    {
      [`& .${ae.overlayWrapperInner}`]: t.overlayWrapperInner
    },
    {
      [`& .${ae.pinnedRows}`]: t.pinnedRows
    },
    {
      [`& .${ae["pinnedRows--bottom"]}`]: t["pinnedRows--bottom"]
    },
    {
      [`& .${ae["pinnedRows--top"]}`]: t["pinnedRows--top"]
    },
    {
      [`& .${ae.row}`]: t.row
    },
    {
      [`& .${ae["row--borderBottom"]}`]: t["row--borderBottom"]
    },
    {
      [`& .${ae["row--detailPanelExpanded"]}`]: t["row--detailPanelExpanded"]
    },
    {
      [`& .${ae["row--dragging"]}`]: t["row--dragging"]
    },
    {
      [`& .${ae["row--dynamicHeight"]}`]: t["row--dynamicHeight"]
    },
    {
      [`& .${ae["row--editable"]}`]: t["row--editable"]
    },
    {
      [`& .${ae["row--editing"]}`]: t["row--editing"]
    },
    {
      [`& .${ae["row--firstVisible"]}`]: t["row--firstVisible"]
    },
    {
      [`& .${ae["row--lastVisible"]}`]: t["row--lastVisible"]
    },
    {
      [`& .${ae.rowReorderCell}`]: t.rowReorderCell
    },
    {
      [`& .${ae["rowReorderCell--draggable"]}`]: t["rowReorderCell--draggable"]
    },
    {
      [`& .${ae.rowReorderCellContainer}`]: t.rowReorderCellContainer
    },
    {
      [`& .${ae.rowReorderCellPlaceholder}`]: t.rowReorderCellPlaceholder
    },
    {
      [`& .${ae.rowSkeleton}`]: t.rowSkeleton
    },
    {
      [`& .${ae.scrollbar}`]: t.scrollbar
    },
    {
      [`& .${ae["scrollbar--horizontal"]}`]: t["scrollbar--horizontal"]
    },
    {
      [`& .${ae["scrollbar--vertical"]}`]: t["scrollbar--vertical"]
    },
    {
      [`& .${ae.scrollbarFiller}`]: t.scrollbarFiller
    },
    {
      [`& .${ae["scrollbarFiller--borderBottom"]}`]: t["scrollbarFiller--borderBottom"]
    },
    {
      [`& .${ae["scrollbarFiller--borderTop"]}`]: t["scrollbarFiller--borderTop"]
    },
    {
      [`& .${ae["scrollbarFiller--header"]}`]: t["scrollbarFiller--header"]
    },
    {
      [`& .${ae["scrollbarFiller--pinnedRight"]}`]: t["scrollbarFiller--pinnedRight"]
    },
    {
      [`& .${ae.sortIcon}`]: t.sortIcon
    },
    {
      [`& .${ae.treeDataGroupingCell}`]: t.treeDataGroupingCell
    },
    {
      [`& .${ae.treeDataGroupingCellLoadingContainer}`]: t.treeDataGroupingCellLoadingContainer
    },
    {
      [`& .${ae.treeDataGroupingCellToggle}`]: t.treeDataGroupingCellToggle
    },
    {
      [`& .${ae.withBorderColor}`]: t.withBorderColor
    }
  ]
})(({
  theme: e
}) => {
  var Q, H;
  const t = Cs(), n = tt(t, Woe), i = Boe(e), s = e.shape.borderRadius, u = e.vars ? e.vars.palette.background.default : ((Q = e.mixins.MuiDataGrid) == null ? void 0 : Q.containerBackground) ?? e.palette.background.default, d = ((H = e.mixins.MuiDataGrid) == null ? void 0 : H.pinnedBackground) ?? u, p = e.vars ? `rgba(${e.vars.palette.background.defaultChannel} / ${e.vars.palette.action.disabledOpacity})` : $n(e.palette.background.default, e.palette.action.disabledOpacity), m = (e.vars || e).palette.action.hoverOpacity, v = (e.vars || e).palette.action.hover, y = (e.vars || e).palette.action.selectedOpacity, C = e.vars ? `calc(${m} + ${y})` : m + y, w = e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / ${y})` : $n(e.palette.primary.main, y), R = e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / ${C})` : $n(e.palette.primary.main, C), O = e.vars ? Xoe : Koe, E = (I) => ({
    [`& .${ae["cell--pinnedLeft"]}, & .${ae["cell--pinnedRight"]}`]: {
      backgroundColor: I,
      "&.Mui-selected": {
        backgroundColor: O(I, w, y),
        "&:hover": {
          backgroundColor: O(I, w, C)
        }
      }
    }
  }), k = O(d, v, m), L = E(k), F = O(d, w, y), _ = E(F), P = O(d, R, C), D = E(P), z = {
    backgroundColor: w,
    "&:hover": {
      backgroundColor: R,
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: w
      }
    }
  };
  return J({
    "--unstable_DataGrid-radius": typeof s == "number" ? `${s}px` : s,
    "--unstable_DataGrid-headWeight": e.typography.fontWeightMedium,
    "--unstable_DataGrid-overlayBackground": p,
    "--DataGrid-containerBackground": u,
    "--DataGrid-pinnedBackground": d,
    "--DataGrid-rowBorderColor": i,
    "--DataGrid-cellOffsetMultiplier": 2,
    "--DataGrid-width": "0px",
    "--DataGrid-hasScrollX": "0",
    "--DataGrid-hasScrollY": "0",
    "--DataGrid-scrollbarSize": "10px",
    "--DataGrid-rowWidth": "0px",
    "--DataGrid-columnsTotalWidth": "0px",
    "--DataGrid-leftPinnedWidth": "0px",
    "--DataGrid-rightPinnedWidth": "0px",
    "--DataGrid-headerHeight": "0px",
    "--DataGrid-headersTotalHeight": "0px",
    "--DataGrid-topContainerHeight": "0px",
    "--DataGrid-bottomContainerHeight": "0px",
    flex: 1,
    boxSizing: "border-box",
    position: "relative",
    borderWidth: "1px",
    borderStyle: "solid",
    borderColor: i,
    borderRadius: "var(--unstable_DataGrid-radius)",
    color: (e.vars || e).palette.text.primary
  }, e.typography.body2, {
    outline: "none",
    height: "100%",
    display: "flex",
    minWidth: 0,
    // See https://github.com/mui/mui-x/issues/8547
    minHeight: 0,
    flexDirection: "column",
    overflow: "hidden",
    overflowAnchor: "none",
    // Keep the same scrolling position
    transform: "translate(0, 0)",
    // Create a stacking context to keep scrollbars from showing on top
    [`.${ae.main} > *:first-child${Goe}`]: {
      borderTopLeftRadius: "var(--unstable_DataGrid-radius)",
      borderTopRightRadius: "var(--unstable_DataGrid-radius)"
    },
    [`&.${ae.autoHeight}`]: {
      height: "auto"
    },
    [`&.${ae.autosizing}`]: {
      [`& .${ae.columnHeaderTitleContainerContent} > *`]: {
        overflow: "visible !important"
      },
      "@media (hover: hover)": {
        [`& .${ae.menuIcon}`]: {
          width: "0 !important",
          visibility: "hidden !important"
        }
      },
      [`& .${ae.cell}`]: {
        overflow: "visible !important",
        whiteSpace: "nowrap",
        minWidth: "max-content !important",
        maxWidth: "max-content !important"
      },
      [`& .${ae.groupingCriteriaCell}`]: {
        width: "unset"
      },
      [`& .${ae.treeDataGroupingCell}`]: {
        width: "unset"
      }
    },
    [`& .${ae.columnHeader}, & .${ae.cell}`]: {
      WebkitTapHighlightColor: "transparent",
      padding: "0 10px",
      boxSizing: "border-box"
    },
    [`& .${ae.columnHeader}:focus-within, & .${ae.cell}:focus-within`]: {
      outline: `solid ${e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / 0.5)` : $n(e.palette.primary.main, 0.5)} ${gg}px`,
      outlineOffset: gg * -1
    },
    [`& .${ae.columnHeader}:focus, & .${ae.cell}:focus`]: {
      outline: `solid ${e.palette.primary.main} ${gg}px`,
      outlineOffset: gg * -1
    },
    // Hide the column separator when:
    // - the column is focused and has an outline
    // - the next column is focused and has an outline
    // - the column has a left or right border
    // - the next column is pinned right and has a left border
    [`& .${ae.columnHeader}:focus,
      & .${ae["columnHeader--withLeftBorder"]},
      & .${ae["columnHeader--withRightBorder"]},
      & .${ae["columnHeader--siblingFocused"]},
      & .${ae["virtualScroller--hasScrollX"]} .${ae["columnHeader--lastUnpinned"]},
      & .${ae["virtualScroller--hasScrollX"]} .${ae["columnHeader--last"]}
      `]: {
      [`& .${ae.columnSeparator}`]: {
        opacity: 0
      },
      // Show resizable separators at all times on touch devices
      "@media (hover: none)": {
        [`& .${ae["columnSeparator--resizable"]}`]: {
          opacity: 1
        }
      },
      [`& .${ae["columnSeparator--resizable"]}:hover`]: {
        opacity: 1
      }
    },
    [`&.${ae["root--noToolbar"]} [aria-rowindex="1"] [aria-colindex="1"]`]: {
      borderTopLeftRadius: "calc(var(--unstable_DataGrid-radius) - 1px)"
    },
    [`&.${ae["root--noToolbar"]} [aria-rowindex="1"] .${ae["columnHeader--last"]}`]: {
      borderTopRightRadius: n ? "calc(var(--unstable_DataGrid-radius) - 1px)" : void 0
    },
    [`& .${ae.columnHeaderCheckbox}, & .${ae.cellCheckbox}`]: {
      padding: 0,
      justifyContent: "center",
      alignItems: "center"
    },
    [`& .${ae.columnHeader}`]: {
      position: "relative",
      display: "flex",
      alignItems: "center"
    },
    [`& .${ae["virtualScroller--hasScrollX"]} .${ae["columnHeader--last"]}`]: {
      overflow: "hidden"
    },
    [`& .${ae["columnHeader--sorted"]} .${ae.iconButtonContainer}, & .${ae["columnHeader--filtered"]} .${ae.iconButtonContainer}`]: {
      visibility: "visible",
      width: "auto"
    },
    [`& .${ae.columnHeader}:not(.${ae["columnHeader--sorted"]}) .${ae.sortButton}`]: {
      opacity: 0,
      transition: e.transitions.create(["opacity"], {
        duration: e.transitions.duration.shorter
      })
    },
    [`& .${ae.columnHeaderTitleContainer}`]: {
      display: "flex",
      alignItems: "center",
      gap: e.spacing(0.25),
      minWidth: 0,
      flex: 1,
      whiteSpace: "nowrap",
      overflow: "hidden"
    },
    [`& .${ae.columnHeaderTitleContainerContent}`]: {
      overflow: "hidden",
      display: "flex",
      alignItems: "center"
    },
    [`& .${ae["columnHeader--filledGroup"]} .${ae.columnHeaderTitleContainer}`]: {
      borderBottomWidth: "1px",
      borderBottomStyle: "solid",
      boxSizing: "border-box"
    },
    [`& .${ae.sortIcon}, & .${ae.filterIcon}`]: {
      fontSize: "inherit"
    },
    [`& .${ae["columnHeader--sortable"]}`]: {
      cursor: "pointer"
    },
    [`& .${ae["columnHeader--alignCenter"]} .${ae.columnHeaderTitleContainer}`]: {
      justifyContent: "center"
    },
    [`& .${ae["columnHeader--alignRight"]} .${ae.columnHeaderDraggableContainer}, & .${ae["columnHeader--alignRight"]} .${ae.columnHeaderTitleContainer}`]: {
      flexDirection: "row-reverse"
    },
    [`& .${ae["columnHeader--alignCenter"]} .${ae.menuIcon}`]: {
      marginLeft: "auto"
    },
    [`& .${ae["columnHeader--alignRight"]} .${ae.menuIcon}`]: {
      marginRight: "auto",
      marginLeft: -5
    },
    [`& .${ae["columnHeader--moving"]}`]: {
      backgroundColor: (e.vars || e).palette.action.hover
    },
    [`& .${ae["columnHeader--pinnedLeft"]}, & .${ae["columnHeader--pinnedRight"]}`]: {
      position: "sticky",
      zIndex: 40,
      // Should be above the column separator
      background: "var(--DataGrid-pinnedBackground)"
    },
    [`& .${ae.columnSeparator}`]: {
      position: "absolute",
      overflow: "hidden",
      zIndex: 30,
      display: "flex",
      flexDirection: "column",
      justifyContent: "center",
      alignItems: "center",
      maxWidth: Uoe,
      color: i
    },
    [`& .${ae.columnHeaders}`]: {
      width: "var(--DataGrid-rowWidth)"
    },
    "@media (hover: hover)": {
      [`& .${ae.columnHeader}:hover`]: {
        [`& .${ae.menuIcon}`]: {
          width: "auto",
          visibility: "visible"
        },
        [`& .${ae.iconButtonContainer}`]: {
          visibility: "visible",
          width: "auto"
        }
      },
      [`& .${ae.columnHeader}:not(.${ae["columnHeader--sorted"]}):hover .${ae.sortButton}`]: {
        opacity: 0.5
      }
    },
    "@media (hover: none)": {
      [`& .${ae.columnHeader} .${ae.menuIcon}`]: {
        width: "auto",
        visibility: "visible"
      },
      [`& .${ae.columnHeader}:focus,
        & .${ae["columnHeader--siblingFocused"]}`]: {
        [`.${ae["columnSeparator--resizable"]}`]: {
          color: (e.vars || e).palette.primary.main
        }
      }
    },
    [`& .${ae["columnSeparator--sideLeft"]}`]: {
      left: i0
    },
    [`& .${ae["columnSeparator--sideRight"]}`]: {
      right: i0
    },
    [`& .${ae["columnHeader--withRightBorder"]} .${ae["columnSeparator--sideLeft"]}`]: {
      left: i0 - 0.5
    },
    [`& .${ae["columnHeader--withRightBorder"]} .${ae["columnSeparator--sideRight"]}`]: {
      right: i0 - 0.5
    },
    [`& .${ae["columnSeparator--resizable"]}`]: {
      cursor: "col-resize",
      touchAction: "none",
      [`&.${ae["columnSeparator--resizing"]}`]: {
        color: (e.vars || e).palette.primary.main
      },
      // Always appear as draggable on touch devices
      "@media (hover: none)": {
        [`& .${ae.iconSeparator} rect`]: vA
      },
      "@media (hover: hover)": {
        "&:hover": {
          color: (e.vars || e).palette.primary.main,
          [`& .${ae.iconSeparator} rect`]: vA
        }
      },
      "& svg": {
        pointerEvents: "none"
      }
    },
    [`& .${ae.iconSeparator}`]: {
      color: "inherit",
      transition: e.transitions.create(["color", "width"], {
        duration: e.transitions.duration.shortest
      })
    },
    [`& .${ae.menuIcon}`]: {
      width: 0,
      visibility: "hidden",
      fontSize: 20,
      marginRight: -5,
      display: "flex",
      alignItems: "center"
    },
    [`.${ae.menuOpen}`]: {
      visibility: "visible",
      width: "auto"
    },
    [`& .${ae.headerFilterRow}`]: {
      [`& .${ae.columnHeader}`]: {
        boxSizing: "border-box",
        borderBottom: "1px solid var(--DataGrid-rowBorderColor)"
      }
    },
    /* Bottom border of the top-container */
    [`& .${ae["row--borderBottom"]} .${ae.columnHeader},
      & .${ae["row--borderBottom"]} .${ae.filler},
      & .${ae["row--borderBottom"]} .${ae.scrollbarFiller}`]: {
      borderBottom: "1px solid var(--DataGrid-rowBorderColor)"
    },
    [`& .${ae["row--borderBottom"]} .${ae.cell}`]: {
      borderBottom: "1px solid var(--rowBorderColor)"
    },
    /* Row styles */
    [`.${ae.row}`]: {
      display: "flex",
      width: "var(--DataGrid-rowWidth)",
      breakInside: "avoid",
      // Avoid the row to be broken in two different print pages.
      "--rowBorderColor": "var(--DataGrid-rowBorderColor)",
      [`&.${ae["row--firstVisible"]}`]: {
        "--rowBorderColor": "transparent"
      },
      "&:hover": {
        backgroundColor: (e.vars || e).palette.action.hover,
        // Reset on touch devices, it doesn't add specificity
        "@media (hover: none)": {
          backgroundColor: "transparent"
        }
      },
      [`&.${ae.rowSkeleton}:hover`]: {
        backgroundColor: "transparent"
      },
      "&.Mui-selected": z
    },
    [`& .${ae["container--top"]}, & .${ae["container--bottom"]}`]: {
      "[role=row]": {
        background: "var(--DataGrid-containerBackground)"
      }
    },
    /* Cell styles */
    [`& .${ae.cell}`]: {
      flex: "0 0 auto",
      height: "var(--height)",
      width: "var(--width)",
      lineHeight: "calc(var(--height) - 1px)",
      // -1px for the border
      boxSizing: "border-box",
      borderTop: "1px solid var(--rowBorderColor)",
      overflow: "hidden",
      whiteSpace: "nowrap",
      textOverflow: "ellipsis",
      "&.Mui-selected": z
    },
    [`& .${ae["virtualScrollerContent--overflowed"]} .${ae["row--lastVisible"]} .${ae.cell}`]: {
      borderTopColor: "transparent"
    },
    [`& .${ae["pinnedRows--top"]} :first-of-type`]: {
      [`& .${ae.cell}, .${ae.scrollbarFiller}`]: {
        borderTop: "none"
      }
    },
    [`&.${ae["root--disableUserSelection"]}`]: {
      userSelect: "none"
    },
    [`& .${ae["row--dynamicHeight"]} > .${ae.cell}`]: {
      whiteSpace: "initial",
      lineHeight: "inherit"
    },
    [`& .${ae.cellEmpty}`]: {
      flex: 1,
      padding: 0,
      height: "unset"
    },
    [`& .${ae.cell}.${ae["cell--selectionMode"]}`]: {
      cursor: "default"
    },
    [`& .${ae.cell}.${ae["cell--editing"]}`]: {
      padding: 1,
      display: "flex",
      boxShadow: e.shadows[2],
      backgroundColor: (e.vars || e).palette.background.paper,
      "&:focus-within": {
        outline: `${gg}px solid ${(e.vars || e).palette.primary.main}`,
        outlineOffset: gg * -1
      }
    },
    [`& .${ae["row--editing"]}`]: {
      boxShadow: e.shadows[2]
    },
    [`& .${ae["row--editing"]} .${ae.cell}`]: {
      boxShadow: e.shadows[0],
      backgroundColor: (e.vars || e).palette.background.paper
    },
    [`& .${ae.editBooleanCell}`]: {
      display: "flex",
      height: "100%",
      width: "100%",
      alignItems: "center",
      justifyContent: "center"
    },
    [`& .${ae.booleanCell}[data-value="true"]`]: {
      color: (e.vars || e).palette.text.secondary
    },
    [`& .${ae.booleanCell}[data-value="false"]`]: {
      color: (e.vars || e).palette.text.disabled
    },
    [`& .${ae.actionsCell}`]: {
      display: "inline-flex",
      alignItems: "center",
      gridGap: e.spacing(1)
    },
    [`& .${ae.rowReorderCell}`]: {
      display: "inline-flex",
      flex: 1,
      alignItems: "center",
      justifyContent: "center",
      opacity: (e.vars || e).palette.action.disabledOpacity
    },
    [`& .${ae["rowReorderCell--draggable"]}`]: {
      cursor: "move",
      opacity: 1
    },
    [`& .${ae.rowReorderCellContainer}`]: {
      padding: 0,
      display: "flex",
      alignItems: "stretch"
    },
    [`.${ae.withBorderColor}`]: {
      borderColor: i
    },
    [`& .${ae["cell--withLeftBorder"]}, & .${ae["columnHeader--withLeftBorder"]}`]: {
      borderLeftColor: "var(--DataGrid-rowBorderColor)",
      borderLeftWidth: "1px",
      borderLeftStyle: "solid"
    },
    [`& .${ae["cell--withRightBorder"]}, & .${ae["columnHeader--withRightBorder"]}`]: {
      borderRightColor: "var(--DataGrid-rowBorderColor)",
      borderRightWidth: "1px",
      borderRightStyle: "solid"
    },
    [`& .${ae["cell--flex"]}`]: {
      display: "flex",
      alignItems: "center",
      lineHeight: "inherit"
    },
    [`& .${ae["cell--textLeft"]}`]: {
      textAlign: "left",
      justifyContent: "flex-start"
    },
    [`& .${ae["cell--textRight"]}`]: {
      textAlign: "right",
      justifyContent: "flex-end"
    },
    [`& .${ae["cell--textCenter"]}`]: {
      textAlign: "center",
      justifyContent: "center"
    },
    [`& .${ae["cell--pinnedLeft"]}, & .${ae["cell--pinnedRight"]}`]: {
      position: "sticky",
      zIndex: 30,
      background: "var(--DataGrid-pinnedBackground)",
      "&.Mui-selected": {
        backgroundColor: F
      }
    },
    [`& .${ae.virtualScrollerContent} .${ae.row}`]: {
      "&:hover": L,
      "&.Mui-selected": _,
      "&.Mui-selected:hover": D
    },
    [`& .${ae.cellOffsetLeft}`]: {
      flex: "0 0 auto",
      display: "inline-block"
    },
    [`& .${ae.cellSkeleton}`]: {
      flex: "0 0 auto",
      height: "100%",
      display: "inline-flex",
      alignItems: "center"
    },
    [`& .${ae.columnHeaderDraggableContainer}`]: {
      display: "flex",
      width: "100%",
      height: "100%"
    },
    [`& .${ae.rowReorderCellPlaceholder}`]: {
      display: "none"
    },
    [`& .${ae["columnHeader--dragging"]}, & .${ae["row--dragging"]}`]: {
      background: (e.vars || e).palette.background.paper,
      padding: "0 12px",
      borderRadius: "var(--unstable_DataGrid-radius)",
      opacity: (e.vars || e).palette.action.disabledOpacity
    },
    [`& .${ae["row--dragging"]}`]: {
      background: (e.vars || e).palette.background.paper,
      padding: "0 12px",
      borderRadius: "var(--unstable_DataGrid-radius)",
      opacity: (e.vars || e).palette.action.disabledOpacity,
      [`& .${ae.rowReorderCellPlaceholder}`]: {
        display: "flex"
      }
    },
    [`& .${ae.treeDataGroupingCell}`]: {
      display: "flex",
      alignItems: "center",
      width: "100%"
    },
    [`& .${ae.treeDataGroupingCellToggle}`]: {
      flex: "0 0 28px",
      alignSelf: "stretch",
      marginRight: e.spacing(2)
    },
    [`& .${ae.treeDataGroupingCellLoadingContainer}, .${ae.groupingCriteriaCellLoadingContainer}`]: {
      display: "flex",
      alignItems: "center",
      justifyContent: "center",
      height: "100%"
    },
    [`& .${ae.groupingCriteriaCell}`]: {
      display: "flex",
      alignItems: "center",
      width: "100%"
    },
    [`& .${ae.groupingCriteriaCellToggle}`]: {
      flex: "0 0 28px",
      alignSelf: "stretch",
      marginRight: e.spacing(2)
    },
    /* ScrollbarFiller styles */
    [`.${ae.scrollbarFiller}`]: {
      minWidth: "calc(var(--DataGrid-hasScrollY) * var(--DataGrid-scrollbarSize))",
      alignSelf: "stretch",
      [`&.${ae["scrollbarFiller--borderTop"]}`]: {
        borderTop: "1px solid var(--DataGrid-rowBorderColor)"
      },
      [`&.${ae["scrollbarFiller--borderBottom"]}`]: {
        borderBottom: "1px solid var(--DataGrid-rowBorderColor)"
      },
      [`&.${ae["scrollbarFiller--pinnedRight"]}`]: {
        backgroundColor: "var(--DataGrid-pinnedBackground)",
        position: "sticky",
        right: 0
      }
    },
    [`& .${ae.filler}`]: {
      flex: "1 0 auto"
    },
    [`& .${ae["filler--borderBottom"]}`]: {
      borderBottom: "1px solid var(--DataGrid-rowBorderColor)"
    },
    /* Hide grid rows, row filler, and vertical scrollbar when skeleton overlay is visible */
    [`& .${ae["main--hasSkeletonLoadingOverlay"]}`]: {
      [`& .${ae.virtualScrollerContent}`]: {
        // We use visibility hidden so that the virtual scroller content retains its height.
        // Position fixed is used to remove the virtual scroller content from the flow.
        // https://github.com/mui/mui-x/issues/14061
        position: "fixed",
        visibility: "hidden"
      },
      [`& .${ae["scrollbar--vertical"]}, & .${ae.pinnedRows}, & .${ae.virtualScroller} > .${ae.filler}`]: {
        display: "none"
      }
    }
  });
});
function Koe(e, t, n, i = 1) {
  const s = (m, v) => Math.round((m ** (1 / i) * (1 - n) + v ** (1 / i) * n) ** i), u = Uu(e), d = Uu(t), p = [s(u.values[0], d.values[0]), s(u.values[1], d.values[1]), s(u.values[2], d.values[2])];
  return kC({
    type: "rgb",
    values: p
  });
}
const Yoe = (e) => `rgb(from ${e} r g b / 1)`;
function Xoe(e, t, n) {
  return `color-mix(in srgb,${e}, ${Yoe(t)} calc(${n} * 100%))`;
}
const Qoe = () => () => {
}, Joe = () => !1, Zoe = () => !0, eie = () => YP.useSyncExternalStore(Qoe, Joe, Zoe);
function tie() {
  var u, d;
  const e = In(), t = tt(e, tl), n = Vt(), i = tt(e, gC), s = e.current.unstable_applyPipeProcessors("preferencePanel", null, i.openedPanelValue ?? fh.filters);
  return /* @__PURE__ */ A.jsx(n.slots.panel, J({
    as: n.slots.basePopper,
    open: t.length > 0 && i.open,
    id: i.panelId,
    "aria-labelledby": i.labelId
  }, (u = n.slotProps) == null ? void 0 : u.panel, (d = n.slotProps) == null ? void 0 : d.basePopper, {
    children: s
  }));
}
function nie() {
  var t;
  const e = Vt();
  return /* @__PURE__ */ A.jsxs(S.Fragment, {
    children: [/* @__PURE__ */ A.jsx(tie, {}), e.slots.toolbar && /* @__PURE__ */ A.jsx(e.slots.toolbar, J({}, (t = e.slotProps) == null ? void 0 : t.toolbar))]
  });
}
const rie = ["className", "children"], oie = (e, t) => {
  const {
    autoHeight: n,
    classes: i,
    showCellVerticalBorder: s
  } = e, u = {
    root: ["root", n && "autoHeight", `root--density${Be(t)}`, e.slots.toolbar === null && "root--noToolbar", "withBorderColor", s && "withVerticalBorder"]
  };
  return yt(u, Gn, i);
}, uH = tr(function(t, n) {
  const i = Vt(), {
    className: s,
    children: u
  } = t, d = Xt(t, rie), p = Cs(), m = tt(p, xg), v = p.current.rootElementRef, y = S.useCallback((E) => {
    E !== null && p.current.publishEvent("rootMount", E);
  }, [p]), C = Vr(v, n, y), w = i, R = oie(w, m);
  return eie() ? null : /* @__PURE__ */ A.jsxs(qoe, J({
    className: nt(R.root, s),
    ownerState: w
  }, d, {
    ref: C,
    children: [/* @__PURE__ */ A.jsx(nie, {}), /* @__PURE__ */ A.jsx(xoe, {
      children: u
    }), /* @__PURE__ */ A.jsx(Eoe, {})]
  }));
});
process.env.NODE_ENV !== "production" && (uH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
const iie = Jc(uH), aie = ["className"], sie = (e) => {
  const {
    classes: t
  } = e;
  return yt({
    root: ["footerContainer", "withBorderColor"]
  }, Gn, t);
}, lie = _r("div", {
  name: "MuiDataGrid",
  slot: "FooterContainer",
  overridesResolver: (e, t) => t.footerContainer
})({
  display: "flex",
  justifyContent: "space-between",
  alignItems: "center",
  minHeight: 52,
  borderTop: "1px solid"
}), cH = tr(function(t, n) {
  const {
    className: i
  } = t, s = Xt(t, aie), u = Vt(), d = sie(u);
  return /* @__PURE__ */ A.jsx(lie, J({
    className: nt(d.root, i),
    ownerState: u
  }, s, {
    ref: n
  }));
});
process.env.NODE_ENV !== "production" && (cH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
const uie = ["className"], cie = (e) => {
  const {
    classes: t
  } = e;
  return yt({
    root: ["overlay"]
  }, Gn, t);
}, die = _r("div", {
  name: "MuiDataGrid",
  slot: "Overlay",
  overridesResolver: (e, t) => t.overlay
})({
  width: "100%",
  height: "100%",
  display: "flex",
  alignSelf: "center",
  alignItems: "center",
  justifyContent: "center",
  backgroundColor: "var(--unstable_DataGrid-overlayBackground)"
}), WE = tr(function(t, n) {
  const {
    className: i
  } = t, s = Xt(t, uie), u = Vt(), d = cie(u);
  return /* @__PURE__ */ A.jsx(die, J({
    className: nt(d.root, i),
    ownerState: u
  }, s, {
    ref: n
  }));
});
process.env.NODE_ENV !== "production" && (WE.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
const fie = (e) => {
  const {
    classes: t,
    open: n
  } = e;
  return yt({
    root: ["menuIcon", n && "menuOpen"],
    button: ["menuIconButton"]
  }, Gn, t);
}, pie = /* @__PURE__ */ S.memo((e) => {
  var w, R;
  const {
    colDef: t,
    open: n,
    columnMenuId: i,
    columnMenuButtonId: s,
    iconButtonRef: u
  } = e, d = In(), p = Vt(), m = J({}, e, {
    classes: p.classes
  }), v = fie(m), y = S.useCallback((O) => {
    O.preventDefault(), O.stopPropagation(), d.current.toggleColumnMenu(t.field);
  }, [d, t.field]), C = t.headerName ?? t.field;
  return /* @__PURE__ */ A.jsx("div", {
    className: v.root,
    children: /* @__PURE__ */ A.jsx(p.slots.baseTooltip, J({
      title: d.current.getLocaleText("columnMenuLabel"),
      enterDelay: 1e3
    }, (w = p.slotProps) == null ? void 0 : w.baseTooltip, {
      children: /* @__PURE__ */ A.jsx(p.slots.baseIconButton, J({
        ref: u,
        tabIndex: -1,
        className: v.button,
        "aria-label": d.current.getLocaleText("columnMenuAriaLabel")(C),
        size: "small",
        onClick: y,
        "aria-haspopup": "menu",
        "aria-expanded": n,
        "aria-controls": n ? i : void 0,
        id: s
      }, (R = p.slotProps) == null ? void 0 : R.baseIconButton, {
        children: /* @__PURE__ */ A.jsx(p.slots.columnMenuIcon, {
          fontSize: "inherit"
        })
      }))
    }))
  });
});
function dH({
  columnMenuId: e,
  columnMenuButtonId: t,
  ContentComponent: n,
  contentComponentProps: i,
  field: s,
  open: u,
  target: d,
  onExited: p
}) {
  const m = In(), v = m.current.getColumn(s), y = Nn((C) => {
    C && (C.stopPropagation(), d != null && d.contains(C.target)) || m.current.hideColumnMenu();
  });
  return !d || !v ? null : /* @__PURE__ */ A.jsx(FE, {
    placement: `bottom-${v.align === "right" ? "start" : "end"}`,
    open: u,
    target: d,
    onClose: y,
    onExited: p,
    children: /* @__PURE__ */ A.jsx(n, J({
      colDef: v,
      hideMenu: y,
      open: u,
      id: e,
      labelledby: t
    }, i))
  });
}
process.env.NODE_ENV !== "production" && (dH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  columnMenuButtonId: a.string,
  columnMenuId: a.string,
  ContentComponent: a.elementType.isRequired,
  contentComponentProps: a.any,
  field: a.string.isRequired,
  onExited: a.func,
  open: a.bool.isRequired,
  target: Ul
});
function hie(e) {
  return e.scrollHeight > e.clientHeight || e.scrollWidth > e.clientWidth;
}
function X0(e, t) {
  return e.closest(`.${t}`);
}
function ed(e) {
  return e.replace(/["\\]/g, "\\$&");
}
function mie(e, t) {
  return e.querySelector(`[role="columnheader"][data-field="${ed(t)}"]`);
}
function fH(e) {
  return `.${ae.row}[data-id="${ed(String(e))}"]`;
}
function gie(e, t) {
  return e.querySelector(fH(t));
}
function vie(e, {
  id: t,
  field: n
}) {
  const i = fH(t), s = `.${ae.cell}[data-field="${ed(n)}"]`, u = `${i} ${s}`;
  return e.querySelector(u);
}
function qC(e) {
  return (
    // The target is not an element when triggered by a Select inside the cell
    // See https://github.com/mui/material-ui/issues/10534
    e.target.nodeType === 1 && !e.currentTarget.contains(e.target)
  );
}
function yie(e) {
  return e.getAttribute("data-field");
}
function bie(e, t) {
  return e.querySelector(`[data-field="${ed(t)}"]`);
}
function Cie(e) {
  return e.getAttribute("data-fields").slice(2, -2).split("-|-");
}
function Sie(e, t) {
  return Array.from(e.querySelectorAll(`[data-fields*="|-${ed(t)}-|"]`) ?? []);
}
function wie(e, t) {
  var d;
  if (!X0(e, ae.root))
    throw new Error("MUI X: The root element is not found.");
  const i = e.getAttribute("aria-colindex");
  if (!i)
    return [];
  const s = Number(i) - 1, u = [];
  return (d = t.virtualScrollerRef) != null && d.current ? (mH(t).forEach((p) => {
    const m = p.getAttribute("data-id");
    if (!m)
      return;
    let v = s;
    const y = t.unstable_getCellColSpanInfo(m, s);
    y && y.spannedByColSpan && (v = y.leftVisibleCellIndex);
    const C = p.querySelector(`[data-colindex="${v}"]`);
    C && u.push(C);
  }), u) : [];
}
function yA(e, t) {
  return e.rootElementRef.current.querySelector(`.${ae[t]}`);
}
const pH = ({
  api: e,
  colIndex: t,
  position: n,
  filterFn: i
}) => {
  if (t === null)
    return [];
  const s = [];
  return mH(e).forEach((u) => {
    u.getAttribute("data-id") && u.querySelectorAll(`.${ae[n === "left" ? "cell--pinnedLeft" : "cell--pinnedRight"]}`).forEach((p) => {
      const m = fv(p);
      m !== null && i(m) && s.push(p);
    });
  }), s;
};
function xie(e, t, n) {
  const i = fv(t);
  return pH({
    api: e,
    colIndex: i,
    position: n ? "right" : "left",
    filterFn: (s) => n ? s < i : s > i
  });
}
function Eie(e, t, n) {
  const i = fv(t);
  return pH({
    api: e,
    colIndex: i,
    position: n ? "left" : "right",
    filterFn: (s) => n ? s > i : s < i
  });
}
const hH = ({
  api: e,
  colIndex: t,
  position: n,
  filterFn: i
}) => {
  var u;
  if (!((u = e.columnHeadersContainerRef) != null && u.current))
    return [];
  if (t === null)
    return [];
  const s = [];
  return e.columnHeadersContainerRef.current.querySelectorAll(`.${ae[n === "left" ? "columnHeader--pinnedLeft" : "columnHeader--pinnedRight"]}`).forEach((d) => {
    const p = fv(d);
    p !== null && i(p, d) && s.push(d);
  }), s;
};
function Tie(e, t, n) {
  const i = fv(t);
  return hH({
    api: e,
    position: n ? "right" : "left",
    colIndex: i,
    filterFn: (s) => n ? s < i : s > i
  });
}
function Rie(e, t, n) {
  const i = fv(t);
  return hH({
    api: e,
    position: n ? "left" : "right",
    colIndex: i,
    filterFn: (s, u) => u.classList.contains(ae["columnHeader--last"]) ? !1 : n ? s > i : s < i
  });
}
function Oie(e, t) {
  return e.columnHeadersContainerRef.current.querySelector(`:scope > div > [data-field="${ed(t)}"][role="columnheader"]`);
}
function kie(e, t) {
  const n = e.virtualScrollerRef.current;
  return Array.from(n.querySelectorAll(`:scope > div > div > div > [data-field="${ed(t)}"][role="gridcell"]`));
}
function mH(e) {
  return e.virtualScrollerRef.current.querySelectorAll(
    // Use > to ignore rows from nested Data Grids (for example in detail panel)
    `:scope > div > div > .${ae.row}`
  );
}
function fv(e) {
  const t = e.getAttribute("aria-colindex");
  return t ? Number(t) - 1 : null;
}
const Pie = ["className", "aria-label"], Mie = (e) => {
  const {
    classes: t
  } = e;
  return yt({
    root: ["columnHeaderTitle"]
  }, Gn, t);
}, Iie = _r("div", {
  name: "MuiDataGrid",
  slot: "ColumnHeaderTitle",
  overridesResolver: (e, t) => t.columnHeaderTitle
})({
  textOverflow: "ellipsis",
  overflow: "hidden",
  whiteSpace: "nowrap",
  fontWeight: "var(--unstable_DataGrid-headWeight)",
  lineHeight: "normal"
}), Die = tr(function(t, n) {
  const {
    className: i
  } = t, s = Xt(t, Pie), u = Vt(), d = Mie(u);
  return /* @__PURE__ */ A.jsx(Iie, J({
    className: nt(d.root, i),
    ownerState: u
  }, s, {
    ref: n
  }));
});
function gH(e) {
  var m;
  const {
    label: t,
    description: n
  } = e, i = Vt(), s = S.useRef(null), [u, d] = S.useState(""), p = S.useCallback(() => {
    if (!n && (s != null && s.current)) {
      const v = hie(s.current);
      d(v ? t : "");
    }
  }, [n, t]);
  return /* @__PURE__ */ A.jsx(i.slots.baseTooltip, J({
    title: n || u
  }, (m = i.slotProps) == null ? void 0 : m.baseTooltip, {
    children: /* @__PURE__ */ A.jsx(Die, {
      onMouseOver: p,
      ref: s,
      children: t
    })
  }));
}
process.env.NODE_ENV !== "production" && (gH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  columnWidth: a.number.isRequired,
  description: a.node,
  label: a.string.isRequired
});
const Nie = ["resizable", "resizing", "height", "side"];
var gM = /* @__PURE__ */ function(e) {
  return e.Left = "left", e.Right = "right", e;
}(gM || {});
const Lie = (e) => {
  const {
    resizable: t,
    resizing: n,
    classes: i,
    side: s
  } = e, u = {
    root: ["columnSeparator", t && "columnSeparator--resizable", n && "columnSeparator--resizing", s && `columnSeparator--side${Be(s)}`],
    icon: ["iconSeparator"]
  };
  return yt(u, Gn, i);
};
function vH(e) {
  const {
    height: t,
    side: n = gM.Right
  } = e, i = Xt(e, Nie), s = Vt(), u = J({}, e, {
    side: n,
    classes: s.classes
  }), d = Lie(u), p = S.useCallback((m) => {
    m.preventDefault(), m.stopPropagation();
  }, []);
  return (
    // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions
    /* @__PURE__ */ A.jsx("div", J({
      className: d.root,
      style: {
        minHeight: t
      }
    }, i, {
      onClick: p,
      children: /* @__PURE__ */ A.jsx(s.slots.columnResizeIcon, {
        className: d.icon
      })
    }))
  );
}
const Fie = /* @__PURE__ */ S.memo(vH);
process.env.NODE_ENV !== "production" && (vH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  height: a.number.isRequired,
  resizable: a.bool.isRequired,
  resizing: a.bool.isRequired,
  side: a.oneOf(["left", "right"])
});
const _ie = ["classes", "columnMenuOpen", "colIndex", "height", "isResizing", "sortDirection", "hasFocus", "tabIndex", "separatorSide", "isDraggable", "headerComponent", "description", "elementId", "width", "columnMenuIconButton", "columnMenu", "columnTitleIconButtons", "headerClassName", "label", "resizable", "draggableContainerProps", "columnHeaderSeparatorProps", "style"], yH = tr(function(t, n) {
  const {
    classes: i,
    colIndex: s,
    height: u,
    isResizing: d,
    sortDirection: p,
    hasFocus: m,
    tabIndex: v,
    separatorSide: y,
    isDraggable: C,
    headerComponent: w,
    description: R,
    width: O,
    columnMenuIconButton: E = null,
    columnMenu: k = null,
    columnTitleIconButtons: L = null,
    headerClassName: F,
    label: _,
    resizable: P,
    draggableContainerProps: D,
    columnHeaderSeparatorProps: z,
    style: K
  } = t, Q = Xt(t, _ie), H = Cs(), I = Vt(), U = S.useRef(null), G = Vr(U, n);
  let Y = "none";
  return p != null && (Y = p === "asc" ? "ascending" : "descending"), S.useLayoutEffect(() => {
    var B;
    const te = H.current.state.columnMenu;
    if (m && !te.open) {
      const q = U.current.querySelector('[tabindex="0"]') || U.current;
      q == null || q.focus(), (B = H.current.columnHeadersContainerRef) != null && B.current && (H.current.columnHeadersContainerRef.current.scrollLeft = 0);
    }
  }, [H, m]), /* @__PURE__ */ A.jsxs("div", J({
    className: nt(i.root, F),
    style: J({}, K, {
      height: u,
      width: O
    }),
    role: "columnheader",
    tabIndex: v,
    "aria-colindex": s + 1,
    "aria-sort": Y
  }, Q, {
    ref: G,
    children: [/* @__PURE__ */ A.jsxs("div", J({
      className: i.draggableContainer,
      draggable: C,
      role: "presentation"
    }, D, {
      children: [/* @__PURE__ */ A.jsxs("div", {
        className: i.titleContainer,
        role: "presentation",
        children: [/* @__PURE__ */ A.jsx("div", {
          className: i.titleContainerContent,
          children: w !== void 0 ? w : /* @__PURE__ */ A.jsx(gH, {
            label: _,
            description: R,
            columnWidth: O
          })
        }), L]
      }), E]
    })), /* @__PURE__ */ A.jsx(Fie, J({
      resizable: !I.disableColumnResize && !!P,
      resizing: d,
      height: u,
      side: y
    }, z)), k]
  }));
}), Aie = (e) => {
  const {
    colDef: t,
    classes: n,
    isDragging: i,
    sortDirection: s,
    showRightBorder: u,
    showLeftBorder: d,
    filterItemsCounter: p,
    pinnedPosition: m,
    isLastUnpinned: v,
    isSiblingFocused: y
  } = e, C = s != null, w = p != null && p > 0, R = t.type === "number", O = {
    root: [
      "columnHeader",
      t.headerAlign === "left" && "columnHeader--alignLeft",
      t.headerAlign === "center" && "columnHeader--alignCenter",
      t.headerAlign === "right" && "columnHeader--alignRight",
      t.sortable && "columnHeader--sortable",
      i && "columnHeader--moving",
      C && "columnHeader--sorted",
      w && "columnHeader--filtered",
      R && "columnHeader--numeric",
      "withBorderColor",
      u && "columnHeader--withRightBorder",
      d && "columnHeader--withLeftBorder",
      m === jn.LEFT && "columnHeader--pinnedLeft",
      m === jn.RIGHT && "columnHeader--pinnedRight",
      // TODO: Remove classes below and restore `:has` selectors when they are supported in jsdom
      // See https://github.com/mui/mui-x/pull/14559
      v && "columnHeader--lastUnpinned",
      y && "columnHeader--siblingFocused"
    ],
    draggableContainer: ["columnHeaderDraggableContainer"],
    titleContainer: ["columnHeaderTitleContainer"],
    titleContainerContent: ["columnHeaderTitleContainerContent"]
  };
  return yt(O, Gn, n);
};
function bH(e) {
  var pe, be, Ce;
  const {
    colDef: t,
    columnMenuOpen: n,
    colIndex: i,
    headerHeight: s,
    isResizing: u,
    isLast: d,
    sortDirection: p,
    sortIndex: m,
    filterItemsCounter: v,
    hasFocus: y,
    tabIndex: C,
    disableReorder: w,
    separatorSide: R,
    showLeftBorder: O,
    showRightBorder: E,
    pinnedPosition: k,
    pinnedOffset: L
  } = e, F = Cs(), _ = Vt(), P = ji(), D = S.useRef(null), z = Sr(), K = Sr(), Q = S.useRef(null), [H, I] = S.useState(n), U = S.useMemo(() => !_.disableColumnReorder && !w && !t.disableReorder, [_.disableColumnReorder, w, t.disableReorder]);
  let G;
  t.renderHeader && (G = t.renderHeader(F.current.getColumnHeaderParams(t.field)));
  const Y = J({}, e, {
    classes: _.classes,
    showRightBorder: E,
    showLeftBorder: O
  }), te = Aie(Y), B = S.useCallback((Re) => (ue) => {
    qC(ue) || F.current.publishEvent(Re, F.current.getColumnHeaderParams(t.field), ue);
  }, [F, t.field]), W = S.useMemo(() => ({
    onClick: B("columnHeaderClick"),
    onContextMenu: B("columnHeaderContextMenu"),
    onDoubleClick: B("columnHeaderDoubleClick"),
    onMouseOver: B("columnHeaderOver"),
    // TODO remove as it's not used
    onMouseOut: B("columnHeaderOut"),
    // TODO remove as it's not used
    onMouseEnter: B("columnHeaderEnter"),
    // TODO remove as it's not used
    onMouseLeave: B("columnHeaderLeave"),
    // TODO remove as it's not used
    onKeyDown: B("columnHeaderKeyDown"),
    onFocus: B("columnHeaderFocus"),
    onBlur: B("columnHeaderBlur")
  }), [B]), q = S.useMemo(() => U ? {
    onDragStart: B("columnHeaderDragStart"),
    onDragEnter: B("columnHeaderDragEnter"),
    onDragOver: B("columnHeaderDragOver"),
    onDragEnd: B("columnHeaderDragEnd")
  } : {}, [U, B]), ne = S.useMemo(() => ({
    onMouseDown: B("columnSeparatorMouseDown"),
    onDoubleClick: B("columnSeparatorDoubleClick")
  }), [B]);
  S.useEffect(() => {
    H || I(n);
  }, [H, n]);
  const re = S.useCallback(() => {
    I(!1);
  }, []), X = !_.disableColumnMenu && !t.disableColumnMenu && /* @__PURE__ */ A.jsx(pie, {
    colDef: t,
    columnMenuId: z,
    columnMenuButtonId: K,
    open: H,
    iconButtonRef: Q
  }), j = /* @__PURE__ */ A.jsx(dH, {
    columnMenuId: z,
    columnMenuButtonId: K,
    field: t.field,
    open: n,
    target: Q.current,
    ContentComponent: _.slots.columnMenu,
    contentComponentProps: (pe = _.slotProps) == null ? void 0 : pe.columnMenu,
    onExited: re
  }), ie = t.sortingOrder ?? _.sortingOrder, fe = (t.sortable || p != null) && !t.hideSortIcons && !_.disableColumnSorting, ce = /* @__PURE__ */ A.jsxs(S.Fragment, {
    children: [!_.disableColumnFilter && /* @__PURE__ */ A.jsx(_.slots.columnHeaderFilterIconButton, J({
      field: t.field,
      counter: v
    }, (be = _.slotProps) == null ? void 0 : be.columnHeaderFilterIconButton)), fe && /* @__PURE__ */ A.jsx(_.slots.columnHeaderSortIcon, J({
      field: t.field,
      direction: p,
      index: m,
      sortingOrder: ie,
      disabled: !t.sortable
    }, (Ce = _.slotProps) == null ? void 0 : Ce.columnHeaderSortIcon))]
  });
  S.useLayoutEffect(() => {
    var ue;
    const Re = F.current.state.columnMenu;
    if (y && !Re.open) {
      const _e = D.current.querySelector('[tabindex="0"]') || D.current;
      _e == null || _e.focus(), (ue = F.current.columnHeadersContainerRef) != null && ue.current && (F.current.columnHeadersContainerRef.current.scrollLeft = 0);
    }
  }, [F, y]);
  const me = typeof t.headerClassName == "function" ? t.headerClassName({
    field: t.field,
    colDef: t
  }) : t.headerClassName, ge = t.headerName ?? t.field, de = S.useMemo(() => GE(J({}, e.style), P, k, L), [k, L, e.style, P]);
  return /* @__PURE__ */ A.jsx(yH, J({
    ref: D,
    classes: te,
    columnMenuOpen: n,
    colIndex: i,
    height: s,
    isResizing: u,
    sortDirection: p,
    hasFocus: y,
    tabIndex: C,
    separatorSide: R,
    isDraggable: U,
    headerComponent: G,
    description: t.description,
    elementId: t.field,
    width: t.computedWidth,
    columnMenuIconButton: X,
    columnTitleIconButtons: ce,
    headerClassName: nt(me, d && ae["columnHeader--last"]),
    label: ge,
    resizable: !_.disableColumnResize && !!t.resizable,
    "data-field": t.field,
    columnMenu: j,
    draggableContainerProps: q,
    columnHeaderSeparatorProps: ne,
    style: de
  }, W));
}
process.env.NODE_ENV !== "production" && (bH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  colDef: a.object.isRequired,
  colIndex: a.number.isRequired,
  columnMenuOpen: a.bool.isRequired,
  disableReorder: a.bool,
  filterItemsCounter: a.number,
  hasFocus: a.bool,
  headerHeight: a.number.isRequired,
  isDragging: a.bool.isRequired,
  isLast: a.bool.isRequired,
  isLastUnpinned: a.bool.isRequired,
  isResizing: a.bool.isRequired,
  isSiblingFocused: a.bool.isRequired,
  pinnedOffset: a.number,
  pinnedPosition: a.oneOf([0, 1, 2, 3]),
  separatorSide: a.oneOf(["left", "right"]),
  showLeftBorder: a.bool.isRequired,
  showRightBorder: a.bool.isRequired,
  sortDirection: a.oneOf(["asc", "desc"]),
  sortIndex: a.number,
  style: a.object,
  tabIndex: a.oneOf([-1, 0]).isRequired
});
const $ie = Jc(bH), jie = ["className"], zie = (e) => {
  const {
    classes: t
  } = e;
  return yt({
    root: ["iconButtonContainer"]
  }, Gn, t);
}, Hie = _r("div", {
  name: "MuiDataGrid",
  slot: "IconButtonContainer",
  overridesResolver: (e, t) => t.iconButtonContainer
})(() => ({
  display: "flex",
  visibility: "hidden",
  width: 0
})), CH = tr(function(t, n) {
  const {
    className: i
  } = t, s = Xt(t, jie), u = Vt(), d = zie(u);
  return /* @__PURE__ */ A.jsx(Hie, J({
    className: nt(d.root, i),
    ownerState: u
  }, s, {
    ref: n
  }));
}), Vie = ["direction", "index", "sortingOrder", "disabled", "className"], Bie = (e) => {
  const {
    classes: t
  } = e;
  return yt({
    root: ["sortButton"],
    icon: ["sortIcon"]
  }, Gn, t);
};
function Uie(e, t, n, i) {
  let s;
  const u = {};
  return t === "asc" ? s = e.columnSortedAscendingIcon : t === "desc" ? s = e.columnSortedDescendingIcon : (s = e.columnUnsortedIcon, u.sortingOrder = i), s ? /* @__PURE__ */ A.jsx(s, J({
    fontSize: "small",
    className: n
  }, u)) : null;
}
function SH(e) {
  var R;
  const {
    direction: t,
    index: n,
    sortingOrder: i,
    disabled: s,
    className: u
  } = e, d = Xt(e, Vie), p = In(), m = Vt(), v = J({}, e, {
    classes: m.classes
  }), y = Bie(v), C = Uie(m.slots, t, y.icon, i);
  if (!C)
    return null;
  const w = /* @__PURE__ */ A.jsx(m.slots.baseIconButton, J({
    tabIndex: -1,
    "aria-label": p.current.getLocaleText("columnHeaderSortIconLabel"),
    title: p.current.getLocaleText("columnHeaderSortIconLabel"),
    size: "small",
    disabled: s,
    className: nt(y.root, u)
  }, (R = m.slotProps) == null ? void 0 : R.baseIconButton, d, {
    children: C
  }));
  return /* @__PURE__ */ A.jsxs(CH, {
    children: [n != null && /* @__PURE__ */ A.jsx(m.slots.baseBadge, {
      badgeContent: n,
      color: "default",
      overlap: "circular",
      children: w
    }), n == null && w]
  });
}
const Gie = /* @__PURE__ */ S.memo(SH);
process.env.NODE_ENV !== "production" && (SH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  className: a.string,
  direction: a.oneOf(["asc", "desc"]),
  disabled: a.bool,
  field: a.string.isRequired,
  index: a.number,
  sortingOrder: a.arrayOf(a.oneOf(["asc", "desc"])).isRequired
});
const Wie = (e) => {
  const {
    classes: t
  } = e;
  return yt({
    icon: ["filterIcon"]
  }, Gn, t);
};
function wH(e) {
  return e.counter ? /* @__PURE__ */ A.jsx(xH, J({}, e)) : null;
}
process.env.NODE_ENV !== "production" && (wH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  counter: a.number,
  field: a.string.isRequired,
  onClick: a.func
});
function xH(e) {
  var R, O;
  const {
    counter: t,
    field: n,
    onClick: i
  } = e, s = In(), u = Vt(), d = J({}, e, {
    classes: u.classes
  }), p = Wie(d), m = Sr(), v = pC(s, goe, m), y = Sr(), C = S.useCallback((E) => {
    E.preventDefault(), E.stopPropagation();
    const {
      open: k,
      openedPanelValue: L
    } = gC(s.current.state);
    k && L === fh.filters ? s.current.hideFilterPanel() : s.current.showFilterPanel(void 0, y, m), i && i(s.current.getColumnHeaderParams(n), E);
  }, [s, n, i, y, m]);
  if (!t)
    return null;
  const w = /* @__PURE__ */ A.jsx(u.slots.baseIconButton, J({
    id: m,
    onClick: C,
    color: "default",
    "aria-label": s.current.getLocaleText("columnHeaderFiltersLabel"),
    size: "small",
    tabIndex: -1,
    "aria-haspopup": "menu",
    "aria-expanded": v,
    "aria-controls": v ? y : void 0
  }, (R = u.slotProps) == null ? void 0 : R.baseIconButton, {
    children: /* @__PURE__ */ A.jsx(u.slots.columnFilteredIcon, {
      className: p.icon,
      fontSize: "small"
    })
  }));
  return /* @__PURE__ */ A.jsx(u.slots.baseTooltip, J({
    title: s.current.getLocaleText("columnHeaderFiltersTooltipActive")(t),
    enterDelay: 1e3
  }, (O = u.slotProps) == null ? void 0 : O.baseTooltip, {
    children: /* @__PURE__ */ A.jsxs(CH, {
      children: [t > 1 && /* @__PURE__ */ A.jsx(u.slots.baseBadge, {
        badgeContent: t,
        color: "default",
        children: w
      }), t === 1 && w]
    })
  }));
}
process.env.NODE_ENV !== "production" && (xH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  counter: a.number,
  field: a.string.isRequired,
  onClick: a.func
});
const bA = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z"
}), "ArrowUpward"), CA = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z"
}), "ArrowDownward"), SA = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M8.59 16.59 13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z"
}), "KeyboardArrowRight"), wA = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z"
}), "ExpandMore"), qie = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z"
}), "FilterList"), xA = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61z"
}), "FilterAlt"), Kie = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"
}), "Search");
Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"
}), "Menu");
Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
}), "CheckCircle");
const Yie = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M6 5H3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm14 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm-7 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1z"
}), "ColumnIcon"), Xie = Fn(/* @__PURE__ */ A.jsx("rect", {
  width: "1",
  height: "24",
  x: "11.5",
  rx: "0.5"
}), "Separator"), Qie = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M4 15h16v-2H4v2zm0 4h16v-2H4v2zm0-8h16V9H4v2zm0-6v2h16V5H4z"
}), "ViewHeadline"), Jie = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M21,8H3V4h18V8z M21,10H3v4h18V10z M21,16H3v4h18V16z"
}), "TableRows"), Zie = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M4 18h17v-6H4v6zM4 5v6h17V5H4z"
}), "ViewStream"), eae = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
}), "TripleDotsVertical"), BO = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
}), "Close"), EA = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"
}), "Add"), tae = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M19 13H5v-2h14v2z"
}), "Remove"), nae = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z"
}), "Load"), TA = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M11 18c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2zm-2-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
}), "Drag"), rae = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M19 12v7H5v-7H3v7c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zm-6 .67l2.59-2.58L17 11.5l-5 5-5-5 1.41-1.41L11 12.67V3h2z"
}), "SaveAlt"), oae = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z"
}), "Check"), iae = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
}), "MoreVert"), aae = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z"
}), "VisibilityOff"), sae = Fn(/* @__PURE__ */ A.jsx("g", {
  children: /* @__PURE__ */ A.jsx("path", {
    d: "M14.67,5v14H9.33V5H14.67z M15.67,19H21V5h-5.33V19z M8.33,19V5H3v14H8.33z"
  })
}), "ViewColumn"), lae = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
}), "Clear");
Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z"
}), "Delete");
const uae = Fn(/* @__PURE__ */ A.jsx("path", {
  d: "M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm2.46-7.12l1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4z"
}), "Delete");
function EH(e) {
  return e.key.length === 1 && !e.ctrlKey && !e.metaKey;
}
const Q0 = (e) => e.indexOf("Arrow") === 0 || e.indexOf("Page") === 0 || e === " " || e === "Home" || e === "End", cae = (e) => !!e.key, TH = (e) => e === "Tab" || e === "Escape";
function RH(e) {
  return (e.ctrlKey || e.metaKey) && // We can't use event.code === 'KeyV' as event.code assumes a QWERTY keyboard layout,
  // for example, it would be another letter on a Dvorak physical keyboard.
  // We can't use event.key === 'v' as event.key is not stable with key modifiers and keyboard layouts,
  // for example, it would be ה on a Hebrew keyboard layout.
  // https://github.com/w3c/uievents/issues/377 could be a long-term solution
  String.fromCharCode(e.keyCode) === "V" && !e.shiftKey && !e.altKey;
}
function dae(e) {
  return (e.ctrlKey || e.metaKey) && String.fromCharCode(e.keyCode) === "C" && !e.shiftKey && !e.altKey;
}
const fae = ["hideMenu", "colDef", "id", "labelledby", "className", "children", "open"], pae = Ue(NC)(() => ({
  minWidth: 248
})), OH = tr(function(t, n) {
  const {
    hideMenu: i,
    id: s,
    labelledby: u,
    className: d,
    children: p,
    open: m
  } = t, v = Xt(t, fae), y = S.useCallback((C) => {
    C.key === "Tab" && C.preventDefault(), TH(C.key) && i(C);
  }, [i]);
  return /* @__PURE__ */ A.jsx(pae, J({
    id: s,
    className: nt(ae.menuList, d),
    "aria-labelledby": u,
    onKeyDown: y,
    autoFocus: m
  }, v, {
    ref: n,
    children: p
  }));
});
process.env.NODE_ENV !== "production" && (OH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  colDef: a.object.isRequired,
  hideMenu: a.func.isRequired,
  id: a.string,
  labelledby: a.string,
  open: a.bool.isRequired
});
const hae = ["displayOrder"], mae = (e) => {
  const t = Cs(), n = Vt(), {
    defaultSlots: i,
    defaultSlotProps: s,
    slots: u = {},
    slotProps: d = {},
    hideMenu: p,
    colDef: m,
    addDividers: v = !0
  } = e, y = S.useMemo(() => J({}, i, u), [i, u]), C = S.useMemo(() => {
    if (!d || Object.keys(d).length === 0)
      return s;
    const O = J({}, d);
    return Object.entries(s).forEach(([E, k]) => {
      O[E] = J({}, k, d[E] || {});
    }), O;
  }, [s, d]), w = t.current.unstable_applyPipeProcessors("columnMenu", [], e.colDef), R = S.useMemo(() => {
    const O = Object.keys(i);
    return Object.keys(u).filter((E) => !O.includes(E));
  }, [u, i]);
  return S.useMemo(() => {
    const k = Array.from(/* @__PURE__ */ new Set([...w, ...R])).filter((L) => y[L] != null).sort((L, F) => {
      const _ = C[L], P = C[F], D = Number.isFinite(_ == null ? void 0 : _.displayOrder) ? _.displayOrder : 100, z = Number.isFinite(P == null ? void 0 : P.displayOrder) ? P.displayOrder : 100;
      return D - z;
    });
    return k.reduce((L, F, _) => {
      let P = {
        colDef: m,
        onClick: p
      };
      const D = C[F];
      if (D) {
        const z = Xt(D, hae);
        P = J({}, P, z);
      }
      return v && _ !== k.length - 1 ? [...L, [y[F], P], [n.slots.baseDivider, {}]] : [...L, [y[F], P]];
    }, []);
  }, [v, m, w, p, y, C, R, n.slots.baseDivider]);
};
function kH(e) {
  const {
    colDef: t,
    onClick: n
  } = e, i = In(), s = Vt(), p = ho(i).filter((v) => v.disableColumnMenu !== !0).length === 1, m = S.useCallback((v) => {
    p || (i.current.setColumnVisibility(t.field, !1), n(v));
  }, [i, t.field, n, p]);
  return s.disableColumnSelector || t.hideable === !1 ? null : /* @__PURE__ */ A.jsxs(ms, {
    onClick: m,
    disabled: p,
    children: [/* @__PURE__ */ A.jsx(ah, {
      children: /* @__PURE__ */ A.jsx(s.slots.columnMenuHideIcon, {
        fontSize: "small"
      })
    }), /* @__PURE__ */ A.jsx(sh, {
      children: i.current.getLocaleText("columnMenuHideColumn")
    })]
  });
}
process.env.NODE_ENV !== "production" && (kH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  colDef: a.object.isRequired,
  onClick: a.func.isRequired
});
function PH(e) {
  const {
    onClick: t
  } = e, n = In(), i = Vt(), s = S.useCallback((u) => {
    t(u), n.current.showPreferences(fh.columns);
  }, [n, t]);
  return i.disableColumnSelector ? null : /* @__PURE__ */ A.jsxs(ms, {
    onClick: s,
    children: [/* @__PURE__ */ A.jsx(ah, {
      children: /* @__PURE__ */ A.jsx(i.slots.columnMenuManageColumnsIcon, {
        fontSize: "small"
      })
    }), /* @__PURE__ */ A.jsx(sh, {
      children: n.current.getLocaleText("columnMenuManageColumns")
    })]
  });
}
process.env.NODE_ENV !== "production" && (PH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  colDef: a.object.isRequired,
  onClick: a.func.isRequired
});
function MH(e) {
  return /* @__PURE__ */ A.jsxs(S.Fragment, {
    children: [/* @__PURE__ */ A.jsx(kH, J({}, e)), /* @__PURE__ */ A.jsx(PH, J({}, e))]
  });
}
process.env.NODE_ENV !== "production" && (MH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  colDef: a.object.isRequired,
  onClick: a.func.isRequired
});
function IH(e) {
  const {
    colDef: t,
    onClick: n
  } = e, i = In(), s = Vt(), u = S.useCallback((d) => {
    n(d), i.current.showFilterPanel(t.field);
  }, [i, t.field, n]);
  return s.disableColumnFilter || !t.filterable ? null : /* @__PURE__ */ A.jsxs(ms, {
    onClick: u,
    children: [/* @__PURE__ */ A.jsx(ah, {
      children: /* @__PURE__ */ A.jsx(s.slots.columnMenuFilterIcon, {
        fontSize: "small"
      })
    }), /* @__PURE__ */ A.jsx(sh, {
      children: i.current.getLocaleText("columnMenuFilter")
    })]
  });
}
process.env.NODE_ENV !== "production" && (IH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  colDef: a.object.isRequired,
  onClick: a.func.isRequired
});
function DH(e) {
  const {
    colDef: t,
    onClick: n
  } = e, i = In(), s = tt(i, Al), u = Vt(), d = S.useMemo(() => {
    if (!t)
      return null;
    const y = s.find((C) => C.field === t.field);
    return y == null ? void 0 : y.sort;
  }, [t, s]), p = t.sortingOrder ?? u.sortingOrder, m = S.useCallback((y) => {
    n(y);
    const C = y.currentTarget.getAttribute("data-value") || null;
    i.current.sortColumn(t.field, C === d ? null : C);
  }, [i, t, n, d]);
  if (u.disableColumnSorting || !t || !t.sortable || !p.some((y) => !!y))
    return null;
  const v = (y) => {
    const C = i.current.getLocaleText(y);
    return typeof C == "function" ? C(t) : C;
  };
  return /* @__PURE__ */ A.jsxs(S.Fragment, {
    children: [p.includes("asc") && d !== "asc" ? /* @__PURE__ */ A.jsxs(ms, {
      onClick: m,
      "data-value": "asc",
      children: [/* @__PURE__ */ A.jsx(ah, {
        children: /* @__PURE__ */ A.jsx(u.slots.columnMenuSortAscendingIcon, {
          fontSize: "small"
        })
      }), /* @__PURE__ */ A.jsx(sh, {
        children: v("columnMenuSortAsc")
      })]
    }) : null, p.includes("desc") && d !== "desc" ? /* @__PURE__ */ A.jsxs(ms, {
      onClick: m,
      "data-value": "desc",
      children: [/* @__PURE__ */ A.jsx(ah, {
        children: /* @__PURE__ */ A.jsx(u.slots.columnMenuSortDescendingIcon, {
          fontSize: "small"
        })
      }), /* @__PURE__ */ A.jsx(sh, {
        children: v("columnMenuSortDesc")
      })]
    }) : null, p.includes(null) && d != null ? /* @__PURE__ */ A.jsxs(ms, {
      onClick: m,
      children: [/* @__PURE__ */ A.jsx(ah, {}), /* @__PURE__ */ A.jsx(sh, {
        children: i.current.getLocaleText("columnMenuUnsort")
      })]
    }) : null]
  });
}
process.env.NODE_ENV !== "production" && (DH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  colDef: a.object.isRequired,
  onClick: a.func.isRequired
});
const gae = ["defaultSlots", "defaultSlotProps", "slots", "slotProps"], vae = {
  columnMenuSortItem: DH,
  columnMenuFilterItem: IH,
  columnMenuColumnsItem: MH
}, yae = {
  columnMenuSortItem: {
    displayOrder: 10
  },
  columnMenuFilterItem: {
    displayOrder: 20
  },
  columnMenuColumnsItem: {
    displayOrder: 30
  }
}, NH = tr(function(t, n) {
  const {
    defaultSlots: i,
    defaultSlotProps: s,
    slots: u,
    slotProps: d
  } = t, p = Xt(t, gae), m = mae(J({}, p, {
    defaultSlots: i,
    defaultSlotProps: s,
    slots: u,
    slotProps: d
  }));
  return /* @__PURE__ */ A.jsx(OH, J({}, p, {
    ref: n,
    children: m.map(([v, y], C) => /* @__PURE__ */ A.jsx(v, J({}, y), C))
  }));
});
process.env.NODE_ENV !== "production" && (NH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  colDef: a.object.isRequired,
  /**
   * Initial `slotProps` - it is internal, to be overrriden by Pro or Premium packages
   * @ignore - do not document.
   */
  defaultSlotProps: a.object.isRequired,
  /**
   * Initial `slots` - it is internal, to be overrriden by Pro or Premium packages
   * @ignore - do not document.
   */
  defaultSlots: a.object.isRequired,
  hideMenu: a.func.isRequired,
  id: a.string,
  labelledby: a.string,
  open: a.bool.isRequired,
  /**
   * Could be used to pass new props or override props specific to a column menu component
   * e.g. `displayOrder`
   */
  slotProps: a.object,
  /**
   * `slots` could be used to add new and (or) override default column menu items
   * If you register a nee component you must pass it's `displayOrder` in `slotProps`
   * or it will be placed in the end of the list
   */
  slots: a.object
});
const LH = tr(function(t, n) {
  return /* @__PURE__ */ A.jsx(NH, J({}, t, {
    ref: n,
    defaultSlots: vae,
    defaultSlotProps: yae
  }));
});
process.env.NODE_ENV !== "production" && (LH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  colDef: a.object.isRequired,
  hideMenu: a.func.isRequired,
  id: a.string,
  labelledby: a.string,
  open: a.bool.isRequired,
  /**
   * Could be used to pass new props or override props specific to a column menu component
   * e.g. `displayOrder`
   */
  slotProps: a.object,
  /**
   * `slots` could be used to add new and (or) override default column menu items
   * If you register a nee component you must pass it's `displayOrder` in `slotProps`
   * or it will be placed in the end of the list
   */
  slots: a.object
});
const bae = ["className", "slotProps"], Cae = (e) => {
  const {
    classes: t
  } = e;
  return yt({
    root: ["panelWrapper"]
  }, Gn, t);
}, Sae = Ue("div", {
  name: "MuiDataGrid",
  slot: "PanelWrapper",
  overridesResolver: (e, t) => t.panelWrapper
})({
  display: "flex",
  flexDirection: "column",
  flex: 1,
  "&:focus": {
    outline: 0
  }
}), wae = () => !0, vM = tr(function(t, n) {
  const {
    className: i,
    slotProps: s = {}
  } = t, u = Xt(t, bae), d = Vt(), p = Cae(d);
  return /* @__PURE__ */ A.jsx(sC, J({
    open: !0,
    disableEnforceFocus: !0,
    isEnabled: wae
  }, s.TrapFocus, {
    children: /* @__PURE__ */ A.jsx(Sae, J({
      tabIndex: -1,
      className: nt(p.root, i),
      ownerState: d
    }, u, {
      ref: n
    }))
  }));
});
process.env.NODE_ENV !== "production" && (vM.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  slotProps: a.object
});
function FH(e) {
  var n;
  const t = Vt();
  return /* @__PURE__ */ A.jsx(vM, J({}, e, {
    children: /* @__PURE__ */ A.jsx(t.slots.columnsManagement, J({}, (n = t.slotProps) == null ? void 0 : n.columnsManagement))
  }));
}
process.env.NODE_ENV !== "production" && (FH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  slotProps: a.object
});
const xae = ["children", "className", "classes"], Eae = bn("MuiDataGrid", ["panel", "paper"]), Tae = Ue(Tf, {
  name: "MuiDataGrid",
  slot: "Panel",
  overridesResolver: (e, t) => t.panel
})(({
  theme: e
}) => ({
  zIndex: e.zIndex.modal
})), Rae = Ue(bs, {
  name: "MuiDataGrid",
  slot: "Paper",
  overridesResolver: (e, t) => t.paper
})(({
  theme: e
}) => ({
  backgroundColor: (e.vars || e).palette.background.paper,
  minWidth: 300,
  maxHeight: 450,
  display: "flex",
  maxWidth: `calc(100vw - ${e.spacing(0.5)})`,
  overflow: "auto"
})), _H = tr((e, t) => {
  const {
    children: n,
    className: i
  } = e, s = Xt(e, xae), u = In(), d = Vt(), p = Eae, [m, v] = S.useState(!1), y = S.useCallback(() => {
    u.current.hidePreferences();
  }, [u]), C = S.useCallback((E) => {
    E.key === "Escape" && u.current.hidePreferences();
  }, [u]), w = S.useMemo(() => [{
    name: "flip",
    enabled: !0,
    options: {
      rootBoundary: "document"
    }
  }, {
    name: "isPlaced",
    enabled: !0,
    phase: "main",
    fn: () => {
      v(!0);
    },
    effect: () => () => {
      v(!1);
    }
  }], []), [R, O] = S.useState(null);
  return S.useEffect(() => {
    var k, L;
    const E = (L = (k = u.current.rootElementRef) == null ? void 0 : k.current) == null ? void 0 : L.querySelector('[data-id="gridPanelAnchor"]');
    E && O(E);
  }, [u]), R ? /* @__PURE__ */ A.jsx(Tae, J({
    placement: "bottom-start",
    className: nt(p.panel, i),
    ownerState: d,
    anchorEl: R,
    modifiers: w
  }, s, {
    ref: t,
    children: /* @__PURE__ */ A.jsx(aC, {
      mouseEvent: "onPointerUp",
      touchEvent: !1,
      onClickAway: y,
      children: /* @__PURE__ */ A.jsx(Rae, {
        className: p.paper,
        ownerState: d,
        elevation: 8,
        onKeyDown: C,
        children: m && n
      })
    })
  })) : null;
});
process.env.NODE_ENV !== "production" && (_H.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * Popper render function or node.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * If `true`, the component is shown.
   */
  open: a.bool.isRequired,
  ownerState: a.object
});
const Oae = ["className"], kae = (e) => {
  const {
    classes: t
  } = e;
  return yt({
    root: ["panelContent"]
  }, Gn, t);
}, Pae = _r("div", {
  name: "MuiDataGrid",
  slot: "PanelContent",
  overridesResolver: (e, t) => t.panelContent
})({
  display: "flex",
  flexDirection: "column",
  overflow: "auto",
  flex: "1 1",
  maxHeight: 400
});
function AH(e) {
  const {
    className: t
  } = e, n = Xt(e, Oae), i = Vt(), s = kae(i);
  return /* @__PURE__ */ A.jsx(Pae, J({
    className: nt(s.root, t),
    ownerState: i
  }, n));
}
process.env.NODE_ENV !== "production" && (AH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
const Mae = ["className"], Iae = (e) => {
  const {
    classes: t
  } = e;
  return yt({
    root: ["panelFooter"]
  }, Gn, t);
}, Dae = _r("div", {
  name: "MuiDataGrid",
  slot: "PanelFooter",
  overridesResolver: (e, t) => t.panelFooter
})(({
  theme: e
}) => ({
  padding: e.spacing(0.5),
  display: "flex",
  justifyContent: "space-between"
}));
function $H(e) {
  const {
    className: t
  } = e, n = Xt(e, Mae), i = Vt(), s = Iae(i);
  return /* @__PURE__ */ A.jsx(Dae, J({
    className: nt(s.root, t),
    ownerState: i
  }, n));
}
process.env.NODE_ENV !== "production" && ($H.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
const Nae = ["item", "hasMultipleFilters", "deleteFilter", "applyFilterChanges", "showMultiFilterOperators", "disableMultiFilterOperator", "applyMultiFilterOperatorChanges", "focusElementRef", "logicOperators", "columnsSort", "filterColumns", "deleteIconProps", "logicOperatorInputProps", "operatorInputProps", "columnInputProps", "valueInputProps", "readOnly", "children"], Lae = ["InputComponentProps"], Fae = (e) => {
  const {
    classes: t
  } = e;
  return yt({
    root: ["filterForm"],
    deleteIcon: ["filterFormDeleteIcon"],
    logicOperatorInput: ["filterFormLogicOperatorInput"],
    columnInput: ["filterFormColumnInput"],
    operatorInput: ["filterFormOperatorInput"],
    valueInput: ["filterFormValueInput"]
  }, Gn, t);
}, _ae = Ue("div", {
  name: "MuiDataGrid",
  slot: "FilterForm",
  overridesResolver: (e, t) => t.filterForm
})(({
  theme: e
}) => ({
  display: "flex",
  padding: e.spacing(1)
})), Aae = Ue("div", {
  name: "MuiDataGrid",
  slot: "FilterFormDeleteIcon",
  overridesResolver: (e, t) => t.filterFormDeleteIcon
})(({
  theme: e
}) => ({
  flexShrink: 0,
  justifyContent: "flex-end",
  marginRight: e.spacing(0.5),
  marginBottom: e.spacing(0.2)
})), $ae = Ue("div", {
  name: "MuiDataGrid",
  slot: "FilterFormLogicOperatorInput",
  overridesResolver: (e, t) => t.filterFormLogicOperatorInput
})({
  minWidth: 55,
  marginRight: 5,
  justifyContent: "end"
}), jae = Ue("div", {
  name: "MuiDataGrid",
  slot: "FilterFormColumnInput",
  overridesResolver: (e, t) => t.filterFormColumnInput
})({
  width: 150
}), zae = Ue("div", {
  name: "MuiDataGrid",
  slot: "FilterFormOperatorInput",
  overridesResolver: (e, t) => t.filterFormOperatorInput
})({
  width: 150
}), Hae = Ue("div", {
  name: "MuiDataGrid",
  slot: "FilterFormValueInput",
  overridesResolver: (e, t) => t.filterFormValueInput
})({
  width: 190
}), Vae = (e) => {
  switch (e) {
    case xa.And:
      return "filterPanelOperatorAnd";
    case xa.Or:
      return "filterPanelOperatorOr";
    default:
      throw new Error("MUI X: Invalid `logicOperator` property in the `GridFilterPanel`.");
  }
}, Ib = (e) => e.headerName || e.field, RA = new Intl.Collator(), Uk = tr(function(t, n) {
  var He, et, Ne, rt, it, wt, gt, ot, jt;
  const {
    item: i,
    hasMultipleFilters: s,
    deleteFilter: u,
    applyFilterChanges: d,
    showMultiFilterOperators: p,
    disableMultiFilterOperator: m,
    applyMultiFilterOperatorChanges: v,
    focusElementRef: y,
    logicOperators: C = [xa.And, xa.Or],
    columnsSort: w,
    filterColumns: R,
    deleteIconProps: O = {},
    logicOperatorInputProps: E = {},
    operatorInputProps: k = {},
    columnInputProps: L = {},
    valueInputProps: F = {},
    readOnly: _
  } = t, P = Xt(t, Nae), D = In(), z = tt(D, Zc), K = tt(D, az), Q = tt(D, vi), H = Sr(), I = Sr(), U = Sr(), G = Sr(), Y = Vt(), te = Fae(Y), B = S.useRef(null), W = S.useRef(null), q = Q.logicOperator ?? xa.And, ne = s && C.length > 0, re = ((He = Y.slotProps) == null ? void 0 : He.baseFormControl) || {}, j = (((et = Y.slotProps) == null ? void 0 : et.baseSelect) || {}).native ?? !1, ie = ((Ne = Y.slotProps) == null ? void 0 : Ne.baseInputLabel) || {}, fe = ((rt = Y.slotProps) == null ? void 0 : rt.baseSelectOption) || {}, {
    InputComponentProps: ce
  } = F, me = Xt(F, Lae), {
    filteredColumns: ge,
    selectedField: de
  } = S.useMemo(() => {
    let ct = i.field;
    const Tt = z[i.field].filterable === !1 ? z[i.field] : null;
    if (Tt)
      return {
        filteredColumns: [Tt],
        selectedField: ct
      };
    if (R === void 0 || typeof R != "function")
      return {
        filteredColumns: K,
        selectedField: ct
      };
    const Rt = R({
      field: i.field,
      columns: K,
      currentFilters: (Q == null ? void 0 : Q.items) || []
    });
    return {
      filteredColumns: K.filter((Lt) => {
        const vt = Rt.includes(Lt.field);
        return Lt.field === i.field && !vt && (ct = void 0), vt;
      }),
      selectedField: ct
    };
  }, [R, Q == null ? void 0 : Q.items, K, i.field, z]), pe = S.useMemo(() => {
    switch (w) {
      case "asc":
        return ge.sort((ct, Tt) => RA.compare(Ib(ct), Ib(Tt)));
      case "desc":
        return ge.sort((ct, Tt) => -RA.compare(Ib(ct), Ib(Tt)));
      default:
        return ge;
    }
  }, [ge, w]), be = i.field ? D.current.getColumn(i.field) : null, Ce = S.useMemo(() => {
    var ct;
    return !i.operator || !be ? null : (ct = be.filterOperators) == null ? void 0 : ct.find((Tt) => Tt.value === i.operator);
  }, [i, be]), Re = S.useCallback((ct) => {
    const Tt = ct.target.value, Rt = D.current.getColumn(Tt);
    if (Rt.field === be.field)
      return;
    const Lt = Rt.filterOperators.find((Oe) => Oe.value === i.operator) || Rt.filterOperators[0];
    let Qe = !Lt.InputComponent || Lt.InputComponent !== (Ce == null ? void 0 : Ce.InputComponent) || Rt.type !== be.type ? void 0 : i.value;
    if (Rt.type === "singleSelect" && Qe !== void 0) {
      const Oe = Rt, Me = dh(Oe);
      Array.isArray(Qe) ? Qe = Qe.filter((ht) => (
        // Only keep values that are in the new value options
        q0(ht, Me, Oe == null ? void 0 : Oe.getOptionValue) !== void 0
      )) : q0(i.value, Me, Oe == null ? void 0 : Oe.getOptionValue) === void 0 && (Qe = void 0);
    }
    d(J({}, i, {
      field: Tt,
      operator: Lt.value,
      value: Qe
    }));
  }, [D, d, i, be, Ce]), ue = S.useCallback((ct) => {
    const Tt = ct.target.value, Rt = be == null ? void 0 : be.filterOperators.find((vt) => vt.value === Tt), Lt = !(Rt != null && Rt.InputComponent) || (Rt == null ? void 0 : Rt.InputComponent) !== (Ce == null ? void 0 : Ce.InputComponent);
    d(J({}, i, {
      operator: Tt,
      value: Lt ? void 0 : i.value
    }));
  }, [d, i, be, Ce]), we = S.useCallback((ct) => {
    const Tt = ct.target.value === xa.And.toString() ? xa.And : xa.Or;
    v(Tt);
  }, [v]), _e = () => {
    u(i);
  };
  return S.useImperativeHandle(y, () => ({
    focus: () => {
      var ct;
      Ce != null && Ce.InputComponent ? (ct = B == null ? void 0 : B.current) == null || ct.focus() : W.current.focus();
    }
  }), [Ce]), /* @__PURE__ */ A.jsxs(_ae, J({
    className: te.root,
    "data-id": i.id,
    ownerState: Y
  }, P, {
    ref: n,
    children: [/* @__PURE__ */ A.jsx(Aae, J({
      variant: "standard",
      as: Y.slots.baseFormControl
    }, re, O, {
      className: nt(te.deleteIcon, re.className, O.className),
      ownerState: Y,
      children: /* @__PURE__ */ A.jsx(Y.slots.baseIconButton, J({
        "aria-label": D.current.getLocaleText("filterPanelDeleteIconLabel"),
        title: D.current.getLocaleText("filterPanelDeleteIconLabel"),
        onClick: _e,
        size: "small",
        disabled: _
      }, (it = Y.slotProps) == null ? void 0 : it.baseIconButton, {
        children: /* @__PURE__ */ A.jsx(Y.slots.filterPanelDeleteIcon, {
          fontSize: "small"
        })
      }))
    })), /* @__PURE__ */ A.jsx($ae, J({
      variant: "standard",
      as: Y.slots.baseFormControl
    }, re, E, {
      sx: [ne ? {
        display: "flex"
      } : {
        display: "none"
      }, p ? {
        visibility: "visible"
      } : {
        visibility: "hidden"
      }, re.sx, E.sx],
      className: nt(te.logicOperatorInput, re.className, E.className),
      ownerState: Y,
      children: /* @__PURE__ */ A.jsx(Y.slots.baseSelect, J({
        inputProps: {
          "aria-label": D.current.getLocaleText("filterPanelLogicOperator")
        },
        value: q ?? "",
        onChange: we,
        disabled: !!m || C.length === 1,
        native: j
      }, (wt = Y.slotProps) == null ? void 0 : wt.baseSelect, {
        children: C.map((ct) => /* @__PURE__ */ S.createElement(Y.slots.baseSelectOption, J({}, fe, {
          native: j,
          key: ct.toString(),
          value: ct.toString()
        }), D.current.getLocaleText(Vae(ct))))
      }))
    })), /* @__PURE__ */ A.jsxs(jae, J({
      variant: "standard",
      as: Y.slots.baseFormControl
    }, re, L, {
      className: nt(te.columnInput, re.className, L.className),
      ownerState: Y,
      children: [/* @__PURE__ */ A.jsx(Y.slots.baseInputLabel, J({}, ie, {
        htmlFor: H,
        id: I,
        children: D.current.getLocaleText("filterPanelColumns")
      })), /* @__PURE__ */ A.jsx(Y.slots.baseSelect, J({
        labelId: I,
        id: H,
        label: D.current.getLocaleText("filterPanelColumns"),
        value: de ?? "",
        onChange: Re,
        native: j,
        disabled: _
      }, (gt = Y.slotProps) == null ? void 0 : gt.baseSelect, {
        children: pe.map((ct) => /* @__PURE__ */ S.createElement(Y.slots.baseSelectOption, J({}, fe, {
          native: j,
          key: ct.field,
          value: ct.field
        }), Ib(ct)))
      }))]
    })), /* @__PURE__ */ A.jsxs(zae, J({
      variant: "standard",
      as: Y.slots.baseFormControl
    }, re, k, {
      className: nt(te.operatorInput, re.className, k.className),
      ownerState: Y,
      children: [/* @__PURE__ */ A.jsx(Y.slots.baseInputLabel, J({}, ie, {
        htmlFor: U,
        id: G,
        children: D.current.getLocaleText("filterPanelOperator")
      })), /* @__PURE__ */ A.jsx(Y.slots.baseSelect, J({
        labelId: G,
        label: D.current.getLocaleText("filterPanelOperator"),
        id: U,
        value: i.operator,
        onChange: ue,
        native: j,
        inputRef: W,
        disabled: _
      }, (ot = Y.slotProps) == null ? void 0 : ot.baseSelect, {
        children: (jt = be == null ? void 0 : be.filterOperators) == null ? void 0 : jt.map((ct) => /* @__PURE__ */ S.createElement(Y.slots.baseSelectOption, J({}, fe, {
          native: j,
          key: ct.value,
          value: ct.value
        }), ct.label || D.current.getLocaleText(`filterOperator${Be(ct.value)}`)))
      }))]
    })), /* @__PURE__ */ A.jsx(Hae, J({
      variant: "standard",
      as: Y.slots.baseFormControl
    }, re, me, {
      className: nt(te.valueInput, re.className, me.className),
      ownerState: Y,
      children: Ce != null && Ce.InputComponent ? /* @__PURE__ */ A.jsx(Ce.InputComponent, J({
        apiRef: D,
        item: i,
        applyValue: d,
        focusElementRef: B,
        disabled: _
      }, Ce.InputComponentProps, ce), i.field) : null
    }))]
  }));
});
process.env.NODE_ENV !== "production" && (Uk.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * Callback called when the operator, column field or value is changed.
   * @param {GridFilterItem} item The updated [[GridFilterItem]].
   */
  applyFilterChanges: a.func.isRequired,
  /**
   * Callback called when the logic operator is changed.
   * @param {GridLogicOperator} operator The new logic operator.
   */
  applyMultiFilterOperatorChanges: a.func.isRequired,
  /**
   * @ignore - do not document.
   */
  children: a.node,
  /**
   * Props passed to the column input component.
   * @default {}
   */
  columnInputProps: a.any,
  /**
   * Changes how the options in the columns selector should be ordered.
   * If not specified, the order is derived from the `columns` prop.
   */
  columnsSort: a.oneOf(["asc", "desc"]),
  /**
   * Callback called when the delete button is clicked.
   * @param {GridFilterItem} item The deleted [[GridFilterItem]].
   */
  deleteFilter: a.func.isRequired,
  /**
   * Props passed to the delete icon.
   * @default {}
   */
  deleteIconProps: a.any,
  /**
   * If `true`, disables the logic operator field but still renders it.
   */
  disableMultiFilterOperator: a.bool,
  /**
   * Allows to filter the columns displayed in the filter form.
   * @param {FilterColumnsArgs} args The columns of the grid and name of field.
   * @returns {GridColDef['field'][]} The filtered fields array.
   */
  filterColumns: a.func,
  /**
   * A ref allowing to set imperative focus.
   * It can be passed to the el
   */
  focusElementRef: a.oneOfType([a.func, a.object]),
  /**
   * If `true`, the logic operator field is rendered.
   * The field will be invisible if `showMultiFilterOperators` is also `true`.
   */
  hasMultipleFilters: a.bool.isRequired,
  /**
   * The [[GridFilterItem]] representing this form.
   */
  item: a.shape({
    field: a.string.isRequired,
    id: a.oneOfType([a.number, a.string]),
    operator: a.string.isRequired,
    value: a.any
  }).isRequired,
  /**
   * Props passed to the logic operator input component.
   * @default {}
   */
  logicOperatorInputProps: a.any,
  /**
   * Sets the available logic operators.
   * @default [GridLogicOperator.And, GridLogicOperator.Or]
   */
  logicOperators: a.arrayOf(a.oneOf(["and", "or"]).isRequired),
  /**
   * Props passed to the operator input component.
   * @default {}
   */
  operatorInputProps: a.any,
  /**
   * `true` if the filter is disabled/read only.
   * i.e. `colDef.fiterable = false` but passed in `filterModel`
   * @default false
   */
  readOnly: a.bool,
  /**
   * If `true`, the logic operator field is visible.
   */
  showMultiFilterOperators: a.bool,
  /**
   * Props passed to the value input component.
   * @default {}
   */
  valueInputProps: a.any
});
const Bae = ["logicOperators", "columnsSort", "filterFormProps", "getColumnForNewFilter", "children", "disableAddFilterButton", "disableRemoveAllButton"], OA = (e) => ({
  field: e.field,
  operator: e.filterOperators[0].value,
  id: Math.round(Math.random() * 1e5)
}), jH = tr(function(t, n) {
  var G, Y;
  const i = In(), s = Vt(), u = tt(i, vi), d = tt(i, az), p = tt(i, Ote), m = S.useRef(null), v = S.useRef(null), {
    logicOperators: y = [xa.And, xa.Or],
    columnsSort: C,
    filterFormProps: w,
    getColumnForNewFilter: R,
    disableAddFilterButton: O = !1,
    disableRemoveAllButton: E = !1
  } = t, k = Xt(t, Bae), L = i.current.upsertFilterItem, F = S.useCallback((te) => {
    i.current.setFilterLogicOperator(te);
  }, [i]), _ = S.useCallback(() => {
    let te;
    if (R && typeof R == "function") {
      const B = R({
        currentFilters: (u == null ? void 0 : u.items) || [],
        columns: d
      });
      if (B === null)
        return null;
      te = d.find(({
        field: W
      }) => W === B);
    } else
      te = d.find((B) => {
        var W;
        return (W = B.filterOperators) == null ? void 0 : W.length;
      });
    return te ? OA(te) : null;
  }, [u == null ? void 0 : u.items, d, R]), P = S.useCallback(() => {
    if (R === void 0 || typeof R != "function")
      return _();
    const te = u.items.length ? u.items : [_()].filter(Boolean), B = R({
      currentFilters: te,
      columns: d
    });
    if (B === null)
      return null;
    const W = d.find(({
      field: q
    }) => q === B);
    return W ? OA(W) : null;
  }, [u.items, d, R, _]), D = S.useMemo(() => u.items.length ? u.items : (v.current || (v.current = _()), v.current ? [v.current] : []), [u.items, _]), z = D.length > 1, {
    readOnlyFilters: K,
    validFilters: Q
  } = S.useMemo(() => D.reduce((te, B) => (p[B.field] ? te.validFilters.push(B) : te.readOnlyFilters.push(B), te), {
    readOnlyFilters: [],
    validFilters: []
  }), [D, p]), H = S.useCallback(() => {
    const te = P();
    te && i.current.upsertFilterItems([...D, te]);
  }, [i, P, D]), I = S.useCallback((te) => {
    const B = Q.length === 1;
    i.current.deleteFilterItem(te), B && i.current.hideFilterPanel();
  }, [i, Q.length]), U = S.useCallback(() => Q.length === 1 && Q[0].value === void 0 ? (i.current.deleteFilterItem(Q[0]), i.current.hideFilterPanel()) : i.current.setFilterModel(J({}, u, {
    items: K
  }), "removeAllFilterItems"), [i, K, u, Q]);
  return S.useEffect(() => {
    y.length > 0 && u.logicOperator && !y.includes(u.logicOperator) && F(y[0]);
  }, [y, F, u.logicOperator]), S.useEffect(() => {
    Q.length > 0 && m.current.focus();
  }, [Q.length]), /* @__PURE__ */ A.jsxs(vM, J({}, k, {
    ref: n,
    children: [/* @__PURE__ */ A.jsxs(AH, {
      children: [K.map((te, B) => /* @__PURE__ */ A.jsx(Uk, J({
        item: te,
        applyFilterChanges: L,
        deleteFilter: I,
        hasMultipleFilters: z,
        showMultiFilterOperators: B > 0,
        disableMultiFilterOperator: B !== 1,
        applyMultiFilterOperatorChanges: F,
        focusElementRef: null,
        readOnly: !0,
        logicOperators: y,
        columnsSort: C
      }, w), te.id == null ? B : te.id)), Q.map((te, B) => /* @__PURE__ */ A.jsx(Uk, J({
        item: te,
        applyFilterChanges: L,
        deleteFilter: I,
        hasMultipleFilters: z,
        showMultiFilterOperators: K.length + B > 0,
        disableMultiFilterOperator: K.length + B !== 1,
        applyMultiFilterOperatorChanges: F,
        focusElementRef: B === Q.length - 1 ? m : null,
        logicOperators: y,
        columnsSort: C
      }, w), te.id == null ? B + K.length : te.id))]
    }), !s.disableMultipleColumnsFiltering && !(O && E) ? /* @__PURE__ */ A.jsxs($H, {
      children: [O ? /* @__PURE__ */ A.jsx("span", {}) : /* @__PURE__ */ A.jsx(s.slots.baseButton, J({
        onClick: H,
        startIcon: /* @__PURE__ */ A.jsx(s.slots.filterPanelAddIcon, {})
      }, (G = s.slotProps) == null ? void 0 : G.baseButton, {
        children: i.current.getLocaleText("filterPanelAddFilter")
      })), !E && Q.length > 0 ? /* @__PURE__ */ A.jsx(s.slots.baseButton, J({
        onClick: U,
        startIcon: /* @__PURE__ */ A.jsx(s.slots.filterPanelRemoveAllIcon, {})
      }, (Y = s.slotProps) == null ? void 0 : Y.baseButton, {
        children: i.current.getLocaleText("filterPanelRemoveAll")
      })) : null]
    }) : null]
  }));
});
process.env.NODE_ENV !== "production" && (jH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * @ignore - do not document.
   */
  children: a.node,
  /**
   * Changes how the options in the columns selector should be ordered.
   * If not specified, the order is derived from the `columns` prop.
   */
  columnsSort: a.oneOf(["asc", "desc"]),
  /**
   * If `true`, the `Add filter` button will not be displayed.
   * @default false
   */
  disableAddFilterButton: a.bool,
  /**
   * If `true`, the `Remove all` button will be disabled
   * @default false
   */
  disableRemoveAllButton: a.bool,
  /**
   * Props passed to each filter form.
   */
  filterFormProps: a.shape({
    columnInputProps: a.any,
    columnsSort: a.oneOf(["asc", "desc"]),
    deleteIconProps: a.any,
    filterColumns: a.func,
    logicOperatorInputProps: a.any,
    operatorInputProps: a.any,
    valueInputProps: a.any
  }),
  /**
   * Function that returns the next filter item to be picked as default filter.
   * @param {GetColumnForNewFilterArgs} args Currently configured filters and columns.
   * @returns {GridColDef['field']} The field to be used for the next filter or `null` to prevent adding a filter.
   */
  getColumnForNewFilter: a.func,
  /**
   * Sets the available logic operators.
   * @default [GridLogicOperator.And, GridLogicOperator.Or]
   */
  logicOperators: a.arrayOf(a.oneOf(["and", "or"]).isRequired),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
const Uae = (e, t) => {
  const n = new Set(Object.keys(e).filter((u) => e[u] === !1)), i = new Set(Object.keys(t).filter((u) => t[u] === !1));
  if (n.size !== i.size)
    return !1;
  let s = !0;
  return n.forEach((u) => {
    i.has(u) || (s = !1);
  }), s;
}, Gae = (e, t) => (e.headerName || e.field).toLowerCase().indexOf(t) > -1, Wae = (e) => {
  const {
    classes: t
  } = e;
  return yt({
    root: ["columnsManagement"],
    header: ["columnsManagementHeader"],
    searchInput: ["columnsManagementSearchInput"],
    footer: ["columnsManagementFooter"],
    row: ["columnsManagementRow"]
  }, Gn, t);
}, kA = new Intl.Collator();
function zH(e) {
  var B, W, q, ne;
  const t = In(), n = S.useRef(null), i = tt(t, tl), s = al(() => Js(t)).current, u = tt(t, Js), d = Vt(), [p, m] = S.useState(""), v = Wae(d), {
    sort: y,
    searchPredicate: C = Gae,
    autoFocusSearchField: w = !0,
    disableShowHideToggle: R = !1,
    disableResetButton: O = !1,
    toggleAllMode: E = "all",
    getTogglableColumns: k,
    searchInputProps: L
  } = e, F = S.useMemo(() => Uae(u, s), [u, s]), _ = S.useMemo(() => {
    switch (y) {
      case "asc":
        return [...i].sort((re, X) => kA.compare(re.headerName || re.field, X.headerName || X.field));
      case "desc":
        return [...i].sort((re, X) => -kA.compare(re.headerName || re.field, X.headerName || X.field));
      default:
        return i;
    }
  }, [i, y]), P = (re) => {
    const {
      name: X
    } = re.target;
    t.current.setColumnVisibility(X, u[X] === !1);
  }, D = S.useMemo(() => {
    const re = k ? k(_) : null, X = re ? _.filter(({
      field: j
    }) => re.includes(j)) : _;
    return p ? X.filter((j) => C(j, p.toLowerCase())) : X;
  }, [_, p, C, k]), z = S.useCallback((re) => {
    const X = Js(t), j = J({}, X), ie = k ? k(i) : null;
    return (E === "filteredOnly" ? D : i).forEach((fe) => {
      fe.hideable && (ie == null || ie.includes(fe.field)) && (re ? delete j[fe.field] : j[fe.field] = !1);
    }), t.current.setColumnVisibilityModel(j);
  }, [t, i, k, E, D]), K = S.useCallback((re) => {
    m(re.target.value);
  }, []), Q = S.useMemo(() => D.filter((re) => re.hideable), [D]), H = S.useMemo(() => Q.every((re) => u[re.field] == null || u[re.field] !== !1), [u, Q]), I = S.useMemo(() => Q.every((re) => u[re.field] === !1), [u, Q]), U = S.useRef(null);
  S.useEffect(() => {
    w ? n.current.focus() : U.current && typeof U.current.focus == "function" && U.current.focus();
  }, [w]);
  let G = !1;
  const Y = (re) => G === !1 && re.hideable !== !1 ? (G = !0, !0) : !1, te = S.useCallback(() => {
    m(""), n.current.focus();
  }, []);
  return /* @__PURE__ */ A.jsxs(S.Fragment, {
    children: [/* @__PURE__ */ A.jsx(Kae, {
      className: v.header,
      ownerState: d,
      children: /* @__PURE__ */ A.jsx(Yae, J({
        as: d.slots.baseTextField,
        ownerState: d,
        placeholder: t.current.getLocaleText("columnsManagementSearchTitle"),
        inputRef: n,
        className: v.searchInput,
        value: p,
        onChange: K,
        variant: "outlined",
        size: "small",
        type: "search",
        InputProps: {
          startAdornment: /* @__PURE__ */ A.jsx(d.slots.baseInputAdornment, {
            position: "start",
            children: /* @__PURE__ */ A.jsx(d.slots.quickFilterIcon, {})
          }),
          endAdornment: /* @__PURE__ */ A.jsx(d.slots.baseIconButton, J({
            "aria-label": t.current.getLocaleText("columnsManagementDeleteIconLabel"),
            size: "small",
            sx: [p ? {
              visibility: "visible"
            } : {
              visibility: "hidden"
            }],
            tabIndex: -1,
            onClick: te
          }, (B = d.slotProps) == null ? void 0 : B.baseIconButton, {
            children: /* @__PURE__ */ A.jsx(d.slots.quickFilterClearIcon, {
              fontSize: "small"
            })
          }))
        },
        inputProps: {
          "aria-label": t.current.getLocaleText("columnsManagementSearchTitle")
        },
        autoComplete: "off",
        fullWidth: !0
      }, (W = d.slotProps) == null ? void 0 : W.baseTextField, L))
    }), /* @__PURE__ */ A.jsxs(qae, {
      className: v.root,
      ownerState: d,
      children: [D.map((re) => {
        var X;
        return /* @__PURE__ */ A.jsx(Ek, {
          className: v.row,
          control: /* @__PURE__ */ A.jsx(d.slots.baseCheckbox, J({
            disabled: re.hideable === !1,
            checked: u[re.field] !== !1,
            onClick: P,
            name: re.field,
            sx: {
              p: 0.5
            },
            inputRef: Y(re) ? U : void 0
          }, (X = d.slotProps) == null ? void 0 : X.baseCheckbox)),
          label: re.headerName || re.field
        }, re.field);
      }), D.length === 0 && /* @__PURE__ */ A.jsx(Qae, {
        ownerState: d,
        children: t.current.getLocaleText("columnsManagementNoColumns")
      })]
    }), (!R || !O) && D.length > 0 ? /* @__PURE__ */ A.jsxs(Xae, {
      ownerState: d,
      className: v.footer,
      children: [R ? /* @__PURE__ */ A.jsx("span", {}) : /* @__PURE__ */ A.jsx(Ek, {
        control: /* @__PURE__ */ A.jsx(d.slots.baseCheckbox, J({
          disabled: Q.length === 0,
          checked: H,
          indeterminate: !H && !I,
          onClick: () => z(!H),
          name: t.current.getLocaleText("columnsManagementShowHideAllText"),
          sx: {
            p: 0.5
          }
        }, (q = d.slotProps) == null ? void 0 : q.baseCheckbox)),
        label: t.current.getLocaleText("columnsManagementShowHideAllText")
      }), O ? null : /* @__PURE__ */ A.jsx(d.slots.baseButton, J({
        onClick: () => t.current.setColumnVisibilityModel(s),
        disabled: F
      }, (ne = d.slotProps) == null ? void 0 : ne.baseButton, {
        children: t.current.getLocaleText("columnsManagementReset")
      }))]
    }) : null]
  });
}
process.env.NODE_ENV !== "production" && (zH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * If `true`, the column search field will be focused automatically.
   * If `false`, the first column switch input will be focused automatically.
   * This helps to avoid input keyboard panel to popup automatically on touch devices.
   * @default true
   */
  autoFocusSearchField: a.bool,
  /**
   * If `true`, the `Reset` button will not be disabled
   * @default false
   */
  disableResetButton: a.bool,
  /**
   * If `true`, the `Show/Hide all` toggle checkbox will not be displayed.
   * @default false
   */
  disableShowHideToggle: a.bool,
  /**
   * Returns the list of togglable columns.
   * If used, only those columns will be displayed in the panel
   * which are passed as the return value of the function.
   * @param {GridColDef[]} columns The `ColDef` list of all columns.
   * @returns {GridColDef['field'][]} The list of togglable columns' field names.
   */
  getTogglableColumns: a.func,
  searchInputProps: a.object,
  searchPredicate: a.func,
  sort: a.oneOf(["asc", "desc"]),
  /**
   * Changes the behavior of the `Show/Hide All` toggle when the search field is used:
   * - `all`: Will toggle all columns.
   * - `filteredOnly`: Will only toggle columns that match the search criteria.
   * @default 'all'
   */
  toggleAllMode: a.oneOf(["all", "filteredOnly"])
});
const qae = Ue("div", {
  name: "MuiDataGrid",
  slot: "ColumnsManagement",
  overridesResolver: (e, t) => t.columnsManagement
})(({
  theme: e
}) => ({
  padding: e.spacing(0, 3, 1.5),
  display: "flex",
  flexDirection: "column",
  overflow: "auto",
  flex: "1 1",
  maxHeight: 400,
  alignItems: "flex-start"
})), Kae = Ue("div", {
  name: "MuiDataGrid",
  slot: "ColumnsManagementHeader",
  overridesResolver: (e, t) => t.columnsManagementHeader
})(({
  theme: e
}) => ({
  padding: e.spacing(1.5, 3)
})), Yae = Ue(HP, {
  name: "MuiDataGrid",
  slot: "ColumnsManagementSearchInput",
  overridesResolver: (e, t) => t.columnsManagementSearchInput
})(({
  theme: e
}) => ({
  [`& .${yi.root}`]: {
    padding: e.spacing(0, 1.5, 0, 1.5)
  },
  [`& .${yi.input}::-webkit-search-decoration,
  & .${yi.input}::-webkit-search-cancel-button,
  & .${yi.input}::-webkit-search-results-button,
  & .${yi.input}::-webkit-search-results-decoration`]: {
    /* clears the 'X' icon from Chrome */
    display: "none"
  }
})), Xae = Ue("div", {
  name: "MuiDataGrid",
  slot: "ColumnsManagementFooter",
  overridesResolver: (e, t) => t.columnsManagementFooter
})(({
  theme: e
}) => ({
  padding: e.spacing(0.5, 1, 0.5, 3),
  display: "flex",
  justifyContent: "space-between",
  borderTop: `1px solid ${e.palette.divider}`
})), Qae = Ue("div")(({
  theme: e
}) => ({
  padding: e.spacing(0.5, 0),
  color: e.palette.grey[500]
})), HH = tr(function(t, n) {
  var F, _;
  const {
    children: i,
    slotProps: s = {}
  } = t, u = s.button || {}, d = s.tooltip || {}, p = In(), m = Vt(), v = Sr(), y = Sr(), [C, w] = S.useState(!1), R = S.useRef(null), O = Vr(n, R), E = (P) => {
    var D;
    w((z) => !z), (D = u.onClick) == null || D.call(u, P);
  }, k = () => w(!1), L = (P) => {
    P.key === "Tab" && P.preventDefault(), TH(P.key) && k();
  };
  return i == null ? null : /* @__PURE__ */ A.jsxs(S.Fragment, {
    children: [/* @__PURE__ */ A.jsx(m.slots.baseTooltip, J({
      title: p.current.getLocaleText("toolbarExportLabel"),
      enterDelay: 1e3
    }, (F = m.slotProps) == null ? void 0 : F.baseTooltip, d, {
      children: /* @__PURE__ */ A.jsx(m.slots.baseButton, J({
        size: "small",
        startIcon: /* @__PURE__ */ A.jsx(m.slots.exportIcon, {}),
        "aria-expanded": C,
        "aria-label": p.current.getLocaleText("toolbarExportLabel"),
        "aria-haspopup": "menu",
        "aria-controls": C ? y : void 0,
        id: v
      }, (_ = m.slotProps) == null ? void 0 : _.baseButton, u, {
        onClick: E,
        ref: O,
        children: p.current.getLocaleText("toolbarExport")
      }))
    })), /* @__PURE__ */ A.jsx(FE, {
      open: C,
      target: R.current,
      onClose: k,
      position: "bottom-start",
      children: /* @__PURE__ */ A.jsx(NC, {
        id: y,
        className: ae.menuList,
        "aria-labelledby": v,
        onKeyDown: L,
        autoFocusItem: C,
        children: S.Children.map(i, (P) => /* @__PURE__ */ S.isValidElement(P) ? /* @__PURE__ */ S.cloneElement(P, {
          hideMenu: k
        }) : P)
      })
    })]
  });
});
process.env.NODE_ENV !== "production" && (HH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.object
});
const Jae = ["hideMenu", "options"], Zae = ["hideMenu", "options"], ese = ["csvOptions", "printOptions", "excelOptions"];
function VH(e) {
  const t = In(), {
    hideMenu: n,
    options: i
  } = e, s = Xt(e, Jae);
  return /* @__PURE__ */ A.jsx(ms, J({
    onClick: () => {
      t.current.exportDataAsCsv(i), n == null || n();
    }
  }, s, {
    children: t.current.getLocaleText("toolbarExportCSV")
  }));
}
process.env.NODE_ENV !== "production" && (VH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  hideMenu: a.func,
  options: a.shape({
    allColumns: a.bool,
    delimiter: a.string,
    disableToolbarButton: a.bool,
    escapeFormulas: a.bool,
    fields: a.arrayOf(a.string),
    fileName: a.string,
    getRowsToExport: a.func,
    includeColumnGroupsHeaders: a.bool,
    includeHeaders: a.bool,
    shouldAppendQuotes: a.bool,
    utf8WithBom: a.bool
  })
});
function BH(e) {
  const t = In(), {
    hideMenu: n,
    options: i
  } = e, s = Xt(e, Zae);
  return /* @__PURE__ */ A.jsx(ms, J({
    onClick: () => {
      t.current.exportDataAsPrint(i), n == null || n();
    }
  }, s, {
    children: t.current.getLocaleText("toolbarExportPrint")
  }));
}
process.env.NODE_ENV !== "production" && (BH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  hideMenu: a.func,
  options: a.shape({
    allColumns: a.bool,
    bodyClassName: a.string,
    copyStyles: a.bool,
    disableToolbarButton: a.bool,
    fields: a.arrayOf(a.string),
    fileName: a.string,
    getRowsToExport: a.func,
    hideFooter: a.bool,
    hideToolbar: a.bool,
    includeCheckboxes: a.bool,
    pageStyle: a.oneOfType([a.func, a.string])
  })
});
const tse = tr(function(t, n) {
  const i = t, {
    csvOptions: s = {},
    printOptions: u = {},
    excelOptions: d
  } = i, p = Xt(i, ese), v = In().current.unstable_applyPipeProcessors("exportMenu", [], {
    excelOptions: d,
    csvOptions: s,
    printOptions: u
  }).sort((y, C) => y.componentName > C.componentName ? 1 : -1);
  return v.length === 0 ? null : /* @__PURE__ */ A.jsx(HH, J({}, p, {
    ref: n,
    children: v.map((y, C) => /* @__PURE__ */ S.cloneElement(y.component, {
      key: C
    }))
  }));
});
process.env.NODE_ENV !== "production" && (tse.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  csvOptions: a.object,
  printOptions: a.object,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.object
});
const nse = ["className", "selectedRowCount"], rse = (e) => {
  const {
    classes: t
  } = e;
  return yt({
    root: ["selectedRowCount"]
  }, Gn, t);
}, ose = _r("div", {
  name: "MuiDataGrid",
  slot: "SelectedRowCount",
  overridesResolver: (e, t) => t.selectedRowCount
})(({
  theme: e
}) => ({
  alignItems: "center",
  display: "flex",
  margin: e.spacing(0, 2),
  visibility: "hidden",
  width: 0,
  height: 0,
  [e.breakpoints.up("sm")]: {
    visibility: "visible",
    width: "auto",
    height: "auto"
  }
})), UH = tr(function(t, n) {
  const {
    className: i,
    selectedRowCount: s
  } = t, u = Xt(t, nse), d = In(), p = Vt(), m = rse(p), v = d.current.getLocaleText("footerRowSelected")(s);
  return /* @__PURE__ */ A.jsx(ose, J({
    className: nt(m.root, i),
    ownerState: p
  }, u, {
    ref: n,
    children: v
  }));
});
process.env.NODE_ENV !== "production" && (UH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  selectedRowCount: a.number.isRequired,
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
const GH = tr(function(t, n) {
  var C, w;
  const i = In(), s = Vt(), u = tt(i, cte), d = tt(i, pne), p = tt(i, iM), m = !s.hideFooterSelectedRowCount && d > 0 ? /* @__PURE__ */ A.jsx(UH, {
    selectedRowCount: d
  }) : /* @__PURE__ */ A.jsx("div", {}), v = !s.hideFooterRowCount && !s.pagination ? /* @__PURE__ */ A.jsx(s.slots.footerRowCount, J({}, (C = s.slotProps) == null ? void 0 : C.footerRowCount, {
    rowCount: u,
    visibleRowCount: p
  })) : null, y = s.pagination && !s.hideFooterPagination && s.slots.pagination && /* @__PURE__ */ A.jsx(s.slots.pagination, J({}, (w = s.slotProps) == null ? void 0 : w.pagination));
  return /* @__PURE__ */ A.jsxs(cH, J({}, t, {
    ref: n,
    children: [m, v, y]
  }));
});
process.env.NODE_ENV !== "production" && (GH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
const Yb = (e, t, n, i, s, u) => {
  let d;
  switch (e) {
    case jn.LEFT:
      d = i[n];
      break;
    case jn.RIGHT:
      d = s - i[n] - t + u;
      break;
    default:
      d = void 0;
      break;
  }
  return d;
}, J0 = (e, t, n, i, s) => {
  const u = t === n - 1;
  return e === jn.LEFT && u ? !0 : i ? e === jn.LEFT ? !0 : e === jn.RIGHT ? !u : !u || s : !1;
}, Z0 = (e, t) => e === jn.RIGHT && t === 0, Db = {
  root: ae.scrollbarFiller,
  header: ae["scrollbarFiller--header"],
  borderTop: ae["scrollbarFiller--borderTop"],
  borderBottom: ae["scrollbarFiller--borderBottom"],
  pinnedRight: ae["scrollbarFiller--pinnedRight"]
};
function yM({
  header: e,
  borderTop: t = !0,
  borderBottom: n,
  pinnedRight: i
}) {
  return /* @__PURE__ */ A.jsx("div", {
    role: "presentation",
    className: nt(Db.root, e && Db.header, t && Db.borderTop, n && Db.borderBottom, i && Db.pinnedRight)
  });
}
const ise = _r("div", {
  name: "MuiDataGrid",
  slot: "SkeletonLoadingOverlay",
  overridesResolver: (e, t) => t.skeletonLoadingOverlay
})({
  minWidth: "100%",
  width: "max-content",
  // prevents overflow: clip; cutting off the x axis
  height: "100%",
  overflow: "clip"
  // y axis is hidden while the x axis is allowed to overflow
}), ase = (e) => {
  const {
    classes: t
  } = e;
  return yt({
    root: ["skeletonLoadingOverlay"]
  }, Gn, t);
}, PA = (e) => parseInt(e.getAttribute("data-colindex"), 10), sse = tr(function(t, n) {
  const i = Vt(), {
    slots: s
  } = i, u = ji(), d = ase({
    classes: i.classes
  }), p = S.useRef(null), m = Vr(p, n), v = In(), y = tt(v, li), C = (y == null ? void 0 : y.viewportInnerSize.height) ?? 0, w = Math.ceil(C / y.rowHeight), R = tt(v, LE), O = tt(v, Rf), E = S.useMemo(() => O.filter((z) => z <= R).length, [R, O]), k = tt(v, ho), L = S.useMemo(() => k.slice(0, E), [k, E]), F = tt(v, sv), _ = S.useCallback((z) => {
    if (F.left.findIndex((K) => K.field === z) !== -1)
      return jn.LEFT;
    if (F.right.findIndex((K) => K.field === z) !== -1)
      return jn.RIGHT;
  }, [F.left, F.right]), P = S.useMemo(() => {
    const z = [];
    for (let K = 0; K < w; K += 1) {
      const Q = [];
      for (let H = 0; H < L.length; H += 1) {
        const I = L[H], U = _(I.field), G = U === jn.LEFT, Y = U === jn.RIGHT, te = aH(U, u), B = te ? F[te].length : L.length - F.left.length - F.right.length, W = te ? F[te].findIndex((Ce) => Ce.field === I.field) : H - F.left.length, q = y.hasScrollY ? y.scrollbarSize : 0, ne = GE({}, u, U, Yb(U, I.computedWidth, H, O, y.columnsTotalWidth, q)), re = y.columnsTotalWidth < y.viewportOuterSize.width, X = J0(U, W, B, i.showCellVerticalBorder, re), j = Z0(U, W), ie = H === L.length - 1, fe = Y && W === 0, ce = fe && re, me = ie && !fe && re, ge = y.viewportOuterSize.width - y.columnsTotalWidth, de = Math.max(0, ge), pe = /* @__PURE__ */ A.jsx(s.skeletonCell, {
          width: de,
          empty: !0
        }, `skeleton-filler-column-${K}`), be = ie && q !== 0;
        ce && Q.push(pe), Q.push(/* @__PURE__ */ A.jsx(s.skeletonCell, {
          field: I.field,
          type: I.type,
          align: I.align,
          width: "var(--width)",
          height: y.rowHeight,
          "data-colindex": H,
          className: nt(G && ae["cell--pinnedLeft"], Y && ae["cell--pinnedRight"], X && ae["cell--withRightBorder"], j && ae["cell--withLeftBorder"]),
          style: J({
            "--width": `${I.computedWidth}px`
          }, ne)
        }, `skeleton-column-${K}-${I.field}`)), me && Q.push(pe), be && Q.push(/* @__PURE__ */ A.jsx(yM, {
          pinnedRight: F.right.length > 0
        }, `skeleton-scrollbar-filler-${K}`));
      }
      z.push(/* @__PURE__ */ A.jsx("div", {
        className: nt(ae.row, ae.rowSkeleton, K === 0 && ae["row--firstVisible"]),
        children: Q
      }, `skeleton-row-${K}`));
    }
    return z;
  }, [s, L, F, w, i.showCellVerticalBorder, y, O, _, u]);
  return Mt(v, "columnResize", (z) => {
    var W, q, ne;
    const {
      colDef: K,
      width: Q
    } = z, H = (W = p.current) == null ? void 0 : W.querySelectorAll(`[data-field="${ed(K.field)}"]`);
    if (!H)
      throw new Error("MUI X: Expected skeleton cells to be defined with `data-field` attribute.");
    const I = L.findIndex((re) => re.field === K.field), U = _(K.field), G = U === jn.LEFT, Y = U === jn.RIGHT, te = getComputedStyle(H[0]).getPropertyValue("--width"), B = parseInt(te, 10) - Q;
    if (H && H.forEach((re) => {
      re.style.setProperty("--width", `${Q}px`);
    }), G) {
      const re = (q = p.current) == null ? void 0 : q.querySelectorAll(`.${ae["cell--pinnedLeft"]}`);
      re == null || re.forEach((X) => {
        PA(X) > I && (X.style.left = `${parseInt(getComputedStyle(X).left, 10) - B}px`);
      });
    }
    if (Y) {
      const re = (ne = p.current) == null ? void 0 : ne.querySelectorAll(`.${ae["cell--pinnedRight"]}`);
      re == null || re.forEach((X) => {
        PA(X) < I && (X.style.right = `${parseInt(getComputedStyle(X).right, 10) + B}px`);
      });
    }
  }), /* @__PURE__ */ A.jsx(ise, J({
    className: d.root
  }, t, {
    ref: m,
    children: P
  }));
}), lse = ["variant", "noRowsVariant", "style"], use = {
  "circular-progress": {
    component: wE,
    style: {}
  },
  "linear-progress": {
    component: Uj,
    style: {
      display: "block"
    }
  },
  skeleton: {
    component: sse,
    style: {
      display: "block"
    }
  }
}, WH = tr(function(t, n) {
  const {
    variant: i = "circular-progress",
    noRowsVariant: s = "circular-progress",
    style: u
  } = t, d = Xt(t, lse), p = In(), m = tt(p, zC), v = use[m === 0 ? s : i];
  return /* @__PURE__ */ A.jsx(WE, J({
    style: J({}, v.style, u)
  }, d, {
    ref: n,
    children: /* @__PURE__ */ A.jsx(v.component, {})
  }));
});
process.env.NODE_ENV !== "production" && (WH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * The variant of the overlay when no rows are displayed.
   * @default 'circular-progress'
   */
  noRowsVariant: a.oneOf(["circular-progress", "linear-progress", "skeleton"]),
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The variant of the overlay.
   * @default 'circular-progress'
   */
  variant: a.oneOf(["circular-progress", "linear-progress", "skeleton"])
});
const qH = tr(function(t, n) {
  const s = In().current.getLocaleText("noRowsLabel");
  return /* @__PURE__ */ A.jsx(WE, J({}, t, {
    ref: n,
    children: s
  }));
});
process.env.NODE_ENV !== "production" && (qH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
const cse = Ue(u2)(({
  theme: e
}) => ({
  maxHeight: "calc(100% + 1px)",
  // border width
  flexGrow: 1,
  [`& .${lh.selectLabel}`]: {
    display: "none",
    [e.breakpoints.up("sm")]: {
      display: "block"
    }
  },
  [`& .${lh.input}`]: {
    display: "none",
    [e.breakpoints.up("sm")]: {
      display: "inline-flex"
    }
  }
})), dse = (e, t) => ({
  from: n,
  to: i,
  count: s,
  page: u
}) => e({
  from: n,
  to: i,
  count: s,
  page: u,
  estimated: t
}), fse = ({
  from: e,
  to: t,
  count: n,
  estimated: i
}) => i ? `${e}–${t} of ${n !== -1 ? n : `more than ${i > t ? i : t}`}` : `${e}–${t} of ${n !== -1 ? n : `more than ${t}`}`, KH = tr(function(t, n) {
  var P;
  const i = In(), s = Vt(), u = tt(i, ia), d = tt(i, Eg), p = tt(i, Nz), {
    paginationMode: m,
    loading: v,
    estimatedRowCount: y
  } = s, C = S.useMemo(() => d === -1 && m === "server" && v ? {
    backIconButtonProps: {
      disabled: !0
    },
    nextIconButtonProps: {
      disabled: !0
    }
  } : {}, [v, m, d]), w = S.useMemo(() => Math.max(0, p - 1), [p]), R = S.useMemo(() => d === -1 || u.page <= w ? u.page : w, [w, u.page, d]), O = S.useCallback((D) => {
    const z = Number(D.target.value);
    i.current.setPageSize(z);
  }, [i]), E = S.useCallback((D, z) => {
    i.current.setPage(z);
  }, [i]), k = (D) => {
    for (let z = 0; z < s.pageSizeOptions.length; z += 1) {
      const K = s.pageSizeOptions[z];
      if (typeof K == "number") {
        if (K === D)
          return !0;
      } else if (K.value === D)
        return !0;
    }
    return !1;
  };
  if (process.env.NODE_ENV !== "production") {
    const D = S.useRef(!1), z = ((P = s.paginationModel) == null ? void 0 : P.pageSize) ?? u.pageSize;
    !D.current && !s.autoPageSize && !k(z) && (console.warn([`MUI X: The page size \`${u.pageSize}\` is not present in the \`pageSizeOptions\`.`, "Add it to show the pagination select."].join(`
`)), D.current = !0);
  }
  const L = k(u.pageSize) ? s.pageSizeOptions : [], F = i.current.getLocaleText("MuiTablePagination"), _ = dse(F.labelDisplayedRows || fse, y);
  return /* @__PURE__ */ A.jsx(cse, J({
    component: "div",
    count: d,
    page: R,
    rowsPerPageOptions: L,
    rowsPerPage: u.pageSize,
    onPageChange: E,
    onRowsPerPageChange: O
  }, C, F, {
    labelDisplayedRows: _
  }, t, {
    ref: n
  }));
});
process.env.NODE_ENV !== "production" && (KH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  component: a.elementType
});
const pse = ["className", "rowCount", "visibleRowCount"], hse = (e) => {
  const {
    classes: t
  } = e;
  return yt({
    root: ["rowCount"]
  }, Gn, t);
}, mse = _r("div", {
  name: "MuiDataGrid",
  slot: "RowCount",
  overridesResolver: (e, t) => t.rowCount
})(({
  theme: e
}) => ({
  alignItems: "center",
  display: "flex",
  margin: e.spacing(0, 2)
})), YH = tr(function(t, n) {
  const {
    className: i,
    rowCount: s,
    visibleRowCount: u
  } = t, d = Xt(t, pse), p = In(), m = Vt(), v = hse(m);
  if (s === 0)
    return null;
  const y = u < s ? p.current.getLocaleText("footerTotalVisibleRows")(u, s) : s.toLocaleString();
  return /* @__PURE__ */ A.jsxs(mse, J({
    className: nt(v.root, i),
    ownerState: m
  }, d, {
    ref: n,
    children: [p.current.getLocaleText("footerTotalRows"), " ", y]
  }));
});
process.env.NODE_ENV !== "production" && (YH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  rowCount: a.number.isRequired,
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  visibleRowCount: a.number.isRequired
});
function gse(e) {
  for (const t in e)
    return !1;
  return !0;
}
function vse(e, t) {
  return yt(t, Gn, e);
}
const yse = ["selected", "rowId", "row", "index", "style", "rowHeight", "className", "visibleColumns", "pinnedColumns", "offsetLeft", "columnsTotalWidth", "firstColumnIndex", "lastColumnIndex", "focusedColumnIndex", "isFirstVisible", "isLastVisible", "isNotVisible", "showBottomBorder", "scrollbarWidth", "gridHasFiller", "onClick", "onDoubleClick", "onMouseEnter", "onMouseLeave", "onMouseOut", "onMouseOver"], bse = jC(si, (e, t) => t ? !!gse(e) : !1), XH = tr(function(t, n) {
  var vt;
  const {
    selected: i,
    rowId: s,
    row: u,
    index: d,
    style: p,
    rowHeight: m,
    className: v,
    visibleColumns: y,
    pinnedColumns: C,
    offsetLeft: w,
    columnsTotalWidth: R,
    firstColumnIndex: O,
    lastColumnIndex: E,
    focusedColumnIndex: k,
    isFirstVisible: L,
    isLastVisible: F,
    isNotVisible: _,
    showBottomBorder: P,
    scrollbarWidth: D,
    gridHasFiller: z,
    onClick: K,
    onDoubleClick: Q,
    onMouseEnter: H,
    onMouseLeave: I,
    onMouseOut: U,
    onMouseOver: G
  } = t, Y = Xt(t, yse), te = Cs(), B = mM(), W = S.useRef(null), q = Vt(), ne = fM(te), re = tt(te, Al), X = tt(te, yh), j = tt(te, Rf), ie = q.rowReordering, fe = pC(te, bse, ie), ce = Vr(W, n), me = te.current.getRowNode(s), ge = pC(te, oH, {
    rowId: s,
    editMode: q.editMode
  }), de = q.editMode === qu.Row, pe = k !== void 0, be = pe && k >= C.left.length && k < O, Ce = pe && k < y.length - C.right.length && k >= E, Re = vse(q.classes, {
    root: ["row", i && "selected", de && "row--editable", ge && "row--editing", L && "row--firstVisible", F && "row--lastVisible", P && "row--borderBottom", m === "auto" && "row--dynamicHeight"]
  }), ue = B.hooks.useGridRowAriaAttributes();
  S.useLayoutEffect(() => {
    if (ne.range) {
      const Qe = te.current.getRowIndexRelativeToVisibleRows(s);
      Qe !== void 0 && te.current.unstable_setLastMeasuredRowIndex(Qe);
    }
    if (W.current && m === "auto")
      return te.current.observeRowHeight(W.current, s);
  }, [te, ne.range, m, s]);
  const we = S.useCallback((Qe, Oe) => (Me) => {
    qC(Me) || te.current.getRow(s) && (te.current.publishEvent(Qe, te.current.getRowParams(s), Me), Oe && Oe(Me));
  }, [te, s]), _e = S.useCallback((Qe) => {
    const Oe = X0(Qe.target, ae.cell), Me = Oe == null ? void 0 : Oe.getAttribute("data-field");
    if (Me) {
      if (Me === cv.field || Me === $E || Me === "__reorder__" || te.current.getCellMode(s, Me) === vr.Edit)
        return;
      const ht = te.current.getColumn(Me);
      if ((ht == null ? void 0 : ht.type) === _E)
        return;
    }
    we("rowClick", K)(Qe);
  }, [te, K, we, s]), {
    slots: He,
    slotProps: et,
    disableColumnReorder: Ne
  } = q, rt = tt(te, () => J({}, te.current.getRowHeightEntry(s)), XP), it = S.useMemo(() => {
    if (_)
      return {
        opacity: 0,
        width: 0,
        height: 0
      };
    const Qe = J({}, p, {
      maxHeight: m === "auto" ? "none" : m,
      // max-height doesn't support "auto"
      minHeight: m,
      "--height": typeof m == "number" ? `${m}px` : m
    });
    if (rt.spacingTop) {
      const Oe = q.rowSpacingType === "border" ? "borderTopWidth" : "marginTop";
      Qe[Oe] = rt.spacingTop;
    }
    if (rt.spacingBottom) {
      const Oe = q.rowSpacingType === "border" ? "borderBottomWidth" : "marginBottom";
      let Me = Qe[Oe];
      typeof Me != "number" && (Me = parseInt(Me || "0", 10)), Me += rt.spacingBottom, Qe[Oe] = Me;
    }
    return Qe;
  }, [_, m, p, rt, q.rowSpacingType]), wt = te.current.unstable_applyPipeProcessors("rowClassName", [], s), gt = ue(me, d);
  if (typeof q.getRowClassName == "function") {
    const Qe = d - (((vt = ne.range) == null ? void 0 : vt.firstRowIndex) || 0), Oe = J({}, te.current.getRowParams(s), {
      isFirstVisible: Qe === 0,
      isLastVisible: Qe === ne.rows.length - 1,
      indexRelativeToCurrentPage: Qe
    });
    wt.push(q.getRowClassName(Oe));
  }
  const ot = (Qe, Oe, Me, ht, xt = jn.NONE) => {
    const zt = te.current.unstable_getCellColSpanInfo(s, Me);
    if (zt != null && zt.spannedByColSpan)
      return null;
    const bt = (zt == null ? void 0 : zt.cellProps.width) ?? Qe.computedWidth, Ge = (zt == null ? void 0 : zt.cellProps.colSpan) ?? 1, Et = Yb(xt, Qe.computedWidth, Me, j, R, D);
    if (me.type === "skeletonRow")
      return /* @__PURE__ */ A.jsx(He.skeletonCell, {
        type: Qe.type,
        width: bt,
        height: m,
        field: Qe.field,
        align: Qe.align
      }, Qe.field);
    const At = Qe.field === "__reorder__", pn = !(Ne || Qe.disableReorder), fn = fe && !re.length && X <= 1, hr = !(pn || At && fn), qn = xt === jn.VIRTUAL, Dr = Z0(xt, Oe), mr = J0(xt, Oe, ht, q.showCellVerticalBorder, z);
    return /* @__PURE__ */ A.jsx(He.cell, J({
      column: Qe,
      width: bt,
      rowId: s,
      align: Qe.align || "left",
      colIndex: Me,
      colSpan: Ge,
      disableDragEvents: hr,
      isNotVisible: qn,
      pinnedOffset: Et,
      pinnedPosition: xt,
      showLeftBorder: Dr,
      showRightBorder: mr,
      row: u,
      rowNode: me
    }, et == null ? void 0 : et.cell), Qe.field);
  }, jt = C.left.map((Qe, Oe) => ot(Qe, Oe, Oe, C.left.length, jn.LEFT)), ct = C.right.map((Qe, Oe) => {
    const Me = y.length - C.right.length + Oe;
    return ot(Qe, Oe, Me, C.right.length, jn.RIGHT);
  }), Tt = y.length - C.left.length - C.right.length, Rt = [];
  be && Rt.push(ot(y[k], k - C.left.length, k, Tt, jn.VIRTUAL));
  for (let Qe = O; Qe < E; Qe += 1) {
    const Oe = y[Qe], Me = Qe - C.left.length;
    Oe && Rt.push(ot(Oe, Me, Qe, Tt));
  }
  Ce && Rt.push(ot(y[k], k - C.left.length, k, Tt, jn.VIRTUAL));
  const Lt = u ? {
    onClick: _e,
    onDoubleClick: we("rowDoubleClick", Q),
    onMouseEnter: we("rowMouseEnter", H),
    onMouseLeave: we("rowMouseLeave", I),
    onMouseOut: we("rowMouseOut", U),
    onMouseOver: we("rowMouseOver", G)
  } : null;
  return /* @__PURE__ */ A.jsxs("div", J({
    "data-id": s,
    "data-rowindex": d,
    role: "row",
    className: nt(...wt, Re.root, v),
    style: it
  }, gt, Lt, Y, {
    ref: ce,
    children: [jt, /* @__PURE__ */ A.jsx("div", {
      role: "presentation",
      className: ae.cellOffsetLeft,
      style: {
        width: w
      }
    }), Rt, /* @__PURE__ */ A.jsx("div", {
      role: "presentation",
      className: nt(ae.cell, ae.cellEmpty)
    }), ct, D !== 0 && /* @__PURE__ */ A.jsx(yM, {
      pinnedRight: C.right.length > 0,
      borderTop: !L
    })]
  }));
});
process.env.NODE_ENV !== "production" && (XH.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  columnsTotalWidth: a.number.isRequired,
  firstColumnIndex: a.number.isRequired,
  /**
   * Determines which cell has focus.
   * If `null`, no cell in this row has focus.
   */
  focusedColumnIndex: a.number,
  gridHasFiller: a.bool.isRequired,
  /**
   * Index of the row in the whole sorted and filtered dataset.
   * If some rows above have expanded children, this index also take those children into account.
   */
  index: a.number.isRequired,
  isFirstVisible: a.bool.isRequired,
  isLastVisible: a.bool.isRequired,
  isNotVisible: a.bool.isRequired,
  lastColumnIndex: a.number.isRequired,
  offsetLeft: a.number.isRequired,
  onClick: a.func,
  onDoubleClick: a.func,
  onMouseEnter: a.func,
  onMouseLeave: a.func,
  pinnedColumns: a.object.isRequired,
  row: a.object.isRequired,
  rowHeight: a.oneOfType([a.oneOf(["auto"]), a.number]).isRequired,
  rowId: a.oneOfType([a.number, a.string]).isRequired,
  scrollbarWidth: a.number.isRequired,
  selected: a.bool.isRequired,
  showBottomBorder: a.bool.isRequired,
  visibleColumns: a.arrayOf(a.object).isRequired
});
const Cse = Jc(XH), Sse = () => {
  const e = Cs(), t = Vt(), n = tt(e, ho), i = tt(e, oM), s = tt(e, GC), u = tt(e, K2);
  return {
    role: "grid",
    "aria-colcount": n.length,
    "aria-rowcount": s + 1 + u + i,
    "aria-multiselectable": aM(t)
  };
}, wse = () => {
  const e = Cs(), t = tt(e, hf), n = tt(e, GC);
  return S.useCallback((i, s) => {
    const u = {}, d = s + n + 2;
    return u["aria-rowindex"] = d, e.current.isRowSelectable(i.id) && (u["aria-selected"] = t[i.id] !== void 0), u;
  }, [e, t, n]);
};
function xse({
  privateApiRef: e,
  configuration: t,
  props: n,
  children: i
}) {
  const s = S.useRef(e.current.getPublicApi());
  return /* @__PURE__ */ A.jsx(hM.Provider, {
    value: t,
    children: /* @__PURE__ */ A.jsx(KP.Provider, {
      value: n,
      children: /* @__PURE__ */ A.jsx(dM.Provider, {
        value: e,
        children: /* @__PURE__ */ A.jsx(qP.Provider, {
          value: s,
          children: i
        })
      })
    })
  });
}
const Ese = (e) => {
  const t = S.useRef(null), n = S.useRef(null), i = S.useRef(null), s = S.useRef(null), u = S.useRef(null), d = S.useRef(null);
  e.current.register("public", {
    rootElementRef: t
  }), e.current.register("private", {
    mainElementRef: n,
    virtualScrollerRef: i,
    virtualScrollbarVerticalRef: s,
    virtualScrollbarHorizontalRef: u,
    columnHeadersContainerRef: d
  });
}, Tse = (e) => {
  const t = ji();
  e.current.state.isRtl === void 0 && (e.current.state.isRtl = t);
  const n = S.useRef(!0);
  S.useEffect(() => {
    n.current ? n.current = !1 : e.current.setState((i) => J({}, i, {
      isRtl: t
    }));
  }, [e, t]);
}, Rse = wte() && window.localStorage.getItem("DEBUG") != null, Vb = () => {
}, Ose = {
  debug: Vb,
  info: Vb,
  warn: Vb,
  error: Vb
}, MA = ["debug", "info", "warn", "error"];
function IA(e, t, n = console) {
  const i = MA.indexOf(t);
  if (i === -1)
    throw new Error(`MUI X: Log level ${t} not recognized.`);
  return MA.reduce((u, d, p) => (p >= i ? u[d] = (...m) => {
    const [v, ...y] = m;
    n[d](`MUI X: ${e} - ${v}`, ...y);
  } : u[d] = Vb, u), {});
}
const kse = (e, t) => {
  const n = S.useCallback((i) => Rse ? IA(i, "debug", t.logger) : t.logLevel ? IA(i, t.logLevel.toString(), t.logger) : Ose, [t.logLevel, t.logger]);
  Mn(e, {
    getLogger: n
  }, "private");
};
class Pse {
  constructor() {
    this.maxListeners = 20, this.warnOnce = !1, this.events = {};
  }
  on(t, n, i = {}) {
    let s = this.events[t];
    if (s || (s = {
      highPriority: /* @__PURE__ */ new Map(),
      regular: /* @__PURE__ */ new Map()
    }, this.events[t] = s), i.isFirst ? s.highPriority.set(n, !0) : s.regular.set(n, !0), process.env.NODE_ENV !== "production") {
      const u = s.highPriority.size + s.regular.size;
      u > this.maxListeners && !this.warnOnce && (this.warnOnce = !0, console.warn([`Possible EventEmitter memory leak detected. ${u} ${t} listeners added.`].join(`
`)));
    }
  }
  removeListener(t, n) {
    this.events[t] && (this.events[t].regular.delete(n), this.events[t].highPriority.delete(n));
  }
  removeAllListeners() {
    this.events = {};
  }
  emit(t, ...n) {
    const i = this.events[t];
    if (!i)
      return;
    const s = Array.from(i.highPriority.keys()), u = Array.from(i.regular.keys());
    for (let d = s.length - 1; d >= 0; d -= 1) {
      const p = s[d];
      i.highPriority.has(p) && p.apply(this, n);
    }
    for (let d = 0; d < u.length; d += 1) {
      const p = u[d];
      i.regular.has(p) && p.apply(this, n);
    }
  }
  once(t, n) {
    const i = this;
    this.on(t, function s(...u) {
      i.removeListener(t, s), n.apply(i, u);
    });
  }
}
class bM {
  static create(t) {
    return new bM(t);
  }
  constructor(t) {
    this.value = void 0, this.listeners = void 0, this.subscribe = (n) => (this.listeners.add(n), () => {
      this.listeners.delete(n);
    }), this.getSnapshot = () => this.value, this.update = (n) => {
      this.value = n, this.listeners.forEach((i) => i(n));
    }, this.value = t, this.listeners = /* @__PURE__ */ new Set();
  }
}
const QH = Symbol("mui.api_private"), Mse = (e) => e.isPropagationStopped !== void 0;
let DA = 0;
function Ise(e) {
  var s;
  const t = (s = e.current) == null ? void 0 : s[QH];
  if (t)
    return t;
  const n = {}, i = {
    state: n,
    store: bM.create(n),
    instanceId: {
      id: DA
    }
  };
  return DA += 1, i.getPublicApi = () => e.current, i.register = (u, d) => {
    Object.keys(d).forEach((p) => {
      const m = d[p], v = i[p];
      if ((v == null ? void 0 : v.spying) === !0 ? v.target = m : i[p] = m, u === "public") {
        const y = e.current, C = y[p];
        (C == null ? void 0 : C.spying) === !0 ? C.target = m : y[p] = m;
      }
    });
  }, i.register("private", {
    caches: {},
    eventManager: new Pse()
  }), i;
}
function Dse(e) {
  return {
    get state() {
      return e.current.state;
    },
    get store() {
      return e.current.store;
    },
    get instanceId() {
      return e.current.instanceId;
    },
    [QH]: e.current
  };
}
function Nse(e, t) {
  var d;
  const n = S.useRef(null), i = S.useRef(null);
  i.current || (i.current = Ise(n)), n.current || (n.current = Dse(i));
  const s = S.useCallback((...p) => {
    const [m, v, y = {}] = p;
    if (y.defaultMuiPrevented = !1, Mse(y) && y.isPropagationStopped())
      return;
    const C = t.signature === gs.DataGridPro || t.signature === gs.DataGridPremium ? {
      api: i.current.getPublicApi()
    } : {};
    i.current.eventManager.emit(m, v, y, C);
  }, [i, t.signature]), u = S.useCallback((p, m, v) => {
    i.current.eventManager.on(p, m, v);
    const y = i.current;
    return () => {
      y.eventManager.removeListener(p, m);
    };
  }, [i]);
  return Mn(i, {
    subscribeEvent: u,
    publishEvent: s
  }, "public"), e && !((d = e.current) != null && d.state) && (e.current = n.current), S.useImperativeHandle(e, () => n.current, [n]), S.useEffect(() => {
    const p = i.current;
    return () => {
      p.publishEvent("unmount");
    };
  }, [i]), i;
}
const Lse = (e, t) => {
  const n = S.useCallback((i) => {
    if (t.localeText[i] == null)
      throw new Error(`Missing translation for key ${i}.`);
    return t.localeText[i];
  }, [t.localeText]);
  e.current.register("public", {
    getLocaleText: n
  });
};
function vC(e) {
  "@babel/helpers - typeof";
  return vC = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t) {
    return typeof t;
  } : function(t) {
    return t && typeof Symbol == "function" && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
  }, vC(e);
}
function Fse(e, t) {
  if (vC(e) != "object" || !e) return e;
  var n = e[Symbol.toPrimitive];
  if (n !== void 0) {
    var i = n.call(e, t);
    if (vC(i) != "object") return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return String(e);
}
function yC(e) {
  var t = Fse(e, "string");
  return vC(t) == "symbol" ? t : t + "";
}
const _se = (e) => {
  const t = S.useRef({}), n = S.useRef(!1), i = S.useCallback((y) => {
    n.current || !y || (n.current = !0, Object.values(y.appliers).forEach((C) => {
      C();
    }), n.current = !1);
  }, []), s = S.useCallback((y, C, w) => {
    t.current[y] || (t.current[y] = {
      processors: /* @__PURE__ */ new Map(),
      processorsAsArray: [],
      appliers: {}
    });
    const R = t.current[y];
    return R.processors.get(C) !== w && (R.processors.set(C, w), R.processorsAsArray = Array.from(t.current[y].processors.values()).filter((E) => E !== null), i(R)), () => {
      t.current[y].processors.set(C, null), t.current[y].processorsAsArray = Array.from(t.current[y].processors.values()).filter((E) => E !== null);
    };
  }, [i]), u = S.useCallback((y, C, w) => (t.current[y] || (t.current[y] = {
    processors: /* @__PURE__ */ new Map(),
    processorsAsArray: [],
    appliers: {}
  }), t.current[y].appliers[C] = w, () => {
    const R = t.current[y].appliers, O = Xt(R, [C].map(yC));
    t.current[y].appliers = O;
  }), []), d = S.useCallback((y) => {
    i(t.current[y]);
  }, [i]), p = S.useCallback((...y) => {
    const [C, w, R] = y;
    if (!t.current[C])
      return w;
    const O = t.current[C].processorsAsArray;
    let E = w;
    for (let k = 0; k < O.length; k += 1)
      E = O[k](E, R);
    return E;
  }, []), m = {
    registerPipeProcessor: s,
    registerPipeApplier: u,
    requestPipeProcessorsApplication: d
  }, v = {
    unstable_applyPipeProcessors: p
  };
  Mn(e, m, "private"), Mn(e, v, "public");
}, no = (e, t, n, i = !0) => {
  const s = S.useRef(null), u = S.useRef(`mui-${Math.round(Math.random() * 1e9)}`), d = S.useCallback(() => {
    s.current = e.current.registerPipeProcessor(t, u.current, n);
  }, [e, n, t]);
  HC(() => {
    i && d();
  });
  const p = S.useRef(!0);
  S.useEffect(() => (p.current ? p.current = !1 : i && d(), () => {
    s.current && (s.current(), s.current = null);
  }), [d, i]);
}, CM = (e, t, n) => {
  const i = S.useRef(null), s = S.useRef(`mui-${Math.round(Math.random() * 1e9)}`), u = S.useCallback(() => {
    i.current = e.current.registerPipeApplier(t, s.current, n);
  }, [e, n, t]);
  HC(() => {
    u();
  });
  const d = S.useRef(!0);
  S.useEffect(() => (d.current ? d.current = !1 : u(), () => {
    i.current && (i.current(), i.current = null);
  }), [u]);
}, eE = (e, t, n, i) => {
  const s = S.useCallback(() => {
    e.current.registerStrategyProcessor(t, n, i);
  }, [e, i, n, t]);
  HC(() => {
    s();
  });
  const u = S.useRef(!0);
  S.useEffect(() => {
    u.current ? u.current = !1 : s();
  }, [s]);
}, ph = "none", NA = {
  rowTreeCreation: "rowTree",
  filtering: "rowTree",
  sorting: "rowTree",
  visibleRowsLookupCreation: "rowTree"
}, Ase = (e) => {
  const t = S.useRef(/* @__PURE__ */ new Map()), n = S.useRef({}), i = S.useCallback((m, v, y) => {
    const C = () => {
      const O = n.current[v], E = Xt(O, [m].map(yC));
      n.current[v] = E;
    };
    n.current[v] || (n.current[v] = {});
    const w = n.current[v], R = w[m];
    return w[m] = y, !R || R === y || m === e.current.getActiveStrategy(NA[v]) && e.current.publishEvent("activeStrategyProcessorChange", v), C;
  }, [e]), s = S.useCallback((m, v) => {
    const y = e.current.getActiveStrategy(NA[m]);
    if (y == null)
      throw new Error("Can't apply a strategy processor before defining an active strategy");
    const C = n.current[m];
    if (!C || !C[y])
      throw new Error(`No processor found for processor "${m}" on strategy "${y}"`);
    const w = C[y];
    return w(v);
  }, [e]), u = S.useCallback((m) => {
    const y = Array.from(t.current.entries()).find(([, C]) => C.group !== m ? !1 : C.isAvailable());
    return (y == null ? void 0 : y[0]) ?? ph;
  }, []), d = S.useCallback((m, v, y) => {
    t.current.set(v, {
      group: m,
      isAvailable: y
    }), e.current.publishEvent("strategyAvailabilityChange");
  }, [e]);
  Mn(e, {
    registerStrategyProcessor: i,
    applyStrategyProcessor: s,
    getActiveStrategy: u,
    setStrategyAvailability: d
  }, "private");
}, $se = (e) => {
  const t = S.useRef({}), n = S.useCallback((m) => {
    t.current[m.stateId] = m;
  }, []), i = S.useCallback((m, v) => {
    let y;
    if (Ste(m) ? y = m(e.current.state) : y = m, e.current.state === y)
      return !1;
    let C = !1;
    const w = [];
    if (Object.keys(t.current).forEach((R) => {
      const O = t.current[R], E = O.stateSelector(e.current.state, e.current.instanceId), k = O.stateSelector(y, e.current.instanceId);
      k !== E && (w.push({
        stateId: O.stateId,
        hasPropChanged: k !== O.propModel
      }), O.propModel !== void 0 && k !== O.propModel && (C = !0));
    }), w.length > 1)
      throw new Error(`You're not allowed to update several sub-state in one transaction. You already updated ${w[0].stateId}, therefore, you're not allowed to update ${w.map((R) => R.stateId).join(", ")} in the same transaction.`);
    if (C || (e.current.state = y, e.current.publishEvent("stateChange", y), e.current.store.update(y)), w.length === 1) {
      const {
        stateId: R,
        hasPropChanged: O
      } = w[0], E = t.current[R], k = E.stateSelector(y, e.current.instanceId);
      E.propOnChange && O && E.propOnChange(k, {
        reason: v,
        api: e.current
      }), C || e.current.publishEvent(E.changeEvent, k, {
        reason: v
      });
    }
    return !C;
  }, [e]), s = S.useCallback((m, v, y) => e.current.setState((C) => J({}, C, {
    [m]: v(C[m])
  }), y), [e]), u = S.useCallback(() => {
  }, []), d = {
    setState: i,
    forceUpdate: u
  }, p = {
    updateControlState: s,
    registerControlState: n
  };
  Mn(e, d, "public"), Mn(e, p, "private");
}, jse = (e, t) => J({}, e, {
  props: {
    getRowId: t.getRowId
  }
}), zse = (e, t) => {
  S.useEffect(() => {
    e.current.setState((n) => J({}, n, {
      props: {
        getRowId: t.getRowId
      }
    }));
  }, [e, t.getRowId]);
}, Hse = (e, t) => {
  const n = Nse(e, t);
  return Ese(n), zse(n, t), Tse(n), kse(n, t), $se(n), _se(n), Ase(n), Lse(n, t), n.current.register("private", {
    rootProps: t
  }), n;
}, ai = (e, t, n) => {
  const i = S.useRef(!1);
  i.current || (t.current.state = e(t.current.state, n, t), i.current = !0);
};
function Gk(e, t) {
  if (e == null)
    return "";
  const n = typeof e == "string" ? e : `${e}`;
  if (t.shouldAppendQuotes || t.escapeFormulas) {
    const i = n.replace(/"/g, '""');
    return t.escapeFormulas && ["=", "+", "-", "@", "	", "\r"].includes(i[0]) ? `"'${i}"` : [t.delimiter, `
`, "\r", '"'].some((s) => n.includes(s)) ? `"${i}"` : i;
  }
  return n;
}
const JH = (e, t) => {
  var u, d;
  const {
    csvOptions: n,
    ignoreValueFormatter: i
  } = t;
  let s;
  if (i) {
    const p = e.colDef.type;
    p === "number" ? s = String(e.value) : p === "date" || p === "dateTime" ? s = (u = e.value) == null ? void 0 : u.toISOString() : typeof ((d = e.value) == null ? void 0 : d.toString) == "function" ? s = e.value.toString() : s = e.value;
  } else
    s = e.formattedValue;
  return Gk(s, n);
};
class Wk {
  constructor(t) {
    this.options = void 0, this.rowString = "", this.isEmpty = !0, this.options = t;
  }
  addValue(t) {
    this.isEmpty || (this.rowString += this.options.csvOptions.delimiter), typeof this.options.sanitizeCellValue == "function" ? this.rowString += this.options.sanitizeCellValue(t, this.options.csvOptions) : this.rowString += t, this.isEmpty = !1;
  }
  getRowString() {
    return this.rowString;
  }
}
const Vse = ({
  id: e,
  columns: t,
  getCellParams: n,
  csvOptions: i,
  ignoreValueFormatter: s
}) => {
  const u = new Wk({
    csvOptions: i
  });
  return t.forEach((d) => {
    const p = n(e, d.field);
    process.env.NODE_ENV !== "production" && String(p.formattedValue) === "[object Object]" && el(["MUI X: When the value of a field is an object or a `renderCell` is provided, the CSV export might not display the value correctly.", "You can provide a `valueFormatter` with a string representation to be used."]), u.addValue(JH(p, {
      ignoreValueFormatter: s,
      csvOptions: i
    }));
  }), u.getRowString();
};
function Bse(e) {
  const {
    columns: t,
    rowIds: n,
    csvOptions: i,
    ignoreValueFormatter: s,
    apiRef: u
  } = e, d = n.reduce((C, w) => `${C}${Vse({
    id: w,
    columns: t,
    getCellParams: u.current.getCellParams,
    ignoreValueFormatter: s,
    csvOptions: i
  })}\r
`, "").trim();
  if (!i.includeHeaders)
    return d;
  const p = t.filter((C) => C.field !== cv.field), m = [];
  if (i.includeColumnGroupsHeaders) {
    const C = u.current.getAllGroupDetails();
    let w = 0;
    const R = p.reduce((O, E) => {
      const k = u.current.getColumnGroupPath(E.field);
      return O[E.field] = k, w = Math.max(w, k.length), O;
    }, {});
    for (let O = 0; O < w; O += 1) {
      const E = new Wk({
        csvOptions: i,
        sanitizeCellValue: Gk
      });
      m.push(E), p.forEach((k) => {
        const L = (R[k.field] || [])[O], F = C[L];
        E.addValue(F ? F.headerName || F.groupId : "");
      });
    }
  }
  const v = new Wk({
    csvOptions: i,
    sanitizeCellValue: Gk
  });
  return p.forEach((C) => {
    v.addValue(C.headerName || C.field);
  }), m.push(v), `${`${m.map((C) => C.getRowString()).join(`\r
`)}\r
`}${d}`.trim();
}
function LA(e) {
  const t = document.createElement("span");
  t.style.whiteSpace = "pre", t.style.userSelect = "all", t.style.opacity = "0px", t.textContent = e, document.body.appendChild(t);
  const n = document.createRange();
  n.selectNode(t);
  const i = window.getSelection();
  i.removeAllRanges(), i.addRange(n);
  try {
    document.execCommand("copy");
  } finally {
    document.body.removeChild(t);
  }
}
function Use(e) {
  navigator.clipboard ? navigator.clipboard.writeText(e).catch(() => {
    LA(e);
  }) : LA(e);
}
function Gse(e) {
  var t;
  return !!((t = window.getSelection()) != null && t.toString() || e && (e.selectionEnd || 0) - (e.selectionStart || 0) > 0);
}
const Wse = (e, t) => {
  const n = t.ignoreValueFormatterDuringExport, i = (typeof n == "object" ? n == null ? void 0 : n.clipboardExport : n) || !1, s = t.clipboardCopyCellDelimiter, u = S.useCallback((d) => {
    if (!dae(d) || Gse(d.target))
      return;
    let p = "";
    if (e.current.getSelectedRows().size > 0)
      p = e.current.getDataAsCsv({
        includeHeaders: !1,
        delimiter: s,
        shouldAppendQuotes: !1,
        escapeFormulas: !1
      });
    else {
      const v = Sa(e);
      if (v) {
        const y = e.current.getCellParams(v.id, v.field);
        p = JH(y, {
          csvOptions: {
            delimiter: s,
            shouldAppendQuotes: !1,
            escapeFormulas: !1
          },
          ignoreValueFormatter: i
        });
      }
    }
    p = e.current.unstable_applyPipeProcessors("clipboardCopy", p), p && (Use(p), e.current.publishEvent("clipboardCopy", p));
  }, [e, i, s]);
  Oz(e, () => e.current.rootElementRef.current, "keydown", u), br(e, "clipboardCopy", t.onClipboardCopy);
}, qse = (e) => J({}, e, {
  columnMenu: {
    open: !1
  }
}), Kse = (e) => {
  const t = ui(e, "useGridColumnMenu"), n = S.useCallback((d) => {
    const p = v0(e.current.state), m = {
      open: !0,
      field: d
    };
    (m.open !== p.open || m.field !== p.field) && (e.current.setState((y) => y.columnMenu.open && y.columnMenu.field === d ? y : (t.debug("Opening Column Menu"), J({}, y, {
      columnMenu: {
        open: !0,
        field: d
      }
    }))), e.current.hidePreferences());
  }, [e, t]), i = S.useCallback(() => {
    const d = v0(e.current.state);
    if (d.field) {
      const v = Zc(e), y = Js(e), C = Wc(e);
      let w = d.field;
      if (v[w] || (w = C[0]), y[w] === !1) {
        const R = C.filter((E) => E === w ? !0 : y[E] !== !1), O = R.indexOf(w);
        w = R[O + 1] || R[O - 1];
      }
      e.current.setColumnHeaderFocus(w);
    }
    const p = {
      open: !1,
      field: void 0
    };
    (p.open !== d.open || p.field !== d.field) && e.current.setState((v) => (t.debug("Hiding Column Menu"), J({}, v, {
      columnMenu: p
    })));
  }, [e, t]), s = S.useCallback((d) => {
    t.debug("Toggle Column Menu");
    const p = v0(e.current.state);
    !p.open || p.field !== d ? n(d) : i();
  }, [e, t, n, i]);
  Mn(e, {
    showColumnMenu: n,
    hideColumnMenu: i,
    toggleColumnMenu: s
  }, "public"), Mt(e, "columnResizeStart", i), Mt(e, "virtualScrollerWheel", e.current.hideColumnMenu), Mt(e, "virtualScrollerTouchMove", e.current.hideColumnMenu);
}, Yse = (e, t, n) => {
  var s, u, d;
  const i = Cg({
    apiRef: n,
    columnsToUpsert: t.columns,
    initialState: (s = t.initialState) == null ? void 0 : s.columns,
    columnVisibilityModel: t.columnVisibilityModel ?? ((d = (u = t.initialState) == null ? void 0 : u.columns) == null ? void 0 : d.columnVisibilityModel) ?? {},
    keepOnlyColumnsToUpsert: !0
  });
  return J({}, e, {
    columns: i,
    // In pro/premium, this part of the state is defined. We give it an empty but defined value
    // for the community version.
    pinnedColumns: e.pinnedColumns ?? G0
  });
};
function Xse(e, t) {
  var I, U;
  const n = ui(e, "useGridColumns"), i = S.useRef(t.columns);
  e.current.registerControlState({
    stateId: "visibleColumns",
    propModel: t.columnVisibilityModel,
    propOnChange: t.onColumnVisibilityModelChange,
    stateSelector: Js,
    changeEvent: "columnVisibilityModelChange"
  });
  const s = S.useCallback((G) => {
    n.debug("Updating columns state."), e.current.setState(FA(G)), e.current.publishEvent("columnsChange", G.orderedFields);
  }, [n, e]), u = S.useCallback((G) => Zc(e)[G], [e]), d = S.useCallback(() => tl(e), [e]), p = S.useCallback(() => ho(e), [e]), m = S.useCallback((G, Y = !0) => (Y ? ho(e) : tl(e)).findIndex((B) => B.field === G), [e]), v = S.useCallback((G) => {
    const Y = m(G);
    return Rf(e)[Y];
  }, [e, m]), y = S.useCallback((G) => {
    var te, B;
    Js(e) !== G && (e.current.setState((W) => J({}, W, {
      columns: Cg({
        apiRef: e,
        columnsToUpsert: [],
        initialState: void 0,
        columnVisibilityModel: G,
        keepOnlyColumnsToUpsert: !1
      })
    })), (B = (te = e.current).updateRenderContext) == null || B.call(te), e.current.forceUpdate());
  }, [e]), C = S.useCallback((G) => {
    const Y = Cg({
      apiRef: e,
      columnsToUpsert: G,
      initialState: void 0,
      keepOnlyColumnsToUpsert: !1
    });
    s(Y);
  }, [e, s]), w = S.useCallback((G, Y) => {
    const te = Js(e), B = te[G] ?? !0;
    if (Y !== B) {
      const W = J({}, te, {
        [G]: Y
      });
      e.current.setColumnVisibilityModel(W);
    }
  }, [e]), R = S.useCallback((G) => Wc(e).findIndex((te) => te === G), [e]), O = S.useCallback((G, Y) => {
    const te = Wc(e), B = R(G);
    if (B === Y)
      return;
    n.debug(`Moving column ${G} to index ${Y}`);
    const W = [...te], q = W.splice(B, 1)[0];
    W.splice(Y, 0, q), s(J({}, Vu(e.current.state), {
      orderedFields: W
    }));
    const ne = {
      column: e.current.getColumn(G),
      targetIndex: e.current.getColumnIndexRelativeToVisibleColumns(G),
      oldIndex: B
    };
    e.current.publishEvent("columnIndexChange", ne);
  }, [e, n, s, R]), E = S.useCallback((G, Y) => {
    n.debug(`Updating column ${G} width to ${Y}`);
    const te = Vu(e.current.state), B = te.lookup[G], W = J({}, B, {
      width: Y,
      hasBeenResized: !0
    });
    s(Hk(J({}, te, {
      lookup: J({}, te.lookup, {
        [G]: W
      })
    }), e.current.getRootDimensions())), e.current.publishEvent("columnWidthChange", {
      element: e.current.getColumnHeaderElement(G),
      colDef: W,
      width: Y
    });
  }, [e, n, s]), k = {
    getColumn: u,
    getAllColumns: d,
    getColumnIndex: m,
    getColumnPosition: v,
    getVisibleColumns: p,
    getColumnIndexRelativeToVisibleColumns: R,
    updateColumns: C,
    setColumnVisibilityModel: y,
    setColumnVisibility: w,
    setColumnWidth: E
  }, L = {
    setColumnIndex: O
  };
  Mn(e, k, "public"), Mn(e, L, t.signature === gs.DataGrid ? "private" : "public");
  const F = S.useCallback((G, Y) => {
    var re, X;
    const te = {}, B = Js(e);
    // Always export if the `exportOnlyDirtyModels` property is not activated
    (!Y.exportOnlyDirtyModels || // Always export if the model is controlled
    t.columnVisibilityModel != null || // Always export if the model has been initialized
    // TODO v6 Do a nullish check instead to export even if the initial model equals "{}"
    Object.keys(((X = (re = t.initialState) == null ? void 0 : re.columns) == null ? void 0 : X.columnVisibilityModel) ?? {}).length > 0 || // Always export if the model is not empty
    Object.keys(B).length > 0) && (te.columnVisibilityModel = B), te.orderedFields = Wc(e);
    const q = tl(e), ne = {};
    return q.forEach((j) => {
      if (j.hasBeenResized) {
        const ie = {};
        Uz.forEach((fe) => {
          let ce = j[fe];
          ce === 1 / 0 && (ce = -1), ie[fe] = ce;
        }), ne[j.field] = ie;
      }
    }), Object.keys(ne).length > 0 && (te.dimensions = ne), J({}, G, {
      columns: te
    });
  }, [e, t.columnVisibilityModel, (I = t.initialState) == null ? void 0 : I.columns]), _ = S.useCallback((G, Y) => {
    var q;
    const te = (q = Y.stateToRestore.columns) == null ? void 0 : q.columnVisibilityModel, B = Y.stateToRestore.columns;
    if (te == null && B == null)
      return G;
    const W = Cg({
      apiRef: e,
      columnsToUpsert: [],
      initialState: B,
      columnVisibilityModel: te,
      keepOnlyColumnsToUpsert: !1
    });
    return e.current.setState(FA(W)), B != null && e.current.publishEvent("columnsChange", W.orderedFields), G;
  }, [e]), P = S.useCallback((G, Y) => {
    var te;
    if (Y === fh.columns) {
      const B = t.slots.columnsPanel;
      return /* @__PURE__ */ A.jsx(B, J({}, (te = t.slotProps) == null ? void 0 : te.columnsPanel));
    }
    return G;
  }, [t.slots.columnsPanel, (U = t.slotProps) == null ? void 0 : U.columnsPanel]), D = S.useCallback((G) => t.disableColumnSelector ? G : [...G, "columnMenuColumnsItem"], [t.disableColumnSelector]);
  no(e, "columnMenu", D), no(e, "exportState", F), no(e, "restoreState", _), no(e, "preferencePanel", P);
  const z = S.useRef(null);
  Mt(e, "viewportInnerSizeChange", (G) => {
    if (z.current !== G.width) {
      if (z.current = G.width, !ho(e).some((te) => te.flex && te.flex > 0))
        return;
      s(Hk(Vu(e.current.state), e.current.getRootDimensions()));
    }
  });
  const Q = S.useCallback(() => {
    n.info("Columns pipe processing have changed, regenerating the columns");
    const G = Cg({
      apiRef: e,
      columnsToUpsert: [],
      initialState: void 0,
      keepOnlyColumnsToUpsert: !1
    });
    s(G);
  }, [e, n, s]);
  CM(e, "hydrateColumns", Q);
  const H = S.useRef(!0);
  S.useEffect(() => {
    if (H.current) {
      H.current = !1;
      return;
    }
    if (n.info(`GridColumns have changed, new length ${t.columns.length}`), i.current === t.columns)
      return;
    const G = Cg({
      apiRef: e,
      initialState: void 0,
      // If the user provides a model, we don't want to set it in the state here because it has it's dedicated `useEffect` which calls `setColumnVisibilityModel`
      columnsToUpsert: t.columns,
      keepOnlyColumnsToUpsert: !0
    });
    i.current = t.columns, s(G);
  }, [n, e, s, t.columns]), S.useEffect(() => {
    t.columnVisibilityModel !== void 0 && e.current.setColumnVisibilityModel(t.columnVisibilityModel);
  }, [e, n, t.columnVisibilityModel]);
}
function FA(e) {
  return (t) => J({}, t, {
    columns: e
  });
}
const Qse = (e, t) => {
  var n;
  return J({}, e, {
    density: ((n = t.initialState) == null ? void 0 : n.density) ?? t.density ?? "standard"
  });
}, Jse = (e, t) => {
  var p;
  const n = ui(e, "useDensity");
  e.current.registerControlState({
    stateId: "density",
    propModel: t.density,
    propOnChange: t.onDensityChange,
    stateSelector: xg,
    changeEvent: "densityChange"
  });
  const s = {
    setDensity: Nn((m) => {
      xg(e.current.state) !== m && (n.debug(`Set grid density to ${m}`), e.current.setState((y) => J({}, y, {
        density: m
      })));
    })
  };
  Mn(e, s, "public");
  const u = S.useCallback((m, v) => {
    var w;
    const y = xg(e.current.state);
    return (
      // Always export if the `exportOnlyDirtyModels` property is not activated
      !v.exportOnlyDirtyModels || // Always export if the `density` is controlled
      t.density != null || // Always export if the `density` has been initialized
      ((w = t.initialState) == null ? void 0 : w.density) != null ? J({}, m, {
        density: y
      }) : m
    );
  }, [e, t.density, (p = t.initialState) == null ? void 0 : p.density]), d = S.useCallback((m, v) => {
    var C;
    const y = (C = v.stateToRestore) != null && C.density ? v.stateToRestore.density : xg(e.current.state);
    return e.current.setState((w) => J({}, w, {
      density: y
    })), m;
  }, [e]);
  no(e, "exportState", u), no(e, "restoreState", d), S.useEffect(() => {
    t.density && e.current.setDensity(t.density);
  }, [e, t.density]);
};
function Zse(e, t = "csv", n = document.title || "untitled") {
  const i = `${n}.${t}`;
  if ("download" in HTMLAnchorElement.prototype) {
    const s = URL.createObjectURL(e), u = document.createElement("a");
    u.href = s, u.download = i, u.click(), setTimeout(() => {
      URL.revokeObjectURL(s);
    });
    return;
  }
  throw new Error("MUI X: exportAs not supported.");
}
const ZH = ({
  apiRef: e,
  options: t
}) => {
  const n = tl(e);
  return t.fields ? t.fields.reduce((s, u) => {
    const d = n.find((p) => p.field === u);
    return d && s.push(d), s;
  }, []) : (t.allColumns ? n : ho(e)).filter((s) => !s.disableExport);
}, eV = ({
  apiRef: e
}) => {
  var m, v;
  const t = Sz(e), n = Go(e), i = e.current.getSelectedRows(), s = t.filter((y) => n[y].type !== "footer"), u = iv(e), d = ((m = u == null ? void 0 : u.top) == null ? void 0 : m.map((y) => y.id)) || [], p = ((v = u == null ? void 0 : u.bottom) == null ? void 0 : v.map((y) => y.id)) || [];
  return s.unshift(...d), s.push(...p), i.size > 0 ? s.filter((y) => i.has(y)) : s;
}, ele = (e, t) => {
  const n = ui(e, "useGridCsvExport"), i = t.ignoreValueFormatterDuringExport, s = (typeof i == "object" ? i == null ? void 0 : i.csvExport : i) || !1, u = S.useCallback((v = {}) => {
    n.debug("Get data as CSV");
    const y = ZH({
      apiRef: e,
      options: v
    }), w = (v.getRowsToExport ?? eV)({
      apiRef: e
    });
    return Bse({
      columns: y,
      rowIds: w,
      csvOptions: {
        delimiter: v.delimiter || ",",
        shouldAppendQuotes: v.shouldAppendQuotes ?? !0,
        includeHeaders: v.includeHeaders ?? !0,
        includeColumnGroupsHeaders: v.includeColumnGroupsHeaders ?? !0,
        escapeFormulas: v.escapeFormulas ?? !0
      },
      ignoreValueFormatter: s,
      apiRef: e
    });
  }, [n, e, s]), d = S.useCallback((v) => {
    n.debug("Export data as CSV");
    const y = u(v), C = new Blob([v != null && v.utf8WithBom ? new Uint8Array([239, 187, 191]) : "", y], {
      type: "text/csv"
    });
    Zse(C, "csv", v == null ? void 0 : v.fileName);
  }, [n, u]);
  Mn(e, {
    getDataAsCsv: u,
    exportDataAsCsv: d
  }, "public");
  const m = S.useCallback((v, y) => {
    var C;
    return (C = y.csvOptions) != null && C.disableToolbarButton ? v : [...v, {
      component: /* @__PURE__ */ A.jsx(VH, {
        options: y.csvOptions
      }),
      componentName: "csvExport"
    }];
  }, []);
  no(e, "exportMenu", m);
}, y0 = (e, t, n) => {
  let i = e.paginationModel;
  const s = e.rowCount, u = (n == null ? void 0 : n.pageSize) ?? i.pageSize, d = (n == null ? void 0 : n.page) ?? i.page, p = kz(s, u, d);
  n && ((n == null ? void 0 : n.page) !== i.page || (n == null ? void 0 : n.pageSize) !== i.pageSize) && (i = n);
  const m = u === -1 ? 0 : One(i.page, p);
  return m !== i.page && (i = J({}, i, {
    page: m
  })), Mz(i.pageSize, t), i;
}, tle = (e, t) => {
  var F, _;
  const n = ui(e, "useGridPaginationModel"), i = tt(e, ov), s = S.useRef(vi(e)), u = Math.floor(t.rowHeight * i);
  e.current.registerControlState({
    stateId: "paginationModel",
    propModel: t.paginationModel,
    propOnChange: t.onPaginationModelChange,
    stateSelector: ia,
    changeEvent: "paginationModelChange"
  });
  const d = S.useCallback((P) => {
    const D = ia(e);
    P !== D.page && (n.debug(`Setting page to ${P}`), e.current.setPaginationModel({
      page: P,
      pageSize: D.pageSize
    }));
  }, [e, n]), p = S.useCallback((P) => {
    const D = ia(e);
    P !== D.pageSize && (n.debug(`Setting page size to ${P}`), e.current.setPaginationModel({
      pageSize: P,
      page: D.page
    }));
  }, [e, n]), m = S.useCallback((P) => {
    const D = ia(e);
    P !== D && (n.debug("Setting 'paginationModel' to", P), e.current.setState((z) => J({}, z, {
      pagination: J({}, z.pagination, {
        paginationModel: y0(z.pagination, t.signature, P)
      })
    }), "setPaginationModel"));
  }, [e, n, t.signature]);
  Mn(e, {
    setPage: d,
    setPageSize: p,
    setPaginationModel: m
  }, "public");
  const y = S.useCallback((P, D) => {
    var Q, H;
    const z = ia(e);
    return (
      // Always export if the `exportOnlyDirtyModels` property is not activated
      !D.exportOnlyDirtyModels || // Always export if the `paginationModel` is controlled
      t.paginationModel != null || // Always export if the `paginationModel` has been initialized
      ((H = (Q = t.initialState) == null ? void 0 : Q.pagination) == null ? void 0 : H.paginationModel) != null || // Export if `page` or `pageSize` is not equal to the default value
      z.page !== 0 && z.pageSize !== Rne(t.autoPageSize) ? J({}, P, {
        pagination: J({}, P.pagination, {
          paginationModel: z
        })
      }) : P
    );
  }, [e, t.paginationModel, (_ = (F = t.initialState) == null ? void 0 : F.pagination) == null ? void 0 : _.paginationModel, t.autoPageSize]), C = S.useCallback((P, D) => {
    var K, Q;
    const z = (K = D.stateToRestore.pagination) != null && K.paginationModel ? J({}, Pz(t.autoPageSize), (Q = D.stateToRestore.pagination) == null ? void 0 : Q.paginationModel) : ia(e);
    return e.current.setState((H) => J({}, H, {
      pagination: J({}, H.pagination, {
        paginationModel: y0(H.pagination, t.signature, z)
      })
    }), "stateRestorePreProcessing"), P;
  }, [e, t.autoPageSize, t.signature]);
  no(e, "exportState", y), no(e, "restoreState", C);
  const w = () => {
    var D;
    const P = ia(e);
    (D = e.current.virtualScrollerRef) != null && D.current && e.current.scrollToIndexes({
      rowIndex: P.page * P.pageSize
    });
  }, R = S.useCallback(() => {
    if (!t.autoPageSize)
      return;
    const P = e.current.getRootDimensions(), D = Math.max(1, Math.floor(P.viewportInnerSize.height / u));
    e.current.setPageSize(D);
  }, [e, t.autoPageSize, u]), O = S.useCallback((P) => {
    if (P == null)
      return;
    const D = ia(e);
    if (D.page === 0)
      return;
    const z = Nz(e);
    D.page > z - 1 && e.current.setPage(Math.max(0, z - 1));
  }, [e]), E = S.useCallback(() => {
    ia(e).page !== 0 && e.current.setPage(0), e.current.getScrollPosition().top !== 0 && e.current.scroll({
      top: 0
    });
  }, [e]), k = S.useCallback((P) => {
    const D = J({}, P, {
      // replace items with the active items
      items: xz(e)
    });
    pf(D, s.current) || (s.current = D, E());
  }, [e, E]);
  Mt(e, "viewportInnerSizeChange", R), Mt(e, "paginationModelChange", w), Mt(e, "rowCountChange", O), Mt(e, "sortModelChange", Kp(t.resetPageOnSortFilter, E)), Mt(e, "filterModelChange", Kp(t.resetPageOnSortFilter, k));
  const L = S.useRef(!0);
  S.useEffect(() => {
    if (L.current) {
      L.current = !1;
      return;
    }
    t.pagination && e.current.setState((P) => J({}, P, {
      pagination: J({}, P.pagination, {
        paginationModel: y0(P.pagination, t.signature, t.paginationModel)
      })
    }));
  }, [e, t.paginationModel, t.signature, t.pagination]), S.useEffect(() => {
    e.current.setState((P) => {
      const D = t.pagination === !0;
      return P.pagination.paginationMode === t.paginationMode || P.pagination.enabled === D ? P : J({}, P, {
        pagination: J({}, P.pagination, {
          paginationMode: t.paginationMode,
          enabled: t.pagination === !0
        })
      });
    });
  }, [e, t.paginationMode, t.pagination]), S.useEffect(R, [R]);
};
function nle() {
  return new Promise((e) => {
    requestAnimationFrame(() => {
      e();
    });
  });
}
function rle(e) {
  const t = document.createElement("iframe");
  return t.style.position = "absolute", t.style.width = "0px", t.style.height = "0px", t.title = e || document.title, t;
}
const ole = (e, t) => {
  const n = e.current.rootElementRef.current !== null, i = ui(e, "useGridPrintExport"), s = S.useRef(null), u = S.useRef(null), d = S.useRef({}), p = S.useRef([]), m = S.useRef(null);
  S.useEffect(() => {
    s.current = ao(e.current.rootElementRef.current);
  }, [e, n]);
  const v = S.useCallback((k, L, F) => new Promise((_) => {
    const P = ZH({
      apiRef: e,
      options: {
        fields: k,
        allColumns: L
      }
    }).map((K) => K.field), D = tl(e), z = {};
    D.forEach((K) => {
      z[K.field] = P.includes(K.field);
    }), F && (z[cv.field] = !0), e.current.setColumnVisibilityModel(z), _();
  }), [e]), y = S.useCallback((k) => {
    const F = k({
      apiRef: e
    }).reduce((_, P) => {
      const D = e.current.getRow(P);
      return D[Yg] || _.push(D), _;
    }, []);
    e.current.setRows(F);
  }, [e]), C = S.useCallback((k, L) => {
    var B, W, q;
    const F = J({
      copyStyles: !0,
      hideToolbar: !1,
      hideFooter: !1,
      includeCheckboxes: !1
    }, L), _ = k.contentDocument;
    if (!_)
      return;
    const P = dv(e.current.state), D = e.current.rootElementRef.current, z = D.cloneNode(!0), K = z.querySelector(`.${ae.main}`);
    K.style.overflow = "visible", z.style.contain = "size";
    let Q = ((B = D.querySelector(`.${ae.toolbarContainer}`)) == null ? void 0 : B.offsetHeight) || 0, H = ((W = D.querySelector(`.${ae.footerContainer}`)) == null ? void 0 : W.offsetHeight) || 0;
    const I = z.querySelector(`.${ae.footerContainer}`);
    F.hideToolbar && ((q = z.querySelector(`.${ae.toolbarContainer}`)) == null || q.remove(), Q = 0), F.hideFooter && I && (I.remove(), H = 0);
    const U = P.currentPageTotalHeight + BE(e, t) + Q + H;
    z.style.height = `${U}px`, z.style.boxSizing = "content-box", !F.hideFooter && I && (I.style.position = "absolute", I.style.width = "100%", I.style.top = `${U - H}px`);
    const G = document.createElement("div");
    G.appendChild(z), _.body.style.marginTop = "0px", _.body.innerHTML = G.innerHTML;
    const Y = typeof F.pageStyle == "function" ? F.pageStyle() : F.pageStyle;
    if (typeof Y == "string") {
      const ne = _.createElement("style");
      ne.appendChild(_.createTextNode(Y)), _.head.appendChild(ne);
    }
    F.bodyClassName && _.body.classList.add(...F.bodyClassName.split(" "));
    const te = [];
    if (F.copyStyles) {
      const ne = D.getRootNode(), X = (ne.constructor.name === "ShadowRoot" ? ne : s.current).querySelectorAll("style, link[rel='stylesheet']");
      for (let j = 0; j < X.length; j += 1) {
        const ie = X[j];
        if (ie.tagName === "STYLE") {
          const fe = _.createElement(ie.tagName), ce = ie.sheet;
          if (ce) {
            let me = "";
            for (let ge = 0; ge < ce.cssRules.length; ge += 1)
              typeof ce.cssRules[ge].cssText == "string" && (me += `${ce.cssRules[ge].cssText}\r
`);
            fe.appendChild(_.createTextNode(me)), _.head.appendChild(fe);
          }
        } else if (ie.getAttribute("href")) {
          const fe = _.createElement(ie.tagName);
          for (let ce = 0; ce < ie.attributes.length; ce += 1) {
            const me = ie.attributes[ce];
            me && fe.setAttribute(me.nodeName, me.nodeValue || "");
          }
          te.push(new Promise((ce) => {
            fe.addEventListener("load", () => ce());
          })), _.head.appendChild(fe);
        }
      }
    }
    process.env.NODE_ENV !== "test" && Promise.all(te).then(() => {
      k.contentWindow.print();
    });
  }, [e, s, t]), w = S.useCallback((k) => {
    var L, F;
    s.current.body.removeChild(k), e.current.restoreState(u.current || {}), (F = (L = u.current) == null ? void 0 : L.columns) != null && F.columnVisibilityModel || e.current.setColumnVisibilityModel(d.current), e.current.setState((_) => J({}, _, {
      virtualization: m.current
    })), e.current.setRows(p.current), u.current = null, d.current = {}, p.current = [];
  }, [e]), O = {
    exportDataAsPrint: S.useCallback(async (k) => {
      if (i.debug("Export data as Print"), !e.current.rootElementRef.current)
        throw new Error("MUI X: No grid root element available.");
      if (u.current = e.current.exportState(), d.current = Js(e), p.current = e.current.getSortedRows().filter((F) => !F[Yg]), t.pagination) {
        const _ = {
          page: 0,
          pageSize: oM(e)
        };
        e.current.setState((P) => J({}, P, {
          pagination: J({}, P.pagination, {
            paginationModel: y0(
              P.pagination,
              // Using signature `DataGridPro` to allow more than 100 rows in the print export
              "DataGridPro",
              _
            )
          })
        }));
      }
      m.current = e.current.state.virtualization, e.current.setState((F) => J({}, F, {
        virtualization: J({}, F.virtualization, {
          enabled: !1,
          enabledForColumns: !1
        })
      })), await v(k == null ? void 0 : k.fields, k == null ? void 0 : k.allColumns, k == null ? void 0 : k.includeCheckboxes), y((k == null ? void 0 : k.getRowsToExport) ?? eV), await nle();
      const L = rle(k == null ? void 0 : k.fileName);
      process.env.NODE_ENV === "test" ? (s.current.body.appendChild(L), C(L, k), w(L)) : (L.onload = () => {
        C(L, k), L.contentWindow.matchMedia("print").addEventListener("change", (_) => {
          _.matches === !1 && w(L);
        });
      }, s.current.body.appendChild(L));
    }, [t, i, e, C, w, v, y])
  };
  Mn(e, O, "public");
  const E = S.useCallback((k, L) => {
    var F;
    return (F = L.printOptions) != null && F.disableToolbarButton ? k : [...k, {
      component: /* @__PURE__ */ A.jsx(BH, {
        options: L.printOptions
      }),
      componentName: "printExport"
    }];
  }, []);
  no(e, "exportMenu", E);
}, ile = (e, t, n) => {
  var s, u;
  const i = t.filterModel ?? ((u = (s = t.initialState) == null ? void 0 : s.filter) == null ? void 0 : u.filterModel) ?? hC();
  return J({}, e, {
    filter: J({
      filterModel: tM(i, t.disableMultipleColumnsFiltering, n)
    }, tz),
    visibleRowsLookup: {}
  });
}, ale = (e) => e.filteredRowsLookup;
function _A(e, t) {
  return e.current.applyStrategyProcessor("visibleRowsLookupCreation", {
    tree: t.rows.tree,
    filteredRowsLookup: t.filter.filteredRowsLookup
  });
}
function sle() {
  return _2(Object.values);
}
const lle = (e, t) => {
  var H, I, U;
  const n = ui(e, "useGridFilter");
  e.current.registerControlState({
    stateId: "filter",
    propModel: t.filterModel,
    propOnChange: t.onFilterModelChange,
    stateSelector: vi,
    changeEvent: "filterModelChange"
  });
  const i = S.useCallback(() => {
    e.current.setState((G) => {
      const Y = vi(G, e.current.instanceId), te = e.current.getFilterState(Y), B = J({}, G, {
        filter: J({}, G.filter, te)
      }), W = _A(e, B);
      return J({}, B, {
        visibleRowsLookup: W
      });
    }), e.current.publishEvent("filteredRowsSet");
  }, [e]), s = S.useCallback((G, Y) => Y == null || Y.filterable === !1 || t.disableColumnFilter ? G : [...G, "columnMenuFilterItem"], [t.disableColumnFilter]), u = S.useCallback(() => {
    i(), e.current.forceUpdate();
  }, [e, i]), d = S.useCallback((G) => {
    const Y = vi(e), te = [...Y.items], B = te.findIndex((W) => W.id === G.id);
    B === -1 ? te.push(G) : te[B] = G, e.current.setFilterModel(J({}, Y, {
      items: te
    }), "upsertFilterItem");
  }, [e]), p = S.useCallback((G) => {
    const Y = vi(e), te = [...Y.items];
    G.forEach((B) => {
      const W = te.findIndex((q) => q.id === B.id);
      W === -1 ? te.push(B) : te[W] = B;
    }), e.current.setFilterModel(J({}, Y, {
      items: te
    }), "upsertFilterItems");
  }, [e]), m = S.useCallback((G) => {
    const Y = vi(e), te = Y.items.filter((B) => B.id !== G.id);
    te.length !== Y.items.length && e.current.setFilterModel(J({}, Y, {
      items: te
    }), "deleteFilterItem");
  }, [e]), v = S.useCallback((G, Y, te) => {
    if (n.debug("Displaying filter panel"), G) {
      const B = vi(e), W = B.items.filter((X) => {
        var ce;
        if (X.value !== void 0)
          return !(Array.isArray(X.value) && X.value.length === 0);
        const ie = (ce = e.current.getColumn(X.field).filterOperators) == null ? void 0 : ce.find((me) => me.value === X.operator);
        return !(typeof (ie == null ? void 0 : ie.requiresFilterValue) > "u" ? !0 : ie == null ? void 0 : ie.requiresFilterValue);
      });
      let q;
      const ne = W.find((X) => X.field === G), re = e.current.getColumn(G);
      ne ? q = W : t.disableMultipleColumnsFiltering ? q = [jk({
        field: G,
        operator: re.filterOperators[0].value
      }, e)] : q = [...W, jk({
        field: G,
        operator: re.filterOperators[0].value
      }, e)], e.current.setFilterModel(J({}, B, {
        items: q
      }));
    }
    e.current.showPreferences(fh.filters, Y, te);
  }, [e, n, t.disableMultipleColumnsFiltering]), y = S.useCallback(() => {
    n.debug("Hiding filter panel"), e.current.hidePreferences();
  }, [e, n]), C = S.useCallback((G) => {
    const Y = vi(e);
    Y.logicOperator !== G && e.current.setFilterModel(J({}, Y, {
      logicOperator: G
    }), "changeLogicOperator");
  }, [e]), w = S.useCallback((G) => {
    const Y = vi(e);
    pf(Y.quickFilterValues, G) || e.current.setFilterModel(J({}, Y, {
      quickFilterValues: [...G]
    }));
  }, [e]), R = S.useCallback((G, Y) => {
    vi(e) !== G && (n.debug("Setting filter model"), e.current.updateControlState("filter", X_(G, t.disableMultipleColumnsFiltering, e), Y), e.current.unstable_applyFilters());
  }, [e, n, t.disableMultipleColumnsFiltering]), O = S.useCallback((G) => {
    const Y = tM(G, t.disableMultipleColumnsFiltering, e), te = t.filterMode === "client" ? Dte(Y, e, t.disableEval) : null, B = e.current.applyStrategyProcessor("filtering", {
      isRowMatchingFilters: te,
      filterModel: Y ?? hC()
    });
    return J({}, B, {
      filterModel: Y
    });
  }, [t.disableMultipleColumnsFiltering, t.filterMode, t.disableEval, e]), E = {
    setFilterLogicOperator: C,
    unstable_applyFilters: u,
    deleteFilterItem: m,
    upsertFilterItem: d,
    upsertFilterItems: p,
    setFilterModel: R,
    showFilterPanel: v,
    hideFilterPanel: y,
    setQuickFilterValues: w,
    ignoreDiacritics: t.ignoreDiacritics,
    getFilterState: O
  };
  Mn(e, E, "public");
  const k = S.useCallback((G, Y) => {
    var W, q;
    const te = vi(e);
    return te.items.forEach((ne) => {
      delete ne.fromInput;
    }), // Always export if the `exportOnlyDirtyModels` property is not activated
    !Y.exportOnlyDirtyModels || // Always export if the model is controlled
    t.filterModel != null || // Always export if the model has been initialized
    ((q = (W = t.initialState) == null ? void 0 : W.filter) == null ? void 0 : q.filterModel) != null || // Export if the model is not equal to the default value
    !pf(te, hC()) ? J({}, G, {
      filter: {
        filterModel: te
      }
    }) : G;
  }, [e, t.filterModel, (I = (H = t.initialState) == null ? void 0 : H.filter) == null ? void 0 : I.filterModel]), L = S.useCallback((G, Y) => {
    var B;
    const te = (B = Y.stateToRestore.filter) == null ? void 0 : B.filterModel;
    return te == null ? G : (e.current.updateControlState("filter", X_(te, t.disableMultipleColumnsFiltering, e), "restoreState"), J({}, G, {
      callbacks: [...G.callbacks, e.current.unstable_applyFilters]
    }));
  }, [e, t.disableMultipleColumnsFiltering]), F = S.useCallback((G, Y) => {
    var te;
    if (Y === fh.filters) {
      const B = t.slots.filterPanel;
      return /* @__PURE__ */ A.jsx(B, J({}, (te = t.slotProps) == null ? void 0 : te.filterPanel));
    }
    return G;
  }, [t.slots.filterPanel, (U = t.slotProps) == null ? void 0 : U.filterPanel]), {
    getRowId: _
  } = t, P = al(sle), D = S.useCallback((G) => {
    var j;
    if (t.filterMode !== "client" || !G.isRowMatchingFilters || !G.filterModel.items.length && !((j = G.filterModel.quickFilterValues) != null && j.length))
      return tz;
    const Y = Qs(e), te = {}, {
      isRowMatchingFilters: B
    } = G, W = {}, q = {
      passingFilterItems: null,
      passingQuickFilterValues: null
    }, ne = P.current(e.current.state.rows.dataRowIdToModelLookup);
    for (let ie = 0; ie < ne.length; ie += 1) {
      const fe = ne[ie], ce = _ ? _(fe) : fe.id;
      B(fe, void 0, q);
      const me = Lte([q.passingFilterItems], [q.passingQuickFilterValues], G.filterModel, e, W);
      te[ce] = me;
    }
    const re = "auto-generated-group-footer-root";
    return Y[re] && (te[re] = !0), {
      filteredRowsLookup: te,
      filteredChildrenCountLookup: {},
      filteredDescendantCountLookup: {}
    };
  }, [e, t.filterMode, _, P]);
  no(e, "columnMenu", s), no(e, "exportState", k), no(e, "restoreState", L), no(e, "preferencePanel", F), eE(e, ph, "filtering", D), eE(e, ph, "visibleRowsLookupCreation", ale);
  const z = S.useCallback(() => {
    n.debug("onColUpdated - GridColumns changed, applying filters");
    const G = vi(e), Y = Zc(e), te = G.items.filter((B) => B.field && Y[B.field]);
    te.length < G.items.length && e.current.setFilterModel(J({}, G, {
      items: te
    }));
  }, [e, n]), K = S.useCallback((G) => {
    G === "filtering" && e.current.unstable_applyFilters();
  }, [e]), Q = S.useCallback(() => {
    e.current.setState((G) => J({}, G, {
      visibleRowsLookup: _A(e, G)
    })), e.current.forceUpdate();
  }, [e]);
  Mt(e, "rowsSet", i), Mt(e, "columnsChange", z), Mt(e, "activeStrategyProcessorChange", K), Mt(e, "rowExpansionChange", Q), Mt(e, "columnVisibilityModelChange", () => {
    const G = vi(e);
    G.quickFilterValues && lz(G) && e.current.unstable_applyFilters();
  }), HC(() => {
    e.current.unstable_applyFilters();
  }), Fr(() => {
    t.filterModel !== void 0 && e.current.setFilterModel(t.filterModel);
  }, [e, n, t.filterModel]);
}, ule = (e) => J({}, e, {
  focus: {
    cell: null,
    columnHeader: null,
    columnHeaderFilter: null,
    columnGroupHeader: null
  },
  tabIndex: {
    cell: null,
    columnHeader: null,
    columnHeaderFilter: null,
    columnGroupHeader: null
  }
}), cle = (e, t) => {
  const n = ui(e, "useGridFocus"), i = S.useRef(null), s = e.current.rootElementRef.current !== null, u = S.useCallback((Q, H) => {
    Q && e.current.getRow(Q.id) && e.current.publishEvent("cellFocusOut", e.current.getCellParams(Q.id, Q.field), H);
  }, [e]), d = S.useCallback((Q, H) => {
    const I = Sa(e);
    (I == null ? void 0 : I.id) === Q && (I == null ? void 0 : I.field) === H || (e.current.setState((U) => (n.debug(`Focusing on cell with id=${Q} and field=${H}`), J({}, U, {
      tabIndex: {
        cell: {
          id: Q,
          field: H
        },
        columnHeader: null,
        columnHeaderFilter: null,
        columnGroupHeader: null
      },
      focus: {
        cell: {
          id: Q,
          field: H
        },
        columnHeader: null,
        columnHeaderFilter: null,
        columnGroupHeader: null
      }
    }))), e.current.forceUpdate(), e.current.getRow(Q) && (I && u(I, {}), e.current.publishEvent("cellFocusIn", e.current.getCellParams(Q, H))));
  }, [e, n, u]), p = S.useCallback((Q, H = {}) => {
    const I = Sa(e);
    u(I, H), e.current.setState((U) => (n.debug(`Focusing on column header with colIndex=${Q}`), J({}, U, {
      tabIndex: {
        columnHeader: {
          field: Q
        },
        columnHeaderFilter: null,
        cell: null,
        columnGroupHeader: null
      },
      focus: {
        columnHeader: {
          field: Q
        },
        columnHeaderFilter: null,
        cell: null,
        columnGroupHeader: null
      }
    }))), e.current.forceUpdate();
  }, [e, n, u]), m = S.useCallback((Q, H = {}) => {
    const I = Sa(e);
    u(I, H), e.current.setState((U) => (n.debug(`Focusing on column header filter with colIndex=${Q}`), J({}, U, {
      tabIndex: {
        columnHeader: null,
        columnHeaderFilter: {
          field: Q
        },
        cell: null,
        columnGroupHeader: null
      },
      focus: {
        columnHeader: null,
        columnHeaderFilter: {
          field: Q
        },
        cell: null,
        columnGroupHeader: null
      }
    }))), e.current.forceUpdate();
  }, [e, n, u]), v = S.useCallback((Q, H, I = {}) => {
    const U = Sa(e);
    U && e.current.publishEvent("cellFocusOut", e.current.getCellParams(U.id, U.field), I), e.current.setState((G) => J({}, G, {
      tabIndex: {
        columnGroupHeader: {
          field: Q,
          depth: H
        },
        columnHeader: null,
        columnHeaderFilter: null,
        cell: null
      },
      focus: {
        columnGroupHeader: {
          field: Q,
          depth: H
        },
        columnHeader: null,
        columnHeaderFilter: null,
        cell: null
      }
    })), e.current.forceUpdate();
  }, [e]), y = S.useCallback(() => W0(e), [e]), C = S.useCallback((Q, H, I) => {
    let U = e.current.getColumnIndex(H);
    const G = ho(e), Y = mf(e, {
      pagination: t.pagination,
      paginationMode: t.paginationMode
    }), te = iv(e), B = [].concat(te.top || [], Y.rows, te.bottom || []);
    let W = B.findIndex((X) => X.id === Q);
    I === "right" ? U += 1 : I === "left" ? U -= 1 : W += 1, U >= G.length ? (W += 1, W < B.length && (U = 0)) : U < 0 && (W -= 1, W >= 0 && (U = G.length - 1)), W = vs(W, 0, B.length - 1);
    const q = B[W];
    if (!q)
      return;
    const ne = e.current.unstable_getCellColSpanInfo(q.id, U);
    ne && ne.spannedByColSpan && (I === "left" || I === "below" ? U = ne.leftVisibleCellIndex : I === "right" && (U = ne.rightVisibleCellIndex)), U = vs(U, 0, G.length - 1);
    const re = G[U];
    e.current.setCellFocus(q.id, re.field);
  }, [e, t.pagination, t.paginationMode]), w = S.useCallback(({
    id: Q,
    field: H
  }) => {
    e.current.setCellFocus(Q, H);
  }, [e]), R = S.useCallback((Q, H) => {
    H.key === "Enter" || H.key === "Tab" || H.key === "Shift" || Q0(H.key) || e.current.setCellFocus(Q.id, Q.field);
  }, [e]), O = S.useCallback(({
    field: Q
  }, H) => {
    H.target === H.currentTarget && e.current.setColumnHeaderFocus(Q, H);
  }, [e]), E = S.useCallback(({
    fields: Q,
    depth: H
  }, I) => {
    if (I.target !== I.currentTarget)
      return;
    const U = W0(e);
    U !== null && U.depth === H && Q.includes(U.field) || e.current.setColumnGroupHeaderFocus(Q[0], H, I);
  }, [e]), k = S.useCallback((Q, H) => {
    var I, U;
    (U = (I = H.relatedTarget) == null ? void 0 : I.getAttribute("class")) != null && U.includes(ae.columnHeader) || (n.debug("Clearing focus"), e.current.setState((G) => J({}, G, {
      focus: {
        cell: null,
        columnHeader: null,
        columnHeaderFilter: null,
        columnGroupHeader: null
      }
    })));
  }, [n, e]), L = S.useCallback((Q) => {
    i.current = Q;
  }, []), F = S.useCallback((Q) => {
    const H = i.current;
    i.current = null;
    const I = Sa(e);
    if (!e.current.unstable_applyPipeProcessors("canUpdateFocus", !0, {
      event: Q,
      cell: H
    }))
      return;
    if (!I) {
      H && e.current.setCellFocus(H.id, H.field);
      return;
    }
    if ((H == null ? void 0 : H.id) === I.id && (H == null ? void 0 : H.field) === I.field)
      return;
    const G = e.current.getCellElement(I.id, I.field);
    G != null && G.contains(Q.target) || (H ? e.current.setCellFocus(H.id, H.field) : (e.current.setState((Y) => J({}, Y, {
      focus: {
        cell: null,
        columnHeader: null,
        columnHeaderFilter: null,
        columnGroupHeader: null
      }
    })), e.current.forceUpdate(), u(I, Q)));
  }, [e, u]), _ = S.useCallback((Q) => {
    if (Q.cellMode === "view")
      return;
    const H = Sa(e);
    ((H == null ? void 0 : H.id) !== Q.id || (H == null ? void 0 : H.field) !== Q.field) && e.current.setCellFocus(Q.id, Q.field);
  }, [e]), P = S.useCallback(() => {
    const Q = Sa(e);
    if (Q && !e.current.getRow(Q.id)) {
      const H = Q.id;
      let I = null;
      if (typeof H < "u") {
        const U = e.current.getRowElement(H), G = U != null && U.dataset.rowindex ? Number(U == null ? void 0 : U.dataset.rowindex) : 0, Y = mf(e, {
          pagination: t.pagination,
          paginationMode: t.paginationMode
        }), te = Y.rows[vs(G, 0, Y.rows.length - 1)];
        I = (te == null ? void 0 : te.id) ?? null;
      }
      e.current.setState((U) => J({}, U, {
        focus: {
          cell: I === null ? null : {
            id: I,
            field: Q.field
          },
          columnHeader: null,
          columnHeaderFilter: null,
          columnGroupHeader: null
        }
      }));
    }
  }, [e, t.pagination, t.paginationMode]), D = Nn(() => {
    const Q = Sa(e);
    if (!Q)
      return;
    const H = mf(e, {
      pagination: t.pagination,
      paginationMode: t.paginationMode
    });
    if (H.rows.find((G) => G.id === Q.id))
      return;
    const U = ho(e);
    e.current.setState((G) => J({}, G, {
      tabIndex: {
        cell: {
          id: H.rows[0].id,
          field: U[0].field
        },
        columnGroupHeader: null,
        columnHeader: null,
        columnHeaderFilter: null
      }
    }));
  }), z = {
    setCellFocus: d,
    setColumnHeaderFocus: p,
    setColumnHeaderFilterFocus: m
  }, K = {
    moveFocusToRelativeCell: C,
    setColumnGroupHeaderFocus: v,
    getColumnGroupHeaderFocus: y
  };
  Mn(e, z, "public"), Mn(e, K, "private"), S.useEffect(() => {
    const Q = ao(e.current.rootElementRef.current);
    return Q.addEventListener("mouseup", F), () => {
      Q.removeEventListener("mouseup", F);
    };
  }, [e, s, F]), Mt(e, "columnHeaderBlur", k), Mt(e, "cellDoubleClick", w), Mt(e, "cellMouseDown", L), Mt(e, "cellKeyDown", R), Mt(e, "cellModeChange", _), Mt(e, "columnHeaderFocus", O), Mt(e, "columnGroupHeaderFocus", E), Mt(e, "rowsSet", P), Mt(e, "paginationModelChange", D);
}, UO = ({
  currentColIndex: e,
  firstColIndex: t,
  lastColIndex: n,
  isRtl: i
}) => {
  if (i) {
    if (e < n)
      return e + 1;
  } else if (!i && e > t)
    return e - 1;
  return null;
}, GO = ({
  currentColIndex: e,
  firstColIndex: t,
  lastColIndex: n,
  isRtl: i
}) => {
  if (i) {
    if (e > t)
      return e - 1;
  } else if (!i && e < n)
    return e + 1;
  return null;
};
function dle(e, t, n, i) {
  var p, m;
  const s = Qz(e);
  if (!((p = s[t]) != null && p[n]))
    return t;
  const u = Sz(e);
  let d = u.indexOf(t) + (i === "down" ? 1 : -1);
  for (; d >= 0 && d < u.length; ) {
    const v = u[d];
    if (!((m = s[v]) != null && m[n]))
      return v;
    d += i === "down" ? 1 : -1;
  }
  return t;
}
const fle = cr(BC, iv, (e, t) => (t.top || []).concat(e.rows, t.bottom || [])), ple = (e, t) => {
  const n = ui(e, "useGridKeyboardNavigation"), i = ji(), s = t.unstable_listView, u = S.useCallback(() => fle(e), [e]), d = t.signature !== "DataGrid" && t.headerFilters, p = S.useCallback((L, F, _ = "left", P = "up") => {
    const D = Of(e), z = e.current.unstable_getCellColSpanInfo(F, L);
    z && z.spannedByColSpan && (_ === "left" ? L = z.leftVisibleCellIndex : _ === "right" && (L = z.rightVisibleCellIndex));
    const K = s ? Jg(e.current.state).field : av(e)[L], Q = dle(e, F, K, P), H = D.findIndex((I) => I.id === Q);
    n.debug(`Navigating to cell row ${H}, col ${L}`), e.current.scrollToIndexes({
      colIndex: L,
      rowIndex: H
    }), e.current.setCellFocus(Q, K);
  }, [e, n, s]), m = S.useCallback((L, F) => {
    n.debug(`Navigating to header col ${L}`), e.current.scrollToIndexes({
      colIndex: L
    });
    const _ = e.current.getVisibleColumns()[L].field;
    e.current.setColumnHeaderFocus(_, F);
  }, [e, n]), v = S.useCallback((L, F) => {
    n.debug(`Navigating to header filter col ${L}`), e.current.scrollToIndexes({
      colIndex: L
    });
    const _ = e.current.getVisibleColumns()[L].field;
    e.current.setColumnHeaderFilterFocus(_, F);
  }, [e, n]), y = S.useCallback((L, F, _) => {
    n.debug(`Navigating to header col ${L}`), e.current.scrollToIndexes({
      colIndex: L
    });
    const {
      field: P
    } = e.current.getVisibleColumns()[L];
    e.current.setColumnGroupHeaderFocus(P, F, _);
  }, [e, n]), C = S.useCallback((L) => {
    var F;
    return (F = u()[L]) == null ? void 0 : F.id;
  }, [u]), w = S.useCallback((L, F) => {
    const _ = F.currentTarget.querySelector(`.${ae.columnHeaderTitleContainerContent}`);
    if (!!_ && _.contains(F.target) && L.field !== cv.field)
      return;
    const D = u(), z = e.current.getViewportPageSize(), K = L.field ? e.current.getColumnIndex(L.field) : 0, Q = D.length > 0 ? 0 : null, H = D.length - 1, I = 0, U = ho(e).length - 1, G = GC(e);
    let Y = !0;
    switch (F.key) {
      case "ArrowDown": {
        d ? v(K, F) : Q !== null && p(K, C(Q));
        break;
      }
      case "ArrowRight": {
        const te = GO({
          currentColIndex: K,
          firstColIndex: I,
          lastColIndex: U,
          isRtl: i
        });
        te !== null && m(te, F);
        break;
      }
      case "ArrowLeft": {
        const te = UO({
          currentColIndex: K,
          firstColIndex: I,
          lastColIndex: U,
          isRtl: i
        });
        te !== null && m(te, F);
        break;
      }
      case "ArrowUp": {
        G > 0 && y(K, G - 1, F);
        break;
      }
      case "PageDown": {
        Q !== null && H !== null && p(K, C(Math.min(Q + z, H)));
        break;
      }
      case "Home": {
        m(I, F);
        break;
      }
      case "End": {
        m(U, F);
        break;
      }
      case "Enter": {
        (F.ctrlKey || F.metaKey) && e.current.toggleColumnMenu(L.field);
        break;
      }
      case " ":
        break;
      default:
        Y = !1;
    }
    Y && F.preventDefault();
  }, [e, u, d, v, p, C, i, m, y]), R = S.useCallback((L, F) => {
    const _ = lre(e) === L.field, P = ure(e) === L.field;
    if (_ || P || !Q0(F.key))
      return;
    const D = u(), z = e.current.getViewportPageSize(), K = L.field ? e.current.getColumnIndex(L.field) : 0, Q = 0, H = D.length - 1, I = 0, U = ho(e).length - 1;
    let G = !0;
    switch (F.key) {
      case "ArrowDown": {
        const Y = C(Q);
        Y != null && p(K, Y);
        break;
      }
      case "ArrowRight": {
        const Y = GO({
          currentColIndex: K,
          firstColIndex: I,
          lastColIndex: U,
          isRtl: i
        });
        Y !== null && v(Y, F);
        break;
      }
      case "ArrowLeft": {
        const Y = UO({
          currentColIndex: K,
          firstColIndex: I,
          lastColIndex: U,
          isRtl: i
        });
        Y !== null ? v(Y, F) : e.current.setColumnHeaderFilterFocus(L.field, F);
        break;
      }
      case "ArrowUp": {
        m(K, F);
        break;
      }
      case "PageDown": {
        H !== null && p(K, C(Math.min(Q + z, H)));
        break;
      }
      case "Home": {
        v(I, F);
        break;
      }
      case "End": {
        v(U, F);
        break;
      }
      case " ":
        break;
      default:
        G = !1;
    }
    G && F.preventDefault();
  }, [e, u, v, i, m, p, C]), O = S.useCallback((L, F) => {
    const _ = W0(e);
    if (_ === null)
      return;
    const {
      field: P,
      depth: D
    } = _, {
      fields: z,
      depth: K,
      maxDepth: Q
    } = L, H = u(), I = e.current.getViewportPageSize(), U = e.current.getColumnIndex(P), G = P ? e.current.getColumnIndex(P) : 0, Y = 0, te = H.length - 1, B = 0, W = ho(e).length - 1;
    let q = !0;
    switch (F.key) {
      case "ArrowDown": {
        K === Q - 1 ? m(U, F) : y(U, D + 1, F);
        break;
      }
      case "ArrowUp": {
        K > 0 && y(U, D - 1, F);
        break;
      }
      case "ArrowRight": {
        const ne = z.length - z.indexOf(P) - 1;
        U + ne + 1 <= W && y(U + ne + 1, D, F);
        break;
      }
      case "ArrowLeft": {
        const ne = z.indexOf(P);
        U - ne - 1 >= B && y(U - ne - 1, D, F);
        break;
      }
      case "PageDown": {
        te !== null && p(G, C(Math.min(Y + I, te)));
        break;
      }
      case "Home": {
        y(B, D, F);
        break;
      }
      case "End": {
        y(W, D, F);
        break;
      }
      case " ":
        break;
      default:
        q = !1;
    }
    q && F.preventDefault();
  }, [e, u, m, y, p, C]), E = S.useCallback((L, F) => {
    if (qC(F))
      return;
    const _ = e.current.getCellParams(L.id, L.field);
    if (_.cellMode === vr.Edit || !Q0(F.key) || !e.current.unstable_applyPipeProcessors("canUpdateFocus", !0, {
      event: F,
      cell: _
    }))
      return;
    const D = u();
    if (D.length === 0)
      return;
    const z = e.current.getViewportPageSize(), K = s ? () => 0 : e.current.getColumnIndex, Q = L.field ? K(L.field) : 0, H = D.findIndex((W) => W.id === L.id), I = 0, U = D.length - 1, G = 0, te = (s ? [Jg(e.current.state)] : ho(e)).length - 1;
    let B = !0;
    switch (F.key) {
      case "ArrowDown": {
        H < U && p(Q, C(H + 1), i ? "right" : "left", "down");
        break;
      }
      case "ArrowUp": {
        H > I ? p(Q, C(H - 1)) : d ? v(Q, F) : m(Q, F);
        break;
      }
      case "ArrowRight": {
        const W = GO({
          currentColIndex: Q,
          firstColIndex: G,
          lastColIndex: te,
          isRtl: i
        });
        W !== null && p(W, C(H), i ? "left" : "right");
        break;
      }
      case "ArrowLeft": {
        const W = UO({
          currentColIndex: Q,
          firstColIndex: G,
          lastColIndex: te,
          isRtl: i
        });
        W !== null && p(W, C(H), i ? "right" : "left");
        break;
      }
      case "Tab": {
        F.shiftKey && Q > G ? p(Q - 1, C(H), "left") : !F.shiftKey && Q < te && p(Q + 1, C(H), "right");
        break;
      }
      case " ": {
        if (L.field === $E)
          break;
        const q = L.colDef;
        if (q && (q.field === Yte || Doe(q.field)))
          break;
        !F.shiftKey && H < U && p(Q, C(Math.min(H + z, U)));
        break;
      }
      case "PageDown": {
        H < U && p(Q, C(Math.min(H + z, U)));
        break;
      }
      case "PageUp": {
        const W = Math.max(H - z, I);
        W !== H && W >= I ? p(Q, C(W)) : m(Q, F);
        break;
      }
      case "Home": {
        F.ctrlKey || F.metaKey || F.shiftKey ? p(G, C(I)) : p(G, C(H));
        break;
      }
      case "End": {
        F.ctrlKey || F.metaKey || F.shiftKey ? p(te, C(U)) : p(te, C(H));
        break;
      }
      default:
        B = !1;
    }
    B && F.preventDefault();
  }, [e, u, i, p, C, d, v, m, s]), k = S.useCallback((L, {
    event: F
  }) => F.key === " " ? !1 : L, []);
  no(e, "canStartEditing", k), Mt(e, "columnHeaderKeyDown", w), Mt(e, "headerFilterKeyDown", R), Mt(e, "columnGroupHeaderKeyDown", O), Mt(e, "cellKeyDown", E);
}, hle = (e, t) => {
  var O, E;
  const n = ui(e, "useGridRowCount"), i = tt(e, iM), s = tt(e, Eg), u = tt(e, Hb), d = tt(e, ia), p = al(() => ia(e).pageSize);
  e.current.registerControlState({
    stateId: "paginationRowCount",
    propModel: t.rowCount,
    propOnChange: t.onRowCountChange,
    stateSelector: Eg,
    changeEvent: "rowCountChange"
  });
  const v = {
    setRowCount: S.useCallback((k) => {
      s !== k && (n.debug("Setting 'rowCount' to", k), e.current.setState((L) => J({}, L, {
        pagination: J({}, L.pagination, {
          rowCount: k
        })
      })));
    }, [e, n, s])
  };
  Mn(e, v, "public");
  const y = S.useCallback((k, L) => {
    var P, D;
    const F = Eg(e);
    return (
      // Always export if the `exportOnlyDirtyModels` property is not activated
      !L.exportOnlyDirtyModels || // Always export if the `rowCount` is controlled
      t.rowCount != null || // Always export if the `rowCount` has been initialized
      ((D = (P = t.initialState) == null ? void 0 : P.pagination) == null ? void 0 : D.rowCount) != null ? J({}, k, {
        pagination: J({}, k.pagination, {
          rowCount: F
        })
      }) : k
    );
  }, [e, t.rowCount, (E = (O = t.initialState) == null ? void 0 : O.pagination) == null ? void 0 : E.rowCount]), C = S.useCallback((k, L) => {
    var _;
    const F = (_ = L.stateToRestore.pagination) != null && _.rowCount ? L.stateToRestore.pagination.rowCount : Eg(e);
    return e.current.setState((P) => J({}, P, {
      pagination: J({}, P.pagination, {
        rowCount: F
      })
    })), k;
  }, [e]);
  no(e, "exportState", y), no(e, "restoreState", C);
  const w = S.useCallback((k) => {
    t.paginationMode === "client" || !p.current || k.pageSize !== p.current && (p.current = k.pageSize, s === -1 && e.current.setPage(0));
  }, [t.paginationMode, p, s, e]);
  Mt(e, "paginationModelChange", w), S.useEffect(() => {
    t.paginationMode === "client" ? e.current.setRowCount(i) : t.rowCount != null && e.current.setRowCount(t.rowCount);
  }, [e, t.paginationMode, i, t.rowCount]);
  const R = u.hasNextPage === !1;
  S.useEffect(() => {
    R && s === -1 && e.current.setRowCount(d.pageSize * d.page + i);
  }, [e, i, R, s, d]);
}, mle = (e, t) => {
  var m, v;
  const n = ui(e, "useGridPaginationMeta"), i = tt(e, Hb);
  e.current.registerControlState({
    stateId: "paginationMeta",
    propModel: t.paginationMeta,
    propOnChange: t.onPaginationMetaChange,
    stateSelector: Hb,
    changeEvent: "paginationMetaChange"
  });
  const u = {
    setPaginationMeta: S.useCallback((y) => {
      i !== y && (n.debug("Setting 'paginationMeta' to", y), e.current.setState((C) => J({}, C, {
        pagination: J({}, C.pagination, {
          meta: y
        })
      })));
    }, [e, n, i])
  };
  Mn(e, u, "public");
  const d = S.useCallback((y, C) => {
    var O, E;
    const w = Hb(e);
    return (
      // Always export if the `exportOnlyDirtyModels` property is not activated
      !C.exportOnlyDirtyModels || // Always export if the `paginationMeta` is controlled
      t.paginationMeta != null || // Always export if the `paginationMeta` has been initialized
      ((E = (O = t.initialState) == null ? void 0 : O.pagination) == null ? void 0 : E.meta) != null ? J({}, y, {
        pagination: J({}, y.pagination, {
          meta: w
        })
      }) : y
    );
  }, [e, t.paginationMeta, (v = (m = t.initialState) == null ? void 0 : m.pagination) == null ? void 0 : v.meta]), p = S.useCallback((y, C) => {
    var R;
    const w = (R = C.stateToRestore.pagination) != null && R.meta ? C.stateToRestore.pagination.meta : Hb(e);
    return e.current.setState((O) => J({}, O, {
      pagination: J({}, O.pagination, {
        meta: w
      })
    })), y;
  }, [e]);
  no(e, "exportState", d), no(e, "restoreState", p), S.useEffect(() => {
    t.paginationMeta && e.current.setPaginationMeta(t.paginationMeta);
  }, [e, t.paginationMeta]);
}, gle = (e, t) => {
  var u, d, p, m, v, y, C;
  const n = J({}, Pz(t.autoPageSize), t.paginationModel ?? ((d = (u = t.initialState) == null ? void 0 : u.pagination) == null ? void 0 : d.paginationModel));
  Mz(n.pageSize, t.signature);
  const i = t.rowCount ?? ((m = (p = t.initialState) == null ? void 0 : p.pagination) == null ? void 0 : m.rowCount) ?? (t.paginationMode === "client" ? (v = e.rows) == null ? void 0 : v.totalRowCount : void 0), s = t.paginationMeta ?? ((C = (y = t.initialState) == null ? void 0 : y.pagination) == null ? void 0 : C.meta) ?? {};
  return J({}, e, {
    pagination: J({}, e.pagination, {
      paginationModel: n,
      rowCount: i,
      meta: s,
      enabled: t.pagination === !0,
      paginationMode: t.paginationMode
    })
  });
}, vle = (e, t) => {
  mle(e, t), tle(e, t), hle(e, t);
}, yle = (e, t) => {
  var n;
  return J({}, e, {
    preferencePanel: ((n = t.initialState) == null ? void 0 : n.preferencePanel) ?? {
      open: !1
    }
  });
}, ble = (e, t) => {
  var p;
  const n = ui(e, "useGridPreferencesPanel"), i = S.useCallback(() => {
    e.current.setState((m) => {
      if (!m.preferencePanel.open)
        return m;
      n.debug("Hiding Preferences Panel");
      const v = gC(m);
      return e.current.publishEvent("preferencePanelClose", {
        openedPanelValue: v.openedPanelValue
      }), J({}, m, {
        preferencePanel: {
          open: !1
        }
      });
    });
  }, [e, n]), s = S.useCallback((m, v, y) => {
    n.debug("Opening Preferences Panel"), e.current.setState((C) => J({}, C, {
      preferencePanel: J({}, C.preferencePanel, {
        open: !0,
        openedPanelValue: m,
        panelId: v,
        labelId: y
      })
    })), e.current.publishEvent("preferencePanelOpen", {
      openedPanelValue: m
    });
  }, [n, e]);
  Mn(e, {
    showPreferences: s,
    hidePreferences: i
  }, "public");
  const u = S.useCallback((m, v) => {
    var w;
    const y = gC(e.current.state);
    return (
      // Always export if the `exportOnlyDirtyModels` property is not activated
      !v.exportOnlyDirtyModels || // Always export if the panel was initialized
      ((w = t.initialState) == null ? void 0 : w.preferencePanel) != null || // Always export if the panel is opened
      y.open ? J({}, m, {
        preferencePanel: y
      }) : m
    );
  }, [e, (p = t.initialState) == null ? void 0 : p.preferencePanel]), d = S.useCallback((m, v) => {
    const y = v.stateToRestore.preferencePanel;
    return y != null && e.current.setState((C) => J({}, C, {
      preferencePanel: y
    })), m;
  }, [e]);
  no(e, "exportState", u), no(e, "restoreState", d);
}, qk = (e) => {
  switch (e.type) {
    case "boolean":
      return !1;
    case "date":
    case "dateTime":
    case "number":
      return;
    case "singleSelect":
      return null;
    case "string":
    default:
      return "";
  }
}, Cle = ["id", "field"], Sle = ["id", "field"], wle = (e, t) => {
  const [n, i] = S.useState({}), s = S.useRef(n), u = S.useRef({}), {
    processRowUpdate: d,
    onProcessRowUpdateError: p,
    cellModesModel: m,
    onCellModesModelChange: v
  } = t, y = (B) => (...W) => {
    t.editMode === qu.Cell && B(...W);
  }, C = S.useCallback((B, W) => {
    const q = e.current.getCellParams(B, W);
    if (!e.current.isCellEditable(q))
      throw new Error(`MUI X: The cell with id=${B} and field=${W} is not editable.`);
  }, [e]), w = S.useCallback((B, W, q) => {
    if (e.current.getCellMode(B, W) !== q)
      throw new Error(`MUI X: The cell with id=${B} and field=${W} is not in ${q} mode.`);
  }, [e]), R = S.useCallback((B, W) => {
    if (!B.isEditable || B.cellMode === vr.Edit)
      return;
    const q = J({}, B, {
      reason: Vc.cellDoubleClick
    });
    e.current.publishEvent("cellEditStart", q, W);
  }, [e]), O = S.useCallback((B, W) => {
    if (B.cellMode === vr.View || e.current.getCellMode(B.id, B.field) === vr.View)
      return;
    const q = J({}, B, {
      reason: _l.cellFocusOut
    });
    e.current.publishEvent("cellEditStop", q, W);
  }, [e]), E = S.useCallback((B, W) => {
    if (B.cellMode === vr.Edit) {
      if (W.which === 229)
        return;
      let q;
      if (W.key === "Escape" ? q = _l.escapeKeyDown : W.key === "Enter" ? q = _l.enterKeyDown : W.key === "Tab" && (q = W.shiftKey ? _l.shiftTabKeyDown : _l.tabKeyDown, W.preventDefault()), q) {
        const ne = J({}, B, {
          reason: q
        });
        e.current.publishEvent("cellEditStop", ne, W);
      }
    } else if (B.isEditable) {
      let q;
      if (!e.current.unstable_applyPipeProcessors("canStartEditing", !0, {
        event: W,
        cellParams: B,
        editMode: "cell"
      }))
        return;
      if (EH(W) ? q = Vc.printableKeyDown : RH(W) ? q = Vc.pasteKeyDown : W.key === "Enter" ? q = Vc.enterKeyDown : (W.key === "Backspace" || W.key === "Delete") && (q = Vc.deleteKeyDown), q) {
        const re = J({}, B, {
          reason: q,
          key: W.key
        });
        e.current.publishEvent("cellEditStart", re, W);
      }
    }
  }, [e]), k = S.useCallback((B) => {
    const {
      id: W,
      field: q,
      reason: ne
    } = B, re = {
      id: W,
      field: q
    };
    (ne === Vc.printableKeyDown || ne === Vc.deleteKeyDown || ne === Vc.pasteKeyDown) && (re.deleteValue = !0), e.current.startCellEditMode(re);
  }, [e]), L = S.useCallback((B) => {
    const {
      id: W,
      field: q,
      reason: ne
    } = B;
    e.current.runPendingEditCellValueMutation(W, q);
    let re;
    ne === _l.enterKeyDown ? re = "below" : ne === _l.tabKeyDown ? re = "right" : ne === _l.shiftTabKeyDown && (re = "left");
    const X = ne === "escapeKeyDown";
    e.current.stopCellEditMode({
      id: W,
      field: q,
      ignoreModifications: X,
      cellToFocusAfter: re
    });
  }, [e]), F = (B) => async (...W) => {
    var q;
    if (B) {
      const {
        id: ne,
        field: re
      } = W[0];
      ((q = e.current.state.editRows[ne][re]) == null ? void 0 : q.error) || B(...W);
    }
  };
  Mt(e, "cellDoubleClick", y(R)), Mt(e, "cellFocusOut", y(O)), Mt(e, "cellKeyDown", y(E)), Mt(e, "cellEditStart", y(k)), Mt(e, "cellEditStop", y(L)), br(e, "cellEditStart", t.onCellEditStart), br(e, "cellEditStop", F(t.onCellEditStop));
  const _ = S.useCallback((B, W) => {
    const q = si(e.current.state);
    return q[B] && q[B][W] ? vr.Edit : vr.View;
  }, [e]), P = Nn((B) => {
    const W = B !== t.cellModesModel;
    v && W && v(B, {
      api: e.current
    }), !(t.cellModesModel && W) && (i(B), s.current = B, e.current.publishEvent("cellModesModelChange", B));
  }), D = S.useCallback((B, W, q) => {
    const ne = J({}, s.current);
    if (q !== null)
      ne[B] = J({}, ne[B], {
        [W]: J({}, q)
      });
    else {
      const re = ne[B], X = Xt(re, [W].map(yC));
      ne[B] = X, Object.keys(ne[B]).length === 0 && delete ne[B];
    }
    P(ne);
  }, [P]), z = S.useCallback((B, W, q) => {
    e.current.setState((ne) => {
      const re = J({}, ne.editRows);
      return q !== null ? re[B] = J({}, re[B], {
        [W]: J({}, q)
      }) : (delete re[B][W], Object.keys(re[B]).length === 0 && delete re[B]), J({}, ne, {
        editRows: re
      });
    }), e.current.forceUpdate();
  }, [e]), K = S.useCallback((B) => {
    const {
      id: W,
      field: q
    } = B, ne = Xt(B, Cle);
    C(W, q), w(W, q, vr.View), D(W, q, J({
      mode: vr.Edit
    }, ne));
  }, [C, w, D]), Q = Nn(async (B) => {
    const {
      id: W,
      field: q,
      deleteValue: ne,
      initialValue: re
    } = B, X = e.current.getCellValue(W, q);
    let j = X;
    ne ? j = qk(e.current.getColumn(q)) : re && (j = re);
    const ie = e.current.getColumn(q), fe = !!ie.preProcessEditCellProps && ne;
    let ce = {
      value: j,
      error: !1,
      isProcessingProps: fe
    };
    if (z(W, q, ce), e.current.setCellFocus(W, q), fe && (ce = await Promise.resolve(ie.preProcessEditCellProps({
      id: W,
      row: e.current.getRow(W),
      props: ce,
      hasChanged: j !== X
    })), e.current.getCellMode(W, q) === vr.Edit)) {
      const me = si(e.current.state);
      z(W, q, J({}, ce, {
        value: me[W][q].value,
        isProcessingProps: !1
      }));
    }
  }), H = S.useCallback((B) => {
    const {
      id: W,
      field: q
    } = B, ne = Xt(B, Sle);
    w(W, q, vr.Edit), D(W, q, J({
      mode: vr.View
    }, ne));
  }, [w, D]), I = Nn(async (B) => {
    const {
      id: W,
      field: q,
      ignoreModifications: ne,
      cellToFocusAfter: re = "none"
    } = B;
    w(W, q, vr.Edit), e.current.runPendingEditCellValueMutation(W, q);
    const X = () => {
      z(W, q, null), D(W, q, null), re !== "none" && e.current.moveFocusToRelativeCell(W, q, re);
    };
    if (ne) {
      X();
      return;
    }
    const j = si(e.current.state), {
      error: ie,
      isProcessingProps: fe
    } = j[W][q];
    if (ie || fe) {
      u.current[W][q].mode = vr.Edit, D(W, q, {
        mode: vr.Edit
      });
      return;
    }
    const ce = e.current.getRowWithUpdatedValuesFromCellEditing(W, q);
    if (d) {
      const me = (ge) => {
        u.current[W][q].mode = vr.Edit, D(W, q, {
          mode: vr.Edit
        }), p ? p(ge) : process.env.NODE_ENV !== "production" && el(["MUI X: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.", "To handle the error pass a callback to the `onProcessRowUpdateError` prop, for example `<DataGrid onProcessRowUpdateError={(error) => ...} />`.", "For more detail, see https://mui.com/x/react-data-grid/editing/#server-side-persistence."], "error");
      };
      try {
        const ge = e.current.getRow(W);
        Promise.resolve(d(ce, ge, {
          rowId: W
        })).then((de) => {
          e.current.updateRows([de]), X();
        }).catch(me);
      } catch (ge) {
        me(ge);
      }
    } else
      e.current.updateRows([ce]), X();
  }), U = S.useCallback(async (B) => {
    var ge, de;
    const {
      id: W,
      field: q,
      value: ne,
      debounceMs: re,
      unstable_skipValueParser: X
    } = B;
    C(W, q), w(W, q, vr.Edit);
    const j = e.current.getColumn(q), ie = e.current.getRow(W);
    let fe = ne;
    j.valueParser && !X && (fe = j.valueParser(ne, ie, j, e));
    let ce = si(e.current.state), me = J({}, ce[W][q], {
      value: fe,
      changeReason: re ? "debouncedSetEditCellValue" : "setEditCellValue"
    });
    if (j.preProcessEditCellProps) {
      const pe = ne !== ce[W][q].value;
      me = J({}, me, {
        isProcessingProps: !0
      }), z(W, q, me), me = await Promise.resolve(j.preProcessEditCellProps({
        id: W,
        row: ie,
        props: me,
        hasChanged: pe
      }));
    }
    return e.current.getCellMode(W, q) === vr.View ? !1 : (ce = si(e.current.state), me = J({}, me, {
      isProcessingProps: !1
    }), me.value = j.preProcessEditCellProps ? ce[W][q].value : fe, z(W, q, me), ce = si(e.current.state), !((de = (ge = ce[W]) == null ? void 0 : ge[q]) != null && de.error));
  }, [e, C, w, z]), G = S.useCallback((B, W) => {
    const q = e.current.getColumn(W), ne = si(e.current.state), re = e.current.getRow(B);
    if (!ne[B] || !ne[B][W])
      return e.current.getRow(B);
    const {
      value: X
    } = ne[B][W];
    return q.valueSetter ? q.valueSetter(X, re, q, e) : J({}, re, {
      [W]: X
    });
  }, [e]), Y = {
    getCellMode: _,
    startCellEditMode: K,
    stopCellEditMode: H
  }, te = {
    setCellEditingEditCellValue: U,
    getRowWithUpdatedValuesFromCellEditing: G
  };
  Mn(e, Y, "public"), Mn(e, te, "private"), S.useEffect(() => {
    m && P(m);
  }, [m, P]), Fr(() => {
    const B = Qs(e), W = u.current;
    u.current = Z2(n), Object.entries(n).forEach(([q, ne]) => {
      Object.entries(ne).forEach(([re, X]) => {
        var fe, ce;
        const j = ((ce = (fe = W[q]) == null ? void 0 : fe[re]) == null ? void 0 : ce.mode) || vr.View, ie = B[q] ? e.current.getRowId(B[q]) : q;
        X.mode === vr.Edit && j === vr.View ? Q(J({
          id: ie,
          field: re
        }, X)) : X.mode === vr.View && j === vr.Edit && I(J({
          id: ie,
          field: re
        }, X));
      });
    });
  }, [e, n, Q, I]);
}, xle = ["id"], Ele = ["id"], Tle = (e, t) => {
  const [n, i] = S.useState({}), s = S.useRef(n), u = S.useRef({}), d = S.useRef({}), p = S.useRef(void 0), m = S.useRef(null), {
    processRowUpdate: v,
    onProcessRowUpdateError: y,
    rowModesModel: C,
    onRowModesModelChange: w
  } = t, R = (X) => (...j) => {
    t.editMode === qu.Row && X(...j);
  }, O = S.useCallback((X, j) => {
    const ie = e.current.getCellParams(X, j);
    if (!e.current.isCellEditable(ie))
      throw new Error(`MUI X: The cell with id=${X} and field=${j} is not editable.`);
  }, [e]), E = S.useCallback((X, j) => {
    if (e.current.getRowMode(X) !== j)
      throw new Error(`MUI X: The row with id=${X} is not in ${j} mode.`);
  }, [e]), k = S.useCallback((X) => {
    const j = si(e.current.state);
    return Object.values(j[X]).some((ie) => ie.error);
  }, [e]), L = S.useCallback((X, j) => {
    if (!X.isEditable || e.current.getRowMode(X.id) === Yr.Edit)
      return;
    const ie = e.current.getRowParams(X.id), fe = J({}, ie, {
      field: X.field,
      reason: ef.cellDoubleClick
    });
    e.current.publishEvent("rowEditStart", fe, j);
  }, [e]), F = S.useCallback((X) => {
    m.current = X;
  }, []), _ = S.useCallback((X, j) => {
    X.isEditable && e.current.getRowMode(X.id) !== Yr.View && (m.current = null, p.current = setTimeout(() => {
      var ie;
      if (((ie = m.current) == null ? void 0 : ie.id) !== X.id) {
        if (!e.current.getRow(X.id) || e.current.getRowMode(X.id) === Yr.View || k(X.id))
          return;
        const fe = e.current.getRowParams(X.id), ce = J({}, fe, {
          field: X.field,
          reason: Mu.rowFocusOut
        });
        e.current.publishEvent("rowEditStop", ce, j);
      }
    }));
  }, [e, k]);
  S.useEffect(() => () => {
    clearTimeout(p.current);
  }, []);
  const P = S.useCallback((X, j) => {
    if (X.cellMode === Yr.Edit) {
      if (j.which === 229)
        return;
      let ie;
      if (j.key === "Escape")
        ie = Mu.escapeKeyDown;
      else if (j.key === "Enter")
        ie = Mu.enterKeyDown;
      else if (j.key === "Tab") {
        const fe = av(e).filter((ce) => e.current.getColumn(ce).type === _E ? !0 : e.current.isCellEditable(e.current.getCellParams(X.id, ce)));
        if (j.shiftKey ? X.field === fe[0] && (ie = Mu.shiftTabKeyDown) : X.field === fe[fe.length - 1] && (ie = Mu.tabKeyDown), j.preventDefault(), !ie) {
          const ce = fe.findIndex((ge) => ge === X.field), me = fe[j.shiftKey ? ce - 1 : ce + 1];
          e.current.setCellFocus(X.id, me);
        }
      }
      if (ie) {
        if (ie !== Mu.escapeKeyDown && k(X.id))
          return;
        const fe = J({}, e.current.getRowParams(X.id), {
          reason: ie,
          field: X.field
        });
        e.current.publishEvent("rowEditStop", fe, j);
      }
    } else if (X.isEditable) {
      let ie;
      if (!e.current.unstable_applyPipeProcessors("canStartEditing", !0, {
        event: j,
        cellParams: X,
        editMode: "row"
      }))
        return;
      if (EH(j) || RH(j) ? ie = ef.printableKeyDown : j.key === "Enter" ? ie = ef.enterKeyDown : (j.key === "Backspace" || j.key === "Delete") && (ie = ef.deleteKeyDown), ie) {
        const ce = e.current.getRowParams(X.id), me = J({}, ce, {
          field: X.field,
          reason: ie
        });
        e.current.publishEvent("rowEditStart", me, j);
      }
    }
  }, [e, k]), D = S.useCallback((X) => {
    const {
      id: j,
      field: ie,
      reason: fe
    } = X, ce = {
      id: j,
      fieldToFocus: ie
    };
    (fe === ef.printableKeyDown || fe === ef.deleteKeyDown) && (ce.deleteValue = !!ie), e.current.startRowEditMode(ce);
  }, [e]), z = S.useCallback((X) => {
    const {
      id: j,
      reason: ie,
      field: fe
    } = X;
    e.current.runPendingEditCellValueMutation(j);
    let ce;
    ie === Mu.enterKeyDown ? ce = "below" : ie === Mu.tabKeyDown ? ce = "right" : ie === Mu.shiftTabKeyDown && (ce = "left");
    const me = ie === "escapeKeyDown";
    e.current.stopRowEditMode({
      id: j,
      ignoreModifications: me,
      field: fe,
      cellToFocusAfter: ce
    });
  }, [e]);
  Mt(e, "cellDoubleClick", R(L)), Mt(e, "cellFocusIn", R(F)), Mt(e, "cellFocusOut", R(_)), Mt(e, "cellKeyDown", R(P)), Mt(e, "rowEditStart", R(D)), Mt(e, "rowEditStop", R(z)), br(e, "rowEditStart", t.onRowEditStart), br(e, "rowEditStop", t.onRowEditStop);
  const K = S.useCallback((X) => oH(e, {
    rowId: X,
    editMode: t.editMode
  }) ? Yr.Edit : Yr.View, [e, t.editMode]), Q = Nn((X) => {
    const j = X !== t.rowModesModel;
    w && j && w(X, {
      api: e.current
    }), !(t.rowModesModel && j) && (i(X), s.current = X, e.current.publishEvent("rowModesModelChange", X));
  }), H = S.useCallback((X, j) => {
    const ie = J({}, s.current);
    j !== null ? ie[X] = J({}, j) : delete ie[X], Q(ie);
  }, [Q]), I = S.useCallback((X, j) => {
    e.current.setState((ie) => {
      const fe = J({}, ie.editRows);
      return j !== null ? fe[X] = j : delete fe[X], J({}, ie, {
        editRows: fe
      });
    }), e.current.forceUpdate();
  }, [e]), U = S.useCallback((X, j, ie) => {
    e.current.setState((fe) => {
      const ce = J({}, fe.editRows);
      return ie !== null ? ce[X] = J({}, ce[X], {
        [j]: J({}, ie)
      }) : (delete ce[X][j], Object.keys(ce[X]).length === 0 && delete ce[X]), J({}, fe, {
        editRows: ce
      });
    }), e.current.forceUpdate();
  }, [e]), G = S.useCallback((X) => {
    const {
      id: j
    } = X, ie = Xt(X, xle);
    E(j, Yr.View), H(j, J({
      mode: Yr.Edit
    }, ie));
  }, [E, H]), Y = Nn((X) => {
    const {
      id: j,
      fieldToFocus: ie,
      deleteValue: fe,
      initialValue: ce
    } = X, me = e.current.getRow(j), ge = tl(e), de = ge.reduce((pe, be) => {
      const Ce = be.field;
      if (!e.current.getCellParams(j, Ce).isEditable)
        return pe;
      const ue = e.current.getColumn(Ce);
      let we = e.current.getCellValue(j, Ce);
      return ie === Ce && (fe || ce) && (fe ? we = qk(ue) : ce && (we = ce)), pe[Ce] = {
        value: we,
        error: !1,
        isProcessingProps: ue.editable && !!ue.preProcessEditCellProps && fe
      }, pe;
    }, {});
    d.current[j] = me, I(j, de), ie && e.current.setCellFocus(j, ie), ge.filter((pe) => e.current.getCellParams(j, pe.field).isEditable && pe.editable && !!pe.preProcessEditCellProps && fe).forEach((pe) => {
      const be = pe.field, Ce = e.current.getCellValue(j, be), Re = fe ? qk(pe) : ce ?? Ce;
      Promise.resolve(pe.preProcessEditCellProps({
        id: j,
        row: me,
        props: de[be],
        hasChanged: Re !== Ce
      })).then((ue) => {
        if (e.current.getRowMode(j) === Yr.Edit) {
          const we = si(e.current.state);
          U(j, be, J({}, ue, {
            value: we[j][be].value,
            isProcessingProps: !1
          }));
        }
      });
    });
  }), te = S.useCallback((X) => {
    const {
      id: j
    } = X, ie = Xt(X, Ele);
    E(j, Yr.Edit), H(j, J({
      mode: Yr.View
    }, ie));
  }, [E, H]), B = Nn((X) => {
    const {
      id: j,
      ignoreModifications: ie,
      field: fe,
      cellToFocusAfter: ce = "none"
    } = X;
    e.current.runPendingEditCellValueMutation(j);
    const me = () => {
      ce !== "none" && fe && e.current.moveFocusToRelativeCell(j, fe, ce), I(j, null), H(j, null), delete d.current[j];
    };
    if (ie) {
      me();
      return;
    }
    const ge = si(e.current.state), de = d.current[j];
    if (Object.values(ge[j]).some((Ce) => Ce.isProcessingProps)) {
      u.current[j].mode = Yr.Edit;
      return;
    }
    if (k(j)) {
      u.current[j].mode = Yr.Edit, H(j, {
        mode: Yr.Edit
      });
      return;
    }
    const be = e.current.getRowWithUpdatedValuesFromRowEditing(j);
    if (v) {
      const Ce = (Re) => {
        u.current[j] && (u.current[j].mode = Yr.Edit, H(j, {
          mode: Yr.Edit
        })), y ? y(Re) : process.env.NODE_ENV !== "production" && el(["MUI X: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.", "To handle the error pass a callback to the `onProcessRowUpdateError` prop, for example `<DataGrid onProcessRowUpdateError={(error) => ...} />`.", "For more detail, see https://mui.com/x/react-data-grid/editing/#server-side-persistence."], "error");
      };
      try {
        Promise.resolve(v(be, de, {
          rowId: j
        })).then((Re) => {
          e.current.updateRows([Re]), me();
        }).catch(Ce);
      } catch (Re) {
        Ce(Re);
      }
    } else
      e.current.updateRows([be]), me();
  }), W = S.useCallback((X) => {
    const {
      id: j,
      field: ie,
      value: fe,
      debounceMs: ce,
      unstable_skipValueParser: me
    } = X;
    O(j, ie);
    const ge = e.current.getColumn(ie), de = e.current.getRow(j);
    let pe = fe;
    ge.valueParser && !me && (pe = ge.valueParser(fe, de, ge, e));
    let be = si(e.current.state), Ce = J({}, be[j][ie], {
      value: pe,
      changeReason: ce ? "debouncedSetEditCellValue" : "setEditCellValue"
    });
    return ge.preProcessEditCellProps || U(j, ie, Ce), new Promise((Re) => {
      const ue = [];
      if (ge.preProcessEditCellProps) {
        const we = Ce.value !== be[j][ie].value;
        Ce = J({}, Ce, {
          isProcessingProps: !0
        }), U(j, ie, Ce);
        const _e = be[j], He = Xt(_e, [ie].map(yC)), et = Promise.resolve(ge.preProcessEditCellProps({
          id: j,
          row: de,
          props: Ce,
          hasChanged: we,
          otherFieldsProps: He
        })).then((Ne) => {
          if (e.current.getRowMode(j) === Yr.View) {
            Re(!1);
            return;
          }
          be = si(e.current.state), Ne = J({}, Ne, {
            isProcessingProps: !1
          }), Ne.value = ge.preProcessEditCellProps ? be[j][ie].value : pe, U(j, ie, Ne);
        });
        ue.push(et);
      }
      Object.entries(be[j]).forEach(([we, _e]) => {
        if (we === ie)
          return;
        const He = e.current.getColumn(we);
        if (!He.preProcessEditCellProps)
          return;
        _e = J({}, _e, {
          isProcessingProps: !0
        }), U(j, we, _e), be = si(e.current.state);
        const et = be[j], Ne = Xt(et, [we].map(yC)), rt = Promise.resolve(He.preProcessEditCellProps({
          id: j,
          row: de,
          props: _e,
          hasChanged: !1,
          otherFieldsProps: Ne
        })).then((it) => {
          if (e.current.getRowMode(j) === Yr.View) {
            Re(!1);
            return;
          }
          it = J({}, it, {
            isProcessingProps: !1
          }), U(j, we, it);
        });
        ue.push(rt);
      }), Promise.all(ue).then(() => {
        e.current.getRowMode(j) === Yr.Edit ? (be = si(e.current.state), Re(!be[j][ie].error)) : Re(!1);
      });
    });
  }, [e, O, U]), q = S.useCallback((X) => {
    const j = si(e.current.state), ie = e.current.getRow(X);
    if (!j[X])
      return e.current.getRow(X);
    let fe = J({}, d.current[X], ie);
    return Object.entries(j[X]).forEach(([ce, me]) => {
      const ge = e.current.getColumn(ce);
      ge != null && ge.valueSetter ? fe = ge.valueSetter(me.value, fe, ge, e) : fe[ce] = me.value;
    }), fe;
  }, [e]), ne = {
    getRowMode: K,
    startRowEditMode: G,
    stopRowEditMode: te
  }, re = {
    setRowEditingEditCellValue: W,
    getRowWithUpdatedValuesFromRowEditing: q
  };
  Mn(e, ne, "public"), Mn(e, re, "private"), S.useEffect(() => {
    C && Q(C);
  }, [C, Q]), Fr(() => {
    const X = Qs(e), j = u.current;
    u.current = Z2(n);
    const ie = /* @__PURE__ */ new Set([...Object.keys(n), ...Object.keys(j)]);
    Array.from(ie).forEach((fe) => {
      var de;
      const ce = n[fe] ?? {
        mode: Yr.View
      }, me = ((de = j[fe]) == null ? void 0 : de.mode) || Yr.View, ge = X[fe] ? e.current.getRowId(X[fe]) : fe;
      ce.mode === Yr.Edit && me === Yr.View ? Y(J({
        id: ge
      }, ce)) : ce.mode === Yr.View && me === Yr.Edit && B(J({
        id: ge
      }, ce));
    });
  }, [e, n, Y, B]);
}, Rle = (e) => J({}, e, {
  editRows: {}
}), Ole = (e, t) => {
  wle(e, t), Tle(e, t);
  const n = S.useRef({}), {
    isCellEditable: i
  } = t, s = S.useCallback((w) => Xg(w.rowNode) || !w.colDef.editable || !w.colDef.renderEditCell ? !1 : i ? i(w) : !0, [i]), u = (w, R, O, E) => {
    if (!O) {
      E();
      return;
    }
    if (n.current[w] || (n.current[w] = {}), n.current[w][R]) {
      const [F] = n.current[w][R];
      clearTimeout(F);
    }
    const k = () => {
      const [F] = n.current[w][R];
      clearTimeout(F), E(), delete n.current[w][R];
    }, L = setTimeout(() => {
      E(), delete n.current[w][R];
    }, O);
    n.current[w][R] = [L, k];
  };
  S.useEffect(() => {
    const w = n.current;
    return () => {
      Object.entries(w).forEach(([R, O]) => {
        Object.keys(O).forEach((E) => {
          const [k] = w[R][E];
          clearTimeout(k), delete w[R][E];
        });
      });
    };
  }, []);
  const d = S.useCallback((w, R) => {
    if (n.current[w]) {
      if (!R)
        Object.keys(n.current[w]).forEach((O) => {
          const [, E] = n.current[w][O];
          E();
        });
      else if (n.current[w][R]) {
        const [, O] = n.current[w][R];
        O();
      }
    }
  }, []), p = S.useCallback((w) => {
    const {
      id: R,
      field: O,
      debounceMs: E
    } = w;
    return new Promise((k) => {
      u(R, O, E, async () => {
        const L = t.editMode === qu.Row ? e.current.setRowEditingEditCellValue : e.current.setCellEditingEditCellValue;
        if (e.current.getCellMode(R, O) === vr.Edit) {
          const F = await L(w);
          k(F);
        }
      });
    });
  }, [e, t.editMode]), m = S.useCallback((w, R) => t.editMode === qu.Cell ? e.current.getRowWithUpdatedValuesFromCellEditing(w, R) : e.current.getRowWithUpdatedValuesFromRowEditing(w), [e, t.editMode]), v = S.useCallback((w, R) => {
    var E;
    return ((E = si(e.current.state)[w]) == null ? void 0 : E[R]) ?? null;
  }, [e]), y = {
    isCellEditable: s,
    setEditCellValue: p,
    getRowWithUpdatedValues: m,
    unstable_getEditCellMeta: v
  }, C = {
    runPendingEditCellValueMutation: d
  };
  Mn(e, y, "public"), Mn(e, C, "private");
}, kle = (e, t, n) => {
  const i = !!t.unstable_dataSource;
  return n.current.caches.rows = m0({
    rows: i ? [] : t.rows,
    getRowId: t.getRowId,
    loading: t.loading,
    rowCount: t.rowCount
  }), J({}, e, {
    rows: dz({
      apiRef: n,
      rowCountProp: t.rowCount,
      loadingProp: i ? !0 : t.loading,
      previousTree: null,
      previousTreeDepths: null
    })
  });
}, Ple = (e, t) => {
  if (process.env.NODE_ENV !== "production")
    try {
      Object.freeze(t.rows);
    } catch {
    }
  const n = ui(e, "useGridRows"), i = S.useRef(Date.now()), s = S.useRef(t.rowCount), u = ps(), d = S.useCallback((B) => {
    const W = Qs(e)[B];
    if (W)
      return W;
    const q = e.current.getRowNode(B);
    return q && Xg(q) ? {
      [Yg]: B
    } : null;
  }, [e]), p = S.useCallback((B) => UC(e.current.state, B), [e]), m = S.useCallback(({
    cache: B,
    throttle: W
  }) => {
    const q = () => {
      i.current = Date.now(), e.current.setState((re) => J({}, re, {
        rows: dz({
          apiRef: e,
          rowCountProp: t.rowCount,
          loadingProp: t.loading,
          previousTree: Go(e),
          previousTreeDepths: W_(e),
          previousGroupsToFetch: dte(e)
        })
      })), e.current.publishEvent("rowsSet"), e.current.forceUpdate();
    };
    if (u.clear(), e.current.caches.rows = B, !W) {
      q();
      return;
    }
    const ne = t.throttleRowsMs - (Date.now() - i.current);
    if (ne > 0) {
      u.start(ne, q);
      return;
    }
    q();
  }, [t.throttleRowsMs, t.rowCount, t.loading, e, u]), v = S.useCallback((B) => {
    n.debug(`Updating all rows, new length ${B.length}`);
    const W = m0({
      rows: B,
      getRowId: t.getRowId,
      loading: t.loading,
      rowCount: t.rowCount
    }), q = e.current.caches.rows;
    W.rowsBeforePartialUpdates = q.rowsBeforePartialUpdates, m({
      cache: W,
      throttle: !0
    });
  }, [n, t.getRowId, t.loading, t.rowCount, m, e]), y = S.useCallback((B) => {
    if (t.signature === gs.DataGrid && B.length > 1)
      throw new Error(["MUI X: You cannot update several rows at once in `apiRef.current.updateRows` on the DataGrid.", "You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature."].join(`
`));
    const W = rA(e, B, t.getRowId), q = nA({
      updates: W,
      getRowId: t.getRowId,
      previousCache: e.current.caches.rows
    });
    m({
      cache: q,
      throttle: !0
    });
  }, [t.signature, t.getRowId, m, e]), C = S.useCallback((B, W) => {
    const q = rA(e, B, t.getRowId), ne = nA({
      updates: q,
      getRowId: t.getRowId,
      previousCache: e.current.caches.rows,
      groupKeys: W ?? []
    });
    m({
      cache: ne,
      throttle: !1
    });
  }, [t.getRowId, m, e]), w = S.useCallback((B) => {
    B !== t.loading && (n.debug(`Setting loading to ${B}`), e.current.setState((W) => J({}, W, {
      rows: J({}, W.rows, {
        loading: B
      })
    })), e.current.caches.rows.loadingPropBeforePartialUpdates = B);
  }, [t.loading, e, n]), R = S.useCallback(() => {
    const B = zb(e), W = Qs(e);
    return new Map(B.map((q) => [q, W[q] ?? {}]));
  }, [e]), O = S.useCallback(() => zC(e), [e]), E = S.useCallback(() => zb(e), [e]), k = S.useCallback((B) => {
    const W = e.current.getRow(B), {
      rowToIndexMap: q
    } = mf(e);
    return q.get(W);
  }, [e]), L = S.useCallback((B, W) => {
    const q = e.current.getRowNode(B);
    if (!q)
      throw new Error(`MUI X: No row with id #${B} found.`);
    if (q.type !== "group")
      throw new Error("MUI X: Only group nodes can be expanded or collapsed.");
    const ne = J({}, q, {
      childrenExpanded: W
    });
    e.current.setState((re) => J({}, re, {
      rows: J({}, re.rows, {
        tree: J({}, re.rows.tree, {
          [B]: ne
        })
      })
    })), e.current.forceUpdate(), e.current.publishEvent("rowExpansionChange", ne);
  }, [e]), F = S.useCallback((B) => Go(e)[B] ?? null, [e]), _ = S.useCallback(({
    skipAutoGeneratedRows: B = !0,
    groupId: W,
    applySorting: q,
    applyFiltering: ne
  }) => {
    const re = Go(e);
    let X;
    if (q) {
      const j = re[W];
      if (!j)
        return [];
      const ie = lv(e);
      X = [];
      const fe = ie.findIndex((ce) => ce === W) + 1;
      for (let ce = fe; ce < ie.length && re[ie[ce]].depth > j.depth; ce += 1) {
        const me = ie[ce];
        (!B || !Xg(re[me])) && X.push(me);
      }
    } else
      X = nM(re, W, B);
    if (ne) {
      const j = uv(e);
      X = X.filter((ie) => j[ie] !== !1);
    }
    return X;
  }, [e]), P = S.useCallback((B, W) => {
    const q = e.current.getRowNode(B);
    if (!q)
      throw new Error(`MUI X: No row with id #${B} found.`);
    if (q.parent !== $i)
      throw new Error("MUI X: The row reordering do not support reordering of grouped rows yet.");
    if (q.type !== "leaf")
      throw new Error("MUI X: The row reordering do not support reordering of footer or grouping rows.");
    e.current.setState((ne) => {
      const re = Go(ne, e.current.instanceId)[$i], X = re.children, j = X.findIndex((fe) => fe === B);
      if (j === -1 || j === W)
        return ne;
      n.debug(`Moving row ${B} to index ${W}`);
      const ie = [...X];
      return ie.splice(W, 0, ie.splice(j, 1)[0]), J({}, ne, {
        rows: J({}, ne.rows, {
          tree: J({}, ne.rows.tree, {
            [$i]: J({}, re, {
              children: ie
            })
          })
        })
      });
    }), e.current.publishEvent("rowsSet");
  }, [e, n]), D = S.useCallback((B, W) => {
    if (t.signature === gs.DataGrid && W.length > 1)
      throw new Error(["MUI X: You cannot replace rows using `apiRef.current.unstable_replaceRows` on the DataGrid.", "You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature."].join(`
`));
    if (W.length === 0)
      return;
    if (yh(e) > 1)
      throw new Error("`apiRef.current.unstable_replaceRows` is not compatible with tree data and row grouping");
    const ne = J({}, Go(e)), re = J({}, Qs(e)), X = J({}, G_(e)), j = ne[$i], ie = [...j.children], fe = /* @__PURE__ */ new Set();
    for (let me = 0; me < W.length; me += 1) {
      const ge = W[me], de = AE(ge, t.getRowId, "A row was provided without id when calling replaceRows()."), [pe] = ie.splice(B + me, 1, de);
      fe.has(pe) || (delete re[pe], delete X[pe], delete ne[pe]);
      const be = {
        id: de,
        depth: 0,
        parent: $i,
        type: "leaf",
        groupingKey: null
      };
      re[de] = ge, X[de] = de, ne[de] = be, fe.add(de);
    }
    ne[$i] = J({}, j, {
      children: ie
    });
    const ce = ie.filter((me) => {
      var ge;
      return ((ge = ne[me]) == null ? void 0 : ge.type) === "leaf";
    });
    e.current.caches.rows.dataRowIdToModelLookup = re, e.current.caches.rows.dataRowIdToIdLookup = X, e.current.setState((me) => J({}, me, {
      rows: J({}, me.rows, {
        dataRowIdToModelLookup: re,
        dataRowIdToIdLookup: X,
        dataRowIds: ce,
        tree: ne
      })
    })), e.current.publishEvent("rowsSet");
  }, [e, t.signature, t.getRowId]), z = {
    getRow: d,
    setLoading: w,
    getRowId: p,
    getRowModels: R,
    getRowsCount: O,
    getAllRowIds: E,
    setRows: v,
    updateRows: y,
    getRowNode: F,
    getRowIndexRelativeToVisibleRows: k,
    unstable_replaceRows: D
  }, K = {
    setRowIndex: P,
    setRowChildrenExpansion: L,
    getRowGroupChildren: _
  }, Q = {
    updateServerRows: C
  }, H = S.useCallback(() => {
    n.info("Row grouping pre-processing have changed, regenerating the row tree");
    let B;
    e.current.caches.rows.rowsBeforePartialUpdates === t.rows ? B = J({}, e.current.caches.rows, {
      updates: {
        type: "full",
        rows: zb(e)
      }
    }) : B = m0({
      rows: t.rows,
      getRowId: t.getRowId,
      loading: t.loading,
      rowCount: t.rowCount
    }), m({
      cache: B,
      throttle: !1
    });
  }, [n, e, t.rows, t.getRowId, t.loading, t.rowCount, m]), I = al(() => t.unstable_dataSource), U = S.useCallback((B) => {
    if (t.unstable_dataSource && t.unstable_dataSource !== I.current) {
      I.current = t.unstable_dataSource;
      return;
    }
    B === "rowTreeCreation" && H();
  }, [H, I, t.unstable_dataSource]), G = S.useCallback(() => {
    e.current.getActiveStrategy("rowTree") !== fte(e) && H();
  }, [e, H]);
  Mt(e, "activeStrategyProcessorChange", U), Mt(e, "strategyAvailabilityChange", G);
  const Y = S.useCallback(() => {
    e.current.setState((B) => {
      const W = e.current.unstable_applyPipeProcessors("hydrateRows", {
        tree: Go(B, e.current.instanceId),
        treeDepths: W_(B, e.current.instanceId),
        dataRowIds: zb(B, e.current.instanceId),
        dataRowIdToModelLookup: Qs(B, e.current.instanceId),
        dataRowIdToIdLookup: G_(B, e.current.instanceId)
      });
      return J({}, B, {
        rows: J({}, B.rows, W, {
          totalTopLevelRowCount: cz({
            tree: W.tree,
            rowCountProp: t.rowCount
          })
        })
      });
    }), e.current.publishEvent("rowsSet"), e.current.forceUpdate();
  }, [e, t.rowCount]);
  CM(e, "hydrateRows", Y), Mn(e, z, "public"), Mn(e, K, t.signature === gs.DataGrid ? "private" : "public"), Mn(e, Q, "private");
  const te = S.useRef(!0);
  S.useEffect(() => {
    var re;
    if (te.current) {
      te.current = !1;
      return;
    }
    let B = !1;
    t.rowCount !== s.current && (B = !0, s.current = t.rowCount);
    const W = e.current.caches.rows.rowsBeforePartialUpdates === t.rows, q = e.current.caches.rows.loadingPropBeforePartialUpdates === t.loading, ne = e.current.caches.rows.rowCountPropBeforePartialUpdates === t.rowCount;
    W && (q || (e.current.setState((X) => J({}, X, {
      rows: J({}, X.rows, {
        loading: t.loading
      })
    })), e.current.caches.rows.loadingPropBeforePartialUpdates = t.loading, e.current.forceUpdate()), ne || (e.current.setState((X) => J({}, X, {
      rows: J({}, X.rows, {
        totalRowCount: Math.max(t.rowCount || 0, X.rows.totalRowCount),
        totalTopLevelRowCount: Math.max(t.rowCount || 0, X.rows.totalTopLevelRowCount)
      })
    })), e.current.caches.rows.rowCountPropBeforePartialUpdates = t.rowCount, e.current.forceUpdate()), !B) || (n.debug(`Updating all rows, new length ${(re = t.rows) == null ? void 0 : re.length}`), m({
      cache: m0({
        rows: t.rows,
        getRowId: t.getRowId,
        loading: t.loading,
        rowCount: t.rowCount
      }),
      throttle: !1
    }));
  }, [t.rows, t.rowCount, t.getRowId, t.loading, n, m, e]);
}, Mle = (e) => {
  const t = {
    [$i]: J({}, Gte(), {
      children: e
    })
  };
  for (let n = 0; n < e.length; n += 1) {
    const i = e[n];
    t[i] = {
      id: i,
      depth: 0,
      parent: $i,
      type: "leaf",
      groupingKey: null
    };
  }
  return {
    groupingName: ph,
    tree: t,
    treeDepths: {
      0: e.length
    },
    dataRowIds: e
  };
}, Ile = ({
  previousTree: e,
  actions: t
}) => {
  const n = J({}, e), i = {};
  for (let d = 0; d < t.remove.length; d += 1) {
    const p = t.remove[d];
    i[p] = !0, delete n[p];
  }
  for (let d = 0; d < t.insert.length; d += 1) {
    const p = t.insert[d];
    n[p] = {
      id: p,
      depth: 0,
      parent: $i,
      type: "leaf",
      groupingKey: null
    };
  }
  const s = n[$i];
  let u = [...s.children, ...t.insert];
  return Object.values(i).length && (u = u.filter((d) => !i[d])), n[$i] = J({}, s, {
    children: u
  }), {
    groupingName: ph,
    tree: n,
    treeDepths: {
      0: u.length
    },
    dataRowIds: u
  };
}, Dle = (e) => e.updates.type === "full" ? Mle(e.updates.rows) : Ile({
  previousTree: e.previousTree,
  actions: e.updates.actions
}), Nle = (e) => {
  eE(e, ph, "rowTreeCreation", Dle);
};
class WO extends Error {
}
function Lle(e, t) {
  var O;
  const n = S.useCallback((E) => ({
    field: E,
    colDef: e.current.getColumn(E)
  }), [e]), i = S.useCallback((E) => {
    const k = e.current.getRow(E);
    if (!k)
      throw new WO(`No row with id #${E} found`);
    return {
      id: E,
      columns: e.current.getAllColumns(),
      row: k
    };
  }, [e]), s = S.useCallback((E, k, L, {
    cellMode: F,
    colDef: _,
    hasFocus: P,
    rowNode: D,
    tabIndex: z
  }) => {
    const K = L[k], Q = _ != null && _.valueGetter ? _.valueGetter(K, L, _, e) : K, H = {
      id: E,
      field: k,
      row: L,
      rowNode: D,
      colDef: _,
      cellMode: F,
      hasFocus: P,
      tabIndex: z,
      value: Q,
      formattedValue: Q,
      isEditable: !1,
      api: e.current
    };
    return _ && _.valueFormatter && (H.formattedValue = _.valueFormatter(Q, L, _, e)), H.isEditable = _ && e.current.isCellEditable(H), H;
  }, [e]), u = S.useCallback((E, k) => {
    var z;
    const L = e.current.getRow(E), F = e.current.getRowNode(E);
    if (!L || !F)
      throw new WO(`No row with id #${E} found`);
    const _ = Sa(e), P = sM(e), D = e.current.getCellMode(E, k);
    return e.current.getCellParamsForRow(E, k, L, {
      colDef: t.unstable_listView && ((z = t.unstable_listColumn) == null ? void 0 : z.field) === k ? Jg(e.current.state) : e.current.getColumn(k),
      rowNode: F,
      hasFocus: _ !== null && _.field === k && _.id === E,
      tabIndex: P && P.field === k && P.id === E ? 0 : -1,
      cellMode: D
    });
  }, [e, t.unstable_listView, (O = t.unstable_listColumn) == null ? void 0 : O.field]), d = S.useCallback((E, k) => {
    const L = e.current.getColumn(k), F = e.current.getRow(E);
    if (!F)
      throw new WO(`No row with id #${E} found`);
    return !L || !L.valueGetter ? F[k] : L.valueGetter(F[L.field], F, L, e);
  }, [e]), p = S.useCallback((E, k) => {
    const L = k.field;
    if (!k || !k.valueGetter)
      return E[L];
    const F = E[k.field];
    return k.valueGetter(F, E, k, e);
  }, [e]), m = S.useCallback((E, k) => {
    const L = p(E, k);
    return !k || !k.valueFormatter ? L : k.valueFormatter(L, E, k, e);
  }, [e, p]), v = S.useCallback((E) => e.current.rootElementRef.current ? mie(e.current.rootElementRef.current, E) : null, [e]), y = S.useCallback((E) => e.current.rootElementRef.current ? gie(e.current.rootElementRef.current, E) : null, [e]), C = S.useCallback((E, k) => e.current.rootElementRef.current ? vie(e.current.rootElementRef.current, {
    id: E,
    field: k
  }) : null, [e]), w = {
    getCellValue: d,
    getCellParams: u,
    getCellElement: C,
    getRowValue: p,
    getRowFormattedValue: m,
    getRowParams: i,
    getRowElement: y,
    getColumnHeaderParams: n,
    getColumnHeaderElement: v
  }, R = {
    getCellParamsForRow: s
  };
  Mn(e, w, "public"), Mn(e, R, "private");
}
const tV = (e, t) => e == null || Array.isArray(e) ? e : t && t[0] === e ? t : [e], Fle = (e, t) => J({}, e, {
  rowSelection: t.rowSelection ? tV(t.rowSelectionModel) ?? [] : []
}), _le = (e, t) => {
  var ne, re, X, j, ie, fe, ce, me, ge;
  const n = ui(e, "useGridSelection"), i = S.useCallback((de) => (...pe) => {
    t.rowSelection && de(...pe);
  }, [t.rowSelection]), s = t.signature !== gs.DataGrid && (((ne = t.rowSelectionPropagation) == null ? void 0 : ne.parents) || ((re = t.rowSelectionPropagation) == null ? void 0 : re.descendants)), u = S.useMemo(() => tV(t.rowSelectionModel, us(e.current.state)), [e, t.rowSelectionModel]), d = S.useRef(null);
  e.current.registerControlState({
    stateId: "rowSelection",
    propModel: u,
    propOnChange: t.onRowSelectionModelChange,
    stateSelector: us,
    changeEvent: "rowSelectionChange"
  });
  const {
    checkboxSelection: p,
    disableRowSelectionOnClick: m,
    isRowSelectable: v
  } = t, y = aM(t), C = tt(e, Go), w = tt(e, yh) > 1, R = S.useCallback((de) => {
    let pe = de;
    const be = d.current ?? de, Ce = e.current.isRowSelected(de);
    if (Ce) {
      const Re = Mg(e), ue = Re.findIndex((_e) => _e === be), we = Re.findIndex((_e) => _e === pe);
      if (ue === we)
        return;
      ue > we ? pe = Re[we + 1] : pe = Re[we - 1];
    }
    d.current = de, e.current.selectRowRange({
      startId: be,
      endId: pe
    }, !Ce);
  }, [e]), O = S.useCallback((de) => {
    if (t.signature === gs.DataGrid && !y && Array.isArray(de) && de.length > 1)
      throw new Error(["MUI X: `rowSelectionModel` can only contain 1 item in DataGrid.", "You need to upgrade to DataGridPro or DataGridPremium component to unlock multiple selection."].join(`
`));
    us(e.current.state) !== de && (n.debug("Setting selection model"), e.current.setState((be) => J({}, be, {
      rowSelection: t.rowSelection ? de : []
    })), e.current.forceUpdate());
  }, [e, n, t.rowSelection, t.signature, y]), E = S.useCallback((de) => us(e.current.state).includes(de), [e]), k = S.useCallback((de) => {
    if (t.rowSelection === !1 || v && !v(e.current.getRowParams(de)))
      return !1;
    const pe = Go(e)[de];
    return !((pe == null ? void 0 : pe.type) === "footer" || (pe == null ? void 0 : pe.type) === "pinnedRow");
  }, [e, t.rowSelection, v]), L = S.useCallback(() => hne(e), [e]), F = S.useCallback((de, pe = !0, be = !1) => {
    var Ce, Re, ue, we, _e, He;
    if (e.current.isRowSelectable(de))
      if (d.current = de, be) {
        n.debug(`Setting selection for row ${de}`);
        const et = [], Ne = (rt) => {
          et.push(rt);
        };
        pe && (Ne(de), s && Mb(e, C, de, ((Ce = t.rowSelectionPropagation) == null ? void 0 : Ce.descendants) ?? !1, ((Re = t.rowSelectionPropagation) == null ? void 0 : Re.parents) ?? !1, Ne)), e.current.setRowSelectionModel(et);
      } else {
        n.debug(`Toggling selection for row ${de}`);
        const et = us(e.current.state), Ne = new Set(et);
        Ne.delete(de);
        const rt = (gt) => {
          Ne.add(gt);
        }, it = (gt) => {
          Ne.delete(gt);
        };
        pe ? (rt(de), s && Mb(e, C, de, ((ue = t.rowSelectionPropagation) == null ? void 0 : ue.descendants) ?? !1, ((we = t.rowSelectionPropagation) == null ? void 0 : we.parents) ?? !1, rt)) : s && iA(e, C, de, ((_e = t.rowSelectionPropagation) == null ? void 0 : _e.descendants) ?? !1, ((He = t.rowSelectionPropagation) == null ? void 0 : He.parents) ?? !1, it), (Ne.size < 2 || y) && e.current.setRowSelectionModel(Array.from(Ne));
      }
  }, [e, n, s, C, (X = t.rowSelectionPropagation) == null ? void 0 : X.descendants, (j = t.rowSelectionPropagation) == null ? void 0 : j.parents, y]), _ = S.useCallback((de, pe = !0, be = !1) => {
    n.debug("Setting selection for several rows");
    const Ce = de.filter((we) => e.current.isRowSelectable(we));
    let Re;
    if (be) {
      if (pe) {
        if (Re = new Set(Ce), s) {
          const _e = (He) => {
            Re.add(He);
          };
          Ce.forEach((He) => {
            var et, Ne;
            Mb(e, C, He, ((et = t.rowSelectionPropagation) == null ? void 0 : et.descendants) ?? !1, ((Ne = t.rowSelectionPropagation) == null ? void 0 : Ne.parents) ?? !1, _e);
          });
        }
      } else
        Re = /* @__PURE__ */ new Set();
      const we = hf(e);
      if (Re.size === Object.keys(we).length && Array.from(Re).every((_e) => we[_e] === _e))
        return;
    } else {
      Re = new Set(Object.values(hf(e)));
      const we = (He) => {
        Re.add(He);
      }, _e = (He) => {
        Re.delete(He);
      };
      Ce.forEach((He) => {
        var et, Ne, rt, it;
        pe ? (Re.add(He), s && Mb(e, C, He, ((et = t.rowSelectionPropagation) == null ? void 0 : et.descendants) ?? !1, ((Ne = t.rowSelectionPropagation) == null ? void 0 : Ne.parents) ?? !1, we)) : (_e(He), s && iA(e, C, He, ((rt = t.rowSelectionPropagation) == null ? void 0 : rt.descendants) ?? !1, ((it = t.rowSelectionPropagation) == null ? void 0 : it.parents) ?? !1, _e));
      });
    }
    (Re.size < 2 || y) && e.current.setRowSelectionModel(Array.from(Re));
  }, [n, s, y, e, C, (ie = t.rowSelectionPropagation) == null ? void 0 : ie.descendants, (fe = t.rowSelectionPropagation) == null ? void 0 : fe.parents]), P = S.useCallback((de) => {
    var Ce, Re;
    if (!w || !s || de.length === 0)
      return de;
    const pe = new Set(de), be = (ue) => {
      pe.add(ue);
    };
    for (const ue of de)
      Mb(e, C, ue, ((Ce = t.rowSelectionPropagation) == null ? void 0 : Ce.descendants) ?? !1, ((Re = t.rowSelectionPropagation) == null ? void 0 : Re.parents) ?? !1, be, pe);
    return Array.from(pe);
  }, [e, C, (ce = t.rowSelectionPropagation) == null ? void 0 : ce.descendants, (me = t.rowSelectionPropagation) == null ? void 0 : me.parents, w, s]), D = S.useCallback(({
    startId: de,
    endId: pe
  }, be = !0, Ce = !1) => {
    if (!e.current.getRow(de) || !e.current.getRow(pe))
      return;
    n.debug(`Expanding selection from row ${de} to row ${pe}`);
    const Re = Mg(e), ue = Re.indexOf(de), we = Re.indexOf(pe), [_e, He] = ue > we ? [we, ue] : [ue, we], et = Re.slice(_e, He + 1);
    e.current.selectRows(et, be, Ce);
  }, [e, n]), z = {
    selectRow: F,
    setRowSelectionModel: O,
    getSelectedRows: L,
    isRowSelected: E,
    isRowSelectable: k
  }, K = {
    selectRows: _,
    selectRowRange: D,
    getPropagatedRowSelectionModel: P
  };
  Mn(e, z, "public"), Mn(e, K, t.signature === gs.DataGrid ? "private" : "public");
  const Q = S.useRef(!0), H = S.useCallback((de = !1) => {
    var He;
    if (Q.current)
      return;
    const pe = us(e.current.state), be = Qs(e), Ce = uv(e), Re = J({}, hf(e)), ue = (et) => t.filterMode === "server" ? !be[et] : !be[et] || Ce[et] === !1;
    let we = !1;
    pe.forEach((et) => {
      var rt;
      if (ue(et)) {
        if (t.keepNonExistentRowsSelected)
          return;
        delete Re[et], we = !0;
        return;
      }
      if (!((rt = t.rowSelectionPropagation) != null && rt.parents))
        return;
      const Ne = C[et];
      if (Ne.type === "group") {
        if (Ne.isAutoGenerated) {
          delete Re[et], we = !0;
          return;
        }
        Ne.children.every((wt) => Ce[wt] === !1) || (delete Re[et], we = !0);
      }
    });
    const _e = w && ((He = t.rowSelectionPropagation) == null ? void 0 : He.parents) && Object.keys(Re).length > 0;
    if (we || _e && !de) {
      const et = Object.values(Re);
      _e ? e.current.selectRows(et, !0, !0) : e.current.setRowSelectionModel(et);
    }
  }, [e, w, (ge = t.rowSelectionPropagation) == null ? void 0 : ge.parents, t.keepNonExistentRowsSelected, t.filterMode, C]), I = S.useCallback((de, pe) => {
    const be = pe.metaKey || pe.ctrlKey, Ce = !p && !be && !cae(pe), Re = !y || Ce, ue = e.current.isRowSelected(de);
    Re ? e.current.selectRow(de, Ce ? !0 : !ue, !0) : e.current.selectRow(de, !ue, !1);
  }, [e, y, p]), U = S.useCallback((de, pe) => {
    var Re;
    if (m)
      return;
    const be = (Re = pe.target.closest(`.${ae.cell}`)) == null ? void 0 : Re.getAttribute("data-field");
    if (be === cv.field || be === $E)
      return;
    if (be) {
      const ue = e.current.getColumn(be);
      if ((ue == null ? void 0 : ue.type) === _E)
        return;
    }
    Go(e)[de.id].type !== "pinnedRow" && (pe.shiftKey && y ? R(de.id) : I(de.id, pe));
  }, [m, y, e, R, I]), G = S.useCallback((de, pe) => {
    var be;
    y && pe.shiftKey && ((be = window.getSelection()) == null || be.removeAllRanges());
  }, [y]), Y = S.useCallback((de, pe) => {
    y && pe.nativeEvent.shiftKey ? R(de.id) : e.current.selectRow(de.id, de.value, !y);
  }, [e, R, y]), te = S.useCallback((de) => {
    const pe = t.pagination && t.checkboxSelectionVisibleOnly && t.paginationMode === "client" ? Lz(e) : Mg(e);
    e.current.selectRows(pe, de.value);
  }, [e, t.checkboxSelectionVisibleOnly, t.pagination, t.paginationMode]), B = S.useCallback((de, pe) => {
    if (e.current.getCellMode(de.id, de.field) !== vr.Edit && !qC(pe)) {
      if (Q0(pe.key) && pe.shiftKey) {
        const be = Sa(e);
        if (be && be.id !== de.id) {
          pe.preventDefault();
          const Ce = e.current.isRowSelected(be.id);
          if (!y) {
            e.current.selectRow(be.id, !Ce, !0);
            return;
          }
          const Re = e.current.getRowIndexRelativeToVisibleRows(be.id), ue = e.current.getRowIndexRelativeToVisibleRows(de.id);
          let we, _e;
          Re > ue ? Ce ? (we = ue, _e = Re - 1) : (we = ue, _e = Re) : Ce ? (we = Re + 1, _e = ue) : (we = Re, _e = ue);
          const et = mf(e).rows.slice(we, _e + 1).map((Ne) => Ne.id);
          e.current.selectRows(et, !Ce);
          return;
        }
      }
      if (pe.key === " " && pe.shiftKey) {
        pe.preventDefault(), I(de.id, pe);
        return;
      }
      String.fromCharCode(pe.keyCode) === "A" && (pe.ctrlKey || pe.metaKey) && (pe.preventDefault(), _(e.current.getAllRowIds(), !0));
    }
  }, [e, I, _, y]), W = Nn(() => {
    if (!t.rowSelection) {
      e.current.setRowSelectionModel([]);
      return;
    }
    if (u === void 0)
      return;
    if (!s || !w || u.length === 0) {
      e.current.setRowSelectionModel(u);
      return;
    }
    const de = e.current.getPropagatedRowSelectionModel(u);
    if (de.length !== u.length || !de.every((pe) => u.includes(pe))) {
      e.current.setRowSelectionModel(de);
      return;
    }
    e.current.setRowSelectionModel(u);
  });
  Mt(e, "sortedRowsSet", i(() => H(!0))), Mt(e, "filteredRowsSet", i(() => H())), Mt(e, "rowClick", i(U)), Mt(e, "rowSelectionCheckboxChange", i(Y)), Mt(e, "headerSelectionCheckboxChange", te), Mt(e, "cellMouseDown", i(G)), Mt(e, "cellKeyDown", i(B)), S.useEffect(() => {
    W();
  }, [e, u, t.rowSelection, W]);
  const q = u != null;
  S.useEffect(() => {
    if (q || !t.rowSelection)
      return;
    const de = us(e.current.state);
    if (k) {
      const pe = de.filter((be) => k(be));
      pe.length < de.length && e.current.setRowSelectionModel(pe);
    }
  }, [e, k, q, t.rowSelection]), S.useEffect(() => {
    if (!t.rowSelection || q)
      return;
    const de = us(e.current.state);
    !y && de.length > 1 && e.current.setRowSelectionModel([]);
  }, [e, y, p, q, t.rowSelection]), S.useEffect(() => {
    i(H);
  }, [H, i]), S.useEffect(() => {
    Q.current && (Q.current = !1);
  }, []);
}, Ale = (e) => {
  const {
    classes: t
  } = e;
  return S.useMemo(() => yt({
    cellCheckbox: ["cellCheckbox"],
    columnHeaderCheckbox: ["columnHeaderCheckbox"]
  }, Gn, t), [t]);
}, $le = (e, t) => {
  const n = {
    classes: t.classes
  }, i = Ale(n), s = S.useCallback((u) => {
    const d = J({}, cv, {
      cellClassName: i.cellCheckbox,
      headerClassName: i.columnHeaderCheckbox,
      headerName: e.current.getLocaleText("checkboxSelectionHeaderName")
    }), p = t.checkboxSelection, m = u.lookup[qs] != null;
    return p && !m ? (u.lookup[qs] = d, u.orderedFields = [qs, ...u.orderedFields]) : !p && m ? (delete u.lookup[qs], u.orderedFields = u.orderedFields.filter((v) => v !== qs)) : p && m && (u.lookup[qs] = J({}, d, u.lookup[qs]), t.columns.some((v) => v.field === qs) || (u.orderedFields = [qs, ...u.orderedFields.filter((v) => v !== qs)])), u;
  }, [e, i, t.columns, t.checkboxSelection]);
  no(e, "hydrateColumns", s);
}, jle = (e, t) => {
  var i, s;
  const n = t.sortModel ?? ((s = (i = t.initialState) == null ? void 0 : i.sorting) == null ? void 0 : s.sortModel) ?? [];
  return J({}, e, {
    sorting: {
      sortModel: Y2(n, t.disableMultipleColumnsSorting),
      sortedRows: []
    }
  });
}, zle = (e, t) => {
  var D, z;
  const n = ui(e, "useGridSorting");
  e.current.registerControlState({
    stateId: "sortModel",
    propModel: t.sortModel,
    propOnChange: t.onSortModelChange,
    stateSelector: Al,
    changeEvent: "sortModelChange"
  });
  const i = S.useCallback((K, Q) => {
    const H = Al(e), I = H.findIndex((G) => G.field === K);
    let U = [...H];
    return I > -1 ? (Q == null ? void 0 : Q.sort) == null ? U.splice(I, 1) : U.splice(I, 1, Q) : U = [...H, Q], U;
  }, [e]), s = S.useCallback((K, Q) => {
    const I = Al(e).find((U) => U.field === K.field);
    if (I) {
      const U = Q === void 0 ? K_(K.sortingOrder ?? t.sortingOrder, I.sort) : Q;
      return U === void 0 ? void 0 : J({}, I, {
        sort: U
      });
    }
    return {
      field: K.field,
      sort: Q === void 0 ? K_(K.sortingOrder ?? t.sortingOrder) : Q
    };
  }, [e, t.sortingOrder]), u = S.useCallback((K, Q) => Q == null || Q.sortable === !1 || t.disableColumnSorting ? K : (Q.sortingOrder || t.sortingOrder).some((I) => !!I) ? [...K, "columnMenuSortItem"] : K, [t.sortingOrder, t.disableColumnSorting]), d = S.useCallback(() => {
    e.current.setState((K) => {
      if (t.sortingMode === "server")
        return n.debug("Skipping sorting rows as sortingMode = server"), J({}, K, {
          sorting: J({}, K.sorting, {
            sortedRows: nM(Go(e), $i, !1)
          })
        });
      const Q = Al(K, e.current.instanceId), H = vte(Q, e), I = e.current.applyStrategyProcessor("sorting", {
        sortRowList: H
      });
      return J({}, K, {
        sorting: J({}, K.sorting, {
          sortedRows: I
        })
      });
    }), e.current.publishEvent("sortedRowsSet"), e.current.forceUpdate();
  }, [e, n, t.sortingMode]), p = S.useCallback((K) => {
    Al(e) !== K && (n.debug("Setting sort model"), e.current.setState(q_(K, t.disableMultipleColumnsSorting)), e.current.forceUpdate(), e.current.applySorting());
  }, [e, n, t.disableMultipleColumnsSorting]), m = S.useCallback((K, Q, H) => {
    const I = e.current.getColumn(K), U = s(I, Q);
    let G;
    !H || t.disableMultipleColumnsSorting ? G = (U == null ? void 0 : U.sort) == null ? [] : [U] : G = i(I.field, U), e.current.setSortModel(G);
  }, [e, i, s, t.disableMultipleColumnsSorting]), v = S.useCallback(() => Al(e), [e]), y = S.useCallback(() => rM(e).map((Q) => Q.model), [e]), C = S.useCallback(() => lv(e), [e]), w = S.useCallback((K) => e.current.getSortedRowIds()[K], [e]);
  Mn(e, {
    getSortModel: v,
    getSortedRows: y,
    getSortedRowIds: C,
    getRowIdFromRowIndex: w,
    setSortModel: p,
    sortColumn: m,
    applySorting: d
  }, "public");
  const O = S.useCallback((K, Q) => {
    var U, G;
    const H = Al(e);
    return (
      // Always export if the `exportOnlyDirtyModels` property is not activated
      !Q.exportOnlyDirtyModels || // Always export if the model is controlled
      t.sortModel != null || // Always export if the model has been initialized
      ((G = (U = t.initialState) == null ? void 0 : U.sorting) == null ? void 0 : G.sortModel) != null || // Export if the model is not empty
      H.length > 0 ? J({}, K, {
        sorting: {
          sortModel: H
        }
      }) : K
    );
  }, [e, t.sortModel, (z = (D = t.initialState) == null ? void 0 : D.sorting) == null ? void 0 : z.sortModel]), E = S.useCallback((K, Q) => {
    var I;
    const H = (I = Q.stateToRestore.sorting) == null ? void 0 : I.sortModel;
    return H == null ? K : (e.current.setState(q_(H, t.disableMultipleColumnsSorting)), J({}, K, {
      callbacks: [...K.callbacks, e.current.applySorting]
    }));
  }, [e, t.disableMultipleColumnsSorting]), k = S.useCallback((K) => {
    const Q = Go(e), H = Q[$i], I = K.sortRowList ? K.sortRowList(H.children.map((U) => Q[U])) : [...H.children];
    return H.footerId != null && I.push(H.footerId), I;
  }, [e]);
  no(e, "exportState", O), no(e, "restoreState", E), eE(e, ph, "sorting", k);
  const L = S.useCallback(({
    field: K,
    colDef: Q
  }, H) => {
    if (!Q.sortable || t.disableColumnSorting)
      return;
    const I = H.shiftKey || H.metaKey || H.ctrlKey;
    m(K, void 0, I);
  }, [m, t.disableColumnSorting]), F = S.useCallback(({
    field: K,
    colDef: Q
  }, H) => {
    !Q.sortable || t.disableColumnSorting || H.key === "Enter" && !H.ctrlKey && !H.metaKey && m(K, void 0, H.shiftKey);
  }, [m, t.disableColumnSorting]), _ = S.useCallback(() => {
    const K = Al(e), Q = Zc(e);
    if (K.length > 0) {
      const H = K.filter((I) => Q[I.field]);
      H.length < K.length && e.current.setSortModel(H);
    }
  }, [e]), P = S.useCallback((K) => {
    K === "sorting" && e.current.applySorting();
  }, [e]);
  no(e, "columnMenu", u), Mt(e, "columnHeaderClick", L), Mt(e, "columnHeaderKeyDown", F), Mt(e, "rowsSet", e.current.applySorting), Mt(e, "columnsChange", _), Mt(e, "activeStrategyProcessorChange", P), HC(() => {
    e.current.applySorting();
  }), Fr(() => {
    t.sortModel !== void 0 && e.current.setSortModel(t.sortModel);
  }, [e, t.sortModel]);
};
function AA(e) {
  const {
    containerSize: t,
    scrollPosition: n,
    elementSize: i,
    elementOffset: s
  } = e, u = s + i;
  if (i > t)
    return s;
  if (u - t > n)
    return u - t;
  if (s < n)
    return s;
}
const Hle = (e, t) => {
  const n = ji(), i = ui(e, "useGridScroll"), s = e.current.columnHeadersContainerRef, u = e.current.virtualScrollerRef, d = tt(e, Of), p = S.useCallback((C) => {
    var L;
    const w = li(e.current.state), R = zC(e), O = t.unstable_listView ? [Jg(e.current.state)] : ho(e);
    if (!(C.rowIndex == null) && R === 0 || O.length === 0)
      return !1;
    i.debug(`Scrolling to cell at row ${C.rowIndex}, col: ${C.colIndex} `);
    let k = {};
    if (C.colIndex !== void 0) {
      const F = Rf(e);
      let _;
      if (typeof C.rowIndex < "u") {
        const P = (L = d[C.rowIndex]) == null ? void 0 : L.id, D = e.current.unstable_getCellColSpanInfo(P, C.colIndex);
        D && !D.spannedByColSpan && (_ = D.cellProps.width);
      }
      typeof _ > "u" && (_ = O[C.colIndex].computedWidth), k.left = AA({
        containerSize: w.viewportOuterSize.width,
        scrollPosition: Math.abs(u.current.scrollLeft),
        elementSize: _,
        elementOffset: F[C.colIndex]
      });
    }
    if (C.rowIndex !== void 0) {
      const F = dv(e.current.state), _ = Pne(e), P = Dz(e), D = t.pagination ? C.rowIndex - _ * P : C.rowIndex, z = F.positions[D + 1] ? F.positions[D + 1] - F.positions[D] : F.currentPageTotalHeight - F.positions[D];
      k.top = AA({
        containerSize: w.viewportInnerSize.height,
        scrollPosition: u.current.scrollTop,
        elementSize: z,
        elementOffset: F.positions[D]
      });
    }
    return k = e.current.unstable_applyPipeProcessors("scrollToIndexes", k, C), typeof k.left !== void 0 || typeof k.top !== void 0 ? (e.current.scroll(k), !0) : !1;
  }, [i, e, u, t.pagination, d, t.unstable_listView]), m = S.useCallback((C) => {
    if (u.current && C.left !== void 0 && s.current) {
      const w = n ? -1 : 1;
      s.current.scrollLeft = C.left, u.current.scrollLeft = w * C.left, i.debug(`Scrolling left: ${C.left}`);
    }
    u.current && C.top !== void 0 && (u.current.scrollTop = C.top, i.debug(`Scrolling top: ${C.top}`)), i.debug("Scrolling, updating container, and viewport");
  }, [u, n, s, i]), v = S.useCallback(() => u != null && u.current ? {
    top: u.current.scrollTop,
    left: u.current.scrollLeft
  } : {
    top: 0,
    left: 0
  }, [u]);
  Mn(e, {
    scroll: m,
    scrollToIndexes: p,
    getScrollPosition: v
  }, "public");
};
function Vle(e, t) {
  br(e, "columnHeaderClick", t.onColumnHeaderClick), br(e, "columnHeaderContextMenu", t.onColumnHeaderContextMenu), br(e, "columnHeaderDoubleClick", t.onColumnHeaderDoubleClick), br(e, "columnHeaderOver", t.onColumnHeaderOver), br(e, "columnHeaderOut", t.onColumnHeaderOut), br(e, "columnHeaderEnter", t.onColumnHeaderEnter), br(e, "columnHeaderLeave", t.onColumnHeaderLeave), br(e, "cellClick", t.onCellClick), br(e, "cellDoubleClick", t.onCellDoubleClick), br(e, "cellKeyDown", t.onCellKeyDown), br(e, "preferencePanelClose", t.onPreferencePanelClose), br(e, "preferencePanelOpen", t.onPreferencePanelOpen), br(e, "menuOpen", t.onMenuOpen), br(e, "menuClose", t.onMenuClose), br(e, "rowDoubleClick", t.onRowDoubleClick), br(e, "rowClick", t.onRowClick), br(e, "stateChange", t.onStateChange);
}
function Ble(e, t = 166) {
  let n, i;
  const s = () => {
    n = void 0, e(...i);
  };
  function u(...d) {
    i = d, n === void 0 && (n = setTimeout(s, t));
  }
  return u.clear = () => {
    clearTimeout(n), n = void 0;
  }, u;
}
const Kk = {
  autoHeight: !1,
  autoPageSize: !1,
  autosizeOnMount: !1,
  checkboxSelection: !1,
  checkboxSelectionVisibleOnly: !1,
  clipboardCopyCellDelimiter: "	",
  columnBufferPx: 150,
  columnHeaderHeight: 56,
  disableAutosize: !1,
  disableColumnFilter: !1,
  disableColumnMenu: !1,
  disableColumnReorder: !1,
  disableColumnResize: !1,
  disableColumnSelector: !1,
  disableColumnSorting: !1,
  disableDensitySelector: !1,
  disableEval: !1,
  disableMultipleColumnsFiltering: !1,
  disableMultipleColumnsSorting: !1,
  disableMultipleRowSelection: !1,
  disableRowSelectionOnClick: !1,
  disableVirtualization: !1,
  editMode: qu.Cell,
  filterDebounceMs: 150,
  filterMode: "client",
  hideFooter: !1,
  hideFooterPagination: !1,
  hideFooterRowCount: !1,
  hideFooterSelectedRowCount: !1,
  ignoreDiacritics: !1,
  ignoreValueFormatterDuringExport: !1,
  // TODO v8: Update to 'select'
  indeterminateCheckboxAction: "deselect",
  keepColumnPositionIfDraggedOutside: !1,
  keepNonExistentRowsSelected: !1,
  loading: !1,
  logger: console,
  logLevel: process.env.NODE_ENV === "production" ? "error" : "warn",
  pageSizeOptions: [25, 50, 100],
  pagination: !1,
  paginationMode: "client",
  resetPageOnSortFilter: !1,
  resizeThrottleMs: 60,
  rowBufferPx: 150,
  rowHeight: 52,
  rowPositionsDebounceMs: 166,
  rows: [],
  rowSelection: !0,
  rowSpacingType: "margin",
  showCellVerticalBorder: !1,
  showColumnVerticalBorder: !1,
  sortingMode: "client",
  sortingOrder: ["asc", "desc", null],
  throttleRowsMs: 0,
  unstable_rowSpanning: !1,
  virtualizeColumnsWithAutoRowHeight: !1
}, Sg = {
  width: 0,
  height: 0
}, Ule = {
  isReady: !1,
  root: Sg,
  viewportOuterSize: Sg,
  viewportInnerSize: Sg,
  contentSize: Sg,
  minimumSize: Sg,
  hasScrollX: !1,
  hasScrollY: !1,
  scrollbarSize: 0,
  headerHeight: 0,
  groupHeaderHeight: 0,
  headerFilterHeight: 0,
  rowWidth: 0,
  rowHeight: 0,
  columnsTotalWidth: 0,
  leftPinnedWidth: 0,
  rightPinnedWidth: 0,
  headersTotalHeight: 0,
  topContainerHeight: 0,
  bottomContainerHeight: 0
}, Gle = (e, t, n) => {
  const i = Ule, s = ov(n);
  return J({}, e, {
    dimensions: J({}, i, rV(t, n, s, sv(n)))
  });
}, nV = an(ho, Rf, (e, t) => {
  const n = e.length;
  return n === 0 ? 0 : Tg(t[n - 1] + e[n - 1].computedWidth, 1);
});
function Wle(e, t) {
  const n = ui(e, "useResizeContainer"), i = S.useRef(!1), s = S.useRef(Sg), u = tt(e, sv), d = tt(e, ov), p = tt(e, nV), m = S.useRef(!0), {
    rowHeight: v,
    headerHeight: y,
    groupHeaderHeight: C,
    headerFilterHeight: w,
    headersTotalHeight: R,
    leftPinnedWidth: O,
    rightPinnedWidth: E
  } = rV(t, e, d, u), k = S.useRef(void 0), L = S.useCallback(() => li(e.current.state), [e]), F = S.useCallback((G) => {
    e.current.setState((Y) => J({}, Y, {
      dimensions: G
    })), e.current.rootElementRef.current && $A(e.current.rootElementRef.current, li(e.current.state));
  }, [e]), _ = S.useCallback(() => {
    const G = e.current.mainElementRef.current;
    if (!G)
      return;
    const Y = nl(G).getComputedStyle(G), te = {
      width: parseFloat(Y.width) || 0,
      height: parseFloat(Y.height) || 0
    };
    (!k.current || !zA(k.current, te)) && (e.current.publishEvent("resize", te), k.current = te);
  }, [e]), P = S.useCallback(() => {
    const G = li(e.current.state);
    if (!G.isReady)
      return 0;
    const Y = mf(e);
    if (t.getRowHeight) {
      const B = WC(e), W = B.lastRowIndex - B.firstRowIndex;
      return Math.min(W - 1, Y.rows.length);
    }
    const te = Math.floor(G.viewportInnerSize.height / v);
    return Math.min(te, Y.rows.length);
  }, [e, t.getRowHeight, v]), D = S.useCallback(() => {
    var ge, de;
    if (m.current)
      return;
    const G = qle(e.current.mainElementRef.current, t.scrollbarSize), Y = dv(e.current.state), te = R + Y.pinnedTopRowsTotalHeight, B = Y.pinnedBottomRowsTotalHeight, q = {
      width: p - O - E,
      height: Tg(Y.currentPageTotalHeight, 1)
    };
    let ne, re, X = !1, j = !1;
    if (t.autoHeight)
      j = !1, X = Math.round(p) > Math.round(s.current.width), ne = {
        width: s.current.width,
        height: te + B + q.height
      }, re = {
        width: Math.max(0, ne.width - (j ? G : 0)),
        height: Math.max(0, ne.height - (X ? G : 0))
      };
    else {
      ne = {
        width: s.current.width,
        height: s.current.height
      }, re = {
        width: Math.max(0, ne.width - O - E),
        height: Math.max(0, ne.height - te - B)
      };
      const pe = q, be = re, Ce = pe.width > be.width, Re = pe.height > be.height;
      (Ce || Re) && (j = Re, X = pe.width + (j ? G : 0) > be.width, X && (j = pe.height + G > be.height)), j && (re.width -= G), X && (re.height -= G);
    }
    const ie = Math.max(ne.width, p + (j ? G : 0)), fe = {
      width: p,
      height: te + q.height + B
    }, ce = {
      isReady: !0,
      root: s.current,
      viewportOuterSize: ne,
      viewportInnerSize: re,
      contentSize: q,
      minimumSize: fe,
      hasScrollX: X,
      hasScrollY: j,
      scrollbarSize: G,
      headerHeight: y,
      groupHeaderHeight: C,
      headerFilterHeight: w,
      rowWidth: ie,
      rowHeight: v,
      columnsTotalWidth: p,
      leftPinnedWidth: O,
      rightPinnedWidth: E,
      headersTotalHeight: R,
      topContainerHeight: te,
      bottomContainerHeight: B
    }, me = e.current.state.dimensions;
    pf(me, ce) || (F(ce), zA(ce.viewportInnerSize, me.viewportInnerSize) || e.current.publishEvent("viewportInnerSizeChange", ce.viewportInnerSize), (de = (ge = e.current).updateRenderContext) == null || de.call(ge));
  }, [e, F, t.scrollbarSize, t.autoHeight, v, y, C, w, p, R, O, E]), z = Nn(D), K = S.useMemo(() => t.resizeThrottleMs > 0 ? Ble(() => {
    z(), e.current.publishEvent("debouncedResize", s.current);
  }, t.resizeThrottleMs) : void 0, [e, t.resizeThrottleMs, z]);
  S.useEffect(() => K == null ? void 0 : K.clear, [K]);
  const Q = {
    resize: _,
    getRootDimensions: L
  }, H = {
    updateDimensions: D,
    getViewportPageSize: P
  };
  Fr(D, [D]), Mn(e, Q, "public"), Mn(e, H, "private");
  const I = S.useCallback((G) => {
    $A(G, li(e.current.state));
  }, [e]), U = S.useCallback((G) => {
    if (s.current = G, G.height === 0 && !i.current && !t.autoHeight && !Y0 && (n.error(["The parent DOM element of the Data Grid has an empty height.", "Please make sure that this element has an intrinsic height.", "The grid displays with a height of 0px.", "", "More details: https://mui.com/r/x-data-grid-no-dimensions."].join(`
`)), i.current = !0), G.width === 0 && !i.current && !Y0 && (n.error(["The parent DOM element of the Data Grid has an empty width.", "Please make sure that this element has an intrinsic width.", "The grid displays with a width of 0px.", "", "More details: https://mui.com/r/x-data-grid-no-dimensions."].join(`
`)), i.current = !0), m.current || !K) {
      m.current = !1, D();
      return;
    }
    K();
  }, [D, t.autoHeight, K, n]);
  br(e, "rootMount", I), br(e, "resize", U), br(e, "debouncedResize", t.onResize);
}
function $A(e, t) {
  const n = (i, s) => e.style.setProperty(i, s);
  n("--DataGrid-hasScrollX", `${Number(t.hasScrollX)}`), n("--DataGrid-hasScrollY", `${Number(t.hasScrollY)}`), n("--DataGrid-scrollbarSize", `${t.scrollbarSize}px`), n("--DataGrid-rowWidth", `${t.rowWidth}px`), n("--DataGrid-columnsTotalWidth", `${t.columnsTotalWidth}px`), n("--DataGrid-leftPinnedWidth", `${t.leftPinnedWidth}px`), n("--DataGrid-rightPinnedWidth", `${t.rightPinnedWidth}px`), n("--DataGrid-headerHeight", `${t.headerHeight}px`), n("--DataGrid-headersTotalHeight", `${t.headersTotalHeight}px`), n("--DataGrid-topContainerHeight", `${t.topContainerHeight}px`), n("--DataGrid-bottomContainerHeight", `${t.bottomContainerHeight}px`), n("--height", `${t.rowHeight}px`);
}
function rV(e, t, n, i) {
  const s = pz(e.rowHeight, Kk.rowHeight, qte);
  return {
    rowHeight: Math.floor(s * n),
    headerHeight: Math.floor(e.columnHeaderHeight * n),
    groupHeaderHeight: Math.floor((e.columnGroupHeaderHeight ?? e.columnHeaderHeight) * n),
    headerFilterHeight: Math.floor((e.headerFilterHeight ?? e.columnHeaderHeight) * n),
    columnsTotalWidth: nV(t),
    headersTotalHeight: BE(t, e),
    leftPinnedWidth: i.left.reduce((u, d) => u + d.computedWidth, 0),
    rightPinnedWidth: i.right.reduce((u, d) => u + d.computedWidth, 0)
  };
}
const jA = /* @__PURE__ */ new WeakMap();
function qle(e, t) {
  if (t !== void 0)
    return t;
  if (e === null)
    return 0;
  const n = jA.get(e);
  if (n !== void 0)
    return n;
  const s = ao(e).createElement("div");
  s.style.width = "99px", s.style.height = "99px", s.style.position = "absolute", s.style.overflow = "scroll", s.className = "scrollDiv", e.appendChild(s);
  const u = s.offsetWidth - s.clientWidth;
  return e.removeChild(s), jA.set(e, u), u;
}
function zA(e, t) {
  return e.width === t.width && e.height === t.height;
}
const Kle = typeof globalThis.ResizeObserver < "u" ? globalThis.ResizeObserver : class {
  observe() {
  }
  unobserve() {
  }
  disconnect() {
  }
}, Yle = (e, t, n) => {
  n.current.caches.rowsMeta = {
    heights: /* @__PURE__ */ new Map()
  };
  const i = QP(n.current.state), s = zC(n), u = VC(n.current.state), d = Math.min(u.enabled ? u.paginationModel.pageSize : s, s);
  return J({}, e, {
    rowsMeta: {
      currentPageTotalHeight: d * i,
      positions: Array.from({
        length: d
      }, (p, m) => m * i),
      pinnedTopRowsTotalHeight: 0,
      pinnedBottomRowsTotalHeight: 0
    }
  });
}, Xle = (e, t) => {
  const {
    getRowHeight: n,
    getRowSpacing: i,
    getEstimatedRowHeight: s
  } = t, u = e.current.caches.rowsMeta.heights, d = S.useRef(-1), p = S.useRef(!1), m = S.useRef(!1), v = tt(e, ov), y = fM(e), C = tt(e, iv), w = tt(e, QP), R = (I) => {
    let U = u.get(I);
    return U === void 0 && (U = {
      content: w,
      spacingTop: 0,
      spacingBottom: 0,
      detail: 0,
      autoHeight: !1,
      needsFirstMeasurement: !0
    }, u.set(I, U)), U;
  }, O = S.useCallback((I) => {
    const U = li(e.current.state).rowHeight, G = e.current.getRowHeightEntry(I.id);
    if (!n)
      G.content = U, G.needsFirstMeasurement = !1;
    else {
      const Y = n(J({}, I, {
        densityFactor: v
      }));
      if (Y === "auto") {
        if (G.needsFirstMeasurement) {
          const te = s ? s(J({}, I, {
            densityFactor: v
          })) : U;
          G.content = te ?? U;
        }
        p.current = !0, G.autoHeight = !0;
      } else
        G.content = pz(Y, U, Kte), G.needsFirstMeasurement = !1, G.autoHeight = !1;
    }
    if (i) {
      const Y = e.current.getRowIndexRelativeToVisibleRows(I.id), te = i(J({}, I, {
        isFirstVisible: Y === 0,
        isLastVisible: Y === y.rows.length - 1,
        indexRelativeToCurrentPage: Y
      }));
      G.spacingTop = te.top ?? 0, G.spacingBottom = te.bottom ?? 0;
    } else
      G.spacingTop = 0, G.spacingBottom = 0;
    return e.current.unstable_applyPipeProcessors("rowHeight", G, I), G;
  }, [e, y.rows, n, s, w, i, v]), E = S.useCallback(() => {
    p.current = !1;
    const I = C.top.reduce((W, q) => {
      const ne = O(q);
      return W + ne.content + ne.spacingTop + ne.spacingBottom + ne.detail;
    }, 0), U = C.bottom.reduce((W, q) => {
      const ne = O(q);
      return W + ne.content + ne.spacingTop + ne.spacingBottom + ne.detail;
    }, 0), G = [], Y = y.rows.reduce((W, q) => {
      G.push(W);
      const ne = O(q), re = ne.content + ne.spacingTop + ne.spacingBottom + ne.detail;
      return W + re;
    }, 0);
    p.current || (d.current = 1 / 0);
    const te = I !== e.current.state.rowsMeta.pinnedTopRowsTotalHeight || U !== e.current.state.rowsMeta.pinnedBottomRowsTotalHeight || Y !== e.current.state.rowsMeta.currentPageTotalHeight, B = {
      currentPageTotalHeight: Y,
      positions: G,
      pinnedTopRowsTotalHeight: I,
      pinnedBottomRowsTotalHeight: U
    };
    e.current.setState((W) => J({}, W, {
      rowsMeta: B
    })), te && e.current.updateDimensions(), m.current = !0;
  }, [e, C, y.rows, O]), k = (I) => {
    var U;
    return ((U = u.get(I)) == null ? void 0 : U.content) ?? w;
  }, L = (I, U) => {
    const G = e.current.getRowHeightEntry(I), Y = G.content !== U;
    G.needsFirstMeasurement = !1, G.content = U, m.current && (m.current = !Y);
  }, F = (I) => {
    var U;
    return ((U = u.get(I)) == null ? void 0 : U.autoHeight) ?? !1;
  }, _ = () => d.current, P = (I) => {
    p.current && I > d.current && (d.current = I);
  }, D = () => {
    u.clear(), E();
  }, z = al(() => new Kle((I) => {
    var U;
    for (let G = 0; G < I.length; G += 1) {
      const Y = I[G], te = Y.borderBoxSize && Y.borderBoxSize.length > 0 ? Y.borderBoxSize[0].blockSize : Y.contentRect.height, B = Y.target.__mui_id;
      if (((U = Jz(e)) == null ? void 0 : U.id) === B && te === 0)
        return;
      e.current.unstable_storeRowHeightMeasurement(B, te);
    }
    m.current || requestAnimationFrame(() => {
      e.current.requestPipeProcessorsApplication("rowHeight");
    });
  })).current, K = (I, U) => (I.__mui_id = U, z.observe(I), () => z.unobserve(I));
  CM(e, "rowHeight", E), Fr(() => {
    E();
  }, [E]);
  const Q = {
    unstable_getRowHeight: k,
    unstable_setLastMeasuredRowIndex: P,
    unstable_storeRowHeightMeasurement: L,
    resetRowHeights: D
  }, H = {
    hydrateRowsMeta: E,
    observeRowHeight: K,
    rowHasAutoHeight: F,
    getRowHeightEntry: R,
    getLastMeasuredRowIndex: _
  };
  Mn(e, Q, "public"), Mn(e, H, "private");
}, Qle = (e) => {
  const t = S.useCallback((s = {}) => e.current.unstable_applyPipeProcessors("exportState", {}, s), [e]), n = S.useCallback((s) => {
    e.current.unstable_applyPipeProcessors("restoreState", {
      callbacks: []
    }, {
      stateToRestore: s
    }).callbacks.forEach((d) => {
      d();
    }), e.current.forceUpdate();
  }, [e]);
  Mn(e, {
    exportState: t,
    restoreState: n
  }, "public");
}, Jle = (e) => {
  const t = S.useRef({}), n = (p, m) => {
    var v;
    return (v = t.current[p]) == null ? void 0 : v[m];
  }, i = () => {
    t.current = {};
  }, s = S.useCallback(({
    rowId: p,
    minFirstColumn: m,
    maxLastColumn: v,
    columns: y
  }) => {
    for (let C = m; C < v; C += 1) {
      const w = Zle({
        apiRef: e,
        lookup: t.current,
        columnIndex: C,
        rowId: p,
        minFirstColumnIndex: m,
        maxLastColumnIndex: v,
        columns: y
      });
      w.colSpan > 1 && (C += w.colSpan - 1);
    }
  }, [e]), u = {
    unstable_getCellColSpanInfo: n
  }, d = {
    resetColSpan: i,
    calculateColSpan: s
  };
  Mn(e, u, "public"), Mn(e, d, "private"), Mt(e, "columnOrderChange", i);
};
function Zle(e) {
  const {
    apiRef: t,
    lookup: n,
    columnIndex: i,
    rowId: s,
    minFirstColumnIndex: u,
    maxLastColumnIndex: d,
    columns: p
  } = e, m = p.length, v = p[i], y = t.current.getRow(s), C = t.current.getRowValue(y, v), w = typeof v.colSpan == "function" ? v.colSpan(C, y, v, t) : v.colSpan;
  if (!w || w === 1)
    return qO(n, s, i, {
      spannedByColSpan: !1,
      cellProps: {
        colSpan: 1,
        width: v.computedWidth
      }
    }), {
      colSpan: 1
    };
  let R = v.computedWidth;
  for (let O = 1; O < w; O += 1) {
    const E = i + O;
    if (E >= u && E < d) {
      const k = p[E];
      R += k.computedWidth, qO(n, s, i + O, {
        spannedByColSpan: !0,
        rightVisibleCellIndex: Math.min(i + w, m - 1),
        leftVisibleCellIndex: i
      });
    }
    qO(n, s, i, {
      spannedByColSpan: !1,
      cellProps: {
        colSpan: w,
        width: R
      }
    });
  }
  return {
    colSpan: w
  };
}
function qO(e, t, n, i) {
  e[t] || (e[t] = {}), e[t][n] = i;
}
const oV = (e, t, n) => {
  if (ez(e)) {
    if (n[e.field] !== void 0)
      throw new Error(["MUI X: columnGroupingModel contains duplicated field", `column field ${e.field} occurs two times in the grouping model:`, `- ${n[e.field].join(" > ")}`, `- ${t.join(" > ")}`].join(`
`));
    n[e.field] = t;
    return;
  }
  const {
    groupId: i,
    children: s
  } = e;
  s.forEach((u) => {
    oV(u, [...t, i], n);
  });
}, Yk = (e) => {
  if (!e)
    return {};
  const t = {};
  return e.forEach((n) => {
    oV(n, [], t);
  }), t;
}, Xk = (e, t, n) => {
  const i = (m) => t[m] ?? [], s = [], u = Math.max(...e.map((m) => i(m).length)), d = (m, v, y) => pf(i(m).slice(0, y + 1), i(v).slice(0, y + 1)), p = (m, v) => !!(n != null && n.left && n.left.includes(m) && !n.left.includes(v) || n != null && n.right && !n.right.includes(m) && n.right.includes(v));
  for (let m = 0; m < u; m += 1) {
    const v = e.reduce((y, C) => {
      const w = i(C)[m] ?? null;
      if (y.length === 0)
        return [{
          columnFields: [C],
          groupId: w
        }];
      const R = y[y.length - 1], O = R.columnFields[R.columnFields.length - 1];
      return R.groupId !== w || !d(O, C, m) || // Fix for https://github.com/mui/mui-x/issues/7041
      p(O, C) ? [...y, {
        columnFields: [C],
        groupId: w
      }] : [...y.slice(0, y.length - 1), {
        columnFields: [...R.columnFields, C],
        groupId: w
      }];
    }, []);
    s.push(v);
  }
  return s;
}, eue = ["groupId", "children"], SM = (e) => {
  let t = {};
  return e.forEach((n) => {
    if (ez(n))
      return;
    const {
      groupId: i,
      children: s
    } = n, u = Xt(n, eue);
    if (!i)
      throw new Error("MUI X: An element of the columnGroupingModel does not have either `field` or `groupId`.");
    process.env.NODE_ENV !== "production" && (s || console.warn(`MUI X: group groupId=${i} has no children.`));
    const d = J({}, u, {
      groupId: i
    }), p = SM(s);
    if (p[i] !== void 0 || t[i] !== void 0)
      throw new Error(`MUI X: The groupId ${i} is used multiple times in the columnGroupingModel.`);
    t = J({}, t, p, {
      [i]: d
    });
  }), J({}, t);
}, tue = (e, t, n) => {
  if (!t.columnGroupingModel)
    return e;
  const i = Wc(n), s = av(n), u = SM(t.columnGroupingModel ?? []), d = Yk(t.columnGroupingModel ?? []), p = Xk(i, d, n.current.state.pinnedColumns ?? {}), m = s.length === 0 ? 0 : Math.max(...s.map((v) => {
    var y;
    return ((y = d[v]) == null ? void 0 : y.length) ?? 0;
  }));
  return J({}, e, {
    columnGrouping: {
      lookup: u,
      unwrappedGroupingModel: d,
      headerStructure: p,
      maxDepth: m
    }
  });
}, nue = (e, t) => {
  const n = S.useCallback((p) => Vz(e)[p] ?? [], [e]), i = S.useCallback(() => Bz(e), [e]);
  Mn(e, {
    getColumnGroupPath: n,
    getAllGroupDetails: i
  }, "public");
  const u = S.useCallback(() => {
    const p = Yk(t.columnGroupingModel ?? []);
    e.current.setState((m) => {
      var w;
      const v = ((w = m.columns) == null ? void 0 : w.orderedFields) ?? [], y = m.pinnedColumns ?? {}, C = Xk(v, p, y);
      return J({}, m, {
        columnGrouping: J({}, m.columnGrouping, {
          headerStructure: C
        })
      });
    });
  }, [e, t.columnGroupingModel]), d = S.useCallback((p) => {
    var E, k;
    const m = ((k = (E = e.current).getPinnedColumns) == null ? void 0 : k.call(E)) ?? {}, v = Wc(e), y = av(e), C = SM(p ?? []), w = Yk(p ?? []), R = Xk(v, w, m), O = y.length === 0 ? 0 : Math.max(...y.map((L) => {
      var F;
      return ((F = w[L]) == null ? void 0 : F.length) ?? 0;
    }));
    e.current.setState((L) => J({}, L, {
      columnGrouping: {
        lookup: C,
        unwrappedGroupingModel: w,
        headerStructure: R,
        maxDepth: O
      }
    }));
  }, [e]);
  Mt(e, "columnIndexChange", u), Mt(e, "columnsChange", () => {
    d(t.columnGroupingModel);
  }), Mt(e, "columnVisibilityModelChange", () => {
    d(t.columnGroupingModel);
  }), S.useEffect(() => {
    d(t.columnGroupingModel);
  }, [d, t.columnGroupingModel]);
};
function rue() {
  let e, t;
  const n = new Promise((i, s) => {
    e = i, t = s;
  });
  return n.resolve = e, n.reject = t, n;
}
function HA(e, t) {
  if (t !== void 0 && e.changedTouches) {
    for (let n = 0; n < e.changedTouches.length; n += 1) {
      const i = e.changedTouches[n];
      if (i.identifier === t)
        return {
          x: i.clientX,
          y: i.clientY
        };
    }
    return !1;
  }
  return {
    x: e.clientX,
    y: e.clientY
  };
}
function VA(e, t, n, i) {
  let s = e;
  return i === "Right" ? s += t - n.left : s += n.right - t, s;
}
function oue(e, t, n) {
  return n === "Left" ? e - t.left : t.right - e;
}
function iue(e) {
  return e === "Right" ? "Left" : "Right";
}
function aue(e, t) {
  const n = e.classList.contains(ae["columnSeparator--sideRight"]) ? "Right" : "Left";
  return t ? iue(n) : n;
}
function BA(e) {
  e.preventDefault(), e.stopImmediatePropagation();
}
function sue(e) {
  const t = S.useRef(void 0), n = () => Xz(e), i = tt(e, n);
  return S.useEffect(() => {
    t.current && i === !1 && (t.current.resolve(), t.current = void 0);
  }), () => {
    if (!t.current) {
      if (n() === !1)
        return Promise.resolve();
      t.current = rue();
    }
    return t.current;
  };
}
function lue(e, t) {
  if (e.length < 4)
    return e;
  const n = e.slice();
  n.sort((p, m) => p - m);
  const i = n[Math.floor(n.length * 0.25)], s = n[Math.floor(n.length * 0.75) - 1], u = s - i, d = u < 5 ? 5 : u * t;
  return n.filter((p) => p > i - d && p < s + d);
}
function uue(e, t, n) {
  const i = {}, s = e.current.rootElementRef.current;
  return s.classList.add(ae.autosizing), n.forEach((u) => {
    const p = kie(e.current, u.field).map((O) => O.getBoundingClientRect().width ?? 0), m = t.includeOutliers ? p : lue(p, t.outliersFactor);
    if (t.includeHeaders) {
      const O = Oie(e.current, u.field);
      if (O) {
        const E = O.querySelector(`.${ae.columnHeaderTitle}`), k = O.querySelector(`.${ae.columnHeaderTitleContainerContent}`), L = O.querySelector(`.${ae.iconButtonContainer}`), F = O.querySelector(`.${ae.menuIcon}`), _ = E ?? k, P = window.getComputedStyle(O, null), D = parseInt(P.paddingLeft, 10) + parseInt(P.paddingRight, 10), K = _.scrollWidth + 1 + D + ((L == null ? void 0 : L.clientWidth) ?? 0) + ((F == null ? void 0 : F.clientWidth) ?? 0);
        m.push(K);
      }
    }
    const v = u.minWidth !== -1 / 0 && u.minWidth !== void 0, y = u.maxWidth !== 1 / 0 && u.maxWidth !== void 0, C = v ? u.minWidth : 0, w = y ? u.maxWidth : 1 / 0, R = m.length === 0 ? 0 : Math.max(...m);
    i[u.field] = vs(R, C, w);
  }), s.classList.remove(ae.autosizing), i;
}
const cue = (e) => J({}, e, {
  columnResize: {
    resizingColumnField: ""
  }
});
function due() {
  return {
    colDef: void 0,
    initialColWidth: 0,
    initialTotalWidth: 0,
    previousMouseClickEvent: void 0,
    columnHeaderElement: void 0,
    headerFilterElement: void 0,
    groupHeaderElements: [],
    cellElements: [],
    leftPinnedCellsAfter: [],
    rightPinnedCellsBefore: [],
    fillerLeft: void 0,
    fillerRight: void 0,
    leftPinnedHeadersAfter: [],
    rightPinnedHeadersBefore: []
  };
}
const fue = (e, t) => {
  const n = ji(), i = ui(e, "useGridColumnResize"), s = al(due).current, u = S.useRef(null), d = S.useRef(null), p = ps(), m = S.useRef(void 0), v = (H) => {
    var B, W;
    i.debug(`Updating width to ${H} for col ${s.colDef.field}`);
    const I = s.columnHeaderElement.offsetWidth, U = H - I, G = H - s.initialColWidth;
    if (G > 0) {
      const q = s.initialTotalWidth + G;
      (W = (B = e.current.rootElementRef) == null ? void 0 : B.current) == null || W.style.setProperty("--DataGrid-rowWidth", `${q}px`);
    }
    s.colDef.computedWidth = H, s.colDef.width = H, s.colDef.flex = 0, s.columnHeaderElement.style.width = `${H}px`;
    const Y = s.headerFilterElement;
    Y && (Y.style.width = `${H}px`), s.groupHeaderElements.forEach((q) => {
      const ne = q;
      let re;
      ne.getAttribute("aria-colspan") === "1" ? re = `${H}px` : re = `${ne.offsetWidth + U}px`, ne.style.width = re;
    }), s.cellElements.forEach((q) => {
      const ne = q;
      let re;
      ne.getAttribute("aria-colspan") === "1" ? re = `${H}px` : re = `${ne.offsetWidth + U}px`, ne.style.setProperty("--width", re);
    });
    const te = e.current.unstable_applyPipeProcessors("isColumnPinned", !1, s.colDef.field);
    te === tf.LEFT && (vg(s.fillerLeft, "width", U), s.leftPinnedCellsAfter.forEach((q) => {
      vg(q, "left", U);
    }), s.leftPinnedHeadersAfter.forEach((q) => {
      vg(q, "left", U);
    })), te === tf.RIGHT && (vg(s.fillerRight, "width", U), s.rightPinnedCellsBefore.forEach((q) => {
      vg(q, "right", U);
    }), s.rightPinnedHeadersBefore.forEach((q) => {
      vg(q, "right", U);
    }));
  }, y = (H) => {
    if (L(), s.previousMouseClickEvent) {
      const I = s.previousMouseClickEvent, U = I.timeStamp, G = I.clientX, Y = I.clientY;
      if (H.timeStamp - U < 300 && H.clientX === G && H.clientY === Y) {
        s.previousMouseClickEvent = void 0, e.current.publishEvent("columnResizeStop", null, H);
        return;
      }
    }
    if (s.colDef) {
      e.current.setColumnWidth(s.colDef.field, s.colDef.width), i.debug(`Updating col ${s.colDef.field} with new width: ${s.colDef.width}`);
      const I = Vu(e.current.state);
      s.groupHeaderElements.forEach((U) => {
        const G = Cie(U), Y = U, B = `${G.reduce((W, q) => I.columnVisibilityModel[q] !== !1 ? W + I.lookup[q].computedWidth : W, 0)}px`;
        Y.style.width = B;
      });
    }
    p.start(0, () => {
      e.current.publishEvent("columnResizeStop", null, H);
    });
  }, C = (H, I, U) => {
    var B;
    const G = e.current.rootElementRef.current;
    s.initialColWidth = H.computedWidth, s.initialTotalWidth = e.current.getRootDimensions().rowWidth, s.colDef = H, s.columnHeaderElement = bie(e.current.columnHeadersContainerRef.current, H.field);
    const Y = G.querySelector(`.${ae.headerFilterRow} [data-field="${ed(H.field)}"]`);
    Y && (s.headerFilterElement = Y), s.groupHeaderElements = Sie((B = e.current.columnHeadersContainerRef) == null ? void 0 : B.current, H.field), s.cellElements = wie(s.columnHeaderElement, e.current), s.fillerLeft = yA(e.current, n ? "filler--pinnedRight" : "filler--pinnedLeft"), s.fillerRight = yA(e.current, n ? "filler--pinnedLeft" : "filler--pinnedRight");
    const te = e.current.unstable_applyPipeProcessors("isColumnPinned", !1, s.colDef.field);
    s.leftPinnedCellsAfter = te !== tf.LEFT ? [] : xie(e.current, s.columnHeaderElement, n), s.rightPinnedCellsBefore = te !== tf.RIGHT ? [] : Eie(e.current, s.columnHeaderElement, n), s.leftPinnedHeadersAfter = te !== tf.LEFT ? [] : Tie(e.current, s.columnHeaderElement, n), s.rightPinnedHeadersBefore = te !== tf.RIGHT ? [] : Rie(e.current, s.columnHeaderElement, n), d.current = aue(I, n), u.current = oue(U, s.columnHeaderElement.getBoundingClientRect(), d.current);
  }, w = Nn(y), R = Nn((H) => {
    if (H.buttons === 0) {
      w(H);
      return;
    }
    let I = VA(u.current, H.clientX, s.columnHeaderElement.getBoundingClientRect(), d.current);
    I = vs(I, s.colDef.minWidth, s.colDef.maxWidth), v(I);
    const U = {
      element: s.columnHeaderElement,
      colDef: s.colDef,
      width: I
    };
    e.current.publishEvent("columnResize", U, H);
  }), O = Nn((H) => {
    HA(H, m.current) && y(H);
  }), E = Nn((H) => {
    const I = HA(H, m.current);
    if (!I)
      return;
    if (H.type === "mousemove" && H.buttons === 0) {
      O(H);
      return;
    }
    let U = VA(u.current, I.x, s.columnHeaderElement.getBoundingClientRect(), d.current);
    U = vs(U, s.colDef.minWidth, s.colDef.maxWidth), v(U);
    const G = {
      element: s.columnHeaderElement,
      colDef: s.colDef,
      width: U
    };
    e.current.publishEvent("columnResize", G, H);
  }), k = Nn((H) => {
    const I = X0(H.target, ae["columnSeparator--resizable"]);
    if (!I)
      return;
    const U = H.changedTouches[0];
    U != null && (m.current = U.identifier);
    const G = X0(H.target, ae.columnHeader), Y = yie(G), te = e.current.getColumn(Y);
    i.debug(`Start Resize on col ${te.field}`), e.current.publishEvent("columnResizeStart", {
      field: Y
    }, H), C(te, I, U.clientX);
    const B = ao(H.currentTarget);
    B.addEventListener("touchmove", E), B.addEventListener("touchend", O);
  }), L = S.useCallback(() => {
    const H = ao(e.current.rootElementRef.current);
    H.body.style.removeProperty("cursor"), H.removeEventListener("mousemove", R), H.removeEventListener("mouseup", w), H.removeEventListener("touchmove", E), H.removeEventListener("touchend", O), setTimeout(() => {
      H.removeEventListener("click", BA, !0);
    }, 100), s.columnHeaderElement && (s.columnHeaderElement.style.pointerEvents = "unset");
  }, [e, s, R, w, E, O]), F = S.useCallback(({
    field: H
  }) => {
    e.current.setState((I) => J({}, I, {
      columnResize: J({}, I.columnResize, {
        resizingColumnField: H
      })
    })), e.current.forceUpdate();
  }, [e]), _ = S.useCallback(() => {
    e.current.setState((H) => J({}, H, {
      columnResize: J({}, H.columnResize, {
        resizingColumnField: ""
      })
    })), e.current.forceUpdate();
  }, [e]), P = Nn(({
    colDef: H
  }, I) => {
    if (I.button !== 0 || !I.currentTarget.classList.contains(ae["columnSeparator--resizable"]))
      return;
    I.preventDefault(), i.debug(`Start Resize on col ${H.field}`), e.current.publishEvent("columnResizeStart", {
      field: H.field
    }, I), C(H, I.currentTarget, I.clientX);
    const U = ao(e.current.rootElementRef.current);
    U.body.style.cursor = "col-resize", s.previousMouseClickEvent = I.nativeEvent, U.addEventListener("mousemove", R), U.addEventListener("mouseup", w), U.addEventListener("click", BA, !0);
  }), D = Nn((H, I) => {
    if (t.disableAutosize || I.button !== 0)
      return;
    const U = e.current.state.columns.lookup[H.field];
    U.resizable !== !1 && e.current.autosizeColumns(J({}, t.autosizeOptions, {
      disableColumnVirtualization: !1,
      columns: [U.field]
    }));
  }), z = sue(e), K = S.useRef(!1), Q = S.useCallback(async (H) => {
    var te;
    if (!((te = e.current.rootElementRef) == null ? void 0 : te.current) || K.current)
      return;
    K.current = !0;
    const U = Vu(e.current.state), G = J({}, hoe, H, {
      columns: (H == null ? void 0 : H.columns) ?? U.orderedFields
    });
    G.columns = G.columns.filter((B) => U.columnVisibilityModel[B] !== !1);
    const Y = G.columns.map((B) => e.current.state.columns.lookup[B]);
    try {
      !t.disableVirtualization && G.disableColumnVirtualization && (e.current.unstable_setColumnVirtualization(!1), await z());
      const B = uue(e, G, Y), W = Y.map((q) => J({}, q, {
        width: B[q.field],
        computedWidth: B[q.field],
        flex: 0
      }));
      if (G.expand) {
        const ne = U.orderedFields.map((ie) => U.lookup[ie]).filter((ie) => U.columnVisibilityModel[ie.field] !== !1).reduce((ie, fe) => ie + (B[fe.field] ?? fe.computedWidth ?? fe.width), 0), j = e.current.getRootDimensions().viewportInnerSize.width - ne;
        if (j > 0) {
          const ie = j / (W.length || 1);
          W.forEach((fe) => {
            fe.width += ie, fe.computedWidth += ie;
          });
        }
      }
      e.current.updateColumns(W), W.forEach((q, ne) => {
        if (q.width !== Y[ne].width) {
          const re = q.width;
          e.current.publishEvent("columnWidthChange", {
            element: e.current.getColumnHeaderElement(q.field),
            colDef: q,
            width: re
          });
        }
      });
    } finally {
      t.disableVirtualization || e.current.unstable_setColumnVirtualization(!0), K.current = !1;
    }
  }, [e, z, t.disableVirtualization]);
  S.useEffect(() => L, [L]), mP(() => {
    t.autosizeOnMount && Promise.resolve().then(() => {
      e.current.autosizeColumns(t.autosizeOptions);
    });
  }), Oz(e, () => {
    var H;
    return (H = e.current.columnHeadersContainerRef) == null ? void 0 : H.current;
  }, "touchstart", k, {
    passive: !0
  }), Mn(e, {
    autosizeColumns: Q
  }, "public"), Mt(e, "columnResizeStop", _), Mt(e, "columnResizeStart", F), Mt(e, "columnSeparatorMouseDown", P), Mt(e, "columnSeparatorDoubleClick", D), br(e, "columnResize", t.onColumnResize), br(e, "columnWidthChange", t.onColumnWidthChange);
};
function vg(e, t, n) {
  e && (e.style[t] = `${parseInt(e.style[t], 10) + n}px`);
}
function pue(e, t) {
  return e.firstRowIndex >= t.firstRowIndex && e.lastRowIndex <= t.lastRowIndex ? null : e.firstRowIndex >= t.firstRowIndex && e.lastRowIndex > t.lastRowIndex ? {
    firstRowIndex: t.lastRowIndex,
    lastRowIndex: e.lastRowIndex
  } : e.firstRowIndex < t.firstRowIndex && e.lastRowIndex <= t.lastRowIndex ? {
    firstRowIndex: e.firstRowIndex,
    lastRowIndex: t.firstRowIndex - 1
  } : e;
}
function UA(e) {
  return e.firstRowIndex !== 0 || e.lastRowIndex !== 0;
}
const KO = (e, t, n) => {
  if (!e)
    return null;
  let i = e[t.field];
  const s = t.rowSpanValueGetter ?? t.valueGetter;
  return s && (i = s(i, e, t, n)), i;
}, Rg = {
  spannedCells: {},
  hiddenCells: {},
  hiddenCellOriginMap: {}
}, tE = {
  firstRowIndex: 0,
  lastRowIndex: 0
}, hue = /* @__PURE__ */ new Set([qs, "__reorder__", $E]), GA = 20, iV = (e, t, n, i, s, u, d) => {
  const p = u ? {} : J({}, e.current.state.rowSpanning.spannedCells), m = u ? {} : J({}, e.current.state.rowSpanning.hiddenCells), v = u ? {} : J({}, e.current.state.rowSpanning.hiddenCellOriginMap);
  return u && (d = tE), t.forEach((y) => {
    var C;
    if (!hue.has(y.field)) {
      for (let w = s.firstRowIndex; w < s.lastRowIndex; w += 1) {
        const R = n[w];
        if ((C = m[R.id]) != null && C[y.field])
          continue;
        const O = KO(R.model, y, e);
        if (O == null)
          continue;
        let E = R.id, k = w, L = 0;
        const F = [];
        if (w === s.firstRowIndex) {
          let P = w - 1, D = n[P];
          for (; P >= i.firstRowIndex && D && KO(D.model, y, e) === O; ) {
            const z = n[P + 1];
            m[z.id] ? m[z.id][y.field] = !0 : m[z.id] = {
              [y.field]: !0
            }, F.push(w), L += 1, E = D.id, k = P, P -= 1, D = n[P];
          }
        }
        F.forEach((P) => {
          v[P] ? v[P][y.field] = k : v[P] = {
            [y.field]: k
          };
        });
        let _ = w + 1;
        for (; _ <= i.lastRowIndex && n[_] && KO(n[_].model, y, e) === O; ) {
          const P = n[_];
          m[P.id] ? m[P.id][y.field] = !0 : m[P.id] = {
            [y.field]: !0
          }, v[_] ? v[_][y.field] = k : v[_] = {
            [y.field]: k
          }, _ += 1, L += 1;
        }
        L > 0 && (p[E] ? p[E][y.field] = L + 1 : p[E] = {
          [y.field]: L + 1
        });
      }
      d = {
        firstRowIndex: Math.min(d.firstRowIndex, s.firstRowIndex),
        lastRowIndex: Math.max(d.lastRowIndex, s.lastRowIndex)
      };
    }
  }), {
    spannedCells: p,
    hiddenCells: m,
    hiddenCellOriginMap: v,
    processedRange: d
  };
}, aV = (e, t) => {
  const n = zb(t).length;
  if (e.pagination) {
    const i = Dz(t);
    let s = GA;
    return i > 0 && (s = i - 1), {
      firstRowIndex: 0,
      lastRowIndex: Math.min(s, n)
    };
  }
  return {
    firstRowIndex: 0,
    lastRowIndex: Math.min(GA, n)
  };
}, mue = (e, t, n) => {
  var O;
  if (!t.unstable_rowSpanning)
    return J({}, e, {
      rowSpanning: Rg
    });
  const i = e.rows.dataRowIds || [], s = e.columns.orderedFields || [], u = e.rows.dataRowIdToModelLookup, d = e.columns.lookup, p = !!e.filter.filterModel.items.length || !!((O = e.filter.filterModel.quickFilterValues) != null && O.length);
  if (!i.length || !s.length || !u || !d || p)
    return J({}, e, {
      rowSpanning: Rg
    });
  const m = aV(t, n), v = i.map((E) => ({
    id: E,
    model: u[E]
  })), y = s.map((E) => d[E]), {
    spannedCells: C,
    hiddenCells: w,
    hiddenCellOriginMap: R
  } = iV(n, y, v, m, m, !0, tE);
  return J({}, e, {
    rowSpanning: {
      spannedCells: C,
      hiddenCells: w,
      hiddenCellOriginMap: R
    }
  });
}, gue = (e, t) => {
  const n = al(() => e.current.state.rowSpanning !== Rg ? aV(t, e) : tE), i = S.useCallback((u, d = !1) => {
    const {
      range: p,
      rows: m
    } = mf(e, {
      pagination: t.pagination,
      paginationMode: t.paginationMode
    });
    if (p === null || !UA(u))
      return;
    d && (n.current = tE);
    const v = pue({
      firstRowIndex: u.firstRowIndex,
      lastRowIndex: Math.min(u.lastRowIndex, p.lastRowIndex + 1)
    }, n.current);
    if (v === null)
      return;
    const y = ho(e), {
      spannedCells: C,
      hiddenCells: w,
      hiddenCellOriginMap: R,
      processedRange: O
    } = iV(e, y, m, p, v, d, n.current);
    n.current = O;
    const E = Object.keys(C).length, k = Object.keys(w).length, L = Object.keys(e.current.state.rowSpanning.spannedCells).length, F = Object.keys(e.current.state.rowSpanning.hiddenCells).length;
    !(d || E !== L || k !== F) || E === 0 && L === 0 || e.current.setState((D) => J({}, D, {
      rowSpanning: {
        spannedCells: C,
        hiddenCells: w,
        hiddenCellOriginMap: R
      }
    }));
  }, [e, n, t.pagination, t.paginationMode]), s = S.useCallback(() => {
    const u = WC(e);
    UA(u) && i(u, !0);
  }, [e, i]);
  Mt(e, "renderedRowsIntervalChange", Kp(t.unstable_rowSpanning, i)), Mt(e, "sortedRowsSet", Kp(t.unstable_rowSpanning, s)), Mt(e, "paginationModelChange", Kp(t.unstable_rowSpanning, s)), Mt(e, "filteredRowsSet", Kp(t.unstable_rowSpanning, s)), Mt(e, "columnsChange", Kp(t.unstable_rowSpanning, s)), S.useEffect(() => {
    t.unstable_rowSpanning ? e.current.state.rowSpanning === Rg && s() : e.current.state.rowSpanning !== Rg && e.current.setState((u) => J({}, u, {
      rowSpanning: Rg
    }));
  }, [e, s, t.unstable_rowSpanning]);
}, vue = (e, t, n) => J({}, e, {
  listViewColumn: t.unstable_listColumn ? J({}, t.unstable_listColumn, {
    computedWidth: Qk(n)
  }) : void 0
});
function yue(e, t) {
  const n = () => {
    e.current.setState((u) => u.listViewColumn ? J({}, u, {
      listViewColumn: J({}, u.listViewColumn, {
        computedWidth: Qk(e)
      })
    }) : u);
  }, i = S.useRef(null);
  Mt(e, "viewportInnerSizeChange", (u) => {
    i.current !== u.width && (i.current = u.width, n());
  }), Mt(e, "columnVisibilityModelChange", n), Fr(() => {
    const u = t.unstable_listColumn;
    u && e.current.setState((d) => J({}, d, {
      listViewColumn: J({}, u, {
        computedWidth: Qk(e)
      })
    }));
  }, [e, t.unstable_listColumn]), S.useEffect(() => {
    t.unstable_listView && !t.unstable_listColumn && el(["MUI X: The `unstable_listColumn` prop must be set if `unstable_listView` is enabled.", 'To fix, pass a column definition to the `unstable_listColumn` prop, e.g. `{ field: "example", renderCell: (params) => <div>{params.row.id}</div> }`.', "For more details, see https://mui.com/x/react-data-grid/list-view/"]);
  }, [t.unstable_listView, t.unstable_listColumn]);
}
function Qk(e) {
  return li(e.current.state).viewportInnerSize.width;
}
const bue = (e, t) => {
  const n = Hse(e, t);
  return $le(n, t), Nle(n), ai(jse, n, t), ai(Fle, n, t), ai(Yse, n, t), ai(kle, n, t), ai(gle, n, t), ai(Rle, n, t), ai(ule, n, t), ai(jle, n, t), ai(yle, n, t), ai(ile, n, t), ai(mue, n, t), ai(Qse, n, t), ai(cue, n, t), ai(qse, n, t), ai(tue, n, t), ai(kre, n, t), ai(Gle, n, t), ai(Yle, n, t), ai(vue, n, t), ple(n, t), _le(n, t), Xse(n, t), Ple(n, t), gue(n, t), Lle(n, t), Jle(n), nue(n, t), Ole(n, t), cle(n, t), ble(n, t), lle(n, t), zle(n, t), Jse(n, t), fue(n, t), vle(n, t), Xle(n, t), Hle(n, t), Kse(n), ele(n, t), ole(n, t), Wse(n, t), Wle(n, t), Vle(n, t), Qle(n), Pre(n, t), yue(n, t), n;
}, Cue = (e) => {
  const {
    classes: t,
    headerAlign: n,
    isDragging: i,
    isLastColumn: s,
    showLeftBorder: u,
    showRightBorder: d,
    groupId: p,
    pinnedPosition: m
  } = e, v = {
    root: ["columnHeader", n === "left" && "columnHeader--alignLeft", n === "center" && "columnHeader--alignCenter", n === "right" && "columnHeader--alignRight", i && "columnHeader--moving", d && "columnHeader--withRightBorder", u && "columnHeader--withLeftBorder", "withBorderColor", p === null ? "columnHeader--emptyGroup" : "columnHeader--filledGroup", m === jn.LEFT && "columnHeader--pinnedLeft", m === jn.RIGHT && "columnHeader--pinnedRight", s && "columnHeader--last"],
    draggableContainer: ["columnHeaderDraggableContainer"],
    titleContainer: ["columnHeaderTitleContainer", "withBorderColor"],
    titleContainerContent: ["columnHeaderTitleContainerContent"]
  };
  return yt(v, Gn, t);
};
function Sue(e) {
  var ne;
  const {
    groupId: t,
    width: n,
    depth: i,
    maxDepth: s,
    fields: u,
    height: d,
    colIndex: p,
    hasFocus: m,
    tabIndex: v,
    isLastColumn: y,
    pinnedPosition: C,
    pinnedOffset: w
  } = e, R = Vt(), O = ji(), E = S.useRef(null), k = In(), L = tt(k, Bz), F = t ? L[t] : {}, {
    headerName: _ = t ?? "",
    description: P = "",
    headerAlign: D = void 0
  } = F;
  let z;
  const K = t && ((ne = L[t]) == null ? void 0 : ne.renderHeaderGroup), Q = S.useMemo(() => ({
    groupId: t,
    headerName: _,
    description: P,
    depth: i,
    maxDepth: s,
    fields: u,
    colIndex: p,
    isLastColumn: y
  }), [t, _, P, i, s, u, p, y]);
  t && K && (z = K(Q));
  const H = J({}, e, {
    classes: R.classes,
    headerAlign: D,
    depth: i,
    isDragging: !1
  }), I = _ ?? t, U = Sr(), G = t === null ? `empty-group-cell-${U}` : t, Y = Cue(H);
  S.useLayoutEffect(() => {
    if (m) {
      const X = E.current.querySelector('[tabindex="0"]') || E.current;
      X == null || X.focus();
    }
  }, [k, m]);
  const te = S.useCallback(
    (re) => (X) => {
      qC(X) || k.current.publishEvent(re, Q, X);
    },
    // For now this is stupid, because renderParams change all the time.
    // Need to move it's computation in the api, such that for a given depth+columnField, I can get the group parameters
    [k, Q]
  ), B = S.useMemo(() => ({
    onKeyDown: te("columnGroupHeaderKeyDown"),
    onFocus: te("columnGroupHeaderFocus"),
    onBlur: te("columnGroupHeaderBlur")
  }), [te]), W = typeof F.headerClassName == "function" ? F.headerClassName(Q) : F.headerClassName, q = S.useMemo(() => GE(J({}, e.style), O, C, w), [C, w, e.style, O]);
  return /* @__PURE__ */ A.jsx(yH, J({
    ref: E,
    classes: Y,
    columnMenuOpen: !1,
    colIndex: p,
    height: d,
    isResizing: !1,
    sortDirection: null,
    hasFocus: !1,
    tabIndex: v,
    isDraggable: !1,
    headerComponent: z,
    headerClassName: W,
    description: P,
    elementId: G,
    width: n,
    columnMenuIconButton: null,
    columnTitleIconButtons: null,
    resizable: !1,
    label: I,
    "aria-colspan": u.length,
    "data-fields": `|-${u.join("-|-")}-|`,
    style: q
  }, B));
}
const WA = Ue("div", {
  name: "MuiDataGrid",
  slot: "ColumnHeaderRow",
  overridesResolver: (e, t) => t.columnHeaderRow
})({
  display: "flex"
}), wue = (e) => {
  const {
    visibleColumns: t,
    sortColumnLookup: n,
    filterColumnLookup: i,
    columnHeaderTabIndexState: s,
    columnGroupHeaderTabIndexState: u,
    columnHeaderFocus: d,
    columnGroupHeaderFocus: p,
    headerGroupingMaxDepth: m,
    columnMenuState: v,
    columnVisibility: y,
    columnGroupsHeaderStructure: C,
    hasOtherElementInTabSequence: w
  } = e, [R, O] = S.useState(""), [E, k] = S.useState(""), L = Cs(), F = Vt(), _ = tt(L, Vz), P = tt(L, Rf), D = tt(L, Ore), z = tt(L, sv), K = tt(L, Zc), Q = Zz(P, D, z.left.length), H = tt(L, LE), I = tt(L, G2), U = tt(L, Wee), G = tt(L, qee), Y = tt(L, W2), te = S.useCallback((ge) => k(ge.field), []), B = S.useCallback(() => k(""), []), W = S.useCallback((ge) => O(ge.field), []), q = S.useCallback(() => O(""), []), ne = S.useMemo(() => z.left.length ? {
    firstColumnIndex: 0,
    lastColumnIndex: z.left.length
  } : null, [z.left.length]), re = S.useMemo(() => z.right.length ? {
    firstColumnIndex: t.length - z.right.length,
    lastColumnIndex: t.length
  } : null, [z.right.length, t.length]);
  Mt(L, "columnResizeStart", te), Mt(L, "columnResizeStop", B), Mt(L, "columnHeaderDragStart", W), Mt(L, "columnHeaderDragEnd", q);
  const X = (ge) => {
    const {
      renderContext: de = D
    } = ge || {}, pe = de.firstColumnIndex, be = de.lastColumnIndex;
    return {
      renderedColumns: t.slice(pe, be),
      firstColumnToRender: pe,
      lastColumnToRender: be
    };
  }, j = (ge, de, pe, be = !1) => {
    const Ce = (ge == null ? void 0 : ge.position) === jn.RIGHT, Re = (ge == null ? void 0 : ge.position) === void 0, ue = z.right.length > 0 && Ce || z.right.length === 0 && Re, we = Q - pe;
    return /* @__PURE__ */ A.jsxs(S.Fragment, {
      children: [Re && /* @__PURE__ */ A.jsx("div", {
        role: "presentation",
        style: {
          width: we
        }
      }), de, Re && /* @__PURE__ */ A.jsx("div", {
        role: "presentation",
        className: nt(ae.filler, be && ae["filler--borderBottom"])
      }), ue && /* @__PURE__ */ A.jsx(yM, {
        header: !0,
        pinnedRight: Ce,
        borderBottom: be,
        borderTop: !1
      })]
    });
  }, ie = (ge, de = {}) => {
    const {
      renderedColumns: pe,
      firstColumnToRender: be
    } = X(ge), Ce = [];
    for (let Re = 0; Re < pe.length; Re += 1) {
      const ue = pe[Re], we = be + Re, _e = we === 0, He = s !== null && s.field === ue.field || _e && !w ? 0 : -1, et = d !== null && d.field === ue.field, Ne = v.open && v.field === ue.field, rt = ge == null ? void 0 : ge.position, it = Yb(rt, ue.computedWidth, we, P, H, Y), wt = rt === jn.RIGHT ? pe[Re - 1] : pe[Re + 1], gt = wt ? d !== null && d.field === wt.field : !1, ot = we + 1 === P.length - z.right.length, jt = Re, ct = pe.length, Tt = Z0(rt, jt), Rt = J0(rt, jt, ct, F.showColumnVerticalBorder, I);
      Ce.push(/* @__PURE__ */ A.jsx($ie, J({}, n[ue.field], {
        columnMenuOpen: Ne,
        filterItemsCounter: i[ue.field] && i[ue.field].length,
        headerHeight: U,
        isDragging: ue.field === R,
        colDef: ue,
        colIndex: we,
        isResizing: E === ue.field,
        isLast: we === P.length - 1,
        hasFocus: et,
        tabIndex: He,
        pinnedPosition: rt,
        pinnedOffset: it,
        isLastUnpinned: ot,
        isSiblingFocused: gt,
        showLeftBorder: Tt,
        showRightBorder: Rt
      }, de), ue.field));
    }
    return j(ge, Ce, 0);
  }, fe = () => /* @__PURE__ */ A.jsxs(WA, {
    role: "row",
    "aria-rowindex": m + 1,
    ownerState: F,
    className: ae["row--borderBottom"],
    children: [ne && ie({
      position: jn.LEFT,
      renderContext: ne
    }, {
      disableReorder: !0
    }), ie({
      renderContext: D
    }), re && ie({
      position: jn.RIGHT,
      renderContext: re
    }, {
      disableReorder: !0,
      separatorSide: gM.Left
    })]
  }), ce = ({
    depth: ge,
    params: de
  }) => {
    var ct, Tt;
    const pe = X(de);
    if (pe.renderedColumns.length === 0)
      return null;
    const {
      firstColumnToRender: be,
      lastColumnToRender: Ce
    } = pe, Re = C[ge], ue = t[be].field, we = ((ct = _[ue]) == null ? void 0 : ct[ge]) ?? null, _e = Re.findIndex(({
      groupId: Rt,
      columnFields: Lt
    }) => Rt === we && Lt.includes(ue)), He = t[Ce - 1].field, et = ((Tt = _[He]) == null ? void 0 : Tt[ge]) ?? null, Ne = Re.findIndex(({
      groupId: Rt,
      columnFields: Lt
    }) => Rt === et && Lt.includes(He)), rt = Re.slice(_e, Ne + 1).map((Rt) => J({}, Rt, {
      columnFields: Rt.columnFields.filter((Lt) => y[Lt] !== !1)
    })).filter((Rt) => Rt.columnFields.length > 0), it = rt[0].columnFields.indexOf(ue), gt = rt[0].columnFields.slice(0, it).reduce((Rt, Lt) => {
      const vt = K[Lt];
      return Rt + (vt.computedWidth ?? 0);
    }, 0);
    let ot = be;
    const jt = rt.map(({
      groupId: Rt,
      columnFields: Lt
    }, vt) => {
      const Qe = p !== null && p.depth === ge && Lt.includes(p.field), Oe = u !== null && u.depth === ge && Lt.includes(u.field) ? 0 : -1, Me = {
        width: Lt.reduce((bt, Ge) => bt + K[Ge].computedWidth, 0),
        fields: Lt,
        colIndex: ot
      }, ht = de.position, xt = Yb(ht, Me.width, ot, P, H, Y);
      ot += Lt.length;
      let zt = vt;
      return ht === jn.LEFT && (zt = ot - 1), /* @__PURE__ */ A.jsx(Sue, {
        groupId: Rt,
        width: Me.width,
        fields: Me.fields,
        colIndex: Me.colIndex,
        depth: ge,
        isLastColumn: vt === rt.length - 1,
        maxDepth: m,
        height: G,
        hasFocus: Qe,
        tabIndex: Oe,
        pinnedPosition: ht,
        pinnedOffset: xt,
        showLeftBorder: Z0(ht, zt),
        showRightBorder: J0(ht, zt, rt.length, F.showColumnVerticalBorder, I)
      }, vt);
    });
    return j(de, jt, gt);
  };
  return {
    renderContext: D,
    leftRenderContext: ne,
    rightRenderContext: re,
    pinnedColumns: z,
    visibleColumns: t,
    columnPositions: P,
    getFillers: j,
    getColumnHeadersRow: fe,
    getColumnsToRender: X,
    getColumnGroupHeadersRows: () => {
      if (m === 0)
        return null;
      const ge = [];
      for (let de = 0; de < m; de += 1)
        ge.push(/* @__PURE__ */ A.jsxs(WA, {
          role: "row",
          "aria-rowindex": de + 1,
          ownerState: F,
          children: [ne && ce({
            depth: de,
            params: {
              position: jn.LEFT,
              renderContext: ne,
              maxLastColumn: ne.lastColumnIndex
            }
          }), ce({
            depth: de,
            params: {
              renderContext: D
            }
          }), re && ce({
            depth: de,
            params: {
              position: jn.RIGHT,
              renderContext: re,
              maxLastColumn: re.lastColumnIndex
            }
          })]
        }, de));
      return ge;
    },
    getPinnedCellOffset: Yb,
    isDragging: !!R,
    getInnerProps: () => ({
      role: "rowgroup"
    })
  };
}, xue = ["className"], Eue = (e) => {
  const {
    classes: t
  } = e;
  return yt({
    root: ["columnHeaders"]
  }, Gn, t);
}, Tue = _r("div", {
  name: "MuiDataGrid",
  slot: "ColumnHeaders",
  overridesResolver: (e, t) => t.columnHeaders
})({
  display: "flex",
  flexDirection: "column",
  borderTopLeftRadius: "var(--unstable_DataGrid-radius)",
  borderTopRightRadius: "var(--unstable_DataGrid-radius)"
}), Rue = tr(function(t, n) {
  const {
    className: i
  } = t, s = Xt(t, xue), u = Vt(), d = Eue(u);
  return /* @__PURE__ */ A.jsx(Tue, J({
    className: nt(d.root, i),
    ownerState: u
  }, s, {
    role: "presentation",
    ref: n
  }));
}), Oue = ["className", "visibleColumns", "sortColumnLookup", "filterColumnLookup", "columnHeaderTabIndexState", "columnGroupHeaderTabIndexState", "columnHeaderFocus", "columnGroupHeaderFocus", "headerGroupingMaxDepth", "columnMenuState", "columnVisibility", "columnGroupsHeaderStructure", "hasOtherElementInTabSequence"], sV = tr(function(t, n) {
  const {
    visibleColumns: i,
    sortColumnLookup: s,
    filterColumnLookup: u,
    columnHeaderTabIndexState: d,
    columnGroupHeaderTabIndexState: p,
    columnHeaderFocus: m,
    columnGroupHeaderFocus: v,
    headerGroupingMaxDepth: y,
    columnMenuState: C,
    columnVisibility: w,
    columnGroupsHeaderStructure: R,
    hasOtherElementInTabSequence: O
  } = t, E = Xt(t, Oue), {
    getInnerProps: k,
    getColumnHeadersRow: L,
    getColumnGroupHeadersRows: F
  } = wue({
    visibleColumns: i,
    sortColumnLookup: s,
    filterColumnLookup: u,
    columnHeaderTabIndexState: d,
    columnGroupHeaderTabIndexState: p,
    columnHeaderFocus: m,
    columnGroupHeaderFocus: v,
    headerGroupingMaxDepth: y,
    columnMenuState: C,
    columnVisibility: w,
    columnGroupsHeaderStructure: R,
    hasOtherElementInTabSequence: O
  });
  return /* @__PURE__ */ A.jsxs(Rue, J({}, E, k(), {
    ref: n,
    children: [F(), L()]
  }));
});
process.env.NODE_ENV !== "production" && (sV.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  columnGroupHeaderFocus: a.shape({
    depth: a.number.isRequired,
    field: a.string.isRequired
  }),
  columnGroupHeaderTabIndexState: a.shape({
    depth: a.number.isRequired,
    field: a.string.isRequired
  }),
  columnGroupsHeaderStructure: a.arrayOf(a.arrayOf(a.shape({
    columnFields: a.arrayOf(a.string).isRequired,
    groupId: a.string
  }))).isRequired,
  columnHeaderFocus: a.shape({
    field: a.string.isRequired
  }),
  columnHeaderTabIndexState: a.shape({
    field: a.string.isRequired
  }),
  columnMenuState: a.shape({
    field: a.string,
    open: a.bool.isRequired
  }).isRequired,
  columnVisibility: a.object.isRequired,
  filterColumnLookup: a.object.isRequired,
  hasOtherElementInTabSequence: a.bool.isRequired,
  headerGroupingMaxDepth: a.number.isRequired,
  sortColumnLookup: a.object.isRequired,
  visibleColumns: a.arrayOf(a.object).isRequired
});
const kue = Jc(sV);
function Pue(e) {
  return null;
}
function Mue(e) {
  return null;
}
const Iue = tr(function(t, n) {
  const s = In().current.getLocaleText("noResultsOverlayLabel");
  return /* @__PURE__ */ A.jsx(WE, J({}, t, {
    ref: n,
    children: s
  }));
}), Due = ["sortingOrder"], Nue = /* @__PURE__ */ S.memo(function(t) {
  const {
    sortingOrder: n
  } = t, i = Xt(t, Due), s = Vt(), [u] = n, d = u === "asc" ? s.slots.columnSortedAscendingIcon : s.slots.columnSortedDescendingIcon;
  return d ? /* @__PURE__ */ A.jsx(d, J({}, i)) : null;
}), Lue = ["native"];
function Fue(e) {
  let {
    native: t
  } = e, n = Xt(e, Lue);
  return t ? /* @__PURE__ */ A.jsx("option", J({}, n)) : /* @__PURE__ */ A.jsx(ms, J({}, n));
}
const _ue = {
  booleanCellTrueIcon: oae,
  booleanCellFalseIcon: BO,
  columnMenuIcon: eae,
  openFilterButtonIcon: qie,
  filterPanelDeleteIcon: BO,
  columnFilteredIcon: xA,
  columnSelectorIcon: Yie,
  columnUnsortedIcon: Nue,
  columnSortedAscendingIcon: bA,
  columnSortedDescendingIcon: CA,
  columnResizeIcon: Xie,
  densityCompactIcon: Qie,
  densityStandardIcon: Jie,
  densityComfortableIcon: Zie,
  exportIcon: rae,
  moreActionsIcon: iae,
  treeDataCollapseIcon: wA,
  treeDataExpandIcon: SA,
  groupingCriteriaCollapseIcon: wA,
  groupingCriteriaExpandIcon: SA,
  detailPanelExpandIcon: EA,
  detailPanelCollapseIcon: tae,
  rowReorderIcon: TA,
  quickFilterIcon: Kie,
  quickFilterClearIcon: BO,
  columnMenuHideIcon: aae,
  columnMenuSortAscendingIcon: bA,
  columnMenuSortDescendingIcon: CA,
  columnMenuFilterIcon: xA,
  columnMenuManageColumnsIcon: sae,
  columnMenuClearIcon: lae,
  loadIcon: nae,
  filterPanelAddIcon: EA,
  filterPanelRemoveAllIcon: uae,
  columnReorderIcon: TA
}, Aue = J({}, _ue, {
  baseBadge: Ij,
  baseCheckbox: _j,
  baseDivider: F0,
  baseTextField: HP,
  baseFormControl: FP,
  baseSelect: tv,
  baseButton: of,
  baseIconButton: Uc,
  baseInputAdornment: Bj,
  baseTooltip: r2,
  basePopper: Tf,
  baseInputLabel: _P,
  baseSelectOption: Fue,
  baseChip: NP
}), $ue = J({}, Aue, {
  cell: _oe,
  skeletonCell: Voe,
  columnHeaderFilterIconButton: wH,
  columnHeaderSortIcon: Gie,
  columnMenu: LH,
  columnHeaders: kue,
  detailPanels: Pue,
  footer: GH,
  footerRowCount: YH,
  toolbar: null,
  pinnedRows: Mue,
  loadingOverlay: WH,
  noResultsOverlay: Iue,
  noRowsOverlay: qH,
  pagination: KH,
  filterPanel: jH,
  columnsPanel: FH,
  columnsManagement: zH,
  panel: _H,
  row: Cse
}), jue = {
  disableMultipleColumnsFiltering: !0,
  disableMultipleColumnsSorting: !0,
  throttleRowsMs: void 0,
  hideFooterRowCount: !1,
  pagination: !0,
  checkboxSelectionVisibleOnly: !1,
  disableColumnReorder: !0,
  keepColumnPositionIfDraggedOutside: !1,
  signature: "DataGrid",
  unstable_listView: !1
}, zue = $ue, Hue = (e) => {
  const t = ev(), n = koe(S.useMemo(() => $$({
    props: e,
    theme: t,
    name: "MuiDataGrid"
  }), [t, e])), i = S.useMemo(() => J({}, Yee, n.localeText), [n.localeText]), s = S.useMemo(() => Roe({
    defaultSlots: zue,
    slots: n.slots
  }), [n.slots]), u = S.useMemo(() => Object.keys(Kk).reduce((d, p) => (d[p] = n[p] ?? Kk[p], d), {}), [n]);
  return S.useMemo(() => J({}, n, u, {
    localeText: i,
    slots: s
  }, jue), [n, i, s, u]);
}, Vue = {
  hooks: {
    useGridAriaAttributes: Sse,
    useGridRowAriaAttributes: wse,
    useCellAggregationResult: () => null
  }
}, lV = tr(function(t, n) {
  var u;
  const i = Hue(t), s = bue(i.apiRef, i);
  return process.env.NODE_ENV !== "production" && Moe(i, Poe), /* @__PURE__ */ A.jsx(xse, {
    privateApiRef: s,
    configuration: Vue,
    props: i,
    children: /* @__PURE__ */ A.jsx(iie, J({
      className: i.className,
      style: i.style,
      sx: i.sx
    }, i.forwardedProps, (u = i.slotProps) == null ? void 0 : u.root, {
      ref: n
    }))
  });
}), Bue = /* @__PURE__ */ S.memo(lV);
lV.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * The ref object that allows Data Grid manipulation. Can be instantiated with `useGridApiRef()`.
   */
  apiRef: a.shape({
    current: a.object.isRequired
  }),
  /**
   * The label of the Data Grid.
   */
  "aria-label": a.string,
  /**
   * The id of the element containing a label for the Data Grid.
   */
  "aria-labelledby": a.string,
  /**
   * If `true`, the Data Grid height is dynamic and follows the number of rows in the Data Grid.
   * @default false
   * @deprecated Use flex parent container instead: https://mui.com/x/react-data-grid/layout/#flex-parent-container
   * @example
   * <div style={{ display: 'flex', flexDirection: 'column' }}>
   *   <DataGrid />
   * </div>
   */
  autoHeight: a.bool,
  /**
   * If `true`, the pageSize is calculated according to the container size and the max number of rows to avoid rendering a vertical scroll bar.
   * @default false
   */
  autoPageSize: a.bool,
  /**
   * If `true`, columns are autosized after the datagrid is mounted.
   * @default false
   */
  autosizeOnMount: a.bool,
  /**
   * The options for autosize when user-initiated.
   */
  autosizeOptions: a.shape({
    columns: a.arrayOf(a.string),
    disableColumnVirtualization: a.bool,
    expand: a.bool,
    includeHeaders: a.bool,
    includeOutliers: a.bool,
    outliersFactor: a.number
  }),
  /**
   * Controls the modes of the cells.
   */
  cellModesModel: a.object,
  /**
   * If `true`, the Data Grid will display an extra column with checkboxes for selecting rows.
   * @default false
   */
  checkboxSelection: a.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * The character used to separate cell values when copying to the clipboard.
   * @default '\t'
   */
  clipboardCopyCellDelimiter: a.string,
  /**
   * Column region in pixels to render before/after the viewport
   * @default 150
   */
  columnBufferPx: a.number,
  /**
   * Sets the height in pixels of the column group headers in the Data Grid.
   * Inherits the `columnHeaderHeight` value if not set.
   */
  columnGroupHeaderHeight: a.number,
  columnGroupingModel: a.arrayOf(a.object),
  /**
   * Sets the height in pixel of the column headers in the Data Grid.
   * @default 56
   */
  columnHeaderHeight: a.number,
  /**
   * Set of columns of type [[GridColDef]][].
   */
  columns: a.arrayOf(a.object).isRequired,
  /**
   * Set the column visibility model of the Data Grid.
   * If defined, the Data Grid will ignore the `hide` property in [[GridColDef]].
   */
  columnVisibilityModel: a.object,
  /**
   * Set the density of the Data Grid.
   * @default "standard"
   */
  density: a.oneOf(["comfortable", "compact", "standard"]),
  /**
   * If `true`, column autosizing on header separator double-click is disabled.
   * @default false
   */
  disableAutosize: a.bool,
  /**
   * If `true`, column filters are disabled.
   * @default false
   */
  disableColumnFilter: a.bool,
  /**
   * If `true`, the column menu is disabled.
   * @default false
   */
  disableColumnMenu: a.bool,
  /**
   * If `true`, resizing columns is disabled.
   * @default false
   */
  disableColumnResize: a.bool,
  /**
   * If `true`, hiding/showing columns is disabled.
   * @default false
   */
  disableColumnSelector: a.bool,
  /**
   * If `true`, the column sorting feature will be disabled.
   * @default false
   */
  disableColumnSorting: a.bool,
  /**
   * If `true`, the density selector is disabled.
   * @default false
   */
  disableDensitySelector: a.bool,
  /**
   * If `true`, `eval()` is not used for performance optimization.
   * @default false
   */
  disableEval: a.bool,
  /**
   * If `true`, multiple selection using the Ctrl/CMD or Shift key is disabled.
   * The MIT DataGrid will ignore this prop, unless `checkboxSelection` is enabled.
   * @default false (`!props.checkboxSelection` for MIT Data Grid)
   */
  disableMultipleRowSelection: a.bool,
  /**
   * If `true`, the selection on click on a row or cell is disabled.
   * @default false
   */
  disableRowSelectionOnClick: a.bool,
  /**
   * If `true`, the virtualization is disabled.
   * @default false
   */
  disableVirtualization: a.bool,
  /**
   * Controls whether to use the cell or row editing.
   * @default "cell"
   */
  editMode: a.oneOf(["cell", "row"]),
  /**
   * Use if the actual rowCount is not known upfront, but an estimation is available.
   * If some rows have children (for instance in the tree data), this number represents the amount of top level rows.
   * Applicable only with `paginationMode="server"` and when `rowCount="-1"`
   */
  estimatedRowCount: a.number,
  /**
   * Unstable features, breaking changes might be introduced.
   * For each feature, if the flag is not explicitly set to `true`, the feature will be fully disabled and any property / method call will not have any effect.
   */
  experimentalFeatures: a.shape({
    warnIfFocusStateIsNotSynced: a.bool
  }),
  /**
   * The milliseconds delay to wait after a keystroke before triggering filtering.
   * @default 150
   */
  filterDebounceMs: a.number,
  /**
   * Filtering can be processed on the server or client-side.
   * Set it to 'server' if you would like to handle filtering on the server-side.
   * @default "client"
   */
  filterMode: a.oneOf(["client", "server"]),
  /**
   * Set the filter model of the Data Grid.
   */
  filterModel: a.shape({
    items: a.arrayOf(a.shape({
      field: a.string.isRequired,
      id: a.oneOfType([a.number, a.string]),
      operator: a.string.isRequired,
      value: a.any
    })).isRequired,
    logicOperator: a.oneOf(["and", "or"]),
    quickFilterExcludeHiddenColumns: a.bool,
    quickFilterLogicOperator: a.oneOf(["and", "or"]),
    quickFilterValues: a.array
  }),
  /**
   * Forwarded props for the Data Grid root element.
   * @ignore - do not document.
   */
  forwardedProps: a.object,
  /**
   * Function that applies CSS classes dynamically on cells.
   * @param {GridCellParams} params With all properties from [[GridCellParams]].
   * @returns {string} The CSS class to apply to the cell.
   */
  getCellClassName: a.func,
  /**
   * Function that returns the element to render in row detail.
   * @param {GridRowParams} params With all properties from [[GridRowParams]].
   * @returns {React.JSX.Element} The row detail element.
   */
  getDetailPanelContent: a.func,
  /**
   * Function that returns the estimated height for a row.
   * Only works if dynamic row height is used.
   * Once the row height is measured this value is discarded.
   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].
   * @returns {number | null} The estimated row height value. If `null` or `undefined` then the default row height, based on the density, is applied.
   */
  getEstimatedRowHeight: a.func,
  /**
   * Function that applies CSS classes dynamically on rows.
   * @param {GridRowClassNameParams} params With all properties from [[GridRowClassNameParams]].
   * @returns {string} The CSS class to apply to the row.
   */
  getRowClassName: a.func,
  /**
   * Function that sets the row height per row.
   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].
   * @returns {GridRowHeightReturnValue} The row height value. If `null` or `undefined` then the default row height is applied. If "auto" then the row height is calculated based on the content.
   */
  getRowHeight: a.func,
  /**
   * Return the id of a given [[GridRowModel]].
   * Ensure the reference of this prop is stable to avoid performance implications.
   * It could be done by either defining the prop outside of the component or by memoizing it.
   */
  getRowId: a.func,
  /**
   * Function that allows to specify the spacing between rows.
   * @param {GridRowSpacingParams} params With all properties from [[GridRowSpacingParams]].
   * @returns {GridRowSpacing} The row spacing values.
   */
  getRowSpacing: a.func,
  /**
   * If `true`, the footer component is hidden.
   * @default false
   */
  hideFooter: a.bool,
  /**
   * If `true`, the pagination component in the footer is hidden.
   * @default false
   */
  hideFooterPagination: a.bool,
  /**
   * If `true`, the selected row count in the footer is hidden.
   * @default false
   */
  hideFooterSelectedRowCount: a.bool,
  /**
   * If `true`, the diacritics (accents) are ignored when filtering or quick filtering.
   * E.g. when filter value is `cafe`, the rows with `café` will be visible.
   * @default false
   */
  ignoreDiacritics: a.bool,
  /**
   * If `true`, the Data Grid will not use `valueFormatter` when exporting to CSV or copying to clipboard.
   * If an object is provided, you can choose to ignore the `valueFormatter` for CSV export or clipboard export.
   * @default false
   */
  ignoreValueFormatterDuringExport: a.oneOfType([a.shape({
    clipboardExport: a.bool,
    csvExport: a.bool
  }), a.bool]),
  /**
   * If `select`, a group header checkbox in indeterminate state (like "Select All" checkbox)
   * will select all the rows under it.
   * If `deselect`, it will deselect all the rows under it.
   * Works only if `checkboxSelection` is enabled.
   * @default "deselect"
   * @deprecated `select` will be the default behavior from v8 onwards
   */
  indeterminateCheckboxAction: a.oneOf(["deselect", "select"]),
  /**
   * The initial state of the DataGrid.
   * The data in it will be set in the state on initialization but will not be controlled.
   * If one of the data in `initialState` is also being controlled, then the control state wins.
   */
  initialState: a.object,
  /**
   * Callback fired when a cell is rendered, returns true if the cell is editable.
   * @param {GridCellParams} params With all properties from [[GridCellParams]].
   * @returns {boolean} A boolean indicating if the cell is editable.
   */
  isCellEditable: a.func,
  /**
   * Determines if a row can be selected.
   * @param {GridRowParams} params With all properties from [[GridRowParams]].
   * @returns {boolean} A boolean indicating if the row is selectable.
   */
  isRowSelectable: a.func,
  /**
   * If `true`, the selection model will retain selected rows that do not exist.
   * Useful when using server side pagination and row selections need to be retained
   * when changing pages.
   * @default false
   */
  keepNonExistentRowsSelected: a.bool,
  /**
   * If `true`, a loading overlay is displayed.
   * @default false
   */
  loading: a.bool,
  /**
   * Set the locale text of the Data Grid.
   * You can find all the translation keys supported in [the source](https://github.com/mui/mui-x/blob/HEAD/packages/x-data-grid/src/constants/localeTextConstants.ts) in the GitHub repository.
   */
  localeText: a.object,
  /**
   * Pass a custom logger in the components that implements the [[Logger]] interface.
   * @default console
   */
  logger: a.shape({
    debug: a.func.isRequired,
    error: a.func.isRequired,
    info: a.func.isRequired,
    warn: a.func.isRequired
  }),
  /**
   * Allows to pass the logging level or false to turn off logging.
   * @default "error" ("warn" in dev mode)
   */
  logLevel: a.oneOf(["debug", "error", "info", "warn", !1]),
  /**
   * Nonce of the inline styles for [Content Security Policy](https://www.w3.org/TR/2016/REC-CSP2-20161215/#script-src-the-nonce-attribute).
   */
  nonce: a.string,
  /**
   * Callback fired when any cell is clicked.
   * @param {GridCellParams} params With all properties from [[GridCellParams]].
   * @param {MuiEvent<React.MouseEvent>} event The event object.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onCellClick: a.func,
  /**
   * Callback fired when a double click event comes from a cell element.
   * @param {GridCellParams} params With all properties from [[GridCellParams]].
   * @param {MuiEvent<React.MouseEvent>} event The event object.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onCellDoubleClick: a.func,
  /**
   * Callback fired when the cell turns to edit mode.
   * @param {GridCellParams} params With all properties from [[GridCellParams]].
   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.
   */
  onCellEditStart: a.func,
  /**
   * Callback fired when the cell turns to view mode.
   * @param {GridCellParams} params With all properties from [[GridCellParams]].
   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.
   */
  onCellEditStop: a.func,
  /**
   * Callback fired when a keydown event comes from a cell element.
   * @param {GridCellParams} params With all properties from [[GridCellParams]].
   * @param {MuiEvent<React.KeyboardEvent>} event The event object.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onCellKeyDown: a.func,
  /**
   * Callback fired when the `cellModesModel` prop changes.
   * @param {GridCellModesModel} cellModesModel Object containing which cells are in "edit" mode.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onCellModesModelChange: a.func,
  /**
   * Callback called when the data is copied to the clipboard.
   * @param {string} data The data copied to the clipboard.
   */
  onClipboardCopy: a.func,
  /**
   * Callback fired when a click event comes from a column header element.
   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].
   * @param {MuiEvent<React.MouseEvent>} event The event object.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onColumnHeaderClick: a.func,
  /**
   * Callback fired when a contextmenu event comes from a column header element.
   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].
   * @param {MuiEvent<React.MouseEvent>} event The event object.
   */
  onColumnHeaderContextMenu: a.func,
  /**
   * Callback fired when a double click event comes from a column header element.
   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].
   * @param {MuiEvent<React.MouseEvent>} event The event object.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onColumnHeaderDoubleClick: a.func,
  /**
   * Callback fired when a mouse enter event comes from a column header element.
   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].
   * @param {MuiEvent<React.MouseEvent>} event The event object.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onColumnHeaderEnter: a.func,
  /**
   * Callback fired when a mouse leave event comes from a column header element.
   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].
   * @param {MuiEvent<React.MouseEvent>} event The event object.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onColumnHeaderLeave: a.func,
  /**
   * Callback fired when a mouseout event comes from a column header element.
   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].
   * @param {MuiEvent<React.MouseEvent>} event The event object.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onColumnHeaderOut: a.func,
  /**
   * Callback fired when a mouseover event comes from a column header element.
   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].
   * @param {MuiEvent<React.MouseEvent>} event The event object.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onColumnHeaderOver: a.func,
  /**
   * Callback fired when a column is reordered.
   * @param {GridColumnOrderChangeParams} params With all properties from [[GridColumnOrderChangeParams]].
   * @param {MuiEvent<{}>} event The event object.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onColumnOrderChange: a.func,
  /**
   * Callback fired while a column is being resized.
   * @param {GridColumnResizeParams} params With all properties from [[GridColumnResizeParams]].
   * @param {MuiEvent<React.MouseEvent>} event The event object.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onColumnResize: a.func,
  /**
   * Callback fired when the column visibility model changes.
   * @param {GridColumnVisibilityModel} model The new model.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onColumnVisibilityModelChange: a.func,
  /**
   * Callback fired when the width of a column is changed.
   * @param {GridColumnResizeParams} params With all properties from [[GridColumnResizeParams]].
   * @param {MuiEvent<React.MouseEvent>} event The event object.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onColumnWidthChange: a.func,
  /**
   * Callback fired when the density changes.
   * @param {GridDensity} density New density value.
   */
  onDensityChange: a.func,
  /**
   * Callback fired when the Filter model changes before the filters are applied.
   * @param {GridFilterModel} model With all properties from [[GridFilterModel]].
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onFilterModelChange: a.func,
  /**
   * Callback fired when the menu is closed.
   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].
   * @param {MuiEvent<{}>} event The event object.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onMenuClose: a.func,
  /**
   * Callback fired when the menu is opened.
   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].
   * @param {MuiEvent<{}>} event The event object.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onMenuOpen: a.func,
  /**
   * Callback fired when the pagination meta has changed.
   * @param {GridPaginationMeta} paginationMeta Updated pagination meta.
   */
  onPaginationMetaChange: a.func,
  /**
   * Callback fired when the pagination model has changed.
   * @param {GridPaginationModel} model Updated pagination model.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onPaginationModelChange: a.func,
  /**
   * Callback fired when the preferences panel is closed.
   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].
   * @param {MuiEvent<{}>} event The event object.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onPreferencePanelClose: a.func,
  /**
   * Callback fired when the preferences panel is opened.
   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].
   * @param {MuiEvent<{}>} event The event object.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onPreferencePanelOpen: a.func,
  /**
   * Callback called when `processRowUpdate` throws an error or rejects.
   * @param {any} error The error thrown.
   */
  onProcessRowUpdateError: a.func,
  /**
   * Callback fired when the Data Grid is resized.
   * @param {ElementSize} containerSize With all properties from [[ElementSize]].
   * @param {MuiEvent<{}>} event The event object.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onResize: a.func,
  /**
   * Callback fired when a row is clicked.
   * Not called if the target clicked is an interactive element added by the built-in columns.
   * @param {GridRowParams} params With all properties from [[GridRowParams]].
   * @param {MuiEvent<React.MouseEvent>} event The event object.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onRowClick: a.func,
  /**
   * Callback fired when the row count has changed.
   * @param {number} count Updated row count.
   */
  onRowCountChange: a.func,
  /**
   * Callback fired when a double click event comes from a row container element.
   * @param {GridRowParams} params With all properties from [[RowParams]].
   * @param {MuiEvent<React.MouseEvent>} event The event object.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onRowDoubleClick: a.func,
  /**
   * Callback fired when the row turns to edit mode.
   * @param {GridRowParams} params With all properties from [[GridRowParams]].
   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.
   */
  onRowEditStart: a.func,
  /**
   * Callback fired when the row turns to view mode.
   * @param {GridRowParams} params With all properties from [[GridRowParams]].
   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.
   */
  onRowEditStop: a.func,
  /**
   * Callback fired when the `rowModesModel` prop changes.
   * @param {GridRowModesModel} rowModesModel Object containing which rows are in "edit" mode.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onRowModesModelChange: a.func,
  /**
   * Callback fired when the selection state of one or multiple rows changes.
   * @param {GridRowSelectionModel} rowSelectionModel With all the row ids [[GridSelectionModel]].
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onRowSelectionModelChange: a.func,
  /**
   * Callback fired when the sort model changes before a column is sorted.
   * @param {GridSortModel} model With all properties from [[GridSortModel]].
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onSortModelChange: a.func,
  /**
   * Callback fired when the state of the Data Grid is updated.
   * @param {GridState} state The new state.
   * @param {MuiEvent<{}>} event The event object.
   * @param {GridCallbackDetails} details Additional details for this callback.
   * @ignore - do not document.
   */
  onStateChange: a.func,
  /**
   * Select the pageSize dynamically using the component UI.
   * @default [25, 50, 100]
   */
  pageSizeOptions: a.arrayOf(a.oneOfType([a.number, a.shape({
    label: a.string.isRequired,
    value: a.number.isRequired
  })]).isRequired),
  pagination: a.oneOf([!0]),
  /**
   * The extra information about the pagination state of the Data Grid.
   * Only applicable with `paginationMode="server"`.
   */
  paginationMeta: a.shape({
    hasNextPage: a.bool
  }),
  /**
   * Pagination can be processed on the server or client-side.
   * Set it to 'client' if you would like to handle the pagination on the client-side.
   * Set it to 'server' if you would like to handle the pagination on the server-side.
   * @default "client"
   */
  paginationMode: a.oneOf(["client", "server"]),
  /**
   * The pagination model of type [[GridPaginationModel]] which refers to current `page` and `pageSize`.
   */
  paginationModel: a.shape({
    page: a.number.isRequired,
    pageSize: a.number.isRequired
  }),
  /**
   * Callback called before updating a row with new values in the row and cell editing.
   * @template R
   * @param {R} newRow Row object with the new values.
   * @param {R} oldRow Row object with the old values.
   * @param {{ rowId: GridRowId }} params Additional parameters.
   * @returns {Promise<R> | R} The final values to update the row.
   */
  processRowUpdate: a.func,
  /**
   * If `true`, the page is set to 0 after each sorting or filtering.
   * This prop will be removed in the next major version and resetting the page will become the default behavior.
   * @default false
   */
  resetPageOnSortFilter: a.bool,
  /**
   * The milliseconds throttle delay for resizing the grid.
   * @default 60
   */
  resizeThrottleMs: a.number,
  /**
   * Row region in pixels to render before/after the viewport
   * @default 150
   */
  rowBufferPx: a.number,
  /**
   * Set the total number of rows, if it is different from the length of the value `rows` prop.
   * If some rows have children (for instance in the tree data), this number represents the amount of top level rows.
   * Only works with `paginationMode="server"`, ignored when `paginationMode="client"`.
   */
  rowCount: a.number,
  /**
   * Sets the height in pixel of a row in the Data Grid.
   * @default 52
   */
  rowHeight: a.number,
  /**
   * Controls the modes of the rows.
   */
  rowModesModel: a.object,
  /**
   * The milliseconds delay to wait after measuring the row height before recalculating row positions.
   * Setting it to a lower value could be useful when using dynamic row height,
   * but might reduce performance when displaying a large number of rows.
   * @default 166
   * @deprecated
   */
  rowPositionsDebounceMs: a.number,
  /**
   * Set of rows of type [[GridRowsProp]].
   * @default []
   */
  rows: a.arrayOf(a.object),
  /**
   * If `false`, the row selection mode is disabled.
   * @default true
   */
  rowSelection: a.bool,
  /**
   * Sets the row selection model of the Data Grid.
   */
  rowSelectionModel: a.oneOfType([a.arrayOf(a.oneOfType([a.number, a.string]).isRequired), a.number, a.string]),
  /**
   * Sets the type of space between rows added by `getRowSpacing`.
   * @default "margin"
   */
  rowSpacingType: a.oneOf(["border", "margin"]),
  /**
   * Override the height/width of the Data Grid inner scrollbar.
   */
  scrollbarSize: a.number,
  /**
   * If `true`, vertical borders will be displayed between cells.
   * @default false
   */
  showCellVerticalBorder: a.bool,
  /**
   * If `true`, vertical borders will be displayed between column header items.
   * @default false
   */
  showColumnVerticalBorder: a.bool,
  /**
   * Overridable components props dynamically passed to the component at rendering.
   */
  slotProps: a.object,
  /**
   * Overridable components.
   */
  slots: a.object,
  /**
   * Sorting can be processed on the server or client-side.
   * Set it to 'client' if you would like to handle sorting on the client-side.
   * Set it to 'server' if you would like to handle sorting on the server-side.
   * @default "client"
   */
  sortingMode: a.oneOf(["client", "server"]),
  /**
   * The order of the sorting sequence.
   * @default ['asc', 'desc', null]
   */
  sortingOrder: a.arrayOf(a.oneOf(["asc", "desc"])),
  /**
   * Set the sort model of the Data Grid.
   */
  sortModel: a.arrayOf(a.shape({
    field: a.string.isRequired,
    sort: a.oneOf(["asc", "desc"])
  })),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * If `true`, the Data Grid will auto span the cells over the rows having the same value.
   * @default false
   */
  unstable_rowSpanning: a.bool,
  /**
   * If `true`, the Data Grid enables column virtualization when `getRowHeight` is set to `() => 'auto'`.
   * By default, column virtualization is disabled when dynamic row height is enabled to measure the row height correctly.
   * For datasets with a large number of columns, this can cause performance issues.
   * The downside of enabling this prop is that the row height will be estimated based the cells that are currently rendered, which can cause row height change when scrolling horizontally.
   * @default false
   */
  virtualizeColumnsWithAutoRowHeight: a.bool
};
const Uue = () => {
  const { result: e } = F2(), [t, n] = Cr.useState("fused"), i = Cr.useMemo(() => ((e == null ? void 0 : e[t]) || []).map((d, p) => ({ id: p, ...d })), [e, t]), s = Cr.useMemo(() => {
    const u = i == null ? void 0 : i[0];
    return u ? Object.keys(u).filter((d) => d !== "id").map((d) => ({ field: d, headerName: d, flex: 1 })) : [];
  }, [i]);
  return /* @__PURE__ */ A.jsxs(bs, { sx: { p: 2, height: "80vh" }, children: [
    /* @__PURE__ */ A.jsxs(f2, { value: t, onChange: (u, d) => n(d), sx: { mb: 1 }, children: [
      /* @__PURE__ */ A.jsx(f0, { label: "Fused", value: "fused" }),
      /* @__PURE__ */ A.jsx(f0, { label: "A Enriched", value: "a_enriched" }),
      /* @__PURE__ */ A.jsx(f0, { label: "B Enriched", value: "b_enriched" })
    ] }),
    /* @__PURE__ */ A.jsx("div", { style: { height: "calc(100% - 48px)" }, children: /* @__PURE__ */ A.jsx(Bue, { rows: i, columns: s, density: "compact", disableRowSelectionOnClick: !0, pagination: !0, autoPageSize: !0 }) })
  ] });
}, Gue = new I3(), Wue = ({ runtimeConfig: e }) => {
  var n, i, s, u, d, p, m;
  const t = Cr.useMemo(() => SE({ palette: { mode: "light" } }), []);
  return /* @__PURE__ */ A.jsxs(S8, { theme: t, children: [
    /* @__PURE__ */ A.jsx(jj, {}),
    /* @__PURE__ */ A.jsx(dee, { defaultLang: (e == null ? void 0 : e.lang) ?? ((n = window.__DATAFUSION_CONFIG__) == null ? void 0 : n.defaultLang) ?? "en", children: /* @__PURE__ */ A.jsx(N3, { client: Gue, children: /* @__PURE__ */ A.jsx(mee, { runtime: {
      apiBase: (e == null ? void 0 : e.apiBase) ?? ((i = window.__DATAFUSION_CONFIG__) == null ? void 0 : i.apiBase),
      authEnabled: (e == null ? void 0 : e.authEnabled) ?? ((s = window.__DATAFUSION_CONFIG__) == null ? void 0 : s.authEnabled),
      jwtToken: (e == null ? void 0 : e.jwtToken) ?? ((u = window.__DATAFUSION_CONFIG__) == null ? void 0 : u.jwtToken),
      lang: (e == null ? void 0 : e.lang) ?? ((d = window.__DATAFUSION_CONFIG__) == null ? void 0 : d.defaultLang) ?? "en",
      maxUploadMb: (e == null ? void 0 : e.maxUploadMb) ?? ((p = window.__DATAFUSION_CONFIG__) == null ? void 0 : p.maxUploadMb) ?? 20,
      persistenceEnabled: (e == null ? void 0 : e.persistenceEnabled) ?? ((m = window.__DATAFUSION_CONFIG__) == null ? void 0 : m.persistenceEnabled)
    }, children: /* @__PURE__ */ A.jsx(XJ, { children: /* @__PURE__ */ A.jsx(pee, { children: /* @__PURE__ */ A.jsxs(FJ, { children: [
      /* @__PURE__ */ A.jsx(bg, { path: "/", element: /* @__PURE__ */ A.jsx(gee, {}) }),
      /* @__PURE__ */ A.jsx(bg, { path: "/overlap", element: /* @__PURE__ */ A.jsx(vee, {}) }),
      /* @__PURE__ */ A.jsx(bg, { path: "/targets", element: /* @__PURE__ */ A.jsx(yee, {}) }),
      /* @__PURE__ */ A.jsx(bg, { path: "/settings", element: /* @__PURE__ */ A.jsx(bee, {}) }),
      /* @__PURE__ */ A.jsx(bg, { path: "/results", element: /* @__PURE__ */ A.jsx(Uue, {}) })
    ] }) }) }) }) }) })
  ] });
};
class que extends HTMLElement {
  constructor() {
    super(...arguments);
    ku(this, "root");
  }
  static get observedAttributes() {
    return ["api-base", "auth-enabled", "jwt-token", "lang", "max-upload-mb", "persistence-enabled"];
  }
  connectedCallback() {
    const n = this.attachShadow({ mode: "open" }), i = document.createElement("div");
    n.appendChild(i), this.root = Lb.createRoot(i), this.render();
  }
  attributeChangedCallback() {
    this.render();
  }
  disconnectedCallback() {
    var n;
    (n = this.root) == null || n.unmount();
  }
  readConfig() {
    var i, s, u, d, p, m;
    const n = (v) => this.getAttribute(v);
    return {
      apiBase: n("api-base") ?? ((i = window.__DATAFUSION_CONFIG__) == null ? void 0 : i.apiBase),
      authEnabled: this.hasAttribute("auth-enabled") || ((s = window.__DATAFUSION_CONFIG__) == null ? void 0 : s.authEnabled),
      jwtToken: n("jwt-token") ?? ((u = window.__DATAFUSION_CONFIG__) == null ? void 0 : u.jwtToken),
      lang: n("lang") ?? ((d = window.__DATAFUSION_CONFIG__) == null ? void 0 : d.defaultLang) ?? "en",
      maxUploadMb: Number(n("max-upload-mb") ?? ((p = window.__DATAFUSION_CONFIG__) == null ? void 0 : p.maxUploadMb) ?? 20),
      persistenceEnabled: this.hasAttribute("persistence-enabled") || ((m = window.__DATAFUSION_CONFIG__) == null ? void 0 : m.persistenceEnabled)
    };
  }
  render() {
    var i;
    const n = this.readConfig();
    (i = this.root) == null || i.render(
      /* @__PURE__ */ A.jsx(Cr.StrictMode, { children: /* @__PURE__ */ A.jsx(Wue, { runtimeConfig: n }) })
    );
  }
}
customElements.define("datafusion-app", que);
